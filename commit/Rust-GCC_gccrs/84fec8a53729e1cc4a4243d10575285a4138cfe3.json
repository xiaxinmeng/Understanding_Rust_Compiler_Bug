{"sha": "84fec8a53729e1cc4a4243d10575285a4138cfe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmZWM4YTUzNzI5ZTFjYzRhNDI0M2QxMDU3NTI4NWE0MTM4Y2ZlMw==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2009-08-22T12:43:24Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2009-08-22T12:43:24Z"}, "message": "LIBTOOLFLAGS, and *_LINK fixes for Automake 1.11\n\nboehm-gc/:\n\t* Makefile.am (LTCOMPILE, LTLINK): Add $(AM_LIBTOOLFLAGS)\n\tand $(LIBTOOLFLAGS).\n\t* Makefile.in: Regenerate.\n\nlibgfortran/:\n\t* Makefile.am (libgfortran_la_LINK): Add $(libgfortran_la_LDFLAGS).\n\t* Makefile.in: Regenerate.\n\nlibjava/:\n\t* Makefile.am (libgcj_la_LINK, libgcj_tools_la_LINK)\n\t(lib_gnu_awt_xlib_la_LINK, libgcj_bc_la_LINK, jv_convert_LINK)\n\t(gcj_dbtool_LINK, gc_analyze_LINK, gij_LINK, ecjx_LINK)\n\t(gappletviewer_LINK, gjarsigner_LINK, gkeytool_LINK)\n\t(gjar_LINK, gjavah_LINK, gcjh_LINK, gnative2ascii_LINK)\n\t(gorbd_LINK, grmid_LINK, gserialver_LINK, gtnameserv_LINK)\n\t(grmic_LINK, grmiregistry_LINK, gjdoc_LINK): Add $(gjdoc_LDFLAGS).\n\t(GCJLINK, LIBLINK, CXXLINK): Add $(LIBTOOLFLAGS).\n\t* Makefile.in: Regenerate.\n\nlibstdc++-v3/:\n\t* libsupc++/Makefile.am (LTCOMPILE, LTCXXCOMPILE, CXXLINK): Add\n\t$(LIBTOOLFLAGS).\n\t* libsupc++/Makefile.in: Regenerate.\n\t* src/Makefile.am (LTCXXCOMPILE, CXXLINK): Add $(AM_LIBTOOLFLAGS)\n\tand $(LIBTOOLFLAGS).\n\t* src/Makefile.in: Regenerate.\n\nlibgomp/:\n\t* Makefile.am (LINK): Add $(AM_LIBTOOLFLAGS) and $(LIBTOOLFLAGS).\n\t* Makefile.in: Regenerate.\n\nlibobjc/:\n\t* Makefile.in (LIBTOOL): Add $(LIBTOOLFLAGS).\n\nFrom-SVN: r151013", "tree": {"sha": "dbca9c0b63a0a6b0fbfe0697e6a57ec3e8e27604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbca9c0b63a0a6b0fbfe0697e6a57ec3e8e27604"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84fec8a53729e1cc4a4243d10575285a4138cfe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fec8a53729e1cc4a4243d10575285a4138cfe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84fec8a53729e1cc4a4243d10575285a4138cfe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fec8a53729e1cc4a4243d10575285a4138cfe3/comments", "author": null, "committer": null, "parents": [{"sha": "0539cb2c6f944ae4434f4033a12d42eabebf543d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0539cb2c6f944ae4434f4033a12d42eabebf543d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0539cb2c6f944ae4434f4033a12d42eabebf543d"}], "stats": {"total": 225, "additions": 138, "deletions": 87}, "files": [{"sha": "b49dc31b366bf4f629da0d0ab8ffa6e735199d2d", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -1,3 +1,9 @@\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (LTCOMPILE, LTLINK): Add $(AM_LIBTOOLFLAGS)\n+\tand $(LIBTOOLFLAGS).\n+\t* Makefile.in: Regenerate.\n+\n 2009-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure.ac (_AC_ARG_VAR_PRECIOUS): Use m4_rename_force."}, {"sha": "83005b2e8034c0d1b55ddc02cba8c9e21dea0bf0", "filename": "boehm-gc/Makefile.am", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/boehm-gc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/boehm-gc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.am?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -64,10 +64,12 @@ TESTS = gctest\n \n ## We have our own definition of LTCOMPILE because we want to use our\n ## CFLAGS, not those passed in from the top level make.\n-LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n+LTCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile \\\n+\t$(CC) $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n \t$(AM_CFLAGS) $(MY_CFLAGS) $(GC_CFLAGS) \n LTLDFLAGS = $(shell $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-LINK = $(LIBTOOL) --mode=link $(CC) $(AM_CFLAGS) $(MY_CFLAGS) $(LTLDFLAGS) -o $@\n+LINK = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n+\t$(CC) $(AM_CFLAGS) $(MY_CFLAGS) $(LTLDFLAGS) -o $@\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "e143e6e1fa46425edffb590eb7173bae92231301", "filename": "boehm-gc/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/boehm-gc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/boehm-gc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.in?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -314,11 +314,14 @@ gctest_LDADD = ./libgcjgc.la $(THREADLIBS) $(UNWINDLIBS) $(EXTRA_TEST_LIBS)\n gctest_LDFLAGS = -shared-libgcc\n TESTS_ENVIRONMENT = LD_LIBRARY_PATH=../../$(MULTIBUILDTOP)gcc\n TESTS = gctest\n-LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n+LTCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile \\\n+\t$(CC) $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n \t$(AM_CFLAGS) $(MY_CFLAGS) $(GC_CFLAGS) \n \n LTLDFLAGS = $(shell $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-LINK = $(LIBTOOL) --mode=link $(CC) $(AM_CFLAGS) $(MY_CFLAGS) $(LTLDFLAGS) -o $@\n+LINK = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n+\t$(CC) $(AM_CFLAGS) $(MY_CFLAGS) $(LTLDFLAGS) -o $@\n+\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "1a5597b08a9b1450c08ffff96e407d0db7f8d9d3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -1,3 +1,8 @@\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (libgfortran_la_LINK): Add $(libgfortran_la_LDFLAGS).\n+\t* Makefile.in: Regenerate.\n+\n 2009-08-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/40962"}, {"sha": "7127d665dd58e718f0627797f84ba2b726ebdfb4", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -17,7 +17,7 @@ LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS)) \\\n \t    -no-undefined -bindir \"$(bindir)\"\n \n toolexeclib_LTLIBRARIES = libgfortran.la\n-libgfortran_la_LINK = $(LINK)\n+libgfortran_la_LINK = $(LINK) $(libgfortran_la_LDFLAGS)\n libgfortran_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS) -lm $(extra_ldflags_libgfortran) $(version_arg)\n \n myexeclib_LTLIBRARIES = libgfortranbegin.la"}, {"sha": "4bdb406deb90bd060563f737e27174b3f9b3d3b1", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -961,7 +961,7 @@ LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS)) \\\n \t    -no-undefined -bindir \"$(bindir)\"\n \n toolexeclib_LTLIBRARIES = libgfortran.la\n-libgfortran_la_LINK = $(LINK)\n+libgfortran_la_LINK = $(LINK) $(libgfortran_la_LDFLAGS)\n libgfortran_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS) -lm $(extra_ldflags_libgfortran) $(version_arg)\n myexeclib_LTLIBRARIES = libgfortranbegin.la\n myexeclibdir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)"}, {"sha": "0c47fdc6df5f4ab701939f7faa3315fdd3caae06", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -1,3 +1,8 @@\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (LINK): Add $(AM_LIBTOOLFLAGS) and $(LIBTOOLFLAGS).\n+\t* Makefile.in: Regenerate.\n+\n 2009-08-20  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* Makefile.am (libgomp_la_LDFLAGS): Add -bindir flag."}, {"sha": "2ef2f7ec93b81e5f1162ea458261b45c03b95036", "filename": "libgomp/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgomp%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgomp%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.am?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -43,8 +43,8 @@ endif\n \n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n-LINK = $(LIBTOOL) --tag CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n+LINK = $(LIBTOOL) --tag CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n+\t$(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n \n omp_lib_kinds.mod: omp_lib.mod\n \t:"}, {"sha": "d484d50619146be729bafdd6b98ce956f2adcf18", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -316,8 +316,8 @@ nodist_noinst_HEADERS = libgomp_f.h\n nodist_libsubinclude_HEADERS = omp.h\n @USE_FORTRAN_TRUE@nodist_finclude_HEADERS = omp_lib.h omp_lib.f90 omp_lib.mod omp_lib_kinds.mod\n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-LINK = $(LIBTOOL) --tag CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n-\t$(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n+LINK = $(LIBTOOL) --tag CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n+\t$(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n \n \n # Automake Documentation:"}, {"sha": "5ef480eafe6231cf5b71d2ba7600db1450b8dd8f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -1,3 +1,15 @@\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (libgcj_la_LINK, libgcj_tools_la_LINK)\n+\t(lib_gnu_awt_xlib_la_LINK, libgcj_bc_la_LINK, jv_convert_LINK)\n+\t(gcj_dbtool_LINK, gc_analyze_LINK, gij_LINK, ecjx_LINK)\n+\t(gappletviewer_LINK, gjarsigner_LINK, gkeytool_LINK)\n+\t(gjar_LINK, gjavah_LINK, gcjh_LINK, gnative2ascii_LINK)\n+\t(gorbd_LINK, grmid_LINK, gserialver_LINK, gtnameserv_LINK)\n+\t(grmic_LINK, grmiregistry_LINK, gjdoc_LINK): Add $(gjdoc_LDFLAGS).\n+\t(GCJLINK, LIBLINK, CXXLINK): Add $(LIBTOOLFLAGS).\n+\t* Makefile.in: Regenerate.\n+\n 2009-08-17  Andrew Haley  <aph@redhat.com>\n \n \t* Makefile.am (libgcj_bc_la_LIBADD): Delete."}, {"sha": "352951afcedefff9a9e23b669d6f98c24d667da9", "filename": "libjava/Makefile.am", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -129,14 +129,14 @@ extra_ldflags_libjava += -Wl,--version-script=$(srcdir)/libgcj.ver\n endif\n \n LTLDFLAGS = $(shell $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n-          $(LTLDFLAGS) -o $@\n+GCJLINK = $(LIBTOOL) --tag=GCJ $(LIBTOOLFLAGS) --mode=link $(GCJ) -L$(here) \\\n+\t  $(JC1FLAGS) $(LTLDFLAGS) -o $@\n GCJ_FOR_ECJX = @GCJ_FOR_ECJX@\n GCJ_FOR_ECJX_LINK = $(GCJ_FOR_ECJX) -o $@\n-LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) \\\n-          $(LTLDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n-CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n-\t$(CXXFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n+LIBLINK = $(LIBTOOL) --tag=CXX $(LIBTOOLFLAGS) --mode=link $(CXX) -L$(here) \\\n+\t  $(JC1FLAGS) $(LTLDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n+CXXLINK = $(LIBTOOL) --tag=CXX $(LIBTOOLFLAGS) --mode=link $(CXXLD) \\\n+\t  $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n \n GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n \n@@ -298,7 +298,7 @@ libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n if ANONVERSCRIPT\n libgcj_la_DEPENDENCIES += $(srcdir)/libgcj.ver\n endif\n-libgcj_la_LINK = $(LIBLINK)\n+libgcj_la_LINK = $(LIBLINK) $(libgcj_la_LDFLAGS)\n \n ## A hack to make sure the various gcj-related macros, like\n ## LTGCJCOMPILE, are defined by automake.  This is never actually\n@@ -318,7 +318,7 @@ libgcj_tools_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n  -version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n  $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec\n-libgcj_tools_la_LINK = $(LIBLINK)\n+libgcj_tools_la_LINK = $(LIBLINK) $(libgcj_tools_la_LDFLAGS)\n \n ## libjvm.so\n libjvm_la_SOURCES = jni-libjvm.cc\n@@ -353,7 +353,7 @@ lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n \t@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n         -rpath $(toolexeclibdir) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n-lib_gnu_awt_xlib_la_LINK = $(LIBLINK)\n+lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n \n ## Support for libgcj_bc: dummy shared library.\n ##\n@@ -363,7 +363,7 @@ libgcj_bc_la_SOURCES = libgcj_bc.c\n libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0 \\\n \t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n libgcj_bc_la_DEPENDENCIES = libgcj.la\n-libgcj_bc_la_LINK = $(LIBLINK)\n+libgcj_bc_la_LINK = $(LIBLINK) $(libgcj_bc_la_LDFLAGS)\n ## This is specific to Linux/{Free,Net,Open}BSD/Hurd and perhaps few others.\n ## USE_LIBGCJ_BC shouldn't be set on other targets.\n libgcj_bc_dummy_LINK = $(CC) -L$(here)/.libs $(CFLAGS) $(LDFLAGS) -shared \\\n@@ -812,7 +812,7 @@ jv_convert_SOURCES =\n ## `.la' file.\n jv_convert_LDFLAGS = --main=gnu.gcj.convert.Convert \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-jv_convert_LINK = $(GCJLINK)\n+jv_convert_LINK = $(GCJLINK) $(jv_convert_LDFLAGS)\n ## We don't explicitly link in the libraries we need; libgcj.la brings\n ## in all dependencies.  We need the -L so that gcj can find libgcj\n ## with `-lgcj', but it must come first, otherwise the -L flags\n@@ -833,7 +833,7 @@ gnu/gcj/tools/gcj_dbtool/natMain.cc\n ## `.la' file.\n gcj_dbtool_LDFLAGS = --main=gnu.gcj.tools.gcj_dbtool.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gcj_dbtool_LINK = $(GCJLINK)\n+gcj_dbtool_LINK = $(GCJLINK) $(gcj_dbtool_LDFLAGS)\n ## We don't explicitly link in the libraries we need; libgcj.la brings\n ## in all dependencies.  We need the -L so that gcj can find libgcj\n ## with `-lgcj', but it must come first, otherwise the -L flags\n@@ -853,7 +853,7 @@ gc_analyze_SOURCES =\n ## `.la' file.\n gc_analyze_LDFLAGS = --main=gnu.gcj.tools.gc_analyze.MemoryAnalyze \\\n         -rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gc_analyze_LINK = $(GCJLINK)\n+gc_analyze_LINK = $(GCJLINK) $(gc_analyze_LDFLAGS)\n ## See jv_convert_LDADD.\n gc_analyze_LDADD = -L$(here)/.libs libgcj-tools.la libgcj.la\n ## Depend on the spec file to make sure it is up to date before\n@@ -867,7 +867,7 @@ gij_SOURCES =\n gij_LDFLAGS = -rpath $(dbexecdir) -rpath $(toolexeclibdir) \\\n \t-shared-libgcc $(THREADLDFLAGS) $(extra_ldflags) \\\n \t$(extra_gij_ldflags) \n-gij_LINK = $(GCJLINK)\n+gij_LINK = $(GCJLINK) $(gij_LDFLAGS)\n ## See jv_convert_LDADD.\n gij_LDADD = -L$(here)/.libs libgij.la\n ## Depend on the spec file to make sure it is up to date before\n@@ -885,7 +885,7 @@ ECJX_BASE_FLAGS = -findirect-dispatch \\\n \n if NATIVE\n \n-ecjx_LINK = $(GCJLINK)\n+ecjx_LINK = $(GCJLINK) $(ecjx_LDFLAGS)\n \n if ENABLE_SHARED\n ## Use ecj.jar at runtime.\n@@ -905,7 +905,7 @@ endif\n \n else !NATIVE\n \n-ecjx_LINK = $(GCJ_FOR_ECJX_LINK)\n+ecjx_LINK = $(GCJ_FOR_ECJX_LINK) $(ecjx_LDFLAGS)\n ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR)\n ecjx_LDADD = \n ecjx_DEPENDENCIES = \n@@ -916,7 +916,7 @@ endif !NATIVE\n gappletviewer_SOURCES =\n gappletviewer_LDFLAGS = --main=gnu.classpath.tools.appletviewer.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gappletviewer_LINK = $(GCJLINK)\n+gappletviewer_LINK = $(GCJLINK) $(gappletviewer_LDFLAGS)\n ## See jv_convert_LDADD.\n gappletviewer_LDADD = -L$(here)/.libs libgcj-tools.la\n gappletviewer_DEPENDENCIES = libgcj-tools.la\n@@ -925,7 +925,7 @@ gappletviewer_DEPENDENCIES = libgcj-tools.la\n gjarsigner_SOURCES =\n gjarsigner_LDFLAGS = --main=gnu.classpath.tools.jarsigner.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gjarsigner_LINK = $(GCJLINK)\n+gjarsigner_LINK = $(GCJLINK) $(gjarsigner_LDFLAGS)\n ## See jv_convert_LDADD.\n gjarsigner_LDADD = -L$(here)/.libs libgcj-tools.la\n gjarsigner_DEPENDENCIES = libgcj-tools.la\n@@ -934,7 +934,7 @@ gjarsigner_DEPENDENCIES = libgcj-tools.la\n gkeytool_SOURCES =\n gkeytool_LDFLAGS = --main=gnu.classpath.tools.keytool.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gkeytool_LINK = $(GCJLINK)\n+gkeytool_LINK = $(GCJLINK) $(gkeytool_LDFLAGS)\n ## See jv_convert_LDADD.\n gkeytool_LDADD = -L$(here)/.libs libgcj-tools.la\n gkeytool_DEPENDENCIES = libgcj-tools.la\n@@ -943,7 +943,7 @@ gkeytool_DEPENDENCIES = libgcj-tools.la\n gjar_SOURCES =\n gjar_LDFLAGS = --main=gnu.classpath.tools.jar.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gjar_LINK = $(GCJLINK)\n+gjar_LINK = $(GCJLINK) $(gjar_LDFLAGS)\n ## See jv_convert_LDADD.\n gjar_LDADD = -L$(here)/.libs libgcj-tools.la\n gjar_DEPENDENCIES = libgcj-tools.la\n@@ -952,7 +952,7 @@ gjar_DEPENDENCIES = libgcj-tools.la\n gjavah_SOURCES =\n gjavah_LDFLAGS = --main=gnu.classpath.tools.javah.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gjavah_LINK = $(GCJLINK)\n+gjavah_LINK = $(GCJLINK) $(gjavah_LDFLAGS)\n ## See jv_convert_LDADD.\n gjavah_LDADD = -L$(here)/.libs libgcj-tools.la\n gjavah_DEPENDENCIES = libgcj-tools.la\n@@ -961,7 +961,7 @@ gjavah_DEPENDENCIES = libgcj-tools.la\n gcjh_SOURCES =\n gcjh_LDFLAGS = --main=gnu.classpath.tools.javah.GcjhMain \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gcjh_LINK = $(GCJLINK)\n+gcjh_LINK = $(GCJLINK) $(gcjh_LDFLAGS)\n ## See jv_convert_LDADD.\n gcjh_LDADD = -L$(here)/.libs libgcj-tools.la\n gcjh_DEPENDENCIES = libgcj-tools.la\n@@ -970,7 +970,7 @@ gcjh_DEPENDENCIES = libgcj-tools.la\n gnative2ascii_SOURCES =\n gnative2ascii_LDFLAGS = --main=gnu.classpath.tools.native2ascii.Native2ASCII \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gnative2ascii_LINK = $(GCJLINK)\n+gnative2ascii_LINK = $(GCJLINK) $(gnative2ascii_LDFLAGS)\n ## See jv_convert_LDADD.\n gnative2ascii_LDADD = -L$(here)/.libs libgcj-tools.la\n gnative2ascii_DEPENDENCIES = libgcj-tools.la\n@@ -979,7 +979,7 @@ gnative2ascii_DEPENDENCIES = libgcj-tools.la\n gorbd_SOURCES =\n gorbd_LDFLAGS = --main=gnu.classpath.tools.orbd.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gorbd_LINK = $(GCJLINK)\n+gorbd_LINK = $(GCJLINK) $(gorbd_LDFLAGS)\n ## See jv_convert_LDADD.\n gorbd_LDADD = -L$(here)/.libs libgcj-tools.la\n gorbd_DEPENDENCIES = libgcj-tools.la\n@@ -988,7 +988,7 @@ gorbd_DEPENDENCIES = libgcj-tools.la\n grmid_SOURCES =\n grmid_LDFLAGS = --main=gnu.classpath.tools.rmid.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-grmid_LINK = $(GCJLINK)\n+grmid_LINK = $(GCJLINK) $(grmid_LDFLAGS)\n ## See jv_convert_LDADD.\n grmid_LDADD = -L$(here)/.libs libgcj-tools.la\n grmid_DEPENDENCIES = libgcj-tools.la\n@@ -997,7 +997,7 @@ grmid_DEPENDENCIES = libgcj-tools.la\n gserialver_SOURCES =\n gserialver_LDFLAGS = --main=gnu.classpath.tools.serialver.SerialVer \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gserialver_LINK = $(GCJLINK)\n+gserialver_LINK = $(GCJLINK) $(gserialver_LDFLAGS)\n ## See jv_convert_LDADD.\n gserialver_LDADD = -L$(here)/.libs libgcj-tools.la\n gserialver_DEPENDENCIES = libgcj-tools.la\n@@ -1006,7 +1006,7 @@ gserialver_DEPENDENCIES = libgcj-tools.la\n gtnameserv_SOURCES =\n gtnameserv_LDFLAGS = --main=gnu.classpath.tools.tnameserv.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gtnameserv_LINK = $(GCJLINK)\n+gtnameserv_LINK = $(GCJLINK) $(gtnameserv_LDFLAGS)\n ## See jv_convert_LDADD.\n gtnameserv_LDADD = -L$(here)/.libs libgcj-tools.la\n gtnameserv_DEPENDENCIES = libgcj-tools.la\n@@ -1015,7 +1015,7 @@ gtnameserv_DEPENDENCIES = libgcj-tools.la\n grmic_SOURCES =\n grmic_LDFLAGS = --main=gnu.classpath.tools.rmic.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-grmic_LINK = $(GCJLINK)\n+grmic_LINK = $(GCJLINK) $(grmic_LDFLAGS)\n ## See jv_convert_LDADD.\n grmic_LDADD = -L$(here)/.libs libgcj-tools.la\n grmic_DEPENDENCIES = libgcj-tools.la\n@@ -1024,7 +1024,7 @@ grmic_DEPENDENCIES = libgcj-tools.la\n grmiregistry_SOURCES =\n grmiregistry_LDFLAGS = --main=gnu.classpath.tools.rmiregistry.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-grmiregistry_LINK = $(GCJLINK)\n+grmiregistry_LINK = $(GCJLINK) $(grmiregistry_LDFLAGS)\n ## See jv_convert_LDADD.\n grmiregistry_LDADD = -L$(here)/.libs libgcj-tools.la\n grmiregistry_DEPENDENCIES = libgcj-tools.la\n@@ -1034,7 +1034,7 @@ gjdoc_SOURCES =\n gjdoc_LDFLAGS = --main=gnu.classpath.tools.gjdoc.Main \\\n \t-Djava.class.path=$(ANTLR_JAR) \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n-gjdoc_LINK = $(GCJLINK)\n+gjdoc_LINK = $(GCJLINK) $(gjdoc_LDFLAGS)\n ## See jv_convert_LDADD.\n gjdoc_LDADD = -L$(here)/.libs libgcj-tools.la\n gjdoc_DEPENDENCIES = libgcj-tools.la"}, {"sha": "b032458d34d44491eadc49d31fb1467a7f5d1613", "filename": "libjava/Makefile.in", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -938,15 +938,15 @@ bin_SCRIPTS = contrib/rebuild-gcj-db contrib/aot-compile \\\n \t$(am__append_7)\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n LTLDFLAGS = $(shell $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n-          $(LTLDFLAGS) -o $@\n+GCJLINK = $(LIBTOOL) --tag=GCJ $(LIBTOOLFLAGS) --mode=link $(GCJ) -L$(here) \\\n+\t  $(JC1FLAGS) $(LTLDFLAGS) -o $@\n \n GCJ_FOR_ECJX_LINK = $(GCJ_FOR_ECJX) -o $@\n-LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) \\\n-          $(LTLDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n+LIBLINK = $(LIBTOOL) --tag=CXX $(LIBTOOLFLAGS) --mode=link $(CXX) -L$(here) \\\n+\t  $(JC1FLAGS) $(LTLDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n \n-CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n-\t$(CXXFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag=CXX $(LIBTOOLFLAGS) --mode=link $(CXXLD) \\\n+\t  $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n \n WARNINGS = -Wextra -Wall\n AM_CXXFLAGS = \\\n@@ -1031,7 +1031,7 @@ libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar java/lang/Object.lo \\\n \tjava/lang/Class.lo java/process-$(PLATFORM).lo \\\n \t$(all_packages_source_files:.list=.lo) $(LIBLTDL) \\\n \t$(libgcj_la_LIBADD) $(am__append_18)\n-libgcj_la_LINK = $(LIBLINK)\n+libgcj_la_LINK = $(LIBLINK) $(libgcj_la_LDFLAGS)\n EXTRA_libgcj_la_SOURCES = java/lang/Object.java\n \n # We compile libgcj_tools with -findirect-dispatch so that they can\n@@ -1049,7 +1049,7 @@ libgcj_tools_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n  $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n \n libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec\n-libgcj_tools_la_LINK = $(LIBLINK)\n+libgcj_tools_la_LINK = $(LIBLINK) $(libgcj_tools_la_LDFLAGS)\n libjvm_la_SOURCES = jni-libjvm.cc\n libjvm_la_DEPENDENCIES = libgcj.la libgcj.spec\n libjvm_la_LIBADD = -L$(here)/.libs libgcj.la\n@@ -1071,13 +1071,13 @@ lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n         -rpath $(toolexeclibdir) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n-lib_gnu_awt_xlib_la_LINK = $(LIBLINK)\n+lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n libgcj_bc_la_SOURCES = libgcj_bc.c\n libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0 \\\n \t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n \n libgcj_bc_la_DEPENDENCIES = libgcj.la\n-libgcj_bc_la_LINK = $(LIBLINK)\n+libgcj_bc_la_LINK = $(LIBLINK) $(libgcj_bc_la_LDFLAGS)\n libgcj_bc_dummy_LINK = $(CC) -L$(here)/.libs $(CFLAGS) $(LDFLAGS) -shared \\\n \t-fPIC -nostdlib\n \n@@ -8335,7 +8335,7 @@ jv_convert_SOURCES =\n jv_convert_LDFLAGS = --main=gnu.gcj.convert.Convert \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-jv_convert_LINK = $(GCJLINK)\n+jv_convert_LINK = $(GCJLINK) $(jv_convert_LDFLAGS)\n jv_convert_LDADD = -L$(here)/.libs libgcj.la\n jv_convert_DEPENDENCIES = libgcj.la libgcj.spec\n gcj_dbtool_SOURCES = \\\n@@ -8344,30 +8344,30 @@ gnu/gcj/tools/gcj_dbtool/natMain.cc\n gcj_dbtool_LDFLAGS = --main=gnu.gcj.tools.gcj_dbtool.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gcj_dbtool_LINK = $(GCJLINK)\n+gcj_dbtool_LINK = $(GCJLINK) $(gcj_dbtool_LDFLAGS)\n gcj_dbtool_LDADD = gnu/gcj/tools/gcj_dbtool.lo -L$(here)/.libs libgcj.la\n gcj_dbtool_DEPENDENCIES = gnu/gcj/tools/gcj_dbtool.lo libgcj.la libgcj.spec\n gc_analyze_SOURCES = \n gc_analyze_LDFLAGS = --main=gnu.gcj.tools.gc_analyze.MemoryAnalyze \\\n         -rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gc_analyze_LINK = $(GCJLINK)\n+gc_analyze_LINK = $(GCJLINK) $(gc_analyze_LDFLAGS)\n gc_analyze_LDADD = -L$(here)/.libs libgcj-tools.la libgcj.la\n gc_analyze_DEPENDENCIES = libgcj-tools.la libgcj.la libgcj.spec\n gij_SOURCES = \n gij_LDFLAGS = -rpath $(dbexecdir) -rpath $(toolexeclibdir) \\\n \t-shared-libgcc $(THREADLDFLAGS) $(extra_ldflags) \\\n \t$(extra_gij_ldflags) \n \n-gij_LINK = $(GCJLINK)\n+gij_LINK = $(GCJLINK) $(gij_LDFLAGS)\n gij_LDADD = -L$(here)/.libs libgij.la\n gij_DEPENDENCIES = libgij.la\n ecjx_SOURCES = ecjx.cc\n ECJX_BASE_FLAGS = -findirect-dispatch \\\n \t--main=org.eclipse.jdt.internal.compiler.batch.GCCMain\n \n-@NATIVE_FALSE@ecjx_LINK = $(GCJ_FOR_ECJX_LINK)\n-@NATIVE_TRUE@ecjx_LINK = $(GCJLINK)\n+@NATIVE_FALSE@ecjx_LINK = $(GCJ_FOR_ECJX_LINK) $(ecjx_LDFLAGS)\n+@NATIVE_TRUE@ecjx_LINK = $(GCJLINK) $(ecjx_LDFLAGS)\n @ENABLE_SHARED_FALSE@@NATIVE_TRUE@ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR) -fbootclasspath=$(BOOTCLASSPATH)\n @ENABLE_SHARED_TRUE@@NATIVE_TRUE@ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) -Djava.class.path=$(ECJ_JAR)\n @NATIVE_FALSE@ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR)\n@@ -8381,99 +8381,99 @@ gappletviewer_SOURCES =\n gappletviewer_LDFLAGS = --main=gnu.classpath.tools.appletviewer.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gappletviewer_LINK = $(GCJLINK)\n+gappletviewer_LINK = $(GCJLINK) $(gappletviewer_LDFLAGS)\n gappletviewer_LDADD = -L$(here)/.libs libgcj-tools.la\n gappletviewer_DEPENDENCIES = libgcj-tools.la\n gjarsigner_SOURCES = \n gjarsigner_LDFLAGS = --main=gnu.classpath.tools.jarsigner.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gjarsigner_LINK = $(GCJLINK)\n+gjarsigner_LINK = $(GCJLINK) $(gjarsigner_LDFLAGS)\n gjarsigner_LDADD = -L$(here)/.libs libgcj-tools.la\n gjarsigner_DEPENDENCIES = libgcj-tools.la\n gkeytool_SOURCES = \n gkeytool_LDFLAGS = --main=gnu.classpath.tools.keytool.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gkeytool_LINK = $(GCJLINK)\n+gkeytool_LINK = $(GCJLINK) $(gkeytool_LDFLAGS)\n gkeytool_LDADD = -L$(here)/.libs libgcj-tools.la\n gkeytool_DEPENDENCIES = libgcj-tools.la\n gjar_SOURCES = \n gjar_LDFLAGS = --main=gnu.classpath.tools.jar.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gjar_LINK = $(GCJLINK)\n+gjar_LINK = $(GCJLINK) $(gjar_LDFLAGS)\n gjar_LDADD = -L$(here)/.libs libgcj-tools.la\n gjar_DEPENDENCIES = libgcj-tools.la\n gjavah_SOURCES = \n gjavah_LDFLAGS = --main=gnu.classpath.tools.javah.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gjavah_LINK = $(GCJLINK)\n+gjavah_LINK = $(GCJLINK) $(gjavah_LDFLAGS)\n gjavah_LDADD = -L$(here)/.libs libgcj-tools.la\n gjavah_DEPENDENCIES = libgcj-tools.la\n gcjh_SOURCES = \n gcjh_LDFLAGS = --main=gnu.classpath.tools.javah.GcjhMain \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gcjh_LINK = $(GCJLINK)\n+gcjh_LINK = $(GCJLINK) $(gcjh_LDFLAGS)\n gcjh_LDADD = -L$(here)/.libs libgcj-tools.la\n gcjh_DEPENDENCIES = libgcj-tools.la\n gnative2ascii_SOURCES = \n gnative2ascii_LDFLAGS = --main=gnu.classpath.tools.native2ascii.Native2ASCII \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gnative2ascii_LINK = $(GCJLINK)\n+gnative2ascii_LINK = $(GCJLINK) $(gnative2ascii_LDFLAGS)\n gnative2ascii_LDADD = -L$(here)/.libs libgcj-tools.la\n gnative2ascii_DEPENDENCIES = libgcj-tools.la\n gorbd_SOURCES = \n gorbd_LDFLAGS = --main=gnu.classpath.tools.orbd.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gorbd_LINK = $(GCJLINK)\n+gorbd_LINK = $(GCJLINK) $(gorbd_LDFLAGS)\n gorbd_LDADD = -L$(here)/.libs libgcj-tools.la\n gorbd_DEPENDENCIES = libgcj-tools.la\n grmid_SOURCES = \n grmid_LDFLAGS = --main=gnu.classpath.tools.rmid.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-grmid_LINK = $(GCJLINK)\n+grmid_LINK = $(GCJLINK) $(grmid_LDFLAGS)\n grmid_LDADD = -L$(here)/.libs libgcj-tools.la\n grmid_DEPENDENCIES = libgcj-tools.la\n gserialver_SOURCES = \n gserialver_LDFLAGS = --main=gnu.classpath.tools.serialver.SerialVer \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gserialver_LINK = $(GCJLINK)\n+gserialver_LINK = $(GCJLINK) $(gserialver_LDFLAGS)\n gserialver_LDADD = -L$(here)/.libs libgcj-tools.la\n gserialver_DEPENDENCIES = libgcj-tools.la\n gtnameserv_SOURCES = \n gtnameserv_LDFLAGS = --main=gnu.classpath.tools.tnameserv.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gtnameserv_LINK = $(GCJLINK)\n+gtnameserv_LINK = $(GCJLINK) $(gtnameserv_LDFLAGS)\n gtnameserv_LDADD = -L$(here)/.libs libgcj-tools.la\n gtnameserv_DEPENDENCIES = libgcj-tools.la\n grmic_SOURCES = \n grmic_LDFLAGS = --main=gnu.classpath.tools.rmic.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-grmic_LINK = $(GCJLINK)\n+grmic_LINK = $(GCJLINK) $(grmic_LDFLAGS)\n grmic_LDADD = -L$(here)/.libs libgcj-tools.la\n grmic_DEPENDENCIES = libgcj-tools.la\n grmiregistry_SOURCES = \n grmiregistry_LDFLAGS = --main=gnu.classpath.tools.rmiregistry.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-grmiregistry_LINK = $(GCJLINK)\n+grmiregistry_LINK = $(GCJLINK) $(grmiregistry_LDFLAGS)\n grmiregistry_LDADD = -L$(here)/.libs libgcj-tools.la\n grmiregistry_DEPENDENCIES = libgcj-tools.la\n gjdoc_SOURCES = \n gjdoc_LDFLAGS = --main=gnu.classpath.tools.gjdoc.Main \\\n \t-Djava.class.path=$(ANTLR_JAR) \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n-gjdoc_LINK = $(GCJLINK)\n+gjdoc_LINK = $(GCJLINK) $(gjdoc_LDFLAGS)\n gjdoc_LDADD = -L$(here)/.libs libgcj-tools.la\n gjdoc_DEPENDENCIES = libgcj-tools.la\n @INTERPRETER_FALSE@nat_jdwp_source_files = "}, {"sha": "ebc602e957a82028a3d6e7e1841189aa9dbfd7c9", "filename": "libjava/classpath/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -31047,6 +31047,9 @@ ac_configure_args=\"${multilib_arg} ${ac_configure_args}\"\n multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"\n+CXX=\"$CXX\"\n+GFORTRAN=\"$GFORTRAN\"\n+GCJ=\"$GCJ\"\n AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n "}, {"sha": "0a6b9b2398c4c81187c5b309ee863c549744ebeb", "filename": "libjava/configure", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -20951,6 +20951,8 @@ if test \"$use_libgcj_bc\" = yes; then\n   LIBGCJ_BC_SPEC=\"%{findirect-dispatch:-fPIC}\"\n fi\n \n+\n+\n HASH_SYNC_SPEC=\n # Hash synchronization is only useful with posix threads right now.\n if test \"$enable_hash_synchronization\" = yes && test \"$THREADS\" != \"none\"; then"}, {"sha": "73671dd2bbbb60afb20970cbf1cbf7998246e1c9", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -1,3 +1,7 @@\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.in (LIBTOOL): Add $(LIBTOOLFLAGS).\n+\n 2009-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in (AUTOCONF, ACLOCAL, ACLOCAL_AMFLAGS, aclocal_deps):"}, {"sha": "788dfb5accaa5f1548d186d2e3b46afed9ec1535", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -85,7 +85,7 @@ ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) $(CFLAGS) $(WARN_CFLAGS) \\\n # numbers.\n LIBOBJC_VERSION = @VERSION@\n LIBOBJC_GC_VERSION = @VERSION@\n-LIBTOOL = @LIBTOOL@\n+LIBTOOL = @LIBTOOL@ $(LIBTOOLFLAGS)\n LIBTOOL_COMPILE = $(LIBTOOL) --mode=compile\n LIBTOOL_LINK    = $(LIBTOOL) --mode=link \n LIBTOOL_INSTALL = $(LIBTOOL) --mode=install"}, {"sha": "db90cc9f22f2a2185b26c8a0deafc5291fb2affe", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -1,3 +1,12 @@\n+2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* libsupc++/Makefile.am (LTCOMPILE, LTCXXCOMPILE, CXXLINK): Add\n+\t$(LIBTOOLFLAGS).\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* src/Makefile.am (LTCXXCOMPILE, CXXLINK): Add $(AM_LIBTOOLFLAGS)\n+\tand $(LIBTOOLFLAGS).\n+\t* src/Makefile.in: Regenerate.\n+\n 2009-08-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/30_threads/packaged_task/requirements/typedefs.cc: Add"}, {"sha": "d012da9f5352f70f5d7ea245cc0a318803352479", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -116,8 +116,8 @@ C_COMPILE = \\\n \t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n \n # LTCOMPILE is copied from LTCXXCOMPILE below.\n-LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared --mode=compile $(CC) \\\n-\t    $(DEFS) $(C_INCLUDES) $(LIBSUPCXX_PICFLAGS) \\\n+LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared --mode=compile $(LIBTOOLFLAGS) \\\n+\t    $(CC) $(DEFS) $(C_INCLUDES) $(LIBSUPCXX_PICFLAGS) \\\n             $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n \n cp-demangle.c:\n@@ -150,7 +150,7 @@ cp-demangle.o: cp-demangle.c\n #\n # We have to put --tag disable-shared after --tag CXX lest things\n # CXX undo the affect of disable-shared.\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n \t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n \n@@ -162,7 +162,7 @@ LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n \t  --mode=link $(CXX) \\\n \t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n "}, {"sha": "aca6187490fd8271ffce402b2c9359cd673fbc06", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -448,8 +448,8 @@ C_COMPILE = \\\n \n \n # LTCOMPILE is copied from LTCXXCOMPILE below.\n-LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared --mode=compile $(CC) \\\n-\t    $(DEFS) $(C_INCLUDES) $(LIBSUPCXX_PICFLAGS) \\\n+LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared --mode=compile $(LIBTOOLFLAGS) \\\n+\t    $(CC) $(DEFS) $(C_INCLUDES) $(LIBSUPCXX_PICFLAGS) \\\n             $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n \n \n@@ -474,7 +474,7 @@ LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared --mode=compile $(CC) \\\n #\n # We have to put --tag disable-shared after --tag CXX lest things\n # CXX undo the affect of disable-shared.\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n \t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n \n@@ -486,7 +486,7 @@ LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n \t  --mode=link $(CXX) \\\n \t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n "}, {"sha": "bc562b44bbcfb4521578a9364f5e17dc7086e19d", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -342,8 +342,8 @@ AM_CXXFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile \\\n+\t       $(CXX) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n \n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n@@ -353,8 +353,8 @@ LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n-\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n+\t  $(CXX) $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n \n \n # Added bits to build debug library."}, {"sha": "6c4b16a16f5adf16cf38c9044b04c268101c4162", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fec8a53729e1cc4a4243d10575285a4138cfe3/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=84fec8a53729e1cc4a4243d10575285a4138cfe3", "patch": "@@ -496,8 +496,8 @@ AM_CXXFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile \\\n+\t       $(CXX) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n \n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n@@ -507,8 +507,8 @@ LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n-\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n+\t  $(CXX) $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n \n debugdir = debug\n all: all-am"}]}