{"sha": "ea20e8be960c53892f3fda4248b77616e7cf1444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyMGU4YmU5NjBjNTM4OTJmM2ZkYTQyNDhiNzc2MTZlN2NmMTQ0NA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-06-10T08:20:50Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-06-10T08:20:50Z"}, "message": "re PR fortran/85088 (improve diagnostic for bad INTENT declaration ('Invalid character in name at'))\n\n2018-06-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/85088\n\t* decl.c (match_attr_spec): Synchronize the DECL_* enum values with the\n\tINTENT_* values from the enum 'sym_intent'. Call 'match_intent_spec'\n\tand remove a TODO note.\n\t* gfortran.h: Add a comment to sym_intent.\n\n\n2018-06-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/85088\n\t* gfortran.dg/intent_decl_1.f90: New test case.\n\nFrom-SVN: r261386", "tree": {"sha": "1070506fea961cca0fcb3dff25e39985cc681c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1070506fea961cca0fcb3dff25e39985cc681c96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea20e8be960c53892f3fda4248b77616e7cf1444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea20e8be960c53892f3fda4248b77616e7cf1444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea20e8be960c53892f3fda4248b77616e7cf1444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea20e8be960c53892f3fda4248b77616e7cf1444/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a579cbe0781a62146c4ddf430ae0e40c3f75f0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a579cbe0781a62146c4ddf430ae0e40c3f75f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a579cbe0781a62146c4ddf430ae0e40c3f75f0f"}], "stats": {"total": 51, "additions": 40, "deletions": 11}, "files": [{"sha": "3b22db13b146ce1d950c827ff5a182c08e19d35b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ea20e8be960c53892f3fda4248b77616e7cf1444", "patch": "@@ -1,3 +1,11 @@\n+2018-06-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/85088\n+\t* decl.c (match_attr_spec): Synchronize the DECL_* enum values with the\n+\tINTENT_* values from the enum 'sym_intent'. Call 'match_intent_spec'\n+\tand remove a TODO note.\n+\t* gfortran.h: Add a comment to sym_intent.\n+\n 2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n  \n \tPR fortran/38351"}, {"sha": "707c2a74bbb0cd01244655b2d39c996095209070", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=ea20e8be960c53892f3fda4248b77616e7cf1444", "patch": "@@ -4726,9 +4726,10 @@ match_attr_spec (void)\n {\n   /* Modifiers that can exist in a type statement.  */\n   enum\n-  { GFC_DECL_BEGIN = 0,\n-    DECL_ALLOCATABLE = GFC_DECL_BEGIN, DECL_DIMENSION, DECL_EXTERNAL,\n-    DECL_IN, DECL_OUT, DECL_INOUT, DECL_INTRINSIC, DECL_OPTIONAL,\n+  { GFC_DECL_BEGIN = 0, DECL_ALLOCATABLE = GFC_DECL_BEGIN,\n+    DECL_IN = INTENT_IN, DECL_OUT = INTENT_OUT, DECL_INOUT = INTENT_INOUT,\n+    DECL_DIMENSION, DECL_EXTERNAL,\n+    DECL_INTRINSIC, DECL_OPTIONAL,\n     DECL_PARAMETER, DECL_POINTER, DECL_PROTECTED, DECL_PRIVATE,\n     DECL_STATIC, DECL_AUTOMATIC,\n     DECL_PUBLIC, DECL_SAVE, DECL_TARGET, DECL_VALUE, DECL_VOLATILE,\n@@ -4739,6 +4740,9 @@ match_attr_spec (void)\n /* GFC_DECL_END is the sentinel, index starts at 0.  */\n #define NUM_DECL GFC_DECL_END\n \n+  /* Make sure that values from sym_intent are safe to be used here.  */\n+  gcc_assert (INTENT_IN > 0);\n+\n   locus start, seen_at[NUM_DECL];\n   int seen[NUM_DECL];\n   unsigned int d;\n@@ -4856,13 +4860,12 @@ match_attr_spec (void)\n \t\t      if (match_string_p (\"nt\"))\n \t\t\t{\n \t\t\t  /* Matched \"intent\".  */\n-\t\t\t  /* TODO: Call match_intent_spec from here.  */\n-\t\t\t  if (gfc_match (\" ( in out )\") == MATCH_YES)\n-\t\t\t    d = DECL_INOUT;\n-\t\t\t  else if (gfc_match (\" ( in )\") == MATCH_YES)\n-\t\t\t    d = DECL_IN;\n-\t\t\t  else if (gfc_match (\" ( out )\") == MATCH_YES)\n-\t\t\t    d = DECL_OUT;\n+\t\t\t  d = match_intent_spec ();\n+\t\t\t  if (d == INTENT_UNKNOWN)\n+\t\t\t    {\n+\t\t\t      m = MATCH_ERROR;\n+\t\t\t      goto cleanup;\n+\t\t\t    }\n \t\t\t}\n \t\t    }\n \t\t  else if (ch == 'r')"}, {"sha": "113ed3c1e633d476f525337bbac40bfc2f7e149c", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=ea20e8be960c53892f3fda4248b77616e7cf1444", "patch": "@@ -291,7 +291,8 @@ enum procedure_type\n   PROC_INTRINSIC, PROC_ST_FUNCTION, PROC_EXTERNAL\n };\n \n-/* Intent types.  */\n+/* Intent types. Note that these values are also used in another enum in\n+   decl.c (match_attr_spec).  */\n enum sym_intent\n { INTENT_UNKNOWN = 0, INTENT_IN, INTENT_OUT, INTENT_INOUT\n };"}, {"sha": "8693372a3cf4db48f9cb460cae43f997f16e7560", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea20e8be960c53892f3fda4248b77616e7cf1444", "patch": "@@ -1,3 +1,9 @@\n+\n+2018-06-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/85088\n+\t* gfortran.dg/intent_decl_1.f90: New test case.\n+\n 2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* gfortran.dg/ieee/ieee_4.f90: xfail on i?86-*-freebsd*"}, {"sha": "af848b8f755567b2320e8a29c25517bd47d6943a", "filename": "gcc/testsuite/gfortran.dg/intent_decl_1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ftestsuite%2Fgfortran.dg%2Fintent_decl_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea20e8be960c53892f3fda4248b77616e7cf1444/gcc%2Ftestsuite%2Fgfortran.dg%2Fintent_decl_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintent_decl_1.f90?ref=ea20e8be960c53892f3fda4248b77616e7cf1444", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+!\n+! PR 85088: improve diagnostic for bad INTENT declaration\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+subroutine s(x, y, z)\n+   integer, intent(int) :: x  ! { dg-error \"Bad INTENT specification\" }\n+   integer, intent :: y       ! { dg-error \"Bad INTENT specification\" }\n+   integer, inten  :: z       ! { dg-error \"Invalid character\" }\n+end"}]}