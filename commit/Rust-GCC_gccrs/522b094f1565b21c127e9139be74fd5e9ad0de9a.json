{"sha": "522b094f1565b21c127e9139be74fd5e9ad0de9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyYjA5NGYxNTY1YjIxYzEyN2U5MTM5YmU3NGZkNWU5YWQwZGU5YQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-11-21T16:28:29Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-11-21T16:28:29Z"}, "message": "[AArch64] Implement vsqrt_f64 intrinsic\n\n\t* config/aarch64/arm_neon.h (vsqrt_f64): New intrinsic.\n\n\t* gcc.target/aarch64/simd/vsqrt_f64_1.c\n\nFrom-SVN: r217936", "tree": {"sha": "debc49a860ed971971a30d4d3206c1840c802915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/debc49a860ed971971a30d4d3206c1840c802915"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/522b094f1565b21c127e9139be74fd5e9ad0de9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522b094f1565b21c127e9139be74fd5e9ad0de9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522b094f1565b21c127e9139be74fd5e9ad0de9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522b094f1565b21c127e9139be74fd5e9ad0de9a/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "c3ef16bce9cd389d290819b0d614d8b8be0795d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=522b094f1565b21c127e9139be74fd5e9ad0de9a", "patch": "@@ -1,3 +1,7 @@\n+2014-11-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vsqrt_f64): New intrinsic.\n+\n 2014-11-21  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_PCOMMIT_UNSET,"}, {"sha": "8cff7195a106c4f7c26f74f3bd17c977058faf4a", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=522b094f1565b21c127e9139be74fd5e9ad0de9a", "patch": "@@ -22512,6 +22512,12 @@ vsqrtq_f32 (float32x4_t a)\n   return __builtin_aarch64_sqrtv4sf (a);\n }\n \n+__extension__ static __inline float64x1_t __attribute__ ((__always_inline__))\n+vsqrt_f64 (float64x1_t a)\n+{\n+  return (float64x1_t) { __builtin_sqrt (a[0]) };\n+}\n+\n __extension__ static __inline float64x2_t __attribute__ ((__always_inline__))\n vsqrtq_f64 (float64x2_t a)\n {"}, {"sha": "17f711076081f199975991568075874d5d78391f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=522b094f1565b21c127e9139be74fd5e9ad0de9a", "patch": "@@ -1,3 +1,7 @@\n+2014-11-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/simd/vsqrt_f64_1.c\n+\n 2014-11-21  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* g++.dg/other/i386-2.C: Add -mpcommit."}, {"sha": "57fb6bb48ebdd8699ed1a7acc888ea971ed67340", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vsqrt_f64_1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvsqrt_f64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522b094f1565b21c127e9139be74fd5e9ad0de9a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvsqrt_f64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvsqrt_f64_1.c?ref=522b094f1565b21c127e9139be74fd5e9ad0de9a", "patch": "@@ -0,0 +1,25 @@\n+/* Test the vsqrt_f64 AArch64 SIMD intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-save-temps -O3\" } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort (void);\n+\n+\n+int\n+main (void)\n+{\n+  float64x1_t in = vcreate_f64(0x3febd3e560634d7bULL);\n+  float64x1_t result = vsqrt_f64 (in);\n+  float64_t expected = 0.9325321502142351;\n+\n+  if (result[0] != expected)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler \"fsqrt\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}]}