{"sha": "883fff6cf718997c2892be3f4b5177459b04c00f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgzZmZmNmNmNzE4OTk3YzI4OTJiZTNmNGI1MTc3NDU5YjA0YzAwZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-10-26T15:02:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-10-26T15:02:54Z"}, "message": "* tree.c (stabilize_expr): Handle xvalues properly.\n\nFrom-SVN: r165969", "tree": {"sha": "f3fb94088828b65bdc028441b244282b784c67fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3fb94088828b65bdc028441b244282b784c67fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/883fff6cf718997c2892be3f4b5177459b04c00f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883fff6cf718997c2892be3f4b5177459b04c00f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883fff6cf718997c2892be3f4b5177459b04c00f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883fff6cf718997c2892be3f4b5177459b04c00f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dfa30b4c89ba3533ba68b3a9767b062716dc879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dfa30b4c89ba3533ba68b3a9767b062716dc879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dfa30b4c89ba3533ba68b3a9767b062716dc879"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "e4e6446ed520f843e44af5462f3bc8ff11c67b16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883fff6cf718997c2892be3f4b5177459b04c00f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883fff6cf718997c2892be3f4b5177459b04c00f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=883fff6cf718997c2892be3f4b5177459b04c00f", "patch": "@@ -1,5 +1,7 @@\n 2010-10-26  Jason Merrill  <jason@redhat.com>\n \n+\t* tree.c (stabilize_expr): Handle xvalues properly.\n+\n \t* call.c (build_over_call): Use argarray[0] for 'this' argument.\n \n \t* decl.c (finish_function): Don't look at function_depth."}, {"sha": "18ed554fc9893da60aabd0e5a059b837bb994f3b", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883fff6cf718997c2892be3f4b5177459b04c00f/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883fff6cf718997c2892be3f4b5177459b04c00f/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=883fff6cf718997c2892be3f4b5177459b04c00f", "patch": "@@ -3018,18 +3018,23 @@ stabilize_expr (tree exp, tree* initp)\n \n   if (!TREE_SIDE_EFFECTS (exp))\n     init_expr = NULL_TREE;\n-  else if (!real_lvalue_p (exp)\n-\t   || !TYPE_NEEDS_CONSTRUCTING (TREE_TYPE (exp)))\n+  /* There are no expressions with REFERENCE_TYPE, but there can be call\n+     arguments with such a type; just treat it as a pointer.  */\n+  else if (TREE_CODE (TREE_TYPE (exp)) == REFERENCE_TYPE\n+\t   || !lvalue_or_rvalue_with_address_p (exp))\n     {\n       init_expr = get_target_expr (exp);\n       exp = TARGET_EXPR_SLOT (init_expr);\n     }\n   else\n     {\n+      bool xval = !real_lvalue_p (exp);\n       exp = cp_build_addr_expr (exp, tf_warning_or_error);\n       init_expr = get_target_expr (exp);\n       exp = TARGET_EXPR_SLOT (init_expr);\n       exp = cp_build_indirect_ref (exp, RO_NULL, tf_warning_or_error);\n+      if (xval)\n+\texp = move (exp);\n     }\n   *initp = init_expr;\n "}]}