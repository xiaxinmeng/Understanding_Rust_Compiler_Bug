{"sha": "e4ae5e771755c397e05b87b8126293ca76a250bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRhZTVlNzcxNzU1YzM5N2UwNWI4N2I4MTI2MjkzY2E3NmEyNTBiYw==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2009-04-27T20:23:51Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2009-04-27T20:23:51Z"}, "message": "c-tree.texi (Types, [...]): Fix grammar nits.\n\ngcc/\n\t* doc/c-tree.texi (Types, Functions, Expression trees): Fix\n\tgrammar nits.\n\t* doc/cfg.texi (Maintaining the CFG, Liveness information):\n\tLikewise.\n\t* doc/cpp.texi (Standard Predefined Macros)\n\t(Implementation-defined behavior): Likewise.\n\t* doc/extend.texi (Function Attributes, Type Attributes):\n\tLikewise.\n\t* doc/gimple.texi (GIMPLE Exception Handling)\n\t(@code{GIMPLE_ASSIGN}): Likewise.\n\t* doc/install.texi (Prerequisites, Configuration, Specific):\n\tLikewise.\n\t* doc/invoke.texi (Warning Options, Optimize Options)\n\t(AVR Options, Darwin Options): Likewise.\n\t(Optimize Options): Reformulate -fwhole-program description.\n\t* doc/loop.texi (Lambda): Likewise.\n\t* doc/md.texi (Output Template, Define Constraints)\n\t(Standard Names, Insn Splitting): Likewise.\n\t* doc/options.texi (Option properties): Likewise.\n\t* doc/passes.texi (Tree-SSA passes): Likewise.\n\t* doc/rtl.texi (Side Effects, Assembler, Insns): Likewise.\n\t* doc/tm.texi (Register Classes, Old Constraints, Scalar Return)\n\t(File Names and DBX): Likewise.\n\t* doc/trouble.texi (Incompatibilities): Likewise.\n\nFrom-SVN: r146854", "tree": {"sha": "0d3dd5a9312ac0368cad41f9684a3e8d61786619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d3dd5a9312ac0368cad41f9684a3e8d61786619"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4ae5e771755c397e05b87b8126293ca76a250bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ae5e771755c397e05b87b8126293ca76a250bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ae5e771755c397e05b87b8126293ca76a250bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ae5e771755c397e05b87b8126293ca76a250bc/comments", "author": null, "committer": null, "parents": [{"sha": "5175f17c8355a2f2c26abe5cc0f334b454f5c053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5175f17c8355a2f2c26abe5cc0f334b454f5c053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5175f17c8355a2f2c26abe5cc0f334b454f5c053"}], "stats": {"total": 117, "additions": 72, "deletions": 45}, "files": [{"sha": "e1078a28c0cf48487f3738ac32173fd1276151cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -1,3 +1,30 @@\n+2009-04-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/c-tree.texi (Types, Functions, Expression trees): Fix\n+\tgrammar nits.\n+\t* doc/cfg.texi (Maintaining the CFG, Liveness information):\n+\tLikewise.\n+\t* doc/cpp.texi (Standard Predefined Macros)\n+\t(Implementation-defined behavior): Likewise.\n+\t* doc/extend.texi (Function Attributes, Type Attributes):\n+\tLikewise.\n+\t* doc/gimple.texi (GIMPLE Exception Handling)\n+\t(@code{GIMPLE_ASSIGN}): Likewise.\n+\t* doc/install.texi (Prerequisites, Configuration, Specific):\n+\tLikewise.\n+\t* doc/invoke.texi (Warning Options, Optimize Options)\n+\t(AVR Options, Darwin Options): Likewise.\n+\t(Optimize Options): Reformulate -fwhole-program description.\n+\t* doc/loop.texi (Lambda): Likewise.\n+\t* doc/md.texi (Output Template, Define Constraints)\n+\t(Standard Names, Insn Splitting): Likewise.\n+\t* doc/options.texi (Option properties): Likewise.\n+\t* doc/passes.texi (Tree-SSA passes): Likewise.\n+\t* doc/rtl.texi (Side Effects, Assembler, Insns): Likewise.\n+\t* doc/tm.texi (Register Classes, Old Constraints, Scalar Return)\n+\t(File Names and DBX): Likewise.\n+\t* doc/trouble.texi (Incompatibilities): Likewise.\n+\n 2009-04-27  Trevor Smigiel <trevor_smigiel@playstation.sony.com>\n \n \t* spu.c (spu_machine_dependent_reorg): Make sure branch label on hint"}, {"sha": "117b700ec08f4c1606c2dd73f810ecc1ef246591", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -373,7 +373,7 @@ The alignment of the type, in bits, represented as an @code{int}.\n \n @item TYPE_NAME\n This macro returns a declaration (in the form of a @code{TYPE_DECL}) for\n-the type.  (Note this macro does @emph{not} return a\n+the type.  (Note this macro does @emph{not} return an\n @code{IDENTIFIER_NODE}, as you might expect, given its name!)  You can\n look at the @code{DECL_NAME} of the @code{TYPE_DECL} to obtain the\n actual name of the type.  The @code{TYPE_NAME} will be @code{NULL_TREE}\n@@ -1256,7 +1256,7 @@ structures, something like the following should be used\n @findex OVL_NEXT\n \n A function is represented by a @code{FUNCTION_DECL} node.  A set of\n-overloaded functions is sometimes represented by a @code{OVERLOAD} node.\n+overloaded functions is sometimes represented by an @code{OVERLOAD} node.\n \n An @code{OVERLOAD} node is not a declaration, so none of the\n @samp{DECL_} macros should be used on an @code{OVERLOAD}.  An\n@@ -2113,9 +2113,9 @@ comparisons, and so forth.\n \n These nodes represent fixed-point constants.  The type of these constants\n is obtained with @code{TREE_TYPE}.  @code{TREE_FIXED_CST_PTR} points to\n-to struct fixed_value;  @code{TREE_FIXED_CST} returns the structure itself.\n-Struct fixed_value contains @code{data} with the size of two\n-HOST_BITS_PER_WIDE_INT and @code{mode} as the associated fixed-point\n+a @code{struct fixed_value};  @code{TREE_FIXED_CST} returns the structure\n+itself.  @code{struct fixed_value} contains @code{data} with the size of two\n+@code{HOST_BITS_PER_WIDE_INT} and @code{mode} as the associated fixed-point\n machine mode for @code{data}.\n \n @item COMPLEX_CST\n@@ -2569,7 +2569,7 @@ The statement-expression extension allows code like this:\n @smallexample\n int f() @{ return (@{ int j; j = 3; j + 7; @}); @}\n @end smallexample\n-In other words, an sequence of statements may occur where a single\n+In other words, a sequence of statements may occur where a single\n expression would normally appear.  The @code{STMT_EXPR} node represents\n such an expression.  The @code{STMT_EXPR_STMT} gives the statement\n contained in the expression.  The value of the expression is the value"}, {"sha": "660c09c81ce09f9e51bea8efde0e34265c2cf2ae", "filename": "gcc/doc/cfg.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fcfg.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fcfg.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcfg.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -608,7 +608,7 @@ includes the creation of new basic blocks where needed.  In the\n iterator on an edge, and @code{bsi_commit_edge_inserts} which flushes\n the instruction to actual instruction stream.\n \n-While debugging the optimization pass, an @code{verify_flow_info}\n+While debugging the optimization pass, a @code{verify_flow_info}\n function may be useful to find bugs in the control flow graph updating\n code.\n \n@@ -638,7 +638,7 @@ used on some path from @code{P} to the end of the function.  With\n beginning of the function to @code{P} that defines the variable.  \n @code{LIVE} is the intersection of the @code{LR} and @code{UR} and a\n variable is live at @code{P} if there is both an assignment that reaches\n-it from the beginning of the function and a uses that can be reached on\n+it from the beginning of the function and a use that can be reached on\n some path from @code{P} to the end of the function.\n \n In general @code{LIVE} is the most useful of the three.  The macros"}, {"sha": "ce4c0c3ff5deea8b894ad6291e3fefabe2db5732", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -1936,7 +1936,7 @@ in the near future.\n @item __OBJC__\n This macro is defined, with value 1, when the Objective-C compiler is in\n use.  You can use @code{__OBJC__} to test whether a header is compiled\n-by a C compiler or a Objective-C compiler.\n+by a C compiler or an Objective-C compiler.\n \n @item __ASSEMBLER__\n This macro is defined with value 1 when preprocessing assembly\n@@ -4042,7 +4042,7 @@ The preprocessor and compiler interpret character constants in the\n same way; i.e.@: escape sequences such as @samp{\\a} are given the\n values they would have on the target machine.\n \n-The compiler values a multi-character character constant a character\n+The compiler evaluates a multi-character character constant a character\n at a time, shifting the previous value left by the number of bits per\n target character, and then or-ing in the bit-pattern of the new\n character truncated to the width of a target character.  The final"}, {"sha": "4e06be3daca79fca6a52b98c49753385971b737e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -2153,7 +2153,7 @@ On the SH Symbian OS target the @code{dllimport} attribute also has\n another affect---it can cause the vtable and run-time type information\n for a class to be exported.  This happens when the class has a\n dllimport'ed constructor or a non-inline, non-pure virtual function\n-and, for either of those two conditions, the class also has a inline\n+and, for either of those two conditions, the class also has an inline\n constructor or destructor and has a key function that is defined in\n the current translation unit.\n \n@@ -4422,7 +4422,7 @@ struct __attribute__ ((__packed__)) my_packed_struct\n   @};\n @end smallexample\n \n-You may only specify this attribute on the definition of a @code{enum},\n+You may only specify this attribute on the definition of an @code{enum},\n @code{struct} or @code{union}, not on a @code{typedef} which does not\n also define the enumerated type, structure or union.\n "}, {"sha": "cc1e8903fdbaac681be629c43919d38640755c5d", "filename": "gcc/doc/gimple.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fgimple.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fgimple.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgimple.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -389,7 +389,7 @@ types, the associated handler code is executed.  If the handler\n code falls off the bottom, execution continues after the original\n @code{GIMPLE_TRY_CATCH}.\n \n-@item An @code{GIMPLE_EH_FILTER} statement.  This has a list of\n+@item A @code{GIMPLE_EH_FILTER} statement.  This has a list of\n permitted exception types, and code to handle a match failure.  If the\n thrown exception does not match one of the allowed types, the\n associated match failure code is executed.  If the thrown exception\n@@ -1087,7 +1087,7 @@ statement @code{G}.\n @end deftypefn\n  \n @deftypefn {GIMPLE function} bool gimple_assign_cast_p (gimple s)\n-Return true if @code{S} is an type-cast assignment.\n+Return true if @code{S} is a type-cast assignment.\n @end deftypefn\n \n "}, {"sha": "40d81362a3daa83007fbf772caa2d7b174d505f8", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -464,7 +464,7 @@ the GCC-specific entry point.  You can download a suitable jar from\n @itemx antlr binary\n \n If you wish to build the @command{gjdoc} binary in libjava, you will\n-need to have a @file{antlr.jar} library available. The library is\n+need to have an @file{antlr.jar} library available. The library is\n searched in system locations but can be configured with\n @option{--with-antlr-jar=} instead.  When configuring with\n @option{--enable-java-maintainer-mode}, you will need to have one of\n@@ -1605,7 +1605,7 @@ that will be used while building GCC itself.  This option can be useful\n if the directory layouts are different between the system you are building\n GCC on, and the system where you will deploy it.\n \n-For example, on a @option{ia64-hp-hpux} system, you may have the GNU\n+For example, on an @samp{ia64-hp-hpux} system, you may have the GNU\n assembler and linker in @file{/usr/bin}, and the native tools in a\n different path, and build a toolchain that expects to find the\n native tools in @file{/usr/bin}.\n@@ -3389,7 +3389,7 @@ The native AIX tools do interoperate with GCC@.\n Building @file{libstdc++.a} requires a fix for an AIX Assembler bug\n APAR IY26685 (AIX 4.3) or APAR IY25528 (AIX 5.1).  It also requires a\n fix for another AIX Assembler bug and a co-dependent AIX Archiver fix\n-referenced as APAR IY53606 (AIX 5.2) or a APAR IY54774 (AIX 5.1)\n+referenced as APAR IY53606 (AIX 5.2) or as APAR IY54774 (AIX 5.1)\n \n @samp{libstdc++} in GCC 3.4 increments the major version number of the\n shared object and GCC installation places the @file{libstdc++.a}\n@@ -3944,7 +3944,7 @@ compiler.  This is Sun bug 4974440.  This is fixed with patch 112760-07.\n GCC 3.4 changed the default debugging format from STABS to DWARF-2 for\n 32-bit code on Solaris 7 and later.  If you use the Sun assembler, this\n change apparently runs afoul of Sun bug 4910101 (which is referenced as\n-a x86-only problem by Sun, probably because they do not use DWARF-2).\n+an x86-only problem by Sun, probably because they do not use DWARF-2).\n A symptom of the problem is that you cannot compile C++ programs like\n @command{groff} 1.19.1 without getting messages similar to the following:\n "}, {"sha": "ebf7fcee7362a48c2dd444db7037b7229d48db5e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -3152,7 +3152,7 @@ Warn whenever a function is defined with a return-type that defaults\n to @code{int}.  Also warn about any @code{return} statement with no\n return-value in a function whose return-type is not @code{void}\n (falling off the end of the function body is considered returning\n-without a value), and about a @code{return} statement with a\n+without a value), and about a @code{return} statement with an\n expression in a function whose return-type is @code{void}.\n \n For C++, a function without return type always produces a diagnostic\n@@ -6211,8 +6211,8 @@ This flag is enabled by default at @option{-O3}.\n @item -fipa-matrix-reorg\n @opindex fipa-matrix-reorg\n Perform matrix flattening and transposing.\n-Matrix flattening tries to replace a m-dimensional matrix \n-with its equivalent n-dimensional matrix, where n < m.\n+Matrix flattening tries to replace an @math{m}-dimensional matrix\n+with its equivalent @math{n}-dimensional matrix, where @math{n < m}.\n This reduces the level of indirection needed for accessing the elements\n of the matrix. The second optimization is matrix transposing that\n attempts to change the order of the matrix's dimensions in order to\n@@ -6776,13 +6776,13 @@ Enabled by default with @option{-funroll-loops}.\n \n @item -fwhole-program\n @opindex fwhole-program\n-Assume that the current compilation unit represents whole program being\n+Assume that the current compilation unit represents the whole program being\n compiled.  All public functions and variables with the exception of @code{main}\n and those merged by attribute @code{externally_visible} become static functions\n-and in a affect gets more aggressively optimized by interprocedural optimizers.\n-While this option is equivalent to proper use of @code{static} keyword for\n-programs consisting of single file, in combination with option\n-@option{--combine} this flag can be used to compile most of smaller scale C\n+and in effect are optimized more aggressively by interprocedural optimizers.\n+While this option is equivalent to proper use of the @code{static} keyword for\n+programs consisting of a single file, in combination with option\n+@option{--combine} this flag can be used to compile many smaller scale C\n programs since the functions and variables become local for the whole combined\n compilation unit, not for the single source file itself.\n \n@@ -9366,7 +9366,7 @@ Change only the low 8 bits of the stack pointer.\n @item -mint8\n @opindex mint8\n Assume int to be 8 bit integer.  This affects the sizes of all types: A\n-char will be 1 byte, an int will be 1 byte, an long will be 2 bytes\n+char will be 1 byte, an int will be 1 byte, a long will be 2 bytes\n and long long will be 4 bytes.  Please note that this option does not\n comply to the C standards, but it will provide you with smaller code\n size.\n@@ -9737,7 +9737,7 @@ that GCC is targetting, like @option{-mcpu} or @option{-march}.  The\n The Darwin tools vary in their behavior when presented with an ISA\n mismatch.  The assembler, @file{as}, will only permit instructions to\n be used that are valid for the subtype of the file it is generating,\n-so you cannot put 64-bit instructions in an @samp{ppc750} object file.\n+so you cannot put 64-bit instructions in a @samp{ppc750} object file.\n The linker for shared libraries, @file{/usr/bin/libtool}, will fail\n and print an error if asked to create a shared library with a less\n restrictive subtype than its input files (for instance, trying to put"}, {"sha": "356c00d02b139dccf8d2ffaefa9334c1d85b6a2a", "filename": "gcc/doc/loop.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Floop.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Floop.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Floop.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -605,7 +605,7 @@ improve cache behavior or remove inner loop dependencies to allow\n parallelization and vectorization to take place.\n \n To perform these transformations, Lambda requires that the loopnest be\n-converted into a internal form that can be matrix transformed easily.\n+converted into an internal form that can be matrix transformed easily.\n To do this conversion, the function\n @code{gcc_loopnest_to_lambda_loopnest} is provided.  If the loop cannot\n be transformed using lambda, this function will return NULL."}, {"sha": "7c4da3192c5bdf5cf58a8b835d34f48bead5a2e8", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -552,7 +552,7 @@ As a special case, a template consisting of the single character @code{#}\n instructs the compiler to first split the insn, and then output the\n resulting instructions separately.  This helps eliminate redundancy in the\n output templates.   If you have a @code{define_insn} that needs to emit\n-multiple assembler instructions, and there is an matching @code{define_split}\n+multiple assembler instructions, and there is a matching @code{define_split}\n already defined, then you can simply use @code{#} as the output template\n instead of writing an output template that emits the multiple assembler\n instructions.\n@@ -3323,7 +3323,7 @@ memory address of this type.  If @samp{Q} is defined with\n @code{define_memory_constraint}, a @samp{Q} constraint can handle any\n memory operand, because @code{reload} knows it can simply copy the\n memory address into a base register if required.  This is analogous to\n-the way a @samp{o} constraint can handle any memory operand.\n+the way an @samp{o} constraint can handle any memory operand.\n \n The syntax and semantics are otherwise identical to\n @code{define_constraint}.\n@@ -4729,7 +4729,7 @@ A label that precedes the table itself.\n A label to jump to if the index has a value outside the bounds.\n @end enumerate\n \n-The table is a @code{addr_vec} or @code{addr_diff_vec} inside of a\n+The table is an @code{addr_vec} or @code{addr_diff_vec} inside of a\n @code{jump_insn}.  The number of elements in the table is one plus the\n difference between the upper bound and the lower bound.\n \n@@ -4949,7 +4949,7 @@ the first three are normally used by the generic mechanism.\n \n @cindex @code{builtin_setjmp_receiver} instruction pattern\n @item @samp{builtin_setjmp_receiver}\n-This pattern, if defined, contains code needed at the site of an\n+This pattern, if defined, contains code needed at the site of a\n built-in setjmp that isn't needed at the site of a nonlocal goto.  You\n will not normally need to define this pattern.  A typical reason why you\n might need this pattern is if some value, such as a pointer to a global\n@@ -6116,7 +6116,7 @@ more assistance is needed.  Splitter is required to create only unconditional\n jumps, or simple conditional jump instructions.  Additionally it must attach a\n @code{REG_BR_PROB} note to each conditional jump.  A global variable\n @code{split_branch_probability} holds the probability of the original branch in case\n-it was an simple conditional jump, @minus{}1 otherwise.  To simplify\n+it was a simple conditional jump, @minus{}1 otherwise.  To simplify\n recomputing of edge frequencies, the new sequence is required to have only\n forward jumps to the newly created labels.\n "}, {"sha": "53ad66bb7f672cadc0e65de4e4b155365ab44634", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -106,7 +106,7 @@ The option does not have a ``no-'' form.  All options beginning with\n property is used.\n \n @item Negative(@var{othername})\n-The option will turn off another option @var{othername}, which is the\n+The option will turn off another option @var{othername}, which is\n the option name with the leading ``-'' removed.  This chain action will\n propagate through the @code{Negative} property of the option to be\n turned off."}, {"sha": "3dcee398dd536267a82e1d13d942d74f3752a8e9", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -297,7 +297,7 @@ times throughout the optimization process.  It is located in\n \n This pass performs trivial dominator-based copy and constant propagation,\n expression simplification, and jump threading.  It is run multiple times\n-throughout the optimization process.  It it located in @file{tree-ssa-dom.c}\n+throughout the optimization process.  It is located in @file{tree-ssa-dom.c}\n and is described by @code{pass_dominator}.\n \n @item Forward propagation of single-use variables"}, {"sha": "2567f10f4b0b9a44f07b90de538f0d916652bb3c", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -2950,7 +2950,7 @@ store a value in @var{x}.  @var{x} must be a @code{reg} expression.\n In some situations, it may be tempting to add a @code{use} of a\n register in a @code{parallel} to describe a situation where the value\n of a special register will modify the behavior of the instruction.\n-An hypothetical example might be a pattern for an addition that can\n+A hypothetical example might be a pattern for an addition that can\n either wrap around or use saturating addition depending on the value\n of a special control register:\n \n@@ -3256,7 +3256,7 @@ mode @var{m1} is the mode of the sum @code{x+y}; @var{m2} is that of\n \n When an @code{asm} statement has multiple output values, its insn has\n several such @code{set} RTX's inside of a @code{parallel}.  Each @code{set}\n-contains a @code{asm_operands}; all of these share the same assembler\n+contains an @code{asm_operands}; all of these share the same assembler\n template and vectors, but each contains the constraint for the respective\n output operand.  They are also distinguished by the output-operand index\n number, which is 0, 1, @dots{} for successive output operands.\n@@ -3680,7 +3680,7 @@ used, and flow optimization to build an accurate flow graph.\n \n @findex REG_LABEL_TARGET\n @item REG_LABEL_TARGET\n-This insn is a @code{jump_insn} but not a @code{addr_vec} or\n+This insn is a @code{jump_insn} but not an @code{addr_vec} or\n @code{addr_diff_vec}.  It uses @var{op}, a @code{code_label} as a\n direct or indirect jump target.  Its purpose is similar to that of\n @code{REG_LABEL_OPERAND}.  This note is only present if the insn has\n@@ -3690,7 +3690,7 @@ insn-field) goes into the @code{JUMP_LABEL} field and does not have a\n \n @findex REG_CROSSING_JUMP\n @item REG_CROSSING_JUMP\n-This insn is an branching instruction (either an unconditional jump or\n+This insn is a branching instruction (either an unconditional jump or\n an indirect jump) which crosses between hot and cold sections, which\n could potentially be very far apart in the executable.  The presence\n of this note indicates to other optimizations that this branching"}, {"sha": "3e708ccf88242e65b3c5d07be340993168543828", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -2657,7 +2657,7 @@ allow copying all registers to and from memory, but require a scratch\n register for stores to some memory locations (e.g., those with symbolic\n address on the RT, and those with certain symbolic address on the SPARC\n when compiling PIC)@.  Scratch registers need not have the same mode\n-as the value being copied, and usually hold a different value that\n+as the value being copied, and usually hold a different value than\n that being copied.  Special patterns in the md file are needed to\n describe how the copy is performed with the help of the scratch register;\n these patterns also describe the number, register class(es) and mode(s)\n@@ -3046,7 +3046,7 @@ If the letter @samp{Q} is marked as @code{EXTRA_MEMORY_CONSTRAINT},\n a @samp{Q} constraint can handle any memory operand, because the\n reload pass knows it can be reloaded by copying the memory address\n into a base register if required.  This is analogous to the way\n-a @samp{o} constraint can handle any memory operand.\n+an @samp{o} constraint can handle any memory operand.\n @end defmac\n \n @defmac EXTRA_ADDRESS_CONSTRAINT (@var{c}, @var{str})\n@@ -4317,7 +4317,7 @@ values---values that can fit in registers.\n \n Define this to return an RTX representing the place where a function\n returns or receives a value of data type @var{ret_type}, a tree node\n-node representing a data type.  @var{fn_decl_or_type} is a tree node\n+representing a data type.  @var{fn_decl_or_type} is a tree node\n representing @code{FUNCTION_DECL} or @code{FUNCTION_TYPE} of a\n function being called.  If @var{outgoing} is false, the hook should\n compute the register in which the caller will see the return value.\n@@ -8978,7 +8978,7 @@ of compilation, which is correct for most machines.\n @defmac DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n Define this macro @emph{instead of} defining\n @code{DBX_OUTPUT_MAIN_SOURCE_FILE_END}, if what needs to be output at\n-the end of compilation is a @code{N_SO} stab with an empty string,\n+the end of compilation is an @code{N_SO} stab with an empty string,\n whose value is the highest absolute text address in the file.\n @end defmac\n "}, {"sha": "c08e8b31b88e7a6d0f36bae174dea9007a4a496e", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae5e771755c397e05b87b8126293ca76a250bc/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=e4ae5e771755c397e05b87b8126293ca76a250bc", "patch": "@@ -342,7 +342,7 @@ Declarations of external variables and functions within a block apply\n only to the block containing the declaration.  In other words, they\n have the same scope as any other declaration in the same place.\n \n-In some other C compilers, a @code{extern} declaration affects all the\n+In some other C compilers, an @code{extern} declaration affects all the\n rest of the file even if it happens within a block.\n \n @item"}]}