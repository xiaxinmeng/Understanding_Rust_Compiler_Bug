{"sha": "280fc31e5d1653a576aac4b0145729bf470c6c4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgwZmMzMWU1ZDE2NTNhNTc2YWFjNGIwMTQ1NzI5YmY0NzBjNmM0Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-28T12:43:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-28T12:43:27Z"}, "message": "(i960_arg_size_and_align): Correct alignment of XFmode values in\nlibrary calls.\n\nFrom-SVN: r10176", "tree": {"sha": "4a01984c19949d9ee070b1e1ff950cac499eac9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a01984c19949d9ee070b1e1ff950cac499eac9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/280fc31e5d1653a576aac4b0145729bf470c6c4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/280fc31e5d1653a576aac4b0145729bf470c6c4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/280fc31e5d1653a576aac4b0145729bf470c6c4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/280fc31e5d1653a576aac4b0145729bf470c6c4c/comments", "author": null, "committer": null, "parents": [{"sha": "0c253776b2273b576047ab2b95492677fa8f27d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c253776b2273b576047ab2b95492677fa8f27d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c253776b2273b576047ab2b95492677fa8f27d6"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "35ce318ddc69e832f6f445fa81f56206172f506c", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/280fc31e5d1653a576aac4b0145729bf470c6c4c/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/280fc31e5d1653a576aac4b0145729bf470c6c4c/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=280fc31e5d1653a576aac4b0145729bf470c6c4c", "patch": "@@ -2053,7 +2053,14 @@ i960_arg_size_and_align (mode, type, size_out, align_out)\n     size = (GET_MODE_SIZE (mode) + UNITS_PER_WORD - 1) / UNITS_PER_WORD;\n \n   if (type == 0)\n-    align = size;\n+    {\n+      /* ??? This is a hack to properly correct the alignment of XFmode\n+\t values without affecting anything else.  */\n+      if (size == 3)\n+\talign = 4;\n+      else\n+\talign = size;\n+    }\n   else if (TYPE_ALIGN (type) >= BITS_PER_WORD)\n     align = TYPE_ALIGN (type) / BITS_PER_WORD;\n   else\n@@ -2068,7 +2075,9 @@ i960_arg_size_and_align (mode, type, size_out, align_out)\n    subsequent arguments are placed on the stack.\n \n    Additionally, parameters with an alignment requirement stronger than\n-   a word must be be aligned appropriately.  */\n+   a word must be aligned appropriately.  Note that this means that a\n+   64 bit object with a 32 bit alignment is not 64 bit aligned and may be\n+   passed in an odd/even register pair.  */\n \n /* Update CUM to advance past an argument described by MODE and TYPE.  */\n "}]}