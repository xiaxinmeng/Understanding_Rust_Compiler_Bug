{"sha": "c189e185d44ade63dd087a9c2ba059c19920f8a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE4OWUxODVkNDRhZGU2M2RkMDg3YTljMmJhMDU5YzE5OTIwZjhhNQ==", "commit": {"author": {"name": "Roman Kennke", "email": "roman@kennke.org", "date": "2005-04-22T18:31:30Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-22T18:31:30Z"}, "message": "2005-04-22  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n\t(initComponentDefaults): Changed Button.border to be\n\tBasicBorders.getButtonBorder as it should be.\n\n2005-04-22  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java:\n\t(getMaximumSize): Return (Short.MAX_VALUE, Short.MAX_VALUE) as it\n\tshould according to a mauve testcase, instead of the preferred\n\tsize.\n\n2005-04-22  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/JMenu.java\n\t(add): add(Component) now calls PopupMenu.insert(..) instead of\n\tPopupMenu.add(..). add(..) is not implemented for Component,\n\tso JComponent.add(..) is called instead, adding the component\n\tin the wrong place.\n\n2005-04-22  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/plaf/basic/BasicButtonListener.java\n\t(mousePressed): replaced query to getModifiersEx with getModifiers.\n\tThis method relied on faulty behaviour in getModifierEx.\n\t(mouseReleased): replaced query to getModifiersEx with getModifiers.\n\tThis method relied on faulty behaviour in getModifierEx.\n\n2005-04-22  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n\t(getDefaults): Call addCustomEntriesToTable on the theme.\n\n2005-04-22  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/tree/DefaultTreeSelectionModel.java\n\t(constructor): Added implementation.\n\t(getRowMapper): Added implementation.\n\t(setSelectionMode): Added implementation.\n\t(getSelectionMode): Added implementation.\n\t(getSelectionPath): Added implementation.\n\t(getSelectionPaths): Added implementation.\n\t(getSelectionCount): Added implementation.\n\t(isSelectionEmpty): Added implementation.\n\t(getSelectionRows): Added implementation.\n\t(getMinSelectionRow): Added implementation.\n\t(getMaxSelectionRow): Added implementation.\n\t(getLeadSelectionRow): Added implementation.\n\t(getLeadSelectionPath): Added implementation.\n\nFrom-SVN: r98580", "tree": {"sha": "dad7c6c39a8f34edd2605fabf4f0409f420383ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dad7c6c39a8f34edd2605fabf4f0409f420383ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c189e185d44ade63dd087a9c2ba059c19920f8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c189e185d44ade63dd087a9c2ba059c19920f8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c189e185d44ade63dd087a9c2ba059c19920f8a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c189e185d44ade63dd087a9c2ba059c19920f8a5/comments", "author": null, "committer": null, "parents": [{"sha": "f030e8540f48f439493aeb129cf24235d456c5a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f030e8540f48f439493aeb129cf24235d456c5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f030e8540f48f439493aeb129cf24235d456c5a9"}], "stats": {"total": 131, "additions": 110, "deletions": 21}, "files": [{"sha": "30d61c18869f2553cc79b7b657e5cdac64522673", "filename": "libjava/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c189e185d44ade63dd087a9c2ba059c19920f8a5", "patch": "@@ -1,3 +1,54 @@\n+2005-04-22  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/plaf/basic/BasicLookAndFeel.java\n+\t(initComponentDefaults): Changed Button.border to be\n+\tBasicBorders.getButtonBorder as it should be.\n+\n+2005-04-22  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java:\n+\t(getMaximumSize): Return (Short.MAX_VALUE, Short.MAX_VALUE) as it\n+\tshould according to a mauve testcase, instead of the preferred\n+\tsize.\n+\n+2005-04-22  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/JMenu.java\n+\t(add): add(Component) now calls PopupMenu.insert(..) instead of\n+\tPopupMenu.add(..). add(..) is not implemented for Component,\n+\tso JComponent.add(..) is called instead, adding the component\n+\tin the wrong place.\n+\n+2005-04-22  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/plaf/basic/BasicButtonListener.java\n+\t(mousePressed): replaced query to getModifiersEx with getModifiers.\n+\tThis method relied on faulty behaviour in getModifierEx.\n+\t(mouseReleased): replaced query to getModifiersEx with getModifiers.\n+\tThis method relied on faulty behaviour in getModifierEx.\n+\n+2005-04-22  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n+\t(getDefaults): Call addCustomEntriesToTable on the theme.\n+\n+2005-04-22  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/tree/DefaultTreeSelectionModel.java\n+\t(constructor): Added implementation.\n+\t(getRowMapper): Added implementation.\n+\t(setSelectionMode): Added implementation.\n+\t(getSelectionMode): Added implementation.\n+\t(getSelectionPath): Added implementation.\n+\t(getSelectionPaths): Added implementation.\n+\t(getSelectionCount): Added implementation.\n+\t(isSelectionEmpty): Added implementation.\n+\t(getSelectionRows): Added implementation.\n+\t(getMinSelectionRow): Added implementation.\n+\t(getMaxSelectionRow): Added implementation.\n+\t(getLeadSelectionRow): Added implementation.\n+\t(getLeadSelectionPath): Added implementation.\n+\n 2005-04-22  Casey Marshall <csm@gnu.org>\n \n \t* gnu/java/security/der/DERValue.java"}, {"sha": "6fdf266fd33febb25c23387017a755d462c61bc6", "filename": "libjava/javax/swing/JMenu.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2FJMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2FJMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenu.java?ref=c189e185d44ade63dd087a9c2ba059c19920f8a5", "patch": "@@ -162,7 +162,8 @@ public JMenuItem add(JMenuItem item)\n    */\n   public Component add(Component component)\n   {\n-    return popupMenu.add(component);\n+    popupMenu.insert(component, -1);\n+    return component;\n   }\n \n   /**"}, {"sha": "350db3bedd886f7c7c7242cc27febdec519875fc", "filename": "libjava/javax/swing/plaf/basic/BasicButtonListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java?ref=c189e185d44ade63dd087a9c2ba059c19920f8a5", "patch": "@@ -157,7 +157,7 @@ public void mousePressed(MouseEvent e)\n       {\n         AbstractButton button = (AbstractButton) e.getSource();\n         ButtonModel model = button.getModel();\n-        if ((e.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK) != 0)\n+        if (e.getButton() == MouseEvent.BUTTON1)\n           {\n             // It is important that these transitions happen in this order.\n             model.setArmed(true);\n@@ -179,7 +179,7 @@ public void mouseReleased(MouseEvent e)\n       {\n         AbstractButton button = (AbstractButton) e.getSource();\n         ButtonModel model = button.getModel();\n-        if ((e.getModifiersEx() & InputEvent.BUTTON1_DOWN_MASK) != 0)\n+        if (e.getButton() == MouseEvent.BUTTON1)\n           {\n             // It is important that these transitions happen in this order.\n             model.setPressed(false);"}, {"sha": "562f0011e58dbf126d65d7173aa5df07a04d513c", "filename": "libjava/javax/swing/plaf/basic/BasicLookAndFeel.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLookAndFeel.java?ref=c189e185d44ade63dd087a9c2ba059c19920f8a5", "patch": "@@ -244,7 +244,14 @@ protected void initComponentDefaults(UIDefaults defaults)\n       \"AbstractUndoableEdit.redoText\", \"Redo\",\n \n       \"Button.background\", new ColorUIResource(Color.lightGray),\n-      \"Button.border\", BorderUIResource.getEtchedBorderUIResource(),\n+      \"Button.border\",\n+      new UIDefaults.LazyValue() \n+      {\n+        public Object createValue(UIDefaults table)\n+        {\n+          return BasicBorders.getButtonBorder();\n+        }\n+      },\n       \"Button.darkShadow\", new ColorUIResource(Color.darkGray),\n       \"Button.focusInputMap\", new UIDefaults.LazyInputMap(new Object[] {\n         \"SPACE\",  \"pressed\","}, {"sha": "c2af60f118603133594ff86bcbd0f2fa678a454a", "filename": "libjava/javax/swing/plaf/basic/BasicTabbedPaneUI.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTabbedPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTabbedPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTabbedPaneUI.java?ref=c189e185d44ade63dd087a9c2ba059c19920f8a5", "patch": "@@ -1168,8 +1168,7 @@ private class ScrollingViewport extends JViewport implements UIResource\n    * This is a helper class that implements UIResource so it is not added as a\n    * tab when an object of this class is added to the JTabbedPane.\n    */\n-  private static class ScrollingButton extends BasicArrowButton\n-    implements UIResource\n+  private class ScrollingButton extends BasicArrowButton implements UIResource\n   {\n     /**\n      * Creates a ScrollingButton given the direction.\n@@ -1682,7 +1681,7 @@ public Dimension getMinimumSize(JComponent c)\n    */\n   public Dimension getMaximumSize(JComponent c)\n   {\n-    return getPreferredSize(c);\n+    return new Dimension(Short.MAX_VALUE, Short.MAX_VALUE);\n   }\n \n   /**"}, {"sha": "a55bc1b98e098d4e65671fabb0192f2fd70e1d52", "filename": "libjava/javax/swing/plaf/metal/MetalLookAndFeel.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java?ref=c189e185d44ade63dd087a9c2ba059c19920f8a5", "patch": "@@ -92,6 +92,9 @@ public UIDefaults getDefaults()\n     if (LAF_defaults == null)\n       LAF_defaults = super.getDefaults();\n \n+    // add custom theme entries to the table\n+    theme.addCustomEntriesToTable(LAF_defaults);\n+    \n     // Returns the default values for this look and feel. \n     return LAF_defaults;\n   }"}, {"sha": "b329875f7f443c97844cc6d87e36e5eee5459562", "filename": "libjava/javax/swing/tree/DefaultTreeSelectionModel.java", "status": "modified", "additions": 42, "deletions": 14, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c189e185d44ade63dd087a9c2ba059c19920f8a5/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultTreeSelectionModel.java?ref=c189e185d44ade63dd087a9c2ba059c19920f8a5", "patch": "@@ -116,7 +116,7 @@\n    */\n   public DefaultTreeSelectionModel()\n   {\n-    // TODO\n+    setSelectionMode(DISCONTIGUOUS_TREE_SELECTION);\n   }\n \n   /**\n@@ -187,7 +187,7 @@ public void setRowMapper(RowMapper value0)\n    */\n   public RowMapper getRowMapper()\n   {\n-    return null; // TODO\n+    return rowMapper;\n   }\n \n   /**\n@@ -202,9 +202,9 @@ public RowMapper getRowMapper()\n    * @see {@link #CONTIGUOUS_TREE_SELECTION}\n    * @see {@link #DISCONTIGUOUS_TREE_SELECTION}\n    */\n-  public void setSelectionMode(int value0)\n+  public void setSelectionMode(int mode)\n   {\n-    // TODO\n+    selectionMode = mode;\n   }\n \n   /**\n@@ -219,7 +219,7 @@ public void setSelectionMode(int value0)\n    */\n   public int getSelectionMode()\n   {\n-    return 0; // TODO\n+    return selectionMode;\n   }\n \n   /**\n@@ -311,7 +311,10 @@ public void removeSelectionPaths(TreePath[] value0)\n    */\n   public TreePath getSelectionPath()\n   {\n-    return null; // TODO\n+    if ((selection == null) || (selection.length == 0))\n+      return null;\n+    else\n+      return selection[0];\n   }\n \n   /**\n@@ -321,7 +324,7 @@ public TreePath getSelectionPath()\n    */\n   public TreePath[] getSelectionPaths()\n   {\n-    return null; // TODO\n+    return selection;\n   }\n \n   /**\n@@ -331,7 +334,10 @@ public TreePath[] getSelectionPaths()\n    */\n   public int getSelectionCount()\n   {\n-    return 0; // TODO\n+    if (selection == null)\n+      return 0;\n+    else\n+      return selection.length;\n   }\n \n   /**\n@@ -355,7 +361,7 @@ public boolean isPathSelected(TreePath value0)\n    */\n   public boolean isSelectionEmpty()\n   {\n-    return false; // TODO\n+    return ((selection == null) || (selection.length == 0));\n   }\n \n   /**\n@@ -432,7 +438,10 @@ public EventListener[] getListeners(Class listenerType)\n    */\n   public int[] getSelectionRows()\n   {\n-    return null; // TODO\n+    if (rowMapper == null)\n+      return null;\n+    else\n+      return rowMapper.getRowsForPaths(selection);\n   }\n \n   /**\n@@ -442,7 +451,15 @@ public int[] getSelectionRows()\n    */\n   public int getMinSelectionRow()\n   {\n-    return 0; // TODO\n+    if ((rowMapper == null) || (selection == null) || (selection.length == 0))\n+      return -1;\n+    else {\n+      int[] rows = rowMapper.getRowsForPaths(selection);\n+      int minRow = Integer.MAX_VALUE;\n+      for (int index = 0; index < rows.length; index++)\n+        minRow = Math.min(minRow, rows[index]);\n+      return minRow;\n+    }\n   }\n \n   /**\n@@ -452,7 +469,15 @@ public int getMinSelectionRow()\n    */\n   public int getMaxSelectionRow()\n   {\n-    return 0; // TODO\n+    if ((rowMapper == null) || (selection == null) || (selection.length == 0))\n+      return -1;\n+    else {\n+      int[] rows = rowMapper.getRowsForPaths(selection);\n+      int maxRow = -1;\n+      for (int index = 0; index < rows.length; index++)\n+        maxRow = Math.max(maxRow, rows[index]);\n+      return maxRow;\n+    }\n   }\n \n   /**\n@@ -482,7 +507,10 @@ public void resetRowSelection()\n    */\n   public int getLeadSelectionRow()\n   {\n-    return 0; // TODO\n+    if ((rowMapper == null) || (leadPath == null))\n+      return -1;\n+    else\n+      return rowMapper.getRowsForPaths(new TreePath[]{ leadPath })[0];\n   }\n \n   /**\n@@ -491,7 +519,7 @@ public int getLeadSelectionRow()\n    */\n   public TreePath getLeadSelectionPath()\n   {\n-    return null; // TODO\n+    return leadPath;\n   }\n \n   /**"}]}