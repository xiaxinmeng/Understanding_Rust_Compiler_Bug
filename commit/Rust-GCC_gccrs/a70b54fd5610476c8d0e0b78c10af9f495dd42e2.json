{"sha": "a70b54fd5610476c8d0e0b78c10af9f495dd42e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcwYjU0ZmQ1NjEwNDc2YzhkMGUwYjc4YzEwYWY5ZjQ5NWRkNDJlMg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2002-05-23T04:18:35Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-05-23T04:18:35Z"}, "message": "Makefile.am (all-recursive): Depend on $all_java_class_files so that they build first.\n\n\t* Makefile.am (all-recursive): Depend on $all_java_class_files so that\n\tthey build first.\n\t* Makefile.in: Rebuilt.\n\nFrom-SVN: r53760", "tree": {"sha": "30b3808d0aa0d1f0937c4b711ab2435ea092ccb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30b3808d0aa0d1f0937c4b711ab2435ea092ccb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a70b54fd5610476c8d0e0b78c10af9f495dd42e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70b54fd5610476c8d0e0b78c10af9f495dd42e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a70b54fd5610476c8d0e0b78c10af9f495dd42e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70b54fd5610476c8d0e0b78c10af9f495dd42e2/comments", "author": null, "committer": null, "parents": [{"sha": "30def3f5373569ce4646063469eedab2f0b4fa4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30def3f5373569ce4646063469eedab2f0b4fa4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30def3f5373569ce4646063469eedab2f0b4fa4d"}], "stats": {"total": 63, "additions": 28, "deletions": 35}, "files": [{"sha": "507790faac8d88d49dfab0729addf5a983bd4748", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70b54fd5610476c8d0e0b78c10af9f495dd42e2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70b54fd5610476c8d0e0b78c10af9f495dd42e2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a70b54fd5610476c8d0e0b78c10af9f495dd42e2", "patch": "@@ -1,3 +1,9 @@\n+2002-05-23  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* Makefile.am (all-recursive): Depend on $all_java_class_files so that\n+\tthey build first.\n+\t* Makefile.in: Rebuilt.\n+\n 2002-05-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* acinclude.m4: Allow for PWDCMD to override hardcoded pwd."}, {"sha": "773eb202b890cd53e50dfac840eb79b3379b8d87", "filename": "libjava/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70b54fd5610476c8d0e0b78c10af9f495dd42e2/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70b54fd5610476c8d0e0b78c10af9f495dd42e2/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=a70b54fd5610476c8d0e0b78c10af9f495dd42e2", "patch": "@@ -1895,7 +1895,9 @@ texinfo: TexinfoDoclet.class\n ## internally by libgcj. We can't make the .o files depend on nat_headers, \n ## because in that case we'll force a complete rebuild of\n ## the C++ code whenever any .java file is touched.\n-all-recursive: $(nat_headers) $(x_nat_headers)\n+## Also force all the class files to build first. This makes them build in\n+## the right order to improve performance.\n+all-recursive: $(all_java_class_files) $(nat_headers) $(x_nat_headers)\n \n ## ################################################################\n "}, {"sha": "9bd41c7c4e6e1a5b1820f5c06b969c438f242817", "filename": "libjava/Makefile.in", "status": "modified", "additions": 19, "deletions": 34, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70b54fd5610476c8d0e0b78c10af9f495dd42e2/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70b54fd5610476c8d0e0b78c10af9f495dd42e2/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=a70b54fd5610476c8d0e0b78c10af9f495dd42e2", "patch": "@@ -129,19 +129,13 @@ mkinstalldirs = @mkinstalldirs@\n tool_include_dir = @tool_include_dir@\n \n AUTOMAKE_OPTIONS = foreign\n-@TESTSUBDIR_TRUE@SUBDIRS = \\\n-@TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n-@TESTSUBDIR_FALSE@SUBDIRS = \\\n-@TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n-@USE_LIBDIR_TRUE@toolexeclibdir = \\\n-@USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = \\\n-@USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = \\\n-@USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n-@XLIB_AWT_TRUE@cond_x_ltlibrary = \\\n-@XLIB_AWT_TRUE@libgcjx.la\n-@XLIB_AWT_FALSE@cond_x_ltlibrary = \\\n+@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@libgcjx.la\n+@XLIB_AWT_FALSE@cond_x_ltlibrary = \n \n toolexeclib_LTLIBRARIES = libgcj.la $(cond_x_ltlibrary)\n toolexeclib_DATA = libgcj.spec\n@@ -151,20 +145,14 @@ jar_DATA = libgcj-@gcc_version@.jar\n \n secdir = $(libdir)/security\n \n-@NATIVE_TRUE@bin_PROGRAMS = \\\n-@NATIVE_TRUE@jv-convert gij rmic rmiregistry\n+@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij rmic rmiregistry\n \n bin_SCRIPTS = addr2name.awk\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@jar\n-@CANADIAN_FALSE@ZIP = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = \\\n-@CANADIAN_TRUE@gcjh\n-@CANADIAN_FALSE@GCJH = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@jar\n+@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n \n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8\n \n@@ -185,10 +173,8 @@ AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n \t-DPREFIX=\"\\\"$(prefix)\\\"\"\n \n-@USING_GCC_TRUE@AM_CFLAGS = \\\n-@USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = \\\n-@USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = @LIBGCJ_JAVAFLAGS@ $(GCJFLAGS)\n@@ -271,8 +257,7 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n \n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n@@ -1755,7 +1740,7 @@ libgcj-test.spec.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -3056,7 +3041,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n@@ -3481,7 +3466,7 @@ texinfo: TexinfoDoclet.class\n \n -include deps.mk\n \n-all-recursive: $(nat_headers) $(x_nat_headers)\n+all-recursive: $(all_java_class_files) $(nat_headers) $(x_nat_headers)\n \n # Multilib support.\n .PHONY: all-multi mostlyclean-multi clean-multi distclean-multi \\"}]}