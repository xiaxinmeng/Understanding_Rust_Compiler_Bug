{"sha": "1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI5ZWU3MjMzY2FhNGU2ZmY4Zjk2NDMxOGYwNzYyYmYyZGY2NjM5Yg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-08-30T21:08:32Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-08-30T21:08:32Z"}, "message": "jcf-write.c (generate_classfile): Don't write ConstantValue attribute if field is not final...\n\n\n\t* jcf-write.c (generate_classfile):  Don't write ConstantValue\n\tattribute if field is not final, for compatibility with jdk.\n\n\t* jcf-write.c (generate_classfile):  Convert ConstantValue values\n\tto correct type.  Work-around for front-end bug.\n\t* class.c (set_constant_value):  Error if constant has wrong type.\n\nFrom-SVN: r45298", "tree": {"sha": "0a3e102f4903a3458ca1b8037ffd7d48b66c1484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a3e102f4903a3458ca1b8037ffd7d48b66c1484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9ee7233caa4e6ff8f964318f0762bf2df6639b/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8ec576419e8dd1e335dd16d22a0cd7a9b1865e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ec576419e8dd1e335dd16d22a0cd7a9b1865e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ec576419e8dd1e335dd16d22a0cd7a9b1865e0"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "a7e57184ca8e5323d5105bfe16fe4a6684a33fb5", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9ee7233caa4e6ff8f964318f0762bf2df6639b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9ee7233caa4e6ff8f964318f0762bf2df6639b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "patch": "@@ -1,3 +1,12 @@\n+2001-08-30  Per Bothner  <per@bothner.com>\n+\n+\t* jcf-write.c (generate_classfile):  Don't write ConstantValue\n+\tattribute if field is not final, for compatibility with jdk.\n+\n+\t* jcf-write.c (generate_classfile):  Convert ConstantValue values\n+\tto correct type.  Work-around for front-end bug.\n+\t* class.c (set_constant_value):  Error if constant has wrong type.\n+\n 2001-08-30  Per Bothner  <per@bothner.com>\n \n \t* jcf-dump.c (print_constant):  Fix fencepost error so \"Float\" and"}, {"sha": "eb4be8e96d32c972e602073f46c7690fa057f320", "filename": "gcc/java/class.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9ee7233caa4e6ff8f964318f0762bf2df6639b/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9ee7233caa4e6ff8f964318f0762bf2df6639b/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "patch": "@@ -777,6 +777,12 @@ set_constant_value (field, constant)\n   else\n     {\n       DECL_INITIAL (field) = constant;\n+      if (TREE_TYPE (constant) != TREE_TYPE (field)\n+\t  && ! (TREE_TYPE (constant) == int_type_node\n+\t\t&& INTEGRAL_TYPE_P (TREE_TYPE (field))\n+\t\t&& TYPE_PRECISION (TREE_TYPE (field)) <= 32))\n+\terror (\"ConstantValue attribute of field '%s' has wrong type\",\n+\t       IDENTIFIER_POINTER (DECL_NAME (field)));\n       if (FIELD_FINAL (field))\n \tDECL_FIELD_FINAL_IUD (field) = 1;\n     }"}, {"sha": "d090b5678aefe386ff93fb2dafb9d47da2c0399a", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9ee7233caa4e6ff8f964318f0762bf2df6639b/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9ee7233caa4e6ff8f964318f0762bf2df6639b/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=1b9ee7233caa4e6ff8f964318f0762bf2df6639b", "patch": "@@ -2884,7 +2884,8 @@ generate_classfile (clas, state)\n \t\t\t      build_java_signature (TREE_TYPE (part)));\n       PUT2(i);\n       have_value = DECL_INITIAL (part) != NULL_TREE \n-\t&& FIELD_STATIC (part) && CONSTANT_VALUE_P (DECL_INITIAL (part));\n+\t&& FIELD_STATIC (part) && CONSTANT_VALUE_P (DECL_INITIAL (part))\n+\t&& FIELD_FINAL (part);\n       if (have_value)\n \tattr_count++;\n \n@@ -2896,6 +2897,8 @@ generate_classfile (clas, state)\n \t{\n \t  tree init = DECL_INITIAL (part);\n \t  static tree ConstantValue_node = NULL_TREE;\n+\t  // This conversion is a work-around for front-end bug.\n+\t  init = convert (TREE_TYPE (part), init);\n \t  ptr = append_chunk (NULL, 8, state);\n \t  if (ConstantValue_node == NULL_TREE)\n \t    ConstantValue_node = get_identifier (\"ConstantValue\");"}]}