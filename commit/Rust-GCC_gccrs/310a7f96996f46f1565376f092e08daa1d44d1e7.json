{"sha": "310a7f96996f46f1565376f092e08daa1d44d1e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEwYTdmOTY5OTZmNDZmMTU2NTM3NmYwOTJlMDhkYWExZDQ0ZDFlNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-12-02T13:58:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-12-02T13:58:32Z"}, "message": "call.c (add_function_candidate): Also exclude inherited ctors that take a type reference-related to the derived...\n\n\t* call.c (add_function_candidate): Also exclude inherited ctors\n\tthat take a type reference-related to the derived class.\n\nFrom-SVN: r243178", "tree": {"sha": "640a45ccc5f0c33858a9452d87285932880ae033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/640a45ccc5f0c33858a9452d87285932880ae033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/310a7f96996f46f1565376f092e08daa1d44d1e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/310a7f96996f46f1565376f092e08daa1d44d1e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/310a7f96996f46f1565376f092e08daa1d44d1e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/310a7f96996f46f1565376f092e08daa1d44d1e7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03fd1ef632f41caaaa38a80712ed7eda3f97fdff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fd1ef632f41caaaa38a80712ed7eda3f97fdff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fd1ef632f41caaaa38a80712ed7eda3f97fdff"}], "stats": {"total": 26, "additions": 8, "deletions": 18}, "files": [{"sha": "4977ff2d967bcdfd4b3fa3b28065a1bfde9682bc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/310a7f96996f46f1565376f092e08daa1d44d1e7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/310a7f96996f46f1565376f092e08daa1d44d1e7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=310a7f96996f46f1565376f092e08daa1d44d1e7", "patch": "@@ -1,5 +1,8 @@\n 2016-12-01  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (add_function_candidate): Also exclude inherited ctors\n+\tthat take a type reference-related to the derived class.\n+\n \t* call.c (add_function_candidate): Exclude inherited copy/move\n \tctors.\n "}, {"sha": "b7aa97cc947e8fa80dd99aef7cf2e8a89b861c43", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/310a7f96996f46f1565376f092e08daa1d44d1e7/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/310a7f96996f46f1565376f092e08daa1d44d1e7/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=310a7f96996f46f1565376f092e08daa1d44d1e7", "patch": "@@ -2042,19 +2042,18 @@ add_function_candidate (struct z_candidate **candidates,\n       reason = arity_rejection (first_arg, i + remaining, len);\n     }\n \n-  /* A constructor that is a direct member of a class C and has a first\n+  /* An inherited constructor (12.6.3 [class.inhctor.init]) that has a first\n      parameter of type \"reference to cv C\" (including such a constructor\n      instantiated from a template) is excluded from the set of candidate\n-     functions when used to construct an object of type derived from C (12.6.3\n-     [class.inhctor.init]) with an argument list containing a single\n-     argument.  */\n+     functions when used to construct an object of type D with an argument list\n+     containing a single argument if C is reference-related to D.  */\n   if (viable && len == 1 && parmlist && DECL_CONSTRUCTOR_P (fn)\n       && flag_new_inheriting_ctors\n       && DECL_INHERITED_CTOR (fn))\n     {\n       tree ptype = non_reference (TREE_VALUE (parmlist));\n-      tree ctype = DECL_INHERITED_CTOR_BASE (fn);\n-      if (same_type_ignoring_top_level_qualifiers_p (ptype, ctype))\n+      tree dtype = DECL_CONTEXT (fn);\n+      if (reference_related_p (ptype, dtype))\n \t{\n \t  viable = false;\n \t  reason = inherited_ctor_rejection ();\n@@ -2161,18 +2160,6 @@ add_function_candidate (struct z_candidate **candidates,\n \t\t}\n \t    }\n \n-\t  /* Don't consider inherited constructors for initialization from an\n-\t     expression of the same or derived type.  */\n-\t  /* FIXME extend to operator=.  */\n-\t  if (i == 0 && len == 1\n-\t      && DECL_INHERITED_CTOR (fn)\n-\t      && reference_related_p (ctype, argtype))\n-\t    {\n-\t      viable = 0;\n-\t      reason = inherited_ctor_rejection ();\n-\t      goto out;\n-\t    }\n-\n \t  /* Core issue 899: When [copy-]initializing a temporary to be bound\n \t     to the first parameter of a copy constructor (12.8) called with\n \t     a single argument in the context of direct-initialization,"}]}