{"sha": "c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkMzgxMGY5Mzg4YjQ2NzBiOGE1YzJkM2Q4MmYyOTNjNWE2ZmRlNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-09T17:38:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-09T17:38:06Z"}, "message": "ia64.c (update_set_flags): Just return for IF_THEN_ELSE.\n\n        * config/ia64/ia64.c (update_set_flags): Just return for IF_THEN_ELSE.\n        Use SCALAR_FLOAT_MODE_P.\n        * config/ia64/vect.md (vcondv2sf): Remove code check on comparison.\n        (fselect): Rename from fpcmp; use %F.\n        (fpcmp): New.\n\nFrom-SVN: r100803", "tree": {"sha": "e97bd590a508a009e6a4942761c772456ceb0d8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e97bd590a508a009e6a4942761c772456ceb0d8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7/comments", "author": null, "committer": null, "parents": [{"sha": "30be951ac7b465e1f10da0f70744364a8e678366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30be951ac7b465e1f10da0f70744364a8e678366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30be951ac7b465e1f10da0f70744364a8e678366"}], "stats": {"total": 71, "additions": 30, "deletions": 41}, "files": [{"sha": "40564640e56c6cdd172690d3e7bf2381cac8edb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7", "patch": "@@ -1,3 +1,11 @@\n+2005-06-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.c (update_set_flags): Just return for IF_THEN_ELSE.\n+\tUse SCALAR_FLOAT_MODE_P.\n+\t* config/ia64/vect.md (vcondv2sf): Remove code check on comparison.\n+\t(fselect): Rename from fpcmp; use %F.\n+\t(fpcmp): New.\n+\n 2005-06-09  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraphunit.c (cgraph_create_edges): Do not walk BLOCK; finalize"}, {"sha": "bf9375a4733930cb19254ffe387848322eb083ab", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7", "patch": "@@ -5168,25 +5168,19 @@ update_set_flags (rtx x, struct reg_flags *pflags)\n       return;\n \n     case IF_THEN_ELSE:\n-      if (SET_DEST (x) == pc_rtx)\n-\t/* X is a conditional branch.  */\n-\treturn;\n-      else\n-\t{\n-\t  /* X is a conditional move.  */\n-\t  rtx cond = XEXP (src, 0);\n-\t  cond = XEXP (cond, 0);\n-\n-\t  /* We always split conditional moves into COND_EXEC patterns, so the\n-\t     only pattern that can reach here is doloop_end_internal.  We don't\n-\t     need to do anything special for this pattern.  */\n-\t  gcc_assert (GET_CODE (cond) == REG && REGNO (cond) == AR_LC_REGNUM);\n-\t  return;\n-\t}\n+      /* There are three cases here:\n+\t (1) The destination is (pc), in which case this is a branch,\n+\t nothing here applies.\n+\t (2) The destination is ar.lc, in which case this is a\n+\t doloop_end_internal,\n+\t (3) The destination is an fp register, in which case this is\n+\t an fselect instruction.\n+\t In all cases, nothing we do in this function applies.  */\n+      return;\n \n     default:\n       if (COMPARISON_P (src)\n-\t  && GET_MODE_CLASS (GET_MODE (XEXP (src, 0))) == MODE_FLOAT)\n+\t  && SCALAR_FLOAT_MODE_P (GET_MODE (XEXP (src, 0))))\n \t/* Set pflags->is_fp to 1 so that we know we're dealing\n \t   with a floating point comparison when processing the\n \t   destination of the SET.  */"}, {"sha": "293707d891450f7fa14dc509ab873db129500036", "filename": "gcc/config/ia64/vect.md", "status": "modified", "additions": 12, "deletions": 25, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7/gcc%2Fconfig%2Fia64%2Fvect.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7/gcc%2Fconfig%2Fia64%2Fvect.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvect.md?ref=c8d3810f9388b4670b8a5c2d3d82f293c5a6fde7", "patch": "@@ -1,5 +1,5 @@\n ;; IA-64 machine description for vector operations.\n-;; Copyright (C) 2004\n+;; Copyright (C) 2004, 2005\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -873,30 +873,8 @@\n {\n   rtx x, cmp;\n \n-  PUT_MODE (operands[3], V2SFmode);\n-  switch (GET_CODE (operands[3]))\n-    {\n-    case EQ:\n-    case NE:\n-    case LT:\n-    case LE:\n-    case UNORDERED:\n-    case ORDERED:\n-      break;\n-\n-    case GT:\n-    case GE:\n-      x = XEXP (operands[3], 0);\n-      XEXP (operands[3], 0) = XEXP (operands[3], 1);\n-      XEXP (operands[3], 1) = x;\n-      PUT_CODE (operands[3], swap_condition (GET_CODE (operands[3])));\n-      break;\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n-\n   cmp = gen_reg_rtx (V2SFmode);\n+  PUT_MODE (operands[3], V2SFmode);\n   emit_insn (gen_rtx_SET (VOIDmode, cmp, operands[3]));\n \n   x = gen_rtx_IF_THEN_ELSE (V2SFmode, cmp, operands[1], operands[2]);\n@@ -905,13 +883,22 @@\n })\n \n (define_insn \"*fpcmp\"\n+  [(set (match_operand:V2SF 0 \"fr_register_operand\" \"=f\")\n+\t(match_operator:V2SF 3 \"comparison_operator\"\n+\t  [(match_operand:V2SF 1 \"fr_reg_or_0_operand\" \"fU\")\n+\t   (match_operand:V2SF 2 \"fr_reg_or_0_operand\" \"fU\")]))]\n+  \"\"\n+  \"fpcmp.%D3 %0 = %F1, %F2\"\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n+\n+(define_insn \"*fselect\"\n   [(set (match_operand:V2SF 0 \"fr_register_operand\" \"=f\")\n \t(if_then_else:V2SF\n \t  (match_operand:V2SF 1 \"fr_register_operand\" \"f\")\n \t  (match_operand:V2SF 2 \"fr_reg_or_0_operand\" \"fU\")\n \t  (match_operand:V2SF 3 \"fr_reg_or_0_operand\" \"fU\")))]\n   \"\"\n-  \"fselect %0 = %2, %3, %1\"\n+  \"fselect %0 = %F2, %F3, %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_expand \"vec_initv2sf\""}]}