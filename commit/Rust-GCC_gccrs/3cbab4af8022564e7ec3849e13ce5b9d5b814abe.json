{"sha": "3cbab4af8022564e7ec3849e13ce5b9d5b814abe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiYWI0YWY4MDIyNTY0ZTdlYzM4NDllMTNjZTViOWQ1YjgxNGFiZQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-09-02T11:23:20Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-09-02T11:23:20Z"}, "message": "rs6000.md (QHSI): Delete.\n\n2014-09-02  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.md (QHSI): Delete.\n\t(EXTQI, EXTHI, EXTSI): New mode iterators.\n\t(zero_extend<mode>di2, *zero_extend<mode>di2_internal1,\n\t*zero_extend<mode>di2_internal2, *zero_extend<mode>di2_internal3,\n\t*zero_extendsidi2_lfiwzx, zero_extendqisi2, zero_extendhisi2,\n\t9 anonymous instructions, and 8 splitters): Delete.\n\t(zero_extendqi<mode>2, *zero_extendqi<mode>2_dot,\n\t*zero_extendqi<mode>2_dot2, zero_extendhi<mode>2,\n\t*zero_extendhi<mode>2_dot, *zero_extendhi<mode>2_dot2,\n\tzero_extendsi<mode>2, *zero_extendsi<mode>2_dot,\n\t*zero_extendsi<mode>2_dot2): New.\n\nFrom-SVN: r214815", "tree": {"sha": "a840f4b996b12ea4845c66678f463542512ec51f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a840f4b996b12ea4845c66678f463542512ec51f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cbab4af8022564e7ec3849e13ce5b9d5b814abe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbab4af8022564e7ec3849e13ce5b9d5b814abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cbab4af8022564e7ec3849e13ce5b9d5b814abe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbab4af8022564e7ec3849e13ce5b9d5b814abe/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb8fb2ca6104819607e47529d4b029cb3694fb0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8fb2ca6104819607e47529d4b029cb3694fb0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8fb2ca6104819607e47529d4b029cb3694fb0f"}], "stats": {"total": 393, "additions": 145, "deletions": 248}, "files": [{"sha": "c99c27008d86db8825fca6ff4091ed3994683e94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbab4af8022564e7ec3849e13ce5b9d5b814abe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbab4af8022564e7ec3849e13ce5b9d5b814abe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cbab4af8022564e7ec3849e13ce5b9d5b814abe", "patch": "@@ -1,3 +1,17 @@\n+2014-09-02  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (QHSI): Delete.\n+\t(EXTQI, EXTHI, EXTSI): New mode iterators.\n+\t(zero_extend<mode>di2, *zero_extend<mode>di2_internal1,\n+\t*zero_extend<mode>di2_internal2, *zero_extend<mode>di2_internal3,\n+\t*zero_extendsidi2_lfiwzx, zero_extendqisi2, zero_extendhisi2,\n+\t9 anonymous instructions, and 8 splitters): Delete.\n+\t(zero_extendqi<mode>2, *zero_extendqi<mode>2_dot,\n+\t*zero_extendqi<mode>2_dot2, zero_extendhi<mode>2,\n+\t*zero_extendhi<mode>2_dot, *zero_extendhi<mode>2_dot2,\n+\tzero_extendsi<mode>2, *zero_extendsi<mode>2_dot,\n+\t*zero_extendsi<mode>2_dot2): New.\n+\n 2014-09-02  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (any_extend): New code iterator."}, {"sha": "6cd64042c9ddb42d1a288d9753a6243efdf1f1e8", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 131, "deletions": 248, "changes": 379, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbab4af8022564e7ec3849e13ce5b9d5b814abe/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbab4af8022564e7ec3849e13ce5b9d5b814abe/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=3cbab4af8022564e7ec3849e13ce5b9d5b814abe", "patch": "@@ -309,8 +309,14 @@\n ; Any supported integer mode that fits in one register.\n (define_mode_iterator INT1 [QI HI SI (DI \"TARGET_POWERPC64\")])\n \n-; extend modes for DImode\n-(define_mode_iterator QHSI [QI HI SI])\n+; Everything we can extend QImode to.\n+(define_mode_iterator EXTQI [HI SI (DI \"TARGET_POWERPC64\")])\n+\n+; Everything we can extend HImode to.\n+(define_mode_iterator EXTHI [SI (DI \"TARGET_POWERPC64\")])\n+\n+; Everything we can extend SImode to.\n+(define_mode_iterator EXTSI [(DI \"TARGET_POWERPC64\")])\n \n ; QImode or HImode for small atomic ops\n (define_mode_iterator QHI [QI HI])\n@@ -564,79 +570,112 @@\n ;; Start with fixed-point load and store insns.  Here we put only the more\n ;; complex forms.  Basic data transfer is done later.\n \n-(define_expand \"zero_extend<mode>di2\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(zero_extend:DI (match_operand:QHSI 1 \"gpc_reg_operand\" \"\")))]\n-  \"TARGET_POWERPC64\"\n-  \"\")\n-\n-(define_insn \"*zero_extend<mode>di2_internal1\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:DI (match_operand:QHSI 1 \"reg_or_mem_operand\" \"m,r\")))]\n-  \"TARGET_POWERPC64 && (<MODE>mode != SImode || !TARGET_LFIWZX)\"\n+(define_insn \"zero_extendqi<mode>2\"\n+  [(set (match_operand:EXTQI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:EXTQI (match_operand:QI 1 \"reg_or_mem_operand\" \"m,r\")))]\n+  \"\"\n   \"@\n-   l<wd>z%U1%X1 %0,%1\n-   rldicl %0,%1,0,<dbits>\"\n+   lbz%U1%X1 %0,%1\n+   rlwinm %0,%1,0,0xff\"\n   [(set_attr \"type\" \"load,shift\")])\n \n-(define_insn \"*zero_extend<mode>di2_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:DI (match_operand:QHSI 1 \"gpc_reg_operand\" \"r,r\"))\n+(define_insn_and_split \"*zero_extendqi<mode>2_dot\"\n+  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (zero_extend:EXTQI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 2 \"=r,r\"))]\n-  \"TARGET_64BIT\"\n+   (clobber (match_scratch:EXTQI 0 \"=r,r\"))]\n+  \"rs6000_gen_cell_microcode\"\n   \"@\n-   rldicl. %2,%1,0,<dbits>\n+   andi. %0,%1,0xff\n    #\"\n-  [(set_attr \"type\" \"shift\")\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n+  [(set (match_dup 0)\n+\t(zero_extend:EXTQI (match_dup 1)))\n+   (set (match_dup 2)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:DI (match_operand:QHSI 1 \"gpc_reg_operand\" \"\"))\n+(define_insn_and_split \"*zero_extendqi<mode>2_dot2\"\n+  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (zero_extend:EXTQI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 2 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 2)\n-\t(zero_extend:DI (match_dup 1)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 2)\n+   (set (match_operand:EXTQI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:EXTQI (match_dup 1)))]\n+  \"rs6000_gen_cell_microcode\"\n+  \"@\n+   andi. %0,%1,0xff\n+   #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n+  [(set (match_dup 0)\n+\t(zero_extend:EXTQI (match_dup 1)))\n+   (set (match_dup 2)\n+\t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+\n+(define_insn \"zero_extendhi<mode>2\"\n+  [(set (match_operand:EXTHI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:EXTHI (match_operand:HI 1 \"reg_or_mem_operand\" \"m,r\")))]\n+  \"\"\n+  \"@\n+   lhz%U1%X1 %0,%1\n+   rlwinm %0,%1,0,0xffff\"\n+  [(set_attr \"type\" \"load,shift\")])\n \n-(define_insn \"*zero_extend<mode>di2_internal3\"\n+(define_insn_and_split \"*zero_extendhi<mode>2_dot\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:DI (match_operand:QHSI 1 \"gpc_reg_operand\" \"r,r\"))\n+\t(compare:CC (zero_extend:EXTHI (match_operand:HI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:DI (match_dup 1)))]\n-  \"TARGET_64BIT\"\n+   (clobber (match_scratch:EXTHI 0 \"=r,r\"))]\n+  \"rs6000_gen_cell_microcode\"\n   \"@\n-   rldicl. %0,%1,0,<dbits>\n+   andi. %0,%1,0xffff\n    #\"\n-  [(set_attr \"type\" \"shift\")\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n+  [(set (match_dup 0)\n+\t(zero_extend:EXTHI (match_dup 1)))\n+   (set (match_dup 2)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 2 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:DI (match_operand:QHSI 1 \"gpc_reg_operand\" \"\"))\n+(define_insn_and_split \"*zero_extendhi<mode>2_dot2\"\n+  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (zero_extend:EXTHI (match_operand:HI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(zero_extend:DI (match_dup 1)))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n+   (set (match_operand:EXTHI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:EXTHI (match_dup 1)))]\n+  \"rs6000_gen_cell_microcode\"\n+  \"@\n+   andi. %0,%1,0xffff\n+   #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n   [(set (match_dup 0)\n-\t(zero_extend:DI (match_dup 1)))\n+\t(zero_extend:EXTHI (match_dup 1)))\n    (set (match_dup 2)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n-(define_insn \"*zero_extendsidi2_lfiwzx\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,??wj,!wz,!wu\")\n-\t(zero_extend:DI (match_operand:SI 1 \"reg_or_mem_operand\" \"m,r,r,Z,Z\")))]\n-  \"TARGET_POWERPC64 && TARGET_LFIWZX\"\n+\n+(define_insn \"zero_extendsi<mode>2\"\n+  [(set (match_operand:EXTSI 0 \"gpc_reg_operand\" \"=r,r,??wj,!wz,!wu\")\n+\t(zero_extend:EXTSI (match_operand:SI 1 \"reg_or_mem_operand\" \"m,r,r,Z,Z\")))]\n+  \"\"\n   \"@\n    lwz%U1%X1 %0,%1\n    rldicl %0,%1,0,32\n@@ -645,6 +684,48 @@\n    lxsiwzx %x0,%y1\"\n   [(set_attr \"type\" \"load,shift,mffgpr,fpload,fpload\")])\n \n+(define_insn_and_split \"*zero_extendsi<mode>2_dot\"\n+  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (zero_extend:EXTSI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:EXTSI 0 \"=r,r\"))]\n+  \"rs6000_gen_cell_microcode\"\n+  \"@\n+   rldicl. %0,%1,0,32\n+   #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n+  [(set (match_dup 0)\n+\t(zero_extend:DI (match_dup 1)))\n+   (set (match_dup 2)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_insn_and_split \"*zero_extendsi<mode>2_dot2\"\n+  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (zero_extend:EXTSI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n+\t\t    (const_int 0)))\n+   (set (match_operand:EXTSI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:EXTSI (match_dup 1)))]\n+  \"rs6000_gen_cell_microcode\"\n+  \"@\n+   rldicl. %0,%1,0,32\n+   #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[2], CCmode)\"\n+  [(set (match_dup 0)\n+\t(zero_extend:EXTSI (match_dup 1)))\n+   (set (match_dup 2)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+\n (define_insn \"extendqidi2\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(sign_extend:DI (match_operand:QI 1 \"gpc_reg_operand\" \"r\")))]\n@@ -867,74 +948,6 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_expand \"zero_extendqisi2\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(zero_extend:SI (match_operand:QI 1 \"gpc_reg_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:SI (match_operand:QI 1 \"reg_or_mem_operand\" \"m,r\")))]\n-  \"\"\n-  \"@\n-   lbz%U1%X1 %0,%1\n-   rlwinm %0,%1,0,0xff\"\n-  [(set_attr \"type\" \"load,shift\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:SI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 2 \"=r,r\"))]\n-  \"\"\n-  \"@\n-   andi. %2,%1,0xff\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:SI (match_operand:QI 1 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 2 \"\"))]\n-  \"reload_completed\"\n-  [(set (match_dup 2)\n-\t(zero_extend:SI (match_dup 1)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 2)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:SI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:SI (match_dup 1)))]\n-  \"\"\n-  \"@\n-   andi. %0,%1,0xff\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 2 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:SI (match_operand:QI 1 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(zero_extend:SI (match_dup 1)))]\n-  \"reload_completed\"\n-  [(set (match_dup 0)\n-\t(zero_extend:SI (match_dup 1)))\n-   (set (match_dup 2)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n \n (define_insn \"extendqisi2\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -995,68 +1008,6 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:HI (match_operand:QI 1 \"reg_or_mem_operand\" \"m,r\")))]\n-  \"\"\n-  \"@\n-   lbz%U1%X1 %0,%1\n-   rlwinm %0,%1,0,0xff\"\n-  [(set_attr \"type\" \"load,shift\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:HI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:HI 2 \"=r,r\"))]\n-  \"\"\n-  \"@\n-   andi. %2,%1,0xff\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:HI (match_operand:QI 1 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:HI 2 \"\"))]\n-  \"reload_completed\"\n-  [(set (match_dup 2)\n-\t(zero_extend:HI (match_dup 1)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 2)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:HI (match_operand:QI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:HI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:HI (match_dup 1)))]\n-  \"\"\n-  \"@\n-   andi. %0,%1,0xff\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 2 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:HI (match_operand:QI 1 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:HI 0 \"gpc_reg_operand\" \"\")\n-\t(zero_extend:HI (match_dup 1)))]\n-  \"reload_completed\"\n-  [(set (match_dup 0)\n-\t(zero_extend:HI (match_dup 1)))\n-   (set (match_dup 2)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n \n (define_insn \"extendqihi2\"\n   [(set (match_operand:HI 0 \"gpc_reg_operand\" \"=r\")\n@@ -1117,74 +1068,6 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_expand \"zero_extendhisi2\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(zero_extend:SI (match_operand:HI 1 \"gpc_reg_operand\" \"\")))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:SI (match_operand:HI 1 \"reg_or_mem_operand\" \"m,r\")))]\n-  \"\"\n-  \"@\n-   lhz%U1%X1 %0,%1\n-   rlwinm %0,%1,0,0xffff\"\n-  [(set_attr \"type\" \"load,shift\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:SI (match_operand:HI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 2 \"=r,r\"))]\n-  \"\"\n-  \"@\n-   andi. %2,%1,0xffff\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:SI (match_operand:HI 1 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 2 \"\"))]\n-  \"reload_completed\"\n-  [(set (match_dup 2)\n-\t(zero_extend:SI (match_dup 1)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 2)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (zero_extend:SI (match_operand:HI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(zero_extend:SI (match_dup 1)))]\n-  \"\"\n-  \"@\n-   andi. %0,%1,0xffff\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 2 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (zero_extend:SI (match_operand:HI 1 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(zero_extend:SI (match_dup 1)))]\n-  \"reload_completed\"\n-  [(set (match_dup 0)\n-\t(zero_extend:SI (match_dup 1)))\n-   (set (match_dup 2)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n \n (define_expand \"extendhisi2\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")"}]}