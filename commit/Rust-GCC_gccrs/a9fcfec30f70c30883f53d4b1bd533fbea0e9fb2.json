{"sha": "a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlmY2ZlYzMwZjcwYzMwODgzZjUzZDRiMWJkNTMzZmJlYTBlOWZiMg==", "commit": {"author": {"name": "Hongtao Liu", "email": "liuhongt@gcc.gnu.org", "date": "2019-08-20T07:06:03Z"}, "committer": {"name": "Hongtao Liu", "email": "liuhongt@gcc.gnu.org", "date": "2019-08-20T07:06:03Z"}, "message": "Add TIGERLAKE and COOPERLAKE to GCC.\n\n2019-08-20  Lili Cui  <lili.cui@intel.com>\n\ngcc/\n\t* common/config/i386/i386-common.c\n\t(processor_names): Add tigerlake and cooperlake.\n\t(processor_alias_table): Add tigerlake and cooperlake.\n\t* config.gcc: Add -march=tigerlake and cooperlake.\n\t* config/i386/driver-i386.c\n\t(host_detect_local_cpu): Detect tigerlake and cooperlake.\n\tAdd \"has_avx\" to classify processor.\n\t* config/i386/i386-builtins.c (processor_model):\n\tAdd M_INTEL_COREI7_TIGERLAKE and M_INTEL_COREI7_COOPERLAKE.\n\t(arch_names_table): Add tigerlake and cooperlake.\n\t(get_builtin_code_for_version) : Handle PROCESSOR_TIGERLAKE and\n\tPROCESSOR_COOPERLAKE.\n\t* config/i386/i386-c.c\n\t(ix86_target_macros_internal): Handle tigerlake and cooperlake.\n\t* config/i386/i386-options.c\n\t(m_TIGERLAKE)  : Define.\n\t(m_COOPERLAKE) : Ditto.\n\t(m_CORE_AVX512): Ditto.\n\t(processor_cost_table): Add cascadelake.\n\t(ix86_option_override_internal): Hadle PTA_MOVDIRI, PTA_MOVDIR64B.\n\t* config/i386/i386.h\n\t(ix86_size_cost) : Define TARGET_TIGERLAKE and TARGET_COOPERLAKE.\n\t(processor_type) : Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n\t(PTA_MOVDIRI): Ditto.\n\t(PTA_MOVDIR64B): Ditto.\n\t(PTA_COOPERLAKE) : Ditto.\n\t(PTA_TIGERLAKE)  : Ditto.\n\t(processor_type) : Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n\t* doc/extend.texi: Add tigerlake and cooperlake.\n\t* doc/invoke.texi: Add tigerlake and cooperlake.\n\ngcc/testsuite/\n\t* gcc.target/i386/funcspec-56.inc: Handle new march.\n\t* g++.target/i386/mv16.C: Handle new march\n\nlibgcc/\n\t* config/i386/cpuinfo.h: Add INTEL_COREI7_TIGERLAKE and\n\tINTEL_COREI7_COOPERLAKE.\n\nFrom-SVN: r274693", "tree": {"sha": "fbdd7e5e131a54cc406e62442057ba877ece7492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbdd7e5e131a54cc406e62442057ba877ece7492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/comments", "author": null, "committer": null, "parents": [{"sha": "607a71e842c2e61c3443ba73bce23a6a76e2527c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/607a71e842c2e61c3443ba73bce23a6a76e2527c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/607a71e842c2e61c3443ba73bce23a6a76e2527c"}], "stats": {"total": 202, "additions": 171, "deletions": 31}, "files": [{"sha": "5879431ca935c3b525b27a9ecf44100c504f4be0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -1,3 +1,36 @@\n+2019-08-20  Lili Cui  <lili.cui@intel.com>\n+\n+\t* common/config/i386/i386-common.c\n+\t(processor_names): Add tigerlake and cooperlake.\n+\t(processor_alias_table): Add tigerlake and cooperlake.\n+\t* config.gcc: Add -march=tigerlake and cooperlake.\n+\t* config/i386/driver-i386.c\n+\t(host_detect_local_cpu): Detect tigerlake and cooperlake.\n+\tAdd \"has_avx\" to classify processor.\n+\t* config/i386/i386-builtins.c (processor_model) :\n+\tAdd M_INTEL_COREI7_TIGERLAKE and M_INTEL_COREI7_COOPERLAKE.\n+\t(arch_names_table): Add tigerlake and cooperlake.\n+\t(get_builtin_code_for_version) : Handle PROCESSOR_TIGERLAKE\n+\tand PROCESSOR_COOPERLAKE.\n+\t* config/i386/i386-c.c\n+\t(ix86_target_macros_internal): Handle tigerlake and cooperlake.\n+\t* config/i386/i386-options.c\n+\t(m_TIGERLAKE)  : Define.\n+\t(m_COOPERLAKE) : Ditto.\n+\t(m_CORE_AVX512): Ditto.\n+\t(processor_cost_table): Add cascadelake.\n+\t(ix86_option_override_internal): Hadle PTA_MOVDIRI, PTA_MOVDIR64B.\n+\t* config/i386/i386.h\n+\t(ix86_size_cost) : Define TARGET_TIGERLAKE and TARGET_COOPERLAKE.\n+\t(processor_type) : Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n+\t(PTA_MOVDIRI): Ditto.\n+\t(PTA_MOVDIR64B): Ditto.\n+\t(PTA_COOPERLAKE) : Ditto.\n+\t(PTA_TIGERLAKE)  : Ditto.\n+\t(processor_type) : Add PROCESSOR_TIGERLAKE and PROCESSOR_COOPERLAKE.\n+\t* doc/extend.texi: Add tigerlake and cooperlake.\n+\t* doc/invoke.texi: Add tigerlake and cooperlake.\n+\n 2019-08-20  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/install.texi (Specific, alpha): Remove note to use"}, {"sha": "5cb1dccee45d95253318fb95ee0fcba5497583fc", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -1566,6 +1566,8 @@ const char *const processor_names[] =\n   \"icelake-client\",\n   \"icelake-server\",\n   \"cascadelake\",\n+  \"tigerlake\",\n+  \"cooperlake\",\n   \"intel\",\n   \"geode\",\n   \"k6\",\n@@ -1648,6 +1650,8 @@ const pta processor_alias_table[] =\n     PTA_ICELAKE_SERVER},\n   {\"cascadelake\", PROCESSOR_CASCADELAKE, CPU_HASWELL,\n     PTA_CASCADELAKE},\n+  {\"tigerlake\", PROCESSOR_TIGERLAKE, CPU_HASWELL, PTA_TIGERLAKE},\n+  {\"cooperlake\", PROCESSOR_COOPERLAKE, CPU_HASWELL, PTA_COOPERLAKE},\n   {\"bonnell\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n   {\"atom\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n   {\"silvermont\", PROCESSOR_SILVERMONT, CPU_SLM, PTA_SILVERMONT},"}, {"sha": "11a8ac73e12aec756176fa68b1de3d4933aee9f1", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -664,7 +664,8 @@ bdver3 bdver4 znver1 znver2 btver1 btver2 k8 k8-sse3 opteron \\\n opteron-sse3 nocona core2 corei7 corei7-avx core-avx-i core-avx2 atom \\\n slm nehalem westmere sandybridge ivybridge haswell broadwell bonnell \\\n silvermont knl knm skylake-avx512 cannonlake icelake-client icelake-server \\\n-skylake goldmont goldmont-plus tremont cascadelake x86-64 native\"\n+skylake goldmont goldmont-plus tremont cascadelake tigerlake cooperlake x86-64 \\\n+native\"\n \n # Additional x86 processors supported by --with-cpu=.  Each processor\n # MUST be separated by exactly one space."}, {"sha": "8e8b4d219504c41af71ee01b32c12c4ff4eceac8", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 37, "deletions": 28, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -863,36 +863,45 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t  if (arch)\n \t    {\n \t      /* This is unknown family 0x6 CPU.  */\n-\t      /* Assume Ice Lake Server.  */\n-\t      if (has_wbnoinvd)\n-\t\tcpu = \"icelake-server\";\n-\t      /* Assume Ice Lake.  */\n-\t      else if (has_gfni)\n-\t\tcpu = \"icelake-client\";\n-\t      /* Assume Cannon Lake.  */\n-\t      else if (has_avx512vbmi)\n-\t\tcpu = \"cannonlake\";\n-\t      /* Assume Knights Mill.  */\n-\t      else if (has_avx5124vnniw)\n-\t\tcpu = \"knm\";\n-\t      /* Assume Knights Landing.  */\n-\t      else if (has_avx512er)\n-\t\tcpu = \"knl\";\n-\t      /* Assume Skylake with AVX-512.  */\n-\t      else if (has_avx512f)\n-\t\tcpu = \"skylake-avx512\";\n-\t      /* Assume Skylake.  */\n-\t      else if (has_clflushopt)\n-\t\tcpu = \"skylake\";\n-\t      /* Assume Broadwell.  */\n-\t      else if (has_adx)\n-\t\tcpu = \"broadwell\";\n-\t      else if (has_avx2)\n+\t      if (has_avx)\n+\t      {\n+\t\t/* Assume Tiger Lake */\n+\t\tif (has_avx512vp2intersect)\n+\t\t  cpu = \"tigerlake\";\n+\t\t/* Assume Cooper Lake */\n+\t\telse if (has_avx512bf16)\n+\t\t  cpu = \"cooperlake\";\n+\t\t/* Assume Ice Lake Server.  */\n+\t\telse if (has_wbnoinvd)\n+\t\t  cpu = \"icelake-server\";\n+\t\t/* Assume Ice Lake.  */\n+\t\telse if (has_avx512bitalg)\n+\t\t  cpu = \"icelake-client\";\n+\t\t/* Assume Cannon Lake.  */\n+\t\telse if (has_avx512vbmi)\n+\t\t  cpu = \"cannonlake\";\n+\t\t/* Assume Knights Mill.  */\n+\t\telse if (has_avx5124vnniw)\n+\t\t  cpu = \"knm\";\n+\t\t/* Assume Knights Landing.  */\n+\t\telse if (has_avx512er)\n+\t\t  cpu = \"knl\";\n+\t\t/* Assume Skylake with AVX-512.  */\n+\t\telse if (has_avx512f)\n+\t\t  cpu = \"skylake-avx512\";\n+\t\t/* Assume Skylake.  */\n+\t\telse if (has_clflushopt)\n+\t\t  cpu = \"skylake\";\n+\t\t/* Assume Broadwell.  */\n+\t\telse if (has_adx)\n+\t\t  cpu = \"broadwell\";\n+\t\telse if (has_avx2)\n \t\t/* Assume Haswell.  */\n-\t\tcpu = \"haswell\";\n-\t      else if (has_avx)\n+\t\t  cpu = \"haswell\";\n+\t\telse\n \t\t/* Assume Sandy Bridge.  */\n-\t\tcpu = \"sandybridge\";\n+\t\t  cpu = \"sandybridge\";\t      \n+\t      }\n \t      else if (has_sse4_2)\n \t\t{\n \t\t  if (has_gfni)"}, {"sha": "5b388ec7910e4d84c0bae914011a5d472bfc102e", "filename": "gcc/config/i386/i386-builtins.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.c?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -1972,7 +1972,9 @@ enum processor_model\n   M_INTEL_COREI7_ICELAKE_CLIENT,\n   M_INTEL_COREI7_ICELAKE_SERVER,\n   M_AMDFAM17H_ZNVER2,\n-  M_INTEL_COREI7_CASCADELAKE\n+  M_INTEL_COREI7_CASCADELAKE,\n+  M_INTEL_COREI7_TIGERLAKE,\n+  M_INTEL_COREI7_COOPERLAKE\n };\n \n struct _arch_names_table\n@@ -2001,6 +2003,8 @@ static const _arch_names_table arch_names_table[] =\n   {\"icelake-client\", M_INTEL_COREI7_ICELAKE_CLIENT},\n   {\"icelake-server\", M_INTEL_COREI7_ICELAKE_SERVER},\n   {\"cascadelake\", M_INTEL_COREI7_CASCADELAKE},\n+  {\"tigerlake\", M_INTEL_COREI7_TIGERLAKE},\n+  {\"cooperlake\", M_INTEL_COREI7_COOPERLAKE},\n   {\"bonnell\", M_INTEL_BONNELL},\n   {\"silvermont\", M_INTEL_SILVERMONT},\n   {\"goldmont\", M_INTEL_GOLDMONT},\n@@ -2194,6 +2198,14 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n \t      arg_str = \"cascadelake\";\n \t      priority = P_PROC_AVX512F;\n \t      break;\n+\t    case PROCESSOR_TIGERLAKE:\n+\t      arg_str = \"tigerlake\";\n+\t      priority = P_PROC_AVX512F;\n+\t      break;\n+\t    case PROCESSOR_COOPERLAKE:\n+\t      arg_str = \"cooperlake\";\n+\t      priority = P_PROC_AVX512F;\n+\t      break;\n \t    case PROCESSOR_BONNELL:\n \t      arg_str = \"bonnell\";\n \t      priority = P_PROC_SSSE3;"}, {"sha": "3f054ca8faad00ca22a8022b38525926c7454cad", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -222,6 +222,13 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       def_or_undef (parse_in, \"__cascadelake\");\n       def_or_undef (parse_in, \"__cascadelake__\");\n       break;\n+    case PROCESSOR_TIGERLAKE:\n+      def_or_undef (parse_in, \"__tigerlake\");\n+      def_or_undef (parse_in, \"__tigerlake__\");\n+      break;\n+    case PROCESSOR_COOPERLAKE:\n+      def_or_undef (parse_in, \"__cooperlake\");\n+      def_or_undef (parse_in, \"__cooperlake__\");\n     /* use PROCESSOR_max to not set/unset the arch macro.  */\n     case PROCESSOR_max:\n       break;\n@@ -370,6 +377,12 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_CASCADELAKE:\n       def_or_undef (parse_in, \"__tune_cascadelake__\");\n       break;\n+    case PROCESSOR_TIGERLAKE:\n+      def_or_undef (parse_in, \"__tune_tigerlake__\");\n+      break;\n+    case PROCESSOR_COOPERLAKE:\n+      def_or_undef (parse_in, \"__tune_cooperlake__\");\n+      break;\n     case PROCESSOR_INTEL:\n     case PROCESSOR_GENERIC:\n       break;"}, {"sha": "703e44ee1dc3a8d4743b0405ff28f1743bd72e10", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -121,8 +121,11 @@ along with GCC; see the file COPYING3.  If not see\n #define m_ICELAKE_CLIENT (HOST_WIDE_INT_1U<<PROCESSOR_ICELAKE_CLIENT)\n #define m_ICELAKE_SERVER (HOST_WIDE_INT_1U<<PROCESSOR_ICELAKE_SERVER)\n #define m_CASCADELAKE (HOST_WIDE_INT_1U<<PROCESSOR_CASCADELAKE)\n+#define m_TIGERLAKE (HOST_WIDE_INT_1U<<PROCESSOR_TIGERLAKE)\n+#define m_COOPERLAKE (HOST_WIDE_INT_1U<<PROCESSOR_COOPERLAKE)\n #define m_CORE_AVX512 (m_SKYLAKE_AVX512 | m_CANNONLAKE \\\n-\t\t       | m_ICELAKE_CLIENT | m_ICELAKE_SERVER | m_CASCADELAKE)\n+\t\t       | m_ICELAKE_CLIENT | m_ICELAKE_SERVER | m_CASCADELAKE \\\n+\t\t       | m_TIGERLAKE | m_COOPERLAKE)\n #define m_CORE_AVX2 (m_HASWELL | m_SKYLAKE | m_CORE_AVX512)\n #define m_CORE_ALL (m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE | m_CORE_AVX2)\n #define m_GOLDMONT (HOST_WIDE_INT_1U<<PROCESSOR_GOLDMONT)\n@@ -627,6 +630,8 @@ static const struct processor_costs *processor_cost_table[] =\n   &skylake_cost,\n   &skylake_cost,\n   &skylake_cost,\n+  &skylake_cost,\n+  &skylake_cost,\n   &intel_cost,\n   &geode_cost,\n   &k6_cost,\n@@ -2049,6 +2054,12 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags2_explicit\n \t\t & OPTION_MASK_ISA_AVX512BF16))\n \t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512BF16;\n+        if (((processor_alias_table[i].flags & PTA_MOVDIRI) != 0)\n+            && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_MOVDIRI))\n+          opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MOVDIRI;\n+        if (((processor_alias_table[i].flags & PTA_MOVDIR64B) != 0)\n+            && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_MOVDIR64B))\n+          opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MOVDIR64B;\n \tif (((processor_alias_table[i].flags & PTA_SGX) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_SGX))\n \t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_SGX;"}, {"sha": "167b73e85fad516aa115b665ed59e60115ce8227", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -440,6 +440,8 @@ extern const struct processor_costs ix86_size_cost;\n #define TARGET_ICELAKE_CLIENT (ix86_tune == PROCESSOR_ICELAKE_CLIENT)\n #define TARGET_ICELAKE_SERVER (ix86_tune == PROCESSOR_ICELAKE_SERVER)\n #define TARGET_CASCADELAKE (ix86_tune == PROCESSOR_CASCADELAKE)\n+#define TARGET_TIGERLAKE (ix86_tune == PROCESSOR_TIGERLAKE)\n+#define TARGET_COOPERLAKE (ix86_tune == PROCESSOR_COOPERLAKE)\n #define TARGET_INTEL (ix86_tune == PROCESSOR_INTEL)\n #define TARGET_GENERIC (ix86_tune == PROCESSOR_GENERIC)\n #define TARGET_AMDFAM10 (ix86_tune == PROCESSOR_AMDFAM10)\n@@ -2303,6 +2305,8 @@ enum processor_type\n   PROCESSOR_ICELAKE_CLIENT,\n   PROCESSOR_ICELAKE_SERVER,\n   PROCESSOR_CASCADELAKE,\n+  PROCESSOR_TIGERLAKE,\n+  PROCESSOR_COOPERLAKE,\n   PROCESSOR_INTEL,\n   PROCESSOR_GEODE,\n   PROCESSOR_K6,\n@@ -2402,6 +2406,8 @@ const wide_int_bitmask PTA_AVX512VP2INTERSECT (0, HOST_WIDE_INT_1U << 9);\n const wide_int_bitmask PTA_WAITPKG (0, HOST_WIDE_INT_1U << 9);\n const wide_int_bitmask PTA_PTWRITE (0, HOST_WIDE_INT_1U << 10);\n const wide_int_bitmask PTA_AVX512BF16 (0, HOST_WIDE_INT_1U << 11);\n+const wide_int_bitmask PTA_MOVDIRI(0, HOST_WIDE_INT_1U << 13);\n+const wide_int_bitmask PTA_MOVDIR64B(0, HOST_WIDE_INT_1U << 14);\n \n const wide_int_bitmask PTA_CORE2 = PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2\n   | PTA_SSE3 | PTA_SSSE3 | PTA_CX16 | PTA_FXSR;\n@@ -2422,6 +2428,7 @@ const wide_int_bitmask PTA_SKYLAKE_AVX512 = PTA_SKYLAKE | PTA_AVX512F\n   | PTA_AVX512CD | PTA_AVX512VL | PTA_AVX512BW | PTA_AVX512DQ | PTA_PKU\n   | PTA_CLWB;\n const wide_int_bitmask PTA_CASCADELAKE = PTA_SKYLAKE_AVX512 | PTA_AVX512VNNI;\n+const wide_int_bitmask PTA_COOPERLAKE = PTA_CASCADELAKE | PTA_AVX512BF16;\n const wide_int_bitmask PTA_CANNONLAKE = PTA_SKYLAKE | PTA_AVX512F\n   | PTA_AVX512CD | PTA_AVX512VL | PTA_AVX512BW | PTA_AVX512DQ | PTA_PKU\n   | PTA_AVX512VBMI | PTA_AVX512IFMA | PTA_SHA;\n@@ -2430,6 +2437,8 @@ const wide_int_bitmask PTA_ICELAKE_CLIENT = PTA_CANNONLAKE | PTA_AVX512VNNI\n   | PTA_RDPID | PTA_CLWB;\n const wide_int_bitmask PTA_ICELAKE_SERVER = PTA_ICELAKE_CLIENT | PTA_PCONFIG\n   | PTA_WBNOINVD;\n+const wide_int_bitmask PTA_TIGERLAKE = PTA_ICELAKE_CLIENT | PTA_MOVDIRI\n+  | PTA_MOVDIR64B | PTA_AVX512VP2INTERSECT;\n const wide_int_bitmask PTA_KNL = PTA_BROADWELL | PTA_AVX512PF | PTA_AVX512ER\n   | PTA_AVX512F | PTA_AVX512CD;\n const wide_int_bitmask PTA_BONNELL = PTA_CORE2 | PTA_MOVBE;"}, {"sha": "235be99abcbb70530c60f8a03cda3e4e8a2ebc0c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -21489,6 +21489,12 @@ Intel Core i7 Ice Lake Server CPU.\n @item cascadelake\n Intel Core i7 Cascadelake CPU.\n \n+@item tigerlake\n+Intel Core i7 Tigerlake CPU.\n+\n+@item cooperlake\n+Intel Core i7 Cooperlake CPU.\n+\n @item bonnell\n Intel Atom Bonnell CPU.\n "}, {"sha": "08e6b5223e5b7ba83743f16125ff44d26ddf90d9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -27559,6 +27559,22 @@ SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE, RDRND, FMA, BMI,\n BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC, XSAVES, AVX512F, CLWB,\n AVX512VL, AVX512BW, AVX512DQ, AVX512CD and AVX512VNNI instruction set support.\n \n+@item cooperlake\n+Intel cooperlake CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2, SSE3, SSSE3,\n+SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE, RDRND, FMA, BMI,\n+BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC, XSAVES, AVX512F, CLWB,\n+AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VNNI and AVX512BF16 instruction\n+set support.\n+\n+@item tigerlake\n+Intel Tigerlake CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2, SSE3, SSSE3,\n+SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE, RDRND, FMA, BMI,\n+BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC, XSAVES, AVX512F,\n+AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VBMI, AVX512IFMA, SHA, CLWB, UMIP,\n+RDPID, GFNI, AVX512VBMI2, AVX512VPOPCNTDQ, AVX512BITALG, AVX512VNNI, VPCLMULQDQ,\n+VAES, PCONFIG, WBNOINVD, MOVDIRI, MOVDIR64B and  AVX512VP2INTERSECT instruction\n+set support.\n+\n @item k6\n AMD K6 CPU with MMX instruction set support.\n "}, {"sha": "7f24b8d4996fc69e75607b13de60f8a15c36453c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -1,3 +1,8 @@\n+2019-08-20  Lili Cui  <lili.cui@intel.com>\n+\n+\t* gcc.target/i386/funcspec-56.inc: Handle new march.\n+\t* g++.target/i386/mv16.C: Handle new march\n+\n 2019-08-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR middle-end/89544"}, {"sha": "422b9cd684269d054d8edc4ae68fe1b02189c90f", "filename": "gcc/testsuite/g++.target/i386/mv16.C", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -72,6 +72,14 @@ int __attribute__ ((target(\"arch=cascadelake\"))) foo () {\n   return 19;\n }\n \n+int __attribute__ ((target(\"arch=tigerlake\"))) foo () {\n+  return 20;\n+}\n+\n+int __attribute__ ((target(\"arch=cooperlake\"))) foo () {\n+  return 21;\n+}\n+\n int main ()\n {\n   int val = foo ();\n@@ -100,6 +108,10 @@ int main ()\n     assert (val == 18);\n   else if (__builtin_cpu_is (\"cascadelake\"))\n     assert (val == 19);\n+  else if (__builtin_cpu_is (\"tigerlake\"))\n+    assert (val == 20);\n+  else if (__builtin_cpu_is (\"cooperlake\"))\n+    assert (val == 21);\n   else\n     assert (val == 0);\n "}, {"sha": "200d27220df605e11c249e263f409fbabb918048", "filename": "gcc/testsuite/gcc.target/i386/funcspec-56.inc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -151,6 +151,8 @@ extern void test_arch_cannonlake (void)\t\t__attribute__((__target__(\"arch=cannonl\n extern void test_arch_icelake_client (void)\t__attribute__((__target__(\"arch=icelake-client\")));\n extern void test_arch_icelake_server (void)\t__attribute__((__target__(\"arch=icelake-server\")));\n extern void test_arch_cascadelake (void)\t__attribute__((__target__(\"arch=cascadelake\")));\n+extern void test_arch_tigerlake (void)          __attribute__((__target__(\"arch=tigerlake\")));\n+extern void test_arch_cooperlake (void)         __attribute__((__target__(\"arch=cooperlake\")));\n extern void test_arch_k8 (void)\t\t\t__attribute__((__target__(\"arch=k8\")));\n extern void test_arch_k8_sse3 (void)\t\t__attribute__((__target__(\"arch=k8-sse3\")));\n extern void test_arch_opteron (void)\t\t__attribute__((__target__(\"arch=opteron\")));"}, {"sha": "c793ea4b231cb02a9dc01dbd837c0e5e972139f6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -1,3 +1,8 @@\n+2019-08-20  Lili Cui  <lilicui@intel.com>\n+\n+\t* config/i386/cpuinfo.h: Add INTEL_COREI7_TIGERLAKE and\n+\tINTEL_COREI7_COOPERLAKE.\n+\n 2019-07-31  Matt Thomas  <matt@3am-software.com>\n \t    Nick Hudson <nick@nthcliff.demon.co.uk>\n \t    Matthew Green <mrg@eterna.com.au>"}, {"sha": "67209d5ba4fbc6214f086afcd436e42f6a730e56", "filename": "libgcc/config/i386/cpuinfo.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h?ref=a9fcfec30f70c30883f53d4b1bd533fbea0e9fb2", "patch": "@@ -77,6 +77,8 @@ enum processor_subtypes\n   INTEL_COREI7_ICELAKE_SERVER,\n   AMDFAM17H_ZNVER2,\n   INTEL_COREI7_CASCADELAKE,\n+  INTEL_COREI7_TIGERLAKE,\n+  INTEL_COREI7_COOPERLAKE,\n   CPU_SUBTYPE_MAX\n };\n "}]}