{"sha": "749469789ffb525395b9e1a7b26cc5f78de59411", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ5NDY5Nzg5ZmZiNTI1Mzk1YjllMWE3YjI2Y2M1Zjc4ZGU1OTQxMQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-03-28T11:14:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-03-28T11:14:44Z"}, "message": "re PR tree-optimization/56695 (ICE in expand_vec_cond_expr, at optabs.c:6751)\n\nPR tree-optimization/56695\n* tree-vect-stmts.c (vectorizable_condition): Unconditionally\nbuild signed result of a vector comparison.\n* tree-cfg.c (verify_gimple_comparison): Check that a result\nof a vector comparison has signed type.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r197192", "tree": {"sha": "48cd0e9b1cfc8507af1e2d88888853578ccd960d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48cd0e9b1cfc8507af1e2d88888853578ccd960d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/749469789ffb525395b9e1a7b26cc5f78de59411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749469789ffb525395b9e1a7b26cc5f78de59411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/749469789ffb525395b9e1a7b26cc5f78de59411", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749469789ffb525395b9e1a7b26cc5f78de59411/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "129677c1cf80e2fe333d21dbcfec8ca4e0a39d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129677c1cf80e2fe333d21dbcfec8ca4e0a39d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/129677c1cf80e2fe333d21dbcfec8ca4e0a39d4e"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "327a71c936daf9d95efd83a81eedb869488bbf06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=749469789ffb525395b9e1a7b26cc5f78de59411", "patch": "@@ -1,3 +1,12 @@\n+2013-03-28  Marek Polacek  <polacek@redhat.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56695\n+\t* tree-vect-stmts.c (vectorizable_condition): Unconditionally\n+\tbuild signed result of a vector comparison.\n+\t* tree-cfg.c (verify_gimple_comparison): Check that a result\n+\tof a vector comparison has signed type.\n+\n 2013-03-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/37021"}, {"sha": "08b9e59ed825a2eb0b31af5d6c3e3ffde2015b04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=749469789ffb525395b9e1a7b26cc5f78de59411", "patch": "@@ -1,3 +1,8 @@\n+2013-03-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/56695\n+\t* gcc.dg/vect/pr56695.c: New test.\n+\n 2013-03-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/37021"}, {"sha": "8b997c2990c793ce7d1680638b18c5aa395ef75a", "filename": "gcc/testsuite/gcc.dg/vect/pr56695.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr56695.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr56695.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr56695.c?ref=749469789ffb525395b9e1a7b26cc5f78de59411", "patch": "@@ -0,0 +1,14 @@\n+/* PR tree-optimization/56695 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+\n+int a, b, i;\n+\n+void\n+f (void)\n+{\n+  for (i = 0; i < 8; ++i)\n+    a |= !(i |= b %= 1);\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "3843b139eff968e16a103e909318d7b3c268e19e", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=749469789ffb525395b9e1a7b26cc5f78de59411", "patch": "@@ -3191,7 +3191,10 @@ verify_gimple_comparison (tree type, tree op0, tree op1)\n \n       if (TYPE_VECTOR_SUBPARTS (type) != TYPE_VECTOR_SUBPARTS (op0_type)\n \t  || (GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (type)))\n-\t      != GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (op0_type)))))\n+\t      != GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (op0_type))))\n+\t  /* The result of a vector comparison is of signed\n+\t     integral type.  */\n+\t  || TYPE_UNSIGNED (TREE_TYPE (type)))\n         {\n           error (\"invalid vector comparison resulting type\");\n           debug_generic_expr (type);"}, {"sha": "9cadc50a8bb26e74c9c6956bdc6f09b9cfaf4705", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749469789ffb525395b9e1a7b26cc5f78de59411/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=749469789ffb525395b9e1a7b26cc5f78de59411", "patch": "@@ -5279,7 +5279,7 @@ vectorizable_condition (gimple stmt, gimple_stmt_iterator *gsi,\n   vec<tree> vec_oprnds1 = vNULL;\n   vec<tree> vec_oprnds2 = vNULL;\n   vec<tree> vec_oprnds3 = vNULL;\n-  tree vec_cmp_type = vectype;\n+  tree vec_cmp_type;\n \n   if (slp_node || PURE_SLP_STMT (stmt_info))\n     ncopies = 1;\n@@ -5352,14 +5352,12 @@ vectorizable_condition (gimple stmt, gimple_stmt_iterator *gsi,\n \t   && TREE_CODE (else_clause) != FIXED_CST)\n     return false;\n \n-  if (!INTEGRAL_TYPE_P (TREE_TYPE (vectype)))\n-    {\n-      unsigned int prec = GET_MODE_BITSIZE (TYPE_MODE (TREE_TYPE (vectype)));\n-      tree cmp_type = build_nonstandard_integer_type (prec, 1);\n-      vec_cmp_type = get_same_sized_vectype (cmp_type, vectype);\n-      if (vec_cmp_type == NULL_TREE)\n-\treturn false;\n-    }\n+  unsigned int prec = GET_MODE_BITSIZE (TYPE_MODE (TREE_TYPE (vectype)));\n+  /* The result of a vector comparison should be signed type.  */\n+  tree cmp_type = build_nonstandard_integer_type (prec, 0);\n+  vec_cmp_type = get_same_sized_vectype (cmp_type, vectype);\n+  if (vec_cmp_type == NULL_TREE)\n+    return false;\n \n   if (!vec_stmt)\n     {"}]}