{"sha": "efab3e3a7326ad503532955ccd31f953851e388a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZhYjNlM2E3MzI2YWQ1MDM1MzI5NTVjY2QzMWY5NTM4NTFlMzg4YQ==", "commit": {"author": {"name": "Oliver Browne", "email": "oliverbrowne62@gmail.com", "date": "2019-07-24T18:08:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-07-24T18:08:51Z"}, "message": "gimplify.c (flag_instrument_functions_exclude_p): Include namespace/class information in the printable name.\n\n\t* gimplify.c (flag_instrument_functions_exclude_p): Include\n\tnamespace/class information in the printable name.\n\t* opts.c (add_comma_separated_to_vector): Add NUL terminator\n\tto tokens entered into the vector.\n\nFrom-SVN: r273766", "tree": {"sha": "335ac18f5948d8900ffb1b34d5bd8c775a17d508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/335ac18f5948d8900ffb1b34d5bd8c775a17d508"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efab3e3a7326ad503532955ccd31f953851e388a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efab3e3a7326ad503532955ccd31f953851e388a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efab3e3a7326ad503532955ccd31f953851e388a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efab3e3a7326ad503532955ccd31f953851e388a/comments", "author": null, "committer": null, "parents": [{"sha": "58f3f2c397133235dd7cce69f4a93561005fe391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f3f2c397133235dd7cce69f4a93561005fe391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58f3f2c397133235dd7cce69f4a93561005fe391"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "c6ab1278d549731f3bcda76f44734d7c9b094517", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efab3e3a7326ad503532955ccd31f953851e388a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efab3e3a7326ad503532955ccd31f953851e388a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efab3e3a7326ad503532955ccd31f953851e388a", "patch": "@@ -1,3 +1,10 @@\n+2019-07-24  Oliver Browne  <oliverbrowne62@gmail.com>\n+\n+\t* gimplify.c (flag_instrument_functions_exclude_p): Include\n+\tnamespace/class information in the printable name.\n+\t* opts.c (add_comma_separated_to_vector): Add NUL terminator\n+\tto tokens entered into the vector.\n+\n 2019-07-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-nested.c (build_simple_mem_ref_notrap): New function."}, {"sha": "a40c7ce6663f76cebb6cda3fab7a486d6cd3b42d", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efab3e3a7326ad503532955ccd31f953851e388a/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efab3e3a7326ad503532955ccd31f953851e388a/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=efab3e3a7326ad503532955ccd31f953851e388a", "patch": "@@ -14354,7 +14354,7 @@ flag_instrument_functions_exclude_p (tree fndecl)\n       int i;\n       char *s;\n \n-      name = lang_hooks.decl_printable_name (fndecl, 0);\n+      name = lang_hooks.decl_printable_name (fndecl, 1);\n       FOR_EACH_VEC_ELT (*v, i, s)\n \tif (strstr (name, s) != NULL)\n \t  return true;"}, {"sha": "076d0007c7e3b9bb91bd3261dae58f109cd14dcb", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efab3e3a7326ad503532955ccd31f953851e388a/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efab3e3a7326ad503532955ccd31f953851e388a/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=efab3e3a7326ad503532955ccd31f953851e388a", "patch": "@@ -262,6 +262,8 @@ add_comma_separated_to_vector (void **pvec, const char *arg)\n       else\n \t*w++ = *r++;\n     }\n+\n+  *w = '\\0';\n   if (*token_start != '\\0')\n     v->safe_push (token_start);\n "}]}