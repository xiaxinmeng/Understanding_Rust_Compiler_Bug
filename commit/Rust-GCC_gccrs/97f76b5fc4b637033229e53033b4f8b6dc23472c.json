{"sha": "97f76b5fc4b637033229e53033b4f8b6dc23472c", "node_id": "C_kwDOANBUbNoAKDk3Zjc2YjVmYzRiNjM3MDMzMjI5ZTUzMDMzYjRmOGI2ZGMyMzQ3MmM", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-03-02T17:12:33Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-03-10T16:22:40Z"}, "message": "c++: Don't allow type-constraint auto(x) [PR104752]\n\n104752 points out that\n\n  template<class T>\n  concept C = true;\n  auto y = C auto(1);\n\nis ill-formed as per [dcl.type.auto.deduct]: \"For an explicit type conversion,\nT is the specified type, which shall be auto.\" which doesn't allow\ntype-constraint auto.\n\n\tPR c++/104752\n\ngcc/cp/ChangeLog:\n\n\t* semantics.cc (finish_compound_literal): Disallow auto{x} for\n\tis_constrained_auto.\n\t* typeck2.cc (build_functional_cast_1): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp23/auto-fncast12.C: New test.", "tree": {"sha": "55f2a369772fc52fbba7886a31818f2639c7114b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f2a369772fc52fbba7886a31818f2639c7114b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97f76b5fc4b637033229e53033b4f8b6dc23472c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97f76b5fc4b637033229e53033b4f8b6dc23472c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97f76b5fc4b637033229e53033b4f8b6dc23472c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97f76b5fc4b637033229e53033b4f8b6dc23472c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac8310dd122172bf9d7217e3367da55f9bf9b21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8310dd122172bf9d7217e3367da55f9bf9b21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac8310dd122172bf9d7217e3367da55f9bf9b21b"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "21740064d3dd40712392508a0ec492bb07928fed", "filename": "gcc/cp/semantics.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97f76b5fc4b637033229e53033b4f8b6dc23472c/gcc%2Fcp%2Fsemantics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97f76b5fc4b637033229e53033b4f8b6dc23472c/gcc%2Fcp%2Fsemantics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.cc?ref=97f76b5fc4b637033229e53033b4f8b6dc23472c", "patch": "@@ -3150,7 +3150,13 @@ finish_compound_literal (tree type, tree compound_literal,\n \t   && !AUTO_IS_DECLTYPE (type)\n \t   && CONSTRUCTOR_NELTS (compound_literal) == 1)\n     {\n-      if (cxx_dialect < cxx23)\n+      if (is_constrained_auto (type))\n+\t{\n+\t  if (complain & tf_error)\n+\t    error (\"%<auto{x}%> cannot be constrained\");\n+\t  return error_mark_node;\n+\t}\n+      else if (cxx_dialect < cxx23)\n \tpedwarn (input_location, OPT_Wc__23_extensions,\n \t\t \"%<auto{x}%> only available with \"\n \t\t \"%<-std=c++2b%> or %<-std=gnu++2b%>\");"}, {"sha": "a4c825fc34d8c9dd4d326df514992760971e7154", "filename": "gcc/cp/typeck2.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97f76b5fc4b637033229e53033b4f8b6dc23472c/gcc%2Fcp%2Ftypeck2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97f76b5fc4b637033229e53033b4f8b6dc23472c/gcc%2Fcp%2Ftypeck2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.cc?ref=97f76b5fc4b637033229e53033b4f8b6dc23472c", "patch": "@@ -2308,7 +2308,13 @@ build_functional_cast_1 (location_t loc, tree exp, tree parms,\n \t       && list_length (parms) == 1)\n \t{\n \t  init = TREE_VALUE (parms);\n-\t  if (cxx_dialect < cxx23)\n+\t  if (is_constrained_auto (anode))\n+\t    {\n+\t      if (complain & tf_error)\n+\t\terror_at (loc, \"%<auto(x)%> cannot be constrained\");\n+\t      return error_mark_node;\n+\t    }\n+\t  else if (cxx_dialect < cxx23)\n \t    pedwarn (loc, OPT_Wc__23_extensions,\n \t\t     \"%<auto(x)%> only available with \"\n \t\t     \"%<-std=c++2b%> or %<-std=gnu++2b%>\");"}, {"sha": "2856c2846fcee16e793d5b9f8016e247926b78b5", "filename": "gcc/testsuite/g++.dg/cpp23/auto-fncast12.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97f76b5fc4b637033229e53033b4f8b6dc23472c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fauto-fncast12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97f76b5fc4b637033229e53033b4f8b6dc23472c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fauto-fncast12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fauto-fncast12.C?ref=97f76b5fc4b637033229e53033b4f8b6dc23472c", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/104752\n+// { dg-do compile { target c++23 } }\n+\n+template<class T>\n+concept C = true;\n+auto x = auto(1);     // valid (P0849R8)\n+auto y = C auto(1);   // { dg-error \"cannot be constrained\" }\n+auto z = C auto{1};   // { dg-error \"cannot be constrained\" }"}]}