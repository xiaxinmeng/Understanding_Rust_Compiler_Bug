{"sha": "cab1f90abff5825c2d10bc120c89b68344349505", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiMWY5MGFiZmY1ODI1YzJkMTBiYzEyMGM4OWI2ODM0NDM0OTUwNQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2001-01-30T21:00:22Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2001-01-30T21:00:22Z"}, "message": "2001-01-26  Andrew Haley  <aph@redhat.com>\n\n        (INIT_FPE): Use a direct system call to set the handler.\n\nFrom-SVN: r39354", "tree": {"sha": "27e58e5f86b39ba85e92ce58398d2dc91865e68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e58e5f86b39ba85e92ce58398d2dc91865e68c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cab1f90abff5825c2d10bc120c89b68344349505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab1f90abff5825c2d10bc120c89b68344349505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab1f90abff5825c2d10bc120c89b68344349505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab1f90abff5825c2d10bc120c89b68344349505/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e738f74b939e1330310b7f4f1e489ab7e868c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e738f74b939e1330310b7f4f1e489ab7e868c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e738f74b939e1330310b7f4f1e489ab7e868c07"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "c54007d8f3878e21ac95b0b3490ed5a95fb1b4c7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab1f90abff5825c2d10bc120c89b68344349505/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab1f90abff5825c2d10bc120c89b68344349505/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cab1f90abff5825c2d10bc120c89b68344349505", "patch": "@@ -1,3 +1,7 @@\n+2001-01-26  Andrew Haley  <aph@redhat.com>\n+\n+\t(INIT_FPE): Use a direct system call to set the handler.\n+\t\n 2001-01-27  Richard Henderson  <rth@redhat.com>\n \n \t* configure.host (alpha*-*) [libgcj_flags]: Add -mieee."}, {"sha": "de2e39cdbc237a88d9936d9afa00ccda941590a1", "filename": "libjava/include/i386-signal.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab1f90abff5825c2d10bc120c89b68344349505/libjava%2Finclude%2Fi386-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab1f90abff5825c2d10bc120c89b68344349505/libjava%2Finclude%2Fi386-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fi386-signal.h?ref=cab1f90abff5825c2d10bc120c89b68344349505", "patch": "@@ -1,6 +1,6 @@\n // i386-signal.h - Catch runtime signals and turn them into exceptions.\n \n-/* Copyright (C) 1998, 1999  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -17,6 +17,7 @@ details.  */\n #define JAVA_SIGNAL_H 1\n \n #include <signal.h>\n+#include <sys/syscall.h>\n \n #define HANDLE_SEGV 1\n #define HANDLE_FPE 1\n@@ -140,9 +141,22 @@ do\t\t\t\t\t\t\t\t\\\n     act.sa_handler = catch_fpe;\t\t\t\t\t\\\n     sigemptyset (&act.sa_mask);\t\t\t\t\t\\\n     act.sa_flags = 0;\t\t\t\t\t\t\\\n-    __sigaction (SIGFPE, &act, NULL);\t\t\t\t\\\n+    syscall (SYS_sigaction, SIGFPE, &act, NULL);\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n while (0)  \n \n+/* You might wonder why we use syscall(SYS_sigaction) in INIT_FPE\n+ * instead of the standard sigaction().  This is necessary because of\n+ * the shenanigans above where we increment the PC saved in the\n+ * context and then return.  This trick will only work when we are\n+ * called _directly_ by the kernel, because linuxthreads wraps signal\n+ * handlers and its wrappers do not copy the sigcontext struct back\n+ * when returning from a signal handler.  If we return from our divide\n+ * handler to a linuxthreads wrapper, we will lose the PC adjustment\n+ * we made and return to the faulting instruction again.  Using\n+ * syscall(SYS_sigaction) causes our handler to be called directly by\n+ * the kernel, bypassing any wrappers.  This is a kludge, and a future\n+ * version of this handler will do something better.  */\n+\n #endif /* JAVA_SIGNAL_H */\n   "}]}