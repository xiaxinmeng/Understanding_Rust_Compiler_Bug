{"sha": "4dcd1054bf677f8022fd5c92704e46597018396c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRjZDEwNTRiZjY3N2Y4MDIyZmQ1YzkyNzA0ZTQ2NTk3MDE4Mzk2Yw==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-01-08T14:49:01Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-01-08T14:49:01Z"}, "message": "[AARCH64] Fix support for vectorization over sqrt (), sqrtf ().\n\ngcc/\n\t* config/aarch64/aarch64-builtins.c\n\t(aarch64_builtin_vectorized_function): Handle sqrt, sqrtf.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/vsqrt.c (test_square_root_v2sf): Use\n\tendian-safe float pool loading.\n\t(test_square_root_v4sf): Likewise.\n\t(test_square_root_v2df): Likewise.\n\t* lib/target-supports.exp\n\t(check_effective_target_vect_call_sqrtf): Add AArch64.\n\nFrom-SVN: r195017", "tree": {"sha": "cd76a85be65841a992346c84bb77127ec7849309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd76a85be65841a992346c84bb77127ec7849309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dcd1054bf677f8022fd5c92704e46597018396c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dcd1054bf677f8022fd5c92704e46597018396c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dcd1054bf677f8022fd5c92704e46597018396c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dcd1054bf677f8022fd5c92704e46597018396c/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4267a4a6ce7a778a24e50fa36106ad0672aeb424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4267a4a6ce7a778a24e50fa36106ad0672aeb424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4267a4a6ce7a778a24e50fa36106ad0672aeb424"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "478b4edbdf6807f46b769dd36785bee46a168813", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dcd1054bf677f8022fd5c92704e46597018396c", "patch": "@@ -1,3 +1,8 @@\n+2013-01-08  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-builtins.c\n+\t(aarch64_builtin_vectorized_function): Handle sqrt, sqrtf.\n+\n 2013-01-08  Martin Jambor  <mjambor@suse.cz>\n \n \tPR debug/55579"}, {"sha": "f54e9f4a68db4807e6272e86f64555969085bf96", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=4dcd1054bf677f8022fd5c92704e46597018396c", "patch": "@@ -1271,6 +1271,9 @@ aarch64_builtin_vectorized_function (tree fndecl, tree type_out, tree type_in)\n \tcase BUILT_IN_NEARBYINT:\n \tcase BUILT_IN_NEARBYINTF:\n \t  return AARCH64_FIND_FRINT_VARIANT (frinti);\n+\tcase BUILT_IN_SQRT:\n+\tcase BUILT_IN_SQRTF:\n+\t  return AARCH64_FIND_FRINT_VARIANT (sqrt);\n #undef AARCH64_CHECK_BUILTIN_MODE\n #define AARCH64_CHECK_BUILTIN_MODE(C, N) \\\n   (out_mode == N##Imode && out_n == C \\"}, {"sha": "a2ef1e84122fc1994b0b57963435e95813e9548a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4dcd1054bf677f8022fd5c92704e46597018396c", "patch": "@@ -1,3 +1,12 @@\n+2013-01-08  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* gcc.target/aarch64/vsqrt.c (test_square_root_v2sf): Use\n+\tendian-safe float pool loading.\n+\t(test_square_root_v4sf): Likewise.\n+\t(test_square_root_v2df): Likewise.\n+\t* lib/target-supports.exp\n+\t(check_effective_target_vect_call_sqrtf): Add AArch64.\n+\n 2013-01-08  Martin Jambor  <mjambor@suse.cz>\n \n \tPR debug/55579"}, {"sha": "5b777b236dae3e9bf3d7d7712c00ac52c8b46d59", "filename": "gcc/testsuite/gcc.target/aarch64/vsqrt.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvsqrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvsqrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvsqrt.c?ref=4dcd1054bf677f8022fd5c92704e46597018396c", "patch": "@@ -11,9 +11,11 @@ extern void abort (void);\n void\n test_square_root_v2sf ()\n {\n-  float32x2_t val = {4.0f, 9.0f};\n+  const float32_t pool[] = {4.0f, 9.0f};\n+  float32x2_t val;\n   float32x2_t res;\n \n+  val = vld1_f32 (pool);\n   res = vsqrt_f32 (val);\n \n   if (vget_lane_f32 (res, 0) != 2.0f)\n@@ -25,9 +27,11 @@ test_square_root_v2sf ()\n void\n test_square_root_v4sf ()\n {\n-  float32x4_t val = {4.0f, 9.0f, 16.0f, 25.0f};\n+  const float32_t pool[] = {4.0f, 9.0f, 16.0f, 25.0f};\n+  float32x4_t val;\n   float32x4_t res;\n \n+  val = vld1q_f32 (pool);\n   res = vsqrtq_f32 (val);\n \n   if (vgetq_lane_f32 (res, 0) != 2.0f)\n@@ -43,9 +47,11 @@ test_square_root_v4sf ()\n void\n test_square_root_v2df ()\n {\n-  float64x2_t val = {4.0, 9.0};\n+  const float64_t pool[] = {4.0, 9.0};\n+  float64x2_t val;\n   float64x2_t res;\n \n+  val = vld1q_f64 (pool);\n   res = vsqrtq_f64 (val);\n \n   if (vgetq_lane_f64 (res, 0) != 2.0)"}, {"sha": "a6d766e279fc5ec0cb37d4c3d24a04ba1fbb5810", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dcd1054bf677f8022fd5c92704e46597018396c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=4dcd1054bf677f8022fd5c92704e46597018396c", "patch": "@@ -3952,7 +3952,8 @@ proc check_effective_target_vect_call_sqrtf { } {\n \tverbose \"check_effective_target_vect_call_sqrtf: using cached result\" 2\n     } else {\n \tset et_vect_call_sqrtf_saved 0\n-\tif { [istarget i?86-*-*]\n+\tif { [istarget aarch64*-*-*]\n+\t     || [istarget i?86-*-*]\n \t     || [istarget x86_64-*-*]\n \t     || ([istarget powerpc*-*-*] && [check_vsx_hw_available]) } {\n \t    set et_vect_call_sqrtf_saved 1"}]}