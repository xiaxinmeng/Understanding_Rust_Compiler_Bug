{"sha": "b59a386b2ed0eedcc81f03f2620e44be9420436e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU5YTM4NmIyZWQwZWVkY2M4MWYwM2YyNjIwZTQ0YmU5NDIwNDM2ZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-06-12T04:42:46Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-06-12T04:42:46Z"}, "message": "unroll.c (initial_reg_note_copy): Use PUT_REG_NOTE_KIND and REG_NOTE_KIND, not PUT_MODE and GET_MODE.\n\n\t* unroll.c (initial_reg_note_copy): Use PUT_REG_NOTE_KIND and\n\tREG_NOTE_KIND, not PUT_MODE and GET_MODE.\n\t(final_reg_note_copy): Remove REG_WAS_0 notes that are no longer\n\tvalid.\n\nFrom-SVN: r43241", "tree": {"sha": "105e4a12034966b12a5e3b934f4c6a9bb83a88ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/105e4a12034966b12a5e3b934f4c6a9bb83a88ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b59a386b2ed0eedcc81f03f2620e44be9420436e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59a386b2ed0eedcc81f03f2620e44be9420436e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b59a386b2ed0eedcc81f03f2620e44be9420436e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59a386b2ed0eedcc81f03f2620e44be9420436e/comments", "author": null, "committer": null, "parents": [{"sha": "3b0fd4bcdb019756a3f7902df689ee3568b866ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0fd4bcdb019756a3f7902df689ee3568b866ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b0fd4bcdb019756a3f7902df689ee3568b866ba"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "4d46908a35f2e8a8c061fdce914beada1469b1fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59a386b2ed0eedcc81f03f2620e44be9420436e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59a386b2ed0eedcc81f03f2620e44be9420436e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b59a386b2ed0eedcc81f03f2620e44be9420436e", "patch": "@@ -1,3 +1,10 @@\n+2001-06-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* unroll.c (initial_reg_note_copy): Use PUT_REG_NOTE_KIND and\n+\tREG_NOTE_KIND, not PUT_MODE and GET_MODE.\n+\t(final_reg_note_copy): Remove REG_WAS_0 notes that are no longer\n+\tvalid.\n+\n 2001-06-11  Stan Shebs  <shebs@apple.com>\n \n \t* darwin.h (ASM_FILE_END): Remove decl of language_string."}, {"sha": "94c58cd925cea78409f0977dec68dc25206da91d", "filename": "gcc/unroll.c", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59a386b2ed0eedcc81f03f2620e44be9420436e/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59a386b2ed0eedcc81f03f2620e44be9420436e/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=b59a386b2ed0eedcc81f03f2620e44be9420436e", "patch": "@@ -201,7 +201,7 @@ static int *splittable_regs_updates;\n static void init_reg_map PARAMS ((struct inline_remap *, int));\n static rtx calculate_giv_inc PARAMS ((rtx, rtx, unsigned int));\n static rtx initial_reg_note_copy PARAMS ((rtx, struct inline_remap *));\n-static void final_reg_note_copy PARAMS ((rtx, struct inline_remap *));\n+static void final_reg_note_copy PARAMS ((rtx *, struct inline_remap *));\n static void copy_loop_body PARAMS ((struct loop *, rtx, rtx,\n \t\t\t\t    struct inline_remap *, rtx, int,\n \t\t\t\t    enum unroll_types, rtx, rtx, rtx, rtx));\n@@ -1666,7 +1666,7 @@ initial_reg_note_copy (notes, map)\n     return 0;\n \n   copy = rtx_alloc (GET_CODE (notes));\n-  PUT_MODE (copy, GET_MODE (notes));\n+  PUT_REG_NOTE_KIND (copy, REG_NOTE_KIND (notes));\n \n   if (GET_CODE (notes) == EXPR_LIST)\n     XEXP (copy, 0) = copy_rtx_and_substitute (XEXP (notes, 0), map, 0);\n@@ -1684,15 +1684,38 @@ initial_reg_note_copy (notes, map)\n /* Fixup insn references in copied REG_NOTES.  */\n \n static void\n-final_reg_note_copy (notes, map)\n-     rtx notes;\n+final_reg_note_copy (notesp, map)\n+     rtx *notesp;\n      struct inline_remap *map;\n {\n-  rtx note;\n+  while (*notesp)\n+    {\n+      rtx note = *notesp;\n+      \n+      if (GET_CODE (note) == INSN_LIST)\n+\t{\n+\t  /* Sometimes, we have a REG_WAS_0 note that points to a\n+\t     deleted instruction.  In that case, we can just delete the\n+\t     note.  */\n+\t  if (REG_NOTE_KIND (note) == REG_WAS_0)\n+\t    {\n+\t      *notesp = XEXP (note, 1);\n+\t      continue;\n+\t    }\n+\t  else\n+\t    {\n+\t      rtx insn = map->insn_map[INSN_UID (XEXP (note, 0))];\n+\n+\t      /* If we failed to remap the note, something is awry.  */\n+\t      if (!insn)\n+\t\tabort ();\n+\n+\t      XEXP (note, 0) = insn;\n+\t    }\n+\t}\n \n-  for (note = notes; note; note = XEXP (note, 1))\n-    if (GET_CODE (note) == INSN_LIST)\n-      XEXP (note, 0) = map->insn_map[INSN_UID (XEXP (note, 0))];\n+      notesp = &XEXP (note, 1);\n+    }\n }\n \n /* Copy each instruction in the loop, substituting from map as appropriate.\n@@ -2219,7 +2242,7 @@ copy_loop_body (loop, copy_start, copy_end, map, exit_label, last_iteration,\n       if ((GET_CODE (insn) == INSN || GET_CODE (insn) == JUMP_INSN\n \t   || GET_CODE (insn) == CALL_INSN)\n \t  && map->insn_map[INSN_UID (insn)])\n-\tfinal_reg_note_copy (REG_NOTES (map->insn_map[INSN_UID (insn)]), map);\n+\tfinal_reg_note_copy (&REG_NOTES (map->insn_map[INSN_UID (insn)]), map);\n     }\n   while (insn != copy_end);\n "}]}