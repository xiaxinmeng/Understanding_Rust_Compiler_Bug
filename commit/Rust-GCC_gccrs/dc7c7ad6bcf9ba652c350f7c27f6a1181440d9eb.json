{"sha": "dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM3YzdhZDZiY2Y5YmE2NTJjMzUwZjdjMjdmNmExMTgxNDQwZDllYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-05-12T15:24:31Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-05-12T15:24:31Z"}, "message": "g++.exp: Tweak handling of additional source files.\n\n\t* lib/g++.exp: Tweak handling of additional source files.\n\t* g++.dg/special/conpr-2.C: Use dg-gpp-additional-sources.\n\t* g++.dg/special/conpr-2a.C: Rename to ...\n\t* g++.dg/special/conpr-2a.cc: ... this.\n\t* g++.dg/special/conpr-3.C: Use dg-gpp-additional-sources.\n\t* g++.dg/special/conpr-3a.C: Rename to ...\n\t* g++.dg/special/conpr-3a.cc: This.\n\t* g++.dg/special/conpr-3b.C: Rename to ...\n\t* g++.dg/special/conpr-3b.cc: This.\n\t* g++.dg/special/conpr-4.C: New test.\n\t* g++.dg/special/ecos.exp: Rewrite to use ordinary dg driver.\n\nFrom-SVN: r66721", "tree": {"sha": "d07457d6426d0ceba9a993232a4c4ca2a381c7cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d07457d6426d0ceba9a993232a4c4ca2a381c7cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/comments", "author": null, "committer": null, "parents": [{"sha": "212e2065867d845834a01284aa2526828f7fd7b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212e2065867d845834a01284aa2526828f7fd7b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212e2065867d845834a01284aa2526828f7fd7b2"}], "stats": {"total": 113, "additions": 37, "deletions": 76}, "files": [{"sha": "9c482b95fb66b179cf8cbf2d4b1729f6feb39a4d", "filename": "gcc/testsuite/g++.dg/special/conpr-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2.C?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "patch": "@@ -1,5 +1,6 @@\n /* This doesn't work on solaris2 for reasons described in PR 6482.  */\n /* { dg-do run { xfail *-*-solaris2* } } */\n+/* { dg-gpp-additional-sources \"conpr-2a.cc\" } */\n \n #include <stdlib.h>\n "}, {"sha": "69fb7d648319f5cd115e5c077d784750c10f08f0", "filename": "gcc/testsuite/g++.dg/special/conpr-2a.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2a.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2a.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2a.cc?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "previous_filename": "gcc/testsuite/g++.dg/special/conpr-2a.C"}, {"sha": "3fe5741f54682b5a602b8f99196bc2621a392752", "filename": "gcc/testsuite/g++.dg/special/conpr-3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3.C?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-gpp-additional-sources \"conpr-3a.cc conpr-3b.cc\" } */\n \n #include <stdlib.h>\n "}, {"sha": "b237bb57f36e9fb27f53dda84af71df0551cf3ef", "filename": "gcc/testsuite/g++.dg/special/conpr-3a.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3a.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3a.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3a.cc?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "previous_filename": "gcc/testsuite/g++.dg/special/conpr-3a.C"}, {"sha": "b5efa0c35f68997318b96df8de8aa8fad8ffbf98", "filename": "gcc/testsuite/g++.dg/special/conpr-3b.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3b.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3b.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3b.cc?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "previous_filename": "gcc/testsuite/g++.dg/special/conpr-3b.C"}, {"sha": "68ac543ad1c49205f96b4fb1514e6a46a2b43e9b", "filename": "gcc/testsuite/g++.dg/special/conpr-4.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-4.C?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-gpp-additional-sources \"conpr-3b.cc conpr-3a.cc\" } */\n+\n+#include <stdlib.h>\n+\n+class foo_t {\n+    int x;\n+    static int count;\n+public:\n+    foo_t(void) { x=++count; }\n+    int get(void) { return x; }\n+};\n+\n+int foo_t::count;\n+\n+extern foo_t foo1, foo2;\n+\n+int main(void) {\n+\n+    if ( (foo1.get() != 2) || (foo2.get() != 1) )\n+        abort();\n+    exit(0);\n+}"}, {"sha": "dc34ff83da43935036aa0e910906d0de36b99ad0", "filename": "gcc/testsuite/g++.dg/special/ecos.exp", "status": "modified", "additions": 11, "deletions": 75, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fecos.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fecos.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fecos.exp?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1999, 2001, 2003 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -24,85 +24,21 @@\n # Load support procs.\n load_lib g++-dg.exp\n \n-###########\n-# conpr-1.C\n-###########\n+# Test for whether or not __attribute__((init_priority)) is supported\n+# by the platform.\n \n-dg-init\n-set lines [g++_target_compile \"$srcdir/$subdir/conpr-1.C\" \"$objdir/conpr-1.exe\" executable \"\"]\n-if [string match \"*init_priority*\" $lines] then {\n-    xfail \"conpr-1.C\"\n-    file delete $objdir/conpr-1.exe\n-} elseif ![string match \"\" $lines] then {\n-    fail \"conpr-1.C\"\n-} else {\n-    dg-runtest \"$srcdir/$subdir/conpr-1.C\" \"\" \"\" \n-    file delete $objdir/conpr-1.exe\n+set comp_output [g++_target_compile \\\n+\t\t\"$srcdir/$subdir/initp1.C\" \"initp1.S\" assembly \"\"]\n+if { [string match \"*init_priority*\" $comp_output] } {\n+  return 0\n }\n-dg-finish\n-\n-\n-###########\n-# conpr-2.C\n-###########\n \n+# Initialize 'dg'.\n dg-init\n \n-set lines [g++_target_compile \"$srcdir/$subdir/conpr-2a.C\" \"conpr-2a.o\" object \"\"]\n-if [string match \"*init_priority*\" $lines] then {\n-    xfail \"conpr-2a.o\"\n-} elseif ![string match \"\" $lines] then {\n-    fail \"conpr-2a.o\"\n-} else {\n-    dg-runtest \"$srcdir/$subdir/conpr-2.C\" \"conpr-2a.o\" \"\" \n-    file delete conpr-2a.o\n-}\n-dg-finish\n-\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\" \"\"\n \n-###########\n-# conpr-3.C\n-###########\n-\n-dg-init\n-\n-set lines [g++_target_compile \"$srcdir/$subdir/conpr-3a.C\" \"conpr-3a.o\" object \"\"]\n-if [string match \"*init_priority*\" $lines] then {\n-    xfail \"conpr-3a.o\"\n-} elseif ![string match \"\" $lines] then {\n-    fail \"conpr-3a.o\"\n-} else {\n-    set lines [g++_target_compile \"$srcdir/$subdir/conpr-3b.C\" \"conpr-3b.o\" object \"\"]\n-    if ![string match \"\" $lines] then {\n-        fail \"conpr-3b.o\"\n-    } else {\n-        # run it with objects both ways around!\n-        # This doesn't work on solaris2 for reasons described in PR 6482.\n-        if  { ![regexp \".*-solaris2.*\" $target_triplet] } {\n-            dg-runtest \"$srcdir/$subdir/conpr-3.C\" \"conpr-3a.o conpr-3b.o\" \"\"\n-            dg-runtest \"$srcdir/$subdir/conpr-3.C\" \"conpr-3b.o conpr-3a.o\" \"\"\n-        }\n-        file delete conpr-3a.o conpr-3b.o\n-    }\n-}\n-dg-finish\n-\n-###########\n-# initp1.C\n-###########\n-\n-dg-init\n-set lines [g++_target_compile \"$srcdir/$subdir/initp1.C\" \"$objdir/initp1.exe\" executable \"\"]\n-if [string match \"*init_priority*\" $lines] then {\n-    xfail \"initp1.C\"\n-    file delete $objdir/initp1.exe\n-} elseif ![string match \"\" $lines] then {\n-    fail \"initp1.C\"\n-} else {\n-    dg-runtest \"$srcdir/$subdir/initp1.C\" \"\" \"\"\n-    file delete $objdir/initp1.exe\n-}\n+# All done.\n dg-finish\n \n-\n-### EOF ecos.exp"}, {"sha": "68b4d16023e7bf05ed033cf63edf47fe9f36a057", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=dc7c7ad6bcf9ba652c350f7c27f6a1181440d9eb", "patch": "@@ -313,7 +313,7 @@ proc g++_target_compile { source dest type options } {\n \tif [is_remote host] {\n \t    lappend options \"additional_flags=$additional_sources\"\n \t}\n-\tregsub -all \" \" $additional_sources \" [file dirname $source]/\" additional_sources\n+\tregsub -all \"^| \" $additional_sources \" [file dirname $source]/\" additional_sources\n \tif ![is_remote host] {\n \t    lappend options \"additional_flags=$additional_sources\"\n \t}"}]}