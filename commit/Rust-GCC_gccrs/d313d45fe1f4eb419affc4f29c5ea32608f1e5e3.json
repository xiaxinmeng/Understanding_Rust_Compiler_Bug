{"sha": "d313d45fe1f4eb419affc4f29c5ea32608f1e5e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMxM2Q0NWZlMWY0ZWI0MTlhZmZjNGYyOWM1ZWEzMjYwOGYxZTVlMw==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2014-08-01T02:52:19Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2014-08-01T02:52:19Z"}, "message": "Convert ipa-devirt to inchash\n\ngcc/:\n\n2014-07-31  Andi Kleen  <ak@linux.intel.com>\n\n\t* ipa-devirt.c (polymorphic_call_target_hasher::hash):\n\tConvert to inchash.\n\nFrom-SVN: r213397", "tree": {"sha": "9b8fefff23ea64980eb8e9810a325a2d2edac6e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b8fefff23ea64980eb8e9810a325a2d2edac6e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3/comments", "author": null, "committer": null, "parents": [{"sha": "1a4d88510615ca2c8aececb55abf0226c7803613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4d88510615ca2c8aececb55abf0226c7803613", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4d88510615ca2c8aececb55abf0226c7803613"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "543acf96628f6691f4c123f670de2c71c832710c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d313d45fe1f4eb419affc4f29c5ea32608f1e5e3", "patch": "@@ -1,3 +1,8 @@\n+2014-07-31  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* ipa-devirt.c (polymorphic_call_target_hasher::hash):\n+\tConvert to inchash.\n+\n 2014-07-31  Andi Kleen  <ak@linux.intel.com>\n \n \t* asan.c (asan_mem_ref_hasher::hash): Convert to inchash."}, {"sha": "f79653a83238cc898921cae40ac96f0e427a333e", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d313d45fe1f4eb419affc4f29c5ea32608f1e5e3/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=d313d45fe1f4eb419affc4f29c5ea32608f1e5e3", "patch": "@@ -1635,25 +1635,22 @@ struct polymorphic_call_target_hasher\n inline hashval_t\n polymorphic_call_target_hasher::hash (const value_type *odr_query)\n {\n-  hashval_t hash;\n+  inchash::hash hstate (odr_query->otr_token);\n+\n+  hstate.add_wide_int (odr_query->type->id);\n+  hstate.merge_hash (TYPE_UID (odr_query->context.outer_type));\n+  hstate.add_wide_int (odr_query->context.offset);\n \n-  hash = iterative_hash_host_wide_int\n-\t  (odr_query->otr_token,\n-\t   odr_query->type->id);\n-  hash = iterative_hash_hashval_t (TYPE_UID (odr_query->context.outer_type),\n-\t\t\t\t   hash);\n-  hash = iterative_hash_host_wide_int (odr_query->context.offset, hash);\n   if (odr_query->context.speculative_outer_type)\n     {\n-      hash = iterative_hash_hashval_t\n-\t       (TYPE_UID (odr_query->context.speculative_outer_type), hash);\n-      hash = iterative_hash_host_wide_int (odr_query->context.speculative_offset,\n-\t\t\t\t\t   hash);\n+      hstate.merge_hash (TYPE_UID (odr_query->context.speculative_outer_type));\n+      hstate.add_wide_int (odr_query->context.speculative_offset);\n     }\n-  return iterative_hash_hashval_t\n-\t    (((int)odr_query->context.maybe_in_construction << 2)\n-\t     | ((int)odr_query->context.speculative_maybe_derived_type << 1)\n-\t     | (int)odr_query->context.maybe_derived_type, hash);\n+  hstate.add_flag (odr_query->context.maybe_in_construction);\n+  hstate.add_flag (odr_query->context.maybe_derived_type);\n+  hstate.add_flag (odr_query->context.speculative_maybe_derived_type);\n+  hstate.commit_flag ();\n+  return hstate.end ();\n }\n \n /* Compare cache entries T1 and T2.  */"}]}