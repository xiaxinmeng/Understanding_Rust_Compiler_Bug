{"sha": "e339291fc13d074bade3fd9ab3cbfacce5a21cbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzOTI5MWZjMTNkMDc0YmFkZTNmZDlhYjNjYmZhY2NlNWEyMWNiZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-03T19:25:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-03T19:25:05Z"}, "message": "Fix new testcase to not require std::copysign\n\nUse __builtin_copysign{,f,l} when std::copysign isn't available.\n\n\tPR libstdc++/61761\n\t* testsuite/26_numerics/complex/proj.cc: Don't assume <cmath> defines\n\tstd::copysign.\n\nFrom-SVN: r270859", "tree": {"sha": "2c50a2cca767aa1e4aa1d00ebdeff95742a12e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c50a2cca767aa1e4aa1d00ebdeff95742a12e7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e339291fc13d074bade3fd9ab3cbfacce5a21cbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e339291fc13d074bade3fd9ab3cbfacce5a21cbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e339291fc13d074bade3fd9ab3cbfacce5a21cbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e339291fc13d074bade3fd9ab3cbfacce5a21cbd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56e5b093de436686effacab1f3211f8695be39a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e5b093de436686effacab1f3211f8695be39a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56e5b093de436686effacab1f3211f8695be39a6"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "40396312a0c90ed9d7ad6dec11a69e177d29e1f0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e339291fc13d074bade3fd9ab3cbfacce5a21cbd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e339291fc13d074bade3fd9ab3cbfacce5a21cbd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e339291fc13d074bade3fd9ab3cbfacce5a21cbd", "patch": "@@ -1,5 +1,9 @@\n 2019-05-03  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/61761\n+\t* testsuite/26_numerics/complex/proj.cc: Don't assume <cmath> defines\n+\tstd::copysign.\n+\n \tPR libstdc++/52119\n \t* include/ext/numeric_traits.h (__glibcxx_min): Avoid integer\n \toverflow warning with -Wpedantic -Wsystem-headers."}, {"sha": "caf12d25103085d0545101dfdb36adedbac885aa", "filename": "libstdc++-v3/testsuite/26_numerics/complex/proj.cc", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e339291fc13d074bade3fd9ab3cbfacce5a21cbd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fproj.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e339291fc13d074bade3fd9ab3cbfacce5a21cbd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fproj.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fproj.cc?ref=e339291fc13d074bade3fd9ab3cbfacce5a21cbd", "patch": "@@ -21,16 +21,32 @@\n #include <limits>\n #include <testsuite_hooks.h>\n \n+namespace test\n+{\n+#ifdef _GLIBCXX_USE_C99_MATH_TR1\n+  using std::copysign;\n+#else\n+  bool copysign(float x, float y)\n+  { return __builtin_copysignf(x, y); }\n+\n+  bool copysign(double x, double y)\n+  { return __builtin_copysign(x, y); }\n+\n+  bool copysign(long double x, long double y)\n+  { return __builtin_copysignl(x, y); }\n+#endif\n+}\n+\n template<typename T>\n bool eq(const std::complex<T>& x, const std::complex<T>& y)\n {\n   bool nan_reals = std::isnan(x.real()) && std::isnan(y.real());\n   bool nan_imags = std::isnan(x.imag()) && std::isnan(y.imag());\n \n   bool sign_reals\n-    = std::copysign(T(1), x.real()) == std::copysign(T(1), y.real());\n+    = test::copysign(T(1), x.real()) == test::copysign(T(1), y.real());\n   bool sign_imags\n-    = std::copysign(T(1), x.imag()) == std::copysign(T(1), y.imag());\n+    = test::copysign(T(1), x.imag()) == test::copysign(T(1), y.imag());\n \n   return ((x.real() == y.real() && sign_reals) || nan_reals)\n     && ((x.imag() == y.imag() && sign_imags) || nan_imags);"}]}