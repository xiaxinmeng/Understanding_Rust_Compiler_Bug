{"sha": "c22354fd692dc2b13290fcf441cbc8722baed83b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyMzU0ZmQ2OTJkYzJiMTMyOTBmY2Y0NDFjYmM4NzIyYmFlZDgzYg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2014-10-25T00:08:41Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2014-10-25T00:08:41Z"}, "message": "dwarf2out.c (declare_in_namespace): Only emit external declarations in the local scope once.\n\n\t* dwarf2out.c (declare_in_namespace): Only emit external\n\tdeclarations in the local scope once.\n\nFrom-SVN: r216683", "tree": {"sha": "d0507f6863be7c344f8fca7819b863e172ba38f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0507f6863be7c344f8fca7819b863e172ba38f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c22354fd692dc2b13290fcf441cbc8722baed83b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22354fd692dc2b13290fcf441cbc8722baed83b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c22354fd692dc2b13290fcf441cbc8722baed83b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22354fd692dc2b13290fcf441cbc8722baed83b/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbee6d3164ed509ebe08222264f352fecf1c9824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbee6d3164ed509ebe08222264f352fecf1c9824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbee6d3164ed509ebe08222264f352fecf1c9824"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "bc6908db3b1853d52636250ef517d8c806ea4735", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22354fd692dc2b13290fcf441cbc8722baed83b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22354fd692dc2b13290fcf441cbc8722baed83b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c22354fd692dc2b13290fcf441cbc8722baed83b", "patch": "@@ -1,3 +1,8 @@\n+2014-10-24  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* dwarf2out.c (declare_in_namespace): Only emit external\n+\tdeclarations in the local scope once.\n+\n 2014-10-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* ginclude/stdbool.h: Do not define bool, true or false in C++11."}, {"sha": "3bce20f345a7114685ba8c7de004f294a5785055", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22354fd692dc2b13290fcf441cbc8722baed83b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22354fd692dc2b13290fcf441cbc8722baed83b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c22354fd692dc2b13290fcf441cbc8722baed83b", "patch": "@@ -20476,6 +20476,26 @@ declare_in_namespace (tree thing, dw_die_ref context_die)\n   if (debug_info_level <= DINFO_LEVEL_TERSE)\n     return context_die;\n \n+  /* External declarations in the local scope only need to be emitted\n+     once, not once in the namespace and once in the scope.\n+\n+     This avoids declaring the `extern' below in the\n+     namespace DIE as well as in the innermost scope:\n+\n+          namespace S\n+\t  {\n+            int i=5;\n+            int foo()\n+\t    {\n+              int i=8;\n+              extern int i;\n+     \t      return i;\n+\t    }\n+          }\n+  */\n+  if (DECL_P (thing) && DECL_EXTERNAL (thing) && local_scope_p (context_die))\n+    return context_die;\n+\n   /* If this decl is from an inlined function, then don't try to emit it in its\n      namespace, as we will get confused.  It would have already been emitted\n      when the abstract instance of the inline function was emitted anyways.  */"}]}