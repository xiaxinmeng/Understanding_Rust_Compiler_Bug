{"sha": "253a20de711d05547b98051468d58ac145397096", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzYTIwZGU3MTFkMDU1NDdiOTgwNTE0NjhkNThhYzE0NTM5NzA5Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-11-19T18:56:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-11-19T18:56:47Z"}, "message": "i386.c (def_builtin, [...]): Formatting fixes.\n\n\t* config/i386/i386.c (def_builtin, def_builtin2, def_builtin_const2,\n\tix86_add_new_builtins): Formatting fixes.\n\t(ix86_expand_builtin): Use || instead of && for isa vs. isa2.\n\t(ix86_get_builtin): Likewise.\n\nFrom-SVN: r242626", "tree": {"sha": "7908405a4ac34f61a939e980f3193821d2baeb53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7908405a4ac34f61a939e980f3193821d2baeb53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/253a20de711d05547b98051468d58ac145397096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253a20de711d05547b98051468d58ac145397096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/253a20de711d05547b98051468d58ac145397096", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253a20de711d05547b98051468d58ac145397096/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1b7577391c4614908e1753a119bb29c4919198e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b7577391c4614908e1753a119bb29c4919198e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b7577391c4614908e1753a119bb29c4919198e"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "9b69a6e62e5e2fa91d86e30939fd07caddd4f31c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253a20de711d05547b98051468d58ac145397096/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253a20de711d05547b98051468d58ac145397096/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=253a20de711d05547b98051468d58ac145397096", "patch": "@@ -1,5 +1,10 @@\n 2016-11-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/i386.c (def_builtin, def_builtin2, def_builtin_const2,\n+\tix86_add_new_builtins): Formatting fixes.\n+\t(ix86_expand_builtin): Use || instead of && for isa vs. isa2.\n+\t(ix86_get_builtin): Likewise.\n+\n \t* config/i386/i386.c (ix86_expand_builtin): Remove msk_mov variable,\n \tdon't initialize it, don't use it for the case where it isn't\n \tprovable %{z} nor using the same argument, instead move merge"}, {"sha": "8ab6576cf9a898ff080d98b607cc3630ed3c492d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253a20de711d05547b98051468d58ac145397096/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253a20de711d05547b98051468d58ac145397096/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=253a20de711d05547b98051468d58ac145397096", "patch": "@@ -30924,7 +30924,7 @@ def_builtin (HOST_WIDE_INT mask, const char *name,\n \t means that *both* cpuid bits must be set for the built-in to be available.\n \t Handle this here.  */\n       if (mask & ix86_isa_flags & OPTION_MASK_ISA_AVX512VL)\n-\t  mask &= ~OPTION_MASK_ISA_AVX512VL;\n+\tmask &= ~OPTION_MASK_ISA_AVX512VL;\n \n       mask &= ~OPTION_MASK_ISA_64BIT;\n       if (mask == 0\n@@ -30976,8 +30976,8 @@ def_builtin_const (HOST_WIDE_INT mask, const char *name,\n \n static inline tree\n def_builtin2 (HOST_WIDE_INT mask, const char *name,\n-\t     enum ix86_builtin_func_type tcode,\n-\t     enum ix86_builtins code)\n+\t      enum ix86_builtin_func_type tcode,\n+\t      enum ix86_builtins code)\n {\n   tree decl = NULL_TREE;\n \n@@ -30992,8 +30992,8 @@ def_builtin2 (HOST_WIDE_INT mask, const char *name,\n       tree type = ix86_get_builtin_func_type (tcode);\n       decl = add_builtin_function (name, type, code, BUILT_IN_MD,\n \t\t\t\t   NULL, NULL_TREE);\n-\t  ix86_builtins[(int) code] = decl;\n-\t  ix86_builtins_isa[(int) code].set_and_not_built_p = false;\n+      ix86_builtins[(int) code] = decl;\n+      ix86_builtins_isa[(int) code].set_and_not_built_p = false;\n     }\n   else\n     {\n@@ -31016,7 +31016,7 @@ def_builtin2 (HOST_WIDE_INT mask, const char *name,\n \n static inline tree\n def_builtin_const2 (HOST_WIDE_INT mask, const char *name,\n-\t\t   enum ix86_builtin_func_type tcode, enum ix86_builtins code)\n+\t\t    enum ix86_builtin_func_type tcode, enum ix86_builtins code)\n {\n   tree decl = def_builtin2 (mask, name, tcode, code);\n   if (decl)\n@@ -31034,8 +31034,8 @@ def_builtin_const2 (HOST_WIDE_INT mask, const char *name,\n static void\n ix86_add_new_builtins (HOST_WIDE_INT isa, HOST_WIDE_INT isa2)\n {\n-  if (((isa & deferred_isa_values) == 0)\n-      && ((isa2 & deferred_isa_values2) == 0))\n+  if ((isa & deferred_isa_values) == 0\n+      && (isa2 & deferred_isa_values2) == 0)\n     return;\n \n   /* Bits in ISA value can be removed from potential isa values.  */\n@@ -31048,7 +31048,8 @@ ix86_add_new_builtins (HOST_WIDE_INT isa, HOST_WIDE_INT isa2)\n \n   for (i = 0; i < (int)IX86_BUILTIN_MAX; i++)\n     {\n-      if ((((ix86_builtins_isa[i].isa & isa) != 0) || ((ix86_builtins_isa[i].isa2 & isa2) != 0))\n+      if (((ix86_builtins_isa[i].isa & isa) != 0\n+\t   || (ix86_builtins_isa[i].isa2 & isa2) != 0)\n \t  && ix86_builtins_isa[i].set_and_not_built_p)\n \t{\n \t  tree decl, type;\n@@ -36549,7 +36550,7 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n      whether it is supported.  */\n   if ((ix86_builtins_isa[fcode].isa\n        && !(ix86_builtins_isa[fcode].isa & ix86_isa_flags))\n-      && (ix86_builtins_isa[fcode].isa2\n+      || (ix86_builtins_isa[fcode].isa2\n \t  && !(ix86_builtins_isa[fcode].isa2 & ix86_isa_flags2)))\n     {\n       char *opts = ix86_target_string (ix86_builtins_isa[fcode].isa,\n@@ -38506,7 +38507,7 @@ static tree ix86_get_builtin (enum ix86_builtins code)\n   opts = TREE_TARGET_OPTION (target_tree);\n \n   if ((ix86_builtins_isa[(int) code].isa & opts->x_ix86_isa_flags)\n-\t&& (ix86_builtins_isa[(int) code].isa2 & opts->x_ix86_isa_flags2))\n+      || (ix86_builtins_isa[(int) code].isa2 & opts->x_ix86_isa_flags2))\n     return ix86_builtin_decl (code, true);\n   else\n     return NULL_TREE;"}]}