{"sha": "63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNlMWIxYzRiMDViOGYyN2NkYmNmNzgxMjk0ZTE0ZDNjN2E3M2YzZg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-02-28T07:39:44Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-02-28T07:39:44Z"}, "message": "Makefile.in (integrate.o): Update.\n\n\t* Makefile.in (integrate.o): Update.\n\t* c-decl.c (copy_lang_decl): Rename.\n\t* c-lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n\t* integrate.c: Include langhooks.h.\n\t(copy_decl_for_inlining): Update to use langhook.\n\t* langhooks-def.h (lhd_do_nothing_t,\n\tLANG_HOOKS_DUP_LANG_SPECIFIC_DECL): New.\n\t(LANG_HOOKS_INITIALIZER): Update.\n\t* langhooks.c (lhd_do_nothing_t): New.\n\t* langhooks.h (struct lang_hooks): Add dup_lang_specific_decl.\n\t* tree.h (copy_lang_decl): Remove.\nada:\n\t* misc.c (copy_lang_decl): Remove.\ncp:\n\t* class.c (build_clone): Update.\n\t* cp-lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n\t* cp-tree.h (cxx_dup_lang_specific_decl): New.\n\t* lex.c (copy_lang_decl): Rename cxx_dup_lang_specific_decl.\n\t(copy_decl): Update.\n\t* method.c (make_thunk): Update.\nf:\n\t* com.c (copy_lang_decl): Delete.\njava:\n\t* decl.c (copy_lang_decl): Rename java_dup_lang_specific_decl.\n\t* java-tree.h (java_dup_lang_specific_decl): New.\n\t* lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\nobjc:\n\t* objc-lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n\nFrom-SVN: r50122", "tree": {"sha": "3e0b5a2b383f5ef72130ddb2039c242ddc5bbe56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e0b5a2b383f5ef72130ddb2039c242ddc5bbe56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/comments", "author": null, "committer": null, "parents": [{"sha": "f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f472fa294971c3ab22a8c5b47dd3fde0f819fc0b"}], "stats": {"total": 123, "additions": 87, "deletions": 36}, "files": [{"sha": "3074e4b47af7d431c6837e7b467823845a563cb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1,3 +1,19 @@\n+2002-02-28  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* Makefile.in (integrate.o): Update.\n+\t* c-decl.c (copy_lang_decl): Rename.\n+\t* c-lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n+\t* integrate.c: Include langhooks.h.\n+\t(copy_decl_for_inlining): Update to use langhook.\n+\t* langhooks-def.h (lhd_do_nothing_t,\n+\tLANG_HOOKS_DUP_LANG_SPECIFIC_DECL): New.\n+\t(LANG_HOOKS_INITIALIZER): Update.\n+\t* langhooks.c (lhd_do_nothing_t): New.\n+\t* langhooks.h (struct lang_hooks): Add dup_lang_specific_decl.\n+\t* tree.h (copy_lang_decl): Remove.\n+objc:\n+\t* objc-lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n+\n 2002-02-27  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* dwarf2out.c (stack_adjust_offset): Add support for POST_INC, "}, {"sha": "604dd7dd8ff00707601b5469ec25df02bd6e1066", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1431,7 +1431,7 @@ real.o : real.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) toplev.h $(TM_P_H)\n integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n    debug.h $(INTEGRATE_H) insn-config.h $(EXPR_H) real.h $(REGS_H) \\\n    intl.h function.h output.h $(RECOG_H) except.h toplev.h $(LOOP_H) \\\n-   $(PARAMS_H) $(TM_P_H) $(TARGET_H)\n+   $(PARAMS_H) $(TM_P_H) $(TARGET_H) langhooks.h\n jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h $(REGS_H) \\\n    insn-config.h $(RECOG_H) $(EXPR_H) real.h except.h function.h \\\n    toplev.h $(INSN_ATTR_H) $(TM_P_H) reload.h $(PREDICT_H)"}, {"sha": "875b3d5bc184620ad5891de315cb052340ab02ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1,3 +1,7 @@\n+2002-02-28  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* misc.c (copy_lang_decl): Remove.\n+\n 2002-02-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* misc.c: Delete traditional-mode-related code copied from the"}, {"sha": "78b04c8da2d2744eb55fe3facfcd98e4333964d1", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                           C Implementation File                          *\n  *                                                                          *\n- *                             $Revision: 1.17 $\n+ *                             $Revision: 1.18 $\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -406,15 +406,6 @@ maybe_build_cleanup (decl)\n   return NULL_TREE;\n }\n \n-/* integrate_decl_tree calls this function, but since we don't use the\n-   DECL_LANG_SPECIFIC field, this is a no-op.  */\n-\n-void\n-copy_lang_decl (node)\n-     tree node ATTRIBUTE_UNUSED;\n-{\n-}\n-\n /* Hooks for print-tree.c:  */\n \n static void"}, {"sha": "21ff5eeacd19ed33a6ed4feef6f6e4029e98bb32", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -7200,10 +7200,10 @@ mark_c_function_context (f)\n   mark_binding_level (&p->binding_level);\n }\n \n-/* Copy the DECL_LANG_SPECIFIC data associated with NODE.  */\n+/* Copy the DECL_LANG_SPECIFIC data associated with DECL.  */\n \n void\n-copy_lang_decl (decl)\n+c_dup_lang_specific_decl (decl)\n      tree decl;\n {\n   struct lang_decl *ld;"}, {"sha": "174f9dc8106fbf5133c430c4b0db47fecfe3bd97", "filename": "gcc/c-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -55,6 +55,8 @@ static void c_post_options PARAMS ((void));\n #define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n #undef LANG_HOOKS_SET_YYDEBUG\n #define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n+#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n+#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n \n #undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n #define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\"}, {"sha": "d6f622e0ff5834d3e5b34056644d47c15e4b4ae8", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -168,6 +168,7 @@ extern void gen_aux_info_record                 PARAMS ((tree, int, int, int));\n \n /* in c-decl.c */\n extern void c_init_decl_processing\t\tPARAMS ((void));\n+extern void c_dup_lang_specific_decl\t\tPARAMS ((tree));\n extern void c_print_identifier\t\t\tPARAMS ((FILE *, tree, int));\n extern tree build_array_declarator              PARAMS ((tree, tree, int, int));\n extern tree build_enumerator                    PARAMS ((tree, tree));"}, {"sha": "410479c0d22b7bfdd60d9122162884ef98826ceb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1,3 +1,12 @@\n+2002-02-28  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* class.c (build_clone): Update.\n+\t* cp-lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n+\t* cp-tree.h (cxx_dup_lang_specific_decl): New.\n+\t* lex.c (copy_lang_decl): Rename cxx_dup_lang_specific_decl.\n+\t(copy_decl): Update.\n+\t* method.c (make_thunk): Update.\n+\n 2002-02-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* decl2.c: Delete traditional-mode-related code copied from"}, {"sha": "9e3c110a2e504116ebff5c3af62e0dbcdca339c0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -4038,7 +4038,7 @@ build_clone (fn, name)\n       for (parms = DECL_ARGUMENTS (clone); parms; parms = TREE_CHAIN (parms))\n \t{\n \t  DECL_CONTEXT (parms) = clone;\n-\t  copy_lang_decl (parms);\n+\t  cxx_dup_lang_specific_decl (parms);\n \t}\n     }\n "}, {"sha": "800a8701de2e5dcbd370e15e16b7457546297a7c", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -50,6 +50,8 @@ static HOST_WIDE_INT cxx_get_alias_set PARAMS ((tree));\n #define LANG_HOOKS_EXPAND_CONSTANT cplus_expand_constant\n #undef LANG_HOOKS_SAFE_FROM_P\n #define LANG_HOOKS_SAFE_FROM_P c_safe_from_p\n+#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n+#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL cxx_dup_lang_specific_decl\n #undef LANG_HOOKS_PRINT_STATISTICS\n #define LANG_HOOKS_PRINT_STATISTICS cxx_print_statistics\n #undef LANG_HOOKS_PRINT_XNODE"}, {"sha": "73aed25d5bf26b05e48534fada14a3f901638db8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -3922,6 +3922,7 @@ extern tree build_java_class_ref                PARAMS ((tree));\n /* in input.c */\n \n /* in lex.c */\n+extern void cxx_dup_lang_specific_decl\t\tPARAMS ((tree));\n extern tree make_pointer_declarator\t\tPARAMS ((tree, tree));\n extern tree make_reference_declarator\t\tPARAMS ((tree, tree));\n extern tree make_call_declarator\t\tPARAMS ((tree, tree, tree, tree));"}, {"sha": "d338632bc32a37ea752bd5dd01aaaf1d067592ac", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1516,7 +1516,7 @@ retrofit_lang_decl (t)\n }\n \n void\n-copy_lang_decl (node)\n+cxx_dup_lang_specific_decl (node)\n      tree node;\n {\n   int size;\n@@ -1548,7 +1548,7 @@ copy_decl (decl)\n   tree copy;\n \n   copy = copy_node (decl);\n-  copy_lang_decl (copy);\n+  cxx_dup_lang_specific_decl (copy);\n   return copy;\n }\n "}, {"sha": "35e40ebbac62e2c7819148259961fdcf70d18870", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -302,7 +302,7 @@ make_thunk (function, delta, vcall_index)\n     {\n       thunk = build_decl (FUNCTION_DECL, thunk_id, TREE_TYPE (func_decl));\n       DECL_LANG_SPECIFIC (thunk) = DECL_LANG_SPECIFIC (func_decl);\n-      copy_lang_decl (func_decl);\n+      cxx_dup_lang_specific_decl (func_decl);\n       SET_DECL_ASSEMBLER_NAME (thunk, thunk_id);\n       DECL_CONTEXT (thunk) = DECL_CONTEXT (func_decl);\n       TREE_READONLY (thunk) = TREE_READONLY (func_decl);"}, {"sha": "94cf6911a57fdbc61e0cdce6871fc763fa78db5e", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1,3 +1,7 @@\n+Thu Feb 28 07:53:46 2002  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* com.c (copy_lang_decl): Delete.\n+\n 2002-02-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* com.c, lex.c, top.c: Delete traditional-mode-related code"}, {"sha": "d1e769a21bcf25c4bc281a5dbf7eaf1acc98fc60", "filename": "gcc/f/com.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -14049,15 +14049,6 @@ convert (type, expr)\n   return error_mark_node;\n }\n \n-/* integrate_decl_tree calls this function, but since we don't use the\n-   DECL_LANG_SPECIFIC field, this is a no-op.  */\n-\n-void\n-copy_lang_decl (node)\n-     tree node UNUSED;\n-{\n-}\n-\n /* Return the list of declarations of the current level.\n    Note that this list is in reverse order unless/until\n    you nreverse it; and when you do nreverse it, you must"}, {"sha": "59c1550bd3784ff7438d01e8de79e2de0ada9e79", "filename": "gcc/integrate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -43,6 +43,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"params.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n+#include \"langhooks.h\"\n \n #include \"obstack.h\"\n #define\tobstack_chunk_alloc\txmalloc\n@@ -368,8 +369,7 @@ copy_decl_for_inlining (decl, from_fn, to_fn)\n   else\n     {\n       copy = copy_node (decl);\n-      if (DECL_LANG_SPECIFIC (copy))\n-\tcopy_lang_decl (copy);\n+      (*lang_hooks.dup_lang_specific_decl) (copy);\n \n       /* TREE_ADDRESSABLE isn't used to indicate that a label's\n \t address has been taken; it's for internal bookkeeping in"}, {"sha": "a4ef231a15912dbb3211e9f27c8f1f1c53b237c6", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1,3 +1,9 @@\n+2002-02-28  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* decl.c (copy_lang_decl): Rename java_dup_lang_specific_decl.\n+\t* java-tree.h (java_dup_lang_specific_decl): New.\n+\t* lang.c (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n+\n 2002-02-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* builtins.c, decl.c: Delete traditional-mode-related code"}, {"sha": "eaa7c48144f11286b5f2bcc6f63e39ffedf7c65e", "filename": "gcc/java/decl.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1543,13 +1543,20 @@ set_block (block)\n /* integrate_decl_tree calls this function. */\n \n void\n-copy_lang_decl (node)\n+java_dup_lang_specific_decl (node)\n      tree node;\n {\n-  int lang_decl_size\n-    = TREE_CODE (node) == VAR_DECL ? sizeof (struct lang_decl_var)\n-    : sizeof (struct lang_decl);\n-  struct lang_decl *x = (struct lang_decl *) ggc_alloc (lang_decl_size);\n+  int lang_decl_size;\n+  struct lang_decl *x;\n+\n+  if (!DECL_LANG_SPECIFIC (node))\n+    return;\n+\n+  if (TREE_CODE (node) == VAR_DECL)\n+    lang_decl_size = sizeof (struct lang_decl_var);\n+  else\n+    lang_decl_size = sizeof (struct lang_decl);\n+  x = (struct lang_decl *) ggc_alloc (lang_decl_size);\n   memcpy (x, DECL_LANG_SPECIFIC (node), lang_decl_size);\n   DECL_LANG_SPECIFIC (node) = x;\n }"}, {"sha": "7097b56d720df7e06d4fd8997992d3e6c923ec53", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -1069,6 +1069,7 @@ extern tree ident_subst PARAMS ((const char*, int,\n extern tree identifier_subst PARAMS ((const tree,\n \t\t\t\t     const char *, int, int, const char *));\n extern void java_init_decl_processing PARAMS ((void));\n+extern void java_dup_lang_specific_decl PARAMS ((tree));\n extern tree build_java_signature PARAMS ((tree));\n extern tree build_java_argument_signature PARAMS ((tree));\n extern void set_java_signature PARAMS ((tree, tree));"}, {"sha": "6be8f2bafa5a05cb85eb2474b4c640a3b77e326a", "filename": "gcc/java/lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -214,6 +214,8 @@ static int dependency_tracking = 0;\n #define LANG_HOOKS_DECODE_OPTION java_decode_option\n #undef LANG_HOOKS_SET_YYDEBUG\n #define LANG_HOOKS_SET_YYDEBUG java_set_yydebug\n+#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n+#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL java_dup_lang_specific_decl\n \n /* Each front end provides its own.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;"}, {"sha": "89002aa07968e928089b79eb85ffbfc46e125bcc", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -38,6 +38,7 @@ extern HOST_WIDE_INT hook_get_alias_set_0\tPARAMS ((tree));\n /* See langhooks.h for the definition and documentation of each hook.  */\n \n extern void lhd_do_nothing PARAMS ((void));\n+extern void lhd_do_nothing_t PARAMS ((tree));\n extern int lhd_decode_option PARAMS ((int, char **));\n extern HOST_WIDE_INT lhd_get_alias_set PARAMS ((tree));\n extern tree lhd_return_tree PARAMS ((tree));\n@@ -75,6 +76,7 @@ void lhd_tree_inlining_end_inlining\t\tPARAMS ((tree));\n #define LANG_HOOKS_EXPAND_CONSTANT\tlhd_return_tree\n #define LANG_HOOKS_SAFE_FROM_P\t\tlhd_safe_from_p\n #define LANG_HOOKS_STATICP\t\tlhd_staticp\n+#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL lhd_do_nothing_t\n #define LANG_HOOKS_HONOR_READONLY\tfalse\n #define LANG_HOOKS_PRINT_STATISTICS\tlhd_do_nothing\n #define LANG_HOOKS_PRINT_XNODE\t\tlhd_print_tree_nothing\n@@ -143,6 +145,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_EXPAND_CONSTANT, \\\n   LANG_HOOKS_SAFE_FROM_P, \\\n   LANG_HOOKS_STATICP, \\\n+  LANG_HOOKS_DUP_LANG_SPECIFIC_DECL, \\\n   LANG_HOOKS_HONOR_READONLY, \\\n   LANG_HOOKS_PRINT_STATISTICS, \\\n   LANG_HOOKS_PRINT_XNODE, \\"}, {"sha": "a976d748029b3d755d64b3d82a2d6e68c2a0c179", "filename": "gcc/langhooks.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -39,6 +39,14 @@ lhd_do_nothing ()\n {\n }\n \n+/* Do nothing.  */\n+\n+void\n+lhd_do_nothing_t (t)\n+     tree t ATTRIBUTE_UNUSED;\n+{\n+}\n+\n /* Do nothing (return the tree node passed).  */\n \n tree"}, {"sha": "8203fd192142bf39cf88a4f58a3d4e4cdb41d245", "filename": "gcc/langhooks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -128,6 +128,10 @@ struct lang_hooks\n   /* Hook called by staticp for language-specific tree codes.  */\n   int (*staticp) PARAMS ((tree));\n \n+  /* Replace the DECL_LANG_SPECIFIC data, which may be NULL, of the\n+     DECL_NODE with a newly GC-allocated copy.  */\n+  void (*dup_lang_specific_decl) PARAMS ((tree));\n+\n   /* Nonzero if TYPE_READONLY and TREE_READONLY should always be honored.  */\n   bool honor_readonly;\n "}, {"sha": "8f155c2b23eac3a0f695281d23d8b434a6668d0d", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -46,6 +46,8 @@ static void objc_post_options                   PARAMS ((void));\n #define LANG_HOOKS_POST_OPTIONS objc_post_options\n #undef LANG_HOOKS_STATICP\n #define LANG_HOOKS_STATICP c_staticp\n+#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n+#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n #undef LANG_HOOKS_PRINT_IDENTIFIER\n #define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n #undef LANG_HOOKS_SET_YYDEBUG"}, {"sha": "06d9815ba158b56113c5e73a7fec8b258f80d1b4", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=63e1b1c4b05b8f27cdbcf781294e14d3c7a73f3f", "patch": "@@ -2859,9 +2859,6 @@ extern tree fold_builtin\t\tPARAMS ((tree));\n \f\n /* The language front-end must define these functions.  */\n \n-/* Function to replace the DECL_LANG_SPECIFIC field of a DECL with a copy.  */\n-extern void copy_lang_decl\t\t\tPARAMS ((tree));\n-\n /* Function called with no arguments to parse and compile the input.  */\n extern int yyparse\t\t\t\tPARAMS ((void));\n /* Functions for processing symbol declarations.  */"}]}