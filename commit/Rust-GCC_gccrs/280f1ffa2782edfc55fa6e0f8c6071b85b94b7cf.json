{"sha": "280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgwZjFmZmEyNzgyZWRmYzU1ZmE2ZTBmOGM2MDcxYjg1Yjk0YjdjZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-06-29T06:11:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-06-29T06:11:17Z"}, "message": "c-common.c (pointer_int_sum): Do the negation in sizetype.\n\n\t* c-common.c (pointer_int_sum): Do the negation in sizetype.\n\nFrom-SVN: r126108", "tree": {"sha": "5976c29f228db9cd8c5b348833f6a8f115e967e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5976c29f228db9cd8c5b348833f6a8f115e967e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/comments", "author": null, "committer": null, "parents": [{"sha": "e444a887ab80c9232354b3070da96a139ea403c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e444a887ab80c9232354b3070da96a139ea403c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e444a887ab80c9232354b3070da96a139ea403c8"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "082b207bc0e7c3d602de20748be380ac66e2ebc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "patch": "@@ -1,3 +1,7 @@\n+2007-06-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-common.c (pointer_int_sum): Do the negation in sizetype.\n+\n 2007-06-28  DJ Delorie  <dj@redhat.com>\n \n \t* config/m32c/m32c.h (OVERRIDE_OPTIONS): Omit unneeded semicolon."}, {"sha": "5243dd749f9ebb818a1d6f04fcb10bae0578eddc", "filename": "gcc/c-common.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "patch": "@@ -2627,7 +2627,6 @@ pointer_int_sum (enum tree_code resultcode, tree ptrop, tree intop)\n   tree size_exp, ret;\n \n   /* The result is a pointer of the same type that is being added.  */\n-\n   tree result_type = TREE_TYPE (ptrop);\n \n   if (TREE_CODE (TREE_TYPE (result_type)) == VOID_TYPE)\n@@ -2661,7 +2660,6 @@ pointer_int_sum (enum tree_code resultcode, tree ptrop, tree intop)\n      contains a constant term, apply distributive law\n      and multiply that constant term separately.\n      This helps produce common subexpressions.  */\n-\n   if ((TREE_CODE (intop) == PLUS_EXPR || TREE_CODE (intop) == MINUS_EXPR)\n       && !TREE_CONSTANT (intop)\n       && TREE_CONSTANT (TREE_OPERAND (intop, 1))\n@@ -2690,25 +2688,22 @@ pointer_int_sum (enum tree_code resultcode, tree ptrop, tree intop)\n \n   /* Convert the integer argument to a type the same size as sizetype\n      so the multiply won't overflow spuriously.  */\n-\n   if (TYPE_PRECISION (TREE_TYPE (intop)) != TYPE_PRECISION (sizetype)\n       || TYPE_UNSIGNED (TREE_TYPE (intop)) != TYPE_UNSIGNED (sizetype))\n     intop = convert (c_common_type_for_size (TYPE_PRECISION (sizetype),\n \t\t\t\t\t     TYPE_UNSIGNED (sizetype)), intop);\n \n   /* Replace the integer argument with a suitable product by the object size.\n      Do this multiplication as signed, then convert to the appropriate\n-     pointer type (actually unsigned integral).  */\n-\n-  intop = build_binary_op (MULT_EXPR, intop,\n-\t\t\t   convert (TREE_TYPE (intop), size_exp), 1);\n+     type for the pointer operation.  */\n+  intop = convert (sizetype,\n+\t\t   build_binary_op (MULT_EXPR, intop,\n+\t\t\t\t    convert (TREE_TYPE (intop), size_exp), 1));\n \n+  /* Create the sum or difference.  */\n   if (resultcode == MINUS_EXPR)\n-    intop = fold_build1 (NEGATE_EXPR, TREE_TYPE (intop), intop);\n-\n-  intop = convert (sizetype, intop);\n+    intop = fold_build1 (NEGATE_EXPR, sizetype, intop);\n \n-  /* Create the sum or difference.  */\n   ret = fold_build2 (POINTER_PLUS_EXPR, result_type, ptrop, intop);\n \n   fold_undefer_and_ignore_overflow_warnings ();"}, {"sha": "d023d472c9821e505731b84cc92641db4b9fb03f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "patch": "@@ -1,3 +1,7 @@\n+2007-06-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/pointer-arith-9.c: New test.\n+\n 2007-06-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/32483"}, {"sha": "2d26112720049d339d5042a0ccc65ecd6c083e69", "filename": "gcc/testsuite/gcc.dg/pointer-arith-9.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpointer-arith-9.c?ref=280f1ffa2782edfc55fa6e0f8c6071b85b94b7cf", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void *foo(void)\n+{\n+  return (void *)0 - 1;\n+}"}]}