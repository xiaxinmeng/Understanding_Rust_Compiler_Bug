{"sha": "969d578c2df1fd86ad6a29347ddbaa8ff248df75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5ZDU3OGMyZGYxZmQ4NmFkNmEyOTM0N2RkYmFhOGZmMjQ4ZGY3NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-11-03T13:13:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-11-03T13:13:33Z"}, "message": "re PR lto/48217 (lto mishandles quotes in command line defines)\n\n2011-11-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/48217\n\t* lto-wrapper.c (get_options_from_collect_gcc_options): Properly\n\tdecode an encoded literal '.\n\nFrom-SVN: r180822", "tree": {"sha": "77b4bd3b0b602c1f3a2f66b93619cd6f7c55f082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77b4bd3b0b602c1f3a2f66b93619cd6f7c55f082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/969d578c2df1fd86ad6a29347ddbaa8ff248df75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969d578c2df1fd86ad6a29347ddbaa8ff248df75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/969d578c2df1fd86ad6a29347ddbaa8ff248df75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969d578c2df1fd86ad6a29347ddbaa8ff248df75/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f44e38ac7b2d2bb146e512e71dd698e3c552e9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f44e38ac7b2d2bb146e512e71dd698e3c552e9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f44e38ac7b2d2bb146e512e71dd698e3c552e9e"}], "stats": {"total": 57, "additions": 36, "deletions": 21}, "files": [{"sha": "9dd525eec2e5c0638fc0781da55b898fe8ee3303", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/969d578c2df1fd86ad6a29347ddbaa8ff248df75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/969d578c2df1fd86ad6a29347ddbaa8ff248df75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=969d578c2df1fd86ad6a29347ddbaa8ff248df75", "patch": "@@ -1,3 +1,9 @@\n+2011-11-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/48217\n+\t* lto-wrapper.c (get_options_from_collect_gcc_options): Properly\n+\tdecode an encoded literal '.\n+\n 2011-11-03  Tristan Gingold  <gingold@adacore.com>\n \n \t* collect2.c (main): Add support of -f (response file) on AIX."}, {"sha": "c1480f969b74a494a80cbba8fac6b392aec06f0e", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 30, "deletions": 21, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/969d578c2df1fd86ad6a29347ddbaa8ff248df75/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/969d578c2df1fd86ad6a29347ddbaa8ff248df75/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=969d578c2df1fd86ad6a29347ddbaa8ff248df75", "patch": "@@ -292,39 +292,48 @@ get_options_from_collect_gcc_options (const char *collect_gcc,\n \t\t\t\t      struct cl_decoded_option **decoded_options,\n \t\t\t\t      unsigned int *decoded_options_count)\n {\n+  struct obstack argv_obstack;\n   char *argv_storage;\n   const char **argv;\n-  int i, j, argc;\n-\n-  /* Count arguments, account for the program name.  */\n-  argc = 2;\n-  for (j = 0; collect_gcc_options[j] != '\\0'; ++j)\n-    if (collect_gcc_options[j] == '\\'')\n-      ++argc;\n-  if (argc % 2 != 0)\n-    fatal (\"malformed COLLECT_GCC_OPTIONS\");\n-\n-  /* Copy the options to a argv-like array.  */\n-  argc /= 2;\n-  argv = (const char **) xmalloc ((argc + 2) * sizeof (char *));\n-  argv[0] = collect_gcc;\n+  int j, k, argc;\n+\n   argv_storage = xstrdup (collect_gcc_options);\n-  for (i = 1, j = 0; argv_storage[j] != '\\0'; ++j)\n+  obstack_init (&argv_obstack);\n+  obstack_ptr_grow (&argv_obstack, collect_gcc);\n+\n+  for (j = 0, k = 0; argv_storage[j] != '\\0'; ++j)\n     {\n       if (argv_storage[j] == '\\'')\n \t{\n-\t  argv[i++] = &argv_storage[++j];\n-\t  while (argv_storage[j] != '\\'')\n-\t    ++j;\n-\t  argv_storage[j] = '\\0';\n+\t  obstack_ptr_grow (&argv_obstack, &argv_storage[k]);\n+\t  ++j;\n+\t  do\n+\t    {\n+\t      if (argv_storage[j] == '\\0')\n+\t\tfatal (\"malformed COLLECT_GCC_OPTIONS\");\n+\t      else if (strncmp (&argv_storage[j], \"'\\\\''\", 4) == 0)\n+\t\t{\n+\t\t  argv_storage[k++] = '\\'';\n+\t\t  j += 4;\n+\t\t}\n+\t      else if (argv_storage[j] == '\\'')\n+\t\tbreak;\n+\t      else\n+\t\targv_storage[k++] = argv_storage[j++];\n+\t    }\n+\t  while (1);\n+\t  argv_storage[k++] = '\\0';\n \t}\n     }\n-  argv[i] = NULL;\n+\n+  obstack_ptr_grow (&argv_obstack, NULL);\n+  argc = obstack_object_size (&argv_obstack) / sizeof (void *) - 1;\n+  argv = XOBFINISH (&argv_obstack, const char **);\n \n   decode_cmdline_options_to_array (argc, (const char **)argv,\n \t\t\t\t   lang_mask,\n \t\t\t\t   decoded_options, decoded_options_count);\n-  free (argv);\n+  obstack_free (&argv_obstack, NULL);\n }\n \n "}]}