{"sha": "e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkwYzU2YzZiMmE5MGUwYTBkMWE5N2EwMjM4ZGEwYjRjZDViNTYzZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-12-19T12:16:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-12-19T12:16:56Z"}, "message": "re PR debug/55730 (ICE in mem_loc_descriptor, at dwarf2out.c:12725)\n\n\tPR debug/55730\n\t* dwarf2out.c (mem_loc_descriptor): Ignore CLOBBER.\n\t* valtrack.c (gen_lowpart_for_debug): New function.\n\t(propagate_for_debug): Temporarily set rtl_hooks.gen_lowpart_no_emit\n\tto gen_lowpart_for_debug.\n\n\t* gcc.dg/debug/pr55730.c: New test.\n\nFrom-SVN: r194607", "tree": {"sha": "3e5bc702a707a5970dfee20b5b6e325902808a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e5bc702a707a5970dfee20b5b6e325902808a70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da942ca0e2814f1f7420e508e80d9939cf799390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da942ca0e2814f1f7420e508e80d9939cf799390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da942ca0e2814f1f7420e508e80d9939cf799390"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "34b5836fd56a5e8a0a34ff9d0cbd4e7165c3a3c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "patch": "@@ -1,3 +1,11 @@\n+2012-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/55730\n+\t* dwarf2out.c (mem_loc_descriptor): Ignore CLOBBER.\n+\t* valtrack.c (gen_lowpart_for_debug): New function.\n+\t(propagate_for_debug): Temporarily set rtl_hooks.gen_lowpart_no_emit\n+\tto gen_lowpart_for_debug.\n+\n 2012-12-18  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/55683"}, {"sha": "a86525094e85fff55bd873fde9a6efc294afd195", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "patch": "@@ -12714,6 +12714,7 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n     case CONST_VECTOR:\n     case CONST_FIXED:\n     case CLRSB:\n+    case CLOBBER:\n       /* If delegitimize_address couldn't do anything with the UNSPEC, we\n \t can't express it in the debug info.  This can happen e.g. with some\n \t TLS UNSPECs.  */"}, {"sha": "81693bf15ff75c7240937ccae00d80c89ccd55ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "patch": "@@ -1,3 +1,8 @@\n+2012-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/55730\n+\t* gcc.dg/debug/pr55730.c: New test.\n+\n 2012-12-18  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/55683"}, {"sha": "073d83d759a108d71e300c861dd897a1d0494998", "filename": "gcc/testsuite/gcc.dg/debug/pr55730.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr55730.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr55730.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr55730.c?ref=e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "patch": "@@ -0,0 +1,24 @@\n+/* PR debug/55730 */\n+/* { dg-do compile } */\n+/* { dg-options \"-w\" } */\n+\n+union U\n+{\n+  float f;\n+  int i;\n+};\n+\n+void\n+foo (unsigned short *x, unsigned char y)\n+{\n+  unsigned char g;\n+  union U u;\n+  if (u.i < 0)\n+    g = 0;\n+  else\n+    {\n+      u.f = u.f * (255.0F / 256.0F) + 32768.0F;\n+      g = (unsigned char) u.i;\n+    }\n+  *x = (g << 8) | y;\n+}"}, {"sha": "07ef12500aec7d2e68ea2ad862402edee4e96cd5", "filename": "gcc/valtrack.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Fvaltrack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d/gcc%2Fvaltrack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvaltrack.c?ref=e90c56c6b2a90e0a0d1a97a0238da0b4cd5b563d", "patch": "@@ -29,6 +29,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"emit-rtl.h\"\n \n+/* gen_lowpart_no_emit hook implementation for DEBUG_INSNs.  In DEBUG_INSNs,\n+   all lowpart SUBREGs are valid, despite what the machine requires for\n+   instructions.  */\n+\n+static rtx\n+gen_lowpart_for_debug (enum machine_mode mode, rtx x)\n+{\n+  rtx result = gen_lowpart_if_possible (mode, x);\n+  if (result)\n+    return result;\n+\n+  if (GET_MODE (x) != VOIDmode)\n+    return gen_rtx_raw_SUBREG (mode, x,\n+\t\t\t       subreg_lowpart_offset (mode, GET_MODE (x)));\n+\n+  return NULL_RTX;\n+}\n+\n /* Replace auto-increment addressing modes with explicit operations to access\n    the same addresses without modifying the corresponding registers.  */\n \n@@ -158,13 +176,16 @@ propagate_for_debug (rtx insn, rtx last, rtx dest, rtx src,\n \t\t     basic_block this_basic_block)\n {\n   rtx next, loc, end = NEXT_INSN (BB_END (this_basic_block));\n+  rtx (*saved_rtl_hook_no_emit) (enum machine_mode, rtx);\n \n   struct rtx_subst_pair p;\n   p.to = src;\n   p.adjusted = false;\n \n   next = NEXT_INSN (insn);\n   last = NEXT_INSN (last);\n+  saved_rtl_hook_no_emit = rtl_hooks.gen_lowpart_no_emit;\n+  rtl_hooks.gen_lowpart_no_emit = gen_lowpart_for_debug;\n   while (next != last && next != end)\n     {\n       insn = next;\n@@ -179,6 +200,7 @@ propagate_for_debug (rtx insn, rtx last, rtx dest, rtx src,\n \t  df_insn_rescan (insn);\n \t}\n     }\n+  rtl_hooks.gen_lowpart_no_emit = saved_rtl_hook_no_emit;\n }\n \n /* Initialize DEBUG to an empty list, and clear USED, if given.  */"}]}