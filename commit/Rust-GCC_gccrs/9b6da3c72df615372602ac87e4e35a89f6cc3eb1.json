{"sha": "9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI2ZGEzYzcyZGY2MTUzNzI2MDJhYzg3ZTRlMzVhODlmNmNjM2ViMQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-02-21T09:06:57Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-02-21T09:06:57Z"}, "message": "re PR fortran/60234 ([OOP] ICE in generate_finalization_wrapper at fortran/class.c:1883)\n\n2014-02-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60234\n\t* gfortran.h (gfc_build_class_symbol): Removed argument.\n\t* class.c (gfc_add_component_ref): Fix up missing vtype if necessary.\n\t(gfc_build_class_symbol): Remove argument 'delayed_vtab'. vtab is always\n\tdelayed now, except for unlimited polymorphics.\n\t(comp_is_finalizable): Procedure pointer components are not finalizable.\n\t* decl. (build_sym, build_struct, attr_decl1): Removed argument of\n\t'gfc_build_class_symbol'.\n\t* match.c (copy_ts_from_selector_to_associate, select_type_set_tmp):\n\tDitto.\n\t* symbol.c (gfc_set_default_type): Ditto.\n\n\n2014-02-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60234\n\t* gfortran.dg/finalize_23.f90: New.\n\nFrom-SVN: r207986", "tree": {"sha": "1b9dc5c56919f62925c5e6055abd1a153bdf2466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b9dc5c56919f62925c5e6055abd1a153bdf2466"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b156fd0255e9a65102d4d89ff9bf6a82c5389c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b156fd0255e9a65102d4d89ff9bf6a82c5389c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b156fd0255e9a65102d4d89ff9bf6a82c5389c6"}], "stats": {"total": 93, "additions": 75, "deletions": 18}, "files": [{"sha": "c27a1d0d0d427af589558992e6c0b9a3bf33c222", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -1,3 +1,17 @@\n+2014-02-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60234\n+\t* gfortran.h (gfc_build_class_symbol): Removed argument.\n+\t* class.c (gfc_add_component_ref): Fix up missing vtype if necessary.\n+\t(gfc_build_class_symbol): Remove argument 'delayed_vtab'. vtab is always\n+\tdelayed now, except for unlimited polymorphics.\n+\t(comp_is_finalizable): Procedure pointer components are not finalizable.\n+\t* decl. (build_sym, build_struct, attr_decl1): Removed argument of\n+\t'gfc_build_class_symbol'.\n+\t* match.c (copy_ts_from_selector_to_associate, select_type_set_tmp):\n+\tDitto.\n+\t* symbol.c (gfc_set_default_type): Ditto.\n+\n 2014-02-19  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/60232"}, {"sha": "fc228cfde1b0e7b88b0b5cb40cba167384bf8a25", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -218,6 +218,14 @@ gfc_add_component_ref (gfc_expr *e, const char *name)\n \tbreak;\n       tail = &((*tail)->next);\n     }\n+  if (derived->components->next->ts.type == BT_DERIVED &&\n+      derived->components->next->ts.u.derived == NULL)\n+    {\n+      /* Fix up missing vtype.  */\n+      gfc_symbol *vtab = gfc_find_derived_vtab (derived->components->ts.u.derived);\n+      gcc_assert (vtab);\n+      derived->components->next->ts.u.derived = vtab->ts.u.derived;\n+    }\n   if (*tail != NULL && strcmp (name, \"_data\") == 0)\n     next = *tail;\n   (*tail) = gfc_get_ref();\n@@ -543,7 +551,7 @@ gfc_intrinsic_hash_value (gfc_typespec *ts)\n \n bool\n gfc_build_class_symbol (gfc_typespec *ts, symbol_attribute *attr,\n-\t\t\tgfc_array_spec **as, bool delayed_vtab)\n+\t\t\tgfc_array_spec **as)\n {\n   char name[GFC_MAX_SYMBOL_LEN+1], tname[GFC_MAX_SYMBOL_LEN+1];\n   gfc_symbol *fclass;\n@@ -637,16 +645,17 @@ gfc_build_class_symbol (gfc_typespec *ts, symbol_attribute *attr,\n       if (!gfc_add_component (fclass, \"_vptr\", &c))\n \treturn false;\n       c->ts.type = BT_DERIVED;\n-      if (delayed_vtab\n-\t  || (ts->u.derived->f2k_derived\n-\t      && ts->u.derived->f2k_derived->finalizers))\n-\tc->ts.u.derived = NULL;\n-      else\n+\n+      if (ts->u.derived->attr.unlimited_polymorphic)\n \t{\n \t  vtab = gfc_find_derived_vtab (ts->u.derived);\n \t  gcc_assert (vtab);\n \t  c->ts.u.derived = vtab->ts.u.derived;\n \t}\n+      else\n+\t/* Build vtab later.  */\n+\tc->ts.u.derived = NULL;\n+\n       c->attr.access = ACCESS_PRIVATE;\n       c->attr.pointer = 1;\n     }\n@@ -790,7 +799,9 @@ has_finalizer_component (gfc_symbol *derived)\n static bool\n comp_is_finalizable (gfc_component *comp)\n {\n-  if (comp->attr.allocatable && comp->ts.type != BT_CLASS)\n+  if (comp->attr.proc_pointer)\n+    return false;\n+  else if (comp->attr.allocatable && comp->ts.type != BT_CLASS)\n     return true;\n   else if (comp->ts.type == BT_DERIVED && !comp->attr.pointer\n \t   && (comp->ts.u.derived->attr.alloc_comp"}, {"sha": "2d405fe983802fb829bb5b014d01d109beb0de4f", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -1199,7 +1199,7 @@ build_sym (const char *name, gfc_charlen *cl, bool cl_deferred,\n   sym->attr.implied_index = 0;\n \n   if (sym->ts.type == BT_CLASS)\n-    return gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false);\n+    return gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as);\n \n   return true;\n }\n@@ -1656,10 +1656,7 @@ build_struct (const char *name, gfc_charlen *cl, gfc_expr **init,\n scalar:\n   if (c->ts.type == BT_CLASS)\n     {\n-      bool delayed = (gfc_state_stack->sym == c->ts.u.derived)\n-\t\t     || (!c->ts.u.derived->components\n-\t\t\t && !c->ts.u.derived->attr.zero_comp);\n-      bool t2 = gfc_build_class_symbol (&c->ts, &c->attr, &c->as, delayed);\n+      bool t2 = gfc_build_class_symbol (&c->ts, &c->attr, &c->as);\n \n       if (t)\n \tt = t2;\n@@ -6340,7 +6337,7 @@ attr_decl1 (void)\n     }\n \n   if (sym->ts.type == BT_CLASS\n-      && !gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false))\n+      && !gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as))\n     {\n       m = MATCH_ERROR;\n       goto cleanup;"}, {"sha": "197798c3922e8fdeb27913caabe796c1df73176b", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -2988,7 +2988,7 @@ bool gfc_is_class_container_ref (gfc_expr *e);\n gfc_expr *gfc_class_initializer (gfc_typespec *, gfc_expr *);\n unsigned int gfc_hash_value (gfc_symbol *);\n bool gfc_build_class_symbol (gfc_typespec *, symbol_attribute *,\n-\t\t\t\tgfc_array_spec **, bool);\n+\t\t\t     gfc_array_spec **);\n gfc_symbol *gfc_find_derived_vtab (gfc_symbol *);\n gfc_symbol *gfc_find_vtab (gfc_typespec *);\n gfc_symtree* gfc_find_typebound_proc (gfc_symbol*, bool*,"}, {"sha": "171774ce44538685289218d92a726bfe1faa5084", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -5148,8 +5148,7 @@ copy_ts_from_selector_to_associate (gfc_expr *associate, gfc_expr *selector)\n       assoc_sym->ts.type = BT_CLASS;\n       assoc_sym->ts.u.derived = CLASS_DATA (selector)->ts.u.derived;\n       assoc_sym->attr.pointer = 1;\n-      gfc_build_class_symbol (&assoc_sym->ts, &assoc_sym->attr,\n-\t\t\t      &assoc_sym->as, false);\n+      gfc_build_class_symbol (&assoc_sym->ts, &assoc_sym->attr, &assoc_sym->as);\n     }\n }\n \n@@ -5273,7 +5272,7 @@ select_type_set_tmp (gfc_typespec *ts)\n \n   if (ts->type == BT_CLASS)\n     gfc_build_class_symbol (&tmp->n.sym->ts, &tmp->n.sym->attr,\n-\t\t\t    &tmp->n.sym->as, false);\n+\t\t\t    &tmp->n.sym->as);\n     }\n \n   /* Add an association for it, so the rest of the parser knows it is"}, {"sha": "66668720b7b9839d87b662e0d9959f7efc6657aa", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -262,7 +262,7 @@ gfc_set_default_type (gfc_symbol *sym, int error_flag, gfc_namespace *ns)\n   if (ts->type == BT_CHARACTER && ts->u.cl)\n     sym->ts.u.cl = gfc_new_charlen (sym->ns, ts->u.cl);\n   else if (ts->type == BT_CLASS\n-\t   && !gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as, false))\n+\t   && !gfc_build_class_symbol (&sym->ts, &sym->attr, &sym->as))\n     return false;\n \n   if (sym->attr.is_bind_c == 1 && gfc_option.warn_c_binding_type)"}, {"sha": "a247f720eedfecfb16dbf5864cde3064550e7cf3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -1,3 +1,8 @@\n+2014-02-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60234\n+\t* gfortran.dg/finalize_23.f90: New.\n+\n 2014-02-21  Adam Butcher  <adam@jessamine.co.uk>\n \n \tPR c++/60052"}, {"sha": "ea3972981dab53bc7756d0202fa357c0cb5b5e11", "filename": "gcc/testsuite/gfortran.dg/finalize_23.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6da3c72df615372602ac87e4e35a89f6cc3eb1/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_23.f90?ref=9b6da3c72df615372602ac87e4e35a89f6cc3eb1", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do compile }\n+!\n+! PR 60234: [4.9 Regression] [OOP] ICE in generate_finalization_wrapper at fortran/class.c:1883\n+!\n+! Contribued by Antony Lewis <antony@cosmologist.info>\n+\n+module ObjectLists\n+    implicit none\n+\n+    Type TObjectList\n+    contains\n+      FINAL :: finalize\n+    end Type\n+\n+    Type, extends(TObjectList):: TRealCompareList\n+    end Type\n+\n+contains\n+\n+  subroutine finalize(L)\n+    Type(TObjectList) :: L\n+  end subroutine\n+\n+\n+  integer function CompareReal(this)\n+    Class(TRealCompareList) :: this\n+  end function\n+\n+end module\n+\n+! { dg-final { cleanup-modules \"ObjectLists\" } }"}]}