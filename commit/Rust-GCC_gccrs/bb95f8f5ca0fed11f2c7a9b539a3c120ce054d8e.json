{"sha": "bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI5NWY4ZjVjYTBmZWQxMWYyYzdhOWI1MzlhM2MxMjBjZTA1NGQ4ZQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-30T10:00:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-30T10:00:19Z"}, "message": "Merge #536\n\n536: Revert change to ScanUnused to not scan Types r=philberty a=philberty\n\nThe scan dead-code pass will take over this role, but let's keep both\r\nrunning for a while and then we can update ScanUnused to only scan for\r\nunused labels and variables. Dead Code pass is important as it is not possible\r\nto rely on name resolution to know what symbols are used or not used.\r\nFurther resolution occurs during type resolution and the dead code pass runs after type resolution.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "005e8634eef039c17d6107e5d7ef88eec8d36834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/005e8634eef039c17d6107e5d7ef88eec8d36834"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg3ECzCRBK7hj4Ov3rIwAA16kIAAMgVCvs/xxru4bA7+WrPOsq\npC8Bjw7Er/ZQg5RlZYB5LQq2EEGdVV0K9XM/XNJXvMGOCIwEZIFJt6SlultfOSvB\nqH7ondUv7V58xyr1BqOb/REUWXB7dIP5YUvToSiZGz5uWlyu3xiYvEG7faEu9B/8\nAcfdIUAOIKoOGE7a1uDBjAFSl1ZD6dP4SvnhdvSXB8T0uUPdtTuAtUo0XthrZ3bG\nmBOv++yy24e+d/qSwjuxBhz8vRVmEhW3Qh+BeerXtTXuln8A3Zem3JEcF1PgdK7m\nzCNnJojmlyHCT/o2fDBngdhqVHS9dopbWV5Wa1IVF2KZRlcEvTjLEjfOVYn6xsY=\n=76a4\n-----END PGP SIGNATURE-----\n", "payload": "tree 005e8634eef039c17d6107e5d7ef88eec8d36834\nparent 1738bb8c76c499fdec244cea3d746db9438f8a11\nparent 59897751aa797c9c6e7e1d795bbc1afbb9c81e32\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625047219 +0000\ncommitter GitHub <noreply@github.com> 1625047219 +0000\n\nMerge #536\n\n536: Revert change to ScanUnused to not scan Types r=philberty a=philberty\n\nThe scan dead-code pass will take over this role, but let's keep both\r\nrunning for a while and then we can update ScanUnused to only scan for\r\nunused labels and variables. Dead Code pass is important as it is not possible\r\nto rely on name resolution to know what symbols are used or not used.\r\nFurther resolution occurs during type resolution and the dead code pass runs after type resolution.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1738bb8c76c499fdec244cea3d746db9438f8a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1738bb8c76c499fdec244cea3d746db9438f8a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1738bb8c76c499fdec244cea3d746db9438f8a11"}, {"sha": "59897751aa797c9c6e7e1d795bbc1afbb9c81e32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59897751aa797c9c6e7e1d795bbc1afbb9c81e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59897751aa797c9c6e7e1d795bbc1afbb9c81e32"}], "stats": {"total": 32, "additions": 10, "deletions": 22}, "files": [{"sha": "18d02a1920afe59be1a5819be803346933fa2ec6", "filename": "gcc/rust/resolve/rust-ast-resolve-unused.h", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Frust%2Fresolve%2Frust-ast-resolve-unused.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Frust%2Fresolve%2Frust-ast-resolve-unused.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-unused.h?ref=bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "patch": "@@ -19,7 +19,6 @@\n #ifndef RUST_AST_RESOLVE_UNUSED_H\n #define RUST_AST_RESOLVE_UNUSED_H\n \n-#include \"rust-hir-map.h\"\n #include \"rust-ast-resolve-base.h\"\n \n namespace Rust {\n@@ -36,20 +35,9 @@ class ScanUnused\n       bool ok = r->lookup_canonical_path (decl_node_id, &ident);\n       rust_assert (ok);\n \n-      Analysis::Mappings *map = Analysis::Mappings::get ();\n-      HirId decl_hir_id;\n-      // ScanUnused is conflicting with the dead code analysis here on types and\n-      // functions. So just ignoring the warnings of item which will be handled\n-      // by dead code analysis.\n-      HIR::Item *found_item = nullptr;\n-      if (map->lookup_node_to_hir (r->get_crate_num (), decl_node_id,\n-\t\t\t\t   &decl_hir_id))\n-\t{\n-\t  found_item = map->lookup_hir_item (r->get_crate_num (), decl_hir_id);\n-\t}\n-\n+      bool name_starts_with_underscore = ident.get ().at (0) == '_';\n       if (!r->have_references_for_node (decl_node_id)\n-\t  && ident.get ().at (0) != '_' && !found_item)\n+\t  && !name_starts_with_underscore)\n \t{\n \t  rust_warning_at (locus, 0, \"unused name '%s'\", ident.get ().c_str ());\n \t}\n@@ -61,8 +49,7 @@ class ScanUnused\n   {\n     auto resolver = Resolver::get ();\n     resolver->iterate_name_ribs ([&] (Rib *r) -> void { ScanRib (r); });\n-    // ScanUnused is conflicting with the dead code analysis here on types.\n-    // resolver->iterate_type_ribs ([&] (Rib *r) -> void { ScanRib (r); });\n+    resolver->iterate_type_ribs ([&] (Rib *r) -> void { ScanRib (r); });\n     resolver->iterate_label_ribs ([&] (Rib *r) -> void { ScanRib (r); });\n   }\n };"}, {"sha": "bc02e2ade0f68554779355a6527cdf80231cfbcc", "filename": "gcc/testsuite/rust/compile/torture/cfg_attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fcfg_attr.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fcfg_attr.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fcfg_attr.rs?ref=bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "patch": "@@ -3,6 +3,6 @@ use std::env; // Add one line so gccrs doesn't believe we're parsing a shebang\n #[cfg_attr(feature = \"somefeature\", attribute = \"someattr\")]\n struct Feature;\n // { dg-warning \"struct is never constructed\" \"\" { target *-*-* } .-1 }\n+// { dg-warning \"unused name\" \"\" { target *-*-* } .-2 }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "74297e03c7daaa1bee420cacf415c9686551fb93", "filename": "gcc/testsuite/rust/compile/torture/unused1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funused1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funused1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funused1.rs?ref=bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "patch": "@@ -4,6 +4,7 @@ fn test() -> i32 {\n \n fn unused() -> i32 {\n     // { dg-warning \"function is never used: 'unused'\" \"\" { target *-*-* } .-1 }\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-2 }\n     2\n }\n "}, {"sha": "a282c73f186b820dea812c6ec60642e25bf193c9", "filename": "gcc/testsuite/rust/compile/torture/unused_struct.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funused_struct.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funused_struct.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funused_struct.rs?ref=bb95f8f5ca0fed11f2c7a9b539a3c120ce054d8e", "patch": "@@ -1,8 +1,8 @@\n struct Foo {\n-// { dg-warning \"struct is never constructed\" \"\" { target *-*-* } .-1 }\n+    // { dg-warning \"struct is never constructed\" \"\" { target *-*-* } .-1 }\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-2 }\n     one: i32,\n-    two: i32\n+    two: i32,\n }\n \n-fn main() {\n-}\n\\ No newline at end of file\n+fn main() {}"}]}