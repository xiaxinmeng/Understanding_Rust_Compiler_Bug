{"sha": "b38bcccad0d85e4776e91fc5141382b60510e083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM4YmNjY2FkMGQ4NWU0Nzc2ZTkxZmM1MTQxMzgyYjYwNTEwZTA4Mw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2010-04-12T17:27:15Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2010-04-12T17:27:15Z"}, "message": "pa.c (hppa_legitimize_address): Remove unused variable orig_base.\n\n2010-04-12  Steve Ellcey  <sje@cup.hp.com>\n\n\t* config/pa/pa.c (hppa_legitimize_address): Remove unused variable\n\torig_base.\n\t* config/pa/pa.md (call, call_value): Remove unused variable call_insn.\n\nFrom-SVN: r158230", "tree": {"sha": "873b576121d677e9b8007074cffe7fd13817236b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/873b576121d677e9b8007074cffe7fd13817236b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b38bcccad0d85e4776e91fc5141382b60510e083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b38bcccad0d85e4776e91fc5141382b60510e083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b38bcccad0d85e4776e91fc5141382b60510e083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b38bcccad0d85e4776e91fc5141382b60510e083/comments", "author": null, "committer": null, "parents": [{"sha": "fc2f1f53441f8af3868e7c05c3b5a23007eeb2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc2f1f53441f8af3868e7c05c3b5a23007eeb2c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc2f1f53441f8af3868e7c05c3b5a23007eeb2c1"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "e46891f60bec4b2bb19270f303ad1fe7d2419c6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38bcccad0d85e4776e91fc5141382b60510e083/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38bcccad0d85e4776e91fc5141382b60510e083/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b38bcccad0d85e4776e91fc5141382b60510e083", "patch": "@@ -1,3 +1,9 @@\n+2010-04-12  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* config/pa/pa.c (hppa_legitimize_address): Remove unused variable\n+\torig_base.\n+\t* config/pa/pa.md (call, call_value): Remove unused variable call_insn.\n+\n 2010-04-12  Steve Ellcey  <sje@cup.hp.com>\n \n \t* function.c (assign_parms_initialize_all): Add unused attribute"}, {"sha": "13e81b4cd1b27357b41be41f5e47db7313df69bd", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38bcccad0d85e4776e91fc5141382b60510e083/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38bcccad0d85e4776e91fc5141382b60510e083/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=b38bcccad0d85e4776e91fc5141382b60510e083", "patch": "@@ -1066,7 +1066,7 @@ hppa_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n     {\n \n       /* First, try and figure out what to use as a base register.  */\n-      rtx reg1, reg2, base, idx, orig_base;\n+      rtx reg1, reg2, base, idx;\n \n       reg1 = XEXP (XEXP (x, 0), 1);\n       reg2 = XEXP (x, 1);\n@@ -1088,7 +1088,6 @@ hppa_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n \t  && REG_POINTER (reg1))\n \t{\n \t  base = reg1;\n-\t  orig_base = XEXP (XEXP (x, 0), 1);\n \t  idx = gen_rtx_PLUS (Pmode,\n \t\t\t      gen_rtx_MULT (Pmode,\n \t\t\t\t\t    XEXP (XEXP (XEXP (x, 0), 0), 0),\n@@ -1099,7 +1098,6 @@ hppa_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n \t       && REG_POINTER (reg2))\n \t{\n \t  base = reg2;\n-\t  orig_base = XEXP (x, 1);\n \t  idx = XEXP (x, 0);\n \t}\n "}, {"sha": "bb4d46bc8546e2d392fd6347a0eb9bd4b75f06c7", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b38bcccad0d85e4776e91fc5141382b60510e083/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b38bcccad0d85e4776e91fc5141382b60510e083/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=b38bcccad0d85e4776e91fc5141382b60510e083", "patch": "@@ -7232,7 +7232,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n   \"\"\n   \"\n {\n-  rtx op, call_insn;\n+  rtx op;\n   rtx nb = operands[1];\n \n   if (TARGET_PORTABLE_RUNTIME)\n@@ -7297,11 +7297,11 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n     {\n       rtx r4 = gen_rtx_REG (word_mode, 4);\n       if (GET_CODE (op) == SYMBOL_REF)\n-\tcall_insn = emit_call_insn (gen_call_symref_64bit (op, nb, r4));\n+\temit_call_insn (gen_call_symref_64bit (op, nb, r4));\n       else\n \t{\n \t  op = force_reg (word_mode, op);\n-\t  call_insn = emit_call_insn (gen_call_reg_64bit (op, nb, r4));\n+\t  emit_call_insn (gen_call_reg_64bit (op, nb, r4));\n \t}\n     }\n   else\n@@ -7311,10 +7311,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t  if (flag_pic)\n \t    {\n \t      rtx r4 = gen_rtx_REG (word_mode, 4);\n-\t      call_insn = emit_call_insn (gen_call_symref_pic (op, nb, r4));\n+\t      emit_call_insn (gen_call_symref_pic (op, nb, r4));\n \t    }\n \t  else\n-\t    call_insn = emit_call_insn (gen_call_symref (op, nb));\n+\t    emit_call_insn (gen_call_symref (op, nb));\n \t}\n       else\n \t{\n@@ -7323,10 +7323,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t  if (flag_pic)\n \t    {\n \t      rtx r4 = gen_rtx_REG (word_mode, 4);\n-\t      call_insn = emit_call_insn (gen_call_reg_pic (nb, r4));\n+\t      emit_call_insn (gen_call_reg_pic (nb, r4));\n \t    }\n \t  else\n-\t    call_insn = emit_call_insn (gen_call_reg (nb));\n+\t    emit_call_insn (gen_call_reg (nb));\n \t}\n     }\n \n@@ -7724,7 +7724,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n   \"\"\n   \"\n {\n-  rtx op, call_insn;\n+  rtx op;\n   rtx dst = operands[0];\n   rtx nb = operands[2];\n \n@@ -7790,13 +7790,11 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n     {\n       rtx r4 = gen_rtx_REG (word_mode, 4);\n       if (GET_CODE (op) == SYMBOL_REF)\n-\tcall_insn\n-\t  = emit_call_insn (gen_call_val_symref_64bit (dst, op, nb, r4));\n+\t  emit_call_insn (gen_call_val_symref_64bit (dst, op, nb, r4));\n       else\n \t{\n \t  op = force_reg (word_mode, op);\n-\t  call_insn\n-\t    = emit_call_insn (gen_call_val_reg_64bit (dst, op, nb, r4));\n+\t  emit_call_insn (gen_call_val_reg_64bit (dst, op, nb, r4));\n \t}\n     }\n   else\n@@ -7806,11 +7804,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t  if (flag_pic)\n \t    {\n \t      rtx r4 = gen_rtx_REG (word_mode, 4);\n-\t      call_insn\n-\t\t= emit_call_insn (gen_call_val_symref_pic (dst, op, nb, r4));\n+\t      emit_call_insn (gen_call_val_symref_pic (dst, op, nb, r4));\n \t    }\n \t  else\n-\t    call_insn = emit_call_insn (gen_call_val_symref (dst, op, nb));\n+\t    emit_call_insn (gen_call_val_symref (dst, op, nb));\n \t}\n       else\n \t{\n@@ -7819,10 +7816,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t  if (flag_pic)\n \t    {\n \t      rtx r4 = gen_rtx_REG (word_mode, 4);\n-\t      call_insn = emit_call_insn (gen_call_val_reg_pic (dst, nb, r4));\n+\t      emit_call_insn (gen_call_val_reg_pic (dst, nb, r4));\n \t    }\n \t  else\n-\t    call_insn = emit_call_insn (gen_call_val_reg (dst, nb));\n+\t    emit_call_insn (gen_call_val_reg (dst, nb));\n \t}\n     }\n "}]}