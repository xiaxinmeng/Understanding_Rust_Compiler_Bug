{"sha": "c192da272be503d6d70ee09165cbac6de7b0b88a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE5MmRhMjcyYmU1MDNkNmQ3MGVlMDkxNjVjYmFjNmRlN2IwYjg4YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-29T11:52:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-29T11:52:14Z"}, "message": "(gen-protos.o, scan.o, fix-header.o, scan-decls.o):\n\nAdd rule to compile using $(HOST_CC).\nShow using hconfig.h.\n\nFrom-SVN: r5928", "tree": {"sha": "8ae8af4592024fec8f2750f2c2e0d849c62a78ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ae8af4592024fec8f2750f2c2e0d849c62a78ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c192da272be503d6d70ee09165cbac6de7b0b88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c192da272be503d6d70ee09165cbac6de7b0b88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c192da272be503d6d70ee09165cbac6de7b0b88a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c192da272be503d6d70ee09165cbac6de7b0b88a/comments", "author": null, "committer": null, "parents": [{"sha": "415f766a6507d0898d7c169c2d29a6b06fbf7991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415f766a6507d0898d7c169c2d29a6b06fbf7991", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415f766a6507d0898d7c169c2d29a6b06fbf7991"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "69ca8c6411704838dde73e67fbc027bffda4b62c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c192da272be503d6d70ee09165cbac6de7b0b88a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c192da272be503d6d70ee09165cbac6de7b0b88a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c192da272be503d6d70ee09165cbac6de7b0b88a", "patch": "@@ -1578,8 +1578,11 @@ gen-protos: gen-protos.o scan.o\n \t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o gen-protos \\\n \t  gen-protos.o scan.o\n \n-gen-protos.o: gen-protos.c scan.h\n-scan.o: scan.c scan.h\n+gen-protos.o: gen-protos.c scan.h hconfig.h\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c\n+\n+scan.o: scan.c scan.h hconfig.h\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c\n \n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefile\n \tcat deduced.h $(srcdir)/sys-protos.h > fixtmp.c\n@@ -1592,8 +1595,11 @@ fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_OBSTACK)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o fix-header \\\n \t  fix-header.o scan-decls.o scan.o $(HOST_OBSTACK)\n \n-fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h\n-scan-decls.o: scan-decls.c scan.h\n+fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h hconfig.h\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n+\n+scan-decls.o: scan-decls.c scan.h hconfig.h\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c\n \n # stmp-fixproto depends on this, not on fix-header directly.\n # The idea is to make sure fix-header gets built,"}]}