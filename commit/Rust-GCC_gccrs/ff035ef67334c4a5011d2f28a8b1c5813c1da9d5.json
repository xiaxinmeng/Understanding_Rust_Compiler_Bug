{"sha": "ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYwMzVlZjY3MzM0YzRhNTAxMWQyZjI4YThiMWM1ODEzYzFkYTlkNQ==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2017-11-17T22:32:46Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T22:32:46Z"}, "message": "Enable building libssp with Intel CET\n\nlibssp/\n\t* Makefile.am: Update AM_CFLAGS, update\n\tlibssp_nonshared_la_CFLAGS.\n\t* Makefile.in: Regenerate.\n\t* configure: Likewise.\n\t* aclocal.m4: Likewise.\n\t* configure.ac: Set CET_FLAGS. Update XCFLAGS.\n\nFrom-SVN: r254898", "tree": {"sha": "d27c32575d5c526f1257183c9e0f5c7621c6717d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d27c32575d5c526f1257183c9e0f5c7621c6717d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e2fc0551b547d1ecb498d18fc599bc73289629f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2fc0551b547d1ecb498d18fc599bc73289629f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e2fc0551b547d1ecb498d18fc599bc73289629f"}], "stats": {"total": 106, "additions": 100, "deletions": 6}, "files": [{"sha": "17df1ee2ff19f5fa9bb251793e8821526a368c3e", "filename": "libssp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "patch": "@@ -1,3 +1,12 @@\n+2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* Makefile.am: Update AM_CFLAGS, update\n+\tlibssp_nonshared_la_CFLAGS.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\t* aclocal.m4: Likewise.\n+\t* configure.ac: Set CET_FLAGS. Update XCFLAGS.\n+\n 2017-04-01  Jonathan Yong  <10walls@gmail.com>\n \n \t* ssp.c (__guard_setup): Suppress unused variable warning."}, {"sha": "9134f96383e0f7ab364552737e1bb8da4501b0f1", "filename": "libssp/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.am?ref=ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "patch": "@@ -34,6 +34,7 @@ version_dep =\n endif\n \n AM_CFLAGS = -Wall\n+AM_CFLAGS += $(XCFLAGS)\n \n toolexeclib_LTLIBRARIES = libssp.la libssp_nonshared.la\n \n@@ -53,7 +54,7 @@ libssp_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n \n libssp_nonshared_la_SOURCES = \\\n \tssp-local.c\n-libssp_nonshared_la_CFLAGS = -prefer-pic\n+libssp_nonshared_la_CFLAGS = -prefer-pic $(XCFLAGS)\n libssp_nonshared_la_LIBADD = \n libssp_nonshared_la_DEPENDENCIES = $(libssp_nonshared_la_LIBADD)\n libssp_nonshared_la_LDFLAGS = -static"}, {"sha": "e2a754008945fd9e3c0127ea72b6217effb03c4d", "filename": "libssp/Makefile.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.in?ref=ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "patch": "@@ -69,7 +69,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n-\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../lt~obsolete.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -210,6 +212,7 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n VERSION = @VERSION@\n+XCFLAGS = @XCFLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@\n@@ -286,7 +289,7 @@ gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n @LIBSSP_USE_SYMVER_FALSE@version_dep = \n @LIBSSP_USE_SYMVER_GNU_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_dep = $(srcdir)/ssp.map\n @LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_dep = ssp.map-sun\n-AM_CFLAGS = -Wall\n+AM_CFLAGS = -Wall $(XCFLAGS)\n toolexeclib_LTLIBRARIES = libssp.la libssp_nonshared.la\n libsubincludedir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)/include\n nobase_libsubinclude_HEADERS = ssp/ssp.h ssp/string.h ssp/stdio.h ssp/unistd.h\n@@ -304,7 +307,7 @@ libssp_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n libssp_nonshared_la_SOURCES = \\\n \tssp-local.c\n \n-libssp_nonshared_la_CFLAGS = -prefer-pic\n+libssp_nonshared_la_CFLAGS = -prefer-pic $(XCFLAGS)\n libssp_nonshared_la_LIBADD = \n libssp_nonshared_la_DEPENDENCIES = $(libssp_nonshared_la_LIBADD)\n libssp_nonshared_la_LDFLAGS = -static"}, {"sha": "7eeae0cf2a9a312205134d38a555560f25b4b511", "filename": "libssp/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Faclocal.m4?ref=ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "patch": "@@ -1000,3 +1000,5 @@ m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])\n m4_include([../lt~obsolete.m4])\n+m4_include([../config/enable.m4])\n+m4_include([../config/cet.m4])"}, {"sha": "a96b39197ffe34dbb10deeb67df03bebceef1d91", "filename": "libssp/configure", "status": "modified", "additions": 76, "deletions": 2, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "patch": "@@ -633,6 +633,7 @@ LIBSSP_USE_SYMVER_GNU_FALSE\n LIBSSP_USE_SYMVER_GNU_TRUE\n LIBSSP_USE_SYMVER_FALSE\n LIBSSP_USE_SYMVER_TRUE\n+XCFLAGS\n CPP\n am__fastdepCC_FALSE\n am__fastdepCC_TRUE\n@@ -736,6 +737,7 @@ enable_version_specific_runtime_libs\n enable_maintainer_mode\n enable_multilib\n enable_dependency_tracking\n+enable_cet\n enable_symvers\n enable_shared\n enable_static\n@@ -1376,6 +1378,8 @@ Optional Features:\n   --enable-multilib       build many library versions (default)\n   --disable-dependency-tracking  speeds up one-time build\n   --enable-dependency-tracking   do not reject slow dependency extractors\n+  --enable-cet            enable Intel CET in target libraries\n+                          [default=default]\n   --disable-symvers       disable symbol versioning for libssp\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n@@ -4077,6 +4081,76 @@ fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n CFLAGS=\"$save_CFLAGS\"\n \n+# Add CET specific flags if CET is enabled\n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|default) ;;\n+       *) as_fn_error \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=default\n+fi\n+\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      default)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mcet\"\n+fi\n+\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether hidden visibility is supported\" >&5\n $as_echo_n \"checking whether hidden visibility is supported... \" >&6; }\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -10671,7 +10745,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10674 \"configure\"\n+#line 10748 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10777,7 +10851,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10780 \"configure\"\n+#line 10854 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "0d228c17d1a38297fb4a6d280d6dfc7d98cc3f84", "filename": "libssp/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5/libssp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure.ac?ref=ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "patch": "@@ -62,6 +62,11 @@ void __attribute__((noinline)) bar (char *x)\n [AC_MSG_RESULT(no)])\n CFLAGS=\"$save_CFLAGS\"\n \n+# Add CET specific flags if CET is enabled\n+GCC_CET_FLAGS(CET_FLAGS)\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+AC_SUBST(XCFLAGS)\n+\n AC_MSG_CHECKING([whether hidden visibility is supported])\n AC_TRY_COMPILE([\n void __attribute__((visibility (\"hidden\"))) bar (void) {}],,"}]}