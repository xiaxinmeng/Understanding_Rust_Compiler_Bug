{"sha": "1f29c9132a46d0e89c6c5caaa5ee22215591af09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYyOWM5MTMyYTQ2ZDBlODljNmM1Y2FhYTVlZTIyMjE1NTkxYWYwOQ==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1994-07-11T17:21:24Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1994-07-11T17:21:24Z"}, "message": "(ASM_SPEC,STARTFILE_SPEC,LIB_SPEC): svr4 default.\n\nFrom-SVN: r7700", "tree": {"sha": "b4e96e83996e081be9fe2bf1f8e59ecae8422367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4e96e83996e081be9fe2bf1f8e59ecae8422367"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f29c9132a46d0e89c6c5caaa5ee22215591af09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f29c9132a46d0e89c6c5caaa5ee22215591af09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f29c9132a46d0e89c6c5caaa5ee22215591af09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f29c9132a46d0e89c6c5caaa5ee22215591af09/comments", "author": null, "committer": null, "parents": [{"sha": "36b8d79271161ba78739108d87811eac2586dc88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b8d79271161ba78739108d87811eac2586dc88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36b8d79271161ba78739108d87811eac2586dc88"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "99205cca39ca7e92eeee266a14b53e127664600d", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 32, "deletions": 11, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f29c9132a46d0e89c6c5caaa5ee22215591af09/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f29c9132a46d0e89c6c5caaa5ee22215591af09/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=1f29c9132a46d0e89c6c5caaa5ee22215591af09", "patch": "@@ -4,6 +4,7 @@\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Enhanced by Michael Meissner (meissner@osf.org)\n    Version 2 port by Tom Wood (twood@pets.sps.mot.com)\n+   Currently maintained by (gcc@dg-rtp.dg.com)\n \n This file is part of GNU CC.\n \n@@ -30,7 +31,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   (TARGET_SVR4 ? DWARF_DEBUG : SDB_DEBUG)\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.6 $\"\n+#define VERSION_INFO2   \"$Revision: 1.12 $\"\n #endif\n #ifndef NO_BUGS\n #define AS_BUG_IMMEDIATE_LABEL\n@@ -62,7 +63,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef\tTARGET_DEFAULT\n #define TARGET_DEFAULT\t(MASK_CHECK_ZERO_DIV\t | \\\n \t\t\t MASK_OCS_DEBUG_INFO\t | \\\n-\t\t\t MASK_OCS_FRAME_POSITION)\n+\t\t\t MASK_OCS_FRAME_POSITION | \\\n+\t\t\t MASK_SVR4)\n #undef\tCPU_DEFAULT\n #define CPU_DEFAULT MASK_88000\n \n@@ -88,7 +90,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef\tASM_SPEC\n #define ASM_SPEC \"\\\n %{V} %{v:%{!V:-V}} %{pipe:%{!.s: - }\\\n-%{msvr4:%{mversion-03.00:-KV3}%{!mversion-03.00:%{mversion-*:-KV%*}}}}\\\n+%{!msvr3:%{mversion-03.00:-KV3}%{!mversion-03.00:%{mversion-*:-KV%*}}}}\\\n %{!mlegend:%{mstandard:-Wc,off}}\\\n %{mlegend:-Wc,-fix-bb,-h\\\"gcc-\" VERSION_INFO2 \"\\\",-s\\\"%i\\\"\\\n %{traditional:,-lc}%{!traditional:,-lansi-c}\\\n@@ -102,15 +104,16 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef\tSTARTFILE_SPEC\n \n /* Linker and library spec's.\n+   -msvr4 is the default if -msvr3 is not specified.\n    -static, -shared, -symbolic, -h* and -z* access AT&T V.4 link options.\n-   -svr4 instructs gcc to place /usr/lib/values-X[cat].o on link the line.\n-   The absense of -msvr4 indicates linking done in a COFF environment and\n-   adds the link script to the link line.  In all environments, the first\n-   and last objects are crtbegin.o and crtend.o.\n-   When the -G link option is used (-shared and -symbolic) a final link is\n-   not being done.  */\n+   -svr4 instructs gcc to place /usr/lib/values-X[cat].o on the link line.\n+   -msvr3 indicates linking done in a COFF environment and the link\n+   script is added to the link line.  In all environments, the first\n+   and last objects are crtbegin.o (or bcscrtbegin.o) and crtend.o.\n+   When the -G link option is used (-shared and -symbolic) a final\n+   link is not being done.  */\n #undef\tLIB_SPEC\n-#define LIB_SPEC \"%{msvr4:%{!shared:-lstaticdgc}} %{!shared:%{!symbolic:-lc}} crtend.o%s\"\n+#define LIB_SPEC \"%{!msvr3:%{!shared:-lstaticdgc}} %{!shared:%{!symbolic:-lc}} crtend.o%s\"\n #undef\tLINK_SPEC\n #define LINK_SPEC \"%{z*} %{h*} %{V} %{v:%{!V:-V}} \\\n \t\t   %{static:-dn -Bstatic} \\\n@@ -120,7 +123,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef\tSTARTFILE_SPEC\n #define STARTFILE_SPEC \"%{!shared:%{!symbolic:%{pg:gcrt0.o%s} \\\n \t\t\t %{!pg:%{p:/lib/mcrt0.o}%{!p:/lib/crt0.o}} \\\n-\t\t\t %{!msvr4:m88kdgux.ld%s} crtbegin.o%s \\\n+\t\t\t %{msvr3:m88kdgux.ld%s bcscrtbegin.o%s} \\\n+\t\t\t %{!msvr3:crtbegin.o%s} \\\n \t\t\t %{svr4:%{ansi:/lib/values-Xc.o} \\\n \t\t\t  %{!ansi:%{traditional:/lib/values-Xt.o} \\\n \t\t\t   %{!traditional:/usr/lib/values-Xa.o}}}}}\"\n@@ -170,6 +174,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Override svr4.h and m88k.h except when compiling crtstuff.c.  These must\n    be constant strings when compiling crtstuff.c.  Otherwise, respect the\n    -mversion-STRING option used.  */\n+#undef INIT_SECTION_PREAMBLE\n+#undef INIT_SECTION_ASM_OP\n+#undef FINI_SECTION_ASM_OP\n+#undef CTORS_SECTION_ASM_OP\n+#undef DTORS_SECTION_ASM_OP\n+\n #if !defined (CRT_BEGIN) && !defined (CRT_END)\n #undef\tINIT_SECTION_ASM_OP\n #define INIT_SECTION_ASM_OP (TARGET_SVR4\t\t\t\\\n@@ -183,6 +193,17 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define DTORS_SECTION_ASM_OP (TARGET_SVR4\t\t\t\\\n \t\t\t      ? \"section\\t .dtors,\\\"aw\\\"\"\t\\\n \t\t\t      : \"section\\t .dtors,\\\"d\\\"\")\n+#else\n+/* These must be constant strings for crtstuff.c.  \n+   An elf and bcs crtbegin.o are needed since bcs does not  \n+   increment the stack pointer in the init section as elf does */\n+#ifndef BCS\n+#define INIT_SECTION_PREAMBLE asm (\"\\taddu\\tr31,r31,0x20\")  \n+#endif\n+#define INIT_SECTION_ASM_OP\t\"section\\t .init,\\\"x\\\"\"\n+#define FINI_SECTION_ASM_OP\t\"section\\t .fini,\\\"x\\\"\"\n+#define CTORS_SECTION_ASM_OP\t\"section\\t .ctors,\\\"d\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\"section\\t .dtors,\\\"d\\\"\"\n #endif /* crtstuff.c */\n \n /* The lists of global object constructors and global destructors are always"}]}