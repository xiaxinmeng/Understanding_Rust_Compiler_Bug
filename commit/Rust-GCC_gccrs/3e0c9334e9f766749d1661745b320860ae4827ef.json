{"sha": "3e0c9334e9f766749d1661745b320860ae4827ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UwYzkzMzRlOWY3NjY3NDlkMTY2MTc0NWIzMjA4NjBhZTQ4MjdlZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-13T08:55:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-13T08:55:40Z"}, "message": "Fix exception-specification of std::invoke\n\n\t* include/bits/invoke.h (__invoke): Fix exception-specification.\n\t* include/std/functional (invoke): Likewise.\n\t* testsuite/20_util/function_objects/invoke/1.cc: New test.\n\nFrom-SVN: r241089", "tree": {"sha": "de65450242299903cce5c67fcf15cc1599d140d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de65450242299903cce5c67fcf15cc1599d140d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e0c9334e9f766749d1661745b320860ae4827ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0c9334e9f766749d1661745b320860ae4827ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e0c9334e9f766749d1661745b320860ae4827ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0c9334e9f766749d1661745b320860ae4827ef/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92c5266bbd5378a5513f43edf23b1394621675a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c5266bbd5378a5513f43edf23b1394621675a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92c5266bbd5378a5513f43edf23b1394621675a3"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "5ee2626ed65ef074ca125d5fe861f19a44f5e70f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3e0c9334e9f766749d1661745b320860ae4827ef", "patch": "@@ -1,3 +1,9 @@\n+2016-10-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/invoke.h (__invoke): Fix exception-specification.\n+\t* include/std/functional (invoke): Likewise.\n+\t* testsuite/20_util/function_objects/invoke/1.cc: New test.\n+\n 2016-10-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/util/testsuite_hooks.h: Rewrite VERIFY in terms of"}, {"sha": "2bbdab73bbec8ed98749eed0a5fb9b281a391928", "filename": "libstdc++-v3/include/bits/invoke.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2Finclude%2Fbits%2Finvoke.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2Finclude%2Fbits%2Finvoke.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Finvoke.h?ref=3e0c9334e9f766749d1661745b320860ae4827ef", "patch": "@@ -87,7 +87,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Callable, typename... _Args>\n     constexpr typename result_of<_Callable&&(_Args&&...)>::type\n     __invoke(_Callable&& __fn, _Args&&... __args)\n-    noexcept(__is_nothrow_callable<_Callable(_Args&&...)>::value)\n+    noexcept(__is_nothrow_callable<_Callable&&(_Args&&...)>::value)\n     {\n       using __result_of = result_of<_Callable&&(_Args&&...)>;\n       using __type = typename __result_of::type;"}, {"sha": "6a4531477382e1d8f5ca146622a2f701d062d9a4", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=3e0c9334e9f766749d1661745b320860ae4827ef", "patch": "@@ -200,7 +200,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Callable, typename... _Args>\n     inline result_of_t<_Callable&&(_Args&&...)>\n     invoke(_Callable&& __fn, _Args&&... __args)\n-    noexcept(is_nothrow_callable_v<_Callable(_Args&&...)>)\n+    noexcept(is_nothrow_callable_v<_Callable&&(_Args&&...)>)\n     {\n       return std::__invoke(std::forward<_Callable>(__fn),\n \t\t\t   std::forward<_Args>(__args)...);"}, {"sha": "81bf25af746ba18fc036f5e6df160c95c03215aa", "filename": "libstdc++-v3/testsuite/20_util/function_objects/invoke/1.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Finvoke%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e0c9334e9f766749d1661745b320860ae4827ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Finvoke%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Finvoke%2F1.cc?ref=3e0c9334e9f766749d1661745b320860ae4827ef", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <functional>\n+\n+struct abstract {\n+  virtual ~abstract() = 0;\n+  void operator()() noexcept;\n+};\n+\n+static_assert( noexcept(std::__invoke(std::declval<abstract>())), \"\" );\n+#if __cpp_lib_invoke\n+static_assert( noexcept(std::invoke(std::declval<abstract>())), \"\" );\n+#endif"}]}