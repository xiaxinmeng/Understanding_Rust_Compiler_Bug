{"sha": "0842c29f7b4560244ff3038f90896c745a0bb77d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0MmMyOWY3YjQ1NjAyNDRmZjMwMzhmOTA4OTZjNzQ1YTBiYjc3ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-15T20:10:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-15T20:10:42Z"}, "message": "call.c (convert_like_real): Give \"initializing argument of\" information for ambiguous conversion.\n\n\t* call.c (convert_like_real): Give \"initializing argument of\"\n\tinformation for ambiguous conversion.  Give source position\n\tof function.\n\nFrom-SVN: r160809", "tree": {"sha": "5e557130f1af4b6b8661ce657b7dc3339ed7a7f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e557130f1af4b6b8661ce657b7dc3339ed7a7f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0842c29f7b4560244ff3038f90896c745a0bb77d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0842c29f7b4560244ff3038f90896c745a0bb77d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0842c29f7b4560244ff3038f90896c745a0bb77d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0842c29f7b4560244ff3038f90896c745a0bb77d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e14eaea4d4c3ce010cb58b428681e7d6723021a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14eaea4d4c3ce010cb58b428681e7d6723021a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14eaea4d4c3ce010cb58b428681e7d6723021a2"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "4e30814f6b82ea9d38a184aab97112bfa6a6b6bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0842c29f7b4560244ff3038f90896c745a0bb77d", "patch": "@@ -1,5 +1,9 @@\n 2010-06-15  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (convert_like_real): Give \"initializing argument of\"\n+\tinformation for ambiguous conversion.  Give source position\n+\tof function.\n+\n \t* call.c (print_z_candidates): Do print viable deleted candidates.\n \t(joust): Don't choose a deleted function just because its worst\n \tconversion is better than another candidate's worst."}, {"sha": "55089edbf1d9d8fd7416a29c481459d655441367", "filename": "gcc/cp/call.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=0842c29f7b4560244ff3038f90896c745a0bb77d", "patch": "@@ -4934,7 +4934,8 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t{\n \t  permerror (input_location, \"invalid conversion from %qT to %qT\", TREE_TYPE (expr), totype);\n \t  if (fn)\n-\t    permerror (input_location, \"  initializing argument %P of %qD\", argnum, fn);\n+\t    permerror (DECL_SOURCE_LOCATION (fn),\n+\t\t       \"  initializing argument %P of %qD\", argnum, fn);\n \t}\n       else\n \treturn error_mark_node;\n@@ -5018,11 +5019,14 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n         }\n       return expr;\n     case ck_ambig:\n-      if (!(complain & tf_error))\n-\treturn error_mark_node;\n-      /* Call build_user_type_conversion again for the error.  */\n-      return build_user_type_conversion\n-\t(totype, convs->u.expr, LOOKUP_NORMAL);\n+      if (complain & tf_error)\n+\t{\n+\t  /* Call build_user_type_conversion again for the error.  */\n+\t  build_user_type_conversion (totype, convs->u.expr, LOOKUP_NORMAL);\n+\t  if (fn)\n+\t    error (\"  initializing argument %P of %q+D\", argnum, fn);\n+\t}\n+      return error_mark_node;\n \n     case ck_list:\n       {\n@@ -5110,7 +5114,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       if (diag_kind && fn)\n \t{\n \t  if ((complain & tf_error))\n-\t    emit_diagnostic (diag_kind, input_location, 0, \n+\t    emit_diagnostic (diag_kind, DECL_SOURCE_LOCATION (fn), 0,\n \t\t\t     \"  initializing argument %P of %qD\", argnum, fn);\n \t  else if (diag_kind == DK_ERROR)\n \t    return error_mark_node;"}, {"sha": "b75cc81729f5dc44373c9e6125129c033cf04254", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist15.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist15.C?ref=0842c29f7b4560244ff3038f90896c745a0bb77d", "patch": "@@ -1,5 +1,8 @@\n // { dg-options \"-std=c++0x\" }\n \n+// Just discard errors pointing at header files\n+// { dg-prune-output \"include\" }\n+\n #include <vector>\n #include <typeinfo>\n "}, {"sha": "9cb197c9be26a90dcd880c99b537e853f3105d09", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist19.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist19.C?ref=0842c29f7b4560244ff3038f90896c745a0bb77d", "patch": "@@ -1,8 +1,10 @@\n // { dg-options \"-std=c++0x\" }\n \n+// Allow other errors, too\n+// { dg-prune-output \"error\" }\n+\n void f(double);\n int main()\n {\n   f({{1}});\t\t\t// { dg-error \"too many braces\" }\n-  // { dg-error \"\" \"\" { target *-*-* } 6 } allow other errors, too\n }"}, {"sha": "11708ec0f6f27ac4b6a653c581ee0c2d79186f6f", "filename": "gcc/testsuite/g++.dg/expr/cond8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond8.C?ref=0842c29f7b4560244ff3038f90896c745a0bb77d", "patch": "@@ -3,11 +3,11 @@\n \n struct A\n {\n-  A(void*);\n+  A(void*);\t\t\t// { dg-error \"initializing\" }\n   ~A();\n };\n \n void foo(const int i, bool b)\n {\n-  b ? A(0) : i; // { dg-error \"conversion|initializing\" } \n+  b ? A(0) : i; // { dg-error \"conversion\" }\n }"}, {"sha": "c06cef1838030855ac9cc0cf4243e991b9dffc13", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900514_03.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0842c29f7b4560244ff3038f90896c745a0bb77d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C?ref=0842c29f7b4560244ff3038f90896c745a0bb77d", "patch": "@@ -16,7 +16,7 @@\n \n struct t_0_st_0;\n \n-struct t_0_st_1 {\n+struct t_0_st_1 {\t\t// { dg-error \"initializing\" }\n   int member;\n \n   t_0_st_1 (t_0_st_0&);// { dg-message \"note\" } \n@@ -83,7 +83,7 @@ void t_1_local_init ()\n \n struct t_2_st_0;\n \n-struct t_2_st_1 {\n+struct t_2_st_1 {\t\t// { dg-error \"initializing\" }\n   int member;\n \n   t_2_st_1 (t_2_st_0);\t\t// { dg-message \"note\" }"}, {"sha": "c599acaebd03960323e00a33cf98be2a6e72ac2e", "filename": "libstdc++-v3/testsuite/ext/ext_pointer/1_neg.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0842c29f7b4560244ff3038f90896c745a0bb77d/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0842c29f7b4560244ff3038f90896c745a0bb77d/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc?ref=0842c29f7b4560244ff3038f90896c745a0bb77d", "patch": "@@ -92,12 +92,7 @@ void test01(void) {\n }\n \n // { dg-error \"invalid conversion \" \"\" { target *-*-* } 314 }\n-// { dg-error \"initializing argument 1 of\" \"\" { target *-*-* } 314 }\n // { dg-error \"invalid conversion \" \"\" { target *-*-* } 308 }\n-// { dg-error \"initializing argument 1 of\" \"\" { target *-*-* } 308 }\n // { dg-error \"invalid conversion \" \"\" { target *-*-* } 331 }\n-// { dg-error \"initializing argument 1 of\" \"\" { target *-*-* } 331 }\n // { dg-error \"invalid conversion \" \"\" { target *-*-* } 339 }\n-// { dg-error \"initializing argument 1 of\" \"\" { target *-*-* } 339 }\n // { dg-excess-errors \"In constructor\" }\n-"}]}