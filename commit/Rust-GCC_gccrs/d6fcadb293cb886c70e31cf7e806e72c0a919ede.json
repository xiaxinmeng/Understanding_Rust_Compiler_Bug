{"sha": "d6fcadb293cb886c70e31cf7e806e72c0a919ede", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZmY2FkYjI5M2NiODg2YzcwZTMxY2Y3ZTgwNmU3MmMwYTkxOWVkZQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2003-11-19T04:53:29Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-11-19T04:53:29Z"}, "message": "libjava.exp: Add DYLD_LIBRARY_PATH for darwin.\n\n2003-11-19  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* lib/libjava.exp: Add DYLD_LIBRARY_PATH for darwin. Look for\n\tthe right libgcc. Add -multiply_defined suppress and -bind_at_load\n\tflags.\n\nFrom-SVN: r73725", "tree": {"sha": "8d484c369d3c2f01fb5ee0e06447fd809f45addb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d484c369d3c2f01fb5ee0e06447fd809f45addb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6fcadb293cb886c70e31cf7e806e72c0a919ede", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6fcadb293cb886c70e31cf7e806e72c0a919ede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6fcadb293cb886c70e31cf7e806e72c0a919ede", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6fcadb293cb886c70e31cf7e806e72c0a919ede/comments", "author": null, "committer": null, "parents": [{"sha": "90635952d1c8f01b102623a004d293167f416d4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90635952d1c8f01b102623a004d293167f416d4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90635952d1c8f01b102623a004d293167f416d4a"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "6e279483caddb25a19ce8b94c08d2828308f538d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6fcadb293cb886c70e31cf7e806e72c0a919ede/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6fcadb293cb886c70e31cf7e806e72c0a919ede/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d6fcadb293cb886c70e31cf7e806e72c0a919ede", "patch": "@@ -1,3 +1,9 @@\n+2003-11-19  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* lib/libjava.exp: Add DYLD_LIBRARY_PATH for darwin. Look for\n+\tthe right libgcc. Add -multiply_defined suppress and -bind_at_load\n+\tflags.\n+\n 2003-11-18  Tom Tromey  <tromey@redhat.com>\n \n \tPR libgcj/13026:"}, {"sha": "9ae18821b1cc3a0a66c366b4fac368efd01a8203", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6fcadb293cb886c70e31cf7e806e72c0a919ede/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6fcadb293cb886c70e31cf7e806e72c0a919ede/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=d6fcadb293cb886c70e31cf7e806e72c0a919ede", "patch": "@@ -137,6 +137,7 @@ proc libjava_init { args } {\n     global env libgcj_jar\n     global tool_root_dir\n     global libjava_libgcc_s_path\n+    global target_triplet\n \n     if { $libjava_initialized == 1 } { return; }\n \n@@ -177,7 +178,11 @@ proc libjava_init { args } {\n \tif [info exists env(SHLIB_PATH)] {\n \t    set original_ld_library_path $env(SHLIB_PATH)\n \t} else {\n-\t    set original_ld_library_path \"\"\n+\t    if [info exists env(DYLD_LIBRARY_PATH)] {\n+\t\tset original_ld_library_path $env(DYLD_LIBRARY_PATH)\n+\t    } else {\n+\t\tset original_ld_library_path \"\"\n+\t    }\n \t}\n     }\n \n@@ -196,7 +201,13 @@ proc libjava_init { args } {\n     # Finally, add the gcc build directory so that we can find the\n     # shared libgcc.  This, like much of dejagnu, is hideous.\n     set libjava_libgcc_s_path {}\n-    set gccdir [lookfor_file $tool_root_dir gcc/libgcc_s.so]\n+    \n+    if { [string match \"powerpc-*-darwin*\" $target_triplet] } {\n+\tset so_extension \"dylib\"\n+    } else {\n+\tset so_extension \"so\"\n+    }\n+    set gccdir [lookfor_file $tool_root_dir gcc/libgcc_s.${so_extension}]\n     if {$gccdir != \"\"} {\n \tset gccdir [file dirname $gccdir]\n \tlappend libjava_libgcc_s_path $gccdir\n@@ -210,7 +221,7 @@ proc libjava_init { args } {\n \t\tif { \"$mldir\" == \".\" } {\n \t\t    continue\n \t\t}\n-\t\tif { [llength [glob -nocomplain ${gccdir}/${mldir}/libgcc_s*.so.*]] == 1 } {\n+\t\tif { [llength [glob -nocomplain ${gccdir}/${mldir}/libgcc_s*.${so_extension}.*]] == 1 } {\n \t\t    lappend libjava_libgcc_s_path \"${gccdir}/${mldir}\"\n \t\t}\n \t    }\n@@ -228,7 +239,7 @@ proc libjava_init { args } {\n # paths.  However we can't simply use those libraries; we still need\n # libtool for linking.\n # Don't return the the lib${name}.la files here, since this causes the\n-# libraries to be linked twice: once as lib${name}.so and another time\n+# libraries to be linked twice: once as lib${name}.so/dylib and another time\n # via gcj's implicit -l${name}.  This is both unnecessary and causes the\n # Solaris ld to warn: attempted multiple inclusion of file.  This warning\n # is not ignored by the dejagnu framework and cannot be disabled.\n@@ -352,6 +363,7 @@ proc libjava_arguments {{mode compile}} {\n     global original_ld_library_path\n     setenv LD_LIBRARY_PATH \"$ld_library_path:$original_ld_library_path\"\n     setenv SHLIB_PATH \"$ld_library_path:$original_ld_library_path\"\n+    setenv DYLD_LIBRARY_PATH \"$ld_library_path:$original_ld_library_path\"\n \n     verbose \"LD_LIBRARY_PATH = $env(LD_LIBRARY_PATH)\"\n \n@@ -401,9 +413,13 @@ proc libjava_arguments {{mode compile}} {\n     # Avoid libtool wrapper scripts when possible.\n     # but not if libtool warnings results in FAILs\n     if {$mode == \"link\"} {\n-        if {! [istarget \"*-*-cygwin*\"] && ! [istarget \"*-*-mingw*\"] } {\n-            lappend args \"additional_flags=-no-install\"\n-        }\n+\tif {! [istarget \"*-*-cygwin*\"] && ! [istarget \"*-*-mingw*\"] } {\n+\t    lappend args \"additional_flags=-no-install\"\n+\t}\n+\tif { [istarget \"*-*-darwin*\"] } {\n+\t    lappend args \"additional_flags=-bind_at_load\"\n+\t    lappend args \"additional_flags=-multiply_defined suppress\"\n+\t}\n     }\n \n     return $args\n@@ -444,6 +460,7 @@ proc gcj_invoke {program expectFile ld_library_additions} {\n \n   setenv LD_LIBRARY_PATH $newval\n   setenv SHLIB_PATH $newval\n+  setenv DYLD_LIBRARY_PATH $newval\n \n   verbose \"LD_LIBRARY_PATH=$env(LD_LIBRARY_PATH)\"\n \n@@ -454,6 +471,7 @@ proc gcj_invoke {program expectFile ld_library_additions} {\n   # Restore setting\n   setenv LD_LIBRARY_PATH $lib_path\n   setenv SHLIB_PATH $lib_path\n+  setenv DYLD_LIBRAY_PATH $lib_path\n \n   if {$status != \"pass\"} {\n     verbose \"got $output\""}]}