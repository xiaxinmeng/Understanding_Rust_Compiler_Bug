{"sha": "a1265ee47800550ac4c7c6b7d3924431ad545449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEyNjVlZTQ3ODAwNTUwYWM0YzdjNmI3ZDM5MjQ0MzFhZDU0NTQ0OQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-02-05T21:40:13Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-02-05T21:40:13Z"}, "message": "Regenerate .pot files.\n\ngcc/po/\n\t* gcc.pot: Regenerate.\n\nlibcpp/po/\n\t* cpplib.pot: Regenerate.", "tree": {"sha": "e367c32e8ca5a73f9ada3a7124ff37760b354110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e367c32e8ca5a73f9ada3a7124ff37760b354110"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1265ee47800550ac4c7c6b7d3924431ad545449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1265ee47800550ac4c7c6b7d3924431ad545449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1265ee47800550ac4c7c6b7d3924431ad545449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1265ee47800550ac4c7c6b7d3924431ad545449/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c7a463e3c38dde206cd077383cd90b6c3b7d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c7a463e3c38dde206cd077383cd90b6c3b7d2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c7a463e3c38dde206cd077383cd90b6c3b7d2c"}], "stats": {"total": 25848, "additions": 14029, "deletions": 11819}, "files": [{"sha": "eb8757ad2722d9799f4364a2c073c407c0bb01ab", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 13803, "deletions": 11614, "changes": 25417, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1265ee47800550ac4c7c6b7d3924431ad545449/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1265ee47800550ac4c7c6b7d3924431ad545449/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=a1265ee47800550ac4c7c6b7d3924431ad545449"}, {"sha": "8f818a7977ecf0f110a9bb48bdeca25b137a8679", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 226, "deletions": 205, "changes": 431, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1265ee47800550ac4c7c6b7d3924431ad545449/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1265ee47800550ac4c7c6b7d3924431ad545449/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=a1265ee47800550ac4c7c6b7d3924431ad545449", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: https://gcc.gnu.org/bugs/\\n\"\n-\"POT-Creation-Date: 2020-07-20 18:03+0000\\n\"\n+\"POT-Creation-Date: 2021-02-05 21:38+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -17,158 +17,158 @@ msgstr \"\"\n \"Content-Type: text/plain; charset=CHARSET\\n\"\n \"Content-Transfer-Encoding: 8bit\\n\"\n \n-#: charset.c:674\n+#: charset.c:677\n #, c-format\n msgid \"conversion from %s to %s not supported by iconv\"\n msgstr \"\"\n \n-#: charset.c:677\n+#: charset.c:680\n msgid \"iconv_open\"\n msgstr \"\"\n \n-#: charset.c:685\n+#: charset.c:688\n #, c-format\n msgid \"no iconv implementation, cannot convert from %s to %s\"\n msgstr \"\"\n \n-#: charset.c:781\n+#: charset.c:784\n #, c-format\n msgid \"character 0x%lx is not in the basic source character set\\n\"\n msgstr \"\"\n \n-#: charset.c:798\n-#: charset.c:1768\n+#: charset.c:801\n+#: charset.c:1771\n msgid \"converting to execution character set\"\n msgstr \"\"\n \n-#: charset.c:804\n+#: charset.c:807\n #, c-format\n msgid \"character 0x%lx is not unibyte in execution character set\"\n msgstr \"\"\n \n-#: charset.c:1054\n+#: charset.c:1057\n msgid \"universal character names are only valid in C++ and C99\"\n msgstr \"\"\n \n-#: charset.c:1058\n+#: charset.c:1061\n msgid \"C99's universal character names are incompatible with C90\"\n msgstr \"\"\n \n-#: charset.c:1061\n+#: charset.c:1064\n #, c-format\n msgid \"the meaning of '\\\\%c' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1070\n+#: charset.c:1073\n msgid \"In _cpp_valid_ucn but not a UCN\"\n msgstr \"\"\n \n-#: charset.c:1103\n+#: charset.c:1106\n #, c-format\n msgid \"incomplete universal character name %.*s\"\n msgstr \"\"\n \n-#: charset.c:1118\n+#: charset.c:1121\n #, c-format\n msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n-#: charset.c:1128\n+#: charset.c:1131\n #: lex.c:1335\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n-#: charset.c:1138\n+#: charset.c:1141\n #, c-format\n msgid \"universal character %.*s is not valid in an identifier\"\n msgstr \"\"\n \n-#: charset.c:1142\n+#: charset.c:1145\n #, c-format\n msgid \"universal character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.c:1149\n+#: charset.c:1152\n #, c-format\n msgid \"%.*s is outside the UCS codespace\"\n msgstr \"\"\n \n-#: charset.c:1194\n-#: charset.c:2113\n+#: charset.c:1197\n+#: charset.c:2116\n msgid \"converting UCN to source character set\"\n msgstr \"\"\n \n-#: charset.c:1201\n+#: charset.c:1204\n msgid \"converting UCN to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1265\n+#: charset.c:1268\n #, c-format\n msgid \"extended character %.*s is not valid in an identifier\"\n msgstr \"\"\n \n-#: charset.c:1282\n+#: charset.c:1285\n #, c-format\n msgid \"extended character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.c:1368\n+#: charset.c:1371\n msgid \"the meaning of '\\\\x' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1393\n+#: charset.c:1396\n msgid \"\\\\x used with no following hex digits\"\n msgstr \"\"\n \n-#: charset.c:1400\n+#: charset.c:1403\n msgid \"hex escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.c:1452\n+#: charset.c:1455\n msgid \"octal escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.c:1534\n+#: charset.c:1537\n msgid \"the meaning of '\\\\a' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1541\n+#: charset.c:1544\n #, c-format\n msgid \"non-ISO-standard escape sequence, '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.c:1549\n+#: charset.c:1552\n #, c-format\n msgid \"unknown escape sequence: '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.c:1557\n+#: charset.c:1560\n #, c-format\n msgid \"unknown escape sequence: '\\\\%s'\"\n msgstr \"\"\n \n-#: charset.c:1565\n+#: charset.c:1568\n msgid \"converting escape sequence to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1705\n+#: charset.c:1708\n msgid \"missing open quote\"\n msgstr \"\"\n \n-#: charset.c:1923\n-#: charset.c:2002\n+#: charset.c:1926\n+#: charset.c:2005\n msgid \"character constant too long for its type\"\n msgstr \"\"\n \n-#: charset.c:1926\n+#: charset.c:1929\n msgid \"multi-character character constant\"\n msgstr \"\"\n \n-#: charset.c:2042\n+#: charset.c:2045\n msgid \"empty character constant\"\n msgstr \"\"\n \n-#: charset.c:2160\n+#: charset.c:2163\n #, c-format\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n@@ -241,203 +241,203 @@ msgstr \"\"\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:724\n+#: directives.c:725\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.c:783\n+#: directives.c:784\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.c:829\n+#: directives.c:830\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.c:838\n+#: directives.c:839\n #, c-format\n msgid \"\"\n \"#include nested depth %u exceeds maximum of %u (use -fmax-include-\"\n \"depth=DEPTH to increase the maximum)\"\n msgstr \"\"\n \n-#: directives.c:883\n+#: directives.c:884\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.c:909\n+#: directives.c:910\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.c:969\n+#: directives.c:970\n msgid \"unexpected end of file after #line\"\n msgstr \"\"\n \n-#: directives.c:972\n+#: directives.c:973\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:978\n-#: directives.c:980\n+#: directives.c:979\n+#: directives.c:981\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.c:993\n-#: directives.c:1074\n+#: directives.c:994\n+#: directives.c:1075\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:1034\n+#: directives.c:1035\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1101\n+#: directives.c:1102\n #, c-format\n msgid \"file \\\"%s\\\" linemarker ignored due to incorrect nesting\"\n msgstr \"\"\n \n-#: directives.c:1178\n #: directives.c:1180\n #: directives.c:1182\n-#: directives.c:1770\n+#: directives.c:1184\n+#: directives.c:1772\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1206\n+#: directives.c:1208\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1269\n+#: directives.c:1271\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1278\n+#: directives.c:1280\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1296\n+#: directives.c:1298\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1299\n+#: directives.c:1301\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1302\n+#: directives.c:1304\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1332\n+#: directives.c:1334\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1549\n+#: directives.c:1551\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1572\n+#: directives.c:1574\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1629\n+#: directives.c:1631\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1684\n+#: directives.c:1686\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1693\n+#: directives.c:1695\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1712\n+#: directives.c:1714\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1737\n+#: directives.c:1739\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1741\n+#: directives.c:1743\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1765\n+#: directives.c:1767\n #, c-format\n msgid \"invalid \\\"#pragma GCC %s\\\" directive\"\n msgstr \"\"\n \n-#: directives.c:1966\n+#: directives.c:1968\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:2049\n+#: directives.c:2051\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:2054\n+#: directives.c:2056\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:2056\n-#: directives.c:2089\n+#: directives.c:2058\n+#: directives.c:2091\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:2082\n+#: directives.c:2084\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:2087\n+#: directives.c:2089\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:2118\n+#: directives.c:2120\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2194\n+#: directives.c:2196\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2212\n+#: directives.c:2214\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2224\n+#: directives.c:2226\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2254\n+#: directives.c:2256\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2257\n+#: directives.c:2259\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2339\n+#: directives.c:2341\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2620\n+#: directives.c:2659\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n@@ -451,168 +451,180 @@ msgstr \"\"\n msgid \"stdout\"\n msgstr \"\"\n \n-#: expr.c:626\n-#: expr.c:743\n+#: expr.c:636\n+#: expr.c:753\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:651\n+#: expr.c:661\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:664\n+#: expr.c:674\n msgid \"use of C++17 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:667\n+#: expr.c:677\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:711\n+#: expr.c:721\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:722\n-#: expr.c:789\n+#: expr.c:732\n+#: expr.c:799\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:730\n+#: expr.c:740\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:736\n+#: expr.c:746\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:749\n-#: expr.c:753\n+#: expr.c:759\n+#: expr.c:763\n msgid \"decimal float constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.c:772\n+#: expr.c:782\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:797\n+#: expr.c:807\n msgid \"use of C++11 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:798\n+#: expr.c:808\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:814\n+#: expr.c:822\n+msgid \"use of C++23 %<size_t%> integer constant\"\n+msgstr \"\"\n+\n+#: expr.c:823\n+msgid \"use of C++23 %<make_signed_t<size_t>%> integer constant\"\n+msgstr \"\"\n+\n+#: expr.c:834\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:820\n+#: expr.c:841\n msgid \"binary constants are a C++14 feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:822\n-msgid \"binary constants are a GCC extension\"\n+#: expr.c:843\n+msgid \"binary constants are a C2X feature or GCC extension\"\n+msgstr \"\"\n+\n+#: expr.c:848\n+msgid \"binary constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.c:917\n+#: expr.c:944\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:948\n+#: expr.c:975\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:1043\n+#: expr.c:1070\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:1050\n+#: expr.c:1077\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:1058\n+#: expr.c:1085\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:1070\n+#: expr.c:1098\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:1113\n+#: expr.c:1143\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1118\n+#: expr.c:1148\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1124\n+#: expr.c:1154\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1173\n+#: expr.c:1203\n #, c-format\n msgid \"\\\"%s\\\" is not defined, evaluates to 0\"\n msgstr \"\"\n \n-#: expr.c:1186\n+#: expr.c:1216\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:1189\n+#: expr.c:1219\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:1435\n+#: expr.c:1465\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1455\n+#: expr.c:1485\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1556\n+#: expr.c:1586\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1585\n+#: expr.c:1615\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1595\n+#: expr.c:1625\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1600\n+#: expr.c:1630\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1632\n+#: expr.c:1662\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1637\n+#: expr.c:1667\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1896\n+#: expr.c:1926\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1994\n+#: expr.c:2024\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:2130\n+#: expr.c:2160\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -624,47 +636,47 @@ msgstr \"\"\n msgid \"use -Winvalid-pch for more information\"\n msgstr \"\"\n \n-#: files.c:1003\n+#: files.c:1051\n #, c-format\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1439\n+#: files.c:1546\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:597\n+#: init.c:614\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:601\n+#: init.c:618\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:608\n+#: init.c:625\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:611\n+#: init.c:628\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:615\n+#: init.c:632\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:619\n+#: init.c:636\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:624\n+#: init.c:641\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:628\n+#: init.c:645\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n@@ -742,265 +754,274 @@ msgstr \"\"\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1872\n+#: lex.c:1879\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1876\n+#: lex.c:1883\n msgid \"invalid new-line in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1880\n-#: lex.c:4265\n+#: lex.c:1887\n+#: lex.c:4639\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1918\n-#: lex.c:1941\n+#: lex.c:1926\n+#: lex.c:1949\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1963\n-#: lex.c:2092\n+#: lex.c:1971\n+#: lex.c:2100\n msgid \"\"\n \"invalid suffix on literal; C++11 requires a space between literal and string \"\n \"macro\"\n msgstr \"\"\n \n-#: lex.c:2075\n+#: lex.c:2083\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:2078\n+#: lex.c:2086\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2110\n+#: lex.c:2118\n msgid \"C++11 requires a space between string literal and macro\"\n msgstr \"\"\n \n-#: lex.c:2913\n-#: lex.c:4098\n+#: lex.c:2711\n+msgid \"module control-line cannot be in included file\"\n+msgstr \"\"\n+\n+#: lex.c:2725\n+#, c-format\n+msgid \"module control-line \\\"%s\\\" cannot be an object-like macro\"\n+msgstr \"\"\n+\n+#: lex.c:3099\n+#: lex.c:4472\n #: traditional.c:174\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: lex.c:2927\n-#: lex.c:2961\n+#: lex.c:3113\n+#: lex.c:3147\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:2929\n-#: lex.c:2940\n-#: lex.c:2964\n+#: lex.c:3115\n+#: lex.c:3126\n+#: lex.c:3150\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:2938\n+#: lex.c:3124\n msgid \"C++ style comments are incompatible with C90\"\n msgstr \"\"\n \n-#: lex.c:2970\n+#: lex.c:3156\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:3364\n+#: lex.c:3550\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: lex.c:4253\n+#: lex.c:4627\n #, c-format\n msgid \"raw string delimiter longer than %d characters\"\n msgstr \"\"\n \n-#: lex.c:4323\n+#: lex.c:4697\n msgid \"unterminated literal\"\n msgstr \"\"\n \n #: macro.c:94\n msgid \"'##' cannot appear at either end of __VA_OPT__\"\n msgstr \"\"\n \n-#: macro.c:388\n+#: macro.c:386\n #, c-format\n msgid \"\\\"%s\\\" used outside of preprocessing directive\"\n msgstr \"\"\n \n-#: macro.c:398\n+#: macro.c:396\n #, c-format\n msgid \"missing '(' before \\\"%s\\\" operand\"\n msgstr \"\"\n \n-#: macro.c:413\n+#: macro.c:411\n #, c-format\n msgid \"operator \\\"%s\\\" requires a header-name\"\n msgstr \"\"\n \n-#: macro.c:430\n+#: macro.c:428\n #, c-format\n msgid \"missing ')' after \\\"%s\\\" operand\"\n msgstr \"\"\n \n-#: macro.c:450\n+#: macro.c:448\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:489\n-#: macro.c:747\n+#: macro.c:487\n+#: macro.c:778\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:496\n-#: macro.c:598\n+#: macro.c:494\n+#: macro.c:596\n #, c-format\n msgid \"macro \\\"%s\\\" might prevent reproducible builds\"\n msgstr \"\"\n \n-#: macro.c:527\n+#: macro.c:525\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:644\n+#: macro.c:610\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:660\n+#: macro.c:642\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:866\n+#: macro.c:897\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:928\n+#: macro.c:959\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:1054\n+#: macro.c:1085\n msgid \"\"\n \"ISO C++11 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1058\n+#: macro.c:1089\n msgid \"\"\n \"ISO C99 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1065\n+#: macro.c:1096\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:1070\n+#: macro.c:1101\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:1270\n-#: traditional.c:819\n+#: macro.c:1299\n+#: traditional.c:822\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1412\n+#: macro.c:1442\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:2190\n+#: macro.c:2220\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C+\"\n \"+98\"\n msgstr \"\"\n \n-#: macro.c:2198\n-#: macro.c:2207\n+#: macro.c:2228\n+#: macro.c:2237\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C90\"\n msgstr \"\"\n \n-#: macro.c:3164\n+#: macro.c:3279\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3246\n+#: macro.c:3361\n #, c-format\n msgid \"expected parameter name, found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3247\n+#: macro.c:3362\n #, c-format\n msgid \"expected ',' or ')', found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3248\n+#: macro.c:3363\n msgid \"expected parameter name before end of line\"\n msgstr \"\"\n \n-#: macro.c:3249\n+#: macro.c:3364\n msgid \"expected ')' before end of line\"\n msgstr \"\"\n \n-#: macro.c:3250\n+#: macro.c:3365\n msgid \"expected ')' after \\\"...\\\"\"\n msgstr \"\"\n \n-#: macro.c:3307\n+#: macro.c:3422\n msgid \"anonymous variadic macros were introduced in C++11\"\n msgstr \"\"\n \n-#: macro.c:3308\n-#: macro.c:3312\n+#: macro.c:3423\n+#: macro.c:3427\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:3318\n+#: macro.c:3433\n msgid \"ISO C++ does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3319\n+#: macro.c:3434\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3365\n+#: macro.c:3480\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:3403\n+#: macro.c:3518\n msgid \"ISO C++11 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3404\n+#: macro.c:3519\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3428\n+#: macro.c:3543\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3478\n+#: macro.c:3593\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:3629\n+#: macro.c:3749\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3634\n+#: macro.c:3754\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3738\n+#: macro.c:3891\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n@@ -1045,11 +1066,11 @@ msgstr \"\"\n msgid \"while reading precompiled header\"\n msgstr \"\"\n \n-#: traditional.c:888\n+#: traditional.c:891\n #, c-format\n msgid \"detected recursion whilst expanding macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: traditional.c:1111\n+#: traditional.c:1114\n msgid \"syntax error in macro parameter list\"\n msgstr \"\""}]}