{"sha": "860edc46624a23e678934a907d8fccb2fad0dcb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwZWRjNDY2MjRhMjNlNjc4OTM0YTkwN2Q4ZmNjYjJmYWQwZGNiNQ==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2019-08-05T03:32:38Z"}, "committer": {"name": "Kito Cheng", "email": "kito@gcc.gnu.org", "date": "2019-08-05T03:32:38Z"}, "message": "RISC-V: Promote type correctly for libcalls\n\n - argument and return value for libcall won't promote at\n   default_promote_function_mode_always_promote, however we expect it\n   should sign-extend as normal function.\n\n - Witout this patch, this test case will fail at -march=rv64i -mabi=lp64.\n\n - The implementation of riscv_promote_function_mode is borrowed from MIPS.\n\ngcc/ChangeLog\n\n\t* config/riscv/riscv.c (riscv_promote_function_mode): New.\n\t(TARGET_PROMOTE_FUNCTION_MODE): Use riscv_promote_function_mode.\n\ngcc/testsuite/ChangeLog\n\n\t* gcc.target/riscv/promote-type-for-libcall.c: New.\n\nFrom-SVN: r274107", "tree": {"sha": "e7ddfc15b2e2736505adf431856280ffb2f2c38d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7ddfc15b2e2736505adf431856280ffb2f2c38d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/860edc46624a23e678934a907d8fccb2fad0dcb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860edc46624a23e678934a907d8fccb2fad0dcb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/860edc46624a23e678934a907d8fccb2fad0dcb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860edc46624a23e678934a907d8fccb2fad0dcb5/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89c78fb2e1d862f4efbc22583eeb852bf173a0ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c78fb2e1d862f4efbc22583eeb852bf173a0ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89c78fb2e1d862f4efbc22583eeb852bf173a0ad"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "2de2e652357bcfb15e16a29d953e7fb60fc8c72c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=860edc46624a23e678934a907d8fccb2fad0dcb5", "patch": "@@ -1,3 +1,8 @@\n+2019-08-05  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv.c (riscv_promote_function_mode): New.\n+\t(TARGET_PROMOTE_FUNCTION_MODE): Use riscv_promote_function_mode.\n+\n 2019-08-05  Alan Modra  <amodra@gmail.com>\n \n \tPR target/91349"}, {"sha": "431e90a89572fa1edeee2548b2abc0e7c37c8766", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=860edc46624a23e678934a907d8fccb2fad0dcb5", "patch": "@@ -4910,6 +4910,32 @@ riscv_constant_alignment (const_tree exp, HOST_WIDE_INT align)\n   return align;\n }\n \n+/* Implement TARGET_PROMOTE_FUNCTION_MODE.  */\n+\n+/* This function is equivalent to default_promote_function_mode_always_promote\n+   except that it returns a promoted mode even if type is NULL_TREE.  This is\n+   needed by libcalls which have no type (only a mode) such as fixed conversion\n+   routines that take a signed or unsigned char/short/int argument and convert\n+   it to a fixed type.  */\n+\n+static machine_mode\n+riscv_promote_function_mode (const_tree type ATTRIBUTE_UNUSED,\n+\t\t\t     machine_mode mode,\n+\t\t\t     int *punsignedp ATTRIBUTE_UNUSED,\n+\t\t\t     const_tree fntype ATTRIBUTE_UNUSED,\n+\t\t\t     int for_return ATTRIBUTE_UNUSED)\n+{\n+  int unsignedp;\n+\n+  if (type != NULL_TREE)\n+    return promote_mode (type, mode, punsignedp);\n+\n+  unsignedp = *punsignedp;\n+  PROMOTE_MODE (mode, unsignedp, type);\n+  *punsignedp = unsignedp;\n+  return mode;\n+}\n+\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.half\\t\"\n@@ -4951,7 +4977,7 @@ riscv_constant_alignment (const_tree exp, HOST_WIDE_INT align)\n #define TARGET_EXPAND_BUILTIN_VA_START riscv_va_start\n \n #undef  TARGET_PROMOTE_FUNCTION_MODE\n-#define TARGET_PROMOTE_FUNCTION_MODE default_promote_function_mode_always_promote\n+#define TARGET_PROMOTE_FUNCTION_MODE riscv_promote_function_mode\n \n #undef TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY riscv_return_in_memory"}, {"sha": "8fe569ac17686681d244585783ac98471dc35c2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=860edc46624a23e678934a907d8fccb2fad0dcb5", "patch": "@@ -1,3 +1,7 @@\n+2019-08-05  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/promote-type-for-libcall.c: New.\n+\n 2019-08-02  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/90985"}, {"sha": "bdbcbc0316a7e49524c35a5f23ea40e5735a7ca5", "filename": "gcc/testsuite/gcc.target/riscv/promote-type-for-libcall.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpromote-type-for-libcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860edc46624a23e678934a907d8fccb2fad0dcb5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpromote-type-for-libcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpromote-type-for-libcall.c?ref=860edc46624a23e678934a907d8fccb2fad0dcb5", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -ftree-slp-vectorize -funroll-loops\" } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#define N 4\n+volatile float f[N];\n+int x[N] __attribute__((aligned(8)));\n+int main() {\n+  int i;\n+  x[0] = -1;\n+  x[1] = 2;\n+  x[2] = -2;\n+  x[3] = 2;\n+\n+  for (i=0;i<N;++i){\n+    f[i] = x[i];\n+  }\n+\n+  if (f[0] != -1.0f) {\n+    abort();\n+  }\n+\n+  if (f[1] != 2.0f) {\n+    abort();\n+  }\n+\n+  if (f[2] != -2.0f) {\n+    abort();\n+  }\n+\n+  if (f[3] != 2.0f) {\n+    abort();\n+  }\n+\n+  return 0;\n+}"}]}