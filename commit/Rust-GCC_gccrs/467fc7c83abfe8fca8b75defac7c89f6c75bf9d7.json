{"sha": "467fc7c83abfe8fca8b75defac7c89f6c75bf9d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY3ZmM3YzgzYWJmZThmY2E4Yjc1ZGVmYWM3Yzg5ZjZjNzViZjlkNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-06T22:19:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-07T04:11:44Z"}, "message": "c++: Fix ICE with implicit operator== [PR94462]\n\nduplicate_decls assumed that any TREE_ARTIFICIAL function at namespace scope\nwas a built-in function, but now in C++20 it's possible to have an\nimplicitly declared hidden friend operator==.  We just need to move the\nassert into the if condition.\n\ngcc/cp/ChangeLog\n2020-04-06  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/94462\n\t* decl.c (duplicate_decls): Fix handling of DECL_HIDDEN_FRIEND_P.", "tree": {"sha": "dc9e116e3c0a14ab2658ef20cbbb2d7643a7c7ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc9e116e3c0a14ab2658ef20cbbb2d7643a7c7ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93a49d2d2292893b9b7f38132df949c70942838c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93a49d2d2292893b9b7f38132df949c70942838c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93a49d2d2292893b9b7f38132df949c70942838c"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "02fd9cff79ddc87f397a90607ab40d881a360dc1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=467fc7c83abfe8fca8b75defac7c89f6c75bf9d7", "patch": "@@ -1,3 +1,8 @@\n+2020-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/94462\n+\t* decl.c (duplicate_decls): Fix handling of DECL_HIDDEN_FRIEND_P.\n+\n 2020-04-04  Marek Polacek  <polacek@redhat.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "a127734af6937adcb22db8e76900166230afa9d8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=467fc7c83abfe8fca8b75defac7c89f6c75bf9d7", "patch": "@@ -1451,9 +1451,10 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n \n   /* Check for redeclaration and other discrepancies.  */\n   if (TREE_CODE (olddecl) == FUNCTION_DECL\n-      && DECL_ARTIFICIAL (olddecl))\n+      && DECL_ARTIFICIAL (olddecl)\n+      /* A C++20 implicit friend operator== uses the normal path (94462).  */\n+      && !DECL_HIDDEN_FRIEND_P (olddecl))\n     {\n-      gcc_assert (!DECL_HIDDEN_FRIEND_P (olddecl));\n       if (TREE_CODE (newdecl) != FUNCTION_DECL)\n \t{\n \t  /* Avoid warnings redeclaring built-ins which have not been"}, {"sha": "4f5df2264104b96ea16a1c08e83827f1709dbc84", "filename": "gcc/testsuite/g++.dg/cpp2a/spaceship-eq9.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-eq9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467fc7c83abfe8fca8b75defac7c89f6c75bf9d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-eq9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-eq9.C?ref=467fc7c83abfe8fca8b75defac7c89f6c75bf9d7", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/94462\n+// { dg-do compile { target c++2a } }\n+\n+namespace std {\n+  struct strong_ordering { };\n+}\n+\n+namespace Synth {\n+  struct B {\n+    friend std::strong_ordering operator<=>(B, B) = default;\n+  };\n+\n+  struct C {\n+    friend bool operator==(C, C);\n+  };\n+}\n+"}]}