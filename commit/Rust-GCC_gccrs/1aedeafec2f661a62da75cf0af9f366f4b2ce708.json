{"sha": "1aedeafec2f661a62da75cf0af9f366f4b2ce708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFlZGVhZmVjMmY2NjFhNjJkYTc1Y2YwYWY5ZjM2NmY0YjJjZTcwOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-06-05T12:38:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-06-05T12:38:26Z"}, "message": "re PR middle-end/30442 (Expanded array initialization can use memset builtin function)\n\n2012-06-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/30442\n\t* tree-vect-data-refs.c (vect_analyze_data_refs): For basic-block\n\tvectorization stop analysis at the first stmt we cannot compute\n\ta data-reference for instead of giving up completely.\n\n\t* gcc.dg/vect/bb-slp-30.c: New testcase.\n\nFrom-SVN: r188235", "tree": {"sha": "844d765cdd7406bfd07a3536ee202883a99d0759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/844d765cdd7406bfd07a3536ee202883a99d0759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aedeafec2f661a62da75cf0af9f366f4b2ce708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aedeafec2f661a62da75cf0af9f366f4b2ce708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aedeafec2f661a62da75cf0af9f366f4b2ce708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aedeafec2f661a62da75cf0af9f366f4b2ce708/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ad672e46e3a251f850efd0e0c2f7351493d9bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad672e46e3a251f850efd0e0c2f7351493d9bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad672e46e3a251f850efd0e0c2f7351493d9bf6"}], "stats": {"total": 79, "additions": 75, "deletions": 4}, "files": [{"sha": "50b32453a8176c698595fddb8bafa5febe27193b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1aedeafec2f661a62da75cf0af9f366f4b2ce708", "patch": "@@ -1,3 +1,10 @@\n+2012-06-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/30442\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): For basic-block\n+\tvectorization stop analysis at the first stmt we cannot compute\n+\ta data-reference for instead of giving up completely.\n+\n 2012-06-05  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-loop-distribution.c (struct partition_s): Add has_writes"}, {"sha": "e237c41da8d09b6f8511e85ecf30943773737d47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1aedeafec2f661a62da75cf0af9f366f4b2ce708", "patch": "@@ -1,3 +1,8 @@\n+2012-06-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/30442\n+\t* gcc.dg/vect/bb-slp-30.c: New testcase.\n+\n 2012-06-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53081"}, {"sha": "63689e3434ed89abd981042016521b18fe7ea38c", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-30.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-30.c?ref=1aedeafec2f661a62da75cf0af9f366f4b2ce708", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+int a[32];\n+\n+void __attribute__((noinline))\n+test1(void)\n+{\n+  a[0] = 1;\n+  a[1] = 1;\n+  a[2] = 1;\n+  a[3] = 1;\n+  a[4] = 1;\n+  a[5] = 1;\n+  a[6] = 1;\n+  a[7] = 1;\n+  a[8] = 1;\n+  a[9] = 1;\n+  a[10] = 1;\n+  a[11] = 1;\n+  a[12] = 1;\n+  a[13] = 1;\n+  a[14] = 1;\n+  a[15] = 1;\n+  a[16] = 1;\n+  a[17] = 1;\n+  a[18] = 1;\n+  a[19] = 1;\n+  a[20] = 1;\n+  a[21] = 1;\n+  a[22] = 1;\n+  a[23] = 1;\n+  a[24] = 1;\n+  a[25] = 1;\n+  a[26] = 1;\n+  a[27] = 1;\n+  a[28] = 1;\n+  a[29] = 1;\n+  a[30] = 1;\n+  a[31] = 1;\n+  asm (\"\" : : : \"memory\");\n+  a[21] = 0;\n+}\n+\n+int main() { test1(); return a[21]; }\n+\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized using SLP\" 1 \"slp\" } } */\n+/* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "aa384d2cadcfc7c57a61959b0e728ede21c4bddb", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aedeafec2f661a62da75cf0af9f366f4b2ce708/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=1aedeafec2f661a62da75cf0af9f366f4b2ce708", "patch": "@@ -2844,11 +2844,23 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n     }\n   else\n     {\n+      gimple_stmt_iterator gsi;\n+\n       bb = BB_VINFO_BB (bb_vinfo);\n-      res = compute_data_dependences_for_bb (bb, true,\n-\t\t\t\t\t     &BB_VINFO_DATAREFS (bb_vinfo),\n-\t\t\t\t\t     &BB_VINFO_DDRS (bb_vinfo));\n-      if (!res)\n+      for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\t{\n+\t  gimple stmt = gsi_stmt (gsi);\n+\t  if (!find_data_references_in_stmt (NULL, stmt,\n+\t\t\t\t\t     &BB_VINFO_DATAREFS (bb_vinfo)))\n+\t    {\n+\t      /* Mark the rest of the basic-block as unvectorizable.  */\n+\t      for (; !gsi_end_p (gsi); gsi_next (&gsi))\n+\t\tSTMT_VINFO_VECTORIZABLE (vinfo_for_stmt (stmt)) = false;\n+\t      break;\n+\t    }\n+\t}\n+      if (!compute_all_dependences (BB_VINFO_DATAREFS (bb_vinfo),\n+\t\t\t\t    &BB_VINFO_DDRS (bb_vinfo), NULL, true))\n \t{\n \t  if (vect_print_dump_info (REPORT_UNVECTORIZED_LOCATIONS))\n \t    fprintf (vect_dump, \"not vectorized: basic block contains function\""}]}