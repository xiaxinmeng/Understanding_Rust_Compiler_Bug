{"sha": "47954c4e773ef399e269f0660a74369b3fb95f93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc5NTRjNGU3NzNlZjM5OWUyNjlmMDY2MGE3NDM2OWIzZmI5NWY5Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-05-03T12:56:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-05-03T12:56:12Z"}, "message": "re PR rtl-optimization/57130 (Incorrect \"and --> extract\" conversion in combine)\n\n\tPR rtl-optimization/57130\n\t* combine.c (make_compound_operation) <case SUBREG>: Pass\n\tSET instead of COMPARE as in_code to the recursive call\n\tif needed.\n\n\t* gcc.c-torture/execute/pr57130.c: New test.\n\nFrom-SVN: r198579", "tree": {"sha": "a94c8648366d4d082e453944d835339cf069619d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a94c8648366d4d082e453944d835339cf069619d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47954c4e773ef399e269f0660a74369b3fb95f93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47954c4e773ef399e269f0660a74369b3fb95f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47954c4e773ef399e269f0660a74369b3fb95f93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47954c4e773ef399e269f0660a74369b3fb95f93/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c21604ff116e07ed3ea58a93339820d0dc8af67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c21604ff116e07ed3ea58a93339820d0dc8af67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c21604ff116e07ed3ea58a93339820d0dc8af67"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "4bd0ea7cc040d26bdac5280fb4a265c64b1dc951", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47954c4e773ef399e269f0660a74369b3fb95f93", "patch": "@@ -1,3 +1,10 @@\n+2013-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/57130\n+\t* combine.c (make_compound_operation) <case SUBREG>: Pass\n+\tSET instead of COMPARE as in_code to the recursive call\n+\tif needed.\n+\n 2013-05-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (isa): Add x64_sse4_noavx and x64_avx members."}, {"sha": "0792ba3b6f4182a8613698b09e3b62a62310fdf8", "filename": "gcc/combine.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=47954c4e773ef399e269f0660a74369b3fb95f93", "patch": "@@ -7697,8 +7697,24 @@ make_compound_operation (rtx x, enum rtx_code in_code)\n \t what it originally did, do this SUBREG as a force_to_mode.  */\n       {\n \trtx inner = SUBREG_REG (x), simplified;\n-\t\n-\ttem = make_compound_operation (inner, in_code);\n+\tenum rtx_code subreg_code = in_code;\n+\n+\t/* If in_code is COMPARE, it isn't always safe to pass it through\n+\t   to the recursive make_compound_operation call.  */\n+\tif (subreg_code == COMPARE\n+\t    && (!subreg_lowpart_p (x)\n+\t\t|| GET_CODE (inner) == SUBREG\n+\t\t/* (subreg:SI (and:DI (reg:DI) (const_int 0x800000000)) 0)\n+\t\t   is (const_int 0), rather than\n+\t\t   (subreg:SI (lshiftrt:DI (reg:DI) (const_int 35)) 0).  */\n+\t\t|| (GET_CODE (inner) == AND\n+\t\t    && CONST_INT_P (XEXP (inner, 1))\n+\t\t    && GET_MODE_SIZE (mode) < GET_MODE_SIZE (GET_MODE (inner))\n+\t\t    && exact_log2 (UINTVAL (XEXP (inner, 1)))\n+\t\t       >= GET_MODE_BITSIZE (mode))))\n+\t  subreg_code = SET;\n+\n+\ttem = make_compound_operation (inner, subreg_code);\n \n \tsimplified\n \t  = simplify_subreg (mode, tem, GET_MODE (inner), SUBREG_BYTE (x));"}, {"sha": "25a131ce64e919247ad98d0e2a7fcd564254b15b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47954c4e773ef399e269f0660a74369b3fb95f93", "patch": "@@ -1,3 +1,8 @@\n+2013-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/57130\n+\t* gcc.c-torture/execute/pr57130.c: New test.\n+\n 2013-05-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sse2-init-v2di-2.c: Update scan assembler string."}, {"sha": "6113203254aa32a72829d8cc6e9f42a5121d7e19", "filename": "gcc/testsuite/gcc.c-torture/execute/pr57130.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57130.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47954c4e773ef399e269f0660a74369b3fb95f93/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57130.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57130.c?ref=47954c4e773ef399e269f0660a74369b3fb95f93", "patch": "@@ -0,0 +1,21 @@\n+/* PR rtl-optimization/57130 */\n+\n+struct S { int a, b, c, d; } s[2] = { { 6, 8, -8, -5 }, { 0, 2, -1, 2 } };\n+\n+__attribute__((noinline, noclone)) void\n+foo (struct S r)\n+{\n+  static int cnt;\n+  if (__builtin_memcmp (&r, &s[cnt++], sizeof r) != 0)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  struct S r = { 6, 8, -8, -5 };\n+  foo (r);\n+  r = (struct S) { 0, 2, -1, 2 };\n+  foo (r);\n+  return 0;\n+}"}]}