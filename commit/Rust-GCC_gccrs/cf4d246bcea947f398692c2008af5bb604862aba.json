{"sha": "cf4d246bcea947f398692c2008af5bb604862aba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y0ZDI0NmJjZWE5NDdmMzk4NjkyYzIwMDhhZjViYjYwNDg2MmFiYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-06-01T10:00:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-06-01T10:00:19Z"}, "message": "re PR fortran/21729 (ICE in gfc_typenode_for_spec)\n\n\tPR fortran/21729\n\t* resolve.c (resolve_contained_fntype): Use sym->attr.untyped\n\tto avoid giving error multiple times.\n\t(resolve_entries): Don't error about BT_UNKNOWN here.\n\t(resolve_unknown_f): Capitalize IMPLICIT for consistency.\n\t(resolve_fntype): New function.\n\t(gfc_resolve): Call resolve_fntype.\n\n\t* gfortran.dg/implicit_5.f90: New test.\n\nFrom-SVN: r100437", "tree": {"sha": "cb578e3a058bb19dc27193a4e7d7e0a494fd5cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb578e3a058bb19dc27193a4e7d7e0a494fd5cbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf4d246bcea947f398692c2008af5bb604862aba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf4d246bcea947f398692c2008af5bb604862aba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf4d246bcea947f398692c2008af5bb604862aba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf4d246bcea947f398692c2008af5bb604862aba/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d699d76aa7164b8125ef629d8bceac5f20cc0918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d699d76aa7164b8125ef629d8bceac5f20cc0918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d699d76aa7164b8125ef629d8bceac5f20cc0918"}], "stats": {"total": 101, "additions": 95, "deletions": 6}, "files": [{"sha": "f4408b52613b4cf3c3aa39da69d44839b969edda", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cf4d246bcea947f398692c2008af5bb604862aba", "patch": "@@ -1,3 +1,13 @@\n+2005-06-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/21729\n+\t* resolve.c (resolve_contained_fntype): Use sym->attr.untyped\n+\tto avoid giving error multiple times.\n+\t(resolve_entries): Don't error about BT_UNKNOWN here.\n+\t(resolve_unknown_f): Capitalize IMPLICIT for consistency.\n+\t(resolve_fntype): New function.\n+\t(gfc_resolve): Call resolve_fntype.\n+\n 2005-06-01  Feng Wang  <fengwang@nudt.edu.cn>\n \n \tPR fortran/20883"}, {"sha": "f0367acea3d7657758e96e0993c6708dc52d472d", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 58, "deletions": 6, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=cf4d246bcea947f398692c2008af5bb604862aba", "patch": "@@ -267,9 +267,12 @@ resolve_contained_fntype (gfc_symbol * sym, gfc_namespace * ns)\n     {\n       t = gfc_set_default_type (sym, 0, ns);\n \n-      if (t == FAILURE)\n-\tgfc_error (\"Contained function '%s' at %L has no IMPLICIT type\",\n-\t\t    sym->name, &sym->declared_at); /* FIXME */\n+      if (t == FAILURE && !sym->attr.untyped)\n+\t{\n+\t  gfc_error (\"Contained function '%s' at %L has no IMPLICIT type\",\n+\t\t     sym->name, &sym->declared_at); /* FIXME */\n+\t  sym->attr.untyped = 1;\n+\t}\n     }\n }\n \n@@ -439,6 +442,10 @@ resolve_entries (gfc_namespace * ns)\n \t\t      if (ts->kind == gfc_default_logical_kind)\n \t\t\tsym = NULL;\n \t\t      break;\n+\t\t    case BT_UNKNOWN:\n+\t\t      /* We will issue error elsewhere.  */\n+\t\t      sym = NULL;\n+\t\t      break;\n \t\t    default:\n \t\t      break;\n \t\t    }\n@@ -957,7 +964,7 @@ resolve_unknown_f (gfc_expr * expr)\n \n       if (ts->type == BT_UNKNOWN)\n \t{\n-\t  gfc_error (\"Function '%s' at %L has no implicit type\",\n+\t  gfc_error (\"Function '%s' at %L has no IMPLICIT type\",\n \t\t     sym->name, &expr->where);\n \t  return FAILURE;\n \t}\n@@ -4810,8 +4817,51 @@ resolve_equivalence (gfc_equiv *eq)\n         }\n     }    \n }      \n-      \n-      \n+\n+\n+/* Resolve function and ENTRY types, issue diagnostics if needed. */\n+\n+static void\n+resolve_fntype (gfc_namespace * ns)\n+{\n+  gfc_entry_list *el;\n+  gfc_symbol *sym;\n+\n+  if (ns->proc_name == NULL || !ns->proc_name->attr.function)\n+    return;\n+\n+  /* If there are any entries, ns->proc_name is the entry master\n+     synthetic symbol and ns->entries->sym actual FUNCTION symbol.  */\n+  if (ns->entries)\n+    sym = ns->entries->sym;\n+  else\n+    sym = ns->proc_name;\n+  if (sym->result == sym\n+      && sym->ts.type == BT_UNKNOWN\n+      && gfc_set_default_type (sym, 0, NULL) == FAILURE\n+      && !sym->attr.untyped)\n+    {\n+      gfc_error (\"Function '%s' at %L has no IMPLICIT type\",\n+\t\t sym->name, &sym->declared_at);\n+      sym->attr.untyped = 1;\n+    }\n+\n+  if (ns->entries)\n+    for (el = ns->entries->next; el; el = el->next)\n+      {\n+\tif (el->sym->result == el->sym\n+\t    && el->sym->ts.type == BT_UNKNOWN\n+\t    && gfc_set_default_type (el->sym, 0, NULL) == FAILURE\n+\t    && !el->sym->attr.untyped)\n+\t  {\n+\t    gfc_error (\"ENTRY '%s' at %L has no IMPLICIT type\",\n+\t\t       el->sym->name, &el->sym->declared_at);\n+\t    el->sym->attr.untyped = 1;\n+\t  }\n+      }\n+}\n+\n+\n /* This function is called after a complete program unit has been compiled.\n    Its purpose is to examine all of the expressions associated with a program\n    unit, assign types to all intermediate expressions, make sure that all\n@@ -4835,6 +4885,8 @@ gfc_resolve (gfc_namespace * ns)\n \n   gfc_traverse_ns (ns, resolve_symbol);\n \n+  resolve_fntype (ns);\n+\n   for (n = ns->contained; n; n = n->sibling)\n     {\n       if (gfc_pure (ns->proc_name) && !gfc_pure (n->proc_name))"}, {"sha": "2ea680a8a672529aaf40179b3f25842f5af7a480", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf4d246bcea947f398692c2008af5bb604862aba", "patch": "@@ -1,3 +1,8 @@\n+2005-06-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/21729\n+\t* gfortran.dg/implicit_5.f90: New test.\n+\n 2005-06-01  Feng Wang  <fengwang@nudt.edu.cn>\n \n \tPR fortran/20883"}, {"sha": "c0573b61ed2f014d745fcf33c4c7b870c699a939", "filename": "gcc/testsuite/gfortran.dg/implicit_5.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf4d246bcea947f398692c2008af5bb604862aba/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_5.f90?ref=cf4d246bcea947f398692c2008af5bb604862aba", "patch": "@@ -0,0 +1,22 @@\n+! PR fortran/21729\n+! { dg-do compile }\n+function f1 ()\t! { dg-error \"has no IMPLICIT type\" \"f1\" }\n+\timplicit none\n+end function f1\n+function f2 () result (r2) ! { dg-error \"has no IMPLICIT type\" \"r2\" }\n+\timplicit none\n+end function f2\n+function f3 ()\t! { dg-error \"has no IMPLICIT type\" \"f3\" }\n+\timplicit none\n+entry e3 ()\t! { dg-error \"has no IMPLICIT type\" \"e3\" }\n+end function f3\n+function f4 ()\n+\timplicit none\n+\treal f4\n+entry e4 ()\t! { dg-error \"has no IMPLICIT type\" \"e4\" }\n+end function f4\n+function f5 ()\t! { dg-error \"has no IMPLICIT type\" \"f5\" }\n+\timplicit none\n+entry e5 ()\n+\treal e5\n+end function f5"}]}