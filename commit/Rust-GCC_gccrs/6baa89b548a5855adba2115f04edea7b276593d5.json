{"sha": "6baa89b548a5855adba2115f04edea7b276593d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhYTg5YjU0OGE1ODU1YWRiYTIxMTVmMDRlZGVhN2IyNzY1OTNkNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-17T21:44:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-17T21:44:33Z"}, "message": "(CFLAGS): Separate include file handling; for stage 1, CFLAGS1 is\nappended to CFLAGS, otherwise CFLAGS2.\n\nFrom-SVN: r7320", "tree": {"sha": "0f26cc8bdc3e7e672181d88ca0a272936a40ba27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f26cc8bdc3e7e672181d88ca0a272936a40ba27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6baa89b548a5855adba2115f04edea7b276593d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6baa89b548a5855adba2115f04edea7b276593d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6baa89b548a5855adba2115f04edea7b276593d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6baa89b548a5855adba2115f04edea7b276593d5/comments", "author": null, "committer": null, "parents": [{"sha": "9d926da5630b8a633a1d25d604f3fb6c9e0271f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d926da5630b8a633a1d25d604f3fb6c9e0271f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d926da5630b8a633a1d25d604f3fb6c9e0271f7"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "9c98411819bf2fd99aa4133ecb38855f97dac663", "filename": "gcc/make-cc1.com", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baa89b548a5855adba2115f04edea7b276593d5/gcc%2Fmake-cc1.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baa89b548a5855adba2115f04edea7b276593d5/gcc%2Fmake-cc1.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-cc1.com?ref=6baa89b548a5855adba2115f04edea7b276593d5", "patch": "@@ -26,8 +26,10 @@ $ EDIT :=\tedit\n $!\n $!\tCompiler options\n $!\n-$ CFLAGS =\t\"/debug/cc1_options=\"\"-mpcc-alignment\"\"/incl=([],[.config.])\"\n-$! CFLAGS =\t\"/noopt/incl=([],[.config])\"\n+$ CFLAGS =\t\"/noVerbose/Debug/CC1=\"\"-mpcc-alignment\"\"\"\n+$! CFLAGS =\t\"/noOpt\"\t\t!uncomment for VAXC\n+$ CINCL1 =\t\"/Incl=[]\"\t\t\t!stage 1 -I flags\n+$ CINCL2 =\t\"/Incl=([],[.ginclude])\"\t!stage 2,3,... flags\n $!\n $!\tLink options\n $!\n@@ -36,7 +38,7 @@ $!\n $!\tLink libraries\n $!\n $ LIBS :=\tgnu_cc:[000000]gcclib.olb/libr,sys$library:vaxcrtl.olb/libr\n-$! LIBS :=\talloca.obj,sys$library:vaxcrtl.olb/libr\n+$! LIBS :=\talloca.obj,sys$library:vaxcrtl.olb/Libr   !uncomment for VAXC\n $!\n $!\n $!  First we figure out what needs to be done.  This is sort of like a limited\n@@ -80,6 +82,7 @@ $i=0\n $DO_ALL = 0\n $DO_LINK = 0\n $DO_DEBUG = 0\n+$DO_CC1PLUS = 0\n $open cfile$ compilers.list\n $cinit:read cfile$ compilername/end=cinit_done\n $DO_'compilername'=0\n@@ -119,6 +122,18 @@ $if DO_CC1PLUS.eq.1 then echo \"   Link C++ compiler (gcc-cc1plus.exe).\"\n $if DO_CC1OBJ.eq.1 then echo \"   Link objective-C compiler (gcc-cc1obj.exe).\"\n $if DO_DEBUG.eq.1 then echo  \"   Link images to run under debugger.\"\n $!\n+$! Update CFLAGS with appropriate CINCLx value.\n+$!\n+$if f$edit(f$extract(0,3,CC),\"LOWERCASE\").nes.\"gcc\" then goto stage1\n+$if f$search(\"gcc-cc1.exe\").eqs.\"\" then goto stage1\n+$if f$file_attr(\"gnu_cc:[000000]gcc-cc1.exe\",\"FID\").nes.-\n+    f$file_attr(\"gcc-cc1.exe\",\"FID\") then goto stage1\n+$ CFLAGS = CFLAGS + CINCL2\n+$ goto cinclX\n+$stage1:\n+$ CFLAGS = CFLAGS + CINCL1\n+$cinclX:\n+$!\n $! Test and see if we need these messages or not.  The -1 switch gives it away.\n $!\n $gas := $gnu_cc:[000000]gcc-as.exe\n@@ -333,6 +348,7 @@ $               close jfile$\n $       endif\n $!'f$verify(0)\n $no_bison:\n+$\t echo \" (Ignore any warning about not finding file \"\"bison.simple\"\".)\"\n $\tendif\n $!\n $if f$extract(0,5,flnm).eqs.\"insn-\" then call generate 'flnm'.c"}]}