{"sha": "4e117418fb71f508c479e0144500f4da9cc92520", "node_id": "C_kwDOANBUbNoAKDRlMTE3NDE4ZmI3MWY1MDhjNDc5ZTAxNDQ1MDBmNGRhOWNjOTI1MjA", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-28T12:06:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-28T12:33:48Z"}, "message": "libstdc++: Fix error reporting in filesystem::copy [PR99290]\n\nThe recursive calls to filesystem::copy should stop if any of them\nreports an error.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/99290\n\t* src/c++17/fs_ops.cc (fs::copy): Pass error_code to\n\tdirectory_iterator constructor, and check on each iteration.\n\t* src/filesystem/ops.cc (fs::copy): Likewise.\n\t* testsuite/27_io/filesystem/operations/copy.cc: Check for\n\terrors during recursion.\n\t* testsuite/experimental/filesystem/operations/copy.cc:\n\tLikewise.", "tree": {"sha": "cf1ec94b493c3c0c63e162d6840f38efd65ea04a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf1ec94b493c3c0c63e162d6840f38efd65ea04a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e117418fb71f508c479e0144500f4da9cc92520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e117418fb71f508c479e0144500f4da9cc92520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e117418fb71f508c479e0144500f4da9cc92520", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e117418fb71f508c479e0144500f4da9cc92520/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d91cb2059fb8b5a50a2aced199e987ab2cf3b629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d91cb2059fb8b5a50a2aced199e987ab2cf3b629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d91cb2059fb8b5a50a2aced199e987ab2cf3b629"}], "stats": {"total": 74, "additions": 70, "deletions": 4}, "files": [{"sha": "435368fa5c5ff4ff6137ba27872acbfbc74b5624", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=4e117418fb71f508c479e0144500f4da9cc92520", "patch": "@@ -408,8 +408,12 @@ fs::copy(const path& from, const path& to, copy_options options,\n       // set an unused bit in options to disable further recursion\n       if (!is_set(options, copy_options::recursive))\n \toptions |= static_cast<copy_options>(4096);\n-      for (const directory_entry& x : directory_iterator(from))\n-\tcopy(x.path(), to/x.path().filename(), options, ec);\n+      for (const directory_entry& x : directory_iterator(from, ec))\n+\t{\n+\t  copy(x.path(), to/x.path().filename(), options, ec);\n+\t  if (ec)\n+\t    return;\n+\t}\n     }\n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // 2683. filesystem::copy() says \"no effects\""}, {"sha": "98ddff5a66ec3e090e28ada3e4287ed1a5f397cf", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=4e117418fb71f508c479e0144500f4da9cc92520", "patch": "@@ -350,8 +350,12 @@ fs::copy(const path& from, const path& to, copy_options options,\n       // set an unused bit in options to disable further recursion\n       if (!is_set(options, copy_options::recursive))\n \toptions |= static_cast<copy_options>(4096);\n-      for (const directory_entry& x : directory_iterator(from))\n-\tcopy(x.path(), to/x.path().filename(), options, ec);\n+      for (const directory_entry& x : directory_iterator(from, ec))\n+\t{\n+\t  copy(x.path(), to/x.path().filename(), options, ec);\n+\t  if (ec)\n+\t    return;\n+\t}\n     }\n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // 2683. filesystem::copy() says \"no effects\""}, {"sha": "b936e04493b5c87560b8c74bac9c21fa0bf38f2d", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/copy.cc", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcopy.cc?ref=4e117418fb71f508c479e0144500f4da9cc92520", "patch": "@@ -193,6 +193,34 @@ test05()\n   VERIFY( !ec );  // Previous value should be cleared (LWG 2683)\n }\n \n+void\n+test_pr99290()\n+{\n+  auto dir = __gnu_test::nonexistent_path();\n+  auto source = dir/\"source\";\n+  auto dest = dir/\"dest\";\n+  create_directories(source/\"emptydir\");\n+  create_directories(dest/\"emptydir\");\n+  std::ofstream{source/\"file\"} << 'a';\n+  std::ofstream{dest/\"file\"} << 'b';\n+  // PR libstdc++/99290\n+  // std::filesystem::copy does not always report errors for recursion\n+  std::error_code ec;\n+  copy(source, dest, ec);\n+  VERIFY( ec == std::errc::file_exists );\n+\n+#if __cpp_exceptions\n+  try {\n+    copy(source, dest);\n+    VERIFY( false );\n+  } catch (const fs::filesystem_error& e) {\n+    VERIFY( e.code() == std::errc::file_exists );\n+  }\n+#endif\n+\n+  remove_all(dir);\n+}\n+\n int\n main()\n {\n@@ -201,4 +229,5 @@ main()\n   test03();\n   test04();\n   test05();\n+  test_pr99290();\n }"}, {"sha": "5cd6b483c269bbda0e43c452a99f2276bf64e2fb", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/copy.cc", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e117418fb71f508c479e0144500f4da9cc92520/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc?ref=4e117418fb71f508c479e0144500f4da9cc92520", "patch": "@@ -190,6 +190,34 @@ test05()\n   VERIFY( !ec );  // Previous value should be cleared (LWG 2683)\n }\n \n+void\n+test_pr99290()\n+{\n+  auto dir = __gnu_test::nonexistent_path();\n+  auto source = dir/\"source\";\n+  auto dest = dir/\"dest\";\n+  create_directories(source/\"emptydir\");\n+  create_directories(dest/\"emptydir\");\n+  std::ofstream{source/\"file\"} << 'a';\n+  std::ofstream{dest/\"file\"} << 'b';\n+  // PR libstdc++/99290\n+  // std::filesystem::copy does not always report errors for recursion\n+  std::error_code ec;\n+  copy(source, dest, ec);\n+  VERIFY( ec == std::errc::file_exists );\n+\n+#if __cpp_exceptions\n+  try {\n+    copy(source, dest);\n+    VERIFY( false );\n+  } catch (const fs::filesystem_error& e) {\n+    VERIFY( e.code() == std::errc::file_exists );\n+  }\n+#endif\n+\n+  remove_all(dir);\n+}\n+\n int\n main()\n {\n@@ -198,4 +226,5 @@ main()\n   test03();\n   test04();\n   test05();\n+  test_pr99290();\n }"}]}