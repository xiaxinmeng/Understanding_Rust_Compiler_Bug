{"sha": "042dee3e3bd99807f894963d89177a0f0db6ffd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyZGVlM2UzYmQ5OTgwN2Y4OTQ5NjNkODkxNzdhMGYwZGI2ZmZkNQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-06-01T16:54:18Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-06-01T16:54:18Z"}, "message": "sourcebuild.texi (arm_acq_rel): Document new effective target.\n\n2016-06-01  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * doc/sourcebuild.texi (arm_acq_rel): Document new effective target.\n\n    gcc/testsuite/\n    * lib/target-supports.exp (check_effective_target_arm_acq_rel): New\n    procedure.\n\nFrom-SVN: r237002", "tree": {"sha": "f6598610fe9728dcde7847d7f799875326f82b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6598610fe9728dcde7847d7f799875326f82b43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/042dee3e3bd99807f894963d89177a0f0db6ffd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042dee3e3bd99807f894963d89177a0f0db6ffd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042dee3e3bd99807f894963d89177a0f0db6ffd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042dee3e3bd99807f894963d89177a0f0db6ffd5/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15c98b2e0d51511893baaf477beb496ed425bae8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c98b2e0d51511893baaf477beb496ed425bae8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c98b2e0d51511893baaf477beb496ed425bae8"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "45ae2f9eabe90ab90f8079ed16e03436e1936fb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=042dee3e3bd99807f894963d89177a0f0db6ffd5", "patch": "@@ -1,3 +1,7 @@\n+2016-06-01  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* doc/sourcebuild.texi (arm_acq_rel): Document new effective target.\n+\n 2016-06-01  Eduard Sanou  <dhole@openmailbox.org>\n \n \t* doc/cppenv.texi: Note that the `%s` in `date` is a non-standard"}, {"sha": "0c03920cbec090b07f2559d6471c6eac9bb0c18a", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=042dee3e3bd99807f894963d89177a0f0db6ffd5", "patch": "@@ -1597,6 +1597,9 @@ ARM target supports executing ARMv8.1 Adv.SIMD instructions.  Some\n multilibs may be incompatible with the options needed.  Implies\n arm_v8_1a_neon_ok.\n \n+@item arm_acq_rel\n+ARM target supports acquire-release instructions.\n+\n @item arm_prefer_ldrd_strd\n ARM target prefers @code{LDRD} and @code{STRD} instructions over\n @code{LDM} and @code{STM} instructions."}, {"sha": "5bc66767f446990542172ca5e2ccb85d0f912751", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=042dee3e3bd99807f894963d89177a0f0db6ffd5", "patch": "@@ -1,3 +1,8 @@\n+2016-06-01  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_acq_rel): New\n+\tprocedure.\n+\n 2016-06-01  Eduard Sanou  <dhole@openmailbox.org>\n \n \t* gcc.dg/cpp/source_date_epoch-1.c: New file, test the proper"}, {"sha": "f4cb276ed97eaf0f809b2c221f465747320d9a03", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042dee3e3bd99807f894963d89177a0f0db6ffd5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=042dee3e3bd99807f894963d89177a0f0db6ffd5", "patch": "@@ -3494,6 +3494,25 @@ proc check_effective_target_arm_neonv2 { } {\n     }\n }\n \n+# Return 1 if this is an ARM target with load acquire and store release\n+# instructions for 8-, 16- and 32-bit types.\n+\n+proc check_effective_target_arm_acq_rel { } {\n+    return [check_no_compiler_messages arm_acq_rel object {\n+\tvoid\n+\tload_acquire_store_release (void)\n+\t{\n+\t  asm (\"lda r0, [r1]\\n\\t\"\n+\t       \"stl r0, [r1]\\n\\t\"\n+\t       \"ldah r0, [r1]\\n\\t\"\n+\t       \"stlh r0, [r1]\\n\\t\"\n+\t       \"ldab r0, [r1]\\n\\t\"\n+\t       \"stlb r0, [r1]\"\n+\t       : : : \"r0\", \"memory\");\n+\t}\n+    }]\n+}\n+\n # Return 1 if this a Loongson-2E or -2F target using an ABI that supports\n # the Loongson vector modes.\n \n@@ -5725,6 +5744,8 @@ proc check_effective_target_sync_int_long { } {\n \t     || [istarget aarch64*-*-*]\n \t     || [istarget alpha*-*-*] \n \t     || [istarget arm*-*-linux-*] \n+\t     || ([istarget arm*-*-*]\n+\t\t && [check_effective_target_arm_acq_rel])\n \t     || [istarget bfin*-*linux*]\n \t     || [istarget hppa*-*linux*]\n \t     || [istarget s390*-*-*] \n@@ -5758,6 +5779,8 @@ proc check_effective_target_sync_char_short { } {\n \t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget alpha*-*-*] \n \t     || [istarget arm*-*-linux-*] \n+\t     || ([istarget arm*-*-*]\n+\t\t && [check_effective_target_arm_acq_rel])\n \t     || [istarget hppa*-*linux*]\n \t     || [istarget s390*-*-*] \n \t     || [istarget powerpc*-*-*]"}]}