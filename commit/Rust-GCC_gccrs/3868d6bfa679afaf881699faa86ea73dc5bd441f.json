{"sha": "3868d6bfa679afaf881699faa86ea73dc5bd441f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg2OGQ2YmZhNjc5YWZhZjg4MTY5OWZhYTg2ZWE3M2RjNWJkNDQxZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T18:31:48Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T18:31:48Z"}, "message": "Report errors for temporary statements rather than crashing.\n\nFrom-SVN: r168128", "tree": {"sha": "449f6c9fe6c4e327e723244d725554cd23a633d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/449f6c9fe6c4e327e723244d725554cd23a633d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3868d6bfa679afaf881699faa86ea73dc5bd441f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3868d6bfa679afaf881699faa86ea73dc5bd441f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3868d6bfa679afaf881699faa86ea73dc5bd441f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3868d6bfa679afaf881699faa86ea73dc5bd441f/comments", "author": null, "committer": null, "parents": [{"sha": "c8f2cf85f7acb152e68005efe628e831e528a6c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f2cf85f7acb152e68005efe628e831e528a6c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8f2cf85f7acb152e68005efe628e831e528a6c6"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "047045cffc372619bed5b4050e6a8bd2ce8c35f0", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3868d6bfa679afaf881699faa86ea73dc5bd441f/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3868d6bfa679afaf881699faa86ea73dc5bd441f/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=3868d6bfa679afaf881699faa86ea73dc5bd441f", "patch": "@@ -350,7 +350,18 @@ void\n Temporary_statement::do_check_types(Gogo*)\n {\n   if (this->type_ != NULL && this->init_ != NULL)\n-    gcc_assert(Type::are_assignable(this->type_, this->init_->type(), NULL));\n+    {\n+      std::string reason;\n+      if (!Type::are_assignable(this->type_, this->init_->type(), &reason))\n+\t{\n+\t  if (reason.empty())\n+\t    error_at(this->location(), \"incompatible types in assignment\");\n+\t  else\n+\t    error_at(this->location(), \"incompatible types in assignment (%s)\",\n+\t\t     reason.c_str());\n+\t  this->set_is_error();\n+\t}\n+    }\n }\n \n // Return a tree."}]}