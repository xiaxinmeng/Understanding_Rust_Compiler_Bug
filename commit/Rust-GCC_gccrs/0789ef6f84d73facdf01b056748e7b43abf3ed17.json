{"sha": "0789ef6f84d73facdf01b056748e7b43abf3ed17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc4OWVmNmY4NGQ3M2ZhY2RmMDFiMDU2NzQ4ZTdiNDNhYmYzZWQxNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:42:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:42:39Z"}, "message": "[multiple changes]\n\n2017-01-06  Bob Duff  <duff@adacore.com>\n\n\t* sinfo.ads, sinfo.adb (Map_Pragma_Name): Preparation work,\n\tdummy implementation of Map_Pragma_Name.\n\n2017-01-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration): Make the\n\tentry_body variable constant.\n\t* s-taprob.ads (Entry_Body_Access): Move to s-tposen.\n\t* s-tpoben.ads (Protected_Entry_Body_Access): Now access\n\tto constant.\n\t* s-tposen.ads (Entry_Body_Access): Moved from s-taprob,\n\tnow access to constant.\n\nFrom-SVN: r244141", "tree": {"sha": "956b02a68f0175c0a06e8851cdca84bef1f12fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/956b02a68f0175c0a06e8851cdca84bef1f12fcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0789ef6f84d73facdf01b056748e7b43abf3ed17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0789ef6f84d73facdf01b056748e7b43abf3ed17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0789ef6f84d73facdf01b056748e7b43abf3ed17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0789ef6f84d73facdf01b056748e7b43abf3ed17/comments", "author": null, "committer": null, "parents": [{"sha": "ffa168bc9814e3b082a09ffe2147b62741b06e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa168bc9814e3b082a09ffe2147b62741b06e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa168bc9814e3b082a09ffe2147b62741b06e4a"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "aca2564c7636c1babe212e79cbecdcb65f65d617", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0789ef6f84d73facdf01b056748e7b43abf3ed17", "patch": "@@ -1,3 +1,18 @@\n+2017-01-06  Bob Duff  <duff@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb (Map_Pragma_Name): Preparation work,\n+\tdummy implementation of Map_Pragma_Name.\n+\n+2017-01-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration): Make the\n+\tentry_body variable constant.\n+\t* s-taprob.ads (Entry_Body_Access): Move to s-tposen.\n+\t* s-tpoben.ads (Protected_Entry_Body_Access): Now access\n+\tto constant.\n+\t* s-tposen.ads (Entry_Body_Access): Moved from s-taprob,\n+\tnow access to constant.\n+\n 2017-01-06  Gary Dismukes  <dismukes@adacore.com>\n \n \t* einfo.ads, sem_res.adb, sem_attr.adb, sem_ch6.adb: Minor"}, {"sha": "56e426bbd837ffaf568de1735f8e75dcd349f8ec", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=0789ef6f84d73facdf01b056748e7b43abf3ed17", "patch": "@@ -9888,7 +9888,8 @@ package body Exp_Ch9 is\n              Defining_Identifier => Body_Id,\n              Aliased_Present     => True,\n              Object_Definition   => Obj_Def,\n-             Expression          => Expr);\n+             Expression          => Expr,\n+             Constant_Present    => True);\n \n          --  A pointer to this array will be placed in the corresponding record\n          --  by its initialization procedure so this needs to be analyzed here.\n@@ -14203,7 +14204,7 @@ package body Exp_Ch9 is\n             --  null if there is no limit for all entries (usual case).\n \n             if Has_Entry\n-              and then Pkg_Id /= System_Tasking_Protected_Objects_Single_Entry\n+              and then Pkg_Id = System_Tasking_Protected_Objects_Entries\n             then\n                if Present (Entry_Max_Queue_Lengths_Array (Ptyp)) then\n                   Append_To (Args,"}, {"sha": "98bc4b2b36db2edc8375949672b349828fd76eae", "filename": "gcc/ada/s-taprob.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fs-taprob.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fs-taprob.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprob.ads?ref=0789ef6f84d73facdf01b056748e7b43abf3ed17", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -152,9 +152,8 @@ package System.Tasking.Protected_Objects is\n       Action  : Entry_Action_Pointer;\n    end record;\n    --  The compiler-generated code passes objects of this type to the GNARL\n-   --  to allow it to access the executable code of an entry body.\n-\n-   type Entry_Body_Access is access all Entry_Body;\n+   --  to allow it to access the executable code of an entry body and its\n+   --  barrier.\n \n    type Protection is limited private;\n    --  This type contains the GNARL state of a protected object. The"}, {"sha": "6bd09879946a7ff6a3897739b7b7027462276b38", "filename": "gcc/ada/s-tpoben.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fs-tpoben.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fs-tpoben.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpoben.ads?ref=0789ef6f84d73facdf01b056748e7b43abf3ed17", "patch": "@@ -50,18 +50,22 @@ package System.Tasking.Protected_Objects.Entries is\n \n    subtype Positive_Protected_Entry_Index is\n      Protected_Entry_Index range  1 .. Protected_Entry_Index'Last;\n+   --  Index of the entry (and in some cases of the queue)\n \n    type Find_Body_Index_Access is access\n      function\n        (O : System.Address;\n         E : Protected_Entry_Index)\n         return Protected_Entry_Index;\n+   --  Convert a queue index to an entry index (an entries family has one entry\n+   --  index for several queue index).\n \n    type Protected_Entry_Body_Array is\n      array (Positive_Protected_Entry_Index range <>) of Entry_Body;\n    --  Contains executable code for all entry bodies of a protected type\n \n-   type Protected_Entry_Body_Access is access all Protected_Entry_Body_Array;\n+   type Protected_Entry_Body_Access is\n+     access constant Protected_Entry_Body_Array;\n \n    type Protected_Entry_Queue_Array is\n      array (Protected_Entry_Index range <>) of Entry_Queue;"}, {"sha": "ea0513a17922f6bef1092b6b56548f1d7dd8267a", "filename": "gcc/ada/s-tposen.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fs-tposen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fs-tposen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.ads?ref=0789ef6f84d73facdf01b056748e7b43abf3ed17", "patch": "@@ -182,6 +182,9 @@ package System.Tasking.Protected_Objects.Single_Entry is\n \n    type Protection_Entry_Access is access all Protection_Entry;\n \n+   type Entry_Body_Access is access constant Entry_Body;\n+   --  Access to barrier and action function of an entry\n+\n    procedure Initialize_Protection_Entry\n      (Object           : Protection_Entry_Access;\n       Ceiling_Priority : Integer;"}, {"sha": "30960b4a1b742769da9ebfc8fe35334587494d0a", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=0789ef6f84d73facdf01b056748e7b43abf3ed17", "patch": "@@ -6818,6 +6818,15 @@ package body Sinfo is\n       return Chars (Pragma_Identifier (N));\n    end Pragma_Name;\n \n+   ---------------------\n+   -- Map_Pragma_Name --\n+   ---------------------\n+\n+   procedure Map_Pragma_Name (From, To : Name_Id) is\n+   begin\n+      null; -- not yet implemented\n+   end Map_Pragma_Name;\n+\n    ------------------------\n    -- Pragma_Name_Mapped --\n    ------------------------"}, {"sha": "4a01505dee1dc5f00d7232ee23de5494f040ae3c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0789ef6f84d73facdf01b056748e7b43abf3ed17/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=0789ef6f84d73facdf01b056748e7b43abf3ed17", "patch": "@@ -11010,6 +11010,10 @@ package Sinfo is\n    pragma Inline (Pragma_Name);\n    --  Convenient function to obtain Chars field of Pragma_Identifier\n \n+   procedure Map_Pragma_Name (From, To : Name_Id);\n+   --  Used in the implementation of pragma Rename_Pragma. Maps pragma name\n+   --  From to pragma name To, we From can be used as a synonym for To.\n+\n    function Pragma_Name_Mapped (N : Node_Id) return Name_Id;\n    --  ????Work in progress.\n "}]}