{"sha": "8fdb0857e96aee3af730b7d12be80cb50aabb24d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZkYjA4NTdlOTZhZWUzYWY3MzBiN2QxMmJlODBjYjUwYWFiYjI0ZA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2005-11-29T04:09:41Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2005-11-29T04:09:41Z"}, "message": "Autoconfiscate this directory:\n\n\t* configure.ac: New file.\n\t* aclocal.m4: Likewise.\n\t* Makefile.in: Likewise.\n\t* configure: Generate.\n\t* config.in: Likewise.\n\nFrom-SVN: r107650", "tree": {"sha": "527264eca19e9394b4eb2ca6d65266f9365c0aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/527264eca19e9394b4eb2ca6d65266f9365c0aab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fdb0857e96aee3af730b7d12be80cb50aabb24d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fdb0857e96aee3af730b7d12be80cb50aabb24d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fdb0857e96aee3af730b7d12be80cb50aabb24d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fdb0857e96aee3af730b7d12be80cb50aabb24d/comments", "author": null, "committer": null, "parents": [{"sha": "0cb5c97cbd84c6a3460f6e6521288f9d66a39293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb5c97cbd84c6a3460f6e6521288f9d66a39293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb5c97cbd84c6a3460f6e6521288f9d66a39293"}], "stats": {"total": 5897, "additions": 5897, "deletions": 0}, "files": [{"sha": "45904524a007e81b6bfba83e9abfd0d14d58820a", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=8fdb0857e96aee3af730b7d12be80cb50aabb24d", "patch": "@@ -1,3 +1,11 @@\n+2005-11-29  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* configure.ac: New file.\n+\t* aclocal.m4: Likewise.\n+\t* Makefile.in: Likewise.\n+\t* configure: Generate.\n+\t* config.in: Likewise.\n+\n 2005-11-29  Ben Elliston  <bje@au.ibm.com>\n \n \t* decimal32.h, decimal64.h, decimal128.h: New."}, {"sha": "c44d492afb230e2e7684ee5d54292f4fac0ce429", "filename": "libdecnumber/Makefile.in", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FMakefile.in?ref=8fdb0857e96aee3af730b7d12be80cb50aabb24d", "patch": "@@ -0,0 +1,154 @@\n+# @configure_input@\n+# Makefile for libdecnumber.  Run 'configure' to generate Makefile from Makefile.in\n+\n+# Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+#This file is part of GCC.\n+\n+#libcpp is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 2, or (at your option)\n+#any later version.\n+\n+#libcpp is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with libcpp; see the file COPYING.  If not, write to\n+#the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+#Boston MA 02110-1301, USA.\n+\n+@SET_MAKE@\n+\n+srcdir = @srcdir@\n+top_builddir = .\n+VPATH = @srcdir@\n+INSTALL = @INSTALL@\n+AR = ar\n+ARFLAGS = cru\n+ACLOCAL = @ACLOCAL@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+CC = @CC@\n+CFLAGS = @CFLAGS@\n+WARN_CFLAGS = @WARN_CFLAGS@ @WARN_PEDANTIC@ @WERROR@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+LDFLAGS = @LDFLAGS@\n+LIBICONV = @LIBICONV@\n+PACKAGE = @PACKAGE@\n+RANLIB = @RANLIB@\n+SHELL = @SHELL@\n+\n+datadir = @datadir@\n+exec_prefix = @prefix@\n+libdir = @libdir@\n+localedir = $(datadir)/locale\n+prefix = @prefix@\n+\n+INCLUDES = -I$(srcdir) -I.\n+\n+ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(INCLUDES) $(CPPFLAGS)\n+\n+libdecnumber_a_OBJS = decNumber.o decContext.o decUtility.o \\\n+\tdecimal32.o decimal64.o decimal128.o\n+\n+libdecnumber_a_SOURCES = decContext.c decContext.h decDPD.h \\\n+\tdecLibrary.c decNumber.c decNumber.h decNumberLocal.h \\\n+\tdecUtility.c decUtility.h \\\n+\tdecRound.c decimal128.c decimal128.h decimal32.c decimal32.h \\\n+\tdecimal64.c decimal64.h\n+\n+all: libdecnumber.a\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .o .obj\n+\n+libdecnumber.a: $(libdecnumber_a_OBJS)\n+\t-rm -f $@\n+\t$(AR) $(ARFLAGS) $@ $(libdecnumber_a_OBJS)\n+\t$(RANLIB) $@\n+\n+# Rules to rebuild the configuration\n+\n+Makefile: $(srcdir)/Makefile.in config.status\n+\t$(SHELL) ./config.status Makefile\n+\n+config.status: $(srcdir)/configure\n+\t$(SHELL) ./config.status --recheck\n+\n+$(srcdir)/configure: @MAINT@ $(srcdir)/aclocal.m4\n+\tcd $(srcdir) && $(AUTOCONF)\n+\n+$(srcdir)/aclocal.m4: @MAINT@ $(srcdir)/../config/acx.m4 \\\n+\t$(srcdir)/../config/warnings.m4 \\\n+\t$(srcdir)/configure.ac\n+\tcd $(srcdir) && $(ACLOCAL) -I ../config\n+\n+config.h: stamp-h1\n+\ttest -f config.h || (rm -f stamp-h1 && $(MAKE) stamp-h1)\n+\n+stamp-h1: $(srcdir)/config.in config.status\n+\t-rm -f stamp-h1\n+\t$(SHELL) ./config.status config.h\n+\n+$(srcdir)/config.in: @MAINT@ $(srcdir)/configure\n+\tcd $(srcdir) && $(AUTOHEADER)\n+\t-rm -f stamp-h1\n+\n+# Dependencies.\n+\n+decContext.o: decContext.c decContext.h decNumberLocal.h\n+decNumber.o:  decNumber.c decNumber.h decContext.h decNumberLocal.h\n+decimal32.o:  decimal32.c decNumber.h decContext.h decNumberLocal.h \\\n+   decimal32.h decUtility.h\n+decimal64.o:  decimal64.c decNumber.h decContext.h decNumberLocal.h \\\n+   decimal64.h decUtility.h\n+decimal128.o: decimal128.c decNumber.h decNumberLocal.h decimal128.h \\\n+   decUtility.h\n+\n+# Other miscellaneous targets.\n+\n+mostlyclean:\n+\t-rm -f *.o\n+\n+clean: mostlyclean\n+\t-rm -rf makedepend$(EXEEXT) libcpp.a $(srcdir)/autom4te.cache\n+\n+distclean: clean\n+\t-rm -f config.h stamp-h1 config.status config.cache config.log \\\n+\t  configure.lineno configure.status.lineno Makefile localedir.h \\\n+\t  localedir.hs\n+\n+maintainer-clean: distclean\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\t-rm -f $(srcdir)/configure $(srcdir)/aclocal.m4\n+\n+check:\n+installcheck:\n+dvi:\n+html:\n+info:\n+install-info:\n+install-man:\n+install:\n+\n+.PHONY: installdirs install install-strip mostlyclean clean distclean \\\n+  maintainer-clean check installcheck dvi html info install-info \\\n+  install-man update-po\n+\n+COMPILE = source='$<' object='$@' libtool=no $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(ALL_CFLAGS) -c\n+\n+# Implicit rules\n+\n+.c.o:\n+\t$(COMPILE) $<\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "358ce3912b597c5b21a7b5ac77f0f2bfac0f9cea", "filename": "libdecnumber/aclocal.m4", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Faclocal.m4?ref=8fdb0857e96aee3af730b7d12be80cb50aabb24d", "patch": "@@ -0,0 +1,15 @@\n+# generated automatically by aclocal 1.9.3 -*- Autoconf -*-\n+\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+# Free Software Foundation, Inc.\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+m4_include([../config/acx.m4])\n+m4_include([../config/warnings.m4])"}, {"sha": "8d23c64bd91c593b3c4aca1b845c611f2023d9b9", "filename": "libdecnumber/config.in", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfig.in?ref=8fdb0857e96aee3af730b7d12be80cb50aabb24d", "patch": "@@ -0,0 +1,93 @@\n+/* config.in.  Generated from configure.ac by autoheader.  */\n+\n+/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP\n+   systems. This function is required for `alloca.c' support on those systems.\n+   */\n+#undef CRAY_STACKSEG_END\n+\n+/* Define to 1 if using `alloca.c'. */\n+#undef C_ALLOCA\n+\n+/* Define to 1 if you have `alloca', as a function or macro. */\n+#undef HAVE_ALLOCA\n+\n+/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).\n+   */\n+#undef HAVE_ALLOCA_H\n+\n+/* Define to 1 if you have the <ctype.h> header file. */\n+#undef HAVE_CTYPE_H\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the <stddef.h> header file. */\n+#undef HAVE_STDDEF_H\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdio.h> header file. */\n+#undef HAVE_STDIO_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* The size of a `int', as computed by sizeof. */\n+#undef SIZEOF_INT\n+\n+/* The size of a `long', as computed by sizeof. */\n+#undef SIZEOF_LONG\n+\n+/* If using the C implementation of alloca, define if you know the\n+   direction of stack growth for your system; otherwise it will be\n+   automatically deduced at run-time.\n+\tSTACK_DIRECTION > 0 => grows toward higher addresses\n+\tSTACK_DIRECTION < 0 => grows toward lower addresses\n+\tSTACK_DIRECTION = 0 => direction of growth unknown */\n+#undef STACK_DIRECTION\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n+\n+/* Define if you can safely include both <string.h> and <strings.h>. */\n+#undef STRING_WITH_STRINGS\n+\n+/* Define to empty if `const' does not conform to ANSI C. */\n+#undef const\n+\n+/* Define to `long' if <sys/types.h> does not define. */\n+#undef off_t"}, {"sha": "eea906c836b97b8000af1d5573eb63ba89645966", "filename": "libdecnumber/configure", "status": "added", "additions": 5569, "deletions": 0, "changes": 5569, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=8fdb0857e96aee3af730b7d12be80cb50aabb24d"}, {"sha": "206374dd86acdaca8580996e0df5e00df31bd634", "filename": "libdecnumber/configure.ac", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdb0857e96aee3af730b7d12be80cb50aabb24d/libdecnumber%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure.ac?ref=8fdb0857e96aee3af730b7d12be80cb50aabb24d", "patch": "@@ -0,0 +1,58 @@\n+#                                               -*- Autoconf -*-\n+# Process this file with autoconf to produce a configure script.\n+\n+AC_PREREQ(2.59)\n+AC_INIT(libdecnumber, [ ], gcc-bugs@gcc.gnu.org, libdecnumber)\n+AC_CONFIG_SRCDIR(decNumber.h)\n+AC_CONFIG_MACRO_DIR(../config)\n+\n+# Checks for programs.\n+AC_PROG_MAKE_SET\n+AC_PROG_CC\n+AC_PROG_RANLIB\n+\n+MISSING=`cd $ac_aux_dir && ${PWDCMD-pwd}`/missing\n+AC_CHECK_PROGS([ACLOCAL], [aclocal], [$MISSING aclocal])\n+AC_CHECK_PROGS([AUTOCONF], [autoconf], [$MISSING autoconf])\n+AC_CHECK_PROGS([AUTOHEADER], [autoheader], [$MISSING autoheader])\n+\n+# Figure out what compiler warnings we can enable.\n+# See config/warnings.m4 for details.\n+\n+ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n+\t\t\t  -Wmissing-prototypes -Wold-style-definition \\\n+\t\t\t  -Wmissing-format-attribute])\n+ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long])\n+\n+# Only enable with --enable-werror-always until existing warnings are\n+# corrected.\n+ACX_PROG_CC_WARNINGS_ARE_ERRORS([manual])\n+\n+# Checks for header files.\n+AC_CHECK_HEADERS(ctype.h stddef.h string.h stdio.h)\n+\n+# Checks for typedefs, structures, and compiler characteristics.\n+AC_C_CONST\n+AC_TYPE_OFF_T\n+AC_CHECK_SIZEOF(int)\n+AC_CHECK_SIZEOF(long)\n+\n+# Checks for library functions.\n+AC_HEADER_STDC\n+\n+AC_ARG_ENABLE(maintainer-mode,\n+[  --enable-maintainer-mode enable rules only needed by maintainers],,\n+enable_maintainer_mode=no)\n+\n+if test \"x$enable_maintainer_mode\" = xno; then\n+  MAINT='#'\n+else\n+  MAINT=\n+fi\n+AC_SUBST(MAINT)\n+\n+# Output.\n+\n+AC_CONFIG_HEADERS(config.h:config.in, [echo timestamp > stamp-h1])\n+AC_CONFIG_FILES(Makefile)\n+AC_OUTPUT"}]}