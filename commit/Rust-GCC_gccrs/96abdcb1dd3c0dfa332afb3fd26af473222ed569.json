{"sha": "96abdcb1dd3c0dfa332afb3fd26af473222ed569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhYmRjYjFkZDNjMGRmYTMzMmFmYjNmZDI2YWY0NzMyMjJlZDU2OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-11-16T21:35:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-11-16T21:35:44Z"}, "message": "add support for -EL and -EB\n\nFrom-SVN: r8471", "tree": {"sha": "0ad58e4e3da2b39d6818ff9e9008dbd9c18828eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ad58e4e3da2b39d6818ff9e9008dbd9c18828eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96abdcb1dd3c0dfa332afb3fd26af473222ed569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96abdcb1dd3c0dfa332afb3fd26af473222ed569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96abdcb1dd3c0dfa332afb3fd26af473222ed569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96abdcb1dd3c0dfa332afb3fd26af473222ed569/comments", "author": null, "committer": null, "parents": [{"sha": "f76b9db2874507ed287d1fe39ca2b1e89ae95207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76b9db2874507ed287d1fe39ca2b1e89ae95207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f76b9db2874507ed287d1fe39ca2b1e89ae95207"}], "stats": {"total": 181, "additions": 107, "deletions": 74}, "files": [{"sha": "8fb46ddfc4506c6a33ebf65d704376cfb73e0cd1", "filename": "gcc/config/mips/dec-bsd.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fdec-bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fdec-bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fdec-bsd.h?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -50,7 +50,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{!.S:%{!.s:\t-D__LANGUAGE_C -D_LANGUAGE_C %{!ansi:-DLANGUAGE_C}}} \\\n %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mips3:-U__mips -D__mips=3}\"\n+%{mips3:-U__mips -D__mips=3} \\\n+%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n+%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n #endif\n \n /* Always uses GNU ld.  */"}, {"sha": "27c2a250af4f70c28c65df74f8010af90aafad0c", "filename": "gcc/config/mips/dec-osf1.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fdec-osf1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fdec-osf1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fdec-osf1.h?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -51,7 +51,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{.m:\t-D__LANGUAGE_OBJECTIVE_C__ -D__LANGUAGE_OBJECTIVE_C} \\\n %{!.S:%{!.s:\t-D__LANGUAGE_C__  -D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}} \\\n %{mlong64:-D__PTRDIFF_TYPE__=long\\\\ int} \\\n-%{!mlong64:-D__PTRDIFF_TYPE__=int}\"\n+%{!mlong64:-D__PTRDIFF_TYPE__=int} \\\n+%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n+%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n \n /* turn off collect2 COFF support, since ldfcn now has elf declaration */\n #undef OBJECT_FORMAT_COFF"}, {"sha": "da3920a7c454e0a9ec27ab4d9dcb5eaeb7637f8d", "filename": "gcc/config/mips/iris3.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Firis3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Firis3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis3.h?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -38,7 +38,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{!.S: %{!.s: %{!.cc: %{!.cxx: %{!.C: %{!.m: -D_LANGUAGE_C %{!ansi:-DLANGUAGE_C}}}}}}} \\\n %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mips3:-U__mips -D__mips=3}\"\n+%{mips3:-U__mips -D__mips=3} \\\n+%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n+%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n \n #define LIB_SPEC\t\\\n \t\"%{!p:%{!pg:%{!static:%{!g*:-lc_s}} -lc}}%{p:-lc_p}%{pg:-lc_p} crtn.o%s\""}, {"sha": "5b1987bdcab70c156a46e153da1539a39c5dc2ba", "filename": "gcc/config/mips/iris5.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Firis5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Firis5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5.h?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -73,7 +73,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{!mlong64: -D_MIPS_SZLONG=32}%{mlong64: -D_MIPS_SZLONG=64} \\\n %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mips3:-U__mips -D__mips=3}\"\n+%{mips3:-U__mips -D__mips=3} \\\n+%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n+%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n \n #undef LINK_SPEC\n #define LINK_SPEC \"\\"}, {"sha": "e22b76b8e1111f4ec60d0b8ed1302f447050eed5", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -1328,9 +1328,8 @@ mips_move_2words (operands, insn)\n \t\t    {\n \t\t      if (TARGET_FLOAT64 && !TARGET_64BIT)\n \t\t\t{\n-\t\t\t  operands[2] = GEN_INT (CONST_DOUBLE_LOW (op1));\n-\t\t\t  operands[3] = GEN_INT (CONST_DOUBLE_HIGH (op1));\n-\t\t\t  ret = \"li\\t%M0,%3\\n\\tli\\t%L0,%2\";\n+\t\t\t  split_double (op1, operands + 2, operands + 3);\n+\t\t\t  ret = \"li\\t%0,%2\\n\\tli\\t%D0,%3\";\n \t\t\t}\n \t\t      else\n \t\t\tret = \"li.d\\t%0,%1\\n\\tdsll\\t%D0,%0,32\\n\\tdsrl\\t%D0,32\\n\\tdsrl\\t%0,32\";\n@@ -1345,9 +1344,8 @@ mips_move_2words (operands, insn)\n \n \t      else\n \t\t{\n-\t\t  operands[2] = GEN_INT (CONST_DOUBLE_LOW (op1));\n-\t\t  operands[3] = GEN_INT (CONST_DOUBLE_HIGH (op1));\n-\t\t  ret = \"li\\t%M0,%3\\n\\tli\\t%L0,%2\";\n+\t\t  split_double (op1, operands + 2, operands + 3);\n+\t\t  ret = \"li\\t%0,%2\\n\\tli\\t%D0,%3\";\n \t\t}\n \t    }\n \n@@ -2481,19 +2479,22 @@ output_block_move (insn, operands, num_regs, move_type)\n       /* ??? Fails because of a MIPS assembler bug?  */\n       else if (TARGET_64BIT && bytes >= 8)\n \t{\n-#if BYTES_BIG_ENDIAN\n-\t  load_store[num].load       = \"ldl\\t%0,%1\\n\\tldr\\t%0,%2\";\n-\t  load_store[num].load_nop   = \"ldl\\t%0,%1\\n\\tldr\\t%0,%2%#\";\n-\t  load_store[num].store      = \"sdl\\t%0,%1\\n\\tsdr\\t%0,%2\";\n-\t  load_store[num].last_store = \"sdr\\t%0,%2\";\n-\t  load_store[num].final      = \"sdl\\t%0,%1\";\n-#else\n-\t  load_store[num].load\t     = \"ldl\\t%0,%2\\n\\tldr\\t%0,%1\";\n-\t  load_store[num].load_nop   = \"ldl\\t%0,%2\\n\\tldr\\t%0,%1%#\";\n-\t  load_store[num].store\t     = \"sdl\\t%0,%2\\n\\tsdr\\t%0,%1\";\n-\t  load_store[num].last_store = \"sdr\\t%0,%1\";\n-\t  load_store[num].final      = \"sdl\\t%0,%2\";\n-#endif\n+\t  if (BYTES_BIG_ENDIAN)\n+\t    {\n+\t      load_store[num].load       = \"ldl\\t%0,%1\\n\\tldr\\t%0,%2\";\n+\t      load_store[num].load_nop   = \"ldl\\t%0,%1\\n\\tldr\\t%0,%2%#\";\n+\t      load_store[num].store      = \"sdl\\t%0,%1\\n\\tsdr\\t%0,%2\";\n+\t      load_store[num].last_store = \"sdr\\t%0,%2\";\n+\t      load_store[num].final      = \"sdl\\t%0,%1\";\n+\t    }\n+\t  else\n+\t    {\n+\t      load_store[num].load\t     = \"ldl\\t%0,%2\\n\\tldr\\t%0,%1\";\n+\t      load_store[num].load_nop   = \"ldl\\t%0,%2\\n\\tldr\\t%0,%1%#\";\n+\t      load_store[num].store\t     = \"sdl\\t%0,%2\\n\\tsdr\\t%0,%1\";\n+\t      load_store[num].last_store = \"sdr\\t%0,%1\";\n+\t      load_store[num].final      = \"sdl\\t%0,%2\";\n+\t    }\n \t  load_store[num].mode = DImode;\n \t  offset += 8;\n \t  bytes -= 8;\n@@ -2514,19 +2515,22 @@ output_block_move (insn, operands, num_regs, move_type)\n \n       else if (bytes >= 4)\n \t{\n-#if BYTES_BIG_ENDIAN\n-\t  load_store[num].load       = \"lwl\\t%0,%1\\n\\tlwr\\t%0,%2\";\n-\t  load_store[num].load_nop   = \"lwl\\t%0,%1\\n\\tlwr\\t%0,%2%#\";\n-\t  load_store[num].store      = \"swl\\t%0,%1\\n\\tswr\\t%0,%2\";\n-\t  load_store[num].last_store = \"swr\\t%0,%2\";\n-\t  load_store[num].final      = \"swl\\t%0,%1\";\n-#else\n-\t  load_store[num].load\t     = \"lwl\\t%0,%2\\n\\tlwr\\t%0,%1\";\n-\t  load_store[num].load_nop   = \"lwl\\t%0,%2\\n\\tlwr\\t%0,%1%#\";\n-\t  load_store[num].store\t     = \"swl\\t%0,%2\\n\\tswr\\t%0,%1\";\n-\t  load_store[num].last_store = \"swr\\t%0,%1\";\n-\t  load_store[num].final      = \"swl\\t%0,%2\";\n-#endif\n+\t  if (BYTES_BIG_ENDIAN)\n+\t    {\n+\t      load_store[num].load       = \"lwl\\t%0,%1\\n\\tlwr\\t%0,%2\";\n+\t      load_store[num].load_nop   = \"lwl\\t%0,%1\\n\\tlwr\\t%0,%2%#\";\n+\t      load_store[num].store      = \"swl\\t%0,%1\\n\\tswr\\t%0,%2\";\n+\t      load_store[num].last_store = \"swr\\t%0,%2\";\n+\t      load_store[num].final      = \"swl\\t%0,%1\";\n+\t    }\n+\t  else\n+\t    {\n+\t      load_store[num].load\t     = \"lwl\\t%0,%2\\n\\tlwr\\t%0,%1\";\n+\t      load_store[num].load_nop   = \"lwl\\t%0,%2\\n\\tlwr\\t%0,%1%#\";\n+\t      load_store[num].store\t     = \"swl\\t%0,%2\\n\\tswr\\t%0,%1\";\n+\t      load_store[num].last_store = \"swr\\t%0,%1\";\n+\t      load_store[num].final      = \"swl\\t%0,%2\";\n+\t    }\n \t  load_store[num].mode = SImode;\n \t  offset += 4;\n \t  bytes -= 4;\n@@ -3623,13 +3627,9 @@ print_operand (file, op, letter)\n     {\n       register int regnum = REGNO (op);\n \n-      if (letter == 'M')\n-\tregnum += MOST_SIGNIFICANT_WORD;\n-\n-      else if (letter == 'L')\n-\tregnum += LEAST_SIGNIFICANT_WORD;\n-\n-      else if (letter == 'D')\n+      if ((letter == 'M' && ! WORDS_BIG_ENDIAN)\n+\t  || (letter == 'L' && WORDS_BIG_ENDIAN)\n+\t  || letter == 'D')\n \tregnum++;\n \n       fprintf (file, \"%s\", reg_names[regnum]);"}, {"sha": "53479884d326bcf9fb74304c2200f9500fdee6b2", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 39, "deletions": 30, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -259,7 +259,7 @@ extern char\t       *mktemp ();\n #define MASK_64BIT\t0x00002000\t/* Use 64 bit GP registers and insns */\n #define MASK_EMBEDDED_PIC 0x00004000\t/* Generate embedded PIC code */\n #define MASK_EMBEDDED_DATA 0x00008000\t/* Reduce RAM usage, not fast code */\n-#define MASK_UNUSED4\t0x00010000\n+#define MASK_BIG_ENDIAN\t0x00010000\t/* Generate big endian code */\n #define MASK_UNUSED3\t0x00020000\n #define MASK_UNUSED2\t0x00040000\n #define MASK_UNUSED1\t0x00080000\n@@ -338,6 +338,9 @@ extern char\t       *mktemp ();\n \t\t\t\t\t   fastest code.  */\n #define TARGET_EMBEDDED_DATA\t(target_flags & MASK_EMBEDDED_DATA)\n \n+\t\t\t\t\t/* generate big endian code.  */\n+#define TARGET_BIG_ENDIAN\t(target_flags & MASK_BIG_ENDIAN)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -378,6 +381,8 @@ extern char\t       *mktemp ();\n   {\"no-embedded-pic\",\t -MASK_EMBEDDED_PIC},\t\t\t\t\\\n   {\"embedded-data\",\t  MASK_EMBEDDED_DATA},\t\t\t\t\\\n   {\"no-embedded-data\",\t -MASK_EMBEDDED_DATA},\t\t\t\t\\\n+  {\"eb\",\t\t  MASK_BIG_ENDIAN},\t\t\t\t\\\n+  {\"el\",\t\t -MASK_BIG_ENDIAN},\t\t\t\t\\\n   {\"debug\",\t\t  MASK_DEBUG},\t\t\t\t\t\\\n   {\"debuga\",\t\t  MASK_DEBUG_A},\t\t\t\t\\\n   {\"debugb\",\t\t  MASK_DEBUG_B},\t\t\t\t\\\n@@ -389,7 +394,9 @@ extern char\t       *mktemp ();\n   {\"debugh\",\t\t  MASK_DEBUG_H},\t\t\t\t\\\n   {\"debugi\",\t\t  MASK_DEBUG_I},\t\t\t\t\\\n   {\"debugj\",\t\t  MASK_DEBUG_J},\t\t\t\t\\\n-  {\"\",\t\t\t  TARGET_DEFAULT | TARGET_CPU_DEFAULT}\t\t\\\n+  {\"\",\t\t\t  (TARGET_DEFAULT\t\t\t\t\\\n+\t\t\t   | TARGET_CPU_DEFAULT\t\t\t\t\\\n+\t\t\t   | TARGET_ENDIAN_DEFAULT)}\t\t\t\\\n }\n \n /* Default target_flags if no switches are specified  */\n@@ -402,6 +409,14 @@ extern char\t       *mktemp ();\n #define TARGET_CPU_DEFAULT 0\n #endif\n \n+#ifndef TARGET_ENDIAN_DEFAULT\n+#ifndef DECSTATION\n+#define TARGET_ENDIAN_DEFAULT MASK_BIG_ENDIAN\n+#else\n+#define TARGET_ENDIAN_DEFAULT 0\n+#endif\n+#endif\n+\n /* This macro is similar to `TARGET_SWITCHES' but defines names of\n    command options that have values.  Its definition is an\n    initializer with a subgrouping for each command option.\n@@ -648,7 +663,7 @@ while (0)\n #define CC1_SPEC \"\\\n %{gline:%{!g:%{!g0:%{!g1:%{!g2: -g1}}}}} \\\n %{mips1:-mfp32 -mgp32}%{mips2:-mfp32 -mgp32}%{mips3:-mfp64 -mgp64} \\\n-%{G*} \\\n+%{G*} %{EB:-meb} %{EL:-mel} %{EB:%{EL:%emay not use both -EB and -EL}} \\\n %{pic-none:   -mno-half-pic} \\\n %{pic-lib:    -mhalf-pic} \\\n %{pic-extern: -mhalf-pic} \\\n@@ -669,7 +684,9 @@ while (0)\n %{!.S:%{!.s:\t-D__LANGUAGE_C -D_LANGUAGE_C %{!ansi:-DLANGUAGE_C}}} \\\n %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mips3:-U__mips -D__mips=3}\"\n+%{mips3:-U__mips -D__mips=3} \\\n+%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n+%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n #endif\n \n /* If defined, this macro is an additional prefix to try after\n@@ -900,39 +917,27 @@ do {\t\t\t\t\t\t\t\\\n \f\n /* Target machine storage layout */\n \n+/* Define in order to support both big and little endian float formats\n+   in the same gcc binary.  */\n+#define REAL_ARITHMETIC\n+\n /* Define this if most significant bit is lowest numbered\n    in instructions that operate on numbered bit-fields.\n */\n #define BITS_BIG_ENDIAN 0\n \n /* Define this if most significant byte of a word is the lowest numbered. */\n-#ifndef BYTES_BIG_ENDIAN\n-#ifndef DECSTATION\n-#define BYTES_BIG_ENDIAN 1\n-#else\n-#define BYTES_BIG_ENDIAN 0\n-#endif\n-#endif\n+#define BYTES_BIG_ENDIAN (TARGET_BIG_ENDIAN != 0)\n \n /* Define this if most significant word of a multiword number is the lowest. */\n-#ifndef WORDS_BIG_ENDIAN\n-#ifndef DECSTATION\n-#define WORDS_BIG_ENDIAN 1\n-#else\n-#define WORDS_BIG_ENDIAN 0\n-#endif\n-#endif\n-\n-/* Define macros to easily access the most and least significant words\n-   without a lot of #ifdef's.  */\n-\n-#if WORDS_BIG_ENDIAN\n-#define MOST_SIGNIFICANT_WORD\t0\n-#define LEAST_SIGNIFICANT_WORD\t1\n+#define WORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN != 0)\n \n+/* Define this to set the endianness to use in libgcc2.c, which can\n+   not depend on target_flags.  */\n+#if !defined(MIPSEL) && !defined(__MIPSEL__)\n+#define LIBGCC2_WORDS_BIG_ENDIAN 1\n #else\n-#define MOST_SIGNIFICANT_WORD\t1\n-#define LEAST_SIGNIFICANT_WORD\t0\n+#define LIBGCC2_WORDS_BIG_ENDIAN 0\n #endif\n \n /* Number of bits in an addressable storage unit */\n@@ -2602,9 +2607,13 @@ while (0)\n     return COSTS_N_INSNS (SYMBOL_REF_FLAG (X) ? 1 : 2);\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   case CONST_DOUBLE:\t\t\t\t\t\t\t\\\n-    return COSTS_N_INSNS ((CONST_DOUBLE_HIGH (X) == 0\t\t\t\\\n-\t\t\t   && CONST_DOUBLE_LOW (X)) ? 2 : 4);\n-\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rtx high, low;\t\t\t\t\t\t\t\\\n+      split_double (X, &high, &low);\t\t\t\t\t\\\n+      return COSTS_N_INSNS ((high == CONST0_RTX (GET_MODE (high))\t\\\n+\t\t\t     || low == CONST0_RTX (GET_MODE (low)))\t\\\n+\t\t\t    ? 2 : 4);\t\t\t\t\t\\\n+    }\n \n /* Like `CONST_COSTS' but applies to nonconstant RTL expressions.\n    This can be used, for example, to indicate how costly a multiply"}, {"sha": "3263e965a9948c730d8b46814c237310aa71984b", "filename": "gcc/config/mips/osfrose.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fosfrose.h?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -80,7 +80,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{!.S:%{!.s:\t-D__LANGUAGE_C__  -D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}} \\\n %{mlong64:-D__PTRDIFF_TYPE__=long\\\\ int} \\\n %{!mlong64:-D__PTRDIFF_TYPE__=int} \\\n-%{mips3:-U__mips -D__mips=3}\"\n+%{mips3:-U__mips -D__mips=3} \\\n+%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n+%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n \n /* ??? This assumes that GNU as is always used with GNU ld, and MIPS as is\n    always used with MIPS ld.  */"}, {"sha": "f1915c8b99d8825538cc7f077ac16ad097a29118", "filename": "gcc/config/mips/t-mips", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Ft-mips", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Ft-mips", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-mips?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -6,3 +6,10 @@\n # and does not need anything from libgcc1.a.\n LIBGCC1 = libgcc1.null\n CROSS_LIBGCC1 = libgcc1.null\n+\n+MULTILIB_OPTIONS=EL/EB\n+MULTILIB_DIRNAMES=el eb\n+MULTILIB_MATCHES=\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "69d82f1feb4c7086f2c33c7d1fd4c67fb403b1b4", "filename": "gcc/config/mips/t-mips-gas", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Ft-mips-gas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abdcb1dd3c0dfa332afb3fd26af473222ed569/gcc%2Fconfig%2Fmips%2Ft-mips-gas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-mips-gas?ref=96abdcb1dd3c0dfa332afb3fd26af473222ed569", "patch": "@@ -2,3 +2,10 @@\n # and does not need anything from libgcc1.a.\n LIBGCC1 = libgcc1.null\n CROSS_LIBGCC1 = libgcc1.null\n+\n+MULTILIB_OPTIONS=EL/EB\n+MULTILIB_DIRNAMES=el eb\n+MULTILIB_MATCHES=\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}]}