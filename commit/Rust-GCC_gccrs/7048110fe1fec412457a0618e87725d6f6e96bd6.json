{"sha": "7048110fe1fec412457a0618e87725d6f6e96bd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0ODExMGZlMWZlYzQxMjQ1N2EwNjE4ZTg3NzI1ZDZmNmU5NmJkNg==", "commit": {"author": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-01-10T03:13:50Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-01-10T03:13:50Z"}, "message": "decl.c, [...]: Don't cast return value of xmalloc et al.\n\n\t* decl.c, parse-scan.y, parse.y: Don't cast return value of\n\txmalloc et al.\n\nFrom-SVN: r61138", "tree": {"sha": "9762c1cc7a389ba5ce2774e08e447baed695549b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9762c1cc7a389ba5ce2774e08e447baed695549b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7048110fe1fec412457a0618e87725d6f6e96bd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7048110fe1fec412457a0618e87725d6f6e96bd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7048110fe1fec412457a0618e87725d6f6e96bd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7048110fe1fec412457a0618e87725d6f6e96bd6/comments", "author": null, "committer": null, "parents": [{"sha": "77d3109be28c227a324991307b0e2e46774b011c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d3109be28c227a324991307b0e2e46774b011c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d3109be28c227a324991307b0e2e46774b011c"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "b0703007a1f6263e71f562a8d0b95917b0a5e9f9", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7048110fe1fec412457a0618e87725d6f6e96bd6/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7048110fe1fec412457a0618e87725d6f6e96bd6/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=7048110fe1fec412457a0618e87725d6f6e96bd6", "patch": "@@ -1583,7 +1583,7 @@ java_dup_lang_specific_decl (node)\n     return;\n \n   lang_decl_size = sizeof (struct lang_decl);\n-  x = (struct lang_decl *) ggc_alloc (lang_decl_size);\n+  x = ggc_alloc (lang_decl_size);\n   memcpy (x, DECL_LANG_SPECIFIC (node), lang_decl_size);\n   DECL_LANG_SPECIFIC (node) = x;\n }"}, {"sha": "24e8055414ce2cf5d5bceb33f1abf5e77f05d1be", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7048110fe1fec412457a0618e87725d6f6e96bd6/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7048110fe1fec412457a0618e87725d6f6e96bd6/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=7048110fe1fec412457a0618e87725d6f6e96bd6", "patch": "@@ -109,8 +109,7 @@ struct method_declarator {\n };\n #define NEW_METHOD_DECLARATOR(D,N,A)\t\t\t\t\t     \\\n {\t\t\t\t\t\t\t\t\t     \\\n-  (D) = \t\t\t\t\t\t\t\t     \\\n-    (struct method_declarator *)xmalloc (sizeof (struct method_declarator)); \\\n+  (D) = xmalloc (sizeof (struct method_declarator));\t\t\t     \\\n   (D)->method_name = (N);\t\t\t\t\t\t     \\\n   (D)->args = (A);\t\t\t\t\t\t\t     \\\n }\n@@ -1179,8 +1178,7 @@ constant_expression:\n void\n java_push_parser_context ()\n {\n-  struct parser_ctxt *new = \n-    (struct parser_ctxt *) xcalloc (1, sizeof (struct parser_ctxt));\n+  struct parser_ctxt *new = xcalloc (1, sizeof (struct parser_ctxt));\n \n   new->next = ctxp;\n   ctxp = new;\n@@ -1192,7 +1190,7 @@ push_class_context (name)\n {\n   struct class_context *ctx;\n \n-  ctx = (struct class_context *) xmalloc (sizeof (struct class_context));\n+  ctx = xmalloc (sizeof (struct class_context));\n   ctx->name = (char *) name;\n   ctx->next = current_class_context;\n   current_class_context = ctx;"}, {"sha": "236525c2198c6cc20b8e9361526bbe06503b99b4", "filename": "gcc/java/parse.y", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7048110fe1fec412457a0618e87725d6f6e96bd6/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7048110fe1fec412457a0618e87725d6f6e96bd6/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=7048110fe1fec412457a0618e87725d6f6e96bd6", "patch": "@@ -2183,10 +2183,10 @@ dims:\n \t\t    {\n \t\t      allocate *= sizeof (int);\n \t\t      if (ctxp->osb_number)\n-\t\t\tctxp->osb_number = (int *)xrealloc (ctxp->osb_number,\n-\t\t\t\t\t\t\t    allocate);\n+\t\t\tctxp->osb_number = xrealloc (ctxp->osb_number,\n+\t\t\t\t\t\t     allocate);\n \t\t      else\n-\t\t\tctxp->osb_number = (int *)xmalloc (allocate);\n+\t\t\tctxp->osb_number = xmalloc (allocate);\n \t\t    }\n \t\t  ctxp->osb_depth++;\n \t\t  CURRENT_OSB (ctxp) = 1;\n@@ -2660,7 +2660,7 @@ create_new_parser_context (copy_from_previous)\n {\n   struct parser_ctxt *new;\n \n-  new =  (struct parser_ctxt *) ggc_alloc (sizeof (struct parser_ctxt));\n+  new = ggc_alloc (sizeof (struct parser_ctxt));\n   if (copy_from_previous)\n     {\n       memcpy (new, ctxp, sizeof (struct parser_ctxt));\n@@ -5133,7 +5133,7 @@ static void\n create_jdep_list (ctxp)\n      struct parser_ctxt *ctxp;\n {\n-  jdeplist *new = (jdeplist *)xmalloc (sizeof (jdeplist));\n+  jdeplist *new = xmalloc (sizeof (jdeplist));\n   new->first = new->last = NULL;\n   new->next = ctxp->classd_list;\n   ctxp->classd_list = new;\n@@ -5188,7 +5188,7 @@ register_incomplete_type (kind, wfl, decl, ptr)\n      int kind;\n      tree wfl, decl, ptr;\n {\n-  jdep *new = (jdep *)xmalloc (sizeof (jdep));\n+  jdep *new = xmalloc (sizeof (jdep));\n \n   if (!ptr && kind != JDEP_METHOD_END) /* JDEP_METHOD_END is a mere marker */\n     ptr = obtain_incomplete_type (wfl);"}]}