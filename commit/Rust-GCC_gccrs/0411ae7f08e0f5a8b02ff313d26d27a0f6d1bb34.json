{"sha": "0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQxMWFlN2YwOGUwZjVhOGIwMmZmMzEzZDI2ZDI3YTBmNmQxYmIzNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-15T12:12:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-15T12:16:42Z"}, "message": "libatomic, libgomp, libitc: Fix bootstrap [PR70454]\n\nThe recent changes to error on mixing -march=i386 and -fcf-protection broke\nbootstrap.  This patch changes lib{atomic,gomp,itm} configury, so that it\nonly adds -march=i486 to flags if really needed (i.e. when 486 or later isn't\non by default already).  Similarly, it will not use ifuncs if -mcx16\n(or -march=i686 for 32-bit) is on by default.\n\n2021-01-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/70454\nlibatomic/\n\t* configure.tgt: For i?86 and x86_64 determine if -march=i486 needs to\n\tbe added through preprocessor check on\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4.  Determine if try_ifunc is needed\n\tbased on preprocessor check on __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n\tor __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8.\nlibgomp/\n\t* configure.tgt: For i?86 and x86_64 determine if -march=i486 needs to\n\tbe added through preprocessor check on\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4.\nlibitm/\n\t* configure.tgt: For i?86 and x86_64 determine if -march=i486 needs to\n\tbe added through preprocessor check on\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4.", "tree": {"sha": "b31b94f7c925f2c9c84e6a6c23017c59ebeaa574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b31b94f7c925f2c9c84e6a6c23017c59ebeaa574"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfab355012ca0f5219da8beb04f2fdaf757d34b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfab355012ca0f5219da8beb04f2fdaf757d34b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfab355012ca0f5219da8beb04f2fdaf757d34b7"}], "stats": {"total": 128, "additions": 64, "deletions": 64}, "files": [{"sha": "670b0d72cfec2027a02347eb5b62521054f264c4", "filename": "libatomic/configure.tgt", "status": "modified", "additions": 32, "deletions": 24, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34/libatomic%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34/libatomic%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.tgt?ref=0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34", "patch": "@@ -81,32 +81,40 @@ case \"${target_cpu}\" in\n \tARCH=sparc\n \t;;\n \n-  i[3456]86)\n-\tcase \" ${CC} ${CFLAGS} \" in\n-\t  *\" -m64 \"*|*\" -mx32 \"*)\n-\t    ;;\n-\t  *)\n-\t    if test -z \"$with_arch\"; then\n-\t      XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=${target_cpu}\"\n-\t      XCFLAGS=\"${XCFLAGS} -fomit-frame-pointer\"\n-\t    fi\n-\tesac\n-\tARCH=x86\n-\t# ??? Detect when -march=i686 is already enabled.\n-\ttry_ifunc=yes\n-\t;;\n-  x86_64)\n-\tcase \" ${CC} ${CFLAGS} \" in\n-\t  *\" -m32 \"*)\n+  i[3456]86 | x86_64)\n+\tcat > conftestx.c <<EOF\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error need -march=i486\n+#endif\n+EOF\n+\tif ${CC} ${CFLAGS} -E conftestx.c > /dev/null 2>&1; then\n+\t  :\n+\telse\n+\t  if test \"${target_cpu}\" = x86_64; then\n \t    XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=generic\"\n-\t    XCFLAGS=\"${XCFLAGS} -fomit-frame-pointer\"\n-\t    ;;\n-\t  *)\n-\t    ;;\n-\tesac\n+\t  else\n+\t    XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=${target_cpu}\"\n+\t  fi\n+\t  XCFLAGS=\"${XCFLAGS} -fomit-frame-pointer\"\n+\tfi\n+\tcat > conftestx.c <<EOF\n+#ifdef __x86_64__\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#error need -mcx16\n+#endif\n+#else\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#error need -march=i686\n+#endif\n+#endif\n+EOF\n+\tif ${CC} ${CFLAGS} -E conftestx.c > /dev/null 2>&1; then\n+\t  try_ifunc=no\n+\telse\n+\t  try_ifunc=yes\n+\tfi\n+\trm -f conftestx.c\n \tARCH=x86\n-\t# ??? Detect when -mcx16 is already enabled.\n-\ttry_ifunc=yes\n \t;;\n \n   *)\t\t\tARCH=\"${target_cpu}\" ;;"}, {"sha": "be06be0e52bac93ab3a3c0c6f08cba92c1397405", "filename": "libgomp/configure.tgt", "status": "modified", "additions": 15, "deletions": 20, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34/libgomp%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34/libgomp%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.tgt?ref=0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34", "patch": "@@ -73,28 +73,23 @@ if test x$enable_linux_futex = xyes; then\n \t;;\n \n     # Note that bare i386 is not included here.  We need cmpxchg.\n-    i[456]86-*-linux*)\n+    i[456]86-*-linux* | x86_64-*-linux*)\n \tconfig_path=\"linux/x86 linux posix\"\n-\tcase \" ${CC} ${CFLAGS} \" in\n-\t  *\" -m64 \"*|*\" -mx32 \"*)\n-\t    ;;\n-\t  *)\n-\t    if test -z \"$with_arch\"; then\n-\t      XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=${target_cpu}\"\n-\t    fi\n-\tesac\n-\t;;\n-\n-    # Similar jiggery-pokery for x86_64 multilibs, except here we\n-    # can't rely on the --with-arch configure option, since that\n-    # applies to the 64-bit side.\n-    x86_64-*-linux*)\n-\tconfig_path=\"linux/x86 linux posix\"\n-\tcase \" ${CC} ${CFLAGS} \" in\n-\t  *\" -m32 \"*)\n+\tcat > conftestx.c <<EOF\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error need -march=i486\n+#endif\n+EOF\n+\tif ${CC} ${CFLAGS} -E conftestx.c > /dev/null 2>&1; then\n+\t  :\n+\telse\n+\t  if test \"${target_cpu}\" = x86_64; then\n \t    XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=generic\"\n-\t    ;;\n-\tesac\n+\t  else\n+\t    XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=${target_cpu}\"\n+\t  fi\n+\tfi\n+\trm -f conftestx.c\n \t;;\n \n     # Note that sparcv7 and sparcv8 is not included here.  We need cas."}, {"sha": "a3d84896cc5e5b9862157da6d0440ca1aa5a0023", "filename": "libitm/configure.tgt", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34/libitm%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34/libitm%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.tgt?ref=0411ae7f08e0f5a8b02ff313d26d27a0f6d1bb34", "patch": "@@ -59,16 +59,23 @@ case \"${target_cpu}\" in\n \n   arm*)\t\tARCH=arm ;;\n \n-  i[3456]86)\n-\tcase \" ${CC} ${CFLAGS} \" in\n-\t  *\" -m64 \"*|*\" -mx32 \"*)\n-\t    ;;\n-\t  *)\n-\t    if test -z \"$with_arch\"; then\n-\t      XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=${target_cpu}\"\n-\t      XCFLAGS=\"${XCFLAGS} -fomit-frame-pointer\"\n-\t    fi\n-\tesac\n+  i[3456]86 | x86_64)\n+\tcat > conftestx.c <<EOF\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error need -march=i486\n+#endif\n+EOF\n+\tif ${CC} ${CFLAGS} -E conftestx.c > /dev/null 2>&1; then\n+\t  :\n+\telse\n+\t  if test \"${target_cpu}\" = x86_64; then\n+\t    XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=generic\"\n+\t  else\n+\t    XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=${target_cpu}\"\n+\t  fi\n+\t  XCFLAGS=\"${XCFLAGS} -fomit-frame-pointer\"\n+\tfi\n+\trm -f conftestx.c\n \tXCFLAGS=\"${XCFLAGS} -mrtm\"\n \tARCH=x86\n \t;;\n@@ -103,16 +110,6 @@ case \"${target_cpu}\" in\n \tARCH=sparc\n \t;;\n \n-  x86_64)\n-\tcase \" ${CC} ${CFLAGS} \" in\n-\t  *\" -m32 \"*)\n-\t    XCFLAGS=\"${XCFLAGS} -march=i486 -mtune=generic\"\n-\t    XCFLAGS=\"${XCFLAGS} -fomit-frame-pointer\"\n-\t    ;;\n-\tesac\n-\tXCFLAGS=\"${XCFLAGS} -mrtm\"\n-\tARCH=x86\n-\t;;\n   s390|s390x)\n \tXCFLAGS=\"${XCFLAGS} -mzarch -mhtm\"\n \tARCH=s390"}]}