{"sha": "f9314d012c1b213b95ee71a99b9edbe9be0e9118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkzMTRkMDEyYzFiMjEzYjk1ZWU3MWE5OWI5ZWRiZTliZTBlOTExOA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-11-17T20:10:51Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-11-17T20:10:51Z"}, "message": "/Network/Servers/hills/Volumes/capanna/gkeating/l\n\nFrom-SVN: r107131", "tree": {"sha": "bc4b46ef8b9c44b399604eb7e6a248cac56cfe0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc4b46ef8b9c44b399604eb7e6a248cac56cfe0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9314d012c1b213b95ee71a99b9edbe9be0e9118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9314d012c1b213b95ee71a99b9edbe9be0e9118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9314d012c1b213b95ee71a99b9edbe9be0e9118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9314d012c1b213b95ee71a99b9edbe9be0e9118/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "035db16b87e0687bd77dc6a3d696bfd9be3080d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/035db16b87e0687bd77dc6a3d696bfd9be3080d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/035db16b87e0687bd77dc6a3d696bfd9be3080d1"}], "stats": {"total": 87, "additions": 68, "deletions": 19}, "files": [{"sha": "f6ddc196f8683f29107e9e2d0e51a2dfeee3eea0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f9314d012c1b213b95ee71a99b9edbe9be0e9118", "patch": "@@ -1,3 +1,15 @@\n+2005-11-17  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/os/bsd/darwin/ppc-extra.ver: New.\n+\t* src/Makefile.am (libstdc++-symbol.ver): Move outside conditionals,\n+\tand make dependent on port symbol files.\n+\t(libstdc++-symbol.explist): Use the generated .ver file, not\n+\tthe template.\n+\t* src/compatibility.cc [APPLE] (__eprintf): New.\n+\t* src/Makefile.in: Regenerate.\n+\t* configure.host (powerpc*-*-darwin*): Define\n+\tport_specific_symbol_files.\n+\n 2005-11-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* libsupc++/eh_arm.cc (__cxa_begin_cleanup): Remember a"}, {"sha": "ffe32b65658f376830475afd5ca244e909ead22e", "filename": "libstdc++-v3/config/os/bsd/darwin/ppc-extra.ver", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fppc-extra.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fppc-extra.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fppc-extra.ver?ref=f9314d012c1b213b95ee71a99b9edbe9be0e9118", "patch": "@@ -0,0 +1 @@\n+  __eprintf;"}, {"sha": "de48517144b9987081a3d04b9ca14071c674417b", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=f9314d012c1b213b95ee71a99b9edbe9be0e9118", "patch": "@@ -282,6 +282,9 @@ case \"${host}\" in\n     abi_baseline_pair=\"mips-linux-gnu\"\n     cpu_include_dir=\"cpu/mips\"\n     ;;\n+  powerpc*-*-darwin*)\n+    port_specific_symbol_files=\"\\$(srcdir)/../config/os/bsd/darwin/ppc-extra.ver\"\n+    ;;\n   powerpc64-*-linux*)\n     abi_baseline_pair=\"powerpc64-linux-gnu\"\n     ;;"}, {"sha": "903930a81809d8014e3ec07771784921307418b2", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=f9314d012c1b213b95ee71a99b9edbe9be0e9118", "patch": "@@ -28,26 +28,31 @@ include $(top_srcdir)/fragment.am\n toolexeclib_LTLIBRARIES = libstdc++.la\n \n # Symbol versioning for shared libraries.\n-if ENABLE_SYMVERS_GNU\n-version_arg = -Wl,--version-script=libstdc++-symbol.ver\n-version_dep = libstdc++-symbol.ver\n-libstdc++-symbol.ver:  ${glibcxx_srcdir}/$(SYMVER_MAP)\n+# This could be conditional on\n+# ENABLE_SYMVERS_GNU || ENABLE_SYMVERS_DARWIN_EXPORT\n+# but automake doesn't support OR operations in conditionals.\n+libstdc++-symbol.ver:  ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n+\t\t$(port_specific_symbol_files)\n \tcp ${glibcxx_srcdir}/$(SYMVER_MAP) ./libstdc++-symbol.ver\n \tif test \"x$(port_specific_symbol_files)\" != x; then \\\n \t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n \t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n \t  cat tmp.top $(port_specific_symbol_files) tmp.bottom > $@; \\\n \t  rm tmp.top tmp.bottom; \\\n \tfi\n+\n+if ENABLE_SYMVERS_GNU\n+version_arg = -Wl,--version-script=libstdc++-symbol.ver\n+version_dep = libstdc++-symbol.ver\n else\n if ENABLE_SYMVERS_DARWIN_EXPORT\n version_arg = -Wl,-exported_symbols_list,libstdc++-symbol.explist\n version_dep = libstdc++-symbol.explist\n-libstdc++-symbol.explist : ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n+libstdc++-symbol.explist : libstdc++-symbol.ver \\\n \t\t${glibcxx_srcdir}/scripts/make_exports.pl \\\n \t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)\n \tperl ${glibcxx_srcdir}/scripts/make_exports.pl \\\n-\t  ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n+\t  libstdc++-symbol.ver \\\n \t  $(libstdc___la_OBJECTS:%.lo=.libs/%.o) \\\n \t `echo $(libstdc___la_LIBADD) | \\\n \t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n@@ -169,7 +174,6 @@ libstdc___la_DEPENDENCIES = ${version_dep} $(libstdc___la_LIBADD)\n libstdc___la_LDFLAGS = \\\n \t-version-info $(libtool_VERSION) ${version_arg} -lm \n \n-\n # Use special rules for the deprecated source files so that they find\n # deprecated include files.\n GLIBCXX_INCLUDE_DIR=$(glibcxx_builddir)/include"}, {"sha": "188f46ce07d020f7792b8750a4a06fd77e2e94bb", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=f9314d012c1b213b95ee71a99b9edbe9be0e9118", "patch": "@@ -276,8 +276,6 @@ AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n toolexeclib_LTLIBRARIES = libstdc++.la\n @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@@ENABLE_SYMVERS_GNU_FALSE@version_arg = \n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@version_arg = -Wl,-exported_symbols_list,libstdc++-symbol.explist\n-\n-# Symbol versioning for shared libraries.\n @ENABLE_SYMVERS_GNU_TRUE@version_arg = -Wl,--version-script=libstdc++-symbol.ver\n @ENABLE_SYMVERS_DARWIN_EXPORT_FALSE@@ENABLE_SYMVERS_GNU_FALSE@version_dep = \n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@version_dep = libstdc++-symbol.explist\n@@ -668,19 +666,25 @@ uninstall-am: uninstall-info-am uninstall-toolexeclibLTLIBRARIES\n \ttags uninstall uninstall-am uninstall-info-am \\\n \tuninstall-toolexeclibLTLIBRARIES\n \n-@ENABLE_SYMVERS_GNU_TRUE@libstdc++-symbol.ver:  ${glibcxx_srcdir}/$(SYMVER_MAP)\n-@ENABLE_SYMVERS_GNU_TRUE@\tcp ${glibcxx_srcdir}/$(SYMVER_MAP) ./libstdc++-symbol.ver\n-@ENABLE_SYMVERS_GNU_TRUE@\tif test \"x$(port_specific_symbol_files)\" != x; then \\\n-@ENABLE_SYMVERS_GNU_TRUE@\t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n-@ENABLE_SYMVERS_GNU_TRUE@\t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n-@ENABLE_SYMVERS_GNU_TRUE@\t  cat tmp.top $(port_specific_symbol_files) tmp.bottom > $@; \\\n-@ENABLE_SYMVERS_GNU_TRUE@\t  rm tmp.top tmp.bottom; \\\n-@ENABLE_SYMVERS_GNU_TRUE@\tfi\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@libstdc++-symbol.explist : ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n+\n+# Symbol versioning for shared libraries.\n+# This could be conditional on\n+# ENABLE_SYMVERS_GNU || ENABLE_SYMVERS_DARWIN_EXPORT\n+# but automake doesn't support OR operations in conditionals.\n+libstdc++-symbol.ver:  ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n+\t\t$(port_specific_symbol_files)\n+\tcp ${glibcxx_srcdir}/$(SYMVER_MAP) ./libstdc++-symbol.ver\n+\tif test \"x$(port_specific_symbol_files)\" != x; then \\\n+\t  sed -n '1,/DO NOT DELETE/p' $@ > tmp.top; \\\n+\t  sed -n '/DO NOT DELETE/,$$p' $@ > tmp.bottom; \\\n+\t  cat tmp.top $(port_specific_symbol_files) tmp.bottom > $@; \\\n+\t  rm tmp.top tmp.bottom; \\\n+\tfi\n+@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@libstdc++-symbol.explist : libstdc++-symbol.ver \\\n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t\t${glibcxx_srcdir}/scripts/make_exports.pl \\\n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)\n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\tperl ${glibcxx_srcdir}/scripts/make_exports.pl \\\n-@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t  ${glibcxx_srcdir}/$(SYMVER_MAP) \\\n+@ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t  libstdc++-symbol.ver \\\n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t  $(libstdc___la_OBJECTS:%.lo=.libs/%.o) \\\n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t `echo $(libstdc___la_LIBADD) | \\\n @ENABLE_SYMVERS_DARWIN_EXPORT_TRUE@@ENABLE_SYMVERS_GNU_FALSE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\"}, {"sha": "613e8fbb8c621968fdc9b09a9d20e4f8bb7ead8f", "filename": "libstdc++-v3/src/compatibility.cc", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9314d012c1b213b95ee71a99b9edbe9be0e9118/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc?ref=f9314d012c1b213b95ee71a99b9edbe9be0e9118", "patch": "@@ -361,3 +361,28 @@ namespace std\n #undef _GLIBCXX_APPLY_SYMVER\n \n #endif\n+\n+#ifdef __APPLE__\n+#if (defined(__ppc__) || defined (__ppc64__)) && defined (PIC)\n+/* __eprintf shouldn't have been made visible from libstdc++, or\n+   anywhere, but on Mac OS X 10.4 it was defined in\n+   libstdc++.6.0.3.dylib; so on that platform we have to keep defining\n+   it to keep binary compatibility.  We can't just put the libgcc\n+   version in the export list, because that doesn't work; once a\n+   symbol is marked as hidden, it stays that way.  */\n+\n+#include <cstdio>\n+#include <cstdlib>\n+\n+using namespace std;\n+\n+extern \"C\" void\n+__eprintf (const char *string, const char *expression,\n+\t   unsigned int line, const char *filename)\n+{\n+  fprintf (stderr, string, expression, line, filename);\n+  fflush (stderr);\n+  abort ();\n+}\n+#endif\n+#endif /* __APPLE__ */"}]}