{"sha": "7768f20b0a08f8f735de9f4088945023cce0230b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc2OGYyMGIwYTA4ZjhmNzM1ZGU5ZjQwODg5NDUwMjNjY2UwMjMwYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-11-21T08:39:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-11-21T08:39:57Z"}, "message": "P0428R2 - familiar template syntax for generic lambdas\n\n\tP0428R2 - familiar template syntax for generic lambdas\n\t* parser.c (cp_parser_lambda_declarator_opt): Don't pedwarn\n\tfor cxx2a and above, reword pedwarn for C++14/C++17.\n\n\t* g++.dg/cpp1y/lambda-generic-x.C: Adjust warnings and limit\n\tto c++17_down target.\n\t* g++.dg/cpp1y/lambda-generic-dep.C: Likewise.\n\t* g++.dg/cpp1y/lambda-generic-77914.C: Adjust error and limit\n\tto c++17_down target.\n\t* g++.dg/cpp2a/lambda-generic1.C: New test.\n\t* g++.dg/cpp2a/lambda-generic2.C: New test.\n\t* g++.dg/cpp2a/lambda-generic3.C: New test.\n\t* g++.dg/cpp2a/lambda-generic4.C: New test.\n\t* g++.dg/cpp2a/lambda-generic5.C: New test.\n\nFrom-SVN: r254991", "tree": {"sha": "601806c349966938a25cfaa78cf75d7cac6770b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/601806c349966938a25cfaa78cf75d7cac6770b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7768f20b0a08f8f735de9f4088945023cce0230b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7768f20b0a08f8f735de9f4088945023cce0230b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7768f20b0a08f8f735de9f4088945023cce0230b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7768f20b0a08f8f735de9f4088945023cce0230b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d44ed508a66686e0c2fdf48f4cd4a9ad8a1b0547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44ed508a66686e0c2fdf48f4cd4a9ad8a1b0547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44ed508a66686e0c2fdf48f4cd4a9ad8a1b0547"}], "stats": {"total": 73, "additions": 65, "deletions": 8}, "files": [{"sha": "db9403455c474a0b21fb1c4daf9cf9a521552cac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -1,3 +1,9 @@\n+2017-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tP0428R2 - familiar template syntax for generic lambdas\n+\t* parser.c (cp_parser_lambda_declarator_opt): Don't pedwarn\n+\tfor cxx2a and above, reword pedwarn for C++14/C++17.\n+\n 2017-11-20  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/81404"}, {"sha": "b06170482097740901ce8dac6103a08ec0a7bb31", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -10512,9 +10512,10 @@ cp_parser_lambda_declarator_opt (cp_parser* parser, tree lambda_expr)\n \tpedwarn (parser->lexer->next_token->location, 0,\n \t\t \"lambda templates are only available with \"\n \t\t \"-std=c++14 or -std=gnu++14\");\n-      else\n+      else if (cxx_dialect < cxx2a)\n \tpedwarn (parser->lexer->next_token->location, OPT_Wpedantic,\n-\t\t \"ISO C++ does not support lambda templates\");\n+\t\t \"lambda templates are only available with \"\n+\t\t \"-std=c++2a or -std=gnu++2a\");\n \n       cp_lexer_consume_token (parser->lexer);\n "}, {"sha": "3901db4b4b891edd37d5b60caf82da5485cc4161", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -1,5 +1,17 @@\n 2017-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tP0428R2 - familiar template syntax for generic lambdas\n+\t* g++.dg/cpp1y/lambda-generic-x.C: Adjust warnings and limit\n+\tto c++17_down target.\n+\t* g++.dg/cpp1y/lambda-generic-dep.C: Likewise.\n+\t* g++.dg/cpp1y/lambda-generic-77914.C: Adjust error and limit\n+\tto c++17_down target.\n+\t* g++.dg/cpp2a/lambda-generic1.C: New test.\n+\t* g++.dg/cpp2a/lambda-generic2.C: New test.\n+\t* g++.dg/cpp2a/lambda-generic3.C: New test.\n+\t* g++.dg/cpp2a/lambda-generic4.C: New test.\n+\t* g++.dg/cpp2a/lambda-generic5.C: New test.\n+\n \tPR c++/83059\n \t* c-c++-common/pr83059.c: New test.\n "}, {"sha": "a57903aba3350425463eba6b12e9439710451b27", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-77914.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-77914.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-77914.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-77914.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -4,6 +4,6 @@\n int\n main ()\n {\n-  auto l = [] <typename T> () {};\t// { dg-error \"does not support lambda templates\" }\n+  auto l = [] <typename T> () {};\t// { dg-error \"lambda templates are only available with\" \"\" { target c++17_down } }\n   l.operator () <void> ();\n }"}, {"sha": "982a155e777b7987e193d186794d92073d44a394", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-dep.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-dep.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-dep.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-dep.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -27,7 +27,7 @@ struct S {\n \n int main()\n {\n-  auto f = [] <typename T> (T const& s) mutable {\t// { dg-warning \"does not support lambda templates\" }\n+  auto f = [] <typename T> (T const& s) mutable {\t// { dg-warning \"lambda templates are only available with\" \"\" { target c++17_down } }\n     typename T::N x;\n     return x.test ();\n   };"}, {"sha": "0926a5e363b81acdd2570e9409c77f15ba328641", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-x.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-x.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-x.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-x.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -6,17 +6,17 @@\n \n int main()\n {\n-   auto glambda = [] <typename A, typename B> (A a, B&& b) { return a < b; };\t// { dg-warning \"does not support lambda templates\" }\n+   auto glambda = [] <typename A, typename B> (A a, B&& b) { return a < b; };\t// { dg-warning \"lambda templates are only available with\" \"\" { target c++17_down } }\n    bool b = glambda(3, 3.14); // OK\n-   auto vglambda = [] <typename P> (P printer) {\t\t\t\t// { dg-warning \"does not support lambda templates\" }\n+   auto vglambda = [] <typename P> (P printer) {\t\t\t\t// { dg-warning \"lambda templates are only available with\" \"\" { target c++17_down } }\n      return [=] <typename... T> (T&& ... ts) { // OK: ts is a function parameter pack\n-       printer(std::forward<decltype(ts)>(ts)...);\t\t\t\t// { dg-warning \"does not support lambda templates\" \"\" { target *-*-* } .-1 }\n+       printer(std::forward<decltype(ts)>(ts)...);\t\t\t\t// { dg-warning \"lambda templates are only available with\" \"\" { target c++17_down } .-1 }\n        return [=]() {\n          printer(ts ...);\n        };\n      };\n    };\n-   auto p = vglambda( [] <typename A,\t\t\t\t\t\t// { dg-warning \"does not support lambda templates\" }\n+   auto p = vglambda( [] <typename A,\t\t\t\t\t\t// { dg-warning \"lambda templates are only available with\" \"\" { target c++17_down } }\n                           typename B,\n                           typename C> (A v1, B v2, C v3)\n      { std::cout << v1 << v2 << v3; } );"}, {"sha": "9f6304bbc695183631a873cef0b20fdd4a9d233a", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-generic1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic1.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -0,0 +1,9 @@\n+// P0428R2\n+// { dg-do compile { target c++14 } }\n+\n+int i = [](int i, auto a) { return i; }(3, 4);\n+int j = []<class T>(T t, int i) { return i; }(3, 4);\t\t  // { dg-error \"lambda templates are only available with\" \"\" { target c++17_down } }\n+int k[2] = { 5, 6 };\n+int l = []<typename T>(T *p) { return *p; }(k);\t\t\t  // { dg-error \"lambda templates are only available with\" \"\" { target c++17_down } }\n+int m = []<typename T, int N>(T (&a)[N]) { return a[N - 1]; }(k); // { dg-error \"lambda templates are only available with\" \"\" { target c++17_down } }\n+int n = []<typename T>(T a, auto b) { return a + b; }(7, 8);\t  // { dg-error \"lambda templates are only available with\" \"\" { target c++17_down } }"}, {"sha": "6116639f871abd2fdf256e10e06466cb76cb9378", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-generic2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic2.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -0,0 +1,7 @@\n+// P0428R2\n+// { dg-do compile }\n+\n+int j = []<class T>(T t, int i) { return i; }(3, 4);\n+// { dg-error \"lambda templates are only available with\" \"\" { target c++17_down } .-1 }\n+// { dg-error \"lambda expressions only available with\" \"\" { target c++98_only } .-2 }\n+// { dg-error \"invalid use of 'auto'\" \"\" { target c++98_only } .-3 }"}, {"sha": "b0d525e80d7f6fb48197255568a6dbfa125efeb5", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-generic3.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic3.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -0,0 +1,8 @@\n+// P0428R2\n+// { dg-do compile }\n+// { dg-options \"-Wpedantic\" }\n+\n+int j = []<class T>(T t, int i) { return i; }(3, 4);\n+// { dg-warning \"lambda templates are only available with\" \"\" { target c++17_down } .-1 }\n+// { dg-warning \"lambda expressions only available with\" \"\" { target c++98_only } .-2 }\n+// { dg-error \"invalid use of 'auto'\" \"\" { target c++98_only } .-3 }"}, {"sha": "393e8523f08d7aba8e07cd02381524d867871921", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-generic4.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic4.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -0,0 +1,8 @@\n+// P0428R2\n+// { dg-do compile }\n+// { dg-options \"-Wno-pedantic\" }\n+\n+int j = []<class T>(T t, int i) { return i; }(3, 4);\n+// { dg-warning \"lambda templates are only available with\" \"\" { target c++11_down } .-1 }\n+// { dg-warning \"lambda expressions only available with\" \"\" { target c++98_only } .-2 }\n+// { dg-error \"invalid use of 'auto'\" \"\" { target c++98_only } .-3 }"}, {"sha": "e608e9520bf92196e4c484d2fd35c471f0c62f4f", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-generic5.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7768f20b0a08f8f735de9f4088945023cce0230b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic5.C?ref=7768f20b0a08f8f735de9f4088945023cce0230b", "patch": "@@ -0,0 +1,6 @@\n+// P0428R2\n+// { dg-do compile }\n+// { dg-options \"-std=c++2a\" }\n+\n+int j = []<class T>(T t, int i) { return i; }(3, 4);\n+// { dg-bogus \"lambda templates are only available with\" \"\" { target c++2a } .-1 }"}]}