{"sha": "88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmN2QyZDE0OGMzNGRiZjc2ZjVjYjQzMjFjZWQ1NmQ1MjUzYTk2Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:07:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:07:40Z"}, "message": "[multiple changes]\n\n2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch6.adb: Remove obsolete comment.\n\n2014-10-31  Olivier Hainque  <hainque@adacore.com>\n\n\t* g-allein.ads: bind vec_sld for pixels to 8hi vsldoi instead\n\tof 4si, as pixels are short.\n\n2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve_Call): Do not reject a call to a protected\n\toperation in the spec of a protected type, when the call appears\n\tin a pre/postcondition for another protected operation.\n\n2014-10-31  Tristan Gingold  <gingold@adacore.com>\n\n\t* prj-conf.adb: Locate_Runtime: Always search the runtime in\n\tproject path.\n\n2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* inline.adb (Check_Package_Body_For_Inlining): Adjust previous\n\tchange to use correct idiom for back-end inlining.\n\nFrom-SVN: r216958", "tree": {"sha": "ca986f32417901a45ead7bde59ab21ff989c70ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca986f32417901a45ead7bde59ab21ff989c70ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/comments", "author": null, "committer": null, "parents": [{"sha": "1335a8caf760e49d687866541cda051bd9651289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1335a8caf760e49d687866541cda051bd9651289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1335a8caf760e49d687866541cda051bd9651289"}], "stats": {"total": 80, "additions": 50, "deletions": 30}, "files": [{"sha": "eb8949ca10aef83af38b9687aa1b09dc363c6d1e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "patch": "@@ -1,3 +1,28 @@\n+2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch6.adb: Remove obsolete comment.\n+\n+2014-10-31  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* g-allein.ads: bind vec_sld for pixels to 8hi vsldoi instead\n+\tof 4si, as pixels are short.\n+\n+2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): Do not reject a call to a protected\n+\toperation in the spec of a protected type, when the call appears\n+\tin a pre/postcondition for another protected operation.\n+\n+2014-10-31  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* prj-conf.adb: Locate_Runtime: Always search the runtime in\n+\tproject path.\n+\n+2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb (Check_Package_Body_For_Inlining): Adjust previous\n+\tchange to use correct idiom for back-end inlining.\n+\n 2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* freeze.adb (Freeze_Record_Type): Do not check component size"}, {"sha": "1346fdd56c56e230427ebd0f0aee19fdb9f6bd82", "filename": "gcc/ada/g-allein.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fg-allein.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fg-allein.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-allein.ads?ref=88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -830,7 +830,7 @@ package GNAT.Altivec.Low_Level_Interface is\n       C : c_int) return vector_pixel;\n \n    pragma Import\n-     (LL_Altivec, vec_sld_vx_vx_cint_r_vx, \"__builtin_altivec_vsldoi_4si\");\n+     (LL_Altivec, vec_sld_vx_vx_cint_r_vx, \"__builtin_altivec_vsldoi_8hi\");\n \n    function vec_sld_vsc_vsc_cint_r_vsc\n      (A : vector_signed_char;"}, {"sha": "c06e5cb429c980dbd6d69d7be6dea7e59a452421", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "patch": "@@ -1981,15 +1981,19 @@ package body Inline is\n       OK    : Boolean;\n \n    begin\n-      if Front_End_Inlining\n+      --  Legacy implementation (relying on frontend inlining)\n+\n+      if not Back_End_Inlining\n         and then Is_Compilation_Unit (P)\n         and then not Is_Generic_Instance (P)\n       then\n          Bname := Get_Body_Name (Get_Unit_Name (Unit (N)));\n \n          E := First_Entity (P);\n          while Present (E) loop\n-            if Has_Pragma_Inline (E) then\n+            if Has_Pragma_Inline_Always (E)\n+              or else (Has_Pragma_Inline (E) and Front_End_Inlining)\n+            then\n                if not Is_Loaded (Bname) then\n                   Load_Needed_Body (N, OK);\n "}, {"sha": "b88f1a156597ebe4be7ec50d2f8134f00019a58c", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 13, "deletions": 23, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "patch": "@@ -26,7 +26,6 @@\n with Makeutl;  use Makeutl;\n with MLib.Tgt;\n with Opt;      use Opt;\n-with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Env;\n with Prj.Err;\n@@ -1553,28 +1552,24 @@ package body Prj.Conf is\n      (Language : Name_Id;\n       Env      : Prj.Tree.Environment)\n    is\n-      function Is_Base_Name (Path : String) return Boolean;\n-      --  Returns True if Path has no directory separator\n+      function Is_RTS_Directory (Path : String) return Boolean;\n+      --  Returns True if Path is a directory for a runtime. This simply check\n+      --  that Path has a \"adalib\" subdirectoy, which is a property for\n+      --  runtimes on the project path.\n \n-      ------------------\n-      -- Is_Base_Name --\n-      ------------------\n+      ----------------------\n+      -- Is_RTS_Directory --\n+      ----------------------\n \n-      function Is_Base_Name (Path : String) return Boolean is\n+      function Is_RTS_Directory (Path : String) return Boolean is\n       begin\n-         for J in Path'Range loop\n-            if Is_Directory_Separator (Path (J)) then\n-               return False;\n-            end if;\n-         end loop;\n-\n-         return True;\n-      end Is_Base_Name;\n+         return Is_Directory (Path & Directory_Separator & \"adalib\");\n+      end Is_RTS_Directory;\n \n       --  Local declarations\n \n       function Find_Rts_In_Path is new Prj.Env.Find_Name_In_Path\n-        (Check_Filename => Is_Directory);\n+        (Check_Filename => Is_RTS_Directory);\n \n       RTS_Name : constant String := Runtime_Name_For (Language);\n \n@@ -1583,14 +1578,9 @@ package body Prj.Conf is\n    --  Start of processing for Locate_Runtime\n \n    begin\n-      if not Is_Base_Name (RTS_Name) then\n-         Full_Path :=\n-           Find_Rts_In_Path (Env.Project_Path, RTS_Name);\n-\n-         if Full_Path = null then\n-            Raise_Invalid_Config (\"cannot find RTS \" & RTS_Name);\n-         end if;\n+      Full_Path := Find_Rts_In_Path (Env.Project_Path, RTS_Name);\n \n+      if Full_Path /= null then\n          Set_Runtime_For (Language, Normalize_Pathname (Full_Path.all));\n          Free (Full_Path);\n       end if;"}, {"sha": "27e2706f9271acb66b2bbed4b5e898cd44b5ce91", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "patch": "@@ -3595,8 +3595,7 @@ package body Sem_Ch6 is\n                Build_Body_To_Inline (N, Spec_Id);\n             end if;\n \n-         --  New implementation (relying on backend inlining). Enabled by\n-         --  debug flag gnatd.z for testing\n+         --  New implementation (relying on backend inlining)\n \n          else\n             if Has_Pragma_Inline_Always (Spec_Id)"}, {"sha": "31dfe5fee8d9f92b6cf85f10f75d9ecdcc9b5e01", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7d2d148c34dbf76f5cb4321ced56d5253a96f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=88f7d2d148c34dbf76f5cb4321ced56d5253a96f", "patch": "@@ -6022,11 +6022,13 @@ package body Sem_Res is\n       end if;\n \n       --  A protected function cannot be called within the definition of the\n-      --  enclosing protected type.\n+      --  enclosing protected type, unless it is part of a pre/postcondition\n+      --  on another protected operation.\n \n       if Is_Protected_Type (Scope (Nam))\n         and then In_Open_Scopes (Scope (Nam))\n         and then not Has_Completion (Scope (Nam))\n+        and then not In_Spec_Expression\n       then\n          Error_Msg_NE\n            (\"& cannot be called before end of protected definition\", N, Nam);"}]}