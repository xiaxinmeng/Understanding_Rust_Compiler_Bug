{"sha": "c59633d9da23d48847f3b1bc8f14772beffb1435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU5NjMzZDlkYTIzZDQ4ODQ3ZjNiMWJjOGYxNDc3MmJlZmZiMTQzNQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-04-14T19:34:06Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-04-14T19:34:06Z"}, "message": "In gcc/c-family/: 2011-04-14 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/c-family/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* stub-objc.c (objc_declare_protocols): Renamed to\n\tobjc_declare_protocol.\n\t* c-objc.h: Likewise.\n\t\nIn gcc/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* c-parser.c (c_parser_objc_protocol_definition): Updated for\n\tchange from objc_declare_protocols() to objc_declare_protocol().\n\nIn gcc/objc/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (objc_declare_protocols): Renamed to\n\tobjc_declare_protocol.  Changed first argument to be an identifier\n\tinstead of a tree chain of identifiers, so that callers don't have\n\tto create a temporary tree chain.\n\nIn gcc/cp/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* parser.c (cp_parser_objc_protocol_declaration): Updated for\n\tchange from objc_declare_protocols() to objc_declare_protocol().\n\nFrom-SVN: r172444", "tree": {"sha": "818b891498592f8fd53a22155014ee9695ac26a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/818b891498592f8fd53a22155014ee9695ac26a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c59633d9da23d48847f3b1bc8f14772beffb1435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59633d9da23d48847f3b1bc8f14772beffb1435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c59633d9da23d48847f3b1bc8f14772beffb1435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59633d9da23d48847f3b1bc8f14772beffb1435/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1430e5cf832e7d5bfbfa76998c4236be21867d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1430e5cf832e7d5bfbfa76998c4236be21867d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1430e5cf832e7d5bfbfa76998c4236be21867d1"}], "stats": {"total": 93, "additions": 61, "deletions": 32}, "files": [{"sha": "b60fdbc6f41b425232742164e387a640cad6a49d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -1,3 +1,8 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-parser.c (c_parser_objc_protocol_definition): Updated for\n+\tchange from objc_declare_protocols() to objc_declare_protocol().\n+\n 2011-04-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (sse4_1): New mode attribute."}, {"sha": "db96f89644117c6901124f07b080f0c0ab5669fe", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -1,3 +1,9 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* stub-objc.c (objc_declare_protocols): Renamed to\n+\tobjc_declare_protocol.\n+\t* c-objc.h: Likewise.\n+\t\n 2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* stub-objc.c (objc_declare_class): Updated argument name."}, {"sha": "08433aef36c5f06be4dd8fc4ad86eea8d78cfaa1", "filename": "gcc/c-family/c-objc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-family%2Fc-objc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-family%2Fc-objc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-objc.h?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -52,7 +52,7 @@ extern int objc_is_public (tree, tree);\n extern tree objc_is_id (tree);\n extern void objc_declare_alias (tree, tree);\n extern void objc_declare_class (tree);\n-extern void objc_declare_protocols (tree, tree);\n+extern void objc_declare_protocol (tree, tree);\n extern tree objc_build_message_expr (tree, tree);\n extern tree objc_finish_message_expr (tree, tree, tree, tree*);\n extern tree objc_build_selector_expr (location_t, tree);"}, {"sha": "4e235ff4db6a1e9d9da52a90d2373572fb5fd277", "filename": "gcc/c-family/stub-objc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-family%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-family%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fstub-objc.c?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -115,7 +115,7 @@ objc_declare_class (tree ARG_UNUSED (identifier))\n }\n \n void\n-objc_declare_protocols (tree ARG_UNUSED (list), tree ARG_UNUSED (attributes))\n+objc_declare_protocol (tree ARG_UNUSED (name), tree ARG_UNUSED (attributes))\n {\n }\n "}, {"sha": "b61ebdd1ea8bc8f4a76c198df676a6eaa227945a", "filename": "gcc/c-parser.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -7076,7 +7076,6 @@ c_parser_objc_protocol_definition (c_parser *parser, tree attributes)\n   if (c_parser_peek_2nd_token (parser)->type == CPP_COMMA\n       || c_parser_peek_2nd_token (parser)->type == CPP_SEMICOLON)\n     {\n-      tree list = NULL_TREE;\n       /* Any identifiers, including those declared as type names, are\n \t OK here.  */\n       while (true)\n@@ -7088,15 +7087,14 @@ c_parser_objc_protocol_definition (c_parser *parser, tree attributes)\n \t      break;\n \t    }\n \t  id = c_parser_peek_token (parser)->value;\n-\t  list = chainon (list, build_tree_list (NULL_TREE, id));\n+\t  objc_declare_protocol (id, attributes);\n \t  c_parser_consume_token (parser);\n \t  if (c_parser_next_token_is (parser, CPP_COMMA))\n \t    c_parser_consume_token (parser);\n \t  else\n \t    break;\n \t}\n       c_parser_skip_until_found (parser, CPP_SEMICOLON, \"expected %<;%>\");\n-      objc_declare_protocols (list, attributes);\n     }\n   else\n     {"}, {"sha": "80c96e1e60b07074f1dfa615fb03ad8c2e123e03", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -1,3 +1,8 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* parser.c (cp_parser_objc_protocol_declaration): Updated for\n+\tchange from objc_declare_protocols() to objc_declare_protocol().\n+\n 2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR objc++/48479"}, {"sha": "ba331aeda713eac97137c09bbfb44c08e462a918", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -22319,7 +22319,8 @@ cp_parser_objc_protocol_declaration (cp_parser* parser, tree attributes)\n     {\n       tok = cp_lexer_peek_token (parser->lexer);\n       error_at (tok->location, \"identifier expected after %<@protocol%>\");\n-      goto finish;\n+      cp_parser_consume_semicolon_at_end_of_statement (parser);\n+      return;\n     }\n \n   /* See if we have a forward declaration or a definition.  */\n@@ -22328,9 +22329,21 @@ cp_parser_objc_protocol_declaration (cp_parser* parser, tree attributes)\n   /* Try a forward declaration first.  */\n   if (tok->type == CPP_COMMA || tok->type == CPP_SEMICOLON)\n     {\n-      objc_declare_protocols (cp_parser_objc_identifier_list (parser), \n-\t\t\t      attributes);\n-     finish:\n+      while (true)\n+\t{\n+\t  tree id;\n+\t  \n+\t  id = cp_parser_identifier (parser);\n+\t  if (id == error_mark_node)\n+\t    break;\n+\t  \n+\t  objc_declare_protocol (id, attributes);\n+\t  \n+\t  if(cp_lexer_next_token_is (parser->lexer, CPP_COMMA))\n+\t    cp_lexer_consume_token (parser->lexer);\n+\t  else\n+\t    break;\n+\t}\n       cp_parser_consume_semicolon_at_end_of_statement (parser);\n     }\n "}, {"sha": "060fc69fd2ed1d0c9a3ed5b85ad5d37e0790e744", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -1,3 +1,10 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_declare_protocols): Renamed to\n+\tobjc_declare_protocol.  Changed first argument to be an identifier\n+\tinstead of a tree chain of identifiers, so that callers don't have\n+\tto create a temporary tree chain.\n+\n 2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (objc_declare_class): Changed to take a single"}, {"sha": "f75fa75a865bbf659310a5bd2510916a676ec51a", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c59633d9da23d48847f3b1bc8f14772beffb1435/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=c59633d9da23d48847f3b1bc8f14772beffb1435", "patch": "@@ -7863,9 +7863,8 @@ lookup_protocol (tree ident, bool warn_if_deprecated, bool definition_required)\n    they are already declared or defined, the function has no effect.  */\n \n void\n-objc_declare_protocols (tree names, tree attributes)\n+objc_declare_protocol (tree name, tree attributes)\n {\n-  tree list;\n   bool deprecated = false;\n \n #ifdef OBJCPLUS\n@@ -7890,29 +7889,25 @@ objc_declare_protocols (tree names, tree attributes)\n \t}\n     }\n \n-  for (list = names; list; list = TREE_CHAIN (list))\n+  if (lookup_protocol (name, /* warn if deprecated */ false,\n+\t\t       /* definition_required */ false) == NULL_TREE)\n     {\n-      tree name = TREE_VALUE (list);\n-\n-      if (lookup_protocol (name, /* warn if deprecated */ false,\n-\t\t\t   /* definition_required */ false) == NULL_TREE)\n+      tree protocol = make_node (PROTOCOL_INTERFACE_TYPE);\n+      \n+      TYPE_LANG_SLOT_1 (protocol)\n+\t= make_tree_vec (PROTOCOL_LANG_SLOT_ELTS);\n+      PROTOCOL_NAME (protocol) = name;\n+      PROTOCOL_LIST (protocol) = NULL_TREE;\n+      add_protocol (protocol);\n+      PROTOCOL_DEFINED (protocol) = 0;\n+      PROTOCOL_FORWARD_DECL (protocol) = NULL_TREE;\n+      \n+      if (attributes)\n \t{\n-\t  tree protocol = make_node (PROTOCOL_INTERFACE_TYPE);\n-\n-\t  TYPE_LANG_SLOT_1 (protocol)\n-\t    = make_tree_vec (PROTOCOL_LANG_SLOT_ELTS);\n-\t  PROTOCOL_NAME (protocol) = name;\n-\t  PROTOCOL_LIST (protocol) = NULL_TREE;\n-\t  add_protocol (protocol);\n-\t  PROTOCOL_DEFINED (protocol) = 0;\n-\t  PROTOCOL_FORWARD_DECL (protocol) = NULL_TREE;\n-\t  \n-\t  if (attributes)\n-\t    {\n-\t      TYPE_ATTRIBUTES (protocol) = attributes;\n-\t      if (deprecated)\n-\t\tTREE_DEPRECATED (protocol) = 1;\n-\t    }\n+\t  /* TODO: Do we need to store the attributes here ? */\n+\t  TYPE_ATTRIBUTES (protocol) = attributes;\n+\t  if (deprecated)\n+\t    TREE_DEPRECATED (protocol) = 1;\n \t}\n     }\n }"}]}