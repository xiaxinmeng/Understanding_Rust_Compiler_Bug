{"sha": "da6558fd7778ddd5557e2f80bf15893f9de6684c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2NTU4ZmQ3Nzc4ZGRkNTU1N2UyZjgwYmYxNTg5M2Y5ZGU2Njg0Yw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-10-01T17:58:46Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-10-01T17:58:46Z"}, "message": "Import some interworking support code from devo.\n\nFrom-SVN: r22721", "tree": {"sha": "63196dbd59b340acf448831ceb359f9befaa7185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63196dbd59b340acf448831ceb359f9befaa7185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da6558fd7778ddd5557e2f80bf15893f9de6684c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6558fd7778ddd5557e2f80bf15893f9de6684c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6558fd7778ddd5557e2f80bf15893f9de6684c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6558fd7778ddd5557e2f80bf15893f9de6684c/comments", "author": null, "committer": null, "parents": [{"sha": "470cdb8b54825b2e840010f245ceba7f2caaac03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/470cdb8b54825b2e840010f245ceba7f2caaac03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/470cdb8b54825b2e840010f245ceba7f2caaac03"}], "stats": {"total": 68, "additions": 51, "deletions": 17}, "files": [{"sha": "7fc007eb693c86f4f78e96dfa51493b9c8e9fba0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6558fd7778ddd5557e2f80bf15893f9de6684c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6558fd7778ddd5557e2f80bf15893f9de6684c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da6558fd7778ddd5557e2f80bf15893f9de6684c", "patch": "@@ -1,3 +1,7 @@\n+Thu Oct  1 17:57:14 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* config/arm/arm.c: Improve interworking support.\n+\n Thu Oct  1 18:43:35 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* reload1.c (choose_reload_regs): Fix test if reload_reg_rtx[r] was"}, {"sha": "a4719c613791c58b4caba82b08188dbdb3dc044a", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 47, "deletions": 17, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6558fd7778ddd5557e2f80bf15893f9de6684c/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6558fd7778ddd5557e2f80bf15893f9de6684c/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=da6558fd7778ddd5557e2f80bf15893f9de6684c", "patch": "@@ -3458,12 +3458,13 @@ static HOST_WIDE_INT\n add_constant (x, mode, address_only)\n      rtx x;\n      enum machine_mode mode;\n-     int *address_only;\n+     int * address_only;\n {\n   int i;\n   HOST_WIDE_INT offset;\n \n-  *address_only = 0;\n+  * address_only = 0;\n+  \n   if (mode == SImode && GET_CODE (x) == MEM && CONSTANT_P (XEXP (x, 0))\n       && CONSTANT_POOL_ADDRESS_P (XEXP (x, 0)))\n     x = get_pool_constant (XEXP (x, 0));\n@@ -3593,7 +3594,7 @@ find_barrier (from, max_count)\n   while (from && count < max_count)\n     {\n       rtx tmp;\n-\n+      \n       if (GET_CODE (from) == BARRIER)\n \tfound_barrier = from;\n \n@@ -3628,28 +3629,27 @@ find_barrier (from, max_count)\n       from = NEXT_INSN (from);\n     }\n \n-  if (!found_barrier)\n+  if (! found_barrier)\n     {\n       /* We didn't find a barrier in time to\n-\t dump our stuff, so we'll make one */\n+\t dump our stuff, so we'll make one.  */\n       rtx label = gen_label_rtx ();\n-\n+      \n       if (from)\n \tfrom = PREV_INSN (last);\n       else\n \tfrom = get_last_insn ();\n-\n-      /* Walk back to be just before any jump */\n+      \n+      /* Walk back to be just before any jump.  */\n       while (GET_CODE (from) == JUMP_INSN\n              || GET_CODE (from) == NOTE\n \t     || GET_CODE (from) == CODE_LABEL)\n \tfrom = PREV_INSN (from);\n-\n+      \n       from = emit_jump_insn_after (gen_jump (label), from);\n       JUMP_LABEL (from) = label;\n       found_barrier = emit_barrier_after (from);\n       emit_label_after (label, found_barrier);\n-      return found_barrier;\n     }\n \n   return found_barrier;\n@@ -3897,7 +3897,12 @@ output_call (operands)\n       output_asm_insn (\"mov%?\\t%0, %|lr\", operands);\n     }\n   output_asm_insn (\"mov%?\\t%|lr, %|pc\", operands);\n-  output_asm_insn (\"mov%?\\t%|pc, %0\", operands);\n+  \n+  if (TARGET_THUMB_INTERWORK)\n+    output_asm_insn (\"bx%?\\t%0\", operands);\n+  else\n+    output_asm_insn (\"mov%?\\t%|pc, %0\", operands);\n+  \n   return \"\";\n }\n \n@@ -3945,8 +3950,18 @@ output_call_mem (operands)\n   if (eliminate_lr2ip (&operands[0]))\n     output_asm_insn (\"mov%?\\t%|ip, %|lr\", operands);\n \n-  output_asm_insn (\"mov%?\\t%|lr, %|pc\", operands);\n-  output_asm_insn (\"ldr%?\\t%|pc, %0\", operands);\n+  if (TARGET_THUMB_INTERWORK)\n+    {\n+      output_asm_insn (\"ldr%?\\t%|ip, %0\", operands);\n+      output_asm_insn (\"mov%?\\t%|lr, %|pc\", operands);\n+      output_asm_insn (\"bx%?\\t%|ip\", operands);\n+    }\n+  else\n+    {\n+      output_asm_insn (\"mov%?\\t%|lr, %|pc\", operands);\n+      output_asm_insn (\"ldr%?\\t%|pc, %0\", operands);\n+    }\n+\n   return \"\";\n }\n \n@@ -4815,15 +4830,29 @@ output_return_instruction (operand, really_return, reverse)\n           strcat (instr, reg_names[13]);\n           strcat (instr, \", \");\n \t  strcat (instr, \"%|\");\n-          strcat (instr, really_return ? reg_names[15] : reg_names[14]);\n+\t  strcat (instr, TARGET_THUMB_INTERWORK || (! really_return)\n+\t\t  ? reg_names[14] : reg_names[15] );\n         }\n       else\n \t{\n \t  strcat (instr, \"%|\");\n-\t  strcat (instr, really_return ? reg_names[15] : reg_names[14]);\n+\t  if (TARGET_THUMB_INTERWORK && really_return)\n+\t    strcat (instr, reg_names[12]);\n+\t  else\n+\t    strcat (instr, really_return ? reg_names[15] : reg_names[14]);\n \t}\n       strcat (instr, (TARGET_APCS_32 || !really_return) ? \"}\" : \"}^\");\n       output_asm_insn (instr, &operand);\n+\n+      if (TARGET_THUMB_INTERWORK && really_return)\n+\t{\n+\t  strcpy (instr, \"bx%?\");\n+\t  strcat (instr, reverse ? \"%D0\" : \"%d0\");\n+\t  strcat (instr, \"\\t%|\");\n+\t  strcat (instr, frame_pointer_needed ? \"lr\" : \"ip\");\n+\n+\t  output_asm_insn (instr, & operand);\n+\t}\n     }\n   else if (really_return)\n     {\n@@ -4832,7 +4861,8 @@ output_return_instruction (operand, really_return, reverse)\n       else\n \tsprintf (instr, \"mov%%?%%%s0%s\\t%%|pc, %%|lr\",\n \t\t reverse ? \"D\" : \"d\", TARGET_APCS_32 ? \"\" : \"s\");\n-      output_asm_insn (instr, &operand);\n+      \n+      output_asm_insn (instr, & operand);\n     }\n \n   return \"\";\n@@ -5020,7 +5050,7 @@ output_func_epilogue (f, frame_size)\n \t\t     REGISTER_PREFIX, reg_names[reg + 1],\n \t\t     start_reg - reg, REGISTER_PREFIX, floats_offset);\n \t}\n-\n+      \n       if (TARGET_THUMB_INTERWORK)\n \t{\n \t  live_regs_mask |= 0x6800;"}]}