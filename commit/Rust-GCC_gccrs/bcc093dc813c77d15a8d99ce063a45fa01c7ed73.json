{"sha": "bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNjMDkzZGM4MTNjNzdkMTVhOGQ5OWNlMDYzYTQ1ZmEwMWM3ZWQ3Mw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-21T14:50:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-21T14:50:54Z"}, "message": "[Ada] Spurious error on synchronous refinement\n\nThis patch ensures that an abstract state declared with simple option\n\"synchronous\" is automatically considered \"external\".\n\n2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* einfo.adb (Is_External_State): An abstract state is also external\n\twhen it is declared with option \"synchronous\".\n\t* einfo.ads: Update the documentation of synthesized attribute\n\tIs_External_State.\n\t* sem_util.adb (Find_Simple_Properties): New routine.\n\t(Is_Enabled_External_Property): New routine.\n\t(State_Has_Enabled_Property): Reimplemented. The two flavors of option\n\tExternal have precedence over option Synchronous when determining\n\twhether a property is in effect.\n\ngcc/testsuite/\n\n\t* gnat.dg/sync2.adb, gnat.dg/sync2.ads: New testcase.\n\nFrom-SVN: r260453", "tree": {"sha": "a9d3f2895c70c51b3be1ee03dceb19217a0e3d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9d3f2895c70c51b3be1ee03dceb19217a0e3d95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe44c442e4c83f3280a72e917c418c6e6129cba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe44c442e4c83f3280a72e917c418c6e6129cba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe44c442e4c83f3280a72e917c418c6e6129cba7"}], "stats": {"total": 255, "additions": 189, "deletions": 66}, "files": [{"sha": "71ef1ba346e028755591f67df9c33ec982064405", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "patch": "@@ -1,3 +1,15 @@\n+2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb (Is_External_State): An abstract state is also external\n+\twhen it is declared with option \"synchronous\".\n+\t* einfo.ads: Update the documentation of synthesized attribute\n+\tIs_External_State.\n+\t* sem_util.adb (Find_Simple_Properties): New routine.\n+\t(Is_Enabled_External_Property): New routine.\n+\t(State_Has_Enabled_Property): Reimplemented. The two flavors of option\n+\tExternal have precedence over option Synchronous when determining\n+\twhether a property is in effect.\n+\n 2018-04-04  Yannick Moy  <moy@adacore.com>\n \n \t* sem_eval.adb (Static_Length): Take into account case of variable of"}, {"sha": "4352f42ea888f4ed622815a2a62f5484298437b6", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "patch": "@@ -8083,8 +8083,14 @@ package body Einfo is\n \n    function Is_External_State (Id : E) return B is\n    begin\n+      --  To qualify, the abstract state must appear with option \"external\" or\n+      --  \"synchronous\" (SPARK RM 7.1.4(8) and (10)).\n+\n       return\n-        Ekind (Id) = E_Abstract_State and then Has_Option (Id, Name_External);\n+        Ekind (Id) = E_Abstract_State\n+          and then (Has_Option (Id, Name_External)\n+                      or else\n+                    Has_Option (Id, Name_Synchronous));\n    end Is_External_State;\n \n    ------------------\n@@ -8255,6 +8261,9 @@ package body Einfo is\n \n    function Is_Synchronized_State (Id : E) return B is\n    begin\n+      --  To qualify, the abstract state must appear with simple option\n+      --  \"synchronous\" (SPARK RM 7.1.4(10)).\n+\n       return\n         Ekind (Id) = E_Abstract_State\n           and then Has_Option (Id, Name_Synchronous);"}, {"sha": "36967fd2632eb878782a2f544cbbb0343332eee5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "patch": "@@ -2553,7 +2553,7 @@ package Einfo is\n \n --    Is_External_State (synthesized)\n --       Applies to all entities, true for abstract states that are subject to\n---       option External.\n+--       option External or Synchronous.\n \n --    Is_Finalized_Transient (Flag252)\n --       Defined in constants, loop parameters of generalized iterators, and"}, {"sha": "958efb07cc8756d196040ab02432c59357acef70", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 129, "deletions": 64, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "patch": "@@ -10261,92 +10261,157 @@ package body Sem_Util is\n       --------------------------------\n \n       function State_Has_Enabled_Property return Boolean is\n-         Decl     : constant Node_Id := Parent (Item_Id);\n-         Opt      : Node_Id;\n-         Opt_Nam  : Node_Id;\n-         Prop     : Node_Id;\n-         Prop_Nam : Node_Id;\n-         Props    : Node_Id;\n+         Decl : constant Node_Id := Parent (Item_Id);\n \n-      begin\n-         --  The declaration of an external abstract state appears as an\n-         --  extension aggregate. If this is not the case, properties can never\n-         --  be set.\n+         procedure Find_Simple_Properties\n+           (Has_External    : out Boolean;\n+            Has_Synchronous : out Boolean);\n+         --  Extract the simple properties associated with declaration Decl\n \n-         if Nkind (Decl) /= N_Extension_Aggregate then\n-            return False;\n-         end if;\n+         function Is_Enabled_External_Property return Boolean;\n+         --  Determine whether property Property appears within the external\n+         --  property list of declaration Decl, and return its status.\n \n-         --  When External appears as a simple option, it automatically enables\n-         --  all properties.\n+         ----------------------------\n+         -- Find_Simple_Properties --\n+         ----------------------------\n \n-         Opt := First (Expressions (Decl));\n-         while Present (Opt) loop\n-            if Nkind (Opt) = N_Identifier\n-              and then Chars (Opt) = Name_External\n-            then\n-               return True;\n-            end if;\n+         procedure Find_Simple_Properties\n+           (Has_External    : out Boolean;\n+            Has_Synchronous : out Boolean)\n+         is\n+            Opt : Node_Id;\n \n-            Next (Opt);\n-         end loop;\n+         begin\n+            --  Assume that none of the properties are available\n \n-         --  When External specifies particular properties, inspect those and\n-         --  find the desired one (if any).\n+            Has_External    := False;\n+            Has_Synchronous := False;\n \n-         Opt := First (Component_Associations (Decl));\n-         while Present (Opt) loop\n-            Opt_Nam := First (Choices (Opt));\n+            Opt := First (Expressions (Decl));\n+            while Present (Opt) loop\n+               if Nkind (Opt) = N_Identifier then\n+                  if Chars (Opt) = Name_External then\n+                     Has_External := True;\n \n-            if Nkind (Opt_Nam) = N_Identifier\n-              and then Chars (Opt_Nam) = Name_External\n-            then\n-               Props := Expression (Opt);\n+                  elsif Chars (Opt) = Name_Synchronous then\n+                     Has_Synchronous := True;\n+                  end if;\n+               end if;\n \n-               --  Multiple properties appear as an aggregate\n+               Next (Opt);\n+            end loop;\n+         end Find_Simple_Properties;\n \n-               if Nkind (Props) = N_Aggregate then\n+         ----------------------------------\n+         -- Is_Enabled_External_Property --\n+         ----------------------------------\n \n-                  --  Simple property form\n+         function Is_Enabled_External_Property return Boolean is\n+            Opt      : Node_Id;\n+            Opt_Nam  : Node_Id;\n+            Prop     : Node_Id;\n+            Prop_Nam : Node_Id;\n+            Props    : Node_Id;\n \n-                  Prop := First (Expressions (Props));\n-                  while Present (Prop) loop\n-                     if Chars (Prop) = Property then\n-                        return True;\n-                     end if;\n+         begin\n+            Opt := First (Component_Associations (Decl));\n+            while Present (Opt) loop\n+               Opt_Nam := First (Choices (Opt));\n \n-                     Next (Prop);\n-                  end loop;\n+               if Nkind (Opt_Nam) = N_Identifier\n+                 and then Chars (Opt_Nam) = Name_External\n+               then\n+                  Props := Expression (Opt);\n \n-                  --  Property with expression form\n+                  --  Multiple properties appear as an aggregate\n \n-                  Prop := First (Component_Associations (Props));\n-                  while Present (Prop) loop\n-                     Prop_Nam := First (Choices (Prop));\n+                  if Nkind (Props) = N_Aggregate then\n \n-                     --  The property can be represented in two ways:\n-                     --      others   => <value>\n-                     --    <property> => <value>\n+                     --  Simple property form\n \n-                     if Nkind (Prop_Nam) = N_Others_Choice\n-                       or else (Nkind (Prop_Nam) = N_Identifier\n-                                 and then Chars (Prop_Nam) = Property)\n-                     then\n-                        return Is_True (Expr_Value (Expression (Prop)));\n-                     end if;\n+                     Prop := First (Expressions (Props));\n+                     while Present (Prop) loop\n+                        if Chars (Prop) = Property then\n+                           return True;\n+                        end if;\n \n-                     Next (Prop);\n-                  end loop;\n+                        Next (Prop);\n+                     end loop;\n \n-               --  Single property\n+                     --  Property with expression form\n \n-               else\n-                  return Chars (Props) = Property;\n+                     Prop := First (Component_Associations (Props));\n+                     while Present (Prop) loop\n+                        Prop_Nam := First (Choices (Prop));\n+\n+                        --  The property can be represented in two ways:\n+                        --      others   => <value>\n+                        --    <property> => <value>\n+\n+                        if Nkind (Prop_Nam) = N_Others_Choice\n+                          or else (Nkind (Prop_Nam) = N_Identifier\n+                                    and then Chars (Prop_Nam) = Property)\n+                        then\n+                           return Is_True (Expr_Value (Expression (Prop)));\n+                        end if;\n+\n+                        Next (Prop);\n+                     end loop;\n+\n+                  --  Single property\n+\n+                  else\n+                     return Chars (Props) = Property;\n+                  end if;\n                end if;\n-            end if;\n \n-            Next (Opt);\n-         end loop;\n+               Next (Opt);\n+            end loop;\n+\n+            return False;\n+         end Is_Enabled_External_Property;\n+\n+         --  Local variables\n+\n+         Has_External    : Boolean;\n+         Has_Synchronous : Boolean;\n+\n+      --  Start of processing for State_Has_Enabled_Property\n+\n+      begin\n+         --  The declaration of an external abstract state appears as an\n+         --  extension aggregate. If this is not the case, properties can\n+         --  never be set.\n+\n+         if Nkind (Decl) /= N_Extension_Aggregate then\n+            return False;\n+         end if;\n+\n+         Find_Simple_Properties (Has_External, Has_Synchronous);\n+\n+         --  Simple option External enables all properties (SPARK RM 7.1.2(2))\n+\n+         if Has_External then\n+            return True;\n+\n+         --  Option External may enable or disable specific properties\n+\n+         elsif Is_Enabled_External_Property then\n+            return True;\n+\n+         --  Simple option Synchronous\n+         --\n+         --    enables                disables\n+         --       Asynch_Readers         Effective_Reads\n+         --       Asynch_Writers         Effective_Writes\n+         --\n+         --  Note that both forms of External have higher precedence than\n+         --  Synchronous (SPARK RM 7.1.4(10)).\n+\n+         elsif Has_Synchronous then\n+            return Nam_In (Property, Name_Async_Readers, Name_Async_Writers);\n+         end if;\n \n          return False;\n       end State_Has_Enabled_Property;"}, {"sha": "2ba0869ae2e4cec359fa643d7df8b7c92376c27d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "patch": "@@ -1,3 +1,7 @@\n+2018-04-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/sync2.adb, gnat.dg/sync2.ads: New testcase.\n+\n 2018-05-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.c-torture/execute/ssad-run.c: New test."}, {"sha": "2348166b225998cac3de3190a117536cba674395", "filename": "gcc/testsuite/gnat.dg/sync2.adb", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Ftestsuite%2Fgnat.dg%2Fsync2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Ftestsuite%2Fgnat.dg%2Fsync2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsync2.adb?ref=bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "patch": "@@ -0,0 +1,27 @@\n+--  { dg-do compile }\n+\n+package body Sync2 with\n+  SPARK_Mode,\n+  Refined_State => (State => (A, P, T))\n+is\n+   A : Integer := 0 with Atomic, Async_Readers, Async_Writers;\n+\n+   protected type Prot_Typ is\n+   private\n+      Comp : Natural := 0;\n+   end Prot_Typ;\n+\n+   P : Prot_Typ;\n+\n+   task type Task_Typ;\n+\n+   T : Task_Typ;\n+\n+   protected body Prot_Typ is\n+   end Prot_Typ;\n+\n+   task body Task_Typ is\n+   begin\n+      null;\n+   end Task_Typ;\n+end Sync2;"}, {"sha": "a9c45c9806999b5d08a8151466c2a1760235a3fc", "filename": "gcc/testsuite/gnat.dg/sync2.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Ftestsuite%2Fgnat.dg%2Fsync2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcc093dc813c77d15a8d99ce063a45fa01c7ed73/gcc%2Ftestsuite%2Fgnat.dg%2Fsync2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsync2.ads?ref=bcc093dc813c77d15a8d99ce063a45fa01c7ed73", "patch": "@@ -0,0 +1,6 @@\n+package Sync2 with\n+  SPARK_Mode,\n+  Abstract_State => (State with Synchronous)\n+is\n+   pragma Elaborate_Body;\n+end Sync2;"}]}