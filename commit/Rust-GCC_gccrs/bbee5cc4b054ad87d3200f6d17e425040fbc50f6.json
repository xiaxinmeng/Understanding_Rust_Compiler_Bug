{"sha": "bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJlZTVjYzRiMDU0YWQ4N2QzMjAwZjZkMTdlNDI1MDQwZmJjNTBmNg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-04-25T10:49:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-25T10:49:26Z"}, "message": "gnat_rm.texi: Document Reason argument for pragma Warnings.\n\n2013-04-25  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document Reason argument for pragma Warnings.\n\t* par-prag.adb: Handle Reason parameter for pragma Warnings.\n\t* sem_prag.adb (Analyze_Pragma, case Warnings): Allow Reason argument.\n\t* snames.ads-tmpl (Name_Reason): New name entry.\n\nFrom-SVN: r198295", "tree": {"sha": "ea6adce66313a66d235e73548aebce8cb34faa94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea6adce66313a66d235e73548aebce8cb34faa94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/comments", "author": null, "committer": null, "parents": [{"sha": "2995860f562f4b6344e6ab81cd387d16f769a13a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2995860f562f4b6344e6ab81cd387d16f769a13a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2995860f562f4b6344e6ab81cd387d16f769a13a"}], "stats": {"total": 94, "additions": 71, "deletions": 23}, "files": [{"sha": "3c3d7dbc0ed669c7008edcad179ba811677127d7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "patch": "@@ -1,3 +1,10 @@\n+2013-04-25  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document Reason argument for pragma Warnings.\n+\t* par-prag.adb: Handle Reason parameter for pragma Warnings.\n+\t* sem_prag.adb (Analyze_Pragma, case Warnings): Allow Reason argument.\n+\t* snames.ads-tmpl (Name_Reason): New name entry.\n+\n 2013-04-25  Yannick Moy  <moy@adacore.com>\n \n \t* exp_spark.adb (Expand_SPARK_N_In): Remove procedure."}, {"sha": "7f3596bdeb5ac6ee7ef2d6aa508f6f6fd7313f59", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "patch": "@@ -6520,36 +6520,49 @@ implementation in DEC Ada 83.\n Syntax:\n \n @smallexample @c ada\n-pragma Warnings (On | Off);\n-pragma Warnings (On | Off, LOCAL_NAME);\n-pragma Warnings (static_string_EXPRESSION);\n-pragma Warnings (On | Off, static_string_EXPRESSION);\n+pragma Warnings (On | Off [,REASON]);\n+pragma Warnings (On | Off, LOCAL_NAME [,REASON]);\n+pragma Warnings (static_string_EXPRESSION [,REASON]);\n+pragma Warnings (On | Off, static_string_EXPRESSION [,REASON]);\n+\n+REASON ::= Reason => static_string_EXPRESSION\n @end smallexample\n \n @noindent\n Normally warnings are enabled, with the output being controlled by\n the command line switch.  Warnings (@code{Off}) turns off generation of\n warnings until a Warnings (@code{On}) is encountered or the end of the\n current unit.  If generation of warnings is turned off using this\n-pragma, then no warning messages are output, regardless of the\n-setting of the command line switches.\n+pragma, then some or all of the warning messages are suppressed,\n+regardless of the setting of the command line switches.\n+\n+The @code{Reason} parameter may optionally appear as the last argument\n+in any of the forms of this pragma. It is intended purely for the\n+purposes of documenting the reason for the @code{Warnings} pragma.\n+The compiler will check that the argument is a static string but\n+otherwise ignore this argument. Other tools may provide specialized\n+processing for this string.\n \n-The form with a single argument may be used as a configuration pragma.\n+The form with a single argument (or two arguments if Reason present),\n+where the first argument is @code{ON} or @code{OFF}\n+may be used as a configuration pragma.\n \n If the @var{LOCAL_NAME} parameter is present, warnings are suppressed for\n the specified entity.  This suppression is effective from the point where\n it occurs till the end of the extended scope of the variable (similar to\n-the scope of @code{Suppress}).\n+the scope of @code{Suppress}). This form cannot be used as a configuration\n+pragma.\n \n-The form with a single static_string_EXPRESSION argument provides more precise\n+The form with a single static_string_EXPRESSION argument (and possible\n+reason) provides more precise\n control over which warnings are active. The string is a list of letters\n specifying which warnings are to be activated and which deactivated. The\n code for these letters is the same as the string used in the command\n line switch controlling warnings. For a brief summary, use the gnatmake\n command with no arguments, which will generate usage information containing\n the list of warnings switches supported. For\n full details see @ref{Warning Message Control,,, gnat_ugn, @value{EDITION}\n-User's Guide}.\n+User's Guide}. This form can also be used as a configuration pragma.\n \n @noindent\n The warnings controlled by the `-gnatw' switch are generated by the front end"}, {"sha": "de262094a95245db17b1a734b06e497f94f7fb88", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "patch": "@@ -17,7 +17,7 @@\n -- for  more details.  You should have  received  a copy of the GNU General --\n -- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n -- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n+--          War                                                                --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n@@ -1027,8 +1027,15 @@ begin\n       --  set well before any semantic analysis is performed. Note that we\n       --  ignore this pragma if debug flag -gnatd.i is set.\n \n+      --  Also note that the \"one argument\" case may have two arguments if the\n+      --  second one is a reason argument.\n+\n       when Pragma_Warnings =>\n-         if Arg_Count = 1 and then not Debug_Flag_Dot_I then\n+         if not Debug_Flag_Dot_I\n+           and then (Arg_Count = 1\n+                      or else (Arg_Count = 2\n+                                and then Chars (Arg2) = Name_Reason))\n+         then\n             Check_No_Identifier (Arg1);\n \n             declare"}, {"sha": "7f5b5512bf1b3f344aceab2530405e4e327c8fe4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 31, "deletions": 11, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "patch": "@@ -3310,13 +3310,11 @@ package body Sem_Prag is\n       procedure Check_No_Identifiers is\n          Arg_Node : Node_Id;\n       begin\n-         if Arg_Count > 0 then\n-            Arg_Node := Arg1;\n-            while Present (Arg_Node) loop\n-               Check_No_Identifier (Arg_Node);\n-               Next (Arg_Node);\n-            end loop;\n-         end if;\n+         Arg_Node := Arg1;\n+         for J in 1 .. Arg_Count loop\n+            Check_No_Identifier (Arg_Node);\n+            Next (Arg_Node);\n+         end loop;\n       end Check_No_Identifiers;\n \n       ------------------------\n@@ -17477,14 +17475,36 @@ package body Sem_Prag is\n          -- Warnings --\n          --------------\n \n-         --  pragma Warnings (On | Off);\n-         --  pragma Warnings (On | Off, LOCAL_NAME);\n-         --  pragma Warnings (static_string_EXPRESSION);\n-         --  pragma Warnings (On | Off, STRING_LITERAL);\n+         --  pragma Warnings (On | Off [,REASON]);\n+         --  pragma Warnings (On | Off, LOCAL_NAME [,REASON]);\n+         --  pragma Warnings (static_string_EXPRESSION [,REASON]);\n+         --  pragma Warnings (On | Off, STRING_LITERAL [,REASON]);\n+\n+         --  REASON ::= Reason => Static_String_Expression\n \n          when Pragma_Warnings => Warnings : begin\n             GNAT_Pragma;\n             Check_At_Least_N_Arguments (1);\n+\n+            --  See if last argument is labeled Reason. If so, make sure we\n+            --  have a static string expression, but otherwise just ignore\n+            --  the REASON argument by decreasing Num_Args by 1 (all the\n+            --  remaining tests look only at the first Num_Args arguments).\n+\n+            declare\n+               Last_Arg : constant Node_Id :=\n+                            Last (Pragma_Argument_Associations (N));\n+            begin\n+               if Nkind (Last_Arg) = N_Pragma_Argument_Association\n+                 and then Chars (Last_Arg) = Name_Reason\n+               then\n+                  Check_Arg_Is_Static_Expression (Last_Arg, Standard_String);\n+                  Arg_Count := Arg_Count - 1;\n+               end if;\n+            end;\n+\n+            --  Now proceed with REASON taken care of and eliminated\n+\n             Check_No_Identifiers;\n \n             --  If debug flag -gnatd.i is set, pragma is ignored"}, {"sha": "ef983a7fbeacc4de627603211f5b5e7cf50fc2e1", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbee5cc4b054ad87d3200f6d17e425040fbc50f6/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=bbee5cc4b054ad87d3200f6d17e425040fbc50f6", "patch": "@@ -746,6 +746,7 @@ package Snames is\n    Name_Optional                       : constant Name_Id := N + $;\n    Name_Policy                         : constant Name_Id := N + $;\n    Name_Parameter_Types                : constant Name_Id := N + $;\n+   Name_Reason                         : constant Name_Id := N + $;\n    Name_Reference                      : constant Name_Id := N + $;\n    Name_Requires                       : constant Name_Id := N + $;\n    Name_Restricted                     : constant Name_Id := N + $;"}]}