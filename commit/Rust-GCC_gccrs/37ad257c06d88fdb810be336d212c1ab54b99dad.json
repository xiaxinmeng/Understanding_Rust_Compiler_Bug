{"sha": "37ad257c06d88fdb810be336d212c1ab54b99dad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhZDI1N2MwNmQ4OGZkYjgxMGJlMzM2ZDIxMmMxYWI1NGI5OWRhZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-06-27T20:14:48Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-06-27T23:14:29Z"}, "message": "Fix PR 101230: ICE in fold_cond_expr_with_comparison\n\nThis fixes PR 101230 where I had messed up and forgot that\ninvert_tree_comparison can return ERROR_MARK if the comparsion\nis not invertable (floating point types).\n\nCommitted as obvious after a bootstrap/test on x86_64-linux-gnu-gnu\n\ngcc/ChangeLog:\n\n\tPR middle-end/101230\n\t* fold-const.c (fold_ternary_loc): Check\n\tthe return value of invert_tree_comparison.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/torture/pr101230-1.c: New test.", "tree": {"sha": "6258d2870778902595f9fca7b943dbb082181443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6258d2870778902595f9fca7b943dbb082181443"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37ad257c06d88fdb810be336d212c1ab54b99dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ad257c06d88fdb810be336d212c1ab54b99dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ad257c06d88fdb810be336d212c1ab54b99dad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ad257c06d88fdb810be336d212c1ab54b99dad/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3966726333b2a4cf54333549c8331d833364266e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3966726333b2a4cf54333549c8331d833364266e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3966726333b2a4cf54333549c8331d833364266e"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "dfccbaec6838a5c0c7c0c801618374d7e546d3c4", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ad257c06d88fdb810be336d212c1ab54b99dad/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ad257c06d88fdb810be336d212c1ab54b99dad/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=37ad257c06d88fdb810be336d212c1ab54b99dad", "patch": "@@ -12837,10 +12837,11 @@ fold_ternary_loc (location_t loc, enum tree_code code, tree type,\n \t  tree arg00 = TREE_OPERAND (arg0, 0);\n \t  tree arg01 = TREE_OPERAND (arg0, 1);\n \t  comp_code = invert_tree_comparison (comp_code, HONOR_NANS (arg00));\n-\t  tem = fold_cond_expr_with_comparison (loc, type, comp_code,\n-\t\t\t\t\t\targ00,\n-\t\t\t\t\t\targ01,\n-\t\t\t\t\t\top2, op1);\n+\t  if (comp_code != ERROR_MARK)\n+\t    tem = fold_cond_expr_with_comparison (loc, type, comp_code,\n+\t\t\t\t\t\t  arg00,\n+\t\t\t\t\t\t  arg01,\n+\t\t\t\t\t\t  op2, op1);\n \t  if (tem)\n \t    return tem;\n \t}"}, {"sha": "f10ca8b1f4997ecaa0893231fee06a033b1e0b4c", "filename": "gcc/testsuite/gcc.dg/torture/pr101230-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ad257c06d88fdb810be336d212c1ab54b99dad/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101230-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ad257c06d88fdb810be336d212c1ab54b99dad/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101230-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101230-1.c?ref=37ad257c06d88fdb810be336d212c1ab54b99dad", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fno-signed-zeros\" } */\n+\n+\n+double distance3d_sqr_pt4d_pt4d(void);\n+\n+int update_r_k_curr_cluster;\n+void update_r_k(void) {\n+  double curr_distance = distance3d_sqr_pt4d_pt4d();\n+  for (int cluster; cluster; cluster++)\n+    if (0 < curr_distance) {\n+      curr_distance = 0;\n+      update_r_k_curr_cluster = cluster;\n+    }\n+}"}]}