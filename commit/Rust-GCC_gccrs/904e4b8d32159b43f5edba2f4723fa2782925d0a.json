{"sha": "904e4b8d32159b43f5edba2f4723fa2782925d0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA0ZTRiOGQzMjE1OWI0M2Y1ZWRiYTJmNDcyM2ZhMjc4MjkyNWQwYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-03-08T12:43:13Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-03-08T12:43:13Z"}, "message": "re PR target/22152 (Poor loop optimization when using mmx builtins)\n\n        PR target/22152\n        * gcc.target/i386/pr22152.c: New test.\n        * gcc.target/i386/sse2-mmx.c: Ditto.\n\nFrom-SVN: r133034", "tree": {"sha": "b4d21b9fc03424f8c902be378a3fa06b3476ba3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4d21b9fc03424f8c902be378a3fa06b3476ba3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/904e4b8d32159b43f5edba2f4723fa2782925d0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/904e4b8d32159b43f5edba2f4723fa2782925d0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/904e4b8d32159b43f5edba2f4723fa2782925d0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/904e4b8d32159b43f5edba2f4723fa2782925d0a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "06e36a74ab6d8e9511d2ee0a638d58d051d225e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/904e4b8d32159b43f5edba2f4723fa2782925d0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/904e4b8d32159b43f5edba2f4723fa2782925d0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=904e4b8d32159b43f5edba2f4723fa2782925d0a", "patch": "@@ -1,3 +1,9 @@\n+2008-03-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/22152\n+\t* gcc.target/i386/pr22152.c: New test.\n+\t* gcc.target/i386/sse2-mmx.c: Ditto.\n+\n 2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/uninit_func.adb: New test."}, {"sha": "d12597703ea2e98c506a1be2a74a5ad18f28452d", "filename": "gcc/testsuite/gcc.target/i386/pr22152.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/904e4b8d32159b43f5edba2f4723fa2782925d0a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/904e4b8d32159b43f5edba2f4723fa2782925d0a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c?ref=904e4b8d32159b43f5edba2f4723fa2782925d0a", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+#include <mmintrin.h>\n+\n+__m64\n+unsigned_add3 (const __m64 * a, const __m64 * b, unsigned long count)\n+{\n+  __m64 sum;\n+  unsigned int i;\n+\n+  for (i = 1; i < count; i++)\n+    sum = _mm_add_si64 (a[i], b[i]);\n+\n+  return sum;\n+}\n+\n+/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+.*%mm\" 1 } } */"}, {"sha": "cc2381e04ab3d3cc69bd8ff31bf42515697ca398", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/904e4b8d32159b43f5edba2f4723fa2782925d0a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/904e4b8d32159b43f5edba2f4723fa2782925d0a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx.c?ref=904e4b8d32159b43f5edba2f4723fa2782925d0a", "patch": "@@ -0,0 +1,75 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+#include \"sse2-check.h\"\n+\n+#include <mmintrin.h>\n+\n+#define N 4\n+\n+unsigned long long a[N], b[N], result[N];\n+\n+unsigned long long check[N] =\n+  { 0x101010101010100full,\n+    0x1010101010101010ull,\n+    0x1010101010101010ull,\n+    0x1010101010101010ull };\n+\n+__m64\n+unsigned_add3 (const __m64 * a, const __m64 * b,\n+\t       __m64 * result, unsigned int count)\n+{\n+  __m64 _a, _b, one, sum, carry, onesCarry;\n+\n+  unsigned int i;\n+\n+  one = _mm_cmpeq_pi8 (_a, _a);\n+  one = _mm_sub_si64 (_mm_xor_si64 (one, one), one);\n+\n+  carry = _mm_xor_si64 (one, one);\n+\n+  for (i = 0; i < count; i++)\n+    {\n+      _a = a[i];\n+      _b = b[i];\n+\n+      sum = _mm_add_si64 (_a, _b);\n+      sum = _mm_add_si64 (sum, carry);\n+\n+      result[i] = sum;\n+\n+      onesCarry = _mm_and_si64 (_mm_xor_si64 (_a, _b), carry);\n+      onesCarry = _mm_or_si64 (_mm_and_si64 (_a, _b), onesCarry);\n+      onesCarry = _mm_and_si64 (onesCarry, one);\n+\n+      _a = _mm_srli_si64 (_a, 1);\n+      _b = _mm_srli_si64 (_b, 1);\n+\n+      carry = _mm_add_si64 (_mm_add_si64 (_a, _b), onesCarry);\n+      carry = _mm_srli_si64 (carry, 63);\n+    }\n+\n+  _mm_empty ();\n+  return carry;\n+}\n+\n+void __attribute__((noinline))\n+sse2_test (void)\n+{\n+  unsigned long long carry;\n+  int i;\n+\n+  /* Really long numbers.  */\n+  a[3] = a[2] = a[1] = a[0] = 0xd3d3d3d3d3d3d3d3ull;\n+  b[3] = b[2] = b[1] = b[0] = 0x3c3c3c3c3c3c3c3cull;\n+\n+  carry = (unsigned long long) unsigned_add3\n+    ((__m64 *)a, (__m64 *)b, (__m64 *)result, N);\n+\n+  if (carry != 1)\n+    abort ();\n+\n+  for (i = 0; i < N; i++)\n+    if (result [i] != check[i])\n+      abort ();\n+}"}]}