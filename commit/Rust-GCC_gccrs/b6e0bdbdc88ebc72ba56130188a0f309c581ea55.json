{"sha": "b6e0bdbdc88ebc72ba56130188a0f309c581ea55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZlMGJkYmRjODhlYmM3MmJhNTYxMzAxODhhMGYzMDljNTgxZWE1NQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-07-16T22:27:21Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-07-16T22:27:21Z"}, "message": "tree-ssa-structalias.c (need_to_solve): Need to check for preds, too.\n\n2005-07-16  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-structalias.c (need_to_solve): Need to check for preds,\n\ttoo.\n\nFrom-SVN: r102100", "tree": {"sha": "5654d225ad252d8aeea79a498e54899d0baab9e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5654d225ad252d8aeea79a498e54899d0baab9e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6e0bdbdc88ebc72ba56130188a0f309c581ea55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e0bdbdc88ebc72ba56130188a0f309c581ea55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6e0bdbdc88ebc72ba56130188a0f309c581ea55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e0bdbdc88ebc72ba56130188a0f309c581ea55/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea900239f40b40cb0b5174fb15818c862b6bb333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea900239f40b40cb0b5174fb15818c862b6bb333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea900239f40b40cb0b5174fb15818c862b6bb333"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "d608e19096adc11bb507e467b131d238a70a2182", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e0bdbdc88ebc72ba56130188a0f309c581ea55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e0bdbdc88ebc72ba56130188a0f309c581ea55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6e0bdbdc88ebc72ba56130188a0f309c581ea55", "patch": "@@ -1,3 +1,8 @@\n+2005-07-16  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-structalias.c (need_to_solve): Need to check for preds,\n+\ttoo.\n+\n 2005-07-16  Eric Botcazou <ebotcazou@libertysurf.fr>\n \n \t* doc/install.texi (*-*-solaris2*): Document recommended version"}, {"sha": "f715ce7abb903806e7506dcd83d58b876c649399", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e0bdbdc88ebc72ba56130188a0f309c581ea55/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e0bdbdc88ebc72ba56130188a0f309c581ea55/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=b6e0bdbdc88ebc72ba56130188a0f309c581ea55", "patch": "@@ -3494,7 +3494,8 @@ init_base_vars (void)\n /* Return true if we actually need to solve the constraint graph in order to\n    get our points-to sets.  This is false when, for example, no addresses are\n    taken other than special vars, or all points-to sets with members already\n-   contain the anything variable.  */\n+   contain the anything variable and there are no predecessors for other\n+   sets.  */\n \n static bool\n need_to_solve (void)\n@@ -3516,6 +3517,9 @@ need_to_solve (void)\n \t  && !bitmap_empty_p (v->solution) \n \t  && !bitmap_bit_p (v->solution, anything_id))\n \tfound_non_anything = true;\n+      else if (bitmap_empty_p (v->solution)\n+\t       && VEC_length (constraint_edge_t, graph->preds[v->id]) != 0)\n+\tfound_non_anything = true;\n \n       if (found_address_taken && found_non_anything)\n \treturn true;"}]}