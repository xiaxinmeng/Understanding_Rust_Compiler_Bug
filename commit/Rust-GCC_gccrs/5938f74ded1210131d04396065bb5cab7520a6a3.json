{"sha": "5938f74ded1210131d04396065bb5cab7520a6a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkzOGY3NGRlZDEyMTAxMzFkMDQzOTYwNjViYjVjYWI3NTIwYTZhMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-11-08T22:36:51Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-11-08T22:36:51Z"}, "message": "collect2.c (main): Search PLUGIN_LD for plugin linker.\n\n2009-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* collect2.c (main): Search PLUGIN_LD for plugin linker.\n\n\t* configure.ac (--with-plugin-ld): New.  Default to ld.\n\t* configure: Regenerated.\n\t* config.in: Likewise.\n\n\t* exec-tool.in (ORIGINAL_PLUGIN_LD_FOR_TARGET): New.\n\t(collect-ld): Use ORIGINAL_PLUGIN_LD_FOR_TARGET for -plugin.\n\nFrom-SVN: r154020", "tree": {"sha": "a77de50fab65df010cf9b254b0984429a0105147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a77de50fab65df010cf9b254b0984429a0105147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5938f74ded1210131d04396065bb5cab7520a6a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5938f74ded1210131d04396065bb5cab7520a6a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5938f74ded1210131d04396065bb5cab7520a6a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5938f74ded1210131d04396065bb5cab7520a6a3/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aeaebc93216fe846ebb66523caa1f50b170617b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeaebc93216fe846ebb66523caa1f50b170617b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeaebc93216fe846ebb66523caa1f50b170617b8"}], "stats": {"total": 114, "additions": 90, "deletions": 24}, "files": [{"sha": "9e6fb69e504a8c9067a846a33cb4ef685fa32daa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5938f74ded1210131d04396065bb5cab7520a6a3", "patch": "@@ -1,3 +1,14 @@\n+2009-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* collect2.c (main): Search PLUGIN_LD for plugin linker.\n+\n+\t* configure.ac (--with-plugin-ld): New.  Default to ld.\n+\t* configure: Regenerated.\n+\t* config.in: Likewise.\n+\n+\t* exec-tool.in (ORIGINAL_PLUGIN_LD_FOR_TARGET): New.\n+\t(collect-ld): Use ORIGINAL_PLUGIN_LD_FOR_TARGET for -plugin.\n+\n 2009-11-08  Jonathan Gray <jsg@openbsd.org>\n \n \t* config/openbsd-stdint.h: Change to reflect what"}, {"sha": "b259f09333f46d50de776bef853eb31ba29d8e94", "filename": "gcc/collect2.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=5938f74ded1210131d04396065bb5cab7520a6a3", "patch": "@@ -1100,6 +1100,7 @@ int\n main (int argc, char **argv)\n {\n   static const char *const ld_suffix\t= \"ld\";\n+  static const char *const plugin_ld_suffix = PLUGIN_LD;\n   static const char *const real_ld_suffix = \"real-ld\";\n   static const char *const collect_ld_suffix = \"collect-ld\";\n   static const char *const nm_suffix\t= \"nm\";\n@@ -1118,6 +1119,8 @@ main (int argc, char **argv)\n \n   const char *const full_ld_suffix =\n     concat(target_machine, \"-\", ld_suffix, NULL);\n+  const char *const full_plugin_ld_suffix =\n+    concat(target_machine, \"-\", plugin_ld_suffix, NULL);\n   const char *const full_nm_suffix =\n     concat (target_machine, \"-\", nm_suffix, NULL);\n   const char *const full_gnm_suffix =\n@@ -1132,6 +1135,7 @@ main (int argc, char **argv)\n     concat (target_machine, \"-\", gstrip_suffix, NULL);\n #else\n   const char *const full_ld_suffix\t= ld_suffix;\n+  const char *const full_plugin_ld_suffix = plugin_ld_suffix;\n   const char *const full_nm_suffix\t= nm_suffix;\n   const char *const full_gnm_suffix\t= gnm_suffix;\n #ifdef LDD_SUFFIX\n@@ -1152,6 +1156,7 @@ main (int argc, char **argv)\n   const char **c_ptr;\n   char **ld1_argv;\n   const char **ld1;\n+  bool use_plugin = false;\n   \n   /* The kinds of symbols we will have to consider when scanning the\n      outcome of a first pass link.  This is ALL to start with, then might\n@@ -1217,7 +1222,6 @@ main (int argc, char **argv)\n      what LTO mode we are in.  */\n   {\n     int i;\n-    bool use_plugin = false;\n \n     for (i = 1; argv[i] != NULL; i ++)\n       {\n@@ -1329,11 +1333,17 @@ main (int argc, char **argv)\n   /* Search the compiler directories for `ld'.  We have protection against\n      recursive calls in find_a_file.  */\n   if (ld_file_name == 0)\n-    ld_file_name = find_a_file (&cpath, ld_suffix);\n+    ld_file_name = find_a_file (&cpath,\n+\t\t\t\tuse_plugin\n+\t\t\t\t? plugin_ld_suffix\n+\t\t\t\t: ld_suffix);\n   /* Search the ordinary system bin directories\n      for `ld' (if native linking) or `TARGET-ld' (if cross).  */\n   if (ld_file_name == 0)\n-    ld_file_name = find_a_file (&path, full_ld_suffix);\n+    ld_file_name = find_a_file (&path,\n+\t\t\t\tuse_plugin\n+\t\t\t\t? full_plugin_ld_suffix\n+\t\t\t\t: full_ld_suffix);\n \n #ifdef REAL_NM_FILE_NAME\n   nm_file_name = find_a_file (&path, REAL_NM_FILE_NAME);"}, {"sha": "fbc9fbb92889eef0f05a2f94b9ad80ae0d4079a9", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=5938f74ded1210131d04396065bb5cab7520a6a3", "patch": "@@ -1550,6 +1550,12 @@\n #endif\n \n \n+/* Specify plugin linker */\n+#ifndef USED_FOR_TARGET\n+#undef PLUGIN_LD\n+#endif\n+\n+\n /* Define to PREFIX/include if cpp should also search that directory. */\n #ifndef USED_FOR_TARGET\n #undef PREFIX_INCLUDE_DIR"}, {"sha": "f49cdb77f67ec2354c7914e333f01b1f6277b834", "filename": "gcc/configure", "status": "modified", "additions": 41, "deletions": 20, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5938f74ded1210131d04396065bb5cab7520a6a3", "patch": "@@ -822,6 +822,7 @@ gcc_cv_objdump\n ORIGINAL_NM_FOR_TARGET\n gcc_cv_nm\n ORIGINAL_LD_FOR_TARGET\n+ORIGINAL_PLUGIN_LD_FOR_TARGET\n gcc_cv_ld\n ORIGINAL_AS_FOR_TARGET\n gcc_cv_as\n@@ -1036,6 +1037,7 @@ enable_static\n with_pic\n enable_fast_install\n enable_libtool_lock\n+with_plugin_ld\n enable_gnu_unique_object\n enable_linker_build_id\n with_long_double_128\n@@ -1780,6 +1782,7 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-plugin-ld=[ARG]  specify the plugin linker\n   --with-long-double-128  Use 128-bit long double by default.\n   --with-gc={page,zone}   choose the garbage collection mechanism to use\n                           with the compiler\n@@ -11572,13 +11575,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then :\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:11575: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:11578: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:11578: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:11581: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:11581: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:11584: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -12783,7 +12786,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 12786 \"configure\"' > conftest.$ac_ext\n+  echo '#line 12789 \"configure\"' > conftest.$ac_ext\n   if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -14443,11 +14446,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:14446: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:14449: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:14450: \\$? = $ac_status\" >&5\n+   echo \"$as_me:14453: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -14782,11 +14785,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:14785: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:14788: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:14789: \\$? = $ac_status\" >&5\n+   echo \"$as_me:14792: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -14887,11 +14890,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:14890: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:14893: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:14894: \\$? = $ac_status\" >&5\n+   echo \"$as_me:14897: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -14942,11 +14945,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:14945: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:14948: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:14949: \\$? = $ac_status\" >&5\n+   echo \"$as_me:14952: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17324,7 +17327,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17327 \"configure\"\n+#line 17330 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17420,7 +17423,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17423 \"configure\"\n+#line 17426 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19376,11 +19379,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:19379: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:19382: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:19383: \\$? = $ac_status\" >&5\n+   echo \"$as_me:19386: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -19475,11 +19478,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:19478: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:19481: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:19482: \\$? = $ac_status\" >&5\n+   echo \"$as_me:19485: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -19527,11 +19530,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:19530: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:19533: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:19534: \\$? = $ac_status\" >&5\n+   echo \"$as_me:19537: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -20686,6 +20689,24 @@ fi\n fi\n fi\n \n+ORIGINAL_PLUGIN_LD_FOR_TARGET=$gcc_cv_ld\n+PLUGIN_LD=`basename $gcc_cv_ld`\n+\n+# Check whether --with-plugin-ld was given.\n+if test \"${with_plugin_ld+set}\" = set; then :\n+  withval=$with_plugin_ld; if test x\"$withval\" != x; then\n+   ORIGINAL_PLUGIN_LD_FOR_TARGET=\"$withval\"\n+   PLUGIN_LD=\"$withval\"\n+ fi\n+fi\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define PLUGIN_LD \"$PLUGIN_LD\"\n+_ACEOF\n+\n+\n ORIGINAL_LD_FOR_TARGET=$gcc_cv_ld\n \n case \"$ORIGINAL_LD_FOR_TARGET\" in"}, {"sha": "dfc72991c50db417092fcc8a2b417fe25895d11e", "filename": "gcc/configure.ac", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=5938f74ded1210131d04396065bb5cab7520a6a3", "patch": "@@ -1915,6 +1915,17 @@ else\n         AC_PATH_PROG(gcc_cv_ld, $LD_FOR_TARGET)\n fi])\n \n+ORIGINAL_PLUGIN_LD_FOR_TARGET=$gcc_cv_ld\n+PLUGIN_LD=`basename $gcc_cv_ld`\n+AC_ARG_WITH(plugin-ld,\n+[  --with-plugin-ld=[[ARG]]  specify the plugin linker],\n+[if test x\"$withval\" != x; then\n+   ORIGINAL_PLUGIN_LD_FOR_TARGET=\"$withval\"\n+   PLUGIN_LD=\"$withval\"\n+ fi])\n+AC_SUBST(ORIGINAL_PLUGIN_LD_FOR_TARGET)\n+AC_DEFINE_UNQUOTED(PLUGIN_LD, \"$PLUGIN_LD\", [Specify plugin linker])\n+\n ORIGINAL_LD_FOR_TARGET=$gcc_cv_ld\n AC_SUBST(ORIGINAL_LD_FOR_TARGET)\n case \"$ORIGINAL_LD_FOR_TARGET\" in"}, {"sha": "a1468999b597fc0a987c21df9fe53254cc37f963", "filename": "gcc/exec-tool.in", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fexec-tool.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5938f74ded1210131d04396065bb5cab7520a6a3/gcc%2Fexec-tool.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexec-tool.in?ref=5938f74ded1210131d04396065bb5cab7520a6a3", "patch": "@@ -21,6 +21,7 @@\n \n ORIGINAL_AS_FOR_TARGET=\"@ORIGINAL_AS_FOR_TARGET@\"\n ORIGINAL_LD_FOR_TARGET=\"@ORIGINAL_LD_FOR_TARGET@\"\n+ORIGINAL_PLUGIN_LD_FOR_TARGET=\"@ORIGINAL_PLUGIN_LD_FOR_TARGET@\"\n ORIGINAL_NM_FOR_TARGET=\"@ORIGINAL_NM_FOR_TARGET@\"\n exeext=@host_exeext@\n fast_install=@enable_fast_install@\n@@ -34,7 +35,13 @@ case \"$invoked\" in\n     dir=gas\n     ;;\n   collect-ld)\n-    original=$ORIGINAL_LD_FOR_TARGET\n+    # when using a linker plugin, gcc will always pass '-plugin' as the\n+    # first option to the linker.\n+    if test x\"$1\" = \"x-plugin\"; then\n+      original=$ORIGINAL_PLUGIN_LD_FOR_TARGET\n+    else\n+      original=$ORIGINAL_LD_FOR_TARGET\n+    fi\n     prog=ld-new$exeext\n     dir=ld\n     ;;"}]}