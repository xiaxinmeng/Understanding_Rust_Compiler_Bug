{"sha": "043378c30822859ee836d316215d6e71e5d3fb2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQzMzc4YzMwODIyODU5ZWU4MzZkMzE2MjE1ZDZlNzFlNWQzZmIyZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2013-09-25T15:55:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2013-09-25T15:55:01Z"}, "message": "(clh 9)\n\nFrom-SVN: r202895", "tree": {"sha": "95d4aaec90834c8e0f73a3ee21377e79db80fc48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95d4aaec90834c8e0f73a3ee21377e79db80fc48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/043378c30822859ee836d316215d6e71e5d3fb2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/043378c30822859ee836d316215d6e71e5d3fb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/043378c30822859ee836d316215d6e71e5d3fb2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/043378c30822859ee836d316215d6e71e5d3fb2f/comments", "author": null, "committer": null, "parents": [{"sha": "eab34643d4713e928a7064b5ea62cef1dfbd39f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab34643d4713e928a7064b5ea62cef1dfbd39f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab34643d4713e928a7064b5ea62cef1dfbd39f9"}], "stats": {"total": 208, "additions": 205, "deletions": 3}, "files": [{"sha": "48b85ba823ffd2161cbd229f50b58a7ae991d9df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=043378c30822859ee836d316215d6e71e5d3fb2f", "patch": "@@ -1,3 +1,13 @@\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in (CCDEPMODE, DEPDIR, depcomp, COMPILE.base)\n+\t(COMPILE, POSTCOMPILE): New variables.\n+\t(.cc.o .c.o): Use COMPILE, POSTCOMPILE.\n+\t(DEPFILES): New variable.\n+\tInclude \".Po\" files.\n+\t* configure.ac: Add checks for dependency checking.\n+\t* configure, aclocal.m4: Regenerate.\n+\n 2013-09-25  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in (ALL_HOST_BACKEND_OBJS): Add lto-wrapper.o."}, {"sha": "c1480a4704f9de4a7503bfcc7fb033beba09b094", "filename": "gcc/Makefile.in", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=043378c30822859ee836d316215d6e71e5d3fb2f", "patch": "@@ -308,6 +308,11 @@ write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) \\\n # UNSORTED\n # --------\n \n+# Dependency tracking stuff.\n+CCDEPMODE = @CCDEPMODE@\n+DEPDIR = @DEPDIR@\n+depcomp = $(SHELL) $(srcdir)/../depcomp\n+\n # Some compilers can't handle cc -c blah.c -o foo/blah.o.\n # In stage2 and beyond, we force this to \"-o $@\" since we know we're using gcc.\n OUTPUT_OPTION = @OUTPUT_OPTION@\n@@ -1071,8 +1076,23 @@ INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n \t   $(CPPINC) $(GMPINC) $(DECNUMINC) $(BACKTRACEINC) \\\n \t   $(CLOOGINC) $(ISLINC)\n \n+COMPILE.base = $(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) -o $@\n+ifeq ($(CCDEPMODE),depmode=gcc3)\n+# Note a subtlety here: we use $(@D) for the directory part, to make\n+# things like the go/%.o rule work properly; but we use $(*F) for the\n+# file part, as we just want the file part of the stem, not the entire\n+# file name.\n+COMPILE = $(COMPILE.base) -MT $@ -MMD -MP -MF $(@D)/$(DEPDIR)/$(*F).TPo\n+POSTCOMPILE = @mv $(@D)/$(DEPDIR)/$(*F).TPo $(@D)/$(DEPDIR)/$(*F).Po\n+else\n+COMPILE = source='$<' object='$@' libtool=no \\\n+    DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) $(COMPILE.base)\n+POSTCOMPILE =\n+endif\n+\n .cc.o .c.o:\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $< $(OUTPUT_OPTION)\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n \n #\f\n # Support for additional languages (other than C).\n@@ -5387,7 +5407,17 @@ po/gcc.pot: force\n \tAWK=$(AWK) $(SHELL) $(srcdir)/po/exgettext \\\n \t\t$(XGETTEXT) gcc $(srcdir)\n \n+#\f\n+\n+# Dependency information.\n+\n # In order for parallel make to really start compiling the expensive\n # objects from $(OBJS) as early as possible, build all their\n # prerequisites strictly before all objects.\n $(ALL_HOST_OBJS) : | $(generated_files)\n+\n+# Include the auto-generated dependencies for all host objects.\n+DEPFILES = \\\n+  $(foreach obj,$(ALL_HOST_OBJS),\\\n+    $(dir $(obj))$(DEPDIR)/$(patsubst %.o,%.Po,$(notdir $(obj))))\n+-include $(DEPFILES)"}, {"sha": "1bcf905658498d7dedfa92b149ebd5c8f1ed4ed2", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=043378c30822859ee836d316215d6e71e5d3fb2f", "patch": "@@ -106,10 +106,12 @@ m4_include([../ltversion.m4])\n m4_include([../lt~obsolete.m4])\n m4_include([../config/acx.m4])\n m4_include([../config/codeset.m4])\n+m4_include([../config/depstand.m4])\n m4_include([../config/dfp.m4])\n m4_include([../config/gettext-sister.m4])\n m4_include([../config/iconv.m4])\n m4_include([../config/lcmessage.m4])\n+m4_include([../config/lead-dot.m4])\n m4_include([../config/lib-ld.m4])\n m4_include([../config/lib-link.m4])\n m4_include([../config/lib-prefix.m4])"}, {"sha": "d2c08f38fc1a098a09f987879bfc049dde25c6a2", "filename": "gcc/configure", "status": "modified", "additions": 146, "deletions": 2, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=043378c30822859ee836d316215d6e71e5d3fb2f", "patch": "@@ -735,6 +735,9 @@ LDEXP_LIB\n EXTRA_GCC_LIBS\n GNAT_LIBEXC\n COLLECT2_LIBS\n+CCDEPMODE\n+DEPDIR\n+am__leading_dot\n CXXCPP\n AR\n NM\n@@ -8872,6 +8875,136 @@ ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n+# --------\n+# Dependency checking.\n+# --------\n+\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+rm -rf .tst 2>/dev/null\n+mkdir .tst 2>/dev/null\n+if test -d .tst; then\n+  am__leading_dot=.\n+else\n+  am__leading_dot=_\n+fi\n+rmdir .tst 2>/dev/null\n+\n+DEPDIR=\"${am__leading_dot}deps\"\n+\n+ac_config_commands=\"$ac_config_commands depdir\"\n+\n+\n+ac_config_commands=\"$ac_config_commands gccdepdir\"\n+\n+\n+depcc=\"$CC\"   am_compiler_list=\n+\n+am_depcomp=$ac_aux_dir/depcomp\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc\" >&5\n+$as_echo_n \"checking dependency style of $depcc... \" >&6; }\n+if test \"${am_cv_CC_dependencies_compiler_type+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -f \"$am_depcomp\"; then\n+  # We make a subdir and do the tests there.  Otherwise we can end up\n+  # making bogus files that we don't know about and never remove.  For\n+  # instance it was reported that on HP-UX the gcc test will end up\n+  # making a dummy file named `D' -- because `-MD' means `put the output\n+  # in D'.\n+  mkdir conftest.dir\n+  # Copy depcomp to subdir because otherwise we won't find it if we're\n+  # using a relative directory.\n+  cp \"$am_depcomp\" conftest.dir\n+  cd conftest.dir\n+  # We will build objects and dependencies in a subdirectory because\n+  # it helps to detect inapplicable dependency modes.  For instance\n+  # both Tru64's cc and ICC support -MD to output dependencies as a\n+  # side effect of compilation, but ICC will put the dependencies in\n+  # the current directory while Tru64 will put them in the object\n+  # directory.\n+  mkdir sub\n+\n+  am_cv_CC_dependencies_compiler_type=none\n+  if test \"$am_compiler_list\" = \"\"; then\n+     am_compiler_list=`sed -n 's/^\\([a-zA-Z0-9]*\\))$/\\1/p' < ./depcomp`\n+  fi\n+  for depmode in $am_compiler_list; do\n+    if test $depmode = none; then break; fi\n+\n+    $as_echo \"$as_me:$LINENO: trying $depmode\" >&5\n+    # Setup a source with many dependencies, because some compilers\n+    # like to wrap large dependency lists on column 80 (with \\), and\n+    # we should not choose a depcomp mode which is confused by this.\n+    #\n+    # We need to recreate these files for each test, as the compiler may\n+    # overwrite some of them when testing with obscure command lines.\n+    # This happens at least with the AIX C compiler.\n+    : > sub/conftest.c\n+    for i in 1 2 3 4 5 6; do\n+      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with\n+      # Solaris 8's {/usr,}/bin/sh.\n+      touch sub/conftst$i.h\n+    done\n+    echo \"include sub/conftest.Po\" > confmf\n+\n+    # We check with `-c' and `-o' for the sake of the \"dashmstdout\"\n+    # mode.  It turns out that the SunPro C++ compiler does not properly\n+    # handle `-M -o', and we need to detect this.\n+    depcmd=\"depmode=$depmode \\\n+       source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \\\n+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n+       $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c\"\n+    echo \"| $depcmd\" | sed -e 's/  */ /g' >&5\n+    if env $depcmd > conftest.err 2>&1 &&\n+       grep sub/conftst6.h sub/conftest.Po >>conftest.err 2>&1 &&\n+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po >>conftest.err 2>&1 &&\n+       ${MAKE-make} -s -f confmf >>conftest.err 2>&1; then\n+      # icc doesn't choke on unknown options, it will just issue warnings\n+      # or remarks (even with -Werror).  So we grep stderr for any message\n+      # that says an option was ignored or not supported.\n+      # When given -MP, icc 7.0 and 7.1 complain thusly:\n+      #   icc: Command line warning: ignoring option '-M'; no argument required\n+      # The diagnosis changed in icc 8.0:\n+      #   icc: Command line remark: option '-MP' not supported\n+      if (grep 'ignoring option' conftest.err ||\n+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n+        am_cv_CC_dependencies_compiler_type=$depmode\n+\t$as_echo \"$as_me:$LINENO: success\" >&5\n+        break\n+      fi\n+    fi\n+    $as_echo \"$as_me:$LINENO: failure, diagnostics are:\" >&5\n+    sed -e 's/^/| /' < conftest.err >&5\n+  done\n+\n+  cd ..\n+  rm -rf conftest.dir\n+else\n+  am_cv_CC_dependencies_compiler_type=none\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type\" >&5\n+$as_echo \"$am_cv_CC_dependencies_compiler_type\" >&6; }\n+if test x${am_cv_CC_dependencies_compiler_type-none} = xnone\n+then as_fn_error \"no usable dependency style found\" \"$LINENO\" 5\n+else CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type\n+\n+fi\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n # --------\n # UNSORTED\n # --------\n@@ -17900,7 +18033,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17903 \"configure\"\n+#line 18036 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18006,7 +18139,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18009 \"configure\"\n+#line 18142 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -28434,6 +28567,8 @@ cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n #\n # INIT-COMMANDS\n #\n+ac_aux_dir=$ac_aux_dir DEPDIR=$DEPDIR\n+subdirs=\"$subdirs\" ac_aux_dir=$ac_aux_dir DEPDIR=$DEPDIR\n subdirs='$subdirs'\n \n _ACEOF\n@@ -28445,6 +28580,8 @@ for ac_config_target in $ac_config_targets\n do\n   case $ac_config_target in\n     \"auto-host.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS auto-host.h:config.in\" ;;\n+    \"depdir\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depdir\" ;;\n+    \"gccdepdir\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS gccdepdir\" ;;\n     \"as\") CONFIG_FILES=\"$CONFIG_FILES as:exec-tool.in\" ;;\n     \"collect-ld\") CONFIG_FILES=\"$CONFIG_FILES collect-ld:exec-tool.in\" ;;\n     \"nm\") CONFIG_FILES=\"$CONFIG_FILES nm:exec-tool.in\" ;;\n@@ -29028,6 +29165,13 @@ $as_echo \"$as_me: executing $ac_file commands\" >&6;}\n \n \n   case $ac_file$ac_mode in\n+    \"depdir\":C) $SHELL $ac_aux_dir/mkinstalldirs $DEPDIR ;;\n+    \"gccdepdir\":C)\n+  ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs build/$DEPDIR\n+  for lang in $subdirs c-family common\n+  do\n+      ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs $lang/$DEPDIR\n+  done ;;\n     \"as\":F) chmod +x as ;;\n     \"collect-ld\":F) chmod +x collect-ld ;;\n     \"nm\":F) chmod +x nm ;;"}, {"sha": "dc8b38b9412526ba60fd1abaa5049d02401cf05d", "filename": "gcc/configure.ac", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/043378c30822859ee836d316215d6e71e5d3fb2f/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=043378c30822859ee836d316215d6e71e5d3fb2f", "patch": "@@ -971,6 +971,22 @@ AC_CHECK_HEADERS(ext/hash_map)\n \n AC_LANG_POP(C++)\n \n+# --------\n+# Dependency checking.\n+# --------\n+\n+AC_LANG_PUSH(C++)\n+ZW_CREATE_DEPDIR\n+AC_CONFIG_COMMANDS([gccdepdir],[\n+  ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs build/$DEPDIR\n+  for lang in $subdirs c-family common\n+  do\n+      ${CONFIG_SHELL-/bin/sh} $ac_aux_dir/mkinstalldirs $lang/$DEPDIR\n+  done], [subdirs=\"$subdirs\" ac_aux_dir=$ac_aux_dir DEPDIR=$DEPDIR])\n+\n+ZW_PROG_COMPILER_DEPENDENCIES([CC])\n+AC_LANG_POP(C++)\n+\n # --------\n # UNSORTED\n # --------"}]}