{"sha": "ee41cff421132bb2891a4ad51fae0f83ffcfe087", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU0MWNmZjQyMTEzMmJiMjg5MWE0YWQ1MWZhZTBmODNmZmNmZTA4Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-07-03T17:57:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-07-03T17:57:45Z"}, "message": "* gcc.dg/i386-call-1.c: New test.\n\nFrom-SVN: r68892", "tree": {"sha": "27b2ad1b2e7356c9b0737fc034a897fd085149f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27b2ad1b2e7356c9b0737fc034a897fd085149f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee41cff421132bb2891a4ad51fae0f83ffcfe087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee41cff421132bb2891a4ad51fae0f83ffcfe087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee41cff421132bb2891a4ad51fae0f83ffcfe087", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee41cff421132bb2891a4ad51fae0f83ffcfe087/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa5b060f90061ebf9d1f112d6a46f7759c1a0f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5b060f90061ebf9d1f112d6a46f7759c1a0f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5b060f90061ebf9d1f112d6a46f7759c1a0f66"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "fe736d806d171399d0269e58eeac6858b6df2d96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee41cff421132bb2891a4ad51fae0f83ffcfe087/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee41cff421132bb2891a4ad51fae0f83ffcfe087/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee41cff421132bb2891a4ad51fae0f83ffcfe087", "patch": "@@ -1,3 +1,7 @@\n+2003-07-03  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/i386-call-1.c: New test.\n+\n 2003-07-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/9162"}, {"sha": "9cd49da3b2fa12271e0e0ea797b95264a101d7e3", "filename": "gcc/testsuite/gcc.dg/i386-call-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee41cff421132bb2891a4ad51fae0f83ffcfe087/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-call-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee41cff421132bb2891a4ad51fae0f83ffcfe087/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-call-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-call-1.c?ref=ee41cff421132bb2891a4ad51fae0f83ffcfe087", "patch": "@@ -0,0 +1,39 @@\n+/* PR optimization/11304 */\n+/* Originator: <manuel.serrano@sophia.inria.fr> */\n+/* { dg-do run { target i?86-*-* } } */\n+/* { dg-options \"-O -fomit-frame-pointer\" } */\n+\n+/* Verify that %eax is always restored after a call.  */\n+\n+extern void abort(void);\n+\n+volatile int r;\n+\n+void set_eax(int val)\n+{\n+  __asm__ __volatile__ (\"mov %0, %%eax\" : : \"m\" (val));\n+}\n+\n+void foo(int val)\n+{\n+  r = val;\n+}\n+\n+int bar(int x)\n+{\n+  if (x)\n+  {\n+    set_eax(0);\n+    return x;\n+  }\n+\n+  foo(x);\n+}\n+\n+int main(void)\n+{\n+  if (bar(1) != 1)\n+    abort();\n+\n+  return 0;\n+}"}]}