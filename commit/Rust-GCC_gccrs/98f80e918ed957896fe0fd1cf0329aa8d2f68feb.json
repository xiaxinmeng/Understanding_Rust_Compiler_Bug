{"sha": "98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmODBlOTE4ZWQ5NTc4OTZmZTBmZDFjZjAzMjlhYThkMmY2OGZlYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-06-25T19:03:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-06-25T19:03:28Z"}, "message": "parser.c (cp_parser_binary_expression): Increment c_inhibit_evaluation_warnings while parsing the right hand side of...\n\ncp/:\n\t* parser.c (cp_parser_binary_expression): Increment\n\tc_inhibit_evaluation_warnings while parsing the right hand side of\n\t\"true || x\" or \"false && x\".\n\t* typeck.c (cp_build_binary_op): Only call warn_for_sign_compare\n\tif c_inhibit_evaluation_warnings is zero.\ntestsuite/:\n\t* g++.dg/warn/skip-2.C: New testcase.\n\nFrom-SVN: r148949", "tree": {"sha": "a411b6dc70072c2588e2d8f18097acf381dc3921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a411b6dc70072c2588e2d8f18097acf381dc3921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/comments", "author": null, "committer": null, "parents": [{"sha": "777a3a6a0c4e144f0a97fd807c0a16d8ab8541be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/777a3a6a0c4e144f0a97fd807c0a16d8ab8541be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/777a3a6a0c4e144f0a97fd807c0a16d8ab8541be"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "4e1f61080c5ae171bcaf0393bab261f1582c40ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "patch": "@@ -1,3 +1,11 @@\n+2009-06-25  Ian Lance Taylor  <iant@google.com>\n+\n+\t* parser.c (cp_parser_binary_expression): Increment\n+\tc_inhibit_evaluation_warnings while parsing the right hand side of\n+\t\"true || x\" or \"false && x\".\n+\t* typeck.c (cp_build_binary_op): Only call warn_for_sign_compare\n+\tif c_inhibit_evaluation_warnings is zero.\n+\n 2009-06-24  Jason Merrill  <jason@redhat.com>\n \n \t* error.c (dump_decl): Do say \"typedef\" for the injected class name."}, {"sha": "f71ea46f8cbf0d6d9fb3c7339e9f0bb8e7531e3e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "patch": "@@ -6287,6 +6287,13 @@ cp_parser_binary_expression (cp_parser* parser, bool cast_p,\n       /* We used the operator token.  */\n       cp_lexer_consume_token (parser->lexer);\n \n+      /* For \"false && x\" or \"true || x\", x will never be executed;\n+\t disable warnings while evaluating it.  */\n+      if (tree_type == TRUTH_ANDIF_EXPR)\n+\tc_inhibit_evaluation_warnings += lhs == truthvalue_false_node;\n+      else if (tree_type == TRUTH_ORIF_EXPR)\n+\tc_inhibit_evaluation_warnings += lhs == truthvalue_true_node;\n+\n       /* Extract another operand.  It may be the RHS of this expression\n \t or the LHS of a new, higher priority expression.  */\n       rhs = cp_parser_simple_cast_expression (parser);\n@@ -6332,6 +6339,12 @@ cp_parser_binary_expression (cp_parser* parser, bool cast_p,\n \t  lhs_type = sp->lhs_type;\n \t}\n \n+      /* Undo the disabling of warnings done above.  */\n+      if (tree_type == TRUTH_ANDIF_EXPR)\n+\tc_inhibit_evaluation_warnings -= lhs == truthvalue_false_node;\n+      else if (tree_type == TRUTH_ORIF_EXPR)\n+\tc_inhibit_evaluation_warnings -= lhs == truthvalue_true_node;\n+\n       overloaded_p = false;\n       /* ??? Currently we pass lhs_type == ERROR_MARK and rhs_type ==\n \t ERROR_MARK for everything that is not a binary expression."}, {"sha": "0799db318d13dabaf6ea8512d7fe1af471d5c0ba", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "patch": "@@ -4021,7 +4021,8 @@ cp_build_binary_op (location_t location,\n \t  /* Do not warn until the template is instantiated; we cannot\n \t     bound the ranges of the arguments until that point.  */\n \t  && !processing_template_decl\n-          && (complain & tf_warning))\n+          && (complain & tf_warning)\n+\t  && c_inhibit_evaluation_warnings == 0)\n \t{\n \t  warn_for_sign_compare (location, orig_op0, orig_op1, op0, op1, \n \t\t\t\t result_type, resultcode);"}, {"sha": "cf0a4d9cccc2e718c01fa2df4304bc61456c7d32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "patch": "@@ -1,3 +1,7 @@\n+2009-06-25  Ian Lance Taylor  <iant@google.com>\n+\n+\t* g++.dg/warn/skip-2.C: New testcase.\n+\n 2009-06-25  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.c-torture/execute/20090618-1.c: add dg-run and"}, {"sha": "28f9049a9adc43ad472420c7793725dcc5f50879", "filename": "gcc/testsuite/g++.dg/warn/skip-2.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fskip-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f80e918ed957896fe0fd1cf0329aa8d2f68feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fskip-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fskip-2.C?ref=98f80e918ed957896fe0fd1cf0329aa8d2f68feb", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do compile }\n+// { dg-options \"-Wall\" }\n+\n+extern int f2(int);\n+extern void f3();\n+void\n+f1(int i)\n+{\n+  if (1 == 1 || f2(i >> -10))\n+    f3();\n+  if (1 == 1 || f2(i >> 128))\n+    f3();\n+  if (1 == 1 || f2(i << -10))\n+    f3();\n+  if (1 == 1 || f2(i << 128))\n+    f3();\n+  if (1 == 1 || i < 0xffffffff)\n+    f3();\n+  if (1 == 1 || i >= -0x80000000)\n+    f3();\n+  if (1 == 0 && f2(i >> -10))\n+    f3();\n+  if (1 == 0 && f2(i >> 128))\n+    f3();\n+  if (1 == 0 && f2(i << -10))\n+    f3();\n+  if (1 == 0 && f2(i << 128))\n+    f3();\n+  if (1 == 0 && i < 0xffffffff)\n+    f3();\n+  if (1 == 0 && i >= -0x80000000)\n+    f3();\n+  if (1 == 1 && f2(i >> -10))\t/* { dg-warning \"shift count is negative\" } */\n+    f3();\n+  if (1 == 0 || f2(i << -10))\t/* { dg-warning \"shift count is negative\" } */\n+    f3();\n+}"}]}