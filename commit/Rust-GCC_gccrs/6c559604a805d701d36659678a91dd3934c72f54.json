{"sha": "6c559604a805d701d36659678a91dd3934c72f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM1NTk2MDRhODA1ZDcwMWQzNjY1OTY3OGE5MWRkMzkzNGM3MmY1NA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2010-04-17T21:05:53Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2010-04-17T21:05:53Z"}, "message": "re PR fortran/31538 (misleading bounds check error)\n\n2010-04-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n   PR fortran/31538\n   * gfortran.dg/bounds_check_fail_4.f90: Adjust error message.\n   * gfortran.dg/bounds_check_fail_3.f90: Ditto.\n\n2010-04-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n   PR fortran/31538\n   * fortran/trans-array.c (gfc_conv_ss_startstride): Remove the use of\n   gfc_msg_bounds by using 'Array bound mismatch' directly.\n   (gfc_trans_dummy_array_bias):  Remove the use of gfc_msg_bounds.  Reword\n   error message to include the mismatch in the extent of array bound.\n   * fortran/trans.c: Remove gfc_msg_bounds.  It is only used in one place.\n   * fortran/trans.h: Remove extern definition of gfc_msg_bounds.\n\nFrom-SVN: r158474", "tree": {"sha": "845fbf8203fda73412490384debb7ae85d57924a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/845fbf8203fda73412490384debb7ae85d57924a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c559604a805d701d36659678a91dd3934c72f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c559604a805d701d36659678a91dd3934c72f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c559604a805d701d36659678a91dd3934c72f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c559604a805d701d36659678a91dd3934c72f54/comments", "author": null, "committer": null, "parents": [{"sha": "0e9496ccb9ac4082a7f80c4e568d48b92cbb2094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9496ccb9ac4082a7f80c4e568d48b92cbb2094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9496ccb9ac4082a7f80c4e568d48b92cbb2094"}], "stats": {"total": 53, "additions": 40, "deletions": 13}, "files": [{"sha": "377fe183f51e81a6dce903e61e90ef31afa93bfa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6c559604a805d701d36659678a91dd3934c72f54", "patch": "@@ -1,3 +1,13 @@\n+2010-04-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+   PR fortran/31538\n+   * fortran/trans-array.c (gfc_conv_ss_startstride): Remove the use of\n+   gfc_msg_bounds by using 'Array bound mismatch' directly.\n+   (gfc_trans_dummy_array_bias):  Remove the use of gfc_msg_bounds.  Reword\n+   error message to include the mismatch in the extent of array bound.\n+   * fortran/trans.c: Remove gfc_msg_bounds.  It is only used in one place.\n+   * fortran/trans.h: Remove extern definition of gfc_msg_bounds.\n+\n 2010-04-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* gfortran.texi: Update information on temporary file locations."}, {"sha": "b03cc9400c92649410a1a2baed89325791680d61", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6c559604a805d701d36659678a91dd3934c72f54", "patch": "@@ -3365,13 +3365,15 @@ gfc_conv_ss_startstride (gfc_loopinfo * loop)\n \t      if (size[n])\n \t\t{\n \t\t  tmp3 = fold_build2 (NE_EXPR, boolean_type_node, tmp, size[n]);\n-\t\t  asprintf (&msg, \"%s, size mismatch for dimension %d \"\n-\t\t\t    \"of array '%s' (%%ld/%%ld)\", gfc_msg_bounds,\n+\t\t  asprintf (&msg, \"Array bound mismatch for dimension %d \"\n+\t\t\t    \"of array '%s' (%%ld/%%ld)\",\n \t\t\t    info->dim[n]+1, ss->expr->symtree->name);\n+\n \t\t  gfc_trans_runtime_check (true, false, tmp3, &inner,\n \t\t\t\t\t   &ss->expr->where, msg,\n \t\t\tfold_convert (long_integer_type_node, tmp),\n \t\t\tfold_convert (long_integer_type_node, size[n]));\n+\n \t\t  gfc_free (msg);\n \t\t}\n \t      else\n@@ -4632,15 +4634,26 @@ gfc_trans_dummy_array_bias (gfc_symbol * sym, tree tmpdesc, tree body)\n \t    {\n \t      /* Check (ubound(a) - lbound(a) == ubound(b) - lbound(b)).  */\n \t      char * msg;\n+\t      tree temp;\n \n-\t      tmp = fold_build2 (MINUS_EXPR, gfc_array_index_type,\n-\t\t\t\t ubound, lbound);\n-              stride2 = fold_build2 (MINUS_EXPR, gfc_array_index_type,\n+\t      temp = fold_build2 (MINUS_EXPR, gfc_array_index_type,\n+\t\t\t\t  ubound, lbound);\n+\t      temp = fold_build2 (PLUS_EXPR, gfc_array_index_type,\n+\t\t\t\t  gfc_index_one_node, temp);\n+\n+\t      stride2 = fold_build2 (MINUS_EXPR, gfc_array_index_type,\n \t\t\t\t     dubound, dlbound);\n-              tmp = fold_build2 (NE_EXPR, gfc_array_index_type, tmp, stride2);\n-\t      asprintf (&msg, \"%s for dimension %d of array '%s'\",\n-\t\t\tgfc_msg_bounds, n+1, sym->name);\n-\t      gfc_trans_runtime_check (true, false, tmp, &block, &loc, msg);\n+\t      stride2 = fold_build2 (PLUS_EXPR, gfc_array_index_type,\n+\t\t\t\t     gfc_index_one_node, stride2);\n+\n+              tmp = fold_build2 (NE_EXPR, gfc_array_index_type, temp, stride2);\n+\t      asprintf (&msg, \"Dimension %d of array '%s' has extent \"\n+\t\t        \"%%ld instead of %%ld\", n+1, sym->name);\n+\n+\t      gfc_trans_runtime_check (true, false, tmp, &block, &loc, msg, \n+\t\t\tfold_convert (long_integer_type_node, temp),\n+\t\t\tfold_convert (long_integer_type_node, stride2));\n+\n \t      gfc_free (msg);\n \t    }\n \t}"}, {"sha": "21c56045a44f9d5f37a232a1b59fc311de50a445", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=6c559604a805d701d36659678a91dd3934c72f54", "patch": "@@ -47,7 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n \n static gfc_file *gfc_current_backend_file;\n \n-const char gfc_msg_bounds[] = N_(\"Array bound mismatch\");\n const char gfc_msg_fault[] = N_(\"Array reference out of bounds\");\n const char gfc_msg_wrong_return[] = N_(\"Incorrect function return value\");\n "}, {"sha": "91f1b7784d14555f8b4d080aaedfae6b37651b4f", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=6c559604a805d701d36659678a91dd3934c72f54", "patch": "@@ -773,7 +773,6 @@ void gfc_apply_interface_mapping (gfc_interface_mapping *,\n \n \n /* Standard error messages used in all the trans-*.c files.  */\n-extern const char gfc_msg_bounds[];\n extern const char gfc_msg_fault[];\n extern const char gfc_msg_wrong_return[];\n "}, {"sha": "a926c843534368d7fe4e99b9e4dc92c90b8b366d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c559604a805d701d36659678a91dd3934c72f54", "patch": "@@ -1,3 +1,9 @@\n+2010-04-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+   PR fortran/31538\n+   * gfortran.dg/bounds_check_fail_4.f90: Adjust error message.\n+   * gfortran.dg/bounds_check_fail_3.f90: Ditto.\n+\n 2010-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/sizetype.adb: Rename into..."}, {"sha": "ce4d0368d57e39a10e02cc794d83ebd84edababe", "filename": "gcc/testsuite/gfortran.dg/bounds_check_fail_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_3.f90?ref=6c559604a805d701d36659678a91dd3934c72f54", "patch": "@@ -9,4 +9,4 @@\n   if (any(x /= (/ 2, 2, 3, 4, 5, 6, 6, 8, 9, 10 /))) call abort()\n   x(8:1:m) = x(5:2:n) \n   end\n-! { dg-output \"line 10 .* bound mismatch, .* dimension 1 .* array \\'x\\' \\\\\\(3/2\\\\\\)\" }\n+! { dg-output \"line 10 .* bound mismatch .* dimension 1 .* array \\'x\\' \\\\\\(3/2\\\\\\)\" }"}, {"sha": "718d0058e4909c62875021bed683f5c69796b266", "filename": "gcc/testsuite/gfortran.dg/bounds_check_fail_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c559604a805d701d36659678a91dd3934c72f54/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_4.f90?ref=6c559604a805d701d36659678a91dd3934c72f54", "patch": "@@ -9,4 +9,4 @@\n   if (any(x /= (/ 5, 2, 3, 6, 5, 6, 7, 8, 9, 10 /))) call abort()\n   x(8:1:m) = x(1:3) + x(5:2:n) \n   end\n-! { dg-output \"line 10 .* bound mismatch, .* dimension 1 .* array \\'x\\' \\\\\\(2/3\\\\\\)\" }\n+! { dg-output \"line 10 .* bound mismatch .* dimension 1 .* array \\'x\\' \\\\\\(2/3\\\\\\)\" }"}]}