{"sha": "857d325a640ab62412800b36a89f82f0e424db68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU3ZDMyNWE2NDBhYjYyNDEyODAwYjM2YTg5ZjgyZjBlNDI0ZGI2OA==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2006-10-28T23:01:59Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-10-28T23:01:59Z"}, "message": "re PR c++/29295 (++ operator with bool typedef increments or operator -- with bool typedef)\n\n2006-10-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR C++/29295\n        * typeck.c (build_unary_op): Use same_type_p when comparing to\n        boolean type.\n\n2006-10-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR C++/29295\n        * g++.dg/expr/bool1.C: New test.\n        * g++.dg/expr/bool2.C: New test.\n\nFrom-SVN: r118118", "tree": {"sha": "e4029dbb2c86c3cba024f2ea381d85958738fc53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4029dbb2c86c3cba024f2ea381d85958738fc53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/857d325a640ab62412800b36a89f82f0e424db68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857d325a640ab62412800b36a89f82f0e424db68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/857d325a640ab62412800b36a89f82f0e424db68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857d325a640ab62412800b36a89f82f0e424db68/comments", "author": null, "committer": null, "parents": [{"sha": "85f37826c69cda5ca54fea63962b46ccd9f15c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85f37826c69cda5ca54fea63962b46ccd9f15c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85f37826c69cda5ca54fea63962b46ccd9f15c1b"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "e7bf59f5a14bfedda1107f3e162f465eec3e8e82", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=857d325a640ab62412800b36a89f82f0e424db68", "patch": "@@ -1,3 +1,9 @@\n+2006-10-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR C++/29295\n+\t* typeck.c (build_unary_op): Use same_type_p when comparing to \n+\tboolean type.\n+\n 2006-10-29  Dirk Mueller  <dmueller@suse.de>\n \n \tPR c++/29033"}, {"sha": "0094323db753ce6a7eb98dd5c8e224a3a33ae101", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=857d325a640ab62412800b36a89f82f0e424db68", "patch": "@@ -4192,7 +4192,7 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n \t  return error_mark_node;\n \n \t/* Forbid using -- on `bool'.  */\n-\tif (TREE_TYPE (arg) == boolean_type_node)\n+\tif (same_type_p (TREE_TYPE (arg), boolean_type_node))\n \t  {\n \t    if (code == POSTDECREMENT_EXPR || code == PREDECREMENT_EXPR)\n \t      {"}, {"sha": "bec28c524bf92f1686e6343b17c25519fc76c7d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=857d325a640ab62412800b36a89f82f0e424db68", "patch": "@@ -1,3 +1,9 @@\n+2006-10-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR C++/29295\n+\t* g++.dg/expr/bool1.C: New test.\n+\t* g++.dg/expr/bool2.C: New test.\n+\n 2006-10-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/28224 "}, {"sha": "bfb40e33092fa4bb1873bbee35374c441062de93", "filename": "gcc/testsuite/g++.dg/expr/bool1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool1.C?ref=857d325a640ab62412800b36a89f82f0e424db68", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do run }\n+// PR C++/29295\n+// make sure that a typedef for a bool will have the\n+//  the same results as a bool itself.\n+\n+extern \"C\" void abort();\n+typedef bool my_bool;\n+int main()\n+{ \n+  my_bool b = false;\n+  int i;\n+\n+  b++;\n+  b++;\n+  i = b;\n+  if (i != 1)\n+    abort ();\n+  return 0;\n+}\n+\n+"}, {"sha": "39d93c0af9d920e5d5c7e1cd734b0255e295f215", "filename": "gcc/testsuite/g++.dg/expr/bool2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857d325a640ab62412800b36a89f82f0e424db68/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbool2.C?ref=857d325a640ab62412800b36a89f82f0e424db68", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// make sure that a typedef for a bool will have the\n+//  the same results as a bool itself.\n+\n+\n+typedef bool my_bool;\n+int main()\n+{\n+  my_bool b = false;\n+  b--; // { dg-error \"\" }\n+  return 0;\n+}\n+"}]}