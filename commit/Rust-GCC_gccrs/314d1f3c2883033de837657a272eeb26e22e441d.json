{"sha": "314d1f3c2883033de837657a272eeb26e22e441d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE0ZDFmM2MyODgzMDMzZGU4Mzc2NTdhMjcyZWViMjZlMjJlNDQxZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-19T12:44:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-19T12:44:11Z"}, "message": "(move_for_stack_reg): Avoid stack overflow while storing XFmode from\nfp reg to memory.\n\nFrom-SVN: r11564", "tree": {"sha": "18257c82dc0c34db56b22f5746516d954cfbb7eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18257c82dc0c34db56b22f5746516d954cfbb7eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/314d1f3c2883033de837657a272eeb26e22e441d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/314d1f3c2883033de837657a272eeb26e22e441d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/314d1f3c2883033de837657a272eeb26e22e441d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/314d1f3c2883033de837657a272eeb26e22e441d/comments", "author": null, "committer": null, "parents": [{"sha": "7a1b98a901d0a6dba4b7ee759963d04c71d13f8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1b98a901d0a6dba4b7ee759963d04c71d13f8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1b98a901d0a6dba4b7ee759963d04c71d13f8c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "65b93927a8f1e0363813e586e93f096956cb190c", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/314d1f3c2883033de837657a272eeb26e22e441d/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/314d1f3c2883033de837657a272eeb26e22e441d/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=314d1f3c2883033de837657a272eeb26e22e441d", "patch": "@@ -1904,7 +1904,7 @@ move_for_stack_reg (insn, regstack, pat)\n \t  regstack->top--;\n \t  CLEAR_HARD_REG_BIT (regstack->reg_set, REGNO (src));\n \t}\n-      else if (GET_MODE (src) == XFmode && regstack->top != REG_STACK_SIZE)\n+      else if (GET_MODE (src) == XFmode && regstack->top < REG_STACK_SIZE - 1)\n \t{\n \t  /* A 387 cannot write an XFmode value to a MEM without\n \t     clobbering the source reg.  The output code can handle"}]}