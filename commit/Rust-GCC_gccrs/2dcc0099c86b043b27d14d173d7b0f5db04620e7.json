{"sha": "2dcc0099c86b043b27d14d173d7b0f5db04620e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRjYzAwOTljODZiMDQzYjI3ZDE0ZDE3M2Q3YjBmNWRiMDQ2MjBlNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-06-26T10:45:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-06-26T10:45:31Z"}, "message": "base.h (plus, multiplies): Use __typeof__, not typeof.\n\n2008-06-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/parallel/base.h (plus, multiplies): Use __typeof__,\n\tnot typeof.\n\nFrom-SVN: r137145", "tree": {"sha": "6b679cc04f6154c8816f1046e297464799060d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b679cc04f6154c8816f1046e297464799060d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dcc0099c86b043b27d14d173d7b0f5db04620e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcc0099c86b043b27d14d173d7b0f5db04620e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dcc0099c86b043b27d14d173d7b0f5db04620e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcc0099c86b043b27d14d173d7b0f5db04620e7/comments", "author": null, "committer": null, "parents": [{"sha": "b4b010ad85aef0090fce80cb646da96a067598f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b010ad85aef0090fce80cb646da96a067598f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4b010ad85aef0090fce80cb646da96a067598f2"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "b159b9ef602ccd0296c5ba8a6168b14bc8159f58", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dcc0099c86b043b27d14d173d7b0f5db04620e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dcc0099c86b043b27d14d173d7b0f5db04620e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2dcc0099c86b043b27d14d173d7b0f5db04620e7", "patch": "@@ -1,3 +1,8 @@\n+2008-06-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/parallel/base.h (plus, multiplies): Use __typeof__,\n+\tnot typeof.\n+\n 2008-06-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/29_atomics/atomic_flag/cons/default.cc: Avoid -Wall"}, {"sha": "54c26d8ca6d58d2bf1c66545d9d27555abd0f754", "filename": "libstdc++-v3/include/parallel/base.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dcc0099c86b043b27d14d173d7b0f5db04620e7/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dcc0099c86b043b27d14d173d7b0f5db04620e7/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h?ref=2dcc0099c86b043b27d14d173d7b0f5db04620e7", "patch": "@@ -287,8 +287,8 @@ struct less<_Tp, _Tp> : public std::binary_function<_Tp, _Tp, bool>\n template<typename _Tp1, typename _Tp2>\n   struct plus : public std::binary_function<_Tp1, _Tp2, _Tp1>\n   {\n-    typedef typeof(*static_cast<_Tp1*>(NULL)\n-                    + *static_cast<_Tp2*>(NULL)) result;\n+    typedef __typeof__(*static_cast<_Tp1*>(NULL)\n+\t\t       + *static_cast<_Tp2*>(NULL)) result;\n \n     result\n     operator()(const _Tp1& __x, const _Tp2& __y) const\n@@ -299,8 +299,8 @@ template<typename _Tp1, typename _Tp2>\n template<typename _Tp>\n   struct plus<_Tp, _Tp> : public std::binary_function<_Tp, _Tp, _Tp>\n   {\n-    typedef typeof(*static_cast<_Tp*>(NULL)\n-                    + *static_cast<_Tp*>(NULL)) result;\n+    typedef __typeof__(*static_cast<_Tp*>(NULL)\n+\t\t       + *static_cast<_Tp*>(NULL)) result;\n \n     result\n     operator()(const _Tp& __x, const _Tp& __y) const\n@@ -312,8 +312,8 @@ template<typename _Tp>\n template<typename _Tp1, typename _Tp2>\n   struct multiplies : public std::binary_function<_Tp1, _Tp2, _Tp1>\n   {\n-    typedef typeof(*static_cast<_Tp1*>(NULL)\n-                    * *static_cast<_Tp2*>(NULL)) result;\n+    typedef __typeof__(*static_cast<_Tp1*>(NULL)\n+\t\t       * *static_cast<_Tp2*>(NULL)) result;\n \n     result\n     operator()(const _Tp1& __x, const _Tp2& __y) const\n@@ -324,8 +324,8 @@ template<typename _Tp1, typename _Tp2>\n template<typename _Tp>\n   struct multiplies<_Tp, _Tp> : public std::binary_function<_Tp, _Tp, _Tp>\n   {\n-    typedef typeof(*static_cast<_Tp*>(NULL)\n-                    * *static_cast<_Tp*>(NULL)) result;\n+    typedef __typeof__(*static_cast<_Tp*>(NULL)\n+\t\t       * *static_cast<_Tp*>(NULL)) result;\n \n     result\n     operator()(const _Tp& __x, const _Tp& __y) const"}]}