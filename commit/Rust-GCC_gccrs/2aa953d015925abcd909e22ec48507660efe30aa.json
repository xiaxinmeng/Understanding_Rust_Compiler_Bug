{"sha": "2aa953d015925abcd909e22ec48507660efe30aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhOTUzZDAxNTkyNWFiY2Q5MDllMjJlYzQ4NTA3NjYwZWZlMzBhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-11T16:22:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-11T16:22:16Z"}, "message": "re PR c++/56567 (ICE with lambda return type deduction and braced-init-list)\n\n\tPR c++/56567\n\t* typeck.c (check_return_expr): Disallow returning init list here.\n\t* semantics.c (apply_deduced_return_type): Not here.\n\nFrom-SVN: r196600", "tree": {"sha": "332df0e3a9078669a945c39ac9b4b3946236dab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/332df0e3a9078669a945c39ac9b4b3946236dab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aa953d015925abcd909e22ec48507660efe30aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa953d015925abcd909e22ec48507660efe30aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aa953d015925abcd909e22ec48507660efe30aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa953d015925abcd909e22ec48507660efe30aa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a036a589fa67d491e1698e79531872c6fcf1fd44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a036a589fa67d491e1698e79531872c6fcf1fd44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a036a589fa67d491e1698e79531872c6fcf1fd44"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "c728c50c587ef6fc39f290f6481420ff8da058f3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2aa953d015925abcd909e22ec48507660efe30aa", "patch": "@@ -1,3 +1,9 @@\n+2013-03-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56567\n+\t* typeck.c (check_return_expr): Disallow returning init list here.\n+\t* semantics.c (apply_deduced_return_type): Not here.\n+\n 2013-03-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51412"}, {"sha": "e909b984681024d48162adf3023902a39665af77", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=2aa953d015925abcd909e22ec48507660efe30aa", "patch": "@@ -9061,12 +9061,6 @@ apply_deduced_return_type (tree fco, tree return_type)\n   if (return_type == error_mark_node)\n     return;\n \n-  if (is_std_init_list (return_type))\n-    {\n-      error (\"returning %qT\", return_type);\n-      return_type = void_type_node;\n-    }\n-\n   if (LAMBDA_FUNCTION_P (fco))\n     {\n       tree lambda = CLASSTYPE_LAMBDA_EXPR (current_class_type);"}, {"sha": "58ebcc0ab2d1b7d52ba2d4077138d9755c5ce1e2", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=2aa953d015925abcd909e22ec48507660efe30aa", "patch": "@@ -8136,6 +8136,11 @@ check_return_expr (tree retval, bool *no_warning)\n \t\t  \"deduced to %<void%>\");\n \t  type = error_mark_node;\n \t}\n+      else if (retval && BRACE_ENCLOSED_INITIALIZER_P (retval))\n+\t{\n+\t  error (\"returning initializer list\");\n+\t  type = error_mark_node;\n+\t}\n       else\n \t{\n \t  if (!retval)"}, {"sha": "f7b82efe97c902f6dae043fd791d5c04d37411f3", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-initlist3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-initlist3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa953d015925abcd909e22ec48507660efe30aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-initlist3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-initlist3.C?ref=2aa953d015925abcd909e22ec48507660efe30aa", "patch": "@@ -5,7 +5,7 @@\n \n int main()\n {\n-  []{ return { 1, 2 }; }();\t// { dg-error \"initializer_list\" }\n+  []{ return { 1, 2 }; }();\t// { dg-error \"initializer.list\" }\n }\n \n // { dg-prune-output \"return-statement with a value\" }"}]}