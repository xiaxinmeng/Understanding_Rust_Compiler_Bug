{"sha": "cfed471a5612a925d55dae4085aa10d230bf4494", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZlZDQ3MWE1NjEyYTkyNWQ1NWRhZTQwODVhYTEwZDIzMGJmNDQ5NA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2019-02-22T16:38:43Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-02-22T16:38:43Z"}, "message": "re PR rtl-optimization/87761 ([MIPS] New FAIL: gcc.target/mips/fix-r4000-10.c   -O1 start with r265398)\n\n\tPR rtl-optimization/87761\n\t* config/mips/mips.md: Add new combiner pattern to recognize\n\ta bitfield extraction using (ashiftrt (truncate (ashift (...)))).\n\nFrom-SVN: r269123", "tree": {"sha": "d087a0bc8ca4e34b63b824a05c0c50ff43fa715e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d087a0bc8ca4e34b63b824a05c0c50ff43fa715e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfed471a5612a925d55dae4085aa10d230bf4494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfed471a5612a925d55dae4085aa10d230bf4494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfed471a5612a925d55dae4085aa10d230bf4494", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfed471a5612a925d55dae4085aa10d230bf4494/comments", "author": null, "committer": null, "parents": [{"sha": "341fca1b4982c93a7c6cce90b0e0f84f92a35146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/341fca1b4982c93a7c6cce90b0e0f84f92a35146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/341fca1b4982c93a7c6cce90b0e0f84f92a35146"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "64dcda2560f3deea241e84a4784d687bd60f1e20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfed471a5612a925d55dae4085aa10d230bf4494/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfed471a5612a925d55dae4085aa10d230bf4494/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfed471a5612a925d55dae4085aa10d230bf4494", "patch": "@@ -1,3 +1,9 @@\n+2019-02-22  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/87761\n+\t* config/mips/mips.md: Add new combiner pattern to recognize\n+\ta bitfield extraction using (ashiftrt (truncate (ashift (...)))).\n+\n 2019-02-22  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \tPR target/89324"}, {"sha": "2ae1f7e0440b147d513cb5a6188d548d821d9f47", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfed471a5612a925d55dae4085aa10d230bf4494/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfed471a5612a925d55dae4085aa10d230bf4494/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=cfed471a5612a925d55dae4085aa10d230bf4494", "patch": "@@ -3502,6 +3502,47 @@\n   \"exts\\t%0,%1,%2,31\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"<MODE>\")])\n+\n+;; This could likely be generalized for any SUBDI mode, and any right\n+;; shift, but AFAICT this is used so rarely it is not worth the additional\n+;; complexity.\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (ashiftrt:SI\n+\t  (truncate:SI\n+\t    (ashift:DI (match_operand:DI 1 \"register_operand\" \"d\")\n+\t\t       (match_operand:DI 2 \"const_arith_operand\" \"\")))\n+\t  (match_operand:DI 3 \"const_arith_operand\" \"\")))]\n+  \"(ISA_HAS_EXTS && TARGET_64BIT\n+    && UINTVAL (operands[2]) < 32 && UINTVAL (operands[3]) < 32\n+    && UINTVAL (operands[3]) >= UINTVAL (operands[2]))\"\n+  {\n+    rtx xoperands[4];\n+    xoperands[0] = operands[0];\n+    xoperands[1] = operands[1];\n+\n+    /* The length of the field is the size of the outer mode less the outer\n+       shift constant.  We fix the outer mode as SImode for simplicity.  */\n+    unsigned int right_shift = INTVAL (operands[3]);\n+    xoperands[3] = GEN_INT (32 - right_shift);\n+\n+    /* The field starts at the outer shift constant less the inner shift\n+       constant.  */\n+    unsigned int left_shift = INTVAL (operands[2]);\n+    xoperands[2] = GEN_INT (right_shift - left_shift);\n+\n+    /* Sanity checks.  These constraints are taken from the MIPS ISA\n+       manual.  */\n+    gcc_assert (INTVAL (xoperands[2]) >= 0 && INTVAL (xoperands[2]) < 32);\n+    gcc_assert (INTVAL (xoperands[3]) > 0 && INTVAL (xoperands[3]) <= 32);\n+    gcc_assert (INTVAL (xoperands[2]) + INTVAL (xoperands[3]) > 0\n+\t\t&& INTVAL (xoperands[2]) + INTVAL (xoperands[3]) <= 32);\n+\n+    output_asm_insn (\"exts\\t%0,%1,%2,%m3\", xoperands);\n+    return \"\";\n+  }\n+  [(set_attr \"type\" \"arith\")\n+   (set_attr \"mode\" \"SI\")])\n \f\n ;;\n ;;  ...................."}]}