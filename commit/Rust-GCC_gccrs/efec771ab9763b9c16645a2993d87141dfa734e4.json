{"sha": "efec771ab9763b9c16645a2993d87141dfa734e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlYzc3MWFiOTc2M2I5YzE2NjQ1YTI5OTNkODcxNDFkZmE3MzRlNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-08-15T17:44:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-08-15T17:44:11Z"}, "message": "re PR debug/50006 (ICE in in connect_traces, at dwarf2cfi.c:2677)\n\nPR middle-end/50006\n        * explow.c (allocate_dynamic_stack_space): Move suppress_reg_args_size\n        setting out to include allocate_stack named pattern as well.\n        * builtins.c (expand_builtin_apply): Add ARG_SIZE 0 note.\n        * stmt.c (expand_stack_restore): Likewise.\n\nFrom-SVN: r177764", "tree": {"sha": "634a8f76344cab7adcd401a279a6f11669e6bfca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/634a8f76344cab7adcd401a279a6f11669e6bfca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efec771ab9763b9c16645a2993d87141dfa734e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efec771ab9763b9c16645a2993d87141dfa734e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efec771ab9763b9c16645a2993d87141dfa734e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efec771ab9763b9c16645a2993d87141dfa734e4/comments", "author": null, "committer": null, "parents": [{"sha": "6ea9122292ed4ec58af1656e65dc381bbb24c1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea9122292ed4ec58af1656e65dc381bbb24c1ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea9122292ed4ec58af1656e65dc381bbb24c1ef"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "811c0899bb0b08405980017f916e16f7b36c3d43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efec771ab9763b9c16645a2993d87141dfa734e4", "patch": "@@ -1,3 +1,11 @@\n+2011-08-15  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/50006\n+\t* explow.c (allocate_dynamic_stack_space): Move suppress_reg_args_size\n+\tsetting out to include allocate_stack named pattern as well.\n+\t* builtins.c (expand_builtin_apply): Add ARG_SIZE 0 note.\n+\t* stmt.c (expand_stack_restore): Likewise.\n+\n 2011-08-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/50082"}, {"sha": "da86b8c9ca968cf0d4a9228e2dbe9a288014e5c5", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=efec771ab9763b9c16645a2993d87141dfa734e4", "patch": "@@ -1680,6 +1680,7 @@ expand_builtin_apply (rtx function, rtx arguments, rtx argsize)\n   else\n #endif\n     emit_stack_restore (SAVE_BLOCK, old_stack_level);\n+  fixup_args_size_notes (call_insn, get_last_insn(), 0);\n \n   OK_DEFER_POP;\n "}, {"sha": "beeab44e8ac47e53c6fd4e098ecf31da82db1362", "filename": "gcc/explow.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=efec771ab9763b9c16645a2993d87141dfa734e4", "patch": "@@ -1375,6 +1375,9 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n   else if (flag_stack_check == STATIC_BUILTIN_STACK_CHECK)\n     probe_stack_range (STACK_CHECK_PROTECT, size);\n \n+  /* Don't let anti_adjust_stack emit notes.  */\n+  suppress_reg_args_size = true;\n+\n   /* Perform the required allocation from the stack.  Some systems do\n      this differently than simply incrementing/decrementing from the\n      stack pointer, such as acquiring the space by calling malloc().  */\n@@ -1425,7 +1428,6 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n \t}\n \n       saved_stack_pointer_delta = stack_pointer_delta;\n-      suppress_reg_args_size = true;\n \n       if (flag_stack_check && STACK_CHECK_MOVING_SP)\n \tanti_adjust_stack_and_probe (size, false);\n@@ -1436,13 +1438,14 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n \t The constant size alloca should preserve\n \t crtl->preferred_stack_boundary alignment.  */\n       stack_pointer_delta = saved_stack_pointer_delta;\n-      suppress_reg_args_size = false;\n \n #ifdef STACK_GROWS_DOWNWARD\n       emit_move_insn (target, virtual_stack_dynamic_rtx);\n #endif\n     }\n \n+  suppress_reg_args_size = false;\n+\n   /* Finish up the split stack handling.  */\n   if (final_label != NULL_RTX)\n     {"}, {"sha": "be21a5708cf10bda426f708c232dca58f069a551", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efec771ab9763b9c16645a2993d87141dfa734e4/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=efec771ab9763b9c16645a2993d87141dfa734e4", "patch": "@@ -2016,10 +2016,13 @@ expand_stack_save (void)\n void\n expand_stack_restore (tree var)\n {\n-  rtx sa = expand_normal (var);\n+  rtx prev, sa = expand_normal (var);\n \n   sa = convert_memory_address (Pmode, sa);\n+\n+  prev = get_last_insn ();\n   emit_stack_restore (SAVE_BLOCK, sa);\n+  fixup_args_size_notes (prev, get_last_insn (), 0);\n }\n \f\n /* Do the insertion of a case label into case_list.  The labels are"}]}