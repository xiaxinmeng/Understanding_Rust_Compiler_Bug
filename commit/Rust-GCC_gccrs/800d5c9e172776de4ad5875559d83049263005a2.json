{"sha": "800d5c9e172776de4ad5875559d83049263005a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwZDVjOWUxNzI3NzZkZTRhZDU4NzU1NTlkODMwNDkyNjMwMDVhMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-07-06T22:40:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-06T22:40:02Z"}, "message": "print-rtl.c (print_rtx): Display the real-value equivalent of a const_double when easy.\n\n        * print-rtl.c (print_rtx): Display the real-value equivalent of\n        a const_double when easy.\n        * real.h (REAL_VALUE_TO_TARGET_SINGLE): Use a union to pun types.\n        Zero memory first for predictability.\n        (REAL_VALUE_TO_TARGET_DOUBLE): Likewise.\n        * varasm.c (immed_real_const_1): Notice width of H_W_I == double.\n\nFrom-SVN: r20972", "tree": {"sha": "ef4e4031500c7bf6540c60822a29018f4e226818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef4e4031500c7bf6540c60822a29018f4e226818"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/800d5c9e172776de4ad5875559d83049263005a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800d5c9e172776de4ad5875559d83049263005a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800d5c9e172776de4ad5875559d83049263005a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800d5c9e172776de4ad5875559d83049263005a2/comments", "author": null, "committer": null, "parents": [{"sha": "4051959be99ddba084673788892d3e26bac13621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4051959be99ddba084673788892d3e26bac13621", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4051959be99ddba084673788892d3e26bac13621"}], "stats": {"total": 62, "additions": 46, "deletions": 16}, "files": [{"sha": "191f40277694f284e1aef619b7f93eea1c61aaa3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800d5c9e172776de4ad5875559d83049263005a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800d5c9e172776de4ad5875559d83049263005a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=800d5c9e172776de4ad5875559d83049263005a2", "patch": "@@ -29,6 +29,14 @@ Mon Jul  6 22:17:19 1998  Alasdair Baird\t<alasdair@wildcat.demon.co.uk>\n \n Mon Jul  6 22:14:31 1998  Richard Henderson  (rth@cygnus.com)\n \n+\t* print-rtl.c (print_rtx): Display the real-value equivalent of\n+\ta const_double when easy.\n+\n+\t* real.h (REAL_VALUE_TO_TARGET_SINGLE): Use a union to pun types.\n+\tZero memory first for predictability.\n+\t(REAL_VALUE_TO_TARGET_DOUBLE): Likewise.\n+\t* varasm.c (immed_real_const_1): Notice width of H_W_I == double.\n+\n \t* regclass.c (allocate_reg_info): Initialize the entire reg_data\n \tvirtual array.\n "}, {"sha": "893c0018b58bf6c230b557a5eb8066806e5603d6", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800d5c9e172776de4ad5875559d83049263005a2/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800d5c9e172776de4ad5875559d83049263005a2/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=800d5c9e172776de4ad5875559d83049263005a2", "patch": "@@ -23,6 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"rtl.h\"\n #include \"bitmap.h\"\n+#include \"real.h\"\n \n \n /* How to print out a register name.\n@@ -268,6 +269,15 @@ print_rtx (in_rtx)\n \tabort ();\n       }\n \n+#if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT\n+  if (GET_CODE (in_rtx) == CONST_DOUBLE && FLOAT_MODE_P (GET_MODE (in_rtx)))\n+    {\n+      double val;\n+      REAL_VALUE_FROM_CONST_DOUBLE (val, in_rtx);\n+      fprintf (outfile, \" [%.16g]\", val);\n+    }\n+#endif\n+\n   fprintf (outfile, \")\");\n   sawclose = 1;\n }"}, {"sha": "0719c26654d1c4672cabc4970645a8e947db3e65", "filename": "gcc/real.h", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800d5c9e172776de4ad5875559d83049263005a2/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800d5c9e172776de4ad5875559d83049263005a2/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=800d5c9e172776de4ad5875559d83049263005a2", "patch": "@@ -264,29 +264,39 @@ typedef struct {\n    value in host format and then to a single type `long' value which\n    is the bitwise equivalent of the `float' value.  */\n #ifndef REAL_VALUE_TO_TARGET_SINGLE\n-#define REAL_VALUE_TO_TARGET_SINGLE(IN, OUT)\t\t\t\t\\\n-do { float f = (float) (IN);\t\t\t\t\t\t\\\n-     (OUT) = *(long *) &f;\t\t\t\t\t\t\\\n-   } while (0)\n+#define REAL_VALUE_TO_TARGET_SINGLE(IN, OUT)\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  union {\t\t\t\t\t\t\\\n+    float f;\t\t\t\t\t\t\\\n+    HOST_WIDE_INT l;\t\t\t\t\t\\\n+  } u;\t\t\t\t\t\t\t\\\n+  if (sizeof(HOST_WIDE_INT) < sizeof(float))\t\t\\\n+    abort();\t\t\t\t\t\t\\\n+  u.l = 0;\t\t\t\t\t\t\\\n+  u.f = (IN);\t\t\t\t\t\t\\\n+  (OUT) = u.l;\t\t\t\t\t\t\\\n+} while (0)\n #endif\n \n /* Convert a type `double' value in host format to a pair of type `long'\n    values which is its bitwise equivalent, but put the two words into\n    proper word order for the target.  */\n #ifndef REAL_VALUE_TO_TARGET_DOUBLE\n #define REAL_VALUE_TO_TARGET_DOUBLE(IN, OUT)\t\t\t\t\\\n-do { REAL_VALUE_TYPE in = (IN);  /* Make sure it's not in a register.  */\\\n-     if (HOST_FLOAT_WORDS_BIG_ENDIAN == FLOAT_WORDS_BIG_ENDIAN)\t\t\\\n-       {\t\t\t\t\t\t\t\t\\\n-\t (OUT)[0] = ((long *) &in)[0];\t\t\t\t\t\\\n-\t (OUT)[1] = ((long *) &in)[1];\t\t\t\t\t\\\n-       }\t\t\t\t\t\t\t\t\\\n-     else\t\t\t\t\t\t\t\t\\\n-       {\t\t\t\t\t\t\t\t\\\n-\t (OUT)[1] = ((long *) &in)[0];\t\t\t\t\t\\\n-\t (OUT)[0] = ((long *) &in)[1];\t\t\t\t\t\\\n-       }\t\t\t\t\t\t\t\t\\\n-   } while (0)\n+do {\t\t\t\t\t\t\t\t\t\\\n+  union {\t\t\t\t\t\t\t\t\\\n+    REAL_VALUE_TYPE f;\t\t\t\t\t\t\t\\\n+    HOST_WIDE_INT l[2];\t\t\t\t\t\t\t\\\n+  } u;\t\t\t\t\t\t\t\t\t\\\n+  if (sizeof(HOST_WIDE_INT) * 2 < sizeof(REAL_VALUE_TYPE))\t\t\\\n+    abort();\t\t\t\t\t\t\t\t\\\n+  u.l[0] = u.l[1] = 0;\t\t\t\t\t\t\t\\\n+  u.f = (IN);\t\t\t\t\t\t\t\t\\\n+  if (HOST_FLOAT_WORDS_BIG_ENDIAN == FLOAT_WORDS_BIG_ENDIAN)\t\t\\\n+    (OUT)[0] = u.l[0], (OUT)[1] = u.l[1];\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    (OUT)[1] = u.l[0], (OUT)[0] = u.l[1];\t\t\t\t\\\n+} while (0)\n #endif\n #endif /* HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT */\n "}, {"sha": "39e09c76f22c97e5da27079652766dad23ab6669", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800d5c9e172776de4ad5875559d83049263005a2/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800d5c9e172776de4ad5875559d83049263005a2/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=800d5c9e172776de4ad5875559d83049263005a2", "patch": "@@ -2070,6 +2070,8 @@ immed_real_const_1 (d, mode)\n   else if (! REAL_VALUE_ISNAN (d) && REAL_VALUES_EQUAL (dconst1, d))\n     return CONST1_RTX (mode);\n \n+  if (sizeof u == sizeof (HOST_WIDE_INT))\n+    return immed_double_const (u.i[0], 0, mode);\n   if (sizeof u == 2 * sizeof (HOST_WIDE_INT))\n     return immed_double_const (u.i[0], u.i[1], mode);\n "}]}