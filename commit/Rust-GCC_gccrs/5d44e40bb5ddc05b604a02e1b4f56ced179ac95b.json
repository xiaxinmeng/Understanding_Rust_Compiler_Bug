{"sha": "5d44e40bb5ddc05b604a02e1b4f56ced179ac95b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ0NGU0MGJiNWRkYzA1YjYwNGEwMmUxYjRmNTZjZWQxNzlhYzk1Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-08-11T22:45:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-08-11T22:45:32Z"}, "message": "compiler: Handle newlines in general comments.\n\n    \n    On comments, the specification says\n    (http://golang.org/ref/spec#Comments): General comments start with the\n    character sequence /* and continue through the character sequence */.\n    A general comment containing one or more newlines acts like a newline,\n    otherwise it acts like a space.\n    \n    Fixes golang/go#11528.\n    \n    Reviewed-on: https://go-review.googlesource.com/13064\n\nFrom-SVN: r226794", "tree": {"sha": "a24af8ccbfaeeeb01a92f6f7b3154cfa428eebc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a24af8ccbfaeeeb01a92f6f7b3154cfa428eebc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b/comments", "author": null, "committer": null, "parents": [{"sha": "63ab94b6d5d732161780c68fce775bd23f8e2a99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63ab94b6d5d732161780c68fce775bd23f8e2a99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63ab94b6d5d732161780c68fce775bd23f8e2a99"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "2cbe25ce606ba77573e2b1b67f2d8bbbdbdd8191", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=5d44e40bb5ddc05b604a02e1b4f56ced179ac95b", "patch": "@@ -1,4 +1,4 @@\n-3bd90ea170b9c9aecedd37796acdd2712b29922b\n+3b590ff53700963c1b8207a78594138e6a4e47f4\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "8de94c5114b726d6270c4e16e7a7a554d4b2a2b3", "filename": "gcc/go/gofrontend/lex.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b/gcc%2Fgo%2Fgofrontend%2Flex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b/gcc%2Fgo%2Fgofrontend%2Flex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Flex.cc?ref=5d44e40bb5ddc05b604a02e1b4f56ced179ac95b", "patch": "@@ -600,8 +600,14 @@ Lex::next_token()\n \t\t{\n \t\t  this->lineoff_ = p + 2 - this->linebuf_;\n \t\t  Location location = this->location();\n-\t\t  if (!this->skip_c_comment())\n+                  bool found_newline = false;\n+\t\t  if (!this->skip_c_comment(&found_newline))\n \t\t    return Token::make_invalid_token(location);\n+                  if (found_newline && this->add_semi_at_eol_)\n+                    {\n+                      this->add_semi_at_eol_ = false;\n+                      return this->make_operator(OPERATOR_SEMICOLON, 1);\n+                    }\n \t\t  p = this->linebuf_ + this->lineoff_;\n \t\t  pend = this->linebuf_ + this->linesize_;\n \t\t}\n@@ -1621,7 +1627,7 @@ Lex::one_character_operator(char c)\n // Skip a C-style comment.\n \n bool\n-Lex::skip_c_comment()\n+Lex::skip_c_comment(bool* found_newline)\n {\n   while (true)\n     {\n@@ -1642,6 +1648,9 @@ Lex::skip_c_comment()\n \t      return true;\n \t    }\n \n+          if (p[0] == '\\n')\n+            *found_newline = true;\n+\n \t  this->lineoff_ = p - this->linebuf_;\n \t  unsigned int c;\n \t  bool issued_error;"}, {"sha": "3e0152aaf2d76ce4e056a0a6d4dc1b4474900c5a", "filename": "gcc/go/gofrontend/lex.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b/gcc%2Fgo%2Fgofrontend%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d44e40bb5ddc05b604a02e1b4f56ced179ac95b/gcc%2Fgo%2Fgofrontend%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Flex.h?ref=5d44e40bb5ddc05b604a02e1b4f56ced179ac95b", "patch": "@@ -469,7 +469,7 @@ class Lex\n   one_character_operator(char);\n \n   bool\n-  skip_c_comment();\n+  skip_c_comment(bool* found_newline);\n \n   void\n   skip_cpp_comment();"}]}