{"sha": "29c1593246765176943b642021fb0be67d25be76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljMTU5MzI0Njc2NTE3Njk0M2I2NDIwMjFmYjBiZTY3ZDI1YmU3Ng==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-05-31T21:40:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-05-31T21:40:25Z"}, "message": "mips.c (mips_expand_builtin_insn): Swap the 1st and 3rd operands of the fmadd/fmsub/maddv builtin.\n\n\t* config/mips/mips.c (mips_expand_builtin_insn): Swap the 1st\n\tand 3rd operands of the fmadd/fmsub/maddv builtin.\n\n\t* gcc.target/mips/msa-fmadd.c: New.\n\nFrom-SVN: r271826", "tree": {"sha": "51ca5ac9d299532157d03bd11e29a14df3d81e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ca5ac9d299532157d03bd11e29a14df3d81e18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29c1593246765176943b642021fb0be67d25be76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c1593246765176943b642021fb0be67d25be76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c1593246765176943b642021fb0be67d25be76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c1593246765176943b642021fb0be67d25be76/comments", "author": null, "committer": null, "parents": [{"sha": "e7393c8936b9cfb1a28f7e16043c107490491ba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7393c8936b9cfb1a28f7e16043c107490491ba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7393c8936b9cfb1a28f7e16043c107490491ba4"}], "stats": {"total": 124, "additions": 124, "deletions": 0}, "files": [{"sha": "e0a6acefdf0ac0de0687787e5aebe34654baa12e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c1593246765176943b642021fb0be67d25be76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c1593246765176943b642021fb0be67d25be76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29c1593246765176943b642021fb0be67d25be76", "patch": "@@ -1,3 +1,9 @@\n+2019-05-31  Prachi Godbole  <prachi.godbole@imgtec.com>\n+            Robert Suchanek  <robert.suchanek@mips.com>\n+\n+\t* config/mips/mips.c (mips_expand_builtin_insn): Swap the 1st\n+\tand 3rd operands of the fmadd/fmsub/maddv builtin.\n+\n 2019-05-31  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree.h (OMP_CLAUSE__CONDTEMP__ITER): Define."}, {"sha": "c6433dca1155ea1cc2fe8e3510390f7559dbdaa3", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c1593246765176943b642021fb0be67d25be76/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c1593246765176943b642021fb0be67d25be76/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=29c1593246765176943b642021fb0be67d25be76", "patch": "@@ -16867,6 +16867,19 @@ mips_expand_builtin_insn (enum insn_code icode, unsigned int nops,\n       std::swap (ops[1], ops[2]);\n       break;\n \n+    case CODE_FOR_msa_maddv_b:\n+    case CODE_FOR_msa_maddv_h:\n+    case CODE_FOR_msa_maddv_w:\n+    case CODE_FOR_msa_maddv_d:\n+    case CODE_FOR_msa_fmadd_w:\n+    case CODE_FOR_msa_fmadd_d:\n+    case CODE_FOR_msa_fmsub_w:\n+    case CODE_FOR_msa_fmsub_d:\n+      /* fma(a, b, c) results into (a * b + c), however builtin_msa_fmadd expects\n+\t it to be (a + b * c).  Swap the 1st and 3rd operands.  */\n+      std::swap (ops[1], ops[3]);\n+      break;\n+\n     case CODE_FOR_msa_slli_b:\n     case CODE_FOR_msa_slli_h:\n     case CODE_FOR_msa_slli_w:"}, {"sha": "e39b064a41aa8a56f7bdfcc8f1b458aec3bbc592", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c1593246765176943b642021fb0be67d25be76/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c1593246765176943b642021fb0be67d25be76/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29c1593246765176943b642021fb0be67d25be76", "patch": "@@ -1,3 +1,7 @@\n+2019-05-31  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n+\n+\t* gcc.target/mips/msa-fmadd.c: New.\n+\n 2019-05-31  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-c++-common/gomp/lastprivate-conditional-2.c (foo): Don't expect"}, {"sha": "9265c04ff9c3c28714d54a0228c57aafb1957b92", "filename": "gcc/testsuite/gcc.target/mips/msa-fmadd.c", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c1593246765176943b642021fb0be67d25be76/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-fmadd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c1593246765176943b642021fb0be67d25be76/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-fmadd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-fmadd.c?ref=29c1593246765176943b642021fb0be67d25be76", "patch": "@@ -0,0 +1,101 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mfp64 -mhard-float -mmsa -EL -flax-vector-conversions\" } */\n+/* { dg-skip-if \"uses global registers\" { *-*-* } { \"-O0\" } { \"\" } } */\n+\n+typedef int v4i32 __attribute__ ((vector_size(16)));\n+typedef float v4f32 __attribute__ ((vector_size(16)));\n+typedef double v2f64 __attribute__ ((vector_size(16)));\n+\n+/* Test that MSA FMADD-like intrinsics do not use first operand for multiplication.  */\n+\n+register v4i32 a __asm__(\"$f20\");\n+register v4i32 b __asm__(\"$f22\");\n+register v4f32 c __asm__(\"$f24\");\n+register v4f32 d __asm__(\"$f26\");\n+register v2f64 e __asm__(\"$f28\");\n+register v2f64 f __asm__(\"$f30\");\n+\n+void\n+maddv_b_msa (void)\n+{\n+  a = __builtin_msa_maddv_b (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"maddv\\\\\\.b\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+maddv_h_msa (void)\n+{\n+  a = __builtin_msa_maddv_h (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"maddv\\\\\\.h\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+maddv_w_msa (void)\n+{\n+  a = __builtin_msa_maddv_w (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"maddv\\\\\\.w\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+maddv_d_msa (void)\n+{\n+  a = __builtin_msa_maddv_d (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"maddv\\\\\\.d\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+msubv_b_msa (void)\n+{\n+  a = __builtin_msa_msubv_b (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"msubv\\\\\\.b\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+msubv_h_msa (void)\n+{\n+  a = __builtin_msa_msubv_h (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"msubv\\\\\\.h\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+msubv_w_msa (void)\n+{\n+  a = __builtin_msa_msubv_w (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"msubv\\\\\\.w\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+msubv_d_msa (void)\n+{\n+  a = __builtin_msa_msubv_d (a, b, b);\n+}\n+/* { dg-final { scan-assembler \"msubv\\\\\\.d\\t\\\\\\$w20,\\\\\\$w22,\\\\\\$w22\" } }  */\n+\n+void\n+fmadd_w_msa (void)\n+{\n+  c = __builtin_msa_fmadd_w (c, d, d);\n+}\n+/* { dg-final { scan-assembler \"fmadd\\\\\\.w\\t\\\\\\$w24,\\\\\\$w26,\\\\\\$w26\" } }  */\n+\n+void\n+fmadd_d_msa (void)\n+{\n+  e = __builtin_msa_fmadd_d (e, f, f);\n+}\n+/* { dg-final { scan-assembler \"fmadd\\\\\\.d\\t\\\\\\$w28,\\\\\\$w30,\\\\\\$w30\" } }  */\n+\n+void\n+fmsub_w_msa (void)\n+{\n+  c = __builtin_msa_fmsub_w (c, d, d);\n+}\n+/* { dg-final { scan-assembler \"fmsub\\\\\\.w\\t\\\\\\$w24,\\\\\\$w26,\\\\\\$w26\" } }  */\n+\n+void\n+fmsub_d_msa (void)\n+{\n+  e = __builtin_msa_fmsub_d (e, f, f);\n+}\n+/* { dg-final { scan-assembler \"fmsub\\\\\\.d\\t\\\\\\$w28,\\\\\\$w30,\\\\\\$w30\" } }  */\n+"}]}