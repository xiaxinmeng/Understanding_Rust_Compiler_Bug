{"sha": "44a13125a0d56dbabb9bc61de7ff8bf94fb57928", "node_id": "C_kwDOANBUbNoAKDQ0YTEzMTI1YTBkNTZkYmFiYjliYzYxZGU3ZmY4YmY5NGZiNTc5Mjg", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2023-03-18T00:01:45Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2023-03-18T00:02:33Z"}, "message": "lra: Ignore debug insns and notes in combine_reload_insn [PR109179]\n\nWe ICE in combine_reload_insn if we've deleted the TO insn operand during\nprocessing, because lra_get_insn_recog_data doesn't expect to see the note\nthat replaces the deleted insn.  The solution here is to exit early if TO\nis a debug insn or note.\n\n2023-03-17  Peter Bergner  <bergner@linux.ibm.com>\n\ngcc/\n\tPR rtl-optimization/109179\n\t* lra-constraints.cc (combine_reload_insn): Enforce TO is not a debug\n\tinsn or note.  Move the tests earlier to guard lra_get_insn_recog_data.", "tree": {"sha": "d4aaebc09bb2dcf9f2f85b665dc05e9ed6539fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4aaebc09bb2dcf9f2f85b665dc05e9ed6539fee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44a13125a0d56dbabb9bc61de7ff8bf94fb57928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a13125a0d56dbabb9bc61de7ff8bf94fb57928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a13125a0d56dbabb9bc61de7ff8bf94fb57928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a13125a0d56dbabb9bc61de7ff8bf94fb57928/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac81fea349b7af8a9aa1dc47b5f9a07a0f9a73f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac81fea349b7af8a9aa1dc47b5f9a07a0f9a73f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac81fea349b7af8a9aa1dc47b5f9a07a0f9a73f6"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "405b8b92f5e6865daf91f1bfa4b064b92520fc73", "filename": "gcc/lra-constraints.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a13125a0d56dbabb9bc61de7ff8bf94fb57928/gcc%2Flra-constraints.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a13125a0d56dbabb9bc61de7ff8bf94fb57928/gcc%2Flra-constraints.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.cc?ref=44a13125a0d56dbabb9bc61de7ff8bf94fb57928", "patch": "@@ -5014,14 +5014,19 @@ combine_reload_insn (rtx_insn *from, rtx_insn *to)\n   enum reg_class to_class, from_class;\n   int n, nop;\n   signed char changed_nops[MAX_RECOG_OPERANDS + 1];\n-  lra_insn_recog_data_t id = lra_get_insn_recog_data (to);\n-  struct lra_static_insn_data *static_id = id->insn_static_data;\n   \n   /* Check conditions for second memory reload and original insn:  */\n   if ((targetm.secondary_memory_needed\n        == hook_bool_mode_reg_class_t_reg_class_t_false)\n-      || NEXT_INSN (from) != to || CALL_P (to)\n-      || id->used_insn_alternative == LRA_UNKNOWN_ALT\n+      || NEXT_INSN (from) != to\n+      || !NONDEBUG_INSN_P (to)\n+      || CALL_P (to))\n+    return false;\n+\n+  lra_insn_recog_data_t id = lra_get_insn_recog_data (to);\n+  struct lra_static_insn_data *static_id = id->insn_static_data;\n+  \n+  if (id->used_insn_alternative == LRA_UNKNOWN_ALT\n       || (set = single_set (from)) == NULL_RTX)\n     return false;\n   from_reg = SET_DEST (set);"}]}