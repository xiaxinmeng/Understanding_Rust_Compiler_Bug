{"sha": "8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI1OGEwNjA0NDNhN2EwNGYyZTFmYTg1NGVjMmY5ZmFjMWE3ZmYxYw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2013-10-17T14:01:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-17T14:01:39Z"}, "message": "aspects.adb, [...]: Remove all entries for Refined_Pre from the various tables.\n\n2013-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* aspects.adb, aspects.ads, sem_prag.ads: Remove all entries\n\tfor Refined_Pre from the various tables.\n\t* par-prag.adb: Remove the entry for Refined_Pre from the list\n\tof pragmas not needing special processing by the parser.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications):\n\tRemove the processing for aspect Refined_Pre.\n\t(Check_Aspect_At_Freeze_Point): Remove the entry for aspect\n\tRefined_Pre.\n\t* sem_prag.adb (Analyze_Pragma): Refined_Pre is no longer a\n\tvalid assertion kind. Remove the analysis of pragma Refined_Pre.\n\t(Analyze_Refined_Pragma): Update the comment on usage.\n\t(Find_Related_Subprogram_Or_Body): Update the comment on\n\tusage. Pragma Refined_Pre is no longer processed by this routine.\n\t(Is_Valid_Assertion_Kind): Refined_Pre is no longer a valid\n\tassertion kind.\n\t* snames.ads-tmpl: Remove predefined name Refined_Pre. Remove\n\tthe pragma id for Refined_Pre.\n\nFrom-SVN: r203765", "tree": {"sha": "9878874a04ed835192318a4cca885041323c4816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9878874a04ed835192318a4cca885041323c4816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "275d8313ba039f364823a74727002c3d897dbb2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/275d8313ba039f364823a74727002c3d897dbb2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/275d8313ba039f364823a74727002c3d897dbb2a"}], "stats": {"total": 87, "additions": 36, "deletions": 51}, "files": [{"sha": "ecda51761292a3dacb586eda4fd807de48e25d5e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -1,3 +1,23 @@\n+2013-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* aspects.adb, aspects.ads, sem_prag.ads: Remove all entries\n+\tfor Refined_Pre from the various tables.\n+\t* par-prag.adb: Remove the entry for Refined_Pre from the list\n+\tof pragmas not needing special processing by the parser.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications):\n+\tRemove the processing for aspect Refined_Pre.\n+\t(Check_Aspect_At_Freeze_Point): Remove the entry for aspect\n+\tRefined_Pre.\n+\t* sem_prag.adb (Analyze_Pragma): Refined_Pre is no longer a\n+\tvalid assertion kind. Remove the analysis of pragma Refined_Pre.\n+\t(Analyze_Refined_Pragma): Update the comment on usage.\n+\t(Find_Related_Subprogram_Or_Body): Update the comment on\n+\tusage. Pragma Refined_Pre is no longer processed by this routine.\n+\t(Is_Valid_Assertion_Kind): Refined_Pre is no longer a valid\n+\tassertion kind.\n+\t* snames.ads-tmpl: Remove predefined name Refined_Pre. Remove\n+\tthe pragma id for Refined_Pre.\n+\n 2013-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_util.adb, exp_util.ads (Entity_Of): Moved to Sem_Util."}, {"sha": "091af77ef77e156f4ab7b13b5d66233cc7f798eb", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -471,7 +471,6 @@ package body Aspects is\n     Aspect_Refined_Depends              => Aspect_Refined_Depends,\n     Aspect_Refined_Global               => Aspect_Refined_Global,\n     Aspect_Refined_Post                 => Aspect_Refined_Post,\n-    Aspect_Refined_Pre                  => Aspect_Refined_Pre,\n     Aspect_Refined_State                => Aspect_Refined_State,\n     Aspect_Remote_Access_Type           => Aspect_Remote_Access_Type,\n     Aspect_Remote_Call_Interface        => Aspect_Remote_Call_Interface,"}, {"sha": "2fd4b451bb05d3bd88997ecb9c0b60e7ec4ef032", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -116,7 +116,6 @@ package Aspects is\n       Aspect_Refined_Depends,               -- GNAT\n       Aspect_Refined_Global,                -- GNAT\n       Aspect_Refined_Post,                  -- GNAT\n-      Aspect_Refined_Pre,                   -- GNAT\n       Aspect_Refined_State,                 -- GNAT\n       Aspect_Relative_Deadline,\n       Aspect_Scalar_Storage_Order,          -- GNAT\n@@ -331,7 +330,6 @@ package Aspects is\n       Aspect_Refined_Depends         => Expression,\n       Aspect_Refined_Global          => Expression,\n       Aspect_Refined_Post            => Expression,\n-      Aspect_Refined_Pre             => Expression,\n       Aspect_Refined_State           => Expression,\n       Aspect_Relative_Deadline       => Expression,\n       Aspect_Scalar_Storage_Order    => Expression,\n@@ -434,7 +432,6 @@ package Aspects is\n       Aspect_Refined_Depends              => Name_Refined_Depends,\n       Aspect_Refined_Global               => Name_Refined_Global,\n       Aspect_Refined_Post                 => Name_Refined_Post,\n-      Aspect_Refined_Pre                  => Name_Refined_Pre,\n       Aspect_Refined_State                => Name_Refined_State,\n       Aspect_Relative_Deadline            => Name_Relative_Deadline,\n       Aspect_Remote_Access_Type           => Name_Remote_Access_Type,\n@@ -663,7 +660,6 @@ package Aspects is\n       Aspect_Dimension                    => Never_Delay,\n       Aspect_Dimension_System             => Never_Delay,\n       Aspect_Refined_Post                 => Never_Delay,\n-      Aspect_Refined_Pre                  => Never_Delay,\n       Aspect_SPARK_Mode                   => Never_Delay,\n       Aspect_Synchronization              => Never_Delay,\n       Aspect_Test_Case                    => Never_Delay,\n@@ -726,7 +722,6 @@ package Aspects is\n      (Aspect_Refined_Depends              => True,\n       Aspect_Refined_Global               => True,\n       Aspect_Refined_Post                 => True,\n-      Aspect_Refined_Pre                  => True,\n       Aspect_SPARK_Mode                   => True,\n       Aspect_Warnings                     => True,\n       others                              => False);"}, {"sha": "4cb9fd16ad4e5b8371a83ddb3db56b13e748b452", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -1259,7 +1259,6 @@ begin\n            Pragma_Refined_Depends                |\n            Pragma_Refined_Global                 |\n            Pragma_Refined_Post                   |\n-           Pragma_Refined_Pre                    |\n            Pragma_Refined_State                  |\n            Pragma_Relative_Deadline              |\n            Pragma_Remote_Access_Type             |"}, {"sha": "15862442175cbdf0af0c334f2b8197bd9d69a47d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -2184,15 +2184,6 @@ package body Sem_Ch13 is\n                          Expression => Relocate_Node (Expr))),\n                      Pragma_Name                  => Name_Refined_Post);\n \n-               --  Refined_Pre\n-\n-               --  Disable the support for aspect Refined_Pre as its static and\n-               --  runtime semantics are still under heavy design.\n-\n-               when Aspect_Refined_Pre =>\n-                  Error_Msg_NE (\"aspect & is not supported\", Aspect, Id);\n-                  goto Continue;\n-\n                --  Refined_State\n \n                when Aspect_Refined_State => Refined_State : declare\n@@ -7907,7 +7898,6 @@ package body Sem_Ch13 is\n               Aspect_Refined_Depends      |\n               Aspect_Refined_Global       |\n               Aspect_Refined_Post         |\n-              Aspect_Refined_Pre          |\n               Aspect_Refined_State        |\n               Aspect_SPARK_Mode           |\n               Aspect_Test_Case            =>"}, {"sha": "6641f9328e38cf82c5f71fdd67017c9ba80b13d6", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 31, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -236,17 +236,17 @@ package body Sem_Prag is\n      (Prag      : Node_Id;\n       Do_Checks : Boolean := False) return Node_Id;\n    --  Subsidiary to the analysis of pragmas Contract_Cases, Depends, Global,\n-   --  Refined_Depends, Refined_Global, Refined_Post and Refined_Pre. Find the\n-   --  declaration of the related subprogram [body or stub] subject to pragma\n-   --  Prag. If flag Do_Checks is set, the routine reports duplicate pragmas\n-   --  and detects improper use of refinement pragmas in stand alone expression\n-   --  functions. The returned value depends on the related pragma as follows:\n+   --  Refined_Depends, Refined_Global and Refined_Post. Find the declaration\n+   --  of the related subprogram [body or stub] subject to pragma Prag. If flag\n+   --  Do_Checks is set, the routine reports duplicate pragmas and detects\n+   --  improper use of refinement pragmas in stand alone expression functions.\n+   --  The returned value depends on the related pragma as follows:\n    --    1) Pragmas Contract_Cases, Depends and Global yield the corresponding\n    --       N_Subprogram_Declaration node or if the pragma applies to a stand\n    --       alone body, the N_Subprogram_Body node or Empty if illegal.\n-   --    2) Pragmas Refined_Depends, Refined_Global, Refined_Post and\n-   --       Refined_Pre yield N_Subprogram_Body or N_Subprogram_Body_Stub nodes\n-   --       or Empty if illegal.\n+   --    2) Pragmas Refined_Depends, Refined_Global and Refined_Post yield\n+   --       N_Subprogram_Body or N_Subprogram_Body_Stub nodes or Empty if\n+   --       illegal.\n \n    function Get_Base_Subprogram (Def_Id : Entity_Id) return Entity_Id;\n    --  If Def_Id refers to a renamed subprogram, then the base subprogram (the\n@@ -2573,8 +2573,8 @@ package body Sem_Prag is\n          Body_Id : out Entity_Id;\n          Legal   : out Boolean);\n       --  Subsidiary routine to the analysis of body pragmas Refined_Depends,\n-      --  Refined_Global, Refined_Post and Refined_Pre. Check the placement and\n-      --  related context of the pragma. Spec_Id is the entity of the related\n+      --  Refined_Global and Refined_Post. Check the placement and related\n+      --  context of the pragma. Spec_Id is the entity of the related\n       --  subprogram. Body_Id is the entity of the subprogram body. Flag Legal\n       --  is set when the pragma is properly placed.\n \n@@ -9967,7 +9967,6 @@ package body Sem_Prag is\n          --                        Precondition         |\n          --                        Predicate            |\n          --                        Refined_Post         |\n-         --                        Refined_Pre          |\n          --                        Statement_Assertions\n \n          --  Note: The RM_ASSERTION_KIND list is language-defined, and the\n@@ -17204,37 +17203,26 @@ package body Sem_Prag is\n             end if;\n          end Refined_Depends_Global;\n \n-         ------------------------------\n-         -- Refined_Post/Refined_Pre --\n-         ------------------------------\n+         ------------------\n+         -- Refined_Post --\n+         ------------------\n \n          --  pragma Refined_Post (boolean_EXPRESSION);\n-         --  pragma Refined_Pre  (boolean_EXPRESSION);\n \n-         when Pragma_Refined_Post |\n-              Pragma_Refined_Pre  => Refined_Pre_Post :\n-         declare\n+         when Pragma_Refined_Post => Refined_Post : declare\n             Body_Id : Entity_Id;\n             Legal   : Boolean;\n             Spec_Id : Entity_Id;\n \n          begin\n-            --  Disable the support for pragma Refined_Pre as its static and\n-            --  runtime semantics are still under heavy design. The pragma is\n-            --  silently ignored.\n-\n-            if Pname = Name_Refined_Pre then\n-               Set_Is_Ignored (N);\n-            end if;\n-\n             Analyze_Refined_Pragma (Spec_Id, Body_Id, Legal);\n \n             --  Analyze the boolean expression as a \"spec expression\"\n \n             if Legal then\n                Analyze_Pre_Post_Condition_In_Decl_Part (N, Spec_Id);\n             end if;\n-         end Refined_Pre_Post;\n+         end Refined_Post;\n \n          -------------------\n          -- Refined_State --\n@@ -22448,8 +22436,7 @@ package body Sem_Prag is\n       Look_For_Body : constant Boolean :=\n                         Nam_In (Nam, Name_Refined_Depends,\n                                      Name_Refined_Global,\n-                                     Name_Refined_Post,\n-                                     Name_Refined_Pre);\n+                                     Name_Refined_Post);\n       --  Refinement pragmas must be associated with a subprogram body [stub]\n \n    begin\n@@ -22877,7 +22864,6 @@ package body Sem_Prag is\n       Pragma_Refined_Depends                => -1,\n       Pragma_Refined_Global                 => -1,\n       Pragma_Refined_Post                   => -1,\n-      Pragma_Refined_Pre                    => -1,\n       Pragma_Refined_State                  => -1,\n       Pragma_Relative_Deadline              => -1,\n       Pragma_Remote_Access_Type             => -1,\n@@ -23202,7 +23188,6 @@ package body Sem_Prag is\n             Name_Precondition         |\n             Name_Predicate            |\n             Name_Refined_Post         |\n-            Name_Refined_Pre          |\n             Name_Statement_Assertions => return True;\n \n          when others                  => return False;"}, {"sha": "c03799dd56fee42df95be500fbfbeb73603b9ee9", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -41,7 +41,6 @@ package Sem_Prag is\n      (Pragma_Refined_Depends => True,\n       Pragma_Refined_Global  => True,\n       Pragma_Refined_Post    => True,\n-      Pragma_Refined_Pre     => True,\n       Pragma_SPARK_Mode      => True,\n       Pragma_Warnings        => True,\n       others                 => False);"}, {"sha": "0be49580d98b947644cfcbb6073f3af39c2d52d8", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=8b58a060443a7a04f2e1fa854ec2f9fac1a7ff1c", "patch": "@@ -586,7 +586,6 @@ package Snames is\n    Name_Refined_Depends                : constant Name_Id := N + $; -- GNAT\n    Name_Refined_Global                 : constant Name_Id := N + $; -- GNAT\n    Name_Refined_Post                   : constant Name_Id := N + $; -- GNAT\n-   Name_Refined_Pre                    : constant Name_Id := N + $; -- GNAT\n    Name_Refined_State                  : constant Name_Id := N + $; -- GNAT\n    Name_Relative_Deadline              : constant Name_Id := N + $; -- Ada 05\n    Name_Remote_Access_Type             : constant Name_Id := N + $; -- GNAT\n@@ -1882,7 +1881,6 @@ package Snames is\n       Pragma_Refined_Depends,\n       Pragma_Refined_Global,\n       Pragma_Refined_Post,\n-      Pragma_Refined_Pre,\n       Pragma_Refined_State,\n       Pragma_Relative_Deadline,\n       Pragma_Remote_Access_Type,"}]}