{"sha": "3df6fac0080468d1521775e82a5e060f0b1c78ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RmNmZhYzAwODA0NjhkMTUyMTc3NWU4MmE1ZTA2MGYwYjFjNzhjYQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2020-11-06T22:53:29Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-01-13T00:46:02Z"}, "message": "amdgcn: Fix exec register live-on-entry to BB in md-reorg\n\nThis patch fixes a corner case in the AMD GCN md-reorg pass when the\nEXEC register is live on entry to a BB, and could be clobbered by code\ninserted by the pass before a use in (e.g.) a different BB.\n\n2021-01-13  Julian Brown  <julian@codesourcery.com>\n\ngcc/\n\t* config/gcn/gcn.c (gcn_md_reorg): Fix case where EXEC reg is live\n\ton entry to a BB.", "tree": {"sha": "5f64091c89c14842c37cc66fd1930165c1369d8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f64091c89c14842c37cc66fd1930165c1369d8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3df6fac0080468d1521775e82a5e060f0b1c78ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df6fac0080468d1521775e82a5e060f0b1c78ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3df6fac0080468d1521775e82a5e060f0b1c78ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df6fac0080468d1521775e82a5e060f0b1c78ca/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8812bac8ee39f73ea881e4f6260acf5590b4190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8812bac8ee39f73ea881e4f6260acf5590b4190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8812bac8ee39f73ea881e4f6260acf5590b4190"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "630ce4eebc700ff596f08b2f31637d7e1d437a57", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6fac0080468d1521775e82a5e060f0b1c78ca/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6fac0080468d1521775e82a5e060f0b1c78ca/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=3df6fac0080468d1521775e82a5e060f0b1c78ca", "patch": "@@ -4501,6 +4501,8 @@ gcn_md_reorg (void)\n       df_insn_rescan_all ();\n     }\n \n+  df_live_add_problem ();\n+  df_live_set_all_dirty ();\n   df_analyze ();\n \n   /* This pass ensures that the EXEC register is set correctly, according\n@@ -4522,6 +4524,17 @@ gcn_md_reorg (void)\n       int64_t curr_exec = 0;\t/* 0 here means 'the value is that of EXEC\n \t\t\t\t   after last_exec_def is executed'.  */\n \n+      bitmap live_in = DF_LR_IN (bb);\n+      bool exec_live_on_entry = false;\n+      if (bitmap_bit_p (live_in, EXEC_LO_REG)\n+\t  || bitmap_bit_p (live_in, EXEC_HI_REG))\n+\t{\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"EXEC reg is live on entry to block %d\\n\",\n+\t\t     (int) bb->index);\n+\t  exec_live_on_entry = true;\n+\t}\n+\n       FOR_BB_INSNS_SAFE (bb, insn, curr)\n \t{\n \t  if (!NONDEBUG_INSN_P (insn))\n@@ -4660,6 +4673,8 @@ gcn_md_reorg (void)\n \t\t\t exec_lo_def_p == exec_hi_def_p ? \"full\" : \"partial\",\n \t\t\t INSN_UID (insn));\n \t    }\n+\n+\t  exec_live_on_entry = false;\n \t}\n \n       COPY_REG_SET (&live, DF_LR_OUT (bb));\n@@ -4669,7 +4684,7 @@ gcn_md_reorg (void)\n \t at the end of the block.  */\n       if ((REGNO_REG_SET_P (&live, EXEC_LO_REG)\n \t   || REGNO_REG_SET_P (&live, EXEC_HI_REG))\n-\t  && (!curr_exec_known || !curr_exec_explicit))\n+\t  && (!curr_exec_known || !curr_exec_explicit || exec_live_on_entry))\n \t{\n \t  rtx_insn *end_insn = BB_END (bb);\n "}]}