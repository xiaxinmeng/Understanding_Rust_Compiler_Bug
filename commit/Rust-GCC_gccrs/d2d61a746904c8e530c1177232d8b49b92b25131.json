{"sha": "d2d61a746904c8e530c1177232d8b49b92b25131", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkNjFhNzQ2OTA0YzhlNTMwYzExNzcyMzJkOGI0OWI5MmIyNTEzMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-05-17T09:12:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-05-17T09:12:33Z"}, "message": "compare-elim.c (equivalent_reg_at_start): Adjust outdated comment.\n\n\t* compare-elim.c (equivalent_reg_at_start): Adjust outdated comment.\n\t* config/visium/visium.c (single_set_and_flags): Likewise.\n\t* config/visium/visium.md (Substitutions): Likewise.\n\nFrom-SVN: r248141", "tree": {"sha": "e378f4420d6935e7b7fa6fde5a3ebca5d7d03bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e378f4420d6935e7b7fa6fde5a3ebca5d7d03bf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2d61a746904c8e530c1177232d8b49b92b25131", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d61a746904c8e530c1177232d8b49b92b25131", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d61a746904c8e530c1177232d8b49b92b25131", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d61a746904c8e530c1177232d8b49b92b25131/comments", "author": null, "committer": null, "parents": [{"sha": "1a81741814618bc19d13de0b9e59c0324114cc86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a81741814618bc19d13de0b9e59c0324114cc86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a81741814618bc19d13de0b9e59c0324114cc86"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "219836cf092a754fa3a17be6b8c543b2e13d62ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2d61a746904c8e530c1177232d8b49b92b25131", "patch": "@@ -1,3 +1,9 @@\n+2017-05-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* compare-elim.c (equivalent_reg_at_start): Adjust outdated comment.\n+\t* config/visium/visium.c (single_set_and_flags): Likewise.\n+\t* config/visium/visium.md (Substitutions): Likewise.\n+\n 2017-05-17  Martin Liska  <mliska@suse.cz>\n \n \t* cfg.c: Introduce dump_flags_t type and"}, {"sha": "d357d16c3dc9406058da57b4929e59a83950f11b", "filename": "gcc/compare-elim.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2Fcompare-elim.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2Fcompare-elim.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcompare-elim.c?ref=d2d61a746904c8e530c1177232d8b49b92b25131", "patch": "@@ -541,29 +541,29 @@ equivalent_reg_at_start (rtx reg, rtx_insn *end, rtx_insn *start)\n       df_ref def;\n \n       /* Note that the BB_HEAD is always either a note or a label, but in\n-\t any case it means that IN_A is defined outside the block.  */\n+\t any case it means that REG is defined outside the block.  */\n       if (insn == bb_head)\n \treturn NULL_RTX;\n       if (NOTE_P (insn) || DEBUG_INSN_P (insn))\n \tcontinue;\n \n-      /* Find a possible def of IN_A in INSN.  */\n+      /* Find a possible def of REG in INSN.  */\n       FOR_EACH_INSN_DEF (def, insn)\n \tif (DF_REF_REGNO (def) == REGNO (reg))\n \t  break;\n \n-      /* No definitions of IN_A; continue searching.  */\n+      /* No definitions of REG; continue searching.  */\n       if (def == NULL)\n \tcontinue;\n \n-      /* Bail if this is not a totally normal set of IN_A.  */\n+      /* Bail if this is not a totally normal set of REG.  */\n       if (DF_REF_IS_ARTIFICIAL (def))\n \treturn NULL_RTX;\n       if (DF_REF_FLAGS (def) & abnormal_flags)\n \treturn NULL_RTX;\n \n       /* We've found an insn between the compare and the clobber that sets\n-\t IN_A.  Given that pass_cprop_hardreg has not yet run, we still find\n+\t REG.  Given that pass_cprop_hardreg has not yet run, we still find\n \t situations in which we can usefully look through a copy insn.  */\n       rtx x = single_set (insn);\n       if (x == NULL_RTX)"}, {"sha": "fac254c4c1e0dae837fdef4fa5d831e84763ea42", "filename": "gcc/config/visium/visium.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2Fconfig%2Fvisium%2Fvisium.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2Fconfig%2Fvisium%2Fvisium.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.c?ref=d2d61a746904c8e530c1177232d8b49b92b25131", "patch": "@@ -922,8 +922,8 @@ empty_delay_slot (rtx_insn *insn)\n   return 1;\n }\n \n-/* Wrapper around single_set which returns the first SET of a pair if the\n-   second SET is to the flags register.  */\n+/* Wrapper around single_set which returns the second SET of a pair if the\n+   first SET is to the flags register.  */\n \n static rtx\n single_set_and_flags (rtx_insn *insn)"}, {"sha": "9950f3f3f7eaeb376debf61f3a0699db426c1b7d", "filename": "gcc/config/visium/visium.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2Fconfig%2Fvisium%2Fvisium.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d61a746904c8e530c1177232d8b49b92b25131/gcc%2Fconfig%2Fvisium%2Fvisium.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.md?ref=d2d61a746904c8e530c1177232d8b49b92b25131", "patch": "@@ -240,7 +240,7 @@\n ;;\n ;; Substitutions.\n ;;\n-;; They are used to define the second instruction of the pairs required by\n+;; They are used to define the first instruction of the pairs required by\n ;; the postreload compare elimination pass, with a first variant for the\n ;; logical insns and a second variant for the arithmetic insns.\n ;;"}]}