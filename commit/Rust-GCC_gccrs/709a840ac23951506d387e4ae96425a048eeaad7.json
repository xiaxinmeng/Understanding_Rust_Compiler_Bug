{"sha": "709a840ac23951506d387e4ae96425a048eeaad7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5YTg0MGFjMjM5NTE1MDZkMzg3ZTRhZTk2NDI1YTA0OGVlYWFkNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2005-07-13T17:27:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2005-07-13T17:27:39Z"}, "message": "tm.texi: Remove @xref{Cross-profiling}.\n\n2005-07-13  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* doc/tm.texi: Remove @xref{Cross-profiling}.\n\nFrom-SVN: r101979", "tree": {"sha": "4ee78a2a6eb5eaa640b3b61369e363c9145f431e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ee78a2a6eb5eaa640b3b61369e363c9145f431e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/709a840ac23951506d387e4ae96425a048eeaad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709a840ac23951506d387e4ae96425a048eeaad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709a840ac23951506d387e4ae96425a048eeaad7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709a840ac23951506d387e4ae96425a048eeaad7/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de227b237f5385783bdb236c035c5ab5d260b416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de227b237f5385783bdb236c035c5ab5d260b416", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de227b237f5385783bdb236c035c5ab5d260b416"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "6465670b2f72a2a839c6bf1f7a62bace21c9eaf7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709a840ac23951506d387e4ae96425a048eeaad7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709a840ac23951506d387e4ae96425a048eeaad7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=709a840ac23951506d387e4ae96425a048eeaad7", "patch": "@@ -1,3 +1,7 @@\n+2005-07-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* doc/tm.texi: Remove @xref{Cross-profiling}.\n+\n 2005-07-13  Jeff Law  <law@redhat.com>\n \n \t* fold-const.c (fold_binary): When comparing two simple ADDR_EXPR"}, {"sha": "834c5ea283d3be4deff9d0d6d265fc83b4b0d1e7", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709a840ac23951506d387e4ae96425a048eeaad7/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709a840ac23951506d387e4ae96425a048eeaad7/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=709a840ac23951506d387e4ae96425a048eeaad7", "patch": "@@ -9281,7 +9281,7 @@ functions, access, mkdir and  file locking with fcntl / F_SETLKW@.\n Defining @code{TARGET_POSIX_IO} will enable the test coverage code\n to use file locking when exiting a program, which avoids race conditions\n if the program has forked. It will also create directories at run-time\n-for cross-profiling.  @xref{Cross-profiling}.\n+for cross-profiling.\n @end defmac\n \n @defmac MAX_CONDITIONAL_EXECUTE"}]}