{"sha": "660e6c2c127fdec06bfa428b08ab4123e37281a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYwZTZjMmMxMjdmZGVjMDZiZmE0MjhiMDhhYjQxMjNlMzcyODFhNQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-11-16T18:30:56Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-11-16T18:30:56Z"}, "message": "Fix ICE on empty FIQ interrupt handler on ARM\n\n2016-11-16  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config/arm/arm.md (arm_addsi3): Add alternative for addition of\n    general register with general register or ARM constant into SP\n    register.\n\n    gcc/testsuite/\n    * gcc.target/arm/empty_fiq_handler.c: New test.\n\nFrom-SVN: r242508", "tree": {"sha": "0e26028c9bf60b7ec7247434464570e6f1dc6643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e26028c9bf60b7ec7247434464570e6f1dc6643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/660e6c2c127fdec06bfa428b08ab4123e37281a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660e6c2c127fdec06bfa428b08ab4123e37281a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/660e6c2c127fdec06bfa428b08ab4123e37281a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660e6c2c127fdec06bfa428b08ab4123e37281a5/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e8d7713becd848449a35231d58b8b0965467784", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8d7713becd848449a35231d58b8b0965467784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8d7713becd848449a35231d58b8b0965467784"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "02a309f735ff4b2e2d74c110f016940ea3613739", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=660e6c2c127fdec06bfa428b08ab4123e37281a5", "patch": "@@ -1,3 +1,9 @@\n+2016-11-16  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm.md (arm_addsi3): Add alternative for addition of\n+\tgeneral register with general register or ARM constant into SP\n+\tregister.\n+\n 2016-11-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/78299"}, {"sha": "a4f83d6737776a087237a9784c0afbb7af11dbf7", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=660e6c2c127fdec06bfa428b08ab4123e37281a5", "patch": "@@ -609,9 +609,9 @@\n ;;  (plus (reg rN) (reg sp)) into (reg rN).  In this case reload will\n ;; put the duplicated register first, and not try the commutative version.\n (define_insn_and_split \"*arm_addsi3\"\n-  [(set (match_operand:SI          0 \"s_register_operand\" \"=rk,l,l ,l ,r ,k ,r,r ,k ,r ,k,k,r ,k ,r\")\n-        (plus:SI (match_operand:SI 1 \"s_register_operand\" \"%0 ,l,0 ,l ,rk,k ,r,rk,k ,rk,k,r,rk,k ,rk\")\n-                 (match_operand:SI 2 \"reg_or_int_operand\" \"rk ,l,Py,Pd,rI,rI,k,Pj,Pj,L ,L,L,PJ,PJ,?n\")))]\n+  [(set (match_operand:SI          0 \"s_register_operand\" \"=rk,l,l ,l ,r ,k ,r,k ,r ,k ,r ,k,k,r ,k ,r\")\n+\t(plus:SI (match_operand:SI 1 \"s_register_operand\" \"%0 ,l,0 ,l ,rk,k ,r,r ,rk,k ,rk,k,r,rk,k ,rk\")\n+\t\t (match_operand:SI 2 \"reg_or_int_operand\" \"rk ,l,Py,Pd,rI,rI,k,rI,Pj,Pj,L ,L,L,PJ,PJ,?n\")))]\n   \"TARGET_32BIT\"\n   \"@\n    add%?\\\\t%0, %0, %2\n@@ -621,6 +621,7 @@\n    add%?\\\\t%0, %1, %2\n    add%?\\\\t%0, %1, %2\n    add%?\\\\t%0, %2, %1\n+   add%?\\\\t%0, %1, %2\n    addw%?\\\\t%0, %1, %2\n    addw%?\\\\t%0, %1, %2\n    sub%?\\\\t%0, %1, #%n2\n@@ -640,10 +641,10 @@\n \t\t      operands[1], 0);\n   DONE;\n   \"\n-  [(set_attr \"length\" \"2,4,4,4,4,4,4,4,4,4,4,4,4,4,16\")\n+  [(set_attr \"length\" \"2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,16\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"predicable_short_it\" \"yes,yes,yes,yes,no,no,no,no,no,no,no,no,no,no,no\")\n-   (set_attr \"arch\" \"t2,t2,t2,t2,*,*,*,t2,t2,*,*,a,t2,t2,*\")\n+   (set_attr \"predicable_short_it\" \"yes,yes,yes,yes,no,no,no,no,no,no,no,no,no,no,no,no\")\n+   (set_attr \"arch\" \"t2,t2,t2,t2,*,*,*,a,t2,t2,*,*,a,t2,t2,*\")\n    (set (attr \"type\") (if_then_else (match_operand 2 \"const_int_operand\" \"\")\n \t\t      (const_string \"alu_imm\")\n \t\t      (const_string \"alu_sreg\")))"}, {"sha": "4c274d731488b15f686083be40050caf68704b26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=660e6c2c127fdec06bfa428b08ab4123e37281a5", "patch": "@@ -1,3 +1,7 @@\n+2016-11-16  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* gcc.target/arm/empty_fiq_handler.c: New test.\n+\n 2016-11-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/78299"}, {"sha": "bbcfd0e32f9d0cc60c8a013fd1bb584b21aaad16", "filename": "gcc/testsuite/gcc.target/arm/empty_fiq_handler.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fempty_fiq_handler.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660e6c2c127fdec06bfa428b08ab4123e37281a5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fempty_fiq_handler.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fempty_fiq_handler.c?ref=660e6c2c127fdec06bfa428b08ab4123e37281a5", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+\n+/* Below code used to trigger an ICE due to missing constraints for\n+   sp = fp + cst pattern.  */\n+\n+void fiq_handler (void) __attribute__((interrupt (\"FIQ\")));\n+\n+void\n+fiq_handler (void)\n+{\n+}"}]}