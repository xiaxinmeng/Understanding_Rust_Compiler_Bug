{"sha": "fb3e178a78e0cfef9146dc17beb69ae53ed64616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIzZTE3OGE3OGUwY2ZlZjkxNDZkYzE3YmViNjlhZTUzZWQ2NDYxNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-12-20T18:46:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-20T18:46:12Z"}, "message": "re PR c++/36921 (warning \"comparison does not have mathematical meaning\" is not correct for overloaded operators that do not return boolean)\n\n\tPR c++/36921\n\t* c-common.c (warn_about_parentheses): Remove ARG_UNUSED from\n\targ_left.  Don't warn about X<=Y<=Z if comparison's type isn't\n\tintegral.\n\n\t* g++.dg/warn/pr36921.C: New.\n\nCo-Authored-By: Manuel L\u00f3pez-Ib\u00e1\u00f1ez <manu@gcc.gnu.org>\n\nFrom-SVN: r142849", "tree": {"sha": "a561d1d4957ce2ac0cd8556dd57969d83b2278bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a561d1d4957ce2ac0cd8556dd57969d83b2278bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb3e178a78e0cfef9146dc17beb69ae53ed64616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3e178a78e0cfef9146dc17beb69ae53ed64616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3e178a78e0cfef9146dc17beb69ae53ed64616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3e178a78e0cfef9146dc17beb69ae53ed64616/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ce1b2de2504c2cb2918c0e0c851eb15a873d7c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce1b2de2504c2cb2918c0e0c851eb15a873d7c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ce1b2de2504c2cb2918c0e0c851eb15a873d7c4"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "d08a25b96656e0730c61ced284d5f9f9aef2ef49", "filename": "gcc/c-common.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=fb3e178a78e0cfef9146dc17beb69ae53ed64616", "patch": "@@ -8059,7 +8059,7 @@ warn_array_subscript_with_type_char (tree index)\n \n void\n warn_about_parentheses (enum tree_code code,\n-\t\t\tenum tree_code code_left, tree ARG_UNUSED (arg_left),\n+\t\t\tenum tree_code code_left, tree arg_left,\n \t\t\tenum tree_code code_right, tree arg_right)\n {\n   if (!warn_parentheses)\n@@ -8169,9 +8169,11 @@ warn_about_parentheses (enum tree_code code,\n     default:\n       if (TREE_CODE_CLASS (code) == tcc_comparison\n \t   && ((TREE_CODE_CLASS (code_left) == tcc_comparison\n-\t\t&& code_left != NE_EXPR && code_left != EQ_EXPR)\n+\t\t&& code_left != NE_EXPR && code_left != EQ_EXPR\n+\t\t&& INTEGRAL_TYPE_P (TREE_TYPE (arg_left)))\n \t       || (TREE_CODE_CLASS (code_right) == tcc_comparison\n-\t\t   && code_right != NE_EXPR && code_right != EQ_EXPR)))\n+\t\t   && code_right != NE_EXPR && code_right != EQ_EXPR\n+\t\t   && INTEGRAL_TYPE_P (TREE_TYPE (arg_right)))))\n \twarning (OPT_Wparentheses, \"comparisons like %<X<=Y<=Z%> do not \"\n \t\t \"have their mathematical meaning\");\n       return;"}, {"sha": "19af86ccde6d55d7bff5e75b054b4500e18f1233", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fb3e178a78e0cfef9146dc17beb69ae53ed64616", "patch": "@@ -1,3 +1,11 @@\n+2008-12-20  Jakub Jelinek  <jakub@redhat.com>\n+\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/36921\n+\t* c-common.c (warn_about_parentheses): Remove ARG_UNUSED from\n+\targ_left.  Don't warn about X<=Y<=Z if comparison's type isn't\n+\tintegral.\n+\n 2008-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38577"}, {"sha": "11feb22bd969f39612b8ea303cabdd56abea98ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb3e178a78e0cfef9146dc17beb69ae53ed64616", "patch": "@@ -1,3 +1,9 @@\n+2008-12-20  Jakub Jelinek  <jakub@redhat.com>\n+\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/36921\n+\t* g++.dg/warn/pr36921.C: New.\n+\n 2008-12-19  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \t* lib/target-supports.exp: Add *-*-rtems* to list"}, {"sha": "7393669101fd9042065ce8f83087663f3d80d60b", "filename": "gcc/testsuite/g++.dg/warn/pr36921.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr36921.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3e178a78e0cfef9146dc17beb69ae53ed64616/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr36921.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr36921.C?ref=fb3e178a78e0cfef9146dc17beb69ae53ed64616", "patch": "@@ -0,0 +1,27 @@\n+/* PR 36921: comparison operator can be overloaded. Do not emit\n+   warnings in such case.\n+ { dg-do compile }\n+ { dg-options \"-Wparentheses\" }\n+*/\n+struct A {};\n+A operator<(A, A) { return A(); }\n+A operator>(A, A) { return A(); }\n+A operator<=(A, A) { return A(); }\n+A operator>=(A, A) { return A(); }\n+A operator==(A, A) { return A(); }\n+A operator!=(A, A) { return A(); }\n+\n+int main() {\n+  A() < A() < A(); // should not emit warning\n+  1 < 2 < 3; // { dg-warning \"mathematical meaning\" \"parentheses\" }\n+  A() > A() > A(); // should not emit warning\n+  1 > 2 > 3; // { dg-warning \"mathematical meaning\" \"parentheses\" }\n+  A() <= A() <= A(); // should not emit warning\n+  1 <= 2 <= 3; // { dg-warning \"mathematical meaning\" \"parentheses\" }\n+  A() >= A() >= A(); // should not emit warning\n+  1 >= 2 >= 3; // { dg-warning \"mathematical meaning\" \"parentheses\" }\n+\n+  A() == A() < A (); // { dg-warning \"suggest parentheses\" \"parentheses\" }\n+  A() < A() != A (); // { dg-warning \"suggest parentheses\" \"parentheses\" }\n+  return 0;\n+}"}]}