{"sha": "ddef83d233115de4468ed16c496015faaf838c72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlZjgzZDIzMzExNWRlNDQ2OGVkMTZjNDk2MDE1ZmFhZjgzOGM3Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-10T15:42:51Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2009-03-10T15:42:51Z"}, "message": "re PR middle-end/37850 (infinite recursive call to __mulsc3 when multiplying not-constant complexs)\n\n\tPR middle-end/37850\n\t* libgcc2.c (__mulMODE3): Use explicit assignments to form the\n\tresult.\n\t(__divMODE3): Likewise.\n\nCo-Authored-By: Nathan Froyd <froydnj@codesourcery.com>\n\nFrom-SVN: r144751", "tree": {"sha": "b112387fb1d9c7588e52c54ff684c5e6c389a78b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b112387fb1d9c7588e52c54ff684c5e6c389a78b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddef83d233115de4468ed16c496015faaf838c72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddef83d233115de4468ed16c496015faaf838c72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddef83d233115de4468ed16c496015faaf838c72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddef83d233115de4468ed16c496015faaf838c72/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb947fd1d9e5710bb8539bfda06c1ba14c6d4447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb947fd1d9e5710bb8539bfda06c1ba14c6d4447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb947fd1d9e5710bb8539bfda06c1ba14c6d4447"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "7325c220e12f1a79dc4243c5117ccdebc16b9039", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddef83d233115de4468ed16c496015faaf838c72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddef83d233115de4468ed16c496015faaf838c72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddef83d233115de4468ed16c496015faaf838c72", "patch": "@@ -1,3 +1,11 @@\n+2009-03-10  Richard Guenther  <rguenther@suse.de>\n+\t    Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\tPR middle-end/37850\n+\t* libgcc2.c (__mulMODE3): Use explicit assignments to form the\n+\tresult.\n+\t(__divMODE3): Likewise.\n+\n 2009-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/39394"}, {"sha": "0966ac216c230366a2286c254031010134689bba", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddef83d233115de4468ed16c496015faaf838c72/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddef83d233115de4468ed16c496015faaf838c72/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=ddef83d233115de4468ed16c496015faaf838c72", "patch": "@@ -1831,6 +1831,7 @@ CTYPE\n CONCAT3(__mul,MODE,3) (MTYPE a, MTYPE b, MTYPE c, MTYPE d)\n {\n   MTYPE ac, bd, ad, bc, x, y;\n+  CTYPE res;\n \n   ac = a * c;\n   bd = b * d;\n@@ -1887,7 +1888,9 @@ CONCAT3(__mul,MODE,3) (MTYPE a, MTYPE b, MTYPE c, MTYPE d)\n \t}\n     }\n \n-  return x + I * y;\n+  __real__ res = x;\n+  __imag__ res = y;\n+  return res;\n }\n #endif /* complex multiply */\n \n@@ -1898,6 +1901,7 @@ CTYPE\n CONCAT3(__div,MODE,3) (MTYPE a, MTYPE b, MTYPE c, MTYPE d)\n {\n   MTYPE denom, ratio, x, y;\n+  CTYPE res;\n \n   /* ??? We can get better behavior from logarithmic scaling instead of\n      the division.  But that would mean starting to link libgcc against\n@@ -1943,7 +1947,9 @@ CONCAT3(__div,MODE,3) (MTYPE a, MTYPE b, MTYPE c, MTYPE d)\n \t}\n     }\n \n-  return x + I * y;\n+  __real__ res = x;\n+  __imag__ res = y;\n+  return res;\n }\n #endif /* complex divide */\n "}]}