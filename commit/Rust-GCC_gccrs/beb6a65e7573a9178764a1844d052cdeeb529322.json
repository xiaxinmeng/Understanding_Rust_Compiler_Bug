{"sha": "beb6a65e7573a9178764a1844d052cdeeb529322", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViNmE2NWU3NTczYTkxNzg3NjRhMTg0NGQwNTJjZGVlYjUyOTMyMg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-03-26T03:23:15Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-03-26T03:23:15Z"}, "message": "re PR fortran/31199 (write with \"t1\" + nonadvancing transfer format gives wrong output)\n\n2007-03-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/31199\n\t*io/io.h: Add saved_pos to gfc_unit structure.\n\t*io/open.c (new_unit): Initialize saved_pos.\n\t*io/transfer.c (data_transfer_init): Set max_pos to value in saved_pos.\n\t(next_record_w): Fix whitespace.\n\t(finalze_transfer): Calculate max_pos for ADVANCE=\"no\" and save it for\n\tlater use.  If not ADVANCE=\"no\" set saved_pos to zero.\n\nFrom-SVN: r123205", "tree": {"sha": "7005f5c75c7f6dbaca78f2f73008ed5b96700d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7005f5c75c7f6dbaca78f2f73008ed5b96700d1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beb6a65e7573a9178764a1844d052cdeeb529322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb6a65e7573a9178764a1844d052cdeeb529322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb6a65e7573a9178764a1844d052cdeeb529322", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb6a65e7573a9178764a1844d052cdeeb529322/comments", "author": null, "committer": null, "parents": [{"sha": "75b63e8b5b4a8b5bd7621edb8a4e2eefcc186981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b63e8b5b4a8b5bd7621edb8a4e2eefcc186981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b63e8b5b4a8b5bd7621edb8a4e2eefcc186981"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "6c2d7bbd5e45d5747f48298891c35ffdddf5a251", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=beb6a65e7573a9178764a1844d052cdeeb529322", "patch": "@@ -1,9 +1,22 @@\n+<<<<<<< .mine\n+2007-03-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/31199\n+\t*io/io.h: Add saved_pos to gfc_unit structure.\n+\t*io/open.c (new_unit): Initialize saved_pos.\n+\t*io/transfer.c (data_transfer_init): Set max_pos to value in saved_pos.\n+\t(next_record_w): Fix whitespace.\n+\t(finalze_transfer): Calculate max_pos for ADVANCE=\"no\" and save it for\n+\tlater use.  If not ADVANCE=\"no\" set saved_pos to zero.\n+\n+=======\n 2007-03-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/31196\n \t* intrinsics/reshape_generic.c (reshape_internal):  Increment\n \tcorrect variable.\n \n+>>>>>>> .r123204\n 2007-03-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/31052"}, {"sha": "ef1a287a184ac5131de8a9bced9624110a2013f4", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=beb6a65e7573a9178764a1844d052cdeeb529322", "patch": "@@ -443,7 +443,7 @@ typedef struct gfc_unit\n   struct gfc_unit *left, *right;\n   int priority;\n \n-  int read_bad, current_record;\n+  int read_bad, current_record, saved_pos;\n   enum\n   { NO_ENDFILE, AT_ENDFILE, AFTER_ENDFILE }\n   endfile;"}, {"sha": "44ff69d68dbff671292653b46eac30bf45ef041f", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=beb6a65e7573a9178764a1844d052cdeeb529322", "patch": "@@ -423,6 +423,7 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   u->mode = READING;\n   u->maxrec = 0;\n   u->bytes_left = 0;\n+  u->saved_pos = 0;\n \n   if (flags->position == POSITION_APPEND)\n     {"}, {"sha": "94bda09587bf7058b4c178da253df284608e464d", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb6a65e7573a9178764a1844d052cdeeb529322/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=beb6a65e7573a9178764a1844d052cdeeb529322", "patch": "@@ -1951,6 +1951,10 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \n   dtp->u.p.blank_status = dtp->u.p.current_unit->flags.blank;\n   dtp->u.p.sign_status = SIGN_S;\n+  \n+  /* Set the maximum position reached from the previous I/O operation.  This\n+     could be greater than zero from a previous non-advancing write.  */\n+  dtp->u.p.max_pos = dtp->u.p.current_unit->saved_pos;\n \n   pre_position (dtp);\n \n@@ -2461,7 +2465,6 @@ next_record_w (st_parameter_dt *dtp, int done)\n \t}\n       else\n \t{\n-\n \t  /* If this is the last call to next_record move to the farthest\n \t  position reached in preparation for completing the record.\n \t  (for file unit) */\n@@ -2603,12 +2606,20 @@ finalize_transfer (st_parameter_dt *dtp)\n       return;\n     }\n \n+  /* For non-advancing I/O, save the current maximum position for use in the\n+     next I/O operation if needed.  */\n   if (dtp->u.p.advance_status == ADVANCE_NO)\n     {\n+      int bytes_written = (int) (dtp->u.p.current_unit->recl\n+\t- dtp->u.p.current_unit->bytes_left);\n+      dtp->u.p.current_unit->saved_pos =\n+\tdtp->u.p.max_pos > 0 ? dtp->u.p.max_pos - bytes_written : 0;\n       flush (dtp->u.p.current_unit->s);\n       return;\n     }\n \n+  dtp->u.p.current_unit->saved_pos = 0;\n+\n   next_record (dtp, 1);\n   sfree (dtp->u.p.current_unit->s);\n }"}]}