{"sha": "a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2YjA5ZGNlNTU0MmI0ZWFjZmU1YzBlYzQ5NWNiNzA4ZmViMmE0Yw==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2012-01-30T10:33:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-30T10:33:44Z"}, "message": "prj-proc.adb (Recursive_Process): Set From_Encapsulated_Lib boolean value to true in the process list created by...\n\n2012-01-30  Pascal Obry  <obry@adacore.com>\n\n\t* prj-proc.adb (Recursive_Process): Set From_Encapsulated_Lib\n\tboolean value to true in the process list created by this routine.\n\t* prj.ads (Project_List_Element): New field From_Encapsulated_Lib.\n\tContinued work for KA06-021.\n\t* prj.adb (Compute_All_Imported_Projects): Set\n\tFrom_Encapsulated_Lib boolean flag.\n\nFrom-SVN: r183703", "tree": {"sha": "c8db778f4c10cfd5d0ce5a5f95e439329917e111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8db778f4c10cfd5d0ce5a5f95e439329917e111"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "457c5df44bb8524134ce27184f206368aa5c8e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457c5df44bb8524134ce27184f206368aa5c8e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/457c5df44bb8524134ce27184f206368aa5c8e21"}], "stats": {"total": 154, "additions": 105, "deletions": 49}, "files": [{"sha": "1389ebf4dd78b0bcbaba52a7d2919020de28e77d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "patch": "@@ -1,3 +1,12 @@\n+2012-01-30  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-proc.adb (Recursive_Process): Set From_Encapsulated_Lib\n+\tboolean value to true in the process list created by this routine.\n+\t* prj.ads (Project_List_Element): New field From_Encapsulated_Lib.\n+\tContinued work for KA06-021.\n+\t* prj.adb (Compute_All_Imported_Projects): Set\n+\tFrom_Encapsulated_Lib boolean flag.\n+\n 2012-01-30  Vincent Pucci  <pucci@adacore.com>\n \n \t* sem_dim.adb (Expand_Put_Call_With_Dimension_Symbol): Minor"}, {"sha": "0e45c0d6951ffde372ebdf8c9a62dfe1dda7f727", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 81, "deletions": 38, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@ with Prj.Env;\n with Prj.Err;  use Prj.Err;\n with Prj.Ext;  use Prj.Ext;\n with Prj.Nmsc; use Prj.Nmsc;\n+with Prj.Util;\n with Prj.Part;\n with Snames;\n \n@@ -149,7 +150,8 @@ package body Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Env                    : in out Prj.Tree.Environment;\n-      Extended_By            : Project_Id);\n+      Extended_By            : Project_Id;\n+      From_Encapsulated_Lib  : Boolean);\n    --  Process project with node From_Project_Node in the tree. Do nothing if\n    --  From_Project_Node is Empty_Node. If project has already been processed,\n    --  simply return its project id. Otherwise create a new project id, mark it\n@@ -161,6 +163,9 @@ package body Prj.Proc is\n    --  explicitly loaded. In the context of aggregate projects, only that\n    --  project is allowed to modify the environment that will be used to load\n    --  projects (Child_Env).\n+   --\n+   --  From_Encapsulated_Lib is true if we are parsing a project from\n+   --  encapsulated library dependencies.\n \n    function Get_Attribute_Index\n      (Tree  : Project_Node_Tree_Ref;\n@@ -2357,7 +2362,8 @@ package body Prj.Proc is\n          From_Project_Node      => From_Project_Node,\n          From_Project_Node_Tree => From_Project_Node_Tree,\n          Env                    => Env,\n-         Extended_By            => No_Project);\n+         Extended_By            => No_Project,\n+         From_Encapsulated_Lib  => False);\n \n       Success :=\n         Total_Errors_Detected = 0\n@@ -2491,7 +2497,8 @@ package body Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Env                    : in out Prj.Tree.Environment;\n-      Extended_By            : Project_Id)\n+      Extended_By            : Project_Id;\n+      From_Encapsulated_Lib  : Boolean)\n    is\n       Shared : constant Shared_Project_Tree_Data_Access := In_Tree.Shared;\n \n@@ -2550,21 +2557,20 @@ package body Prj.Proc is\n                     Project_Node_Of (With_Clause, From_Project_Node_Tree),\n                   From_Project_Node_Tree => From_Project_Node_Tree,\n                   Env                    => Env,\n-                  Extended_By            => No_Project);\n-\n-               --  Imported is the id of the last imported project. If\n-               --  it is nil, then this imported project is our first.\n+                  Extended_By            => No_Project,\n+                  From_Encapsulated_Lib  => From_Encapsulated_Lib);\n \n                if Imported = null then\n-                  Project.Imported_Projects :=\n-                    new Project_List_Element'\n-                      (Project => New_Project,\n-                       Next    => null);\n+                  Project.Imported_Projects := new Project_List_Element'\n+                    (Project               => New_Project,\n+                     From_Encapsulated_Lib => False,\n+                     Next                  => null);\n                   Imported := Project.Imported_Projects;\n                else\n                   Imported.Next := new Project_List_Element'\n-                    (Project => New_Project,\n-                     Next    => null);\n+                    (Project               => New_Project,\n+                     From_Encapsulated_Lib => False,\n+                     Next                  => null);\n                   Imported := Imported.Next;\n                end if;\n             end if;\n@@ -2762,7 +2768,7 @@ package body Prj.Proc is\n \n       else\n          declare\n-            Imported         : Project_List;\n+            Imported, Mark   : Project_List;\n             Declaration_Node : Project_Node_Id  := Empty_Node;\n \n             Name : constant Name_Id :=\n@@ -2795,10 +2801,18 @@ package body Prj.Proc is\n                   (Project_Qualifier_Of\n                     (From_Project_Node, From_Project_Node_Tree)));\n \n+            --  Note that at this point we do not know yet if the project has\n+            --  been withed from an encapsulated library or not.\n+\n             In_Tree.Projects :=\n               new Project_List_Element'\n-                    (Project => Project,\n-                     Next    => In_Tree.Projects);\n+             (Project               => Project,\n+              From_Encapsulated_Lib => False,\n+              Next                  => In_Tree.Projects);\n+\n+            --  Keep track of this point\n+\n+            Mark := In_Tree.Projects;\n \n             Processed_Projects.Set (Name, Project);\n \n@@ -2874,7 +2888,8 @@ package body Prj.Proc is\n                    (Declaration_Node, From_Project_Node_Tree),\n                From_Project_Node_Tree => From_Project_Node_Tree,\n                Env                    => Env,\n-               Extended_By            => Project);\n+               Extended_By            => Project,\n+               From_Encapsulated_Lib  => From_Encapsulated_Lib);\n \n             Process_Declarative_Items\n               (Project                => Project,\n@@ -2893,29 +2908,57 @@ package body Prj.Proc is\n \n             Process_Imported_Projects (Imported, Limited_With => True);\n \n-            if Err_Vars.Total_Errors_Detected = 0 then\n-               Process_Aggregated_Projects;\n+            --  At this point (after Process_Declarative_Items) we have the\n+            --  attribute values set, we can backtrace In_Tree.Project and\n+            --  set the From_Encapsulated_Library status.\n \n-               --  For an aggregate library we add the aggregated projects as\n-               --  imported ones. This is necessary to give visibility to all\n-               --  sources from the aggregates from the aggregated library\n-               --  projects.\n+            declare\n+               Lib_Standalone  : constant Prj.Variable_Value :=\n+                                   Prj.Util.Value_Of\n+                                     (Snames.Name_Library_Standalone,\n+                                      Project.Decl.Attributes,\n+                                      Shared);\n+               List            : Project_List := In_Tree.Projects;\n+               Is_Encapsulated : Boolean;\n+            begin\n+               Get_Name_String (Lib_Standalone.Value);\n+               To_Lower (Name_Buffer (1 .. Name_Len));\n \n-               if Project.Qualifier = Aggregate_Library then\n-                  declare\n-                     L : Aggregated_Project_List;\n-                  begin\n-                     L := Project.Aggregated_Projects;\n-                     while L /= null loop\n-                        Project.Imported_Projects :=\n-                          new Project_List_Element'\n-                            (Project => L.Project,\n-                             Next    => Project.Imported_Projects);\n-                        L := L.Next;\n-                     end loop;\n-                  end;\n+               Is_Encapsulated := Name_Buffer (1 .. Name_Len) = \"encapsulated\";\n+\n+               if Is_Encapsulated then\n+                  while List /= null and then List /= Mark loop\n+                     List.From_Encapsulated_Lib := Is_Encapsulated;\n+                     List := List.Next;\n+                  end loop;\n                end if;\n-            end if;\n+\n+               if Err_Vars.Total_Errors_Detected = 0 then\n+                  Process_Aggregated_Projects;\n+\n+                  --  For an aggregate library we add the aggregated projects\n+                  --  as imported ones. This is necessary to give visibility\n+                  --  to all sources from the aggregates from the aggregated\n+                  --  library projects.\n+\n+                  if Project.Qualifier = Aggregate_Library then\n+                     declare\n+                        L : Aggregated_Project_List;\n+                     begin\n+                        L := Project.Aggregated_Projects;\n+                        while L /= null loop\n+                           Project.Imported_Projects :=\n+                             new Project_List_Element'\n+                               (Project               => L.Project,\n+                                From_Encapsulated_Lib => Is_Encapsulated,\n+                                Next                  =>\n+                                  Project.Imported_Projects);\n+                           L := L.Next;\n+                        end loop;\n+                     end;\n+                  end if;\n+               end if;\n+            end;\n \n             if Project.Qualifier = Aggregate and then In_Tree.Is_Root_Tree then\n                Free (Child_Env);"}, {"sha": "efbdaf97d75168b2d6d523b3e23a446112c2b053", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "patch": "@@ -1477,9 +1477,10 @@ package body Prj is\n          Project : Project_Id;\n \n          procedure Recursive_Add\n-           (Prj   : Project_Id;\n-            Tree  : Project_Tree_Ref;\n-            Dummy : in out Boolean);\n+           (Prj     : Project_Id;\n+            Tree    : Project_Tree_Ref;\n+            Context : Project_Context;\n+            Dummy   : in out Boolean);\n          --  Recursively add the projects imported by project Project, but not\n          --  those that are extended.\n \n@@ -1488,9 +1489,10 @@ package body Prj is\n          -------------------\n \n          procedure Recursive_Add\n-           (Prj   : Project_Id;\n-            Tree  : Project_Tree_Ref;\n-            Dummy : in out Boolean)\n+           (Prj     : Project_Id;\n+            Tree    : Project_Tree_Ref;\n+            Context : Project_Context;\n+            Dummy   : in out Boolean)\n          is\n             pragma Unreferenced (Dummy, Tree);\n \n@@ -1521,13 +1523,14 @@ package body Prj is\n \n                Project.All_Imported_Projects :=\n                  new Project_List_Element'\n-                   (Project => Prj2,\n-                    Next    => Project.All_Imported_Projects);\n+                   (Project               => Prj2,\n+                    From_Encapsulated_Lib => Context.From_Encapsulated_Lib,\n+                    Next                  => Project.All_Imported_Projects);\n             end if;\n          end Recursive_Add;\n \n          procedure For_All_Projects is\n-           new For_Every_Project_Imported (Boolean, Recursive_Add);\n+           new For_Every_Project_Imported_Context (Boolean, Recursive_Add);\n \n          Dummy : Boolean := False;\n          List  : Project_List;"}, {"sha": "c185aef6e01e000f249ebd171c10ee21911b871a", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76b09dce5542b4eacfe5c0ec495cb708feb2a4c/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=a76b09dce5542b4eacfe5c0ec495cb708feb2a4c", "patch": "@@ -938,8 +938,9 @@ package Prj is\n    type Project_List_Element;\n    type Project_List is access all Project_List_Element;\n    type Project_List_Element is record\n-      Project : Project_Id   := No_Project;\n-      Next    : Project_List := null;\n+      Project               : Project_Id := No_Project;\n+      From_Encapsulated_Lib : Boolean := False;\n+      Next                  : Project_List := null;\n    end record;\n    --  A list of projects\n "}]}