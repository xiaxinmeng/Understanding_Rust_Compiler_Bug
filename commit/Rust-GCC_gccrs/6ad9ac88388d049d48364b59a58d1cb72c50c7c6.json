{"sha": "6ad9ac88388d049d48364b59a58d1cb72c50c7c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkOWFjODgzODhkMDQ5ZDQ4MzY0YjU5YTU4ZDFjYjcyYzUwYzdjNg==", "commit": {"author": {"name": "Bilyan Borisov", "email": "bilyan.borisov@arm.com", "date": "2015-09-21T10:07:44Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-09-21T10:07:44Z"}, "message": "[ARM] Replacing variable swaps that use a temporary variable with a call to std::swap in gcc/config/arm/arm.c\n\nOn behalf of <bilyan.borisov@arm.com>\n\n2015-09-21  Bilyan Borisov  <bilyan.borisov@arm.com>\n\n\t* config/arm/arm.c (thumb_output_move_mem_multiple): Replaced\n\toperands[4] operands[5] swap with std::swap, removed tmp variable.\n\t(arm_evpc_neon_vzip): Replaced in0/in1 and\n\tout0/out1 swaps with std::swap, removed x variable.\n\t(arm_evpc_neon_vtrn): Replaced in0/int1 and\n\tout0/out1 swaos with std::swap, removed x variable.\n\t(arm_expand_vec_perm_const_1): Replaced\n\td->op0/d->op1 swap with std::swap, removed x variable.\n\t(arm_evpc_neon_vuzp): Replaced in0/in1 and\n\tout0/out1 swaps with std::swap, removed x variable.\n\nFrom-SVN: r227963", "tree": {"sha": "23c940822167094e236f7b01b1056d1e18b411c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c940822167094e236f7b01b1056d1e18b411c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ad9ac88388d049d48364b59a58d1cb72c50c7c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad9ac88388d049d48364b59a58d1cb72c50c7c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad9ac88388d049d48364b59a58d1cb72c50c7c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad9ac88388d049d48364b59a58d1cb72c50c7c6/comments", "author": null, "committer": null, "parents": [{"sha": "84fe5e5c412dccda48c87c775672433d5034b160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fe5e5c412dccda48c87c775672433d5034b160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84fe5e5c412dccda48c87c775672433d5034b160"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "93df84b82f164eaf89648bab0e37c22ec4d22b08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad9ac88388d049d48364b59a58d1cb72c50c7c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad9ac88388d049d48364b59a58d1cb72c50c7c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ad9ac88388d049d48364b59a58d1cb72c50c7c6", "patch": "@@ -1,3 +1,16 @@\n+2015-09-21  Bilyan Borisov  <bilyan.borisov@arm.com>\n+\n+\t* config/arm/arm.c (thumb_output_move_mem_multiple): Replaced\n+\toperands[4] operands[5] swap with std::swap, removed tmp variable.\n+\t(arm_evpc_neon_vzip): Replaced in0/in1 and\n+\tout0/out1 swaps with std::swap, removed x variable.\n+\t(arm_evpc_neon_vtrn): Replaced in0/int1 and\n+\tout0/out1 swaos with std::swap, removed x variable.\n+\t(arm_expand_vec_perm_const_1): Replaced\n+\td->op0/d->op1 swap with std::swap, removed x variable.\n+\t(arm_evpc_neon_vuzp): Replaced in0/in1 and\n+\tout0/out1 swaps with std::swap, removed x variable.\n+\n 2015-09-21  Jonathan Yong  <10walls@gmail.com>\n \n \t* config/i386/cygwin.h (STARTFILE_SPEC): Explicitly search"}, {"sha": "02f5dc37ead14eab794be760e2281cd2ff103fa6", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad9ac88388d049d48364b59a58d1cb72c50c7c6/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad9ac88388d049d48364b59a58d1cb72c50c7c6/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=6ad9ac88388d049d48364b59a58d1cb72c50c7c6", "patch": "@@ -25656,17 +25656,12 @@ thumb_load_double_from_address (rtx *operands)\n const char *\n thumb_output_move_mem_multiple (int n, rtx *operands)\n {\n-  rtx tmp;\n-\n   switch (n)\n     {\n     case 2:\n       if (REGNO (operands[4]) > REGNO (operands[5]))\n-\t{\n-\t  tmp = operands[4];\n-\t  operands[4] = operands[5];\n-\t  operands[5] = tmp;\n-\t}\n+\tstd::swap (operands[4], operands[5]);\n+\n       output_asm_insn (\"ldmia\\t%1!, {%4, %5}\", operands);\n       output_asm_insn (\"stmia\\t%0!, {%4, %5}\", operands);\n       break;\n@@ -28216,7 +28211,7 @@ static bool\n arm_evpc_neon_vuzp (struct expand_vec_perm_d *d)\n {\n   unsigned int i, odd, mask, nelt = d->nelt;\n-  rtx out0, out1, in0, in1, x;\n+  rtx out0, out1, in0, in1;\n   rtx (*gen)(rtx, rtx, rtx, rtx);\n \n   if (GET_MODE_UNIT_SIZE (d->vmode) >= 8)\n@@ -28260,14 +28255,14 @@ arm_evpc_neon_vuzp (struct expand_vec_perm_d *d)\n   in1 = d->op1;\n   if (BYTES_BIG_ENDIAN)\n     {\n-      x = in0, in0 = in1, in1 = x;\n+      std::swap (in0, in1);\n       odd = !odd;\n     }\n \n   out0 = d->target;\n   out1 = gen_reg_rtx (d->vmode);\n   if (odd)\n-    x = out0, out0 = out1, out1 = x;\n+    std::swap (out0, out1);\n \n   emit_insn (gen (out0, in0, in1, out1));\n   return true;\n@@ -28279,7 +28274,7 @@ static bool\n arm_evpc_neon_vzip (struct expand_vec_perm_d *d)\n {\n   unsigned int i, high, mask, nelt = d->nelt;\n-  rtx out0, out1, in0, in1, x;\n+  rtx out0, out1, in0, in1;\n   rtx (*gen)(rtx, rtx, rtx, rtx);\n \n   if (GET_MODE_UNIT_SIZE (d->vmode) >= 8)\n@@ -28327,14 +28322,14 @@ arm_evpc_neon_vzip (struct expand_vec_perm_d *d)\n   in1 = d->op1;\n   if (BYTES_BIG_ENDIAN)\n     {\n-      x = in0, in0 = in1, in1 = x;\n+      std::swap (in0, in1);\n       high = !high;\n     }\n \n   out0 = d->target;\n   out1 = gen_reg_rtx (d->vmode);\n   if (high)\n-    x = out0, out0 = out1, out1 = x;\n+    std::swap (out0, out1);\n \n   emit_insn (gen (out0, in0, in1, out1));\n   return true;\n@@ -28420,7 +28415,7 @@ static bool\n arm_evpc_neon_vtrn (struct expand_vec_perm_d *d)\n {\n   unsigned int i, odd, mask, nelt = d->nelt;\n-  rtx out0, out1, in0, in1, x;\n+  rtx out0, out1, in0, in1;\n   rtx (*gen)(rtx, rtx, rtx, rtx);\n \n   if (GET_MODE_UNIT_SIZE (d->vmode) >= 8)\n@@ -28465,14 +28460,14 @@ arm_evpc_neon_vtrn (struct expand_vec_perm_d *d)\n   in1 = d->op1;\n   if (BYTES_BIG_ENDIAN)\n     {\n-      x = in0, in0 = in1, in1 = x;\n+      std::swap (in0, in1);\n       odd = !odd;\n     }\n \n   out0 = d->target;\n   out1 = gen_reg_rtx (d->vmode);\n   if (odd)\n-    x = out0, out0 = out1, out1 = x;\n+    std::swap (out0, out1);\n \n   emit_insn (gen (out0, in0, in1, out1));\n   return true;\n@@ -28595,14 +28590,11 @@ arm_expand_vec_perm_const_1 (struct expand_vec_perm_d *d)\n   if (d->perm[0] >= d->nelt)\n     {\n       unsigned i, nelt = d->nelt;\n-      rtx x;\n \n       for (i = 0; i < nelt; ++i)\n \td->perm[i] = (d->perm[i] + nelt) & (2 * nelt - 1);\n \n-      x = d->op0;\n-      d->op0 = d->op1;\n-      d->op1 = x;\n+      std::swap (d->op0, d->op1);\n     }\n \n   if (TARGET_NEON)"}]}