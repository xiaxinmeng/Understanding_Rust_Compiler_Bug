{"sha": "6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhNTJhNThiN2UxYjVmYzg5ODQxZTdjZTJiYjUwMTIzY2U5YjNkNQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-05-07T15:34:27Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-05-07T15:34:27Z"}, "message": "config/avr/avr.c: Adjust indentation.\n\nFrom-SVN: r187254", "tree": {"sha": "0cbc7ef1b355238be13b14a2403e36a22021fd89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cbc7ef1b355238be13b14a2403e36a22021fd89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5/comments", "author": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7d6bc0160884eda5d07a6b9bd48826a66981e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d6bc0160884eda5d07a6b9bd48826a66981e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d6bc0160884eda5d07a6b9bd48826a66981e75"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "7ba98e27319784bde30cf4e354e891acd0e0ac26", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=6aa52a58b7e1b5fc89841e7ce2bb50123ce9b3d5", "patch": "@@ -867,7 +867,7 @@ avr_prologue_setup_frame (HOST_WIDE_INT size, HARD_REG_SET set)\n                                             ? frame_pointer_rtx\n                                             : stack_pointer_rtx),\n                                  plus_constant (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t\t-(size + live_seq))));\n+                                                -(size + live_seq))));\n \n       /* Note that live_seq always contains r28+r29, but the other\n          registers to be saved are all below 18.  */\n@@ -881,7 +881,7 @@ avr_prologue_setup_frame (HOST_WIDE_INT size, HARD_REG_SET set)\n           rtx m, r;\n \n           m = gen_rtx_MEM (QImode, plus_constant (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t\t  offset));\n+                                                  offset));\n           r = gen_rtx_REG (QImode, reg);\n           add_reg_note (insn, REG_CFA_OFFSET, gen_rtx_SET (VOIDmode, m, r));\n         }\n@@ -1003,7 +1003,7 @@ avr_prologue_setup_frame (HOST_WIDE_INT size, HARD_REG_SET set)\n               add_reg_note (insn, REG_CFA_ADJUST_CFA,\n                             gen_rtx_SET (VOIDmode, fp,\n                                          plus_constant (Pmode, fp,\n-\t\t\t\t\t\t\t-size_cfa)));\n+                                                        -size_cfa)));\n             }\n           \n           /* Copy to stack pointer.  Note that since we've already\n@@ -1031,8 +1031,8 @@ avr_prologue_setup_frame (HOST_WIDE_INT size, HARD_REG_SET set)\n               add_reg_note (insn, REG_CFA_ADJUST_CFA,\n                             gen_rtx_SET (VOIDmode, stack_pointer_rtx,\n                                          plus_constant (Pmode,\n-\t\t\t\t\t\t\tstack_pointer_rtx,\n-\t\t\t\t\t\t\t-size_cfa)));\n+                                                        stack_pointer_rtx,\n+                                                        -size_cfa)));\n             }\n           \n           fp_plus_insns = get_insns ();\n@@ -1051,13 +1051,13 @@ avr_prologue_setup_frame (HOST_WIDE_INT size, HARD_REG_SET set)\n \n               insn = emit_move_insn (stack_pointer_rtx,\n                                      plus_constant (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t\t    -size));\n+                                                    -size));\n               RTX_FRAME_RELATED_P (insn) = 1;\n               add_reg_note (insn, REG_CFA_ADJUST_CFA,\n                             gen_rtx_SET (VOIDmode, stack_pointer_rtx,\n                                          plus_constant (Pmode,\n \t\t\t\t\t\t\tstack_pointer_rtx,\n-\t\t\t\t\t\t\t-size_cfa)));\n+                                                        -size_cfa)));\n               if (frame_pointer_needed)\n                 {\n                   insn = emit_move_insn (fp, stack_pointer_rtx);"}]}