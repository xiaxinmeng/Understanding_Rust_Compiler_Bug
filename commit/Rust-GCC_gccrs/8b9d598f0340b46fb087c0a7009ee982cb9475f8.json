{"sha": "8b9d598f0340b46fb087c0a7009ee982cb9475f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI5ZDU5OGYwMzQwYjQ2ZmIwODdjMGE3MDA5ZWU5ODJjYjk0NzVmOA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2009-03-03T18:27:42Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2009-03-03T18:27:42Z"}, "message": "re PR middle-end/34443 (The GCC manual about section variable attribute is incorrect)\n\n\tPR middle-end/34443\n\t* doc/extend.texi (section): Update description.\n\nFrom-SVN: r144582", "tree": {"sha": "32d3695bd577871d9fe04bdf8dc6493d06b3f8b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32d3695bd577871d9fe04bdf8dc6493d06b3f8b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b9d598f0340b46fb087c0a7009ee982cb9475f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9d598f0340b46fb087c0a7009ee982cb9475f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9d598f0340b46fb087c0a7009ee982cb9475f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9d598f0340b46fb087c0a7009ee982cb9475f8/comments", "author": null, "committer": null, "parents": [{"sha": "13e4e36e171c7053eb63e848b841b8154eaada40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e4e36e171c7053eb63e848b841b8154eaada40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13e4e36e171c7053eb63e848b841b8154eaada40"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "a4a187464e77f057c9e590d94c156c96a7121ab6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9d598f0340b46fb087c0a7009ee982cb9475f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9d598f0340b46fb087c0a7009ee982cb9475f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b9d598f0340b46fb087c0a7009ee982cb9475f8", "patch": "@@ -1,3 +1,8 @@\n+2009-03-03  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR middle-end/34443\n+\t* doc/extend.texi (section): Update description.\n+\n 2009-03-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/39345"}, {"sha": "f901db32fdac9f82bbca94f1fb802e40e7b59243", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9d598f0340b46fb087c0a7009ee982cb9475f8/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9d598f0340b46fb087c0a7009ee982cb9475f8/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=8b9d598f0340b46fb087c0a7009ee982cb9475f8", "patch": "@@ -3872,7 +3872,7 @@ section.  For example, this small program uses several specific section names:\n struct duart a __attribute__ ((section (\"DUART_A\"))) = @{ 0 @};\n struct duart b __attribute__ ((section (\"DUART_B\"))) = @{ 0 @};\n char stack[10000] __attribute__ ((section (\"STACK\"))) = @{ 0 @};\n-int init_data __attribute__ ((section (\"INITDATA\"))) = 0;\n+int init_data __attribute__ ((section (\"INITDATA\")));\n \n main()\n @{\n@@ -3889,18 +3889,19 @@ main()\n @end smallexample\n \n @noindent\n-Use the @code{section} attribute with an @emph{initialized} definition\n-of a @emph{global} variable, as shown in the example.  GCC issues\n-a warning and otherwise ignores the @code{section} attribute in\n-uninitialized variable declarations.\n+Use the @code{section} attribute with\n+@emph{global} variables and not @emph{local} variables,\n+as shown in the example.\n \n-You may only use the @code{section} attribute with a fully initialized\n-global definition because of the way linkers work.  The linker requires\n+You may use the @code{section} attribute with initialized or\n+uninitialized global variables but the linker requires\n each object be defined once, with the exception that uninitialized\n variables tentatively go in the @code{common} (or @code{bss}) section\n-and can be multiply ``defined''.  You can force a variable to be\n-initialized with the @option{-fno-common} flag or the @code{nocommon}\n-attribute.\n+and can be multiply ``defined''.  Using the @code{section} attribute\n+will change what section the variable goes into and may cause the\n+linker to issue an error if an uninitialized variable has multiple\n+definitions.  You can force a variable to be initialized with the\n+@option{-fno-common} flag or the @code{nocommon} attribute.\n \n Some file formats do not support arbitrary sections so the @code{section}\n attribute is not available on all platforms."}]}