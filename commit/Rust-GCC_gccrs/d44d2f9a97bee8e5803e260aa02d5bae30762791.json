{"sha": "d44d2f9a97bee8e5803e260aa02d5bae30762791", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ0ZDJmOWE5N2JlZThlNTgwM2UyNjBhYTAyZDViYWUzMDc2Mjc5MQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-08-15T21:41:34Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-08-15T21:41:34Z"}, "message": "trans-expr.c (gfc_trans_assign_vtab_procs): Clean up (we don't have vtabs for generics any more).\n\n2010-08-15  Janus Weil  <janus@gcc.gnu.org>\n\n\t* trans-expr.c (gfc_trans_assign_vtab_procs): Clean up (we don't have\n\tvtabs for generics any more).\n\nFrom-SVN: r163270", "tree": {"sha": "f744622cb851b6ae722684842f2d68853268718f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f744622cb851b6ae722684842f2d68853268718f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d44d2f9a97bee8e5803e260aa02d5bae30762791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44d2f9a97bee8e5803e260aa02d5bae30762791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44d2f9a97bee8e5803e260aa02d5bae30762791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44d2f9a97bee8e5803e260aa02d5bae30762791/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef7e0035004ada8115de35ad9bc6266ad7d512d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7e0035004ada8115de35ad9bc6266ad7d512d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7e0035004ada8115de35ad9bc6266ad7d512d9"}], "stats": {"total": 65, "additions": 15, "deletions": 50}, "files": [{"sha": "dbb06cfb19f948b85a7cc516038d6a4ef206ad70", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44d2f9a97bee8e5803e260aa02d5bae30762791/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44d2f9a97bee8e5803e260aa02d5bae30762791/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d44d2f9a97bee8e5803e260aa02d5bae30762791", "patch": "@@ -1,3 +1,8 @@\n+2010-08-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\t* trans-expr.c (gfc_trans_assign_vtab_procs): Clean up (we don't have\n+\tvtabs for generics any more).\n+\n 2010-08-15  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/38936"}, {"sha": "98000a1cfbb7c6945e13cb4c504ce8cd263679f4", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 10, "deletions": 50, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44d2f9a97bee8e5803e260aa02d5bae30762791/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44d2f9a97bee8e5803e260aa02d5bae30762791/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=d44d2f9a97bee8e5803e260aa02d5bae30762791", "patch": "@@ -5606,65 +5606,26 @@ void gfc_trans_assign_vtab_procs (stmtblock_t *block, gfc_symbol *dt,\n \t\t\t\t  gfc_symbol *vtab)\n {\n   gfc_component *cmp;\n-  tree vtb;\n-  tree ctree;\n-  tree proc;\n-  tree cond = NULL_TREE;\n+  tree vtb, ctree, proc, cond = NULL_TREE;\n   stmtblock_t body;\n-  bool seen_extends;\n \n   /* Point to the first procedure pointer.  */\n   cmp = gfc_find_component (vtab->ts.u.derived, \"$extends\", true, true);\n-\n-  seen_extends = (cmp != NULL);\n-\n+  cmp = cmp->next;\n+  if (!cmp)\n+    return;\n+  \n   vtb = gfc_get_symbol_decl (vtab);\n \n-  if (seen_extends)\n-    {\n-      cmp = cmp->next;\n-      if (!cmp)\n-\treturn;\n-      ctree = fold_build3 (COMPONENT_REF, TREE_TYPE (cmp->backend_decl),\n-\t\t           vtb, cmp->backend_decl, NULL_TREE);\n-      cond = fold_build2 (EQ_EXPR, boolean_type_node, ctree,\n-\t\t\t   build_int_cst (TREE_TYPE (ctree), 0));\n-    }\n-  else\n-    {\n-      cmp = vtab->ts.u.derived->components; \n-    }\n+  ctree = fold_build3 (COMPONENT_REF, TREE_TYPE (cmp->backend_decl), vtb,\n+\t\t       cmp->backend_decl, NULL_TREE);\n+  cond = fold_build2 (EQ_EXPR, boolean_type_node, ctree,\n+\t\t      build_int_cst (TREE_TYPE (ctree), 0));\n \n   gfc_init_block (&body);\n   for (; cmp; cmp = cmp->next)\n     {\n       gfc_symbol *target = NULL;\n-      \n-      /* Generic procedure - build its vtab.  */\n-      if (cmp->ts.type == BT_DERIVED && !cmp->tb)\n-\t{\n-\t  gfc_symbol *vt = cmp->ts.interface;\n-\n-\t  if (vt == NULL)\n-\t    {\n-\t      /* Use association loses the interface.  Obtain the vtab\n-\t\t by name instead.  */\n-\t      char name[2 * GFC_MAX_SYMBOL_LEN + 8];\n-\t      sprintf (name, \"vtab$%s$%s\", vtab->ts.u.derived->name,\n-\t\t       cmp->name);\n-\t      gfc_find_symbol (name, vtab->ns, 0, &vt);\n-\t      if (vt == NULL)\n-\t\tcontinue;\n-\t    }\n-\n-\t  gfc_trans_assign_vtab_procs (&body, dt, vt);\n-\t  ctree = fold_build3 (COMPONENT_REF, TREE_TYPE (cmp->backend_decl),\n-\t\t\t       vtb, cmp->backend_decl, NULL_TREE);\n-\t  proc = gfc_get_symbol_decl (vt);\n-\t  proc = gfc_build_addr_expr (TREE_TYPE (ctree), proc);\n-\t  gfc_add_modify (&body, ctree, proc);\n-\t  continue;\n-\t}\n \n       /* This is required when typebound generic procedures are called\n \t with derived type targets.  The specific procedures do not get\n@@ -5691,8 +5652,7 @@ void gfc_trans_assign_vtab_procs (stmtblock_t *block, gfc_symbol *dt,\n \n   proc = gfc_finish_block (&body);\n \n-  if (seen_extends)\n-    proc = build3_v (COND_EXPR, cond, proc, build_empty_stmt (input_location));\n+  proc = build3_v (COND_EXPR, cond, proc, build_empty_stmt (input_location));\n \n   gfc_add_expr_to_block (block, proc);\n }"}]}