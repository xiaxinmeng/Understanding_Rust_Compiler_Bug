{"sha": "4ea5d54b3c7175de045589f994fc94ed7e59d80d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhNWQ1NGIzYzcxNzVkZTA0NTU4OWY5OTRmYzk0ZWQ3ZTU5ZDgwZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-02T09:15:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2020-01-02T09:15:00Z"}, "message": "re PR ipa/93087 (Bogus `-Wsuggest-attribute=cold` on function already marked as `__attribute__((cold))`)\n\n\tPR ipa/93087\n\t* predict.c (compute_function_frequency): Don't call\n\twarn_function_cold on functions that already have cold attribute.\n\n\t* c-c++-common/cold-1.c: New test.\n\nFrom-SVN: r279829", "tree": {"sha": "4472bba5f8bb5925bc2f7a9345c82197dd3b83f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4472bba5f8bb5925bc2f7a9345c82197dd3b83f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ea5d54b3c7175de045589f994fc94ed7e59d80d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea5d54b3c7175de045589f994fc94ed7e59d80d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ea5d54b3c7175de045589f994fc94ed7e59d80d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea5d54b3c7175de045589f994fc94ed7e59d80d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b70275ee1b0de038324280276a9edebcaa93d90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b70275ee1b0de038324280276a9edebcaa93d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b70275ee1b0de038324280276a9edebcaa93d90"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "34b4976819aa5b25de2f2b75a056f71fd7ab1c9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ea5d54b3c7175de045589f994fc94ed7e59d80d", "patch": "@@ -1,3 +1,9 @@\n+2020-01-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/93087\n+\t* predict.c (compute_function_frequency): Don't call\n+\twarn_function_cold on functions that already have cold attribute.\n+\n 2020-01-01  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR target/67834"}, {"sha": "a134deb9b3f57b0ab785ce995d6cbe59d7f6f4b9", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=4ea5d54b3c7175de045589f994fc94ed7e59d80d", "patch": "@@ -3937,10 +3937,7 @@ compute_function_frequency (void)\n       int flags = flags_from_decl_or_type (current_function_decl);\n       if (lookup_attribute (\"cold\", DECL_ATTRIBUTES (current_function_decl))\n \t  != NULL)\n-\t{\n-          node->frequency = NODE_FREQUENCY_UNLIKELY_EXECUTED;\n-\t  warn_function_cold (current_function_decl);\n-\t}\n+\tnode->frequency = NODE_FREQUENCY_UNLIKELY_EXECUTED;\n       else if (lookup_attribute (\"hot\", DECL_ATTRIBUTES (current_function_decl))\n \t       != NULL)\n         node->frequency = NODE_FREQUENCY_HOT;"}, {"sha": "e943998ac6f98df88ea806732c4932bb30e55b9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ea5d54b3c7175de045589f994fc94ed7e59d80d", "patch": "@@ -1,3 +1,8 @@\n+2020-01-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/93087\n+\t* c-c++-common/cold-1.c: New test.\n+\n 2020-01-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/90374"}, {"sha": "3493623e1eba2facdc817c3c7e17270de8ae018f", "filename": "gcc/testsuite/c-c++-common/cold-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcold-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea5d54b3c7175de045589f994fc94ed7e59d80d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcold-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcold-1.c?ref=4ea5d54b3c7175de045589f994fc94ed7e59d80d", "patch": "@@ -0,0 +1,22 @@\n+/* PR ipa/93087 */\n+/* { dg-do compile { target nonpic } } */\n+/* { dg-options \"-O1 -Wsuggest-attribute=cold\" } */\n+\n+extern void *getdata (void);\n+extern int set_error (char const *message) __attribute__((cold));\n+\n+__attribute__((cold)) int\n+set_nomem (void)\t/* { dg-bogus \"function might be candidate for attribute 'cold'\" } */\n+{\n+  return set_error (\"Allocation failed\");\n+}\n+\n+void *\n+getdata_or_set_error (void)\n+{\n+  void *result;\n+  result = getdata ();\n+  if (!result)\n+    set_nomem ();\n+  return result;\n+}"}]}