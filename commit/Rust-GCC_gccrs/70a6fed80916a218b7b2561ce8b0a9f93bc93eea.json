{"sha": "70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhNmZlZDgwOTE2YTIxOGI3YjI1NjFjZThiMGE5ZjkzYmM5M2VlYQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@imgtec.com", "date": "2015-05-12T22:58:39Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2015-05-12T22:58:39Z"}, "message": "mips.c (mips_print_operand): Remove 'y' operand code.\n\n\t* config/mips/mips.c (mips_print_operand): Remove 'y' operand code.\n\t* config/mips/mips.md (<GPR:d>lsa): Rewrite with shift operator.\n\t* config/mips/predicates.md (const_immlsa_operand): Remove log call.\n\nFrom-SVN: r223101", "tree": {"sha": "9a673976b4c48260b6302a4172309a8e92b7a6b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a673976b4c48260b6302a4172309a8e92b7a6b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/comments", "author": null, "committer": null, "parents": [{"sha": "38109dbe011a7f69dc36c402186f6ffb2b385ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38109dbe011a7f69dc36c402186f6ffb2b385ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38109dbe011a7f69dc36c402186f6ffb2b385ac5"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "cc07c1db19896f09671d6ad0ac1defa3a7fc64d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "patch": "@@ -1,3 +1,9 @@\n+2015-05-12  Steve Ellcey  <sellcey@imgtec.com>\n+\n+\t* config/mips/mips.c (mips_print_operand): Remove 'y' operand code.\n+\t* config/mips/mips.md (<GPR:d>lsa): Rewrite with shift operator.\n+\t* config/mips/predicates.md (const_immlsa_operand): Remove log call.\n+\n 2015-05-12  David Malcolm  <dmalcolm@redhat.com>\n \n \t* doc/invoke.texi (Warning Options): Add -Wmisleading-indentation."}, {"sha": "8c66cbd89c8f46b84b5559c7ac7dc3899a7ad95b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "patch": "@@ -8440,7 +8440,6 @@ mips_print_operand_punct_valid_p (unsigned char code)\n    'x'\tPrint the low 16 bits of CONST_INT OP in hexadecimal format.\n    'd'\tPrint CONST_INT OP in decimal.\n    'm'\tPrint one less than CONST_INT OP in decimal.\n-   'y'\tPrint exact log2 of CONST_INT OP in decimal.\n    'h'\tPrint the high-part relocation associated with OP, after stripping\n \t  any outermost HIGH.\n    'R'\tPrint the low-part relocation associated with OP.\n@@ -8504,19 +8503,6 @@ mips_print_operand (FILE *file, rtx op, int letter)\n \toutput_operand_lossage (\"invalid use of '%%%c'\", letter);\n       break;\n \n-    case 'y':\n-      if (CONST_INT_P (op))\n-\t{\n-\t  int val = exact_log2 (INTVAL (op));\n-\t  if (val != -1)\n-\t    fprintf (file, \"%d\", val);\n-\t  else\n-\t    output_operand_lossage (\"invalid use of '%%%c'\", letter);\n-\t}\n-      else\n-\toutput_operand_lossage (\"invalid use of '%%%c'\", letter);\n-      break;\n-\n     case 'h':\n       if (code == HIGH)\n \top = XEXP (op, 0);"}, {"sha": "f6921c691b6f6d73a82a4677d2712e27aea6373f", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "patch": "@@ -5528,11 +5528,11 @@\n \n (define_insn \"<GPR:d>lsa\"\n  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n-       (plus:GPR (mult:GPR (match_operand:GPR 1 \"register_operand\" \"d\")\n-\t\t\t   (match_operand 2 \"const_immlsa_operand\" \"\"))\n+       (plus:GPR (ashift:GPR (match_operand:GPR 1 \"register_operand\" \"d\")\n+\t\t\t     (match_operand 2 \"const_immlsa_operand\" \"\"))\n \t\t(match_operand:GPR 3 \"register_operand\" \"d\")))]\n  \"ISA_HAS_<GPR:D>LSA\"\n- \"<GPR:d>lsa\\t%0,%1,%3,%y2\"\n+ \"<GPR:d>lsa\\t%0,%1,%3,%2\"\n  [(set_attr \"type\" \"arith\")\n   (set_attr \"mode\" \"<GPR:MODE>\")])\n "}, {"sha": "4929c3dc27ee000df82e31a27d56f2addde80d6b", "filename": "gcc/config/mips/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2Fconfig%2Fmips%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a6fed80916a218b7b2561ce8b0a9f93bc93eea/gcc%2Fconfig%2Fmips%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fpredicates.md?ref=70a6fed80916a218b7b2561ce8b0a9f93bc93eea", "patch": "@@ -35,7 +35,7 @@\n \n (define_predicate \"const_immlsa_operand\"\n   (and (match_code \"const_int\")\n-         (match_test \"IN_RANGE (exact_log2 (INTVAL (op)), 1, 4)\")))\n+         (match_test \"IN_RANGE (INTVAL (op), 1, 4)\")))\n \n (define_predicate \"const_uimm6_operand\"\n   (and (match_code \"const_int\")"}]}