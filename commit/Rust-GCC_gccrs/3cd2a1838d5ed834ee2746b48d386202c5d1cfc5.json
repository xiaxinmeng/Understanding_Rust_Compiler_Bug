{"sha": "3cd2a1838d5ed834ee2746b48d386202c5d1cfc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NkMmExODM4ZDVlZDgzNGVlMjc0NmI0OGQzODYyMDJjNWQxY2ZjNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-01-12T19:46:34Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-01-12T19:46:34Z"}, "message": "* config/mips/mips.c (mips_symbolic_constant_p): Revert last patch.\n\nFrom-SVN: r75749", "tree": {"sha": "3bfd02131df9e94c144f7fd1022e279494e00617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bfd02131df9e94c144f7fd1022e279494e00617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5/comments", "author": null, "committer": null, "parents": [{"sha": "5e777af517b3165ec4828e5ea2b9f4700f2434af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e777af517b3165ec4828e5ea2b9f4700f2434af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e777af517b3165ec4828e5ea2b9f4700f2434af"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "825818d401b5c0ff8ad71ab1e9c7a7e8448c84b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cd2a1838d5ed834ee2746b48d386202c5d1cfc5", "patch": "@@ -1,3 +1,7 @@\n+2004-01-12  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_symbolic_constant_p): Revert last patch.\n+\n 2004-01-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n \tPR optimization/12508."}, {"sha": "66bc05344fba78299169aaa95a14d6cedb90df5d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd2a1838d5ed834ee2746b48d386202c5d1cfc5/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=3cd2a1838d5ed834ee2746b48d386202c5d1cfc5", "patch": "@@ -902,16 +902,6 @@ mips_symbolic_constant_p (rtx x, enum mips_symbol_type *symbol_type)\n   if (offset == 0)\n     return true;\n \n-  /* If X refers to a string constant, and that constant is put into a\n-     mergeable section, the linker will need to know which string is\n-     being accessed.  It has no way of distinguishing an out-of-bounds\n-     access to X from an in-bounds access to a later or earlier string.  */\n-  if (GET_CODE (x) == SYMBOL_REF\n-      && SYMBOL_REF_DECL (x) != 0\n-      && TREE_CODE (SYMBOL_REF_DECL (x)) == STRING_CST\n-      && !(offset > 0 && offset < TREE_STRING_LENGTH (SYMBOL_REF_DECL (x))))\n-    return false;\n-\n   /* Check whether a nonzero offset is valid for the underlying\n      relocations.  */\n   switch (*symbol_type)\n@@ -927,9 +917,11 @@ mips_symbolic_constant_p (rtx x, enum mips_symbol_type *symbol_type)\n       return (offset > 0 && offset < mips_section_threshold);\n \n     case SYMBOL_CONSTANT_POOL:\n-      /* We don't generate out-of-bounds accesses to normal constant\n-\t pool entries.  String constants were handled above.  */\n-      return true;\n+      /* Similarly check the range of offsets for mips16 constant\n+\t pool entries.  */\n+      return (CONSTANT_POOL_ADDRESS_P (x)\n+\t      && offset > 0\n+\t      && offset < (int) GET_MODE_SIZE (get_pool_mode (x)));\n \n     case SYMBOL_GOT_LOCAL:\n     case SYMBOL_GOTOFF_PAGE:"}]}