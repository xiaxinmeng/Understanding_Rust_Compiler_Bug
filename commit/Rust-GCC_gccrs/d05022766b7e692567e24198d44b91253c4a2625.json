{"sha": "d05022766b7e692567e24198d44b91253c4a2625", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1MDIyNzY2YjdlNjkyNTY3ZTI0MTk4ZDQ0YjkxMjUzYzRhMjYyNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-13T20:05:39Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-13T20:05:39Z"}, "message": "re PR ipa/65028 (450.soplex in SPEC CPU 2006 is miscompiled)\n\n\tPR ipa/65028\n\t* ipa-prop.c (update_indirect_edges_after_inlining): Do not drop\n\tpolymorphic call info when type is not known to be preserved.\n\nFrom-SVN: r220694", "tree": {"sha": "72387fa152f3d5f6a062aa6007b096bfc550b5b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72387fa152f3d5f6a062aa6007b096bfc550b5b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05022766b7e692567e24198d44b91253c4a2625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05022766b7e692567e24198d44b91253c4a2625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05022766b7e692567e24198d44b91253c4a2625", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05022766b7e692567e24198d44b91253c4a2625/comments", "author": null, "committer": null, "parents": [{"sha": "4fd94d1e35f1ec4098b4fba19da77d388d76cdf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd94d1e35f1ec4098b4fba19da77d388d76cdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fd94d1e35f1ec4098b4fba19da77d388d76cdf3"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "290d3ac6df00b0033cb80d62867f05b67aa55f67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05022766b7e692567e24198d44b91253c4a2625/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05022766b7e692567e24198d44b91253c4a2625/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d05022766b7e692567e24198d44b91253c4a2625", "patch": "@@ -1,3 +1,9 @@\n+2015-02-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/65028\n+\t* ipa-prop.c (update_indirect_edges_after_inlining): Do not drop\n+\tpolymorphic call info when type is not known to be preserved.\n+\n 2015-02-13  Maritn Jambor  <mjambor@suse.cz>\n \n \tPR ipa/65028"}, {"sha": "908b5ee6028f334a77f0060f81f2e3a22c49329e", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05022766b7e692567e24198d44b91253c4a2625/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05022766b7e692567e24198d44b91253c4a2625/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=d05022766b7e692567e24198d44b91253c4a2625", "patch": "@@ -3143,25 +3143,31 @@ update_indirect_edges_after_inlining (struct cgraph_edge *cs,\n       if (jfunc->type == IPA_JF_PASS_THROUGH\n           && ipa_get_jf_pass_through_operation (jfunc) == NOP_EXPR)\n \t{\n-\t  if ((ici->agg_contents\n-\t       && !ipa_get_jf_pass_through_agg_preserved (jfunc))\n-\t      || (ici->polymorphic\n-\t\t  && !ipa_get_jf_pass_through_type_preserved (jfunc)))\n+\t  if (ici->agg_contents\n+\t      && !ipa_get_jf_pass_through_agg_preserved (jfunc)\n+\t      && !ici->polymorphic)\n \t    ici->param_index = -1;\n \t  else\n-\t    ici->param_index = ipa_get_jf_pass_through_formal_id (jfunc);\n+\t    {\n+\t      ici->param_index = ipa_get_jf_pass_through_formal_id (jfunc);\n+\t      if (ici->polymorphic\n+\t\t  && !ipa_get_jf_pass_through_type_preserved (jfunc))\n+\t\tici->vptr_changed = true;\n+\t    }\n \t}\n       else if (jfunc->type == IPA_JF_ANCESTOR)\n \t{\n-\t  if ((ici->agg_contents\n-\t       && !ipa_get_jf_ancestor_agg_preserved (jfunc))\n-\t      || (ici->polymorphic\n-\t\t  && !ipa_get_jf_ancestor_type_preserved (jfunc)))\n+\t  if (ici->agg_contents\n+\t      && !ipa_get_jf_ancestor_agg_preserved (jfunc)\n+\t      && !ici->polymorphic)\n \t    ici->param_index = -1;\n \t  else\n \t    {\n \t      ici->param_index = ipa_get_jf_ancestor_formal_id (jfunc);\n \t      ici->offset += ipa_get_jf_ancestor_offset (jfunc);\n+\t      if (ici->polymorphic\n+\t\t  && !ipa_get_jf_ancestor_type_preserved (jfunc))\n+\t\tici->vptr_changed = true;\n \t    }\n \t}\n       else"}]}