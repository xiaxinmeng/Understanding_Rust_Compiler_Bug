{"sha": "7d2950e52384ed32ca712f28460645d8ca35c97f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyOTUwZTUyMzg0ZWQzMmNhNzEyZjI4NDYwNjQ1ZDhjYTM1Yzk3Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-08-18T20:52:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-08-18T20:52:28Z"}, "message": "stor-layout.c (compute_record_type): Don't use mode of single field as mode of record if not integer mode of same type.\n\n\t* stor-layout.c (compute_record_type): Don't use mode of single\n\tfield as mode of record if not integer mode of same type.\n\nFrom-SVN: r35796", "tree": {"sha": "31572fbfb97907694857f7d3f1dc930961285940", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31572fbfb97907694857f7d3f1dc930961285940"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d2950e52384ed32ca712f28460645d8ca35c97f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2950e52384ed32ca712f28460645d8ca35c97f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2950e52384ed32ca712f28460645d8ca35c97f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2950e52384ed32ca712f28460645d8ca35c97f/comments", "author": null, "committer": null, "parents": [{"sha": "26db254445dc48d8b836758bdd8464923353f1e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26db254445dc48d8b836758bdd8464923353f1e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26db254445dc48d8b836758bdd8464923353f1e7"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "2b97062c8ddeb8b941de66ff753b03f82e798405", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2950e52384ed32ca712f28460645d8ca35c97f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2950e52384ed32ca712f28460645d8ca35c97f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d2950e52384ed32ca712f28460645d8ca35c97f", "patch": "@@ -6,13 +6,14 @@ Fri Aug 18 16:22:20 2000  Alexandre Oliva  <aoliva@redhat.com>\n \t* configure.in: Get them included with `tm_file's.\n \t* configure: Rebuilt.\n \n-Fri Aug 18 16:01:18 2000  Alexandre Oliva  <aoliva@redhat.com>\n-\n \t* config/sh/sh.md (fpu_switch0, fpu_switch1): Simplify.\n \t* config/sh/sh.c (fpscr_set_from_mem): Use them.\n \n Fri Aug 18 14:23:18 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* stor-layout.c (compute_record_type): Don't use mode of single\n+\tfield as mode of record if not integer mode of same type.\n+\n \t* regmove.c (perhaps_ends_bb_p): New function.\n \t(optimize_reg_copy_1, optimize_reg_copy_2): Call it.\n \t(optimize_reg_copy_3, fixup_match_2, regmove_optimize): Likewise."}, {"sha": "294f2d400ed0e4557bc70b33402c3bee800da373", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2950e52384ed32ca712f28460645d8ca35c97f/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2950e52384ed32ca712f28460645d8ca35c97f/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=7d2950e52384ed32ca712f28460645d8ca35c97f", "patch": "@@ -1062,8 +1062,11 @@ compute_record_mode (type)\n \n       /* If this field is the whole struct, remember its mode so\n \t that, say, we can put a double in a class into a DF\n-\t register instead of forcing it to live in the stack.  */\n-      if (field == TYPE_FIELDS (type) && TREE_CHAIN (field) == 0)\n+\t register instead of forcing it to live in the stack.  However,\n+\t we don't support using such a mode if there is no integer mode\n+\t of the same size, so don't set it here.  */\n+      if (field == TYPE_FIELDS (type) && TREE_CHAIN (field) == 0\n+\t  && int_mode_for_mode (DECL_MODE (field)) != BLKmode)\n \tmode = DECL_MODE (field);\n \n #ifdef STRUCT_FORCE_BLK"}]}