{"sha": "254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0YWMxMGMzMTJhNWQ5MzQyYzlmODUxNGE2YzZiOTRhZTQwNWNkYg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-09-30T18:17:54Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-09-30T18:17:54Z"}, "message": "re PR c/17730 (Regression in diagnost message \"invalid lvalue in unary %<&%>\")\n\n\tPR c/17730\n\t* c-typeck.c (lvalue_or_else): Pass msgid directly to error.\n\ntestsuite:\n\t* gcc.dg/pr17730-1.c: New test\n\nFrom-SVN: r88343", "tree": {"sha": "8592fa3e677a407f40204d43f47d95cdc595ac7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8592fa3e677a407f40204d43f47d95cdc595ac7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c9e97bdb43ba6f8adf64def01d84eed3e0ceee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c9e97bdb43ba6f8adf64def01d84eed3e0ceee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c9e97bdb43ba6f8adf64def01d84eed3e0ceee1"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "4cdbe1b740712dae6906f5f2fe5a86b63431262a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "patch": "@@ -1,3 +1,8 @@\n+2004-09-30  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/17730\n+\t* c-typeck.c (lvalue_or_else): Pass msgid directly to error.\n+\n 2004-09-30  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-ssa-alias.c (collect_points_to_info_r): Move analysis of"}, {"sha": "1d79b232a0bd55309c5bd7426cb3d68828817c8c", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "patch": "@@ -2682,15 +2682,17 @@ lvalue_p (tree ref)\n }\n \n /* Return nonzero if REF is an lvalue valid for this language;\n-   otherwise, print an error message and return zero.  */\n+   otherwise, print an error message and return zero.  MSGID\n+   is a format string which receives no arguments, but in which\n+   formats such as %< and %> may occur.  */\n \n static int\n lvalue_or_else (tree ref, const char *msgid)\n {\n   int win = lvalue_p (ref);\n \n   if (! win)\n-    error (\"%s\", msgid);\n+    error (msgid);\n \n   return win;\n }"}, {"sha": "819d4223cd363e22f6c1a11e795ea91efe70e8ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "patch": "@@ -1,3 +1,8 @@\n+2004-09-30  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/17730\n+\t* gcc.dg/pr17730-1.c: New test\n+\n 2004-09-29  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/7425"}, {"sha": "0fede2f6d6c285f32da6676a0a8fdd25fd71b4c7", "filename": "gcc/testsuite/gcc.dg/pr17730-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17730-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254ac10c312a5d9342c9f8514a6c6b94ae405cdb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17730-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17730-1.c?ref=254ac10c312a5d9342c9f8514a6c6b94ae405cdb", "patch": "@@ -0,0 +1,5 @@\n+/* Test formatting of message for invalid lvalue.  Bug 17730.  */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+char *p = &'C'; /* { dg-error \"error: invalid lvalue in unary '&'\" } */"}]}