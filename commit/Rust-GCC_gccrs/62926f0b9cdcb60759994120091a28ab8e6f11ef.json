{"sha": "62926f0b9cdcb60759994120091a28ab8e6f11ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI5MjZmMGI5Y2RjYjYwNzU5OTk0MTIwMDkxYTI4YWI4ZTZmMTFlZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-07-10T11:25:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-07-10T11:25:32Z"}, "message": "emit-rtl.c (adjust_address, [...]): Change criteria for whether can put offset inside LO_SUM to check mode alignment...\n\n\t* emit-rtl.c (adjust_address, adjust_address_nv): Change criteria for\n\twhether can put offset inside LO_SUM to check mode alignment, not size.\n\nFrom-SVN: r43896", "tree": {"sha": "98a712ed3f14df1cdb79dc0689acf6125c20b847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98a712ed3f14df1cdb79dc0689acf6125c20b847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62926f0b9cdcb60759994120091a28ab8e6f11ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62926f0b9cdcb60759994120091a28ab8e6f11ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62926f0b9cdcb60759994120091a28ab8e6f11ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62926f0b9cdcb60759994120091a28ab8e6f11ef/comments", "author": null, "committer": null, "parents": [{"sha": "acdcefccef4188c8d3946786d9348ae1c933ff7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acdcefccef4188c8d3946786d9348ae1c933ff7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acdcefccef4188c8d3946786d9348ae1c933ff7f"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "840fd8306ccc7e445d68fa8d5a8f91ea97098e0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62926f0b9cdcb60759994120091a28ab8e6f11ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62926f0b9cdcb60759994120091a28ab8e6f11ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62926f0b9cdcb60759994120091a28ab8e6f11ef", "patch": "@@ -1,3 +1,8 @@\n+Tue Jul 10 07:27:53 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* emit-rtl.c (adjust_address, adjust_address_nv): Change criteria for\n+\twhether can put offset inside LO_SUM to check mode alignment, not size.\n+\n 2001-07-10  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n \t* doc/tm.texi (Misc): Fix thinko."}, {"sha": "eae04b6cff70d9ec7a23b283603814624891f3c3", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62926f0b9cdcb60759994120091a28ab8e6f11ef/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62926f0b9cdcb60759994120091a28ab8e6f11ef/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=62926f0b9cdcb60759994120091a28ab8e6f11ef", "patch": "@@ -1631,10 +1631,11 @@ adjust_address (memref, mode, offset)\n      will do memref tracking.  */\n   rtx addr = XEXP (memref, 0);\n \n-  /* If MEMREF is a LO_SUM and the offset is within the size of the\n+  /* If MEMREF is a LO_SUM and the offset is within the alignment of the\n      object, we can merge it into the LO_SUM.  */\n   if (GET_MODE (memref) != BLKmode && GET_CODE (addr) == LO_SUM\n-      && offset >= 0 && offset < GET_MODE_SIZE (GET_MODE (memref)))\n+      && offset >= 0\n+      && offset < GET_MODE_ALIGNMENT (GET_MODE (memref)) / BITS_PER_UNIT)\n     addr = gen_rtx_LO_SUM (mode, XEXP (addr, 0),\n \t\t\t   plus_constant (XEXP (addr, 1), offset));\n   else\n@@ -1658,7 +1659,8 @@ adjust_address_nv (memref, mode, offset)\n   /* If MEMREF is a LO_SUM and the offset is within the size of the\n      object, we can merge it into the LO_SUM.  */\n   if (GET_MODE (memref) != BLKmode && GET_CODE (addr) == LO_SUM\n-      && offset >= 0 && offset < GET_MODE_SIZE (GET_MODE (memref)))\n+      && offset >= 0\n+      && offset < GET_MODE_ALIGNMENT (GET_MODE (memref)) / BITS_PER_UNIT)\n     addr = gen_rtx_LO_SUM (mode, XEXP (addr, 0),\n \t\t\t   plus_constant (XEXP (addr, 1), offset));\n   else"}]}