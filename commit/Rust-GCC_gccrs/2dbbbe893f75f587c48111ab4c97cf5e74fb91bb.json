{"sha": "2dbbbe893f75f587c48111ab4c97cf5e74fb91bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiYmJlODkzZjc1ZjU4N2M0ODExMWFiNGM5N2NmNWU3NGZiOTFiYg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-04-15T20:09:56Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-04-15T20:11:22Z"}, "message": "PR middle-end/89230 - Bogus uninited usage warning with printf\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/uninit-pr89230-1.c: New test.\n\t* gcc.dg/uninit-pr89230-2.c: Same.", "tree": {"sha": "d8cb68e675a81d3bc8d0cdf1d5d296a25ad19acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8cb68e675a81d3bc8d0cdf1d5d296a25ad19acc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2efbbba16a0630fac8cadcd6d9e0ffaabfadb79f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2efbbba16a0630fac8cadcd6d9e0ffaabfadb79f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2efbbba16a0630fac8cadcd6d9e0ffaabfadb79f"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "1c07c4f6d78b51db39b83ac89204722f29572787", "filename": "gcc/testsuite/gcc.dg/uninit-pr89230-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89230-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89230-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89230-1.c?ref=2dbbbe893f75f587c48111ab4c97cf5e74fb91bb", "patch": "@@ -0,0 +1,25 @@\n+/* PR middle-end/89230 - Bogus uninited usage warning with printf\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+struct S { int i, j; };\n+\n+/* attribute__ ((malloc)) */ struct S* f (void);\n+\n+int g (void)\n+{\n+  struct S *p = f (), *q;\n+\n+  if (p->i || !(q = f ()) || p->j != q->i)\n+   {\n+     __builtin_printf (\"%i\", p->i);\n+\n+     if (p->i)\n+       return 1;\n+\n+     if (!q)        // { dg-bogus \"\\\\\\[-Wmaybe-uninitialized\" }\n+       return 2;\n+   }\n+\n+  return 0;\n+}"}, {"sha": "473d2da5d3d2fbf30c43b1a5dcadb4fef9f18fe2", "filename": "gcc/testsuite/gcc.dg/uninit-pr89230-2.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89230-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dbbbe893f75f587c48111ab4c97cf5e74fb91bb/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89230-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89230-2.c?ref=2dbbbe893f75f587c48111ab4c97cf5e74fb91bb", "patch": "@@ -0,0 +1,54 @@\n+/* PR middle-end/89230 - Bogus uninited usage warning with printf\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+extern void* memset (void*, int, size_t);\n+extern int printf (const char*, ...);\n+extern int rand (void);\n+\n+struct S\n+{\n+  int a;\n+  int b;\n+};\n+\n+struct H\n+{\n+  int c;\n+  int d;\n+};\n+\n+void getblk (void* blk)\n+{\n+  struct S* s = (struct S*) blk;\n+  memset (blk, 0, 512);\n+  s->a = rand () & 1;\n+}\n+\n+struct H* gethdr (void* blk)\n+{\n+  memset (blk, 0, 512);\n+  return rand () & 1 ? (struct H*) blk : 0;\n+}\n+\n+int main (void)\n+{\n+  char blk[512], tmp[512];\n+  struct S *s = (struct S*) blk;\n+  struct H *h;\n+\n+  getblk (blk);\n+\n+  if (s->a  ||  !(h = gethdr (tmp))  ||  s->a != h->d) {\n+\n+    printf (\"%d\\n\", s->b);\n+    if (s->a)\n+      printf (\"s->a = %d\\n\", s->a);\n+    else if (!h)\n+      printf (\"!h\\n\");\n+    else\n+      printf (\"h->d = %d\\n\", h->d);\n+  }\n+}"}]}