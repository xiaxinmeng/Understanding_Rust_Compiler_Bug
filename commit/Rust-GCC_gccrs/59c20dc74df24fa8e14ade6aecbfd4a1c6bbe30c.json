{"sha": "59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTljMjBkYzc0ZGYyNGZhOGUxNGFkZTZhZWNiZmQ0YTFjNmJiZTMwYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-08-04T13:51:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-04T13:51:50Z"}, "message": "gimple-fold.c (gimple_fold_stmt_to_constant_1): Canonicalize bool compares on RHS.\n\n2015-08-04  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Canonicalize\n\tbool compares on RHS.\n\t* match.pd: Add X ==/!= !X is false/true pattern.\n\n\t* gcc.dg/tree-ssa/ssa-ccp-38.c: New testcase.\n\nFrom-SVN: r226576", "tree": {"sha": "675f4300ac613114d6435cea0bc7cc8fdd7fcdc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/675f4300ac613114d6435cea0bc7cc8fdd7fcdc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "058e4c71c29989185bf59888d85d536eed50013d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058e4c71c29989185bf59888d85d536eed50013d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/058e4c71c29989185bf59888d85d536eed50013d"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "3706b6729a9d118cd923ca4c91260bf8e5c22eba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "patch": "@@ -1,3 +1,9 @@\n+2015-08-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Canonicalize\n+\tbool compares on RHS.\n+\t* match.pd: Add X ==/!= !X is false/true pattern.\n+\n 2015-08-04  Pawel Kupidura  <pawel.kupidura@arm.com>\n \n \t* config/aarch64/aarch64.c: Change inner loop statement cost"}, {"sha": "1a70d8ff7225cd21038fe2eab05024fa1268a433", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "patch": "@@ -5012,10 +5012,8 @@ gimple_fold_stmt_to_constant_1 (gimple stmt, tree (*valueize) (tree),\n \t       further propagation.  */\n \t    if (subcode == POINTER_PLUS_EXPR)\n \t      {\n-\t\t/* Handle binary operators that can appear in GIMPLE form.  */\n \t\ttree op0 = (*valueize) (gimple_assign_rhs1 (stmt));\n \t\ttree op1 = (*valueize) (gimple_assign_rhs2 (stmt));\n-\n \t\tif (TREE_CODE (op0) == ADDR_EXPR\n \t\t    && TREE_CODE (op1) == INTEGER_CST)\n \t\t  {\n@@ -5027,6 +5025,38 @@ gimple_fold_stmt_to_constant_1 (gimple stmt, tree (*valueize) (tree),\n \t\t\t\t      unshare_expr (op0), off));\n \t\t  }\n \t      }\n+\t    /* Canonicalize bool != 0 and bool == 0 appearing after\n+\t       valueization.  While gimple_simplify handles this\n+\t       it can get confused by the ~X == 1 -> X == 0 transform\n+\t       which we cant reduce to a SSA name or a constant\n+\t       (and we have no way to tell gimple_simplify to not\n+\t       consider those transforms in the first place).  */\n+\t    else if (subcode == EQ_EXPR\n+\t\t     || subcode == NE_EXPR)\n+\t      {\n+\t\ttree lhs = gimple_assign_lhs (stmt);\n+\t\ttree op0 = gimple_assign_rhs1 (stmt);\n+\t\tif (useless_type_conversion_p (TREE_TYPE (lhs),\n+\t\t\t\t\t       TREE_TYPE (op0)))\n+\t\t  {\n+\t\t    tree op1 = (*valueize) (gimple_assign_rhs2 (stmt));\n+\t\t    op0 = (*valueize) (op0);\n+\t\t    if (subcode == NE_EXPR)\n+\t\t      {\n+\t\t\tif (integer_zerop (op1))\n+\t\t\t  return op0;\n+\t\t\telse if (integer_zerop (op0))\n+\t\t\t  return op1;\n+\t\t      }\n+\t\t    else\n+\t\t      {\n+\t\t\tif (integer_onep (op1))\n+\t\t\t  return op0;\n+\t\t\telse if (integer_onep (op0))\n+\t\t\t  return op1;\n+\t\t      }\n+\t\t  }\n+\t      }\n \t    return NULL_TREE;\n \n           case GIMPLE_TERNARY_RHS:"}, {"sha": "3e9100e81f0e1589a2f6cd984b5b2bafaf279d14", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "patch": "@@ -618,6 +618,11 @@ along with GCC; see the file COPYING3.  If not see\n  (simplify\n   (op:c truth_valued_p@0 (logical_inverted_value @0))\n   { constant_boolean_node (true, type); }))\n+/* X ==/!= !X is false/true.  */\n+(for op (eq ne)\n+ (simplify\n+  (op:c truth_valued_p@0 (logical_inverted_value @0))\n+  { constant_boolean_node (op == NE_EXPR ? true : false, type); }))\n \n /* If arg1 and arg2 are booleans (or any single bit type)\n    then try to simplify:"}, {"sha": "dc1262fdfbef75be94f192f8151d66b98e407f9b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "patch": "@@ -1,3 +1,7 @@\n+2015-08-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-ccp-38.c: New testcase.\n+\n 2015-08-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/67110"}, {"sha": "e5fb813c5ffc74d686a8fd6a74b371d1cc969980", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-38.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-38.c?ref=59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-ccp1\" } */\n+\n+int foo (_Bool x)\n+{\n+  _Bool t = 1;\n+  _Bool xx = !x;\n+  _Bool y = xx == t;\n+  _Bool z = y == x;\n+  return z ? 1 : 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 0;\" \"ccp1\" } } */"}]}