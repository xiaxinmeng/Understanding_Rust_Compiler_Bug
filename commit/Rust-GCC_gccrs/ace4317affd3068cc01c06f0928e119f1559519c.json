{"sha": "ace4317affd3068cc01c06f0928e119f1559519c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNlNDMxN2FmZmQzMDY4Y2MwMWMwNmYwOTI4ZTExOWYxNTU5NTE5Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2019-07-08T10:47:42Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2019-07-08T10:47:42Z"}, "message": "RISC-V: Fix splitter for 32-bit AND on 64-bit target.\n\nFixes github.com/riscv/riscv-gcc issue #161.  We were accidentally using\nBITS_PER_WORD to compute shift counts when we should have been using the\nbitsize of the operand modes.  This was wrong when we had an SImode shift\nand a 64-bit target.\n\n\tAndrew Waterman  <andrew@sifive.com>\n\tgcc/\n\t* config/riscv/riscv.md (lshrsi3_zero_extend_3+1): Use operands[1]\n\tbitsize\tinstead of BITS_PER_WORD.\n\tgcc/testsuite/\n\t* gcc.target/riscv/shift-shift-2.c: Add one more test.\n\nFrom-SVN: r273230", "tree": {"sha": "5e081375e6187acc9e6ffcdb8c59218a4a0b2abb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e081375e6187acc9e6ffcdb8c59218a4a0b2abb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ace4317affd3068cc01c06f0928e119f1559519c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace4317affd3068cc01c06f0928e119f1559519c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace4317affd3068cc01c06f0928e119f1559519c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace4317affd3068cc01c06f0928e119f1559519c/comments", "author": null, "committer": null, "parents": [{"sha": "ce79110f01f445d97a32f93cc53c346cf98a5425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79110f01f445d97a32f93cc53c346cf98a5425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce79110f01f445d97a32f93cc53c346cf98a5425"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "6429407bc4b3d9437291e5d644e2ce39819a4a13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ace4317affd3068cc01c06f0928e119f1559519c", "patch": "@@ -1,3 +1,10 @@\n+2019-07-08  Andrew Waterman  <andrew@sifive.com>\n+\t    Jim Wilson  <jimw@sifive.com>\n+\n+\t* config/riscv/riscv.md (lshrsi3_zero_extend_3+1): Use operands[1]\n+\tbitsize\tinstead of BITS_PER_WORD.\n+\tgcc/testsuite/\n+\n 2019-07-08  Martin Liska  <mliska@suse.cz>\n \n \t* collect2.c (defined): Revert to before r254460."}, {"sha": "78260fcf6fdb6d8954404008ece8cf5edc7d126f", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=ace4317affd3068cc01c06f0928e119f1559519c", "patch": "@@ -1776,10 +1776,11 @@\n   (set (match_dup 0)\n        (lshiftrt:GPR (match_dup 0) (match_dup 2)))]\n {\n-  operands[2] = GEN_INT (BITS_PER_WORD\n+  /* Op2 is a VOIDmode constant, so get the mode size from op1.  */\n+  operands[2] = GEN_INT (GET_MODE_BITSIZE (GET_MODE (operands[1]))\n \t\t\t - exact_log2 (INTVAL (operands[2]) + 1));\n })\n-  \n+\n ;; Handle AND with 0xF...F0...0 where there are 32 to 63 zeros.  This can be\n ;; split into two shifts.  Otherwise it requires 3 instructions: li, sll, and.\n (define_split"}, {"sha": "56f2f2c596463a96cc8aee0bd177994fc18f3fc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ace4317affd3068cc01c06f0928e119f1559519c", "patch": "@@ -1,3 +1,7 @@\n+2019-07-08  Jim Wilson  <jimw@sifive.com>\n+\n+\t* gcc.target/riscv/shift-shift-2.c: Add one more test.\n+\n 2019-07-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/65143"}, {"sha": "10a5bb728bec22e5a7c28ac488dcc3ec58ee69a0", "filename": "gcc/testsuite/gcc.target/riscv/shift-shift-2.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fshift-shift-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace4317affd3068cc01c06f0928e119f1559519c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fshift-shift-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fshift-shift-2.c?ref=ace4317affd3068cc01c06f0928e119f1559519c", "patch": "@@ -25,5 +25,17 @@ sub4 (unsigned long i)\n {\n   return (i << 52) >> 52;\n }\n-/* { dg-final { scan-assembler-times \"slli\" 4 } } */\n-/* { dg-final { scan-assembler-times \"srli\" 4 } } */\n+\n+unsigned int\n+sub5 (unsigned int i)\n+{\n+  unsigned int j;\n+  j = i >> 24;\n+  j = j * (1 << 24);\n+  j = i - j;\n+  return j;\n+}\n+/* { dg-final { scan-assembler-times \"slli\" 5 } } */\n+/* { dg-final { scan-assembler-times \"srli\" 5 } } */\n+/* { dg-final { scan-assembler-times \"slliw\" 1 } } */\n+/* { dg-final { scan-assembler-times \"srliw\" 1 } } */"}]}