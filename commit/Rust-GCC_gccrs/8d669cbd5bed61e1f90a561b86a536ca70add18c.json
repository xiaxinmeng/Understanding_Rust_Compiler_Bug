{"sha": "8d669cbd5bed61e1f90a561b86a536ca70add18c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2NjljYmQ1YmVkNjFlMWY5MGE1NjFiODZhNTM2Y2E3MGFkZDE4Yw==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2006-02-24T22:56:57Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2006-02-24T22:56:57Z"}, "message": "invoke.texi: Move -fopenmp description to \"Options for Code Generation\".\n\n\n\t* doc/invoke.texi: Move -fopenmp description to \"Options for\n\tCode Generation\".\n\tRemove reference to -lgomp.\n\nFrom-SVN: r111429", "tree": {"sha": "8c63763b8cbd705e0e3d7a0f9beb3a9ef6e606dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c63763b8cbd705e0e3d7a0f9beb3a9ef6e606dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d669cbd5bed61e1f90a561b86a536ca70add18c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d669cbd5bed61e1f90a561b86a536ca70add18c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d669cbd5bed61e1f90a561b86a536ca70add18c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d669cbd5bed61e1f90a561b86a536ca70add18c/comments", "author": null, "committer": null, "parents": [{"sha": "f44a5ab6092d11aa6e681818e561c09ddb5e1ece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f44a5ab6092d11aa6e681818e561c09ddb5e1ece", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f44a5ab6092d11aa6e681818e561c09ddb5e1ece"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "938c004fc1642c3360f4dea92431c6d5cfb7909f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d669cbd5bed61e1f90a561b86a536ca70add18c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d669cbd5bed61e1f90a561b86a536ca70add18c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d669cbd5bed61e1f90a561b86a536ca70add18c", "patch": "@@ -1,3 +1,9 @@\n+2006-02-24  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* doc/invoke.texi: Move -fopenmp description to \"Options for\n+\tCode Generation\".\n+\tRemove reference to -lgomp.\n+\n 2006-02-24  David Edelsohn  <edelsohn@gnu.org>\n \n \t* doc/install.texi: Require GNU tar version 1.14."}, {"sha": "6a385821321eaab67d4f6bd90583dea7bea9b687", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d669cbd5bed61e1f90a561b86a536ca70add18c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d669cbd5bed61e1f90a561b86a536ca70add18c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8d669cbd5bed61e1f90a561b86a536ca70add18c", "patch": "@@ -4731,15 +4731,6 @@ instrumentation (and therefore faster execution) and still provides\n some protection against outright memory corrupting writes, but allows\n erroneously read data to propagate within a program.\n \n-@item -fopenmp\n-@opindex fopenmp\n-@cindex openmp parallel\n-Enable handling of OpenMP directives @code{#pragma omp} in C/C++ and\n-@code{!$omp} in Fortran.  When @option{-fopenmp} is specified, the\n-compiler generates parallel code according to the OpenMP Application\n-Program Interface v2.5.  To generate the final exectuable, the runtime\n-library @code{libgomp} must be linked in using @option{-lgomp}.\n-\n @item -fstrength-reduce\n @opindex fstrength-reduce\n Perform the optimizations of loop strength reduction and\n@@ -13306,6 +13297,14 @@ operator delete must always be of default visibility.\n An overview of these techniques, their benefits and how to use them\n is at @w{@uref{http://gcc.gnu.org/wiki/Visibility}}.\n \n+@item -fopenmp\n+@opindex fopenmp\n+@cindex openmp parallel\n+Enable handling of OpenMP directives @code{#pragma omp} in C/C++ and\n+@code{!$omp} in Fortran.  When @option{-fopenmp} is specified, the\n+compiler generates parallel code according to the OpenMP Application\n+Program Interface v2.5 @w{@uref{http://www.openmp.org/}}.\n+\n @end table\n \n @c man end"}]}