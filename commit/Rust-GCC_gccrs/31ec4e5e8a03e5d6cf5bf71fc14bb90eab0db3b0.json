{"sha": "31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFlYzRlNWU4YTAzZTVkNmNmNWJmNzFmYzE0YmI5MGVhYjBkYjNiMA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-10-31T17:36:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-10-31T17:36:58Z"}, "message": "combine.c (combine_simplify_rtx): Renamed from simplify_rtx.\n\n        * combine.c (combine_simplify_rtx): Renamed from simplify_rtx.  All\n        references/callers changed.\n\nFrom-SVN: r30292", "tree": {"sha": "02de0bdba1db1fe8dc169d396c5a69c55a9eeecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02de0bdba1db1fe8dc169d396c5a69c55a9eeecc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0/comments", "author": null, "committer": null, "parents": [{"sha": "6086005548f1a0bb58fe426794e98f0128cb9bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6086005548f1a0bb58fe426794e98f0128cb9bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6086005548f1a0bb58fe426794e98f0128cb9bec"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "0d4e023ec6091f902703bf31a7ab5dbce290b388", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0", "patch": "@@ -1,5 +1,8 @@\n Sun Oct 31 01:53:30 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* combine.c (combine_simplify_rtx): Renamed from simplify_rtx.  All\n+\treferences/callers changed.\n+\n \t* mn10200.c (mn10200_va_arg): Force the return value into a\n \tregister.\n "}, {"sha": "111088ecfa636fa0a8b4467c19de5d2135221409", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=31ec4e5e8a03e5d6cf5bf71fc14bb90eab0db3b0", "patch": "@@ -362,7 +362,7 @@ static rtx try_combine\t\tPROTO((rtx, rtx, rtx));\n static void undo_all\t\tPROTO((void));\n static rtx *find_split_point\tPROTO((rtx *, rtx));\n static rtx subst\t\tPROTO((rtx, rtx, rtx, int, int));\n-static rtx simplify_rtx\t\tPROTO((rtx, enum machine_mode, int, int));\n+static rtx combine_simplify_rtx\tPROTO((rtx, enum machine_mode, int, int));\n static rtx simplify_if_then_else  PROTO((rtx));\n static rtx simplify_set\t\tPROTO((rtx));\n static rtx simplify_logical\tPROTO((rtx, int));\n@@ -3248,7 +3248,7 @@ subst (x, from, to, in_dest, unique_copy)\n       /* If X is sufficiently simple, don't bother trying to do anything\n \t with it.  */\n       if (code != CONST_INT && code != REG && code != CLOBBER)\n-\tx = simplify_rtx (x, op0_mode, i == 3, in_dest);\n+\tx = combine_simplify_rtx (x, op0_mode, i == 3, in_dest);\n \n       if (GET_CODE (x) == code)\n \tbreak;\n@@ -3272,7 +3272,7 @@ subst (x, from, to, in_dest, unique_copy)\n    X is returned; IN_DEST is nonzero if we are inside a SET_DEST.  */\n \n static rtx\n-simplify_rtx (x, op0_mode, last, in_dest)\n+combine_simplify_rtx (x, op0_mode, last, in_dest)\n      rtx x;\n      enum machine_mode op0_mode;\n      int last;"}]}