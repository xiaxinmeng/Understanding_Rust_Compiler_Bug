{"sha": "3298c037d43e41e16a018a9f7eb0348edd91cc66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI5OGMwMzdkNDNlNDFlMTZhMDE4YTlmN2ViMDM0OGVkZDkxY2M2Ng==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2006-01-19T14:28:01Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2006-01-19T14:28:01Z"}, "message": "s390.md (\"Y\", \"y\"): New mode attribute.\n\n2006-01-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.md (\"Y\", \"y\"): New mode attribute.\n\t(\"*cmpdi_ccs\", \"*cmpsi_ccs\", \"*adddi3_imm_cc\", \"*adddi3_carry1_cc\", \n\t\"*adddi3_carry1_cconly\", \"*adddi3_carry2_cc\", \"*adddi3_carry2_cconly\",\n\t\"*adddi3_cc\", \"*adddi3_cconly\", \"*adddi3_cconly2\", \"*adddi3_64\", \n\t\"*addsi3_imm_cc\", \"*addsi3_carry1_cc\", \n\t\"*addsi3_carry1_cconly\", \"*addsi3_carry2_cc\", \"*addsi3_carr2_cconly\",\n\t\"*addsi3_cc\", \"*addsi3_cconly\", \"*addsi3_cconly2\",\n\t\"*subdi3_borrow_cc\", \"*subdi3_borrow_cconly\", \"*subdi3_cc\", \n\t\"*subdi3_cc2\", \"*subdi3_cconly\", \"*subdi3_cconly2\", \"*subdi3_64\",\n\t\"*subsi3_borrow_cc\", \"*subsi3_borrow_cconly\", \"*subsi3_cc\",\n\t\"*subsi3_cc2\", \"*subsi3_cconly\", \"*subsi3_cconly\", \"*subsi3_cconly2\",\n\t\"addsi3\", \"subsi3\"): Insn patterns removed.\n\t(\"*add<mode>3_carry1_cc\", \"*add<mode>3_carry1_cconly\",\n\t\"*add<mode>3_carry2_cc\", \"*add<mode>3_carry2_cconly\", \"*add<mode>3_cc\",\n\t\"*add<mode>3_cconly\", \"*add<mode>3_cconly2\", \"*add<mode>3_imm_cc\",\n\t\"*sub<mode>3_borrow_cc\", \"*sub<mode>3_borrow_cconly\",\n\t\"*sub<mode>3_cc\", \"*sub<mode>3_cc2\", \"*sub<mode>3_cconly\", \n\t\"*sub<mode>3_cconly2\"): New insn patterns.\n\t(\"addsi3\", \"subsi3\"): New expanders.\n\nFrom-SVN: r109957", "tree": {"sha": "7eb67be9c224983a0e53a835fe91ab8523294ecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb67be9c224983a0e53a835fe91ab8523294ecc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3298c037d43e41e16a018a9f7eb0348edd91cc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3298c037d43e41e16a018a9f7eb0348edd91cc66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3298c037d43e41e16a018a9f7eb0348edd91cc66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3298c037d43e41e16a018a9f7eb0348edd91cc66/comments", "author": null, "committer": null, "parents": [{"sha": "20f0622174914622858a91a712e57ace4a44d793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f0622174914622858a91a712e57ace4a44d793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f0622174914622858a91a712e57ace4a44d793"}], "stats": {"total": 672, "additions": 255, "deletions": 417}, "files": [{"sha": "f33ab462fb2dc8404b3f2bc7fd0219fb4aaaee82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3298c037d43e41e16a018a9f7eb0348edd91cc66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3298c037d43e41e16a018a9f7eb0348edd91cc66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3298c037d43e41e16a018a9f7eb0348edd91cc66", "patch": "@@ -1,3 +1,25 @@\n+2006-01-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"Y\", \"y\"): New mode attribute.\n+\t(\"*cmpdi_ccs\", \"*cmpsi_ccs\", \"*adddi3_imm_cc\", \"*adddi3_carry1_cc\", \n+\t\"*adddi3_carry1_cconly\", \"*adddi3_carry2_cc\", \"*adddi3_carry2_cconly\",\n+\t\"*adddi3_cc\", \"*adddi3_cconly\", \"*adddi3_cconly2\", \"*adddi3_64\", \n+\t\"*addsi3_imm_cc\", \"*addsi3_carry1_cc\", \n+\t\"*addsi3_carry1_cconly\", \"*addsi3_carry2_cc\", \"*addsi3_carr2_cconly\",\n+\t\"*addsi3_cc\", \"*addsi3_cconly\", \"*addsi3_cconly2\",\n+\t\"*subdi3_borrow_cc\", \"*subdi3_borrow_cconly\", \"*subdi3_cc\", \n+\t\"*subdi3_cc2\", \"*subdi3_cconly\", \"*subdi3_cconly2\", \"*subdi3_64\",\n+\t\"*subsi3_borrow_cc\", \"*subsi3_borrow_cconly\", \"*subsi3_cc\",\n+\t\"*subsi3_cc2\", \"*subsi3_cconly\", \"*subsi3_cconly\", \"*subsi3_cconly2\",\n+\t\"addsi3\", \"subsi3\"): Insn patterns removed.\n+\t(\"*add<mode>3_carry1_cc\", \"*add<mode>3_carry1_cconly\",\n+\t\"*add<mode>3_carry2_cc\", \"*add<mode>3_carry2_cconly\", \"*add<mode>3_cc\",\n+\t\"*add<mode>3_cconly\", \"*add<mode>3_cconly2\", \"*add<mode>3_imm_cc\",\n+\t\"*sub<mode>3_borrow_cc\", \"*sub<mode>3_borrow_cconly\",\n+\t\"*sub<mode>3_cc\", \"*sub<mode>3_cc2\", \"*sub<mode>3_cconly\", \n+\t\"*sub<mode>3_cconly2\"): New insn patterns.\n+\t(\"addsi3\", \"subsi3\"): New expanders.\n+\n 2006-01-19  Dorit Nuzman  <dorit@il.ibm.com>\n \n \t* Makefile.in (tree-vect-patterns.o): Add rule for new file."}, {"sha": "40a32d4508f6c632256c8665509dca00b7d9879e", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 233, "deletions": 417, "changes": 650, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3298c037d43e41e16a018a9f7eb0348edd91cc66/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3298c037d43e41e16a018a9f7eb0348edd91cc66/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=3298c037d43e41e16a018a9f7eb0348edd91cc66", "patch": "@@ -321,6 +321,10 @@\n ;; in \"RRE\" for DImode and \"RR\" for SImode.\n (define_mode_attr E [(DI \"E\") (SI \"\")])\n \n+;; This attribute handles differences in the instruction 'type' and makes RX<Y>\n+;; to result in \"RXY\" for DImode and \"RX\" for SImode.\n+(define_mode_attr Y [(DI \"Y\") (SI \"\")])\n+\n ;; This attribute handles differences in the instruction 'type' and will result\n ;; in \"RSE\" for TImode and \"RS\" for DImode.\n (define_mode_attr TE [(TI \"E\") (DI \"\")])\n@@ -329,6 +333,12 @@\n ;; and \"lcr\" in SImode.\n (define_mode_attr g [(DI \"g\") (SI \"\")])\n \n+;; In GPR templates, a string like \"sl<y>\" will expand to \"slg\" in DImode\n+;; and \"sly\" in SImode. This is useful because on 64bit the ..g instructions\n+;; were enhanced with long displacements whereas 31bit instructions got a ..y\n+;; variant for long displacements.\n+(define_mode_attr y [(DI \"g\") (SI \"y\")])\n+\n ;; In DP templates, a string like \"cds<g>\" will expand to \"cdsg\" in TImode\n ;; and \"cds\" in DImode.\n (define_mode_attr tg [(TI \"g\") (DI \"\")])\n@@ -626,18 +636,6 @@\n    cgf\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE,RXY\")])\n \n-(define_insn \"*cmpdi_ccs\"\n-  [(set (reg CC_REGNUM)\n-\t(compare (match_operand:DI 0 \"register_operand\" \"d,d,d,d\")\n-\t\t (match_operand:DI 1 \"general_operand\" \"d,K,Os,m\")))]\n-  \"s390_match_ccmode(insn, CCSmode) && TARGET_64BIT\"\n-  \"@\n-   cgr\\t%0,%1\n-   cghi\\t%0,%h1\n-   cgfi\\t%0,%1\n-   cg\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RI,RIL,RXY\")])\n-\n (define_insn \"*cmpsi_ccs_sign\"\n   [(set (reg CC_REGNUM)\n         (compare (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"R,T\"))\n@@ -648,18 +646,18 @@\n    chy\\t%0,%1\"\n   [(set_attr \"op_type\" \"RX,RXY\")])\n \n-(define_insn \"*cmpsi_ccs\"\n+(define_insn \"*cmp<mode>_ccs\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:SI 0 \"register_operand\" \"d,d,d,d,d\")\n-                 (match_operand:SI 1 \"general_operand\" \"d,K,Os,R,T\")))]\n+        (compare (match_operand:GPR 0 \"register_operand\" \"d,d,d,d,d\")\n+                 (match_operand:GPR 1 \"general_operand\" \"d,K,Os,R,T\")))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n-   cr\\t%0,%1\n-   chi\\t%0,%h1\n-   cfi\\t%0,%1\n-   c\\t%0,%1\n-   cy\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RIL,RX,RXY\")])\n+   c<g>r\\t%0,%1\n+   c<g>hi\\t%0,%h1\n+   c<g>fi\\t%0,%1\n+   c<g>\\t%0,%1\n+   c<y>\\t%0,%1\"\n+  [(set_attr \"op_type\" \"RR<E>,RI,RIL,RX<Y>,RXY\")])\n \n \n ; Compare (unsigned) instructions\n@@ -2745,11 +2743,6 @@\n \t\t\t - GET_MODE_BITSIZE (QImode));\n })\n \n-;\n-; extendqihi2 instruction pattern(s).\n-;\n-\n-\n ;\n ; zero_extendsidi2 instruction pattern(s).\n ;\n@@ -3264,6 +3257,15 @@\n ; adddi3 instruction pattern(s).\n ;\n \n+(define_expand \"adddi3\"\n+  [(parallel\n+    [(set (match_operand:DI 0 \"register_operand\" \"\")\n+          (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n+                   (match_operand:DI 2 \"general_operand\" \"\")))\n+     (clobber (reg:CC CC_REGNUM))])]\n+  \"\"\n+  \"\")\n+\n (define_insn \"*adddi3_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (plus:DI (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n@@ -3311,128 +3313,6 @@\n    algf\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n-(define_insn \"*adddi3_imm_cc\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"0,0\")\n-                          (match_operand:DI 2 \"const_int_operand\" \"K,Os\"))\n-                 (const_int 0)))\n-   (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (plus:DI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_64BIT\n-   && s390_match_ccmode (insn, CCAmode)\n-   && (CONST_OK_FOR_CONSTRAINT_P (INTVAL (operands[2]), 'K', \\\"K\\\")\n-       || CONST_OK_FOR_CONSTRAINT_P (INTVAL (operands[2]), 'O', \\\"Os\\\"))\"\n-  \"@\n-   aghi\\t%0,%h2\n-   agfi\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RI,RIL\")])\n-\n-(define_insn \"*adddi3_carry1_cc\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n-                          (match_operand:DI 2 \"general_operand\" \"d,Op,On,m\"))\n-                 (match_dup 1)))\n-   (set (match_operand:DI 0 \"register_operand\" \"=d,d,d,d\")\n-        (plus:DI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCL1mode) && TARGET_64BIT\"\n-  \"@\n-   algr\\t%0,%2\n-   algfi\\t%0,%2\n-   slgfi\\t%0,%n2\n-   alg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RIL,RIL,RXY\")])\n-\n-(define_insn \"*adddi3_carry1_cconly\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n-                 (match_dup 1)))\n-   (clobber (match_scratch:DI 0 \"=d,d\"))]\n-  \"s390_match_ccmode (insn, CCL1mode) && TARGET_64BIT\"\n-  \"@\n-   algr\\t%0,%2\n-   alg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*adddi3_carry2_cc\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n-                          (match_operand:DI 2 \"general_operand\" \"d,Op,On,m\"))\n-                 (match_dup 2)))\n-   (set (match_operand:DI 0 \"register_operand\" \"=d,d,d,d\")\n-        (plus:DI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCL1mode) && TARGET_64BIT\"\n-  \"@\n-   algr\\t%0,%2\n-   algfi\\t%0,%2\n-   slgfi\\t%0,%n2\n-   alg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RIL,RIL,RXY\")])\n-\n-(define_insn \"*adddi3_carry2_cconly\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n-                 (match_dup 2)))\n-   (clobber (match_scratch:DI 0 \"=d,d\"))]\n-  \"s390_match_ccmode (insn, CCL1mode) && TARGET_64BIT\"\n-  \"@\n-   algr\\t%0,%2\n-   alg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*adddi3_cc\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n-                          (match_operand:DI 2 \"general_operand\" \"d,Op,On,m\"))\n-                 (const_int 0)))\n-   (set (match_operand:DI 0 \"register_operand\" \"=d,d,d,d\")\n-        (plus:DI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCLmode) && TARGET_64BIT\"\n-  \"@\n-   algr\\t%0,%2\n-   algfi\\t%0,%2\n-   slgfi\\t%0,%n2\n-   alg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RIL,RIL,RXY\")])\n-\n-(define_insn \"*adddi3_cconly\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                          (match_operand:DI 2 \"general_operand\" \"d,m\"))\n-                 (const_int 0)))\n-   (clobber (match_scratch:DI 0 \"=d,d\"))]\n-  \"s390_match_ccmode (insn, CCLmode) && TARGET_64BIT\"\n-  \"@\n-   algr\\t%0,%2\n-   alg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*adddi3_cconly2\"\n-  [(set (reg CC_REGNUM)\n-        (compare (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                 (neg:SI (match_operand:DI 2 \"general_operand\" \"d,m\"))))\n-   (clobber (match_scratch:DI 0 \"=d,d\"))]\n-  \"s390_match_ccmode(insn, CCLmode) && TARGET_64BIT\"\n-  \"@\n-   algr\\t%0,%2\n-   alg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*adddi3_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d,d,d\")\n-        (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n-                 (match_operand:DI 2 \"general_operand\" \"d,K,Op,On,m\") ) )\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   agr\\t%0,%2\n-   aghi\\t%0,%h2\n-   algfi\\t%0,%2\n-   slgfi\\t%0,%n2\n-   ag\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RI,RIL,RIL,RXY\")])\n-\n (define_insn_and_split \"*adddi3_31z\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0\")\n@@ -3489,155 +3369,163 @@\n    operands[8] = operand_subword (operands[2], 1, 0, DImode);\n    operands[9] = gen_label_rtx ();\")\n \n-(define_expand \"adddi3\"\n+;\n+; addsi3 instruction pattern(s).\n+;\n+\n+(define_expand \"addsi3\"\n   [(parallel\n-    [(set (match_operand:DI 0 \"register_operand\" \"\")\n-          (plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n-                   (match_operand:DI 2 \"general_operand\" \"\")))\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+          (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+                   (match_operand:SI 2 \"general_operand\" \"\")))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"\")\n \n+(define_insn \"*addsi3_sign\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (plus:SI (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))\n+                 (match_operand:SI 1 \"register_operand\" \"0,0\")))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"\"\n+  \"@\n+   ah\\t%0,%2\n+   ahy\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")])\n+\n ;\n-; addsi3 instruction pattern(s).\n+; add(di|si)3 instruction pattern(s).\n ;\n \n-(define_insn \"*addsi3_imm_cc\"\n-  [(set (reg CC_REGNUM)\n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n-                          (match_operand:SI 2 \"const_int_operand\" \"K,Os\"))\n-                 (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (plus:SI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCAmode)\n-   && (CONST_OK_FOR_CONSTRAINT_P (INTVAL (operands[2]), 'K', \\\"K\\\")\n-       || CONST_OK_FOR_CONSTRAINT_P (INTVAL (operands[2]), 'O', \\\"Os\\\"))\n-   && INTVAL (operands[2]) != -((HOST_WIDE_INT)1 << 31)\"\n+(define_insn \"*add<mode>3\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d,d,d,d,d,d\")\n+        (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0,0,0,0\")\n+\t\t  (match_operand:GPR 2 \"general_operand\" \"d,K,Op,On,R,T\") ) )\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"\"\n   \"@\n-   ahi\\t%0,%h2\n-   afi\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RI,RIL\")])\n+   a<g>r\\t%0,%2\n+   a<g>hi\\t%0,%h2\n+   al<g>fi\\t%0,%2\n+   sl<g>fi\\t%0,%n2\n+   a<g>\\t%0,%2\n+   a<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RI,RIL,RIL,RX<Y>,RXY\")])\n \n-(define_insn \"*addsi3_carry1_cc\"\n+(define_insn \"*add<mode>3_carry1_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,Os,R,T\"))\n+        (compare (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n+\t\t\t   (match_operand:GPR 2 \"general_operand\" \"d,Op,On,R,T\"))\n                  (match_dup 1)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d\")\n-        (plus:SI (match_dup 1) (match_dup 2)))]\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d,d,d,d\")\n+        (plus:GPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCL1mode)\"\n   \"@\n-   alr\\t%0,%2\n-   alfi\\t%0,%o2\n-   al\\t%0,%2\n-   aly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RIL,RX,RXY\")])\n+   al<g>r\\t%0,%2\n+   al<g>fi\\t%0,%2\n+   sl<g>fi\\t%0,%n2\n+   al<g>\\t%0,%2\n+   al<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RIL,RIL,RX<Y>,RXY\")])\n \n-(define_insn \"*addsi3_carry1_cconly\"\n+(define_insn \"*add<mode>3_carry1_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n+        (compare (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0\")\n+\t\t\t   (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n-   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n+   (clobber (match_scratch:GPR 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCL1mode)\"\n   \"@\n-   alr\\t%0,%2\n-   al\\t%0,%2\n-   aly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   al<g>r\\t%0,%2\n+   al<g>\\t%0,%2\n+   al<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*addsi3_carry2_cc\"\n+(define_insn \"*add<mode>3_carry2_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,Os,R,T\"))\n+        (compare (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n+\t\t\t   (match_operand:GPR 2 \"general_operand\" \"d,Op,On,R,T\"))\n                  (match_dup 2)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d\")\n-        (plus:SI (match_dup 1) (match_dup 2)))]\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d,d,d,d\")\n+        (plus:GPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCL1mode)\"\n   \"@\n-   alr\\t%0,%2\n-   alfi\\t%0,%o2\n-   al\\t%0,%2\n-   aly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RIL,RX,RXY\")])\n+   al<g>r\\t%0,%2\n+   al<g>fi\\t%0,%2\n+   sl<g>fi\\t%0,%n2\n+   al<g>\\t%0,%2\n+   al<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RIL,RIL,RX<Y>,RXY\")])\n \n-(define_insn \"*addsi3_carry2_cconly\"\n+(define_insn \"*add<mode>3_carry2_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n+        (compare (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0\")\n+\t\t\t   (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 2)))\n-   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n+   (clobber (match_scratch:GPR 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCL1mode)\"\n   \"@\n-   alr\\t%0,%2\n-   al\\t%0,%2\n-   aly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   al<g>r\\t%0,%2\n+   al<g>\\t%0,%2\n+   al<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*addsi3_cc\"\n+(define_insn \"*add<mode>3_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,Os,R,T\"))\n+        (compare (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n+\t\t\t   (match_operand:GPR 2 \"general_operand\" \"d,Op,On,R,T\"))\n                  (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d\")\n-        (plus:SI (match_dup 1) (match_dup 2)))]\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d,d,d,d\")\n+        (plus:GPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCLmode)\"\n   \"@\n-   alr\\t%0,%2\n-   alfi\\t%0,%o2\n-   al\\t%0,%2\n-   aly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RIL,RX,RXY\")])\n+   al<g>r\\t%0,%2\n+   al<g>fi\\t%0,%2\n+   sl<g>fi\\t%0,%n2\n+   al<g>\\t%0,%2\n+   al<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RIL,RIL,RX<Y>,RXY\")])\n \n-(define_insn \"*addsi3_cconly\"\n+(define_insn \"*add<mode>3_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-                          (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n+        (compare (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0\")\n+\t\t\t   (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n+   (clobber (match_scratch:GPR 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCLmode)\"\n   \"@\n-   alr\\t%0,%2\n-   al\\t%0,%2\n-   aly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   al<g>r\\t%0,%2\n+   al<g>\\t%0,%2\n+   al<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*addsi3_cconly2\"\n+(define_insn \"*add<mode>3_cconly2\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-                 (neg:SI (match_operand:SI 2 \"general_operand\" \"d,R,T\"))))\n-   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n-  \"s390_match_ccmode (insn, CCLmode)\"\n-  \"@\n-   alr\\t%0,%2\n-   al\\t%0,%2\n-   aly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n-\n-(define_insn \"*addsi3_sign\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (plus:SI (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))\n-                 (match_operand:SI 1 \"register_operand\" \"0,0\")))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"\"\n+        (compare (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0,0\")\n+                 (neg:GPR (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))))\n+   (clobber (match_scratch:GPR 0 \"=d,d,d\"))]\n+  \"s390_match_ccmode(insn, CCLmode)\"\n   \"@\n-   ah\\t%0,%2\n-   ahy\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX,RXY\")])\n+   al<g>r\\t%0,%2\n+   al<g>\\t%0,%2\n+   al<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"addsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d,d,d\")\n-        (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,0,0,0\")\n-                 (match_operand:SI 2 \"general_operand\" \"d,K,Os,R,T\")))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"\"\n+(define_insn \"*add<mode>3_imm_cc\"\n+  [(set (reg CC_REGNUM)\n+        (compare (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"0,0\")\n+\t\t\t   (match_operand:GPR 2 \"const_int_operand\" \"K,Os\"))\n+                 (const_int 0)))\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n+        (plus:GPR (match_dup 1) (match_dup 2)))]\n+  \"s390_match_ccmode (insn, CCAmode)\n+   && (CONST_OK_FOR_CONSTRAINT_P (INTVAL (operands[2]), 'K', \\\"K\\\")\n+       || CONST_OK_FOR_CONSTRAINT_P (INTVAL (operands[2]), 'O', \\\"Os\\\"))\n+   && INTVAL (operands[2]) != -((HOST_WIDE_INT)1 << (GET_MODE_BITSIZE(<MODE>mode) - 1))\"\n   \"@\n-   ar\\t%0,%2\n-   ahi\\t%0,%h2\n-   afi\\t%0,%2\n-   a\\t%0,%2\n-   ay\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RI,RIL,RX,RXY\")])\n+   a<g>hi\\t%0,%h2\n+   a<g>fi\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RI,RIL\")])\n \n ;\n ; add(df|sf)3 instruction pattern(s).\n@@ -3740,6 +3628,15 @@\n ; subdi3 instruction pattern(s).\n ;\n \n+(define_expand \"subdi3\"\n+  [(parallel\n+    [(set (match_operand:DI 0 \"register_operand\" \"\")\n+          (minus:DI (match_operand:DI 1 \"register_operand\" \"\")\n+                    (match_operand:DI 2 \"general_operand\" \"\")))\n+     (clobber (reg:CC CC_REGNUM))])]\n+  \"\"\n+  \"\")\n+\n (define_insn \"*subdi3_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n@@ -3787,90 +3684,6 @@\n    slgf\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n-(define_insn \"*subdi3_borrow_cc\"\n-  [(set (reg CC_REGNUM)\n-        (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n-                 (match_dup 1)))\n-   (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (minus:DI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCL2mode) && TARGET_64BIT\"\n-  \"@\n-   slgr\\t%0,%2\n-   slg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*subdi3_borrow_cconly\"\n-  [(set (reg CC_REGNUM)\n-        (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n-                 (match_dup 1)))\n-   (clobber (match_scratch:DI 0 \"=d,d\"))]\n-  \"s390_match_ccmode (insn, CCL2mode) && TARGET_64BIT\"\n-  \"@\n-   slgr\\t%0,%2\n-   slg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*subdi3_cc\"\n-  [(set (reg CC_REGNUM)\n-        (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n-                 (const_int 0)))\n-   (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (minus:DI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCLmode) && TARGET_64BIT\"\n-  \"@\n-   slgr\\t%0,%2\n-   slg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*subdi3_cc2\"\n-  [(set (reg CC_REGNUM)\n-        (compare (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                 (match_operand:DI 2 \"general_operand\" \"d,m\")))\n-   (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (minus:DI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode (insn, CCL3mode) && TARGET_64BIT\"\n-  \"@\n-   slgr\\t%0,%2\n-   slg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*subdi3_cconly\"\n-  [(set (reg CC_REGNUM)\n-        (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                           (match_operand:DI 2 \"general_operand\" \"d,m\"))\n-                 (const_int 0)))\n-   (clobber (match_scratch:DI 0 \"=d,d\"))]\n-  \"s390_match_ccmode (insn, CCLmode) && TARGET_64BIT\"\n-  \"@\n-   slgr\\t%0,%2\n-   slg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*subdi3_cconly2\"\n-  [(set (reg CC_REGNUM)\n-        (compare (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                 (match_operand:DI 2 \"general_operand\" \"d,m\")))\n-   (clobber (match_scratch:DI 0 \"=d,d\"))]\n-  \"s390_match_ccmode (insn, CCL3mode) && TARGET_64BIT\"\n-  \"@\n-   slgr\\t%0,%2\n-   slg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXY\")])\n-\n-(define_insn \"*subdi3_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                  (match_operand:DI 2 \"general_operand\" \"d,m\") ) )\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   sgr\\t%0,%2\n-   sg\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RRE\")])\n-\n (define_insn_and_split \"*subdi3_31z\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0\")\n@@ -3927,121 +3740,124 @@\n    operands[8] = operand_subword (operands[2], 1, 0, DImode);\n    operands[9] = gen_label_rtx ();\")\n \n-(define_expand \"subdi3\"\n+;\n+; subsi3 instruction pattern(s).\n+;\n+\n+(define_expand \"subsi3\"\n   [(parallel\n-    [(set (match_operand:DI 0 \"register_operand\" \"\")\n-          (minus:DI (match_operand:DI 1 \"register_operand\" \"\")\n-                    (match_operand:DI 2 \"general_operand\" \"\")))\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+          (minus:SI (match_operand:SI 1 \"register_operand\" \"\")\n+                    (match_operand:SI 2 \"general_operand\" \"\")))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"\"\n   \"\")\n \n+(define_insn \"*subsi3_sign\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n+                  (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"\"\n+  \"@\n+   sh\\t%0,%2\n+   shy\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")])\n+\n ;\n-; subsi3 instruction pattern(s).\n+; sub(di|si)3 instruction pattern(s).\n ;\n \n-(define_insn \"*subsi3_borrow_cc\"\n+(define_insn \"*sub<mode>3\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d,d,d\")\n+        (minus:GPR (match_operand:GPR 1 \"register_operand\" \"0,0,0\")\n+\t\t   (match_operand:GPR 2 \"general_operand\" \"d,R,T\") ) )\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"\"\n+  \"@\n+   s<g>r\\t%0,%2\n+   s<g>\\t%0,%2\n+   s<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n+\n+(define_insn \"*sub<mode>3_borrow_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n+        (compare (minus:GPR (match_operand:GPR 1 \"register_operand\" \"0,0,0\")\n+\t\t\t    (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (minus:SI (match_dup 1) (match_dup 2)))]\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d,d\")\n+        (minus:GPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCL2mode)\"\n   \"@\n-   slr\\t%0,%2\n-   sl\\t%0,%2\n-   sly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   sl<g>r\\t%0,%2\n+   sl<g>\\t%0,%2\n+   sl<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*subsi3_borrow_cconly\"\n+(define_insn \"*sub<mode>3_borrow_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n+        (compare (minus:GPR (match_operand:GPR 1 \"register_operand\" \"0,0,0\")\n+\t\t\t    (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))\n                  (match_dup 1)))\n-   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n+   (clobber (match_scratch:GPR 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCL2mode)\"\n   \"@\n-   slr\\t%0,%2\n-   sl\\t%0,%2\n-   sly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   sl<g>r\\t%0,%2\n+   sl<g>\\t%0,%2\n+   sl<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*subsi3_cc\"\n+(define_insn \"*sub<mode>3_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n+        (compare (minus:GPR (match_operand:GPR 1 \"register_operand\" \"0,0,0\")\n+\t\t\t    (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (minus:SI (match_dup 1) (match_dup 2)))]\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d,d\")\n+        (minus:GPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCLmode)\"\n   \"@\n-   slr\\t%0,%2\n-   sl\\t%0,%2\n-   sly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   sl<g>r\\t%0,%2\n+   sl<g>\\t%0,%2\n+   sl<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*subsi3_cc2\"\n+(define_insn \"*sub<mode>3_cc2\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n-                 (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n-   (set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (minus:SI (match_dup 1) (match_dup 2)))]\n+        (compare (match_operand:GPR 1 \"register_operand\" \"0,0,0\")\n+                 (match_operand:GPR 2 \"general_operand\" \"d,R,T\")))\n+   (set (match_operand:GPR 0 \"register_operand\" \"=d,d,d\")\n+        (minus:GPR (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCL3mode)\"\n   \"@\n-   slr\\t%0,%2\n-   sl\\t%0,%2\n-   sly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   sl<g>r\\t%0,%2\n+   sl<g>\\t%0,%2\n+   sl<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*subsi3_cconly\"\n+(define_insn \"*sub<mode>3_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n-                           (match_operand:SI 2 \"general_operand\" \"d,R,T\"))\n+        (compare (minus:GPR (match_operand:GPR 1 \"register_operand\" \"0,0,0\")\n+\t\t\t    (match_operand:GPR 2 \"general_operand\" \"d,R,T\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n+   (clobber (match_scratch:GPR 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCLmode)\"\n   \"@\n-   slr\\t%0,%2\n-   sl\\t%0,%2\n-   sly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n+   sl<g>r\\t%0,%2\n+   sl<g>\\t%0,%2\n+   sl<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n-(define_insn \"*subsi3_cconly2\"\n+(define_insn \"*sub<mode>3_cconly2\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n-                 (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n-   (clobber (match_scratch:SI 0 \"=d,d,d\"))]\n+        (compare (match_operand:GPR 1 \"register_operand\" \"0,0,0\")\n+                 (match_operand:GPR 2 \"general_operand\" \"d,R,T\")))\n+   (clobber (match_scratch:GPR 0 \"=d,d,d\"))]\n   \"s390_match_ccmode (insn, CCL3mode)\"\n   \"@\n-   slr\\t%0,%2\n-   sl\\t%0,%2\n-   sly\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n-\n-(define_insn \"*subsi3_sign\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n-                  (sign_extend:SI (match_operand:HI 2 \"memory_operand\" \"R,T\"))))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"\"\n-  \"@\n-   sh\\t%0,%2\n-   shy\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX,RXY\")])\n-\n-(define_insn \"subsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n-        (minus:SI (match_operand:SI 1 \"register_operand\" \"0,0,0\")\n-                  (match_operand:SI 2 \"general_operand\" \"d,R,T\")))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"\"\n-  \"@\n-   sr\\t%0,%2\n-   s\\t%0,%2\n-   sy\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX,RXY\")])\n-\n+   sl<g>r\\t%0,%2\n+   sl<g>\\t%0,%2\n+   sl<y>\\t%0,%2\"\n+  [(set_attr \"op_type\"  \"RR<E>,RX<Y>,RXY\")])\n \n ;\n ; sub(df|sf)3 instruction pattern(s)."}]}