{"sha": "a4dafb8b92e00e2f783bf8915b17f1f450eff227", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkYWZiOGI5MmUwMGUyZjc4M2JmODkxNWIxN2YxZjQ1MGVmZjIyNw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-27T09:14:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:10Z"}, "message": "[Ada] Simplify processing of 'Valid_Scalars on array types\n\n2020-06-19  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Do not call\n\tScalar_Part_Present on the array component's type.\n\t(Build_Array_VS_Func): Remove Comp_Typ parameter, because it can\n\tbe easily computed from the Array_Top parameter *and redundant\n\tparameters are confusing and error-prone).", "tree": {"sha": "1a666e633d620d85f2080e45587f6123278fe2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a666e633d620d85f2080e45587f6123278fe2c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4dafb8b92e00e2f783bf8915b17f1f450eff227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4dafb8b92e00e2f783bf8915b17f1f450eff227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4dafb8b92e00e2f783bf8915b17f1f450eff227", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4dafb8b92e00e2f783bf8915b17f1f450eff227/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66bd7af5cca12b8f0470d1e8cf347ae2de1e928f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66bd7af5cca12b8f0470d1e8cf347ae2de1e928f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66bd7af5cca12b8f0470d1e8cf347ae2de1e928f"}], "stats": {"total": 42, "additions": 17, "deletions": 25}, "files": [{"sha": "0eead444759c3f556c37d58abfa92d27769c9732", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 17, "deletions": 25, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4dafb8b92e00e2f783bf8915b17f1f450eff227/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4dafb8b92e00e2f783bf8915b17f1f450eff227/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=a4dafb8b92e00e2f783bf8915b17f1f450eff227", "patch": "@@ -79,8 +79,7 @@ package body Exp_Attr is\n    function Build_Array_VS_Func\n      (Attr       : Node_Id;\n       Formal_Typ : Entity_Id;\n-      Array_Typ  : Entity_Id;\n-      Comp_Typ   : Entity_Id) return Entity_Id;\n+      Array_Typ  : Entity_Id) return Entity_Id;\n    --  Validate the components of an array type by means of a function. Return\n    --  the entity of the validation function. The parameters are as follows:\n    --\n@@ -91,8 +90,6 @@ package body Exp_Attr is\n    --      parameter.\n    --\n    --    * Array_Typ - the array type whose components are to be validated\n-   --\n-   --    * Comp_Typ - the component type of the array\n \n    function Build_Disp_Get_Task_Id_Call (Actual : Node_Id) return Node_Id;\n    --  Build a call to Disp_Get_Task_Id, passing Actual as actual parameter\n@@ -237,10 +234,11 @@ package body Exp_Attr is\n    function Build_Array_VS_Func\n      (Attr       : Node_Id;\n       Formal_Typ : Entity_Id;\n-      Array_Typ  : Entity_Id;\n-      Comp_Typ   : Entity_Id) return Entity_Id\n+      Array_Typ  : Entity_Id) return Entity_Id\n    is\n-      Loc : constant Source_Ptr := Sloc (Attr);\n+      Loc      : constant Source_Ptr := Sloc (Attr);\n+      Comp_Typ : constant Entity_Id :=\n+        Validated_View (Component_Type (Array_Typ));\n \n       function Validate_Component\n         (Obj_Id  : Entity_Id;\n@@ -7088,9 +7086,8 @@ package body Exp_Attr is\n       -------------------\n \n       when Attribute_Valid_Scalars => Valid_Scalars : declare\n-         Val_Typ  : constant Entity_Id := Validated_View (Ptyp);\n-         Comp_Typ : Entity_Id;\n-         Expr     : Node_Id;\n+         Val_Typ : constant Entity_Id := Validated_View (Ptyp);\n+         Expr    : Node_Id;\n \n       begin\n          --  Assume that the prefix does not need validation\n@@ -7130,21 +7127,16 @@ package body Exp_Attr is\n          --  dimensions of the array while checking individual components.\n \n          elsif Is_Array_Type (Val_Typ) then\n-            Comp_Typ := Validated_View (Component_Type (Val_Typ));\n-\n-            if Scalar_Part_Present (Comp_Typ) then\n-               Expr :=\n-                 Make_Function_Call (Loc,\n-                   Name                   =>\n-                     New_Occurrence_Of\n-                       (Build_Array_VS_Func\n-                         (Attr       => N,\n-                          Formal_Typ => Ptyp,\n-                          Array_Typ  => Val_Typ,\n-                          Comp_Typ   => Comp_Typ),\n-                       Loc),\n-                   Parameter_Associations => New_List (Pref));\n-            end if;\n+            Expr :=\n+              Make_Function_Call (Loc,\n+                Name                   =>\n+                  New_Occurrence_Of\n+                    (Build_Array_VS_Func\n+                      (Attr       => N,\n+                       Formal_Typ => Ptyp,\n+                       Array_Typ  => Val_Typ),\n+                    Loc),\n+                Parameter_Associations => New_List (Pref));\n \n          --  Validate the scalar components, discriminants of a record type by\n          --  examining the structure of a record type."}]}