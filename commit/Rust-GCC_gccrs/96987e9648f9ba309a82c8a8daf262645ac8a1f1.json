{"sha": "96987e9648f9ba309a82c8a8daf262645ac8a1f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5ODdlOTY0OGY5YmEzMDlhODJjOGE4ZGFmMjYyNjQ1YWM4YTFmMQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-09-25T01:10:47Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-09-25T01:10:47Z"}, "message": "sparc.c (dwarf2out_cfi_label): Add declaration.\n\n\t* sparc.c (dwarf2out_cfi_label): Add declaration.\n\t(save_regs, output_function_prologue): Remove cast for it.\n\t(sparc_flat_{save_restore,output_function_prologue): Likewise.\n\t({save,restore}_regs): No longer inline.\n\nFrom-SVN: r15707", "tree": {"sha": "c33533a864875e5b4a533654990274cfaa05eca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c33533a864875e5b4a533654990274cfaa05eca1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96987e9648f9ba309a82c8a8daf262645ac8a1f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96987e9648f9ba309a82c8a8daf262645ac8a1f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96987e9648f9ba309a82c8a8daf262645ac8a1f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96987e9648f9ba309a82c8a8daf262645ac8a1f1/comments", "author": null, "committer": null, "parents": [{"sha": "bf62bbf1bc2f110fd887c6ea4f900b5cf75b294a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf62bbf1bc2f110fd887c6ea4f900b5cf75b294a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf62bbf1bc2f110fd887c6ea4f900b5cf75b294a"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "91d731f80ddef8acc966c79943eb360302268828", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96987e9648f9ba309a82c8a8daf262645ac8a1f1/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96987e9648f9ba309a82c8a8daf262645ac8a1f1/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=96987e9648f9ba309a82c8a8daf262645ac8a1f1", "patch": "@@ -113,6 +113,10 @@ static int frame_base_offset;\n \n static rtx find_addr_reg ();\n static void sparc_init_modes ();\n+\n+#ifdef DWARF2_DEBUGGING_INFO\n+extern char *dwarf2out_cfi_label ();\n+#endif\n \f\n /* Option handling.  */\n \n@@ -2926,9 +2930,6 @@ sparc_init_modes ()\n    N_REGS is the number of 4-byte regs saved thus far.  This applies even to\n    v9 int regs as it simplifies the code.  */\n \n-#ifdef __GNUC__\n-__inline__\n-#endif\n static int\n save_regs (file, low, high, base, offset, n_regs, real_offset)\n      FILE *file;\n@@ -2965,7 +2966,7 @@ save_regs (file, low, high, base, offset, n_regs, real_offset)\n \t\t\t reg_names[i], base, offset + 4 * n_regs);\n \t\tif (dwarf2out_do_frame ())\n \t\t  {\n-\t\t    char *l = (char *) dwarf2out_cfi_label ();\n+\t\t    char *l = dwarf2out_cfi_label ();\n \t\t    dwarf2out_reg_save (l, i, real_offset + 4 * n_regs);\n \t\t    dwarf2out_reg_save (l, i+1, real_offset + 4 * n_regs + 4);\n \t\t  }\n@@ -2997,9 +2998,6 @@ save_regs (file, low, high, base, offset, n_regs, real_offset)\n    N_REGS is the number of 4-byte regs saved thus far.  This applies even to\n    v9 int regs as it simplifies the code.  */\n \n-#ifdef __GNUC__\n-__inline__\n-#endif\n static int\n restore_regs (file, low, high, base, offset, n_regs)\n      FILE *file;\n@@ -3228,7 +3226,7 @@ output_function_prologue (file, size, leaf_function)\n \n   if (dwarf2out_do_frame () && actual_fsize)\n     {\n-      char *label = (char *) dwarf2out_cfi_label ();\n+      char *label = dwarf2out_cfi_label ();\n \n       /* The canonical frame address refers to the top of the frame.  */\n       dwarf2out_def_cfa (label, (leaf_function ? STACK_POINTER_REGNUM\n@@ -4731,7 +4729,8 @@ sparc_flat_compute_frame_size (size)\n    DOUBLEWORD_OP is either \"std\" for save, \"ldd\" for restore.  */\n \n void\n-sparc_flat_save_restore (file, base_reg, offset, gmask, fmask, word_op, doubleword_op, base_offset)\n+sparc_flat_save_restore (file, base_reg, offset, gmask, fmask, word_op,\n+\t\t\t doubleword_op, base_offset)\n      FILE *file;\n      char *base_reg;\n      unsigned int offset;\n@@ -4773,7 +4772,7 @@ sparc_flat_save_restore (file, base_reg, offset, gmask, fmask, word_op, doublewo\n \t\t\t       base_reg, offset);\n \t\t      if (dwarf2out_do_frame ())\n \t\t\t{\n-\t\t\t  char *l = (char *) dwarf2out_cfi_label ();\n+\t\t\t  char *l = dwarf2out_cfi_label ();\n \t\t\t  dwarf2out_reg_save (l, regno, offset + base_offset);\n \t\t\t  dwarf2out_reg_save\n \t\t\t    (l, regno+1, offset+base_offset + UNITS_PER_WORD);\n@@ -4920,7 +4919,7 @@ sparc_flat_output_function_prologue (file, size)\n \t    }\n \t  if (dwarf2out_do_frame ())\n \t    {\n-\t      char *l = (char *) dwarf2out_cfi_label ();\n+\t      char *l = dwarf2out_cfi_label ();\n \t      if (gmask & FRAME_POINTER_MASK)\n \t\t{\n \t\t  dwarf2out_reg_save (l, FRAME_POINTER_REGNUM,\n@@ -4978,7 +4977,7 @@ sparc_flat_output_function_prologue (file, size)\n \t    }\n \t  if (dwarf2out_do_frame ())\n \t    {\n-\t      char *l = (char *) dwarf2out_cfi_label ();\n+\t      char *l = dwarf2out_cfi_label ();\n \t      if (gmask & FRAME_POINTER_MASK)\n \t\t{\n \t\t  dwarf2out_reg_save (l, FRAME_POINTER_REGNUM,"}]}