{"sha": "3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjNmIzZTZmYzQwNTU5NTE5ZTcwNzhjM2Y1NDlkMGU4N2JkZjhiZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-09-07T17:25:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-09-07T17:25:11Z"}, "message": "Define target hook TARGET_UNWIND_EMIT_BEFORE_INSN.\n\nFrom-SVN: r163961", "tree": {"sha": "7e57ac89de2bf5bd7f6fbbe53ca3236920a648e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e57ac89de2bf5bd7f6fbbe53ca3236920a648e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/comments", "author": null, "committer": null, "parents": [{"sha": "aa2298043c59f24bfea30f1c8f2207d0caf6e28b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2298043c59f24bfea30f1c8f2207d0caf6e28b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2298043c59f24bfea30f1c8f2207d0caf6e28b"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "f544f7357697723f04eb232df7a385ef885262c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "patch": "@@ -1,3 +1,10 @@\n+2010-09-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* target.def (unwind_emit_before_insn): New hook.\n+\t* doc/tm.texi.in: Add @hook marker for it.\n+\t* doc/tm.texi: Rebuild.\n+\t* final.c (final_scan_insn): Respect unwind_emit_before_insn.\n+\n 2010-09-07  Martin Jambor  <mjambor@suse.cz>\n \n \tPR fortran/43665\n@@ -6,8 +13,8 @@\n \n 2010-09-07  Jan Hubicka  <jh@suse.cz>\n \n-\t* tree-ssa-ccp.c (fold_const_aggregate_ref): Fix handling of array_ref_low_bound\n-\tin string access folding.\n+\t* tree-ssa-ccp.c (fold_const_aggregate_ref): Fix handling of\n+\tarray_ref_low_bound in string access folding.\n \n 2010-09-07  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "a8db902db7a897bc12f36d4ed419cb42a8a07959", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "patch": "@@ -8749,6 +8749,10 @@ This target hook emits assembly directives required to unwind the\n given instruction.  This is only used when TARGET_UNWIND_INFO is set.\n @end deftypefn\n \n+@deftypevr {Target Hook} bool TARGET_ASM_UNWIND_EMIT_BEFORE_INSN\n+True if the @code{TARGET_ASM_UNWIND_EMIT} hook should be called before the assembly for @var{insn} has been emitted, false if the hook should be called afterward.\n+@end deftypevr\n+\n @node Exception Region Output\n @subsection Assembler Commands for Exception Regions\n "}, {"sha": "2efc1ae4eba1adbae011fd2aae1ebce2245955d1", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "patch": "@@ -8739,6 +8739,8 @@ This target hook emits assembly directives required to unwind the\n given instruction.  This is only used when TARGET_UNWIND_INFO is set.\n @end deftypefn\n \n+@hook TARGET_ASM_UNWIND_EMIT_BEFORE_INSN\n+\n @node Exception Region Output\n @subsection Assembler Commands for Exception Regions\n "}, {"sha": "06ebc17dadee941a11883316cf14d09a0b7378de", "filename": "gcc/final.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "patch": "@@ -2655,7 +2655,8 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t/* ??? This will put the directives in the wrong place if\n \t   get_insn_template outputs assembly directly.  However calling it\n \t   before get_insn_template breaks if the insns is split.  */\n-\tif (targetm.asm_out.unwind_emit)\n+\tif (targetm.asm_out.unwind_emit_before_insn\n+\t    && targetm.asm_out.unwind_emit)\n \t  targetm.asm_out.unwind_emit (asm_out_file, insn);\n \n \tif (CALL_P (insn))\n@@ -2713,6 +2714,10 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t  dwarf2out_frame_debug (insn, true);\n #endif\n \n+\tif (!targetm.asm_out.unwind_emit_before_insn\n+\t    && targetm.asm_out.unwind_emit)\n+\t  targetm.asm_out.unwind_emit (asm_out_file, insn);\n+\n \tcurrent_output_insn = debug_insn = 0;\n       }\n     }"}, {"sha": "e62a977182dff6763f93750186b53fd900e8661e", "filename": "gcc/target.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bc6b3e6fc40559519e7078c3f549d0e87bdf8be/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=3bc6b3e6fc40559519e7078c3f549d0e87bdf8be", "patch": "@@ -152,6 +152,13 @@ DEFHOOK\n  void, (FILE *stream, rtx insn),\n  NULL)\n \n+DEFHOOKPOD\n+(unwind_emit_before_insn,\n+ \"True if the @code{TARGET_ASM_UNWIND_EMIT} hook should be called before\\\n+ the assembly for @var{insn} has been emitted, false if the hook should\\\n+ be called afterward.\",\n+ bool, true)\n+\n /* Output an internal label.  */\n DEFHOOK\n (internal_label,"}]}