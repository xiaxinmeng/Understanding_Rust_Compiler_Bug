{"sha": "488c8379f425d9cfefa65eb2e393ca71f1cf65c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg4YzgzNzlmNDI1ZDljZmVmYTY1ZWIyZTM5M2NhNzFmMWNmNjVjMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-12-19T21:19:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-12-19T21:19:13Z"}, "message": "lower-subreg.c (can_decompose_p): Check every word of a hard register.\n\ngcc/\n\t* lower-subreg.c (can_decompose_p): Check every word of a hard\n\tregister.\n\nFrom-SVN: r182500", "tree": {"sha": "37253ea4aff9510b8b59986473fe750663d476f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37253ea4aff9510b8b59986473fe750663d476f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/488c8379f425d9cfefa65eb2e393ca71f1cf65c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/488c8379f425d9cfefa65eb2e393ca71f1cf65c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/488c8379f425d9cfefa65eb2e393ca71f1cf65c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/488c8379f425d9cfefa65eb2e393ca71f1cf65c0/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "176fcc5d1822df70613dd74a19d28c2e0840193a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/176fcc5d1822df70613dd74a19d28c2e0840193a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/176fcc5d1822df70613dd74a19d28c2e0840193a"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "37509933734066d32cd3686101ba8f8d82234e70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/488c8379f425d9cfefa65eb2e393ca71f1cf65c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/488c8379f425d9cfefa65eb2e393ca71f1cf65c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=488c8379f425d9cfefa65eb2e393ca71f1cf65c0", "patch": "@@ -1,3 +1,8 @@\n+2011-12-19  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* lower-subreg.c (can_decompose_p): Check every word of a hard\n+\tregister.\n+\n 2011-12-19  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Tom de Vries <tom@codesourcery.com>\n "}, {"sha": "779cc5f40dee428177841db44b5c17e23796506b", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/488c8379f425d9cfefa65eb2e393ca71f1cf65c0/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/488c8379f425d9cfefa65eb2e393ca71f1cf65c0/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=488c8379f425d9cfefa65eb2e393ca71f1cf65c0", "patch": "@@ -634,8 +634,15 @@ can_decompose_p (rtx x)\n       unsigned int regno = REGNO (x);\n \n       if (HARD_REGISTER_NUM_P (regno))\n-\treturn (validate_subreg (word_mode, GET_MODE (x), x, UNITS_PER_WORD)\n-\t\t&& HARD_REGNO_MODE_OK (regno, word_mode));\n+\t{\n+\t  unsigned int byte, num_bytes;\n+\n+\t  num_bytes = GET_MODE_SIZE (GET_MODE (x));\n+\t  for (byte = 0; byte < num_bytes; byte += UNITS_PER_WORD)\n+\t    if (simplify_subreg_regno (regno, GET_MODE (x), byte, word_mode) < 0)\n+\t      return false;\n+\t  return true;\n+\t}\n       else\n \treturn !bitmap_bit_p (subreg_context, regno);\n     }"}]}