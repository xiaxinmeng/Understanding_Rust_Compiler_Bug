{"sha": "592fbfb5fb376972c21d88ac57b0a4a38018e79f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkyZmJmYjVmYjM3Njk3MmMyMWQ4OGFjNTdiMGE0YTM4MDE4ZTc5Zg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-10-05T15:17:39Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-10-05T15:17:39Z"}, "message": "slp-perm-9.c: Use vect_sizes_16B_8B.\n\ngcc/testsuite/\n2017-10-05  Tamar Christina  <tamar.christina@arm.com>\n\n\t* gcc.dg/vect/slp-perm-9.c: Use vect_sizes_16B_8B.\n\t* lib/target-supports.exp (vect_sizes_16B_8B): New.\n\ngcc/\n2017-10-05  Tamar Christina  <tamar.christina@arm.com>\n\n\t* doc/sourcebuild.texi (vect_sizes_16B_8B, vect_sizes_32B_16B): New.\n\nFrom-SVN: r253452", "tree": {"sha": "6d9f349b4ed51457480f7641b70972032810c6ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d9f349b4ed51457480f7641b70972032810c6ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/592fbfb5fb376972c21d88ac57b0a4a38018e79f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/592fbfb5fb376972c21d88ac57b0a4a38018e79f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/592fbfb5fb376972c21d88ac57b0a4a38018e79f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/592fbfb5fb376972c21d88ac57b0a4a38018e79f/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0322303e26cc317970fa311c032121078dab51dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0322303e26cc317970fa311c032121078dab51dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0322303e26cc317970fa311c032121078dab51dc"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "777340cdce73f0dcc9f05d3de5a4c3bbc0d89cbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=592fbfb5fb376972c21d88ac57b0a4a38018e79f", "patch": "@@ -1,3 +1,7 @@\n+2017-10-05  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* doc/sourcebuild.texi (vect_sizes_16B_8B, vect_sizes_32B_16B): New.\n+\n 2017-10-05  Jan Hubicka <hubicka@ucw.cz>\n \n \t* i386.c (znver1_cost): Set branch_cost to 3 (instead of 2)"}, {"sha": "a2f0429119499297ec5ec6ecea2ba46512f02426", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=592fbfb5fb376972c21d88ac57b0a4a38018e79f", "patch": "@@ -1519,6 +1519,12 @@ Target supports conversion from @code{double} to @code{signed int}.\n \n @item vect_max_reduc\n Target supports max reduction for vectors.\n+\n+@item vect_sizes_16B_8B\n+Target supports 16- and 8-bytes vectors.\n+\n+@item vect_sizes_32B_16B\n+Target supports 32- and 16-bytes vectors.\n @end table\n \n @subsubsection Thread Local Storage attributes"}, {"sha": "5b7919fc956b41ca22814d5fa426331882dda734", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=592fbfb5fb376972c21d88ac57b0a4a38018e79f", "patch": "@@ -1,4 +1,9 @@\n-2017-09-28  Tamar Christina  <tamar.christina@arm.com>\n+2017-10-05  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.dg/vect/slp-perm-9.c: Use vect_sizes_16B_8B.\n+\t* lib/target-supports.exp (vect_sizes_16B_8B): New.\n+\n+2017-10-05  Tamar Christina  <tamar.christina@arm.com>\n \n \t* gcc.dg/vect/vect-align-1.c: Fix vect_hw_misalign condition.\n \t* gcc.dg/vect/vect-align-2.c: Likewise."}, {"sha": "b9b5a3b87ad031a5ab7421efce2c2b0fdf9145f3", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-9.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-9.c?ref=592fbfb5fb376972c21d88ac57b0a4a38018e79f", "patch": "@@ -54,8 +54,8 @@ int main (int argc, const char* argv[])\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target { {! vect_perm } || {! vect_sizes_32B_16B } } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\"  { target { { vect_perm } && { vect_sizes_32B_16B } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target { {! vect_perm } || {! vect_sizes_16B_8B } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\"  { target { { vect_perm } && { vect_sizes_16B_8B } } } } } */\n /* { dg-final { scan-tree-dump-times \"permutation requires at least three vectors\" 1 \"vect\" { target vect_perm_short } } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" { target { {! vect_perm } || {! vect_sizes_32B_16B } } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { { vect_perm } && { vect_sizes_32B_16B } } } } } */"}, {"sha": "fbe8f2a76af739c8e211c708f79717a60a72b87a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592fbfb5fb376972c21d88ac57b0a4a38018e79f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=592fbfb5fb376972c21d88ac57b0a4a38018e79f", "patch": "@@ -7671,6 +7671,19 @@ proc check_effective_target_vect_sizes_32B_16B { } {\n   }\n }\n \n+# Return true if 16- and 8-bytes vectors are available.\n+\n+proc check_effective_target_vect_sizes_16B_8B { } {\n+  if { [check_avx_available]\n+       || [is-effective-target arm_neon]\n+       || [istarget aarch64*-*-*] } {\n+     return 1;\n+  } else {\n+    return 0;\n+  }\n+}\n+\n+\n # Return true if 128-bits vectors are preferred even if 256-bits vectors\n # are available.\n "}]}