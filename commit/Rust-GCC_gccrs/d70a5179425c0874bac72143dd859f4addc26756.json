{"sha": "d70a5179425c0874bac72143dd859f4addc26756", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcwYTUxNzk0MjVjMDg3NGJhYzcyMTQzZGQ4NTlmNGFkZGMyNjc1Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-10-26T15:02:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-10-26T15:02:39Z"}, "message": "* decl.c (finish_function): Don't look at function_depth.\n\nFrom-SVN: r165967", "tree": {"sha": "be3bb2041edc29cac3dd479f558bfe3d921c648b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3bb2041edc29cac3dd479f558bfe3d921c648b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d70a5179425c0874bac72143dd859f4addc26756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70a5179425c0874bac72143dd859f4addc26756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d70a5179425c0874bac72143dd859f4addc26756", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70a5179425c0874bac72143dd859f4addc26756/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e2f8c15bcd86287320e65589d52162fa3a7ff18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2f8c15bcd86287320e65589d52162fa3a7ff18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2f8c15bcd86287320e65589d52162fa3a7ff18"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "3b73211afd6fd16ad6f8096e9e55f4dd93c540d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70a5179425c0874bac72143dd859f4addc26756/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70a5179425c0874bac72143dd859f4addc26756/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d70a5179425c0874bac72143dd859f4addc26756", "patch": "@@ -1,3 +1,7 @@\n+2010-10-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (finish_function): Don't look at function_depth.\n+\n 2010-10-25  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n \n \tImplement opaque-enum-specifiers for C++0x."}, {"sha": "e513bc08c6a3d0a6f93315e9f85333091dcf2deb", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70a5179425c0874bac72143dd859f4addc26756/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70a5179425c0874bac72143dd859f4addc26756/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d70a5179425c0874bac72143dd859f4addc26756", "patch": "@@ -12660,7 +12660,6 @@ finish_function (int flags)\n   tree fndecl = current_function_decl;\n   tree fntype, ctype = NULL_TREE;\n   int inclass_inline = (flags & 2) != 0;\n-  int nested;\n \n   /* When we get some parse errors, we can end up without a\n      current_function_decl, so cope.  */\n@@ -12672,7 +12671,6 @@ finish_function (int flags)\n \n   record_key_method_defined (fndecl);\n \n-  nested = function_depth > 1;\n   fntype = TREE_TYPE (fndecl);\n \n   /*  TREE_READONLY (fndecl) = 1;\n@@ -12883,11 +12881,7 @@ finish_function (int flags)\n   --function_depth;\n \n   /* Clean up.  */\n-  if (! nested)\n-    /* Let the error reporting routines know that we're outside a\n-       function.  For a nested function, this value is used in\n-       cxx_pop_function_context and then reset via pop_function_context.  */\n-    current_function_decl = NULL_TREE;\n+  current_function_decl = NULL_TREE;\n \n   defer_mark_used_calls = false;\n   if (deferred_mark_used_calls)"}]}