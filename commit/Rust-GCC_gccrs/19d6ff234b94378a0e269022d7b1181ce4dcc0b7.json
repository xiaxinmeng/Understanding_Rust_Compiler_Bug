{"sha": "19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlkNmZmMjM0Yjk0Mzc4YTBlMjY5MDIyZDdiMTE4MWNlNGRjYzBiNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-04-22T22:04:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-22T22:04:02Z"}, "message": "c-parse.in (expr_no_commas): Verify we've an expr before calling C_SET_EXP_ORIGINAL_CODE.\n\n        * c-parse.in (expr_no_commas): Verify we've an expr before\n        calling C_SET_EXP_ORIGINAL_CODE.\n\nFrom-SVN: r26590", "tree": {"sha": "e97c6dc1cd26ceb0445f326cf93f611f9fd6d214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e97c6dc1cd26ceb0445f326cf93f611f9fd6d214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/comments", "author": null, "committer": null, "parents": [{"sha": "5ad9b85f9925802dc7b0cd399c8249a8141c4aa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad9b85f9925802dc7b0cd399c8249a8141c4aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ad9b85f9925802dc7b0cd399c8249a8141c4aa9"}], "stats": {"total": 644, "additions": 339, "deletions": 305}, "files": [{"sha": "031dbafcfd8b6277774173830552fdeb5c728dbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "patch": "@@ -1,3 +1,8 @@\n+Sat Apr 24 17:26:43 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* c-parse.in (expr_no_commas): Verify we've an expr before\n+\tcalling C_SET_EXP_ORIGINAL_CODE.\n+\n Thu Apr 22 22:22:15 EDT 1999  John Wehle  (john@feith.com)\n \n \t* toplev.c (rest_of_compilation): Always set"}, {"sha": "c12dc182bb85ea48e928b2ec96abed8eab4334e2", "filename": "gcc/c-parse.c", "status": "modified", "additions": 306, "deletions": 297, "changes": 603, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "patch": "@@ -365,39 +365,39 @@ static const short yyrline[] = { 0,\n    445,   448,   451,   454,   456,   460,   464,   468,   470,   473,\n    477,   504,   506,   508,   510,   512,   514,   516,   518,   520,\n    522,   524,   526,   528,   530,   534,   536,   540,   542,   545,\n-   549,   551,   558,   561,   564,   570,   669,   670,   672,   678,\n-   680,   694,   717,   719,   721,   725,   731,   733,   738,   740,\n-   745,   747,   748,   758,   763,   765,   766,   767,   774,   780,\n-   785,   788,   796,   801,   803,   804,   805,   812,   823,   827,\n-   833,   838,   843,   848,   850,   852,   861,   864,   868,   870,\n-   872,   877,   881,   884,   888,   891,   893,   905,   908,   910,\n-   912,   916,   920,   922,   925,   938,   941,   945,   947,   955,\n-   956,   957,   961,   963,   969,   970,   971,   974,   976,   979,\n-   981,   984,   987,   993,  1000,  1002,  1009,  1016,  1019,  1026,\n-  1029,  1033,  1036,  1040,  1045,  1048,  1052,  1055,  1057,  1059,\n-  1061,  1068,  1070,  1071,  1072,  1077,  1079,  1084,  1092,  1097,\n-  1101,  1104,  1106,  1111,  1113,  1114,  1117,  1117,  1120,  1123,\n-  1125,  1127,  1130,  1132,  1135,  1141,  1143,  1147,  1158,  1166,\n-  1170,  1181,  1189,  1196,  1198,  1203,  1206,  1211,  1213,  1215,\n-  1222,  1224,  1232,  1238,  1243,  1245,  1247,  1254,  1256,  1262,\n-  1268,  1270,  1272,  1277,  1279,  1286,  1288,  1291,  1294,  1298,\n-  1301,  1305,  1308,  1312,  1317,  1319,  1323,  1325,  1327,  1329,\n-  1333,  1335,  1338,  1341,  1344,  1347,  1351,  1353,  1356,  1358,\n-  1363,  1366,  1371,  1373,  1375,  1389,  1396,  1401,  1407,  1412,\n-  1414,  1419,  1421,  1425,  1429,  1433,  1443,  1445,  1450,  1455,\n-  1458,  1462,  1465,  1469,  1472,  1475,  1478,  1482,  1485,  1489,\n-  1493,  1495,  1497,  1499,  1501,  1503,  1505,  1507,  1517,  1525,\n-  1527,  1529,  1533,  1535,  1538,  1541,  1552,  1554,  1559,  1561,\n-  1564,  1578,  1581,  1584,  1586,  1588,  1596,  1604,  1615,  1620,\n-  1623,  1637,  1646,  1650,  1654,  1658,  1664,  1668,  1673,  1676,\n-  1681,  1684,  1685,  1702,  1707,  1710,  1722,  1724,  1734,  1744,\n-  1745,  1753,  1756,  1768,  1772,  1789,  1799,  1808,  1813,  1818,\n-  1823,  1827,  1831,  1842,  1849,  1856,  1863,  1874,  1880,  1883,\n-  1888,  1911,  1945,  1976,  2007,  2022,  2036,  2040,  2044,  2047,\n-  2052,  2054,  2057,  2059,  2063,  2068,  2071,  2077,  2082,  2087,\n-  2089,  2098,  2099,  2105,  2107,  2117,  2119,  2123,  2126,  2132,\n-  2142,  2151,  2160,  2170,  2184,  2189,  2194,  2196,  2205,  2208,\n-  2213,  2216,  2220\n+   549,   551,   558,   561,   569,   580,   679,   680,   682,   688,\n+   690,   704,   727,   729,   731,   735,   741,   743,   748,   750,\n+   755,   757,   758,   768,   773,   775,   776,   777,   784,   790,\n+   795,   798,   806,   811,   813,   814,   815,   822,   833,   837,\n+   843,   848,   853,   858,   860,   862,   871,   874,   878,   880,\n+   882,   887,   891,   894,   898,   901,   903,   915,   918,   920,\n+   922,   926,   930,   932,   935,   948,   951,   955,   957,   965,\n+   966,   967,   971,   973,   979,   980,   981,   984,   986,   989,\n+   991,   994,   997,  1003,  1010,  1012,  1019,  1026,  1029,  1036,\n+  1039,  1043,  1046,  1050,  1055,  1058,  1062,  1065,  1067,  1069,\n+  1071,  1078,  1080,  1081,  1082,  1087,  1089,  1094,  1102,  1107,\n+  1111,  1114,  1116,  1121,  1123,  1124,  1127,  1127,  1130,  1133,\n+  1135,  1137,  1140,  1142,  1145,  1151,  1153,  1157,  1168,  1176,\n+  1180,  1191,  1199,  1206,  1208,  1213,  1216,  1221,  1223,  1225,\n+  1232,  1234,  1242,  1248,  1253,  1255,  1257,  1264,  1266,  1272,\n+  1278,  1280,  1282,  1287,  1289,  1296,  1298,  1301,  1304,  1308,\n+  1311,  1315,  1318,  1322,  1327,  1329,  1333,  1335,  1337,  1339,\n+  1343,  1345,  1348,  1351,  1354,  1357,  1361,  1363,  1366,  1368,\n+  1373,  1376,  1381,  1383,  1385,  1399,  1406,  1411,  1417,  1422,\n+  1424,  1429,  1431,  1435,  1439,  1443,  1453,  1455,  1460,  1465,\n+  1468,  1472,  1475,  1479,  1482,  1485,  1488,  1492,  1495,  1499,\n+  1503,  1505,  1507,  1509,  1511,  1513,  1515,  1517,  1527,  1535,\n+  1537,  1539,  1543,  1545,  1548,  1551,  1562,  1564,  1569,  1571,\n+  1574,  1588,  1591,  1594,  1596,  1598,  1606,  1614,  1625,  1630,\n+  1633,  1647,  1656,  1660,  1664,  1668,  1674,  1678,  1683,  1686,\n+  1691,  1694,  1695,  1712,  1717,  1720,  1732,  1734,  1744,  1754,\n+  1755,  1763,  1766,  1778,  1782,  1799,  1809,  1818,  1823,  1828,\n+  1833,  1837,  1841,  1852,  1859,  1866,  1873,  1884,  1890,  1893,\n+  1898,  1921,  1955,  1986,  2017,  2032,  2046,  2050,  2054,  2057,\n+  2062,  2064,  2067,  2069,  2073,  2078,  2081,  2087,  2092,  2097,\n+  2099,  2108,  2109,  2115,  2117,  2127,  2129,  2133,  2136,  2142,\n+  2152,  2161,  2170,  2180,  2194,  2199,  2204,  2206,  2215,  2218,\n+  2223,  2226,  2230\n };\n #endif\n \n@@ -1197,7 +1197,7 @@ static const short yycheck[] = {    38,\n     43,    44,    45,    46,    47,    48,    49,    50,    51,    52\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/cygnus/gnupro-98r2/share/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1214,8 +1214,7 @@ static const short yycheck[] = {    38,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n@@ -1391,7 +1390,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/cygnus/gnupro-98r2/share/bison.simple\"\n+#line 196 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2100,17 +2099,27 @@ case 83:\n     break;}\n case 84:\n #line 562 \"c-parse.y\"\n-{ yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n-\t\t  C_SET_EXP_ORIGINAL_CODE (yyval.ttype, MODIFY_EXPR); ;\n+{ char class;\n+\t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n+\t\t  class = TREE_CODE_CLASS (TREE_CODE (yyval.ttype));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE (yyval.ttype, MODIFY_EXPR);\n+\t\t;\n     break;}\n case 85:\n-#line 565 \"c-parse.y\"\n-{ yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n+#line 570 \"c-parse.y\"\n+{ char class;\n+\t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n-\t\t  C_SET_EXP_ORIGINAL_CODE (yyval.ttype, ERROR_MARK); ;\n+\t\t  class = TREE_CODE_CLASS (TREE_CODE (yyval.ttype));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE (yyval.ttype, ERROR_MARK);\n+\t\t;\n     break;}\n case 86:\n-#line 572 \"c-parse.y\"\n+#line 582 \"c-parse.y\"\n {\n \t\t  yyval.ttype = lastiddecl;\n \t\t  if (!yyval.ttype || yyval.ttype == error_mark_node)\n@@ -2210,23 +2219,23 @@ case 86:\n \t\t;\n     break;}\n case 88:\n-#line 671 \"c-parse.y\"\n+#line 681 \"c-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 89:\n-#line 673 \"c-parse.y\"\n+#line 683 \"c-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 90:\n-#line 679 \"c-parse.y\"\n+#line 689 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 91:\n-#line 681 \"c-parse.y\"\n+#line 691 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -2242,7 +2251,7 @@ case 91:\n \t\t  yyval.ttype = expand_start_stmt_expr (); ;\n     break;}\n case 92:\n-#line 695 \"c-parse.y\"\n+#line 705 \"c-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2267,78 +2276,78 @@ case 92:\n \t\t;\n     break;}\n case 93:\n-#line 718 \"c-parse.y\"\n+#line 728 \"c-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 94:\n-#line 720 \"c-parse.y\"\n+#line 730 \"c-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 95:\n-#line 722 \"c-parse.y\"\n+#line 732 \"c-parse.y\"\n {\n \t\t    yyval.ttype = build_component_ref (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 96:\n-#line 726 \"c-parse.y\"\n+#line 736 \"c-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n                     yyval.ttype = build_component_ref (expr, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 97:\n-#line 732 \"c-parse.y\"\n+#line 742 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 98:\n-#line 734 \"c-parse.y\"\n+#line 744 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 100:\n-#line 741 \"c-parse.y\"\n+#line 751 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 103:\n-#line 750 \"c-parse.y\"\n+#line 760 \"c-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 104:\n-#line 760 \"c-parse.y\"\n+#line 770 \"c-parse.y\"\n { ;\n     break;}\n case 109:\n-#line 776 \"c-parse.y\"\n+#line 786 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 110:\n-#line 781 \"c-parse.y\"\n+#line 791 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 111:\n-#line 786 \"c-parse.y\"\n+#line 796 \"c-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 112:\n-#line 789 \"c-parse.y\"\n+#line 799 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 113:\n-#line 798 \"c-parse.y\"\n+#line 808 \"c-parse.y\"\n { ;\n     break;}\n case 118:\n-#line 813 \"c-parse.y\"\n+#line 823 \"c-parse.y\"\n { yyval.itype = suspend_momentary ();\n \t\t  pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n@@ -2348,270 +2357,270 @@ case 118:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 119:\n-#line 824 \"c-parse.y\"\n+#line 834 \"c-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 120:\n-#line 829 \"c-parse.y\"\n+#line 839 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 121:\n-#line 834 \"c-parse.y\"\n+#line 844 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 122:\n-#line 839 \"c-parse.y\"\n+#line 849 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 123:\n-#line 844 \"c-parse.y\"\n+#line 854 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 124:\n-#line 849 \"c-parse.y\"\n+#line 859 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 125:\n-#line 851 \"c-parse.y\"\n+#line 861 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 126:\n-#line 853 \"c-parse.y\"\n+#line 863 \"c-parse.y\"\n { pedantic = yyvsp[-1].itype; ;\n     break;}\n case 127:\n-#line 863 \"c-parse.y\"\n+#line 873 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 128:\n-#line 865 \"c-parse.y\"\n+#line 875 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 129:\n-#line 869 \"c-parse.y\"\n+#line 879 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 130:\n-#line 871 \"c-parse.y\"\n+#line 881 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 131:\n-#line 873 \"c-parse.y\"\n+#line 883 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 132:\n-#line 878 \"c-parse.y\"\n+#line 888 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 133:\n-#line 883 \"c-parse.y\"\n+#line 893 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 134:\n-#line 885 \"c-parse.y\"\n+#line 895 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 135:\n-#line 890 \"c-parse.y\"\n+#line 900 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 136:\n-#line 892 \"c-parse.y\"\n+#line 902 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 137:\n-#line 894 \"c-parse.y\"\n+#line 904 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 907 \"c-parse.y\"\n+#line 917 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 139:\n-#line 909 \"c-parse.y\"\n+#line 919 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 140:\n-#line 911 \"c-parse.y\"\n+#line 921 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 141:\n-#line 913 \"c-parse.y\"\n+#line 923 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 918 \"c-parse.y\"\n+#line 928 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 143:\n-#line 921 \"c-parse.y\"\n+#line 931 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 144:\n-#line 923 \"c-parse.y\"\n+#line 933 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 145:\n-#line 926 \"c-parse.y\"\n+#line 936 \"c-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 146:\n-#line 940 \"c-parse.y\"\n+#line 950 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 147:\n-#line 942 \"c-parse.y\"\n+#line 952 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 148:\n-#line 946 \"c-parse.y\"\n+#line 956 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 149:\n-#line 948 \"c-parse.y\"\n+#line 958 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 152:\n-#line 958 \"c-parse.y\"\n+#line 968 \"c-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 153:\n-#line 962 \"c-parse.y\"\n+#line 972 \"c-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 154:\n-#line 964 \"c-parse.y\"\n+#line 974 \"c-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 162:\n-#line 986 \"c-parse.y\"\n+#line 996 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 163:\n-#line 988 \"c-parse.y\"\n+#line 998 \"c-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 164:\n-#line 995 \"c-parse.y\"\n+#line 1005 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 165:\n-#line 1000 \"c-parse.y\"\n+#line 1010 \"c-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 166:\n-#line 1003 \"c-parse.y\"\n+#line 1013 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 167:\n-#line 1011 \"c-parse.y\"\n+#line 1021 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 168:\n-#line 1016 \"c-parse.y\"\n+#line 1026 \"c-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 169:\n-#line 1020 \"c-parse.y\"\n+#line 1030 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 170:\n-#line 1028 \"c-parse.y\"\n+#line 1038 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1030 \"c-parse.y\"\n+#line 1040 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 172:\n-#line 1035 \"c-parse.y\"\n+#line 1045 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 173:\n-#line 1037 \"c-parse.y\"\n+#line 1047 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 174:\n-#line 1042 \"c-parse.y\"\n+#line 1052 \"c-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 175:\n-#line 1047 \"c-parse.y\"\n+#line 1057 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 176:\n-#line 1049 \"c-parse.y\"\n+#line 1059 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 177:\n-#line 1054 \"c-parse.y\"\n+#line 1064 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1056 \"c-parse.y\"\n+#line 1066 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 179:\n-#line 1058 \"c-parse.y\"\n+#line 1068 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 180:\n-#line 1060 \"c-parse.y\"\n+#line 1070 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 181:\n-#line 1062 \"c-parse.y\"\n+#line 1072 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 187:\n-#line 1080 \"c-parse.y\"\n+#line 1090 \"c-parse.y\"\n { really_start_incremental_init (NULL_TREE);\n \t\t  /* Note that the call to clear_momentary\n \t\t     is in process_init_element.  */\n \t\t  push_momentary (); ;\n     break;}\n case 188:\n-#line 1085 \"c-parse.y\"\n+#line 1095 \"c-parse.y\"\n { yyval.ttype = pop_init_level (0);\n \t\t  if (yyval.ttype == error_mark_node\n \t\t      && ! (yychar == STRING || yychar == CONSTANT))\n@@ -2620,44 +2629,44 @@ case 188:\n \t\t    pop_momentary_nofree (); ;\n     break;}\n case 189:\n-#line 1093 \"c-parse.y\"\n+#line 1103 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 190:\n-#line 1099 \"c-parse.y\"\n+#line 1109 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 196:\n-#line 1115 \"c-parse.y\"\n+#line 1125 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 199:\n-#line 1122 \"c-parse.y\"\n+#line 1132 \"c-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 200:\n-#line 1124 \"c-parse.y\"\n+#line 1134 \"c-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 201:\n-#line 1126 \"c-parse.y\"\n+#line 1136 \"c-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 205:\n-#line 1137 \"c-parse.y\"\n+#line 1147 \"c-parse.y\"\n { set_init_label (yyvsp[0].ttype); ;\n     break;}\n case 206:\n-#line 1142 \"c-parse.y\"\n+#line 1152 \"c-parse.y\"\n { set_init_index (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 207:\n-#line 1144 \"c-parse.y\"\n+#line 1154 \"c-parse.y\"\n { set_init_index (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 208:\n-#line 1149 \"c-parse.y\"\n+#line 1159 \"c-parse.y\"\n { push_c_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n@@ -2668,16 +2677,16 @@ case 208:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 209:\n-#line 1158 \"c-parse.y\"\n+#line 1168 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 210:\n-#line 1166 \"c-parse.y\"\n+#line 1176 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_c_function_context (); ;\n     break;}\n case 211:\n-#line 1172 \"c-parse.y\"\n+#line 1182 \"c-parse.y\"\n { push_c_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n@@ -2688,367 +2697,367 @@ case 211:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 212:\n-#line 1181 \"c-parse.y\"\n+#line 1191 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 213:\n-#line 1189 \"c-parse.y\"\n+#line 1199 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_c_function_context (); ;\n     break;}\n case 216:\n-#line 1205 \"c-parse.y\"\n+#line 1215 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 217:\n-#line 1207 \"c-parse.y\"\n+#line 1217 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 218:\n-#line 1212 \"c-parse.y\"\n+#line 1222 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 219:\n-#line 1214 \"c-parse.y\"\n+#line 1224 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 220:\n-#line 1216 \"c-parse.y\"\n+#line 1226 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 221:\n-#line 1223 \"c-parse.y\"\n+#line 1233 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 223:\n-#line 1234 \"c-parse.y\"\n+#line 1244 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 224:\n-#line 1239 \"c-parse.y\"\n+#line 1249 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 225:\n-#line 1244 \"c-parse.y\"\n+#line 1254 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 226:\n-#line 1246 \"c-parse.y\"\n+#line 1256 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 227:\n-#line 1248 \"c-parse.y\"\n+#line 1258 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 228:\n-#line 1255 \"c-parse.y\"\n+#line 1265 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 230:\n-#line 1264 \"c-parse.y\"\n+#line 1274 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 231:\n-#line 1269 \"c-parse.y\"\n+#line 1279 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 232:\n-#line 1271 \"c-parse.y\"\n+#line 1281 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 233:\n-#line 1273 \"c-parse.y\"\n+#line 1283 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 234:\n-#line 1278 \"c-parse.y\"\n+#line 1288 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 235:\n-#line 1280 \"c-parse.y\"\n+#line 1290 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 236:\n-#line 1287 \"c-parse.y\"\n+#line 1297 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 238:\n-#line 1293 \"c-parse.y\"\n+#line 1303 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 239:\n-#line 1295 \"c-parse.y\"\n+#line 1305 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 240:\n-#line 1300 \"c-parse.y\"\n+#line 1310 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 241:\n-#line 1302 \"c-parse.y\"\n+#line 1312 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 242:\n-#line 1307 \"c-parse.y\"\n+#line 1317 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 243:\n-#line 1309 \"c-parse.y\"\n+#line 1319 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 244:\n-#line 1314 \"c-parse.y\"\n+#line 1324 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 245:\n-#line 1318 \"c-parse.y\"\n+#line 1328 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 246:\n-#line 1320 \"c-parse.y\"\n+#line 1330 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 247:\n-#line 1324 \"c-parse.y\"\n+#line 1334 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 248:\n-#line 1326 \"c-parse.y\"\n+#line 1336 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 249:\n-#line 1328 \"c-parse.y\"\n+#line 1338 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 250:\n-#line 1330 \"c-parse.y\"\n+#line 1340 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 251:\n-#line 1334 \"c-parse.y\"\n+#line 1344 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 252:\n-#line 1336 \"c-parse.y\"\n+#line 1346 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 253:\n-#line 1339 \"c-parse.y\"\n+#line 1349 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-7].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 254:\n-#line 1342 \"c-parse.y\"\n+#line 1352 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 255:\n-#line 1345 \"c-parse.y\"\n+#line 1355 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-6].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 256:\n-#line 1348 \"c-parse.y\"\n+#line 1358 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 260:\n-#line 1359 \"c-parse.y\"\n+#line 1369 \"c-parse.y\"\n { if (pedantic && ! flag_isoc9x)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 261:\n-#line 1365 \"c-parse.y\"\n+#line 1375 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 262:\n-#line 1367 \"c-parse.y\"\n+#line 1377 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 263:\n-#line 1372 \"c-parse.y\"\n+#line 1382 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 264:\n-#line 1374 \"c-parse.y\"\n+#line 1384 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 265:\n-#line 1376 \"c-parse.y\"\n+#line 1386 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 266:\n-#line 1391 \"c-parse.y\"\n+#line 1401 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 267:\n-#line 1397 \"c-parse.y\"\n+#line 1407 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 268:\n-#line 1402 \"c-parse.y\"\n+#line 1412 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 269:\n-#line 1408 \"c-parse.y\"\n+#line 1418 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 270:\n-#line 1413 \"c-parse.y\"\n+#line 1423 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 271:\n-#line 1415 \"c-parse.y\"\n+#line 1425 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 273:\n-#line 1422 \"c-parse.y\"\n+#line 1432 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 274:\n-#line 1427 \"c-parse.y\"\n+#line 1437 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 275:\n-#line 1431 \"c-parse.y\"\n+#line 1441 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 276:\n-#line 1434 \"c-parse.y\"\n+#line 1444 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 278:\n-#line 1446 \"c-parse.y\"\n+#line 1456 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 279:\n-#line 1451 \"c-parse.y\"\n+#line 1461 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 280:\n-#line 1457 \"c-parse.y\"\n+#line 1467 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 281:\n-#line 1459 \"c-parse.y\"\n+#line 1469 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 282:\n-#line 1464 \"c-parse.y\"\n+#line 1474 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 283:\n-#line 1466 \"c-parse.y\"\n+#line 1476 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1471 \"c-parse.y\"\n+#line 1481 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 286:\n-#line 1477 \"c-parse.y\"\n+#line 1487 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 287:\n-#line 1479 \"c-parse.y\"\n+#line 1489 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 288:\n-#line 1484 \"c-parse.y\"\n+#line 1494 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 289:\n-#line 1486 \"c-parse.y\"\n+#line 1496 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 290:\n-#line 1491 \"c-parse.y\"\n+#line 1501 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 291:\n-#line 1494 \"c-parse.y\"\n+#line 1504 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 292:\n-#line 1496 \"c-parse.y\"\n+#line 1506 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 293:\n-#line 1498 \"c-parse.y\"\n+#line 1508 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 294:\n-#line 1500 \"c-parse.y\"\n+#line 1510 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 295:\n-#line 1502 \"c-parse.y\"\n+#line 1512 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 296:\n-#line 1504 \"c-parse.y\"\n+#line 1514 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 297:\n-#line 1506 \"c-parse.y\"\n+#line 1516 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 298:\n-#line 1508 \"c-parse.y\"\n+#line 1518 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 299:\n-#line 1519 \"c-parse.y\"\n+#line 1529 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 301:\n-#line 1528 \"c-parse.y\"\n+#line 1538 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 302:\n-#line 1530 \"c-parse.y\"\n+#line 1540 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 306:\n-#line 1542 \"c-parse.y\"\n+#line 1552 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -3057,12 +3066,12 @@ case 306:\n \t\t;\n     break;}\n case 308:\n-#line 1555 \"c-parse.y\"\n+#line 1565 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 311:\n-#line 1566 \"c-parse.y\"\n+#line 1576 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3073,19 +3082,19 @@ case 311:\n \t\t;\n     break;}\n case 312:\n-#line 1580 \"c-parse.y\"\n+#line 1590 \"c-parse.y\"\n {;\n     break;}\n case 314:\n-#line 1584 \"c-parse.y\"\n+#line 1594 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 315:\n-#line 1587 \"c-parse.y\"\n+#line 1597 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 316:\n-#line 1589 \"c-parse.y\"\n+#line 1599 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0);\n@@ -3095,7 +3104,7 @@ case 316:\n \t\t    pop_momentary (); ;\n     break;}\n case 317:\n-#line 1597 \"c-parse.y\"\n+#line 1607 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3105,7 +3114,7 @@ case 317:\n \t\t    pop_momentary (); ;\n     break;}\n case 318:\n-#line 1605 \"c-parse.y\"\n+#line 1615 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3115,7 +3124,7 @@ case 318:\n \t\t    pop_momentary (); ;\n     break;}\n case 321:\n-#line 1625 \"c-parse.y\"\n+#line 1635 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3125,7 +3134,7 @@ case 321:\n \t\t  position_after_white_space (); ;\n     break;}\n case 322:\n-#line 1639 \"c-parse.y\"\n+#line 1649 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3135,43 +3144,43 @@ case 322:\n \t\t  position_after_white_space (); ;\n     break;}\n case 323:\n-#line 1647 \"c-parse.y\"\n+#line 1657 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 324:\n-#line 1651 \"c-parse.y\"\n+#line 1661 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 325:\n-#line 1655 \"c-parse.y\"\n+#line 1665 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 326:\n-#line 1660 \"c-parse.y\"\n+#line 1670 \"c-parse.y\"\n { ;\n     break;}\n case 327:\n-#line 1665 \"c-parse.y\"\n+#line 1675 \"c-parse.y\"\n { ;\n     break;}\n case 328:\n-#line 1670 \"c-parse.y\"\n+#line 1680 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 329:\n-#line 1675 \"c-parse.y\"\n+#line 1685 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 330:\n-#line 1677 \"c-parse.y\"\n+#line 1687 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 331:\n-#line 1683 \"c-parse.y\"\n+#line 1693 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 333:\n-#line 1686 \"c-parse.y\"\n+#line 1696 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3190,19 +3199,19 @@ case 333:\n \t\t  clear_momentary (); ;\n     break;}\n case 334:\n-#line 1703 \"c-parse.y\"\n+#line 1713 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 335:\n-#line 1707 \"c-parse.y\"\n+#line 1717 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 336:\n-#line 1711 \"c-parse.y\"\n+#line 1721 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3213,11 +3222,11 @@ case 336:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 337:\n-#line 1723 \"c-parse.y\"\n+#line 1733 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 338:\n-#line 1725 \"c-parse.y\"\n+#line 1735 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3229,7 +3238,7 @@ case 338:\n \t\t  emit_nop (); ;\n     break;}\n case 339:\n-#line 1735 \"c-parse.y\"\n+#line 1745 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3240,24 +3249,24 @@ case 339:\n \t\t  position_after_white_space (); ;\n     break;}\n case 340:\n-#line 1744 \"c-parse.y\"\n+#line 1754 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 341:\n-#line 1747 \"c-parse.y\"\n+#line 1757 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 342:\n-#line 1754 \"c-parse.y\"\n+#line 1764 \"c-parse.y\"\n { expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 343:\n-#line 1758 \"c-parse.y\"\n+#line 1768 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3270,12 +3279,12 @@ case 343:\n \t\t;\n     break;}\n case 344:\n-#line 1770 \"c-parse.y\"\n+#line 1780 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 345:\n-#line 1773 \"c-parse.y\"\n+#line 1783 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3293,7 +3302,7 @@ case 345:\n \t\t  position_after_white_space (); ;\n     break;}\n case 346:\n-#line 1789 \"c-parse.y\"\n+#line 1799 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3306,7 +3315,7 @@ case 346:\n \t\t  expand_end_loop (); ;\n     break;}\n case 347:\n-#line 1800 \"c-parse.y\"\n+#line 1810 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n@@ -3316,41 +3325,41 @@ case 347:\n \t\t  position_after_white_space (); ;\n     break;}\n case 348:\n-#line 1808 \"c-parse.y\"\n+#line 1818 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); ;\n     break;}\n case 349:\n-#line 1814 \"c-parse.y\"\n+#line 1824 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 350:\n-#line 1819 \"c-parse.y\"\n+#line 1829 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 351:\n-#line 1824 \"c-parse.y\"\n+#line 1834 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 352:\n-#line 1828 \"c-parse.y\"\n+#line 1838 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 353:\n-#line 1832 \"c-parse.y\"\n+#line 1842 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3362,31 +3371,31 @@ case 353:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 354:\n-#line 1843 \"c-parse.y\"\n+#line 1853 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 355:\n-#line 1850 \"c-parse.y\"\n+#line 1860 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 356:\n-#line 1858 \"c-parse.y\"\n+#line 1868 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 357:\n-#line 1864 \"c-parse.y\"\n+#line 1874 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3399,15 +3408,15 @@ case 357:\n \t\t;\n     break;}\n case 358:\n-#line 1875 \"c-parse.y\"\n+#line 1885 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 361:\n-#line 1890 \"c-parse.y\"\n+#line 1900 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3430,14 +3439,14 @@ case 361:\n \t  ;\n     break;}\n case 362:\n-#line 1911 \"c-parse.y\"\n+#line 1921 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 363:\n-#line 1946 \"c-parse.y\"\n+#line 1956 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3470,7 +3479,7 @@ case 363:\n \t\t  position_after_white_space (); ;\n     break;}\n case 364:\n-#line 1977 \"c-parse.y\"\n+#line 1987 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3503,7 +3512,7 @@ case 364:\n \t\t  position_after_white_space (); ;\n     break;}\n case 365:\n-#line 2008 \"c-parse.y\"\n+#line 2018 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3520,7 +3529,7 @@ case 365:\n \t\t  position_after_white_space (); ;\n     break;}\n case 366:\n-#line 2023 \"c-parse.y\"\n+#line 2033 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3532,52 +3541,52 @@ case 366:\n \t\t  position_after_white_space (); ;\n     break;}\n case 367:\n-#line 2038 \"c-parse.y\"\n+#line 2048 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 368:\n-#line 2041 \"c-parse.y\"\n+#line 2051 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 369:\n-#line 2046 \"c-parse.y\"\n+#line 2056 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 371:\n-#line 2053 \"c-parse.y\"\n+#line 2063 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 374:\n-#line 2060 \"c-parse.y\"\n+#line 2070 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 375:\n-#line 2065 \"c-parse.y\"\n+#line 2075 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 376:\n-#line 2070 \"c-parse.y\"\n+#line 2080 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 377:\n-#line 2072 \"c-parse.y\"\n+#line 2082 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 378:\n-#line 2078 \"c-parse.y\"\n+#line 2088 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 379:\n-#line 2082 \"c-parse.y\"\n+#line 2092 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 381:\n-#line 2090 \"c-parse.y\"\n+#line 2100 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3587,19 +3596,19 @@ case 381:\n \t\t  clear_parm_order (); ;\n     break;}\n case 382:\n-#line 2098 \"c-parse.y\"\n+#line 2108 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 383:\n-#line 2100 \"c-parse.y\"\n+#line 2110 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 384:\n-#line 2106 \"c-parse.y\"\n+#line 2116 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 385:\n-#line 2108 \"c-parse.y\"\n+#line 2118 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3611,23 +3620,23 @@ case 385:\n \t\t;\n     break;}\n case 386:\n-#line 2118 \"c-parse.y\"\n+#line 2128 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 387:\n-#line 2120 \"c-parse.y\"\n+#line 2130 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 388:\n-#line 2125 \"c-parse.y\"\n+#line 2135 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 389:\n-#line 2127 \"c-parse.y\"\n+#line 2137 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 390:\n-#line 2134 \"c-parse.y\"\n+#line 2144 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3638,7 +3647,7 @@ case 390:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 391:\n-#line 2143 \"c-parse.y\"\n+#line 2153 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3649,7 +3658,7 @@ case 391:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 392:\n-#line 2152 \"c-parse.y\"\n+#line 2162 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3660,7 +3669,7 @@ case 392:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 393:\n-#line 2161 \"c-parse.y\"\n+#line 2171 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3671,7 +3680,7 @@ case 393:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 394:\n-#line 2171 \"c-parse.y\"\n+#line 2181 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3682,49 +3691,49 @@ case 394:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 395:\n-#line 2185 \"c-parse.y\"\n+#line 2195 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 396:\n-#line 2189 \"c-parse.y\"\n+#line 2199 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 398:\n-#line 2197 \"c-parse.y\"\n+#line 2207 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 399:\n-#line 2207 \"c-parse.y\"\n+#line 2217 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 400:\n-#line 2209 \"c-parse.y\"\n+#line 2219 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 401:\n-#line 2215 \"c-parse.y\"\n+#line 2225 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 402:\n-#line 2217 \"c-parse.y\"\n+#line 2227 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 403:\n-#line 2222 \"c-parse.y\"\n+#line 2232 \"c-parse.y\"\n { yyval.itype = pedantic;\n \t\t  pedantic = 0; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/cygnus/gnupro-98r2/share/bison.simple\"\n+#line 498 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -3920,5 +3929,5 @@ case 403:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2226 \"c-parse.y\"\n+#line 2236 \"c-parse.y\"\n "}, {"sha": "c8ff12de753094ee831d21fd0ab78b602ed50882", "filename": "gcc/c-parse.in", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "patch": "@@ -604,12 +604,22 @@ expr_no_commas:\n \t\t{ skip_evaluation -= $1 == boolean_true_node;\n \t\t  $$ = build_conditional_expr ($1, $<ttype>2, $5); }\n \t| expr_no_commas '=' expr_no_commas\n-\t\t{ $$ = build_modify_expr ($1, NOP_EXPR, $3);\n-\t\t  C_SET_EXP_ORIGINAL_CODE ($$, MODIFY_EXPR); }\n+\t\t{ char class;\n+\t\t  $$ = build_modify_expr ($1, NOP_EXPR, $3);\n+\t\t  class = TREE_CODE_CLASS (TREE_CODE ($$));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE ($$, MODIFY_EXPR);\n+\t\t}\n \t| expr_no_commas ASSIGN expr_no_commas\n-\t\t{ $$ = build_modify_expr ($1, $2, $3);\n+\t\t{ char class;\n+\t\t  $$ = build_modify_expr ($1, $2, $3);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n-\t\t  C_SET_EXP_ORIGINAL_CODE ($$, ERROR_MARK); }\n+\t\t  class = TREE_CODE_CLASS (TREE_CODE ($$));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE ($$, ERROR_MARK);\n+\t\t}\n \t;\n \n primary:"}, {"sha": "59c2be93bad2faf3b98a639237e5da5750f073b0", "filename": "gcc/c-parse.y", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19d6ff234b94378a0e269022d7b1181ce4dcc0b7/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=19d6ff234b94378a0e269022d7b1181ce4dcc0b7", "patch": "@@ -559,12 +559,22 @@ expr_no_commas:\n \t\t{ skip_evaluation -= $1 == boolean_true_node;\n \t\t  $$ = build_conditional_expr ($1, $<ttype>2, $5); }\n \t| expr_no_commas '=' expr_no_commas\n-\t\t{ $$ = build_modify_expr ($1, NOP_EXPR, $3);\n-\t\t  C_SET_EXP_ORIGINAL_CODE ($$, MODIFY_EXPR); }\n+\t\t{ char class;\n+\t\t  $$ = build_modify_expr ($1, NOP_EXPR, $3);\n+\t\t  class = TREE_CODE_CLASS (TREE_CODE ($$));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE ($$, MODIFY_EXPR);\n+\t\t}\n \t| expr_no_commas ASSIGN expr_no_commas\n-\t\t{ $$ = build_modify_expr ($1, $2, $3);\n+\t\t{ char class;\n+\t\t  $$ = build_modify_expr ($1, $2, $3);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n-\t\t  C_SET_EXP_ORIGINAL_CODE ($$, ERROR_MARK); }\n+\t\t  class = TREE_CODE_CLASS (TREE_CODE ($$));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE ($$, ERROR_MARK);\n+\t\t}\n \t;\n \n primary:"}]}