{"sha": "78aaa514d54c9257dec1869e01aed679b983f46d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhYWE1MTRkNTRjOTI1N2RlYzE4NjllMDFhZWQ2NzliOTgzZjQ2ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-07-23T06:50:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-07-23T06:50:45Z"}, "message": "i386.c (ix86_avoid_lea_for_addr): Prevent zero-extended addresses here ...\n\n\t* config/i386/i386.c (ix86_avoid_lea_for_addr): Prevent zero-extended addresses here ...\n\t(ix86_avoid_lea_for_add): ... not here.\n\nFrom-SVN: r189768", "tree": {"sha": "c3051bc5d980a193c5247bc688c42119b2e8e4ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3051bc5d980a193c5247bc688c42119b2e8e4ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78aaa514d54c9257dec1869e01aed679b983f46d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aaa514d54c9257dec1869e01aed679b983f46d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78aaa514d54c9257dec1869e01aed679b983f46d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aaa514d54c9257dec1869e01aed679b983f46d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0abcd2ef510140d44653f6f4a4eb28db2306e3c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0abcd2ef510140d44653f6f4a4eb28db2306e3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0abcd2ef510140d44653f6f4a4eb28db2306e3c2"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "2b04ab700c4648346d3545d3e9ecb546e0fae559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aaa514d54c9257dec1869e01aed679b983f46d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aaa514d54c9257dec1869e01aed679b983f46d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78aaa514d54c9257dec1869e01aed679b983f46d", "patch": "@@ -24,7 +24,7 @@\n \t* config/i386/i386.c (ix86_decompose_address): Allow SImode subreg\n \tof an address.\n \t(ix86_print_operand_address): Handle SImode subreg of an address.\n-\t(ix86_avoid_lea_for_add): Reject zero-extended addresses for now.\n+\t(ix86_avoid_lea_for_addr): Reject zero-extended addresses for now.\n \n 2012-07-22  Hans-Peter Nilsson  <hp@axis.com>\n "}, {"sha": "06ef5dba3b13a6a2aad7b2c6585b4c1eef595051", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aaa514d54c9257dec1869e01aed679b983f46d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aaa514d54c9257dec1869e01aed679b983f46d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=78aaa514d54c9257dec1869e01aed679b983f46d", "patch": "@@ -16864,11 +16864,6 @@ ix86_avoid_lea_for_add (rtx insn, rtx operands[])\n   unsigned int regno1 = true_regnum (operands[1]);\n   unsigned int regno2 = true_regnum (operands[2]);\n \n-  /* FIXME: Handle zero-extended addresses.  */\n-  if (GET_CODE (operands[1]) == ZERO_EXTEND\n-      || GET_CODE (operands[1]) == AND)\n-    return false;\n-\n   /* Check if we need to optimize.  */\n   if (!TARGET_OPT_AGU || optimize_function_for_size_p (cfun))\n     return false;\n@@ -16921,6 +16916,11 @@ ix86_avoid_lea_for_addr (rtx insn, rtx operands[])\n   struct ix86_address parts;\n   int ok;\n \n+  /* FIXME: Handle zero-extended addresses.  */\n+  if (GET_CODE (operands[1]) == ZERO_EXTEND\n+      || GET_CODE (operands[1]) == AND)\n+    return false;\n+\n   /* Check we need to optimize.  */\n   if (!TARGET_OPT_AGU || optimize_function_for_size_p (cfun))\n     return false;"}, {"sha": "f559ff21536108cb196c10012b99036939ac966a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aaa514d54c9257dec1869e01aed679b983f46d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aaa514d54c9257dec1869e01aed679b983f46d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=78aaa514d54c9257dec1869e01aed679b983f46d", "patch": "@@ -5450,6 +5450,30 @@\n   DONE;\n })\n \f\n+(define_insn_and_split \"*lea<mode>\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(match_operand:SWI48 1 \"lea_address_operand\" \"p\"))]\n+  \"\"\n+{\n+  rtx addr = operands[1];\n+\n+  if (GET_CODE (addr) == SUBREG)\n+    return \"lea{l}\\t{%E1, %0|%0, %E1}\";\n+  else if (GET_CODE (addr) == ZERO_EXTEND\n+\t   || GET_CODE (addr) == AND)\n+    return \"lea{l}\\t{%E1, %k0|%k0, %E1}\";\n+  else \n+    return \"lea{<imodesuffix>}\\t{%E1, %0|%0, %E1}\";\n+}\n+  \"reload_completed && ix86_avoid_lea_for_addr (insn, operands)\"\n+  [(const_int 0)]\n+{\n+  ix86_split_lea_for_addr (operands, <MODE>mode);\n+  DONE;\n+}\n+  [(set_attr \"type\" \"lea\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\f\n ;; Add instructions\n \n (define_expand \"add<mode>3\"\n@@ -5508,30 +5532,6 @@\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"QI\")])\n \n-(define_insn_and_split \"*lea<mode>\"\n-  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n-\t(match_operand:SWI48 1 \"lea_address_operand\" \"p\"))]\n-  \"\"\n-{\n-  rtx addr = operands[1];\n-\n-  if (GET_CODE (addr) == SUBREG)\n-    return \"lea{l}\\t{%E1, %0|%0, %E1}\";\n-  else if (GET_CODE (addr) == ZERO_EXTEND\n-\t   || GET_CODE (addr) == AND)\n-    return \"lea{l}\\t{%E1, %k0|%k0, %E1}\";\n-  else \n-    return \"lea{<imodesuffix>}\\t{%E1, %0|%0, %E1}\";\n-}\n-  \"reload_completed && ix86_avoid_lea_for_addr (insn, operands)\"\n-  [(const_int 0)]\n-{\n-  ix86_split_lea_for_addr (operands, <MODE>mode);\n-  DONE;\n-}\n-  [(set_attr \"type\" \"lea\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_insn \"*add<mode>_1\"\n   [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=r,rm,r,r\")\n \t(plus:SWI48"}]}