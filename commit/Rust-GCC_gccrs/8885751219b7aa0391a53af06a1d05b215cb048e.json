{"sha": "8885751219b7aa0391a53af06a1d05b215cb048e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg4NTc1MTIxOWI3YWEwMzkxYTUzYWYwNmExZDA1YjIxNWNiMDQ4ZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-10-11T23:22:22Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-10-11T23:22:22Z"}, "message": "acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add EOVERFLOW for Tru64.\n\n\n\t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add EOVERFLOW for Tru64.\n\t* configure: Regenerate.\n\t* config/os/generic/error_constants.h: Guard.\n\t* testsuite/19_diagnostics/headers/system_error/\n\ttypes_std_c++0x.cc: Same.\n\nFrom-SVN: r129245", "tree": {"sha": "27adee2392f20a8de4cf439b42558a6e58c89e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27adee2392f20a8de4cf439b42558a6e58c89e08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8885751219b7aa0391a53af06a1d05b215cb048e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8885751219b7aa0391a53af06a1d05b215cb048e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8885751219b7aa0391a53af06a1d05b215cb048e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8885751219b7aa0391a53af06a1d05b215cb048e/comments", "author": null, "committer": null, "parents": [{"sha": "250d125cd3a406baba2b47de990b68650021c542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250d125cd3a406baba2b47de990b68650021c542", "html_url": "https://github.com/Rust-GCC/gccrs/commit/250d125cd3a406baba2b47de990b68650021c542"}], "stats": {"total": 92, "additions": 91, "deletions": 1}, "files": [{"sha": "56414255cc72e98c3889f07ee85c2d9958f2da33", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8885751219b7aa0391a53af06a1d05b215cb048e", "patch": "@@ -1,3 +1,11 @@\n+2007-10-11  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add EOVERFLOW for Tru64.\n+\t* configure: Regenerate.\n+\t* config/os/generic/error_constants.h: Guard.\n+\t* testsuite/19_diagnostics/headers/system_error/\n+\ttypes_std_c++0x.cc: Same.\n+\n 2007-10-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tConvert ext/hash_map, set to tr1/functional, tr1/unordered_map, set."}, {"sha": "2ca902fcd839c2dadb0d9afb1b48e7858ec70cb0", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=8885751219b7aa0391a53af06a1d05b215cb048e", "patch": "@@ -1410,6 +1410,16 @@ AC_DEFUN([GLIBCXX_CHECK_SYSTEM_ERROR], [\n   if test x\"$ac_system_error_11\" = x\"yes\"; then\n     AC_DEFINE(HAVE_ECANCELED, 1, [Define if ECANCELED exists.])\n   fi\n+\n+  AC_MSG_CHECKING([for EOVERFLOW])\n+  AC_CACHE_VAL(ac_system_error_12, [\n+  AC_TRY_COMPILE([#include <errno.h>], [ int i = EOVERFLOW; ],\n+             [ac_system_error_12=yes], [ac_system_error_12=no])\n+  ])\n+  AC_MSG_RESULT($ac_system_error_12)\n+  if test x\"$ac_system_error_12\" = x\"yes\"; then\n+    AC_DEFINE(HAVE_EOVERFLOW, 1, [Define if EOVERFLOW exists.])\n+  fi\n ])\n \n dnl"}, {"sha": "d3a9688a856975aef960c015652aae7b97675b3c", "filename": "libstdc++-v3/config/os/generic/error_constants.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h?ref=8885751219b7aa0391a53af06a1d05b215cb048e", "patch": "@@ -151,7 +151,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       too_many_files_open = \t\t\tEMFILE,\n       too_many_links = \t\t\t\tEMLINK,\n       too_many_synbolic_link_levels = \t\tELOOP,\n+\n+#ifdef _GLIBCXX_HAVE_EOVERFLOW\n       value_too_large = \t\t\tEOVERFLOW,\n+#endif\n+\n       wrong_protocol_type = \t\t\tEPROTOTYPE,\n       no_posix_equivalent = 1L << 16\n     };"}, {"sha": "05337f9f35451553ebdf99660b25ef8bb3673de7", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 65, "deletions": 1, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=8885751219b7aa0391a53af06a1d05b215cb048e", "patch": "@@ -17672,6 +17672,70 @@ _ACEOF\n \n   fi\n \n+  echo \"$as_me:$LINENO: checking for EOVERFLOW\" >&5\n+echo $ECHO_N \"checking for EOVERFLOW... $ECHO_C\" >&6\n+  if test \"${ac_system_error_12+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <errno.h>\n+int\n+main ()\n+{\n+ int i = EOVERFLOW;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_system_error_12=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_system_error_12=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+\n+  echo \"$as_me:$LINENO: result: $ac_system_error_12\" >&5\n+echo \"${ECHO_T}$ac_system_error_12\" >&6\n+  if test x\"$ac_system_error_12\" = x\"yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_EOVERFLOW 1\n+_ACEOF\n+\n+  fi\n+\n \n # No surprises, no surprises...\n \n@@ -17714,7 +17778,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 17717 \"configure\"\n+#line 17781 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int."}, {"sha": "356b5074ff7df30e9eeee26c537e5513a2f9d0f0", "filename": "libstdc++-v3/testsuite/19_diagnostics/headers/system_error/types_std_c++0x.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ftypes_std_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8885751219b7aa0391a53af06a1d05b215cb048e/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ftypes_std_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Ftypes_std_c%2B%2B0x.cc?ref=8885751219b7aa0391a53af06a1d05b215cb048e", "patch": "@@ -145,6 +145,10 @@ namespace gnu\n   using std::too_many_files_open; \n   using std::too_many_links; \t\n   using std::too_many_synbolic_link_levels; \n+\n+#ifdef _GLIBCXX_HAVE_EOVERFLOW\n   using std::value_too_large; \n+#endif\n+\n   using std::wrong_protocol_type;\n }"}]}