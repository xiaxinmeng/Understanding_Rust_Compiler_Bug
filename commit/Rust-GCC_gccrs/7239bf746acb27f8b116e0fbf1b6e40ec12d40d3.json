{"sha": "7239bf746acb27f8b116e0fbf1b6e40ec12d40d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIzOWJmNzQ2YWNiMjdmOGIxMTZlMGZiZjFiNmU0MGVjMTJkNDBkMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-11-22T21:04:27Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-11-22T21:04:27Z"}, "message": "re PR go/77910 (go: open zversion.go: no such file or directory)\n\n\tPR go/77910\n    cmd/go: don't check standard packages when using gccgo\n    \n    This copies https://golang.org/cl/33295 to libgo.\n    \n    This fixes GCC PR 77910.\n    \n    Reviewed-on: https://go-review.googlesource.com/33471\n\nFrom-SVN: r242724", "tree": {"sha": "545e7c7a65ae8c006a01b0d464c069a7e70da27e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/545e7c7a65ae8c006a01b0d464c069a7e70da27e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3/comments", "author": null, "committer": null, "parents": [{"sha": "f0515366807f98dadbf322ff605b4331e7c4b5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0515366807f98dadbf322ff605b4331e7c4b5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0515366807f98dadbf322ff605b4331e7c4b5bf"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "5ff8b8df065d396d23623f0f3694d90eb9ff2a83", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=7239bf746acb27f8b116e0fbf1b6e40ec12d40d3", "patch": "@@ -1,4 +1,4 @@\n-7593cc83a03999331c5e2dc65a9306c5fe57dfd0\n+e66f30e862cb5d02b9d55bf44ac439bb8fc4ea19\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "ea223d6203d72409ee1b143f4fb9bca0de75f64b", "filename": "libgo/go/cmd/go/pkg.go", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3/libgo%2Fgo%2Fcmd%2Fgo%2Fpkg.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7239bf746acb27f8b116e0fbf1b6e40ec12d40d3/libgo%2Fgo%2Fcmd%2Fgo%2Fpkg.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Fpkg.go?ref=7239bf746acb27f8b116e0fbf1b6e40ec12d40d3", "patch": "@@ -523,6 +523,11 @@ func disallowInternal(srcDir string, p *Package, stk *importStack) *Package {\n \t\treturn p\n \t}\n \n+\t// We can't check standard packages with gccgo.\n+\tif buildContext.Compiler == \"gccgo\" && p.Standard {\n+\t\treturn p\n+\t}\n+\n \t// The stack includes p.ImportPath.\n \t// If that's the only thing on the stack, we started\n \t// with a name given on the command line, not an\n@@ -1588,7 +1593,7 @@ func computeBuildID(p *Package) {\n \t// Include the content of runtime/internal/sys/zversion.go in the hash\n \t// for package runtime. This will give package runtime a\n \t// different build ID in each Go release.\n-\tif p.Standard && p.ImportPath == \"runtime/internal/sys\" {\n+\tif p.Standard && p.ImportPath == \"runtime/internal/sys\" && buildContext.Compiler != \"gccgo\" {\n \t\tdata, err := ioutil.ReadFile(filepath.Join(p.Dir, \"zversion.go\"))\n \t\tif err != nil {\n \t\t\tfatalf(\"go: %s\", err)"}]}