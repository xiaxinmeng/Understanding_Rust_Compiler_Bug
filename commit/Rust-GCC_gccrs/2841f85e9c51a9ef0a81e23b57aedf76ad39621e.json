{"sha": "2841f85e9c51a9ef0a81e23b57aedf76ad39621e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg0MWY4NWU5YzUxYTllZjBhODFlMjNiNTdhZWRmNzZhZDM5NjIxZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-11-14T18:12:24Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-11-14T18:12:24Z"}, "message": "Check  ia32 instead of ilp32.\n\n2011-11-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* testsuite/lib/libitm.exp: Check ia32 instead of ilp32.\n\nFrom-SVN: r181360", "tree": {"sha": "4cd96dd8d0702914ae62830d2443ec2231c398b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cd96dd8d0702914ae62830d2443ec2231c398b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2841f85e9c51a9ef0a81e23b57aedf76ad39621e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2841f85e9c51a9ef0a81e23b57aedf76ad39621e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2841f85e9c51a9ef0a81e23b57aedf76ad39621e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2841f85e9c51a9ef0a81e23b57aedf76ad39621e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "557831a91df947b447fc9fd94ecad02470a3c86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557831a91df947b447fc9fd94ecad02470a3c86a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/557831a91df947b447fc9fd94ecad02470a3c86a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "b01b24de97db405f19d265a5f3187338dab40eb8", "filename": "libitm/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2841f85e9c51a9ef0a81e23b57aedf76ad39621e/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2841f85e9c51a9ef0a81e23b57aedf76ad39621e/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=2841f85e9c51a9ef0a81e23b57aedf76ad39621e", "patch": "@@ -1,3 +1,7 @@\n+2011-11-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/lib/libitm.exp: Check ia32 instead of ilp32.\n+\n 2011-11-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/alpha/sjlj.S (_ITM_beginTransaction) [!__ELF__]: Don't use"}, {"sha": "74f7f80859a77606411458b50044f783ddfa0fd0", "filename": "libitm/testsuite/lib/libitm.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2841f85e9c51a9ef0a81e23b57aedf76ad39621e/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2841f85e9c51a9ef0a81e23b57aedf76ad39621e/libitm%2Ftestsuite%2Flib%2Flibitm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2Flib%2Flibitm.exp?ref=2841f85e9c51a9ef0a81e23b57aedf76ad39621e", "patch": "@@ -144,7 +144,7 @@ proc libitm_init { args } {\n \n     # We use atomic operations in the testcases to validate results.\n     if { ([istarget i?86-*-*] || [istarget x86_64-*-*])\n-\t && [check_effective_target_ilp32] } {\n+\t && [check_effective_target_ia32] } {\n \tlappend ALWAYS_CFLAGS \"additional_flags=-march=i486\"\n     }\n "}]}