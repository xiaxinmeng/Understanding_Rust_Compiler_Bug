{"sha": "6514899f3110f618f60066dca796c327ef20e9fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUxNDg5OWYzMTEwZjYxOGY2MDA2NmRjYTc5NmMzMjdlZjIwZTlmYQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-03-27T17:18:51Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-03-27T17:18:51Z"}, "message": "i386: Insert ENDBR to trampoline for -fcf-protection=branch -mibt\n\nWhen -fcf-protection=branch -mibt are used, we need to insert ENDBR\nto trampoline.  TRAMPOLINE_SIZE is creased by 4 bytes to accommodate\n4-byte ENDBR instruction.\n\ngcc/\n\n\tPR target/85044\n\t* config/i386/i386.c (ix86_trampoline_init): Insert ENDBR for\n\t-fcf-protection=branch -mibt.\n\t* config/i386/i386.h (TRAMPOLINE_SIZE): Increased by 4 bytes.\n\ngcc/testsuite/\n\n\tPR target/85044\n\t* gcc.target/i386/pr85044.c: New test.\n\nFrom-SVN: r258897", "tree": {"sha": "74c73da032e30d770b72cef8e23b63c614e53b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74c73da032e30d770b72cef8e23b63c614e53b74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6514899f3110f618f60066dca796c327ef20e9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6514899f3110f618f60066dca796c327ef20e9fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6514899f3110f618f60066dca796c327ef20e9fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6514899f3110f618f60066dca796c327ef20e9fa/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae0c28bb271ab63aef76e77eacf57bbc23a45564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0c28bb271ab63aef76e77eacf57bbc23a45564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0c28bb271ab63aef76e77eacf57bbc23a45564"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "a07d2ff7838d9ed47d73fa1e5d76829b27d469e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6514899f3110f618f60066dca796c327ef20e9fa", "patch": "@@ -1,3 +1,10 @@\n+2018-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/85044\n+\t* config/i386/i386.c (ix86_trampoline_init): Insert ENDBR for\n+\t-fcf-protection=branch -mibt.\n+\t* config/i386/i386.h (TRAMPOLINE_SIZE): Increased by 4 bytes.\n+\n 2018-03-27  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/81863"}, {"sha": "b4f6aec14346a4960bd254e1b52aa990388a1ba6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6514899f3110f618f60066dca796c327ef20e9fa", "patch": "@@ -30411,13 +30411,22 @@ ix86_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n   rtx mem, fnaddr;\n   int opcode;\n   int offset = 0;\n+  bool need_endbr = (flag_cf_protection & CF_BRANCH) && TARGET_IBT;\n \n   fnaddr = XEXP (DECL_RTL (fndecl), 0);\n \n   if (TARGET_64BIT)\n     {\n       int size;\n \n+      if (need_endbr)\n+\t{\n+\t  /* Insert ENDBR64.  */\n+\t  mem = adjust_address (m_tramp, SImode, offset);\n+\t  emit_move_insn (mem, gen_int_mode (0xfa1e0ff3, SImode));\n+\t  offset += 4;\n+\t}\n+\n       /* Load the function address to r11.  Try to load address using\n \t the shorter movl instead of movabs.  We may want to support\n \t movq for kernel mode, but kernel does not use trampolines at\n@@ -30495,6 +30504,14 @@ ix86_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n       else\n \topcode = 0x68;\n \n+      if (need_endbr)\n+\t{\n+\t  /* Insert ENDBR32.  */\n+\t  mem = adjust_address (m_tramp, SImode, offset);\n+\t  emit_move_insn (mem, gen_int_mode (0xfb1e0ff3, SImode));\n+\t  offset += 4;\n+\t}\n+\n       mem = adjust_address (m_tramp, QImode, offset);\n       emit_move_insn (mem, gen_int_mode (opcode, QImode));\n "}, {"sha": "c7f9b4551b31c08528015fc4524d22fe00dcb36a", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=6514899f3110f618f60066dca796c327ef20e9fa", "patch": "@@ -1716,7 +1716,7 @@ typedef struct ix86_args {\n \n /* Length in units of the trampoline for entering a nested function.  */\n \n-#define TRAMPOLINE_SIZE (TARGET_64BIT ? 24 : 10)\n+#define TRAMPOLINE_SIZE (TARGET_64BIT ? 28 : 14)\n \f\n /* Definitions for register eliminations.\n "}, {"sha": "be9044d644eb18b00918defb95582dd42e970641", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6514899f3110f618f60066dca796c327ef20e9fa", "patch": "@@ -1,3 +1,8 @@\n+2018-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/85044\n+\t* gcc.target/i386/pr85044.c: New test.\n+\n 2018-03-27  Martin Sebor  <msebor@redhat.com>\n \n \tPR testsuite/83462"}, {"sha": "332f582d79b6f96d35345fc43838a6e395693625", "filename": "gcc/testsuite/gcc.target/i386/pr85044.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85044.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6514899f3110f618f60066dca796c327ef20e9fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85044.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr85044.c?ref=6514899f3110f618f60066dca796c327ef20e9fa", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run { target cet } } */\n+/* { dg-options \"-O2 -fcf-protection=branch -mibt\" } */\n+\n+void callme (void (*callback) (void));\n+\n+int\n+main (void)\n+{\n+  int ok = 0;\n+  void callback (void) { ok = 1; }\n+\n+  callme (&callback);\n+\n+  if (!ok)\n+   __builtin_abort ();\n+  return 0;\n+}\n+\n+__attribute__((noinline, noclone))\n+void\n+callme (void (*callback) (void))\n+{\n+  (*callback) ();\n+}"}]}