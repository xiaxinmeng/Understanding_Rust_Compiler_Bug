{"sha": "7a74aa7f4a5666e5b50c30d57b00845337d51906", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E3NGFhN2Y0YTU2NjZlNWI1MGMzMGQ1N2IwMDg0NTMzN2Q1MTkwNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-23T16:02:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-23T16:02:50Z"}, "message": "* semantics.c (potential_constant_expression_1): Allow 'this'.\n\nFrom-SVN: r177993", "tree": {"sha": "8964373055aeb89d1de165408b6d246cf9109a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8964373055aeb89d1de165408b6d246cf9109a01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a74aa7f4a5666e5b50c30d57b00845337d51906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a74aa7f4a5666e5b50c30d57b00845337d51906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a74aa7f4a5666e5b50c30d57b00845337d51906", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a74aa7f4a5666e5b50c30d57b00845337d51906/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09e640b34df2fd4f0413f6984194606e97191292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e640b34df2fd4f0413f6984194606e97191292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e640b34df2fd4f0413f6984194606e97191292"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "524a685da24bc25ffb810f879c042cf8a5d9f77d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a74aa7f4a5666e5b50c30d57b00845337d51906/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a74aa7f4a5666e5b50c30d57b00845337d51906/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a74aa7f4a5666e5b50c30d57b00845337d51906", "patch": "@@ -1,3 +1,7 @@\n+2011-08-23  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (potential_constant_expression_1): Allow 'this'.\n+\n 2011-08-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/50158"}, {"sha": "1f6b49a847224e0556a0b333acfd0cb7ffd858be", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a74aa7f4a5666e5b50c30d57b00845337d51906/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a74aa7f4a5666e5b50c30d57b00845337d51906/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=7a74aa7f4a5666e5b50c30d57b00845337d51906", "patch": "@@ -7681,21 +7681,7 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n     case IDENTIFIER_NODE:\n       /* We can see a FIELD_DECL in a pointer-to-member expression.  */\n     case FIELD_DECL:\n-      return true;\n-\n     case PARM_DECL:\n-      /* -- this (5.1) unless it appears as the postfix-expression in a\n-            class member access expression, including the result of the\n-            implicit transformation in the body of the non-static\n-            member function (9.3.1);  */\n-      /* FIXME this restriction seems pointless since the standard dropped\n-\t \"potential constant expression\".  */\n-      if (is_this_parameter (t))\n-        {\n-          if (flags & tf_error)\n-            error (\"%qE is not a potential constant expression\", t);\n-          return false;\n-        }\n       return true;\n \n     case AGGR_INIT_EXPR:"}]}