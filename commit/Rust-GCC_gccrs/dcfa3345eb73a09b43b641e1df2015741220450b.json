{"sha": "dcfa3345eb73a09b43b641e1df2015741220450b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNmYTMzNDVlYjczYTA5YjQzYjY0MWUxZGYyMDE1NzQxMjIwNDUwYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-11-20T21:30:16Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-11-20T21:30:16Z"}, "message": "cmd: Use correct install tool dir with gccgo\n    \n    When using the go command built from gccgo to build and\n    install a go tool, use the value from runtime GCCGOTOOLDIR as\n    the install directory.\n    \n    This also fixes the output from 'go tool' when used with the\n    gccgo-built go command, to only include the go tools and not\n    other binaries found in the same directory.\n    \n    Reviewed-on: https://go-review.googlesource.com/16516\n\nFrom-SVN: r230677", "tree": {"sha": "e4dce54032eeb6f0868277e245ff6a364cccc0ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4dce54032eeb6f0868277e245ff6a364cccc0ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcfa3345eb73a09b43b641e1df2015741220450b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfa3345eb73a09b43b641e1df2015741220450b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcfa3345eb73a09b43b641e1df2015741220450b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfa3345eb73a09b43b641e1df2015741220450b/comments", "author": null, "committer": null, "parents": [{"sha": "1fb19247a9d1771ffd86e27d55cb8863b32e0f52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb19247a9d1771ffd86e27d55cb8863b32e0f52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fb19247a9d1771ffd86e27d55cb8863b32e0f52"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "418f37a1542804730ee0164ae639231b1d24a871", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcfa3345eb73a09b43b641e1df2015741220450b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcfa3345eb73a09b43b641e1df2015741220450b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=dcfa3345eb73a09b43b641e1df2015741220450b", "patch": "@@ -1,4 +1,4 @@\n-dfa74d975884f363c74d6a66a37b1703093fdba6\n+d52835c9376985f92f35c32af5f1808239981536\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "3270a8b52364b9e4113ae76ec7251261be976cb1", "filename": "libgo/go/cmd/go/pkg.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcfa3345eb73a09b43b641e1df2015741220450b/libgo%2Fgo%2Fcmd%2Fgo%2Fpkg.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcfa3345eb73a09b43b641e1df2015741220450b/libgo%2Fgo%2Fcmd%2Fgo%2Fpkg.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Fpkg.go?ref=dcfa3345eb73a09b43b641e1df2015741220450b", "patch": "@@ -785,7 +785,11 @@ func (p *Package) load(stk *importStack, bp *build.Package, err error) *Package\n \t\tif goTools[p.ImportPath] == toTool {\n \t\t\t// This is for 'go tool'.\n \t\t\t// Override all the usual logic and force it into the tool directory.\n-\t\t\tp.target = filepath.Join(gorootPkg, \"tool\", full)\n+\t\t\tif buildContext.Compiler == \"gccgo\" {\n+\t\t\t\tp.target = filepath.Join(runtime.GCCGOTOOLDIR, elem)\n+\t\t\t} else {\n+\t\t\t\tp.target = filepath.Join(gorootPkg, \"tool\", full)\n+\t\t\t}\n \t\t}\n \t\tif p.target != \"\" && buildContext.GOOS == \"windows\" {\n \t\t\tp.target += \".exe\""}, {"sha": "4b9493937aa1a34bbf18a37f923219a5a9885015", "filename": "libgo/go/cmd/go/tool.go", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcfa3345eb73a09b43b641e1df2015741220450b/libgo%2Fgo%2Fcmd%2Fgo%2Ftool.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcfa3345eb73a09b43b641e1df2015741220450b/libgo%2Fgo%2Fcmd%2Fgo%2Ftool.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Ftool.go?ref=dcfa3345eb73a09b43b641e1df2015741220450b", "patch": "@@ -39,6 +39,12 @@ var (\n \ttoolN bool\n )\n \n+// List of go tools found in the gccgo tool directory.\n+// Other binaries could be in the same directory so don't\n+// show those with the 'go tool' command.\n+\n+var gccgoTools = []string{\"cgo\", \"fix\", \"cover\", \"godoc\", \"vet\"}\n+\n func init() {\n \tcmdTool.Flag.BoolVar(&toolN, \"n\", false, \"\")\n }\n@@ -146,6 +152,21 @@ func listTools() {\n \t\tif toolIsWindows && strings.HasSuffix(name, toolWindowsExtension) {\n \t\t\tname = name[:len(name)-len(toolWindowsExtension)]\n \t\t}\n-\t\tfmt.Println(name)\n+\n+\t\t// The tool directory used by gccgo will have other binaries\n+\t\t// in additions to go tools.  Only display go tools for this list.\n+\n+\t\tif buildContext.Compiler == \"gccgo\" {\n+\t\t\tfor _, tool := range gccgoTools {\n+\t\t\t\tif tool == name {\n+\t\t\t\t\tfmt.Println(name)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} else {\n+\n+\t\t\t// Not gccgo, list all the tools found in this dir\n+\n+\t\t\tfmt.Println(name)\n+\t\t}\n \t}\n }"}]}