{"sha": "29c4d304fd99684f08863ecd1705ddead325a312", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljNGQzMDRmZDk5Njg0ZjA4ODYzZWNkMTcwNWRkZWFkMzI1YTMxMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-18T19:37:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-18T19:37:51Z"}, "message": "mips-protos.h (mips_frame_pointer_required): Declare.\n\ngcc/\n\t* config/mips/mips-protos.h (mips_frame_pointer_required): Declare.\n\t* config/mips/mips.h (FRAME_POINTER_REQUIRED): Use\n\tmips_hard_frame_pointer_required.\n\t(CAN_ELIMINATE): Rely on FRAME_POINTER_REQUIRED to check for\n\tlarge MIPS16 frames.\n\t* config/mips/mips.c (mips_frame_pointer_required): New function.\n\ngcc/testsuite/\n\t* gcc.target/mips/save-restore-3.c: Don't clobber $17.\n\nFrom-SVN: r129459", "tree": {"sha": "f849d99a9b6e50ea598779a4aafdca46225d4631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f849d99a9b6e50ea598779a4aafdca46225d4631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29c4d304fd99684f08863ecd1705ddead325a312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c4d304fd99684f08863ecd1705ddead325a312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c4d304fd99684f08863ecd1705ddead325a312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c4d304fd99684f08863ecd1705ddead325a312/comments", "author": null, "committer": null, "parents": [{"sha": "f374e413a7bf93f07c5a9ddde89138e5c3442306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f374e413a7bf93f07c5a9ddde89138e5c3442306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f374e413a7bf93f07c5a9ddde89138e5c3442306"}], "stats": {"total": 62, "additions": 44, "deletions": 18}, "files": [{"sha": "d54f375d74a2fa2bcb02eb91e174af8b29215267", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29c4d304fd99684f08863ecd1705ddead325a312", "patch": "@@ -1,3 +1,12 @@\n+2007-10-18  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips-protos.h (mips_frame_pointer_required): Declare.\n+\t* config/mips/mips.h (FRAME_POINTER_REQUIRED): Use\n+\tmips_hard_frame_pointer_required.\n+\t(CAN_ELIMINATE): Rely on FRAME_POINTER_REQUIRED to check for\n+\tlarge MIPS16 frames.\n+\t* config/mips/mips.c (mips_frame_pointer_required): New function.\n+\n 2007-10-18  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (mips_frame_info): Add arg_pointer_offset"}, {"sha": "4822f382cb354865eff4e31f587e89d3d25a8b2e", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=29c4d304fd99684f08863ecd1705ddead325a312", "patch": "@@ -255,6 +255,7 @@ extern void mips_finish_declare_object (FILE *, tree, int, int);\n \n extern bool mips_small_data_pattern_p (rtx);\n extern rtx mips_rewrite_small_data (rtx);\n+extern bool mips_frame_pointer_required (void);\n extern HOST_WIDE_INT compute_frame_size (HOST_WIDE_INT);\n extern HOST_WIDE_INT mips_initial_elimination_offset (int, int);\n extern rtx mips_return_addr (int, rtx);"}, {"sha": "c5b30f7ad9bd8545e7b9d7b247c059be6e078353", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=29c4d304fd99684f08863ecd1705ddead325a312", "patch": "@@ -8030,6 +8030,30 @@ mips_current_loadgp_style (void)\n   return TARGET_NEWABI ? LOADGP_NEWABI : LOADGP_OLDABI;\n }\n \f\n+/* Implement FRAME_POINTER_REQUIRED.  */\n+\n+bool\n+mips_frame_pointer_required (void)\n+{\n+  /* If the function contains dynamic stack allocations, we need to\n+     use the frame pointer to access the static parts of the frame.  */\n+  if (current_function_calls_alloca)\n+    return true;\n+\n+  /* In MIPS16 mode, we need a frame pointer for a large frame; otherwise,\n+     reload may be unable to compute the address of a local variable,\n+     since there is no way to add a large constant to the stack pointer\n+     without using a second temporary register.  */\n+  if (TARGET_MIPS16)\n+    {\n+      compute_frame_size (get_frame_size ());\n+      if (!SMALL_OPERAND (cfun->machine->frame.total_size))\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n /* Implement INITIAL_ELIMINATION_OFFSET.  FROM is either the frame\n    pointer or argument pointer.  TO is either the stack pointer or\n    hard frame pointer.  */"}, {"sha": "46356fe73151152e4802c4e6c451f3a14dedb5c0", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=29c4d304fd99684f08863ecd1705ddead325a312", "patch": "@@ -1585,11 +1585,7 @@ enum mips_code_readable_setting {\n #define HARD_FRAME_POINTER_REGNUM \\\n   (TARGET_MIPS16 ? GP_REG_FIRST + 17 : GP_REG_FIRST + 30)\n \n-/* Value should be nonzero if functions must have frame pointers.\n-   Zero means the frame pointer need not be set up (and parms\n-   may be accessed via the stack pointer) in functions that seem suitable.\n-   This is computed in `reload', in reload1.c.  */\n-#define FRAME_POINTER_REQUIRED (current_function_calls_alloca)\n+#define FRAME_POINTER_REQUIRED (mips_frame_pointer_required ())\n \n /* Register in which static-chain is passed to a function.  */\n #define STATIC_CHAIN_REGNUM (GP_REG_FIRST + 2)\n@@ -1916,18 +1912,10 @@ enum reg_class\n  { FRAME_POINTER_REGNUM, GP_REG_FIRST + 30},\t\t\t\t\\\n  { FRAME_POINTER_REGNUM, GP_REG_FIRST + 17}}\n \n-/* We can always eliminate to the hard frame pointer.  We can eliminate\n-   to the stack pointer unless a frame pointer is needed.\n-\n-   In mips16 mode, we need a frame pointer for a large frame; otherwise,\n-   reload may be unable to compute the address of a local variable,\n-   since there is no way to add a large constant to the stack pointer\n-   without using a temporary register.  */\n-#define CAN_ELIMINATE(FROM, TO)\t\t\t\t\t\t\\\n-  ((TO) == HARD_FRAME_POINTER_REGNUM \t\t\t\t        \\\n-   || ((TO) == STACK_POINTER_REGNUM && !frame_pointer_needed\t\t\\\n-       && (!TARGET_MIPS16\t\t\t\t\t\t\\\n-\t   || compute_frame_size (get_frame_size ()) < 32768)))\n+/* Make sure that we're not trying to eliminate to the wrong hard frame\n+   pointer.  */\n+#define CAN_ELIMINATE(FROM, TO) \\\n+  ((TO) == HARD_FRAME_POINTER_REGNUM || (TO) == STACK_POINTER_REGNUM)\n \n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET) \\\n   (OFFSET) = mips_initial_elimination_offset ((FROM), (TO))"}, {"sha": "22586ef1371765257abddffddd43edb59dd305d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29c4d304fd99684f08863ecd1705ddead325a312", "patch": "@@ -1,3 +1,7 @@\n+2007-10-18  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* gcc.target/mips/save-restore-3.c: Don't clobber $17.\n+\n 2007-10-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/33233"}, {"sha": "a73e83b9fffd3be109d0e7ba70a91f39974e0d3a", "filename": "gcc/testsuite/gcc.target/mips/save-restore-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c4d304fd99684f08863ecd1705ddead325a312/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c?ref=29c4d304fd99684f08863ecd1705ddead325a312", "patch": "@@ -12,7 +12,7 @@ foo (int *a, int b, int c)\n   int x[0x4000];\n   asm volatile (\"\" ::: \"$2\", \"$3\", \"$4\", \"$5\", \"$6\", \"$7\", \"$8\",\n \t\t\"$9\", \"$10\", \"$11\", \"$12\", \"$13\", \"$14\", \"$15\", \"$16\",\n-\t\t\"$17\", \"$18\", \"$19\", \"$20\", \"$21\", \"$22\", \"$23\", \"$24\",\n+\t\t\"$18\", \"$19\", \"$20\", \"$21\", \"$22\", \"$23\", \"$24\",\n \t\t\"$25\", \"$30\", \"memory\");\n   bar (x);\n   a[b] = 1;"}]}