{"sha": "4a3b9f48c3743c6737acdc93074d058c1603be2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEzYjlmNDhjMzc0M2M2NzM3YWNkYzkzMDc0ZDA1OGMxNjAzYmUyYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-03T18:04:19Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-03T18:09:48Z"}, "message": "testsuite: update existing Go tests to source repo\n\nThis updates a bunch of existing Go tests to the contents of the\nsource repo.  This does not add any of the newer tests.", "tree": {"sha": "91962ac7a929c710b81b04067754eaf13bbec3b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91962ac7a929c710b81b04067754eaf13bbec3b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a3b9f48c3743c6737acdc93074d058c1603be2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3b9f48c3743c6737acdc93074d058c1603be2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a3b9f48c3743c6737acdc93074d058c1603be2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3b9f48c3743c6737acdc93074d058c1603be2a/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb287056e6a709b8028cdf368c313ebe89877db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb287056e6a709b8028cdf368c313ebe89877db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb287056e6a709b8028cdf368c313ebe89877db"}], "stats": {"total": 15059, "additions": 4741, "deletions": 10318}, "files": [{"sha": "aabaef8f20e27e3216348e38ac7074bb7f07227f", "filename": "gcc/testsuite/go.test/test/alias.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "5707917d201227570aac0d34df8e52cdb0562973", "filename": "gcc/testsuite/go.test/test/alias1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "3d160634060c87631652f8ac1c784e0cd947ef1c", "filename": "gcc/testsuite/go.test/test/append.go", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fappend.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fappend.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fappend.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -13,14 +13,12 @@ import (\n \t\"reflect\"\n )\n \n-\n func verify(name string, result, expected interface{}) {\n \tif !reflect.DeepEqual(result, expected) {\n \t\tpanic(name)\n \t}\n }\n \n-\n func main() {\n \tfor _, t := range tests {\n \t\tverify(t.name, t.result, t.expected)\n@@ -30,6 +28,10 @@ func main() {\n \tverifyType()\n }\n \n+var (\n+\tzero int = 0\n+\tone  int = 1\n+)\n \n var tests = []struct {\n \tname             string\n@@ -49,7 +51,6 @@ var tests = []struct {\n \t{\"bool i\", append([]bool{true, false, true}, []bool{true}...), []bool{true, false, true, true}},\n \t{\"bool j\", append([]bool{true, false, true}, []bool{true, true, true}...), []bool{true, false, true, true, true, true}},\n \n-\n \t{\"byte a\", append([]byte{}), []byte{}},\n \t{\"byte b\", append([]byte{}, 0), []byte{0}},\n \t{\"byte c\", append([]byte{}, 0, 1, 2, 3), []byte{0, 1, 2, 3}},\n@@ -84,7 +85,6 @@ var tests = []struct {\n \t{\"int16 i\", append([]int16{0, 1, 2}, []int16{3}...), []int16{0, 1, 2, 3}},\n \t{\"int16 j\", append([]int16{0, 1, 2}, []int16{3, 4, 5}...), []int16{0, 1, 2, 3, 4, 5}},\n \n-\n \t{\"uint32 a\", append([]uint32{}), []uint32{}},\n \t{\"uint32 b\", append([]uint32{}, 0), []uint32{0}},\n \t{\"uint32 c\", append([]uint32{}, 0, 1, 2, 3), []uint32{0, 1, 2, 3}},\n@@ -99,7 +99,6 @@ var tests = []struct {\n \t{\"uint32 i\", append([]uint32{0, 1, 2}, []uint32{3}...), []uint32{0, 1, 2, 3}},\n \t{\"uint32 j\", append([]uint32{0, 1, 2}, []uint32{3, 4, 5}...), []uint32{0, 1, 2, 3, 4, 5}},\n \n-\n \t{\"float64 a\", append([]float64{}), []float64{}},\n \t{\"float64 b\", append([]float64{}, 0), []float64{0}},\n \t{\"float64 c\", append([]float64{}, 0, 1, 2, 3), []float64{0, 1, 2, 3}},\n@@ -114,7 +113,6 @@ var tests = []struct {\n \t{\"float64 i\", append([]float64{0, 1, 2}, []float64{3}...), []float64{0, 1, 2, 3}},\n \t{\"float64 j\", append([]float64{0, 1, 2}, []float64{3, 4, 5}...), []float64{0, 1, 2, 3, 4, 5}},\n \n-\n \t{\"complex128 a\", append([]complex128{}), []complex128{}},\n \t{\"complex128 b\", append([]complex128{}, 0), []complex128{0}},\n \t{\"complex128 c\", append([]complex128{}, 0, 1, 2, 3), []complex128{0, 1, 2, 3}},\n@@ -129,7 +127,6 @@ var tests = []struct {\n \t{\"complex128 i\", append([]complex128{0, 1, 2}, []complex128{3}...), []complex128{0, 1, 2, 3}},\n \t{\"complex128 j\", append([]complex128{0, 1, 2}, []complex128{3, 4, 5}...), []complex128{0, 1, 2, 3, 4, 5}},\n \n-\n \t{\"string a\", append([]string{}), []string{}},\n \t{\"string b\", append([]string{}, \"0\"), []string{\"0\"}},\n \t{\"string c\", append([]string{}, \"0\", \"1\", \"2\", \"3\"), []string{\"0\", \"1\", \"2\", \"3\"}},\n@@ -143,8 +140,19 @@ var tests = []struct {\n \n \t{\"string i\", append([]string{\"0\", \"1\", \"2\"}, []string{\"3\"}...), []string{\"0\", \"1\", \"2\", \"3\"}},\n \t{\"string j\", append([]string{\"0\", \"1\", \"2\"}, []string{\"3\", \"4\", \"5\"}...), []string{\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"}},\n-}\n \n+\t{\"make a\", append([]string{}, make([]string, 0)...), []string{}},\n+\t{\"make b\", append([]string(nil), make([]string, 0)...), []string(nil)},\n+\n+\t{\"make c\", append([]struct{}{}, make([]struct{}, 0)...), []struct{}{}},\n+\t{\"make d\", append([]struct{}{}, make([]struct{}, 2)...), make([]struct{}, 2)},\n+\n+\t{\"make e\", append([]int{0, 1}, make([]int, 0)...), []int{0, 1}},\n+\t{\"make f\", append([]int{0, 1}, make([]int, 2)...), []int{0, 1, 0, 0}},\n+\n+\t{\"make g\", append([]*int{&zero, &one}, make([]*int, 0)...), []*int{&zero, &one}},\n+\t{\"make h\", append([]*int{&zero, &one}, make([]*int, 2)...), []*int{&zero, &one, nil, nil}},\n+}\n \n func verifyStruct() {\n \ttype T struct {\n@@ -185,7 +193,6 @@ func verifyStruct() {\n \tverify(\"struct m\", append(s, e...), r)\n }\n \n-\n func verifyInterface() {\n \ttype T interface{}\n \ttype S []T"}, {"sha": "62fd3b5be3ca2923d41bba0714f41d838004ceab", "filename": "gcc/testsuite/go.test/test/assign.go", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -53,4 +53,16 @@ func main() {\n \t\t_ = x\n \t\t_ = y\n \t}\n+\t{\n+\t\tvar x = 1\n+\t\t{\n+\t\t\tx, x := 2, 3 // ERROR \".*x.* repeated on left side of :=\"\n+\t\t\t_ = x\n+\t\t}\n+\t\t_ = x\n+\t}\n+\t{\n+\t\ta, a := 1, 2 // ERROR \".*a.* repeated on left side of :=\"\n+\t\t_ = a\n+\t}\n }"}, {"sha": "c10ef0a0f8c19a781a2724da60c79bcce105032a", "filename": "gcc/testsuite/go.test/test/bench/garbage/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2FMakefile?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-# Copyright 2010 The Go Authors.  All rights reserved.\n+# Copyright 2010 The Go Authors. All rights reserved.\n # Use of this source code is governed by a BSD-style\n # license that can be found in the LICENSE file.\n "}, {"sha": "817afa91b08dce7594cc5ddcbcd1158e7f84308d", "filename": "gcc/testsuite/go.test/test/bench/garbage/parser.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fparser.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fparser.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fparser.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -85,7 +85,7 @@ func main() {\n \tvar t0 time.Time\n \tvar numGC uint32\n \tvar pauseTotalNs uint64\n-\tpkgroot := runtime.GOROOT() + \"/src/pkg/\"\n+\tpkgroot := runtime.GOROOT() + \"/src/\"\n \tfor pass := 0; pass < 2; pass++ {\n \t\t// Once the heap is grown to full size, reset counters.\n \t\t// This hides the start-up pauses, which are much smaller"}, {"sha": "937e00fa51762748f6ba0a4aa357bd087b152742", "filename": "gcc/testsuite/go.test/test/bench/garbage/stats.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fstats.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fstats.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fstats.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "524cfebc73f29b08f743119eb71786f92ae69655", "filename": "gcc/testsuite/go.test/test/bench/garbage/tree.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -28,7 +28,7 @@ POSSIBILITY OF SUCH DAMAGE.\n */\n \n /* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n+ * https://benchmarksgame-team.pages.debian.net/benchmarksgame/\n  *\n  * contributed by The Go Authors.\n  * based on C program by Kevin Carson"}, {"sha": "a70a1062390365ec8b2b721cab0a94ba91cf6b6f", "filename": "gcc/testsuite/go.test/test/bench/garbage/tree2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "e5e49d502cfa45675913a4795f9bc7ff18709c2b", "filename": "gcc/testsuite/go.test/test/bench/go1/binarytree_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fbinarytree_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fbinarytree_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fbinarytree_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "0cf6115805984769f573c561d199297b76fb892d", "filename": "gcc/testsuite/go.test/test/bench/go1/fannkuch_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffannkuch_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffannkuch_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffannkuch_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "af4fbac274c125756988ff517b8d47e041159fe1", "filename": "gcc/testsuite/go.test/test/bench/go1/fasta_test.go", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffasta_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffasta_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffasta_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -12,11 +12,11 @@ var fastabytes = makefasta()\n \n func makefasta() []byte {\n \tvar n int = 25e6\n-\tif runtime.GOARCH == \"arm\" {\n+\tif runtime.GOARCH == \"arm\" || runtime.GOARCH == \"mips\" || runtime.GOARCH == \"mips64\" {\n \t\t// TODO(dfc) remove this limitation after precise gc.\n-\t\t// A value of 25e6 consumes 465mb of heap on 32bit \n-\t\t// platforms, which is too much for most ARM systems. \n-\t\t// A value of 25e5 produces a memory layout that \n+\t\t// A value of 25e6 consumes 465mb of heap on 32bit\n+\t\t// platforms, which is too much for some systems.\n+\t\t// A value of 25e5 produces a memory layout that\n \t\t// confuses the gc on 32bit platforms. So 25e4 it is.\n \t\tn = 25e4\n \t}"}, {"sha": "224beff6801760ff38656b78aa1e4eaf771db53f", "filename": "gcc/testsuite/go.test/test/bench/go1/gob_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgob_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgob_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgob_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "648eec5d457843d9f5d495711ac9c265cd9c858a", "filename": "gcc/testsuite/go.test/test/bench/go1/gzip_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgzip_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgzip_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgzip_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "7ece9b2ac54878b8f1a6ea882810a42719795b2a", "filename": "gcc/testsuite/go.test/test/bench/go1/http_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fhttp_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fhttp_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fhttp_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Go Authors.  All rights reserved.\n+// Copyright 2013 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "5ff1f8b65068744f6616d7dc1ca4e448e985cf3b", "filename": "gcc/testsuite/go.test/test/bench/go1/json_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjson_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjson_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjson_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "281b6ca3562c652c0c07d94b2488d308da7f87c0", "filename": "gcc/testsuite/go.test/test/bench/go1/jsondata_test.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjsondata_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjsondata_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjsondata_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -1816,4 +1816,4 @@ zJE6zEudHD27ZzbOeSgpk/HnkQbT7twqaaJXNvUzMuUt1hyhU7ceZcph42+VTlXU\n cZ9UZZJyYojLjaeJHfJU1UZUEmBfLumu8yW5skuyE9uh2BmVxJZi6KxaXBNwSolw\n BqBcQLj3ucNZIYZLYtirLu3brW6UYgZgZJiDIGiwpsgg7g1AITkgM6FHITxDDnGt\n 4SDHzZbL5s8fec5PCq5DOzDRdWS+0h5Y2INZak1D29cpVyb2aVrV3Wlt7rQhLa3e\n-m3ZwPNcXywE2Qesk1XN24HvZ2Xa6nlm8Pf/xdyRThQkO1NjuAA== `)\n+m3ZwPNcXywE2Qesk1XN24HvZ2Xa6nlm8Pf/xdyRThQkO1NjuAA==`)"}, {"sha": "dd543b2bc86b04eec0584c590859357d5ad7e2bb", "filename": "gcc/testsuite/go.test/test/bench/go1/mandel_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fmandel_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fmandel_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fmandel_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "8255d182cbadf8de4fa414920fa0957b65cd3600", "filename": "gcc/testsuite/go.test/test/bench/go1/parserdata_test.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparserdata_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparserdata_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparserdata_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // Input for parser benchmark.\n-// This was generated by starting with a the contents of\n-// src/pkg/go/parser/parser.go at rev 9b455eb64690, then \n+// This was generated by starting with the contents of\n+// src/pkg/go/parser/parser.go at rev 9b455eb64690, then\n // compressing with bzip2 -9, then encoding to base64.\n // We compile the data into the binary so that the benchmark is\n // a stand-alone binary that can be copied easily from machine to"}, {"sha": "7d57bd607b684d93a7b70cb8c5bf64208f028ea2", "filename": "gcc/testsuite/go.test/test/bench/go1/revcomp_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Frevcomp_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Frevcomp_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Frevcomp_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "10dacaa35f6dc06c9c980ec98639ade289c10ae1", "filename": "gcc/testsuite/go.test/test/bench/go1/template_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ftemplate_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ftemplate_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ftemplate_test.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "071a4e06e7b270d6c104edb0408dd0dc74975ba1", "filename": "gcc/testsuite/go.test/test/bench/shootout/binary-tree-freelist.go", "status": "removed", "additions": 0, "deletions": 129, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree-freelist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree-freelist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree-freelist.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,129 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * based on C program by Kevin Carson\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-)\n-\n-var n = flag.Int(\"n\", 15, \"depth\")\n-\n-type Node struct {\n-\titem        int\n-\tleft, right *Node\n-}\n-\n-type Arena struct {\n-\thead *Node\n-}\n-\n-var arena Arena\n-\n-func (n *Node) free() {\n-\tif n.left != nil {\n-\t\tn.left.free()\n-\t}\n-\tif n.right != nil {\n-\t\tn.right.free()\n-\t}\n-\tn.left = arena.head\n-\tarena.head = n\n-}\n-\n-func (a *Arena) New(item int, left, right *Node) *Node {\n-\tif a.head == nil {\n-\t\tnodes := make([]Node, 3<<uint(*n))\n-\t\tfor i := 0; i < len(nodes)-1; i++ {\n-\t\t\tnodes[i].left = &nodes[i+1]\n-\t\t}\n-\t\ta.head = &nodes[0]\n-\t}\n-\tn := a.head\n-\ta.head = a.head.left\n-\tn.item = item\n-\tn.left = left\n-\tn.right = right\n-\treturn n\n-}\n-\n-func bottomUpTree(item, depth int) *Node {\n-\tif depth <= 0 {\n-\t\treturn arena.New(item, nil, nil)\n-\t}\n-\treturn arena.New(item, bottomUpTree(2*item-1, depth-1), bottomUpTree(2*item, depth-1))\n-}\n-\n-func (n *Node) itemCheck() int {\n-\tif n.left == nil {\n-\t\treturn n.item\n-\t}\n-\treturn n.item + n.left.itemCheck() - n.right.itemCheck()\n-}\n-\n-const minDepth = 4\n-\n-func main() {\n-\tflag.Parse()\n-\n-\tmaxDepth := *n\n-\tif minDepth+2 > *n {\n-\t\tmaxDepth = minDepth + 2\n-\t}\n-\tstretchDepth := maxDepth + 1\n-\n-\tcheck := bottomUpTree(0, stretchDepth).itemCheck()\n-\tfmt.Printf(\"stretch tree of depth %d\\t check: %d\\n\", stretchDepth, check)\n-\n-\tlongLivedTree := bottomUpTree(0, maxDepth)\n-\n-\tfor depth := minDepth; depth <= maxDepth; depth += 2 {\n-\t\titerations := 1 << uint(maxDepth-depth+minDepth)\n-\t\tcheck = 0\n-\n-\t\tfor i := 1; i <= iterations; i++ {\n-\t\t\tt := bottomUpTree(i, depth)\n-\t\t\tcheck += t.itemCheck()\n-\t\t\tt.free()\n-\t\t\tt = bottomUpTree(-i, depth)\n-\t\t\tcheck += t.itemCheck()\n-\t\t\tt.free()\n-\t\t}\n-\t\tfmt.Printf(\"%d\\t trees of depth %d\\t check: %d\\n\", iterations*2, depth, check)\n-\t}\n-\tfmt.Printf(\"long lived tree of depth %d\\t check: %d\\n\", maxDepth, longLivedTree.itemCheck())\n-}"}, {"sha": "f8286dd88bd490f57323048f4e333a37ede0453d", "filename": "gcc/testsuite/go.test/test/bench/shootout/binary-tree-freelist.txt", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree-freelist.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree-freelist.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree-freelist.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,8 +0,0 @@\n-stretch tree of depth 16\t check: -1\n-65536\t trees of depth 4\t check: -65536\n-16384\t trees of depth 6\t check: -16384\n-4096\t trees of depth 8\t check: -4096\n-1024\t trees of depth 10\t check: -1024\n-256\t trees of depth 12\t check: -256\n-64\t trees of depth 14\t check: -64\n-long lived tree of depth 15\t check: -1"}, {"sha": "9c35ac52a96026c8cf96cb5f229825016448e2a7", "filename": "gcc/testsuite/go.test/test/bench/shootout/binary-tree.c", "status": "removed", "additions": 0, "deletions": 164, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,164 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Shootout Benchmarks\n-   http://shootout.alioth.debian.org/\n-\n-   contributed by Kevin Carson\n-   compilation:\n-       gcc -O3 -fomit-frame-pointer -funroll-loops -static binary-trees.c -lm\n-       icc -O3 -ip -unroll -static binary-trees.c -lm\n-*/\n-\n-#include <math.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-\n-typedef struct tn {\n-    struct tn*    left;\n-    struct tn*    right;\n-    long          item;\n-} treeNode;\n-\n-\n-treeNode* NewTreeNode(treeNode* left, treeNode* right, long item)\n-{\n-    treeNode*    new;\n-\n-    new = (treeNode*)malloc(sizeof(treeNode));\n-\n-    new->left = left;\n-    new->right = right;\n-    new->item = item;\n-\n-    return new;\n-} /* NewTreeNode() */\n-\n-\n-long ItemCheck(treeNode* tree)\n-{\n-    if (tree->left == NULL)\n-        return tree->item;\n-    else\n-        return tree->item + ItemCheck(tree->left) - ItemCheck(tree->right);\n-} /* ItemCheck() */\n-\n-\n-treeNode* BottomUpTree(long item, unsigned depth)\n-{\n-    if (depth > 0)\n-        return NewTreeNode\n-        (\n-            BottomUpTree(2 * item - 1, depth - 1),\n-            BottomUpTree(2 * item, depth - 1),\n-            item\n-        );\n-    else\n-        return NewTreeNode(NULL, NULL, item);\n-} /* BottomUpTree() */\n-\n-\n-void DeleteTree(treeNode* tree)\n-{\n-    if (tree->left != NULL)\n-    {\n-        DeleteTree(tree->left);\n-        DeleteTree(tree->right);\n-    }\n-\n-    free(tree);\n-} /* DeleteTree() */\n-\n-\n-int main(int argc, char* argv[])\n-{\n-    unsigned   N, depth, minDepth, maxDepth, stretchDepth;\n-    treeNode   *stretchTree, *longLivedTree, *tempTree;\n-\n-    N = atol(argv[1]);\n-\n-    minDepth = 4;\n-\n-    if ((minDepth + 2) > N)\n-        maxDepth = minDepth + 2;\n-    else\n-        maxDepth = N;\n-\n-    stretchDepth = maxDepth + 1;\n-\n-    stretchTree = BottomUpTree(0, stretchDepth);\n-    printf\n-    (\n-        \"stretch tree of depth %u\\t check: %li\\n\",\n-        stretchDepth,\n-        ItemCheck(stretchTree)\n-    );\n-\n-    DeleteTree(stretchTree);\n-\n-    longLivedTree = BottomUpTree(0, maxDepth);\n-\n-    for (depth = minDepth; depth <= maxDepth; depth += 2)\n-    {\n-        long    i, iterations, check;\n-\n-        iterations = pow(2, maxDepth - depth + minDepth);\n-\n-        check = 0;\n-\n-        for (i = 1; i <= iterations; i++)\n-        {\n-            tempTree = BottomUpTree(i, depth);\n-            check += ItemCheck(tempTree);\n-            DeleteTree(tempTree);\n-\n-            tempTree = BottomUpTree(-i, depth);\n-            check += ItemCheck(tempTree);\n-            DeleteTree(tempTree);\n-        } /* for(i = 1...) */\n-\n-        printf\n-        (\n-            \"%li\\t trees of depth %u\\t check: %li\\n\",\n-            iterations * 2,\n-            depth,\n-            check\n-        );\n-    } /* for(depth = minDepth...) */\n-\n-    printf\n-    (\n-        \"long lived tree of depth %u\\t check: %li\\n\",\n-        maxDepth,\n-        ItemCheck(longLivedTree)\n-    );\n-\n-    return 0;\n-} /* main() */"}, {"sha": "9f867d11a70f8d454d37611868f07b98a12aa544", "filename": "gcc/testsuite/go.test/test/bench/shootout/binary-tree.go", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,92 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * based on C program by Kevin Carson\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-)\n-\n-var n = flag.Int(\"n\", 15, \"depth\")\n-\n-type Node struct {\n-\titem        int\n-\tleft, right *Node\n-}\n-\n-func bottomUpTree(item, depth int) *Node {\n-\tif depth <= 0 {\n-\t\treturn &Node{item: item}\n-\t}\n-\treturn &Node{item, bottomUpTree(2*item-1, depth-1), bottomUpTree(2*item, depth-1)}\n-}\n-\n-func (n *Node) itemCheck() int {\n-\tif n.left == nil {\n-\t\treturn n.item\n-\t}\n-\treturn n.item + n.left.itemCheck() - n.right.itemCheck()\n-}\n-\n-const minDepth = 4\n-\n-func main() {\n-\tflag.Parse()\n-\n-\tmaxDepth := *n\n-\tif minDepth+2 > *n {\n-\t\tmaxDepth = minDepth + 2\n-\t}\n-\tstretchDepth := maxDepth + 1\n-\n-\tcheck := bottomUpTree(0, stretchDepth).itemCheck()\n-\tfmt.Printf(\"stretch tree of depth %d\\t check: %d\\n\", stretchDepth, check)\n-\n-\tlongLivedTree := bottomUpTree(0, maxDepth)\n-\n-\tfor depth := minDepth; depth <= maxDepth; depth += 2 {\n-\t\titerations := 1 << uint(maxDepth-depth+minDepth)\n-\t\tcheck = 0\n-\n-\t\tfor i := 1; i <= iterations; i++ {\n-\t\t\tcheck += bottomUpTree(i, depth).itemCheck()\n-\t\t\tcheck += bottomUpTree(-i, depth).itemCheck()\n-\t\t}\n-\t\tfmt.Printf(\"%d\\t trees of depth %d\\t check: %d\\n\", iterations*2, depth, check)\n-\t}\n-\tfmt.Printf(\"long lived tree of depth %d\\t check: %d\\n\", maxDepth, longLivedTree.itemCheck())\n-}"}, {"sha": "f8286dd88bd490f57323048f4e333a37ede0453d", "filename": "gcc/testsuite/go.test/test/bench/shootout/binary-tree.txt", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,8 +0,0 @@\n-stretch tree of depth 16\t check: -1\n-65536\t trees of depth 4\t check: -65536\n-16384\t trees of depth 6\t check: -16384\n-4096\t trees of depth 8\t check: -4096\n-1024\t trees of depth 10\t check: -1024\n-256\t trees of depth 12\t check: -256\n-64\t trees of depth 14\t check: -64\n-long lived tree of depth 15\t check: -1"}, {"sha": "ed78c31d7ba09a80430eed112021c81cb6d57548", "filename": "gcc/testsuite/go.test/test/bench/shootout/chameneosredux.c", "status": "removed", "additions": 0, "deletions": 330, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,330 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n-   http://shootout.alioth.debian.org/\n-\n-   contributed by Michael Barker\n-   based on a Java contribution by Luzius Meisser\n-\n-   convert to C by dualamd\n-*/\n-\n-#include <stdlib.h>\n-#include <stdio.h>\n-#include <pthread.h>\n-\n-\n-enum Colour\n-{\n-   blue      = 0,\n-   red      = 1,\n-   yellow   = 2,\n-   Invalid   = 3\n-};\n-\n-const char* ColourName[] = {\"blue\", \"red\", \"yellow\"};\n-const int STACK_SIZE   = 32*1024;\n-\n-typedef unsigned int BOOL;\n-const BOOL TRUE = 1;\n-const BOOL FALSE = 0;\n-\n-int CreatureID = 0;\n-\n-\n-enum Colour doCompliment(enum Colour c1, enum Colour c2)\n-{\n-   switch (c1)\n-   {\n-   case blue:\n-      switch (c2)\n-      {\n-      case blue:\n-         return blue;\n-      case red:\n-         return yellow;\n-      case yellow:\n-         return red;\n-      default:\n-         goto errlb;\n-      }\n-   case red:\n-      switch (c2)\n-      {\n-      case blue:\n-         return yellow;\n-      case red:\n-         return red;\n-      case yellow:\n-         return blue;\n-      default:\n-         goto errlb;\n-      }\n-   case yellow:\n-      switch (c2)\n-      {\n-      case blue:\n-         return red;\n-      case red:\n-         return blue;\n-      case yellow:\n-         return yellow;\n-      default:\n-         goto errlb;\n-      }\n-   default:\n-      break;\n-   }\n-\n-errlb:\n-   printf(\"Invalid colour\\n\");\n-   exit( 1 );\n-}\n-\n-/* convert integer to number string: 1234 -> \"one two three four\" */\n-char* formatNumber(int n, char* outbuf)\n-{\n-   int ochar = 0, ichar = 0;\n-   int i;\n-   char tmp[64];\n-\n-   const char* NUMBERS[] =\n-   {\n-      \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\",\n-      \"six\", \"seven\", \"eight\", \"nine\"\n-   };\n-\n-   ichar = sprintf(tmp, \"%d\", n);\n-\n-   for (i = 0; i < ichar; i++)\n-      ochar += sprintf( outbuf + ochar, \" %s\", NUMBERS[ tmp[i] - '0' ] );\n-\n-   return outbuf;\n-}\n-\n-\n-struct MeetingPlace\n-{\n-   pthread_mutex_t   mutex;\n-   int             meetingsLeft;\n-   struct Creature*   firstCreature;\n-};\n-\n-struct Creature\n-{\n-   pthread_t         ht;\n-   pthread_attr_t      stack_att;\n-\n-   struct MeetingPlace* place;\n-   int         count;\n-   int         sameCount;\n-\n-   enum Colour   colour;\n-   int          id;\n-\n-   BOOL      two_met;\n-   BOOL      sameid;\n-};\n-\n-\n-void MeetingPlace_Init(struct MeetingPlace* m, int meetings )\n-{\n-   pthread_mutex_init( &m->mutex, 0 );\n-   m->meetingsLeft = meetings;\n-   m->firstCreature = 0;\n-}\n-\n-\n-BOOL Meet( struct Creature* cr)\n-{\n-   BOOL retval = TRUE;\n-\n-   struct MeetingPlace* mp = cr->place;\n-   pthread_mutex_lock( &(mp->mutex) );\n-\n-   if ( mp->meetingsLeft > 0 )\n-   {\n-      if ( mp->firstCreature == 0 )\n-      {\n-         cr->two_met = FALSE;\n-         mp->firstCreature = cr;\n-      }\n-      else\n-      {\n-         struct Creature* first;\n-         enum Colour newColour;\n-\n-         first = mp->firstCreature;\n-         newColour = doCompliment( cr->colour, first->colour );\n-\n-         cr->sameid = cr->id == first->id;\n-         cr->colour = newColour;\n-         cr->two_met = TRUE;\n-\n-         first->sameid = cr->sameid;\n-         first->colour = newColour;\n-         first->two_met = TRUE;\n-\n-         mp->firstCreature = 0;\n-         mp->meetingsLeft--;\n-      }\n-   }\n-   else\n-      retval = FALSE;\n-\n-   pthread_mutex_unlock( &(mp->mutex) );\n-   return retval;\n-}\n-\n-\n-void* CreatureThreadRun(void* param)\n-{\n-   struct Creature* cr = (struct Creature*)param;\n-\n-   while (TRUE)\n-   {\n-      if ( Meet(cr) )\n-      {\n-         while (cr->two_met == FALSE)\n-            sched_yield();\n-\n-         if (cr->sameid)\n-            cr->sameCount++;\n-         cr->count++;\n-      }\n-      else\n-         break;\n-   }\n-\n-   return 0;\n-}\n-\n-void Creature_Init( struct Creature *cr, struct MeetingPlace* place, enum Colour colour )\n-{\n-   cr->place = place;\n-   cr->count = cr->sameCount = 0;\n-\n-   cr->id = ++CreatureID;\n-   cr->colour = colour;\n-   cr->two_met = FALSE;\n-\n-   pthread_attr_init( &cr->stack_att );\n-   pthread_attr_setstacksize( &cr->stack_att, STACK_SIZE );\n-   pthread_create( &cr->ht, &cr->stack_att, &CreatureThreadRun, (void*)(cr) );\n-}\n-\n-/* format meeting times of each creature to string */\n-char* Creature_getResult(struct Creature* cr, char* str)\n-{\n-   char numstr[256];\n-   formatNumber(cr->sameCount, numstr);\n-\n-   sprintf( str, \"%u%s\", cr->count, numstr );\n-   return str;\n-}\n-\n-\n-void runGame( int n_meeting, int ncolor, const enum Colour* colours )\n-{\n-   int i;\n-   int total = 0;\n-   char str[256];\n-\n-   struct MeetingPlace place;\n-   struct Creature *creatures = (struct Creature*) calloc( ncolor, sizeof(struct Creature) );\n-\n-   MeetingPlace_Init( &place, n_meeting );\n-\n-   /* print initial color of each creature */\n-   for (i = 0; i < ncolor; i++)\n-   {\n-      printf( \"%s \", ColourName[ colours[i] ] );\n-      Creature_Init( &(creatures[i]), &place, colours[i] );\n-   }\n-   printf(\"\\n\");\n-\n-   /* wait for them to meet */\n-   for (i = 0; i < ncolor; i++)\n-      pthread_join( creatures[i].ht, 0 );\n-\n-   /* print meeting times of each creature */\n-   for (i = 0; i < ncolor; i++)\n-   {\n-      printf( \"%s\\n\", Creature_getResult(&(creatures[i]), str) );\n-      total += creatures[i].count;\n-   }\n-\n-   /* print total meeting times, should equal n_meeting */\n-   printf( \"%s\\n\\n\", formatNumber(total, str) );\n-\n-   /* cleaup & quit */\n-   pthread_mutex_destroy( &place.mutex );\n-   free( creatures );\n-}\n-\n-\n-void printColours( enum Colour c1, enum Colour c2 )\n-{\n-   printf( \"%s + %s -> %s\\n\",\n-      ColourName[c1],\n-      ColourName[c2],\n-      ColourName[doCompliment(c1, c2)]   );\n-}\n-\n-void printColoursTable(void)\n-{\n-   printColours(blue, blue);\n-   printColours(blue, red);\n-   printColours(blue, yellow);\n-   printColours(red, blue);\n-   printColours(red, red);\n-   printColours(red, yellow);\n-   printColours(yellow, blue);\n-   printColours(yellow, red);\n-   printColours(yellow, yellow);\n-}\n-\n-int main(int argc, char** argv)\n-{\n-   int n = (argc == 2) ? atoi(argv[1]) : 600;\n-\n-   printColoursTable();\n-   printf(\"\\n\");\n-\n-   const enum Colour r1[] = {   blue, red, yellow   };\n-   const enum Colour r2[] = {   blue, red, yellow,\n-               red, yellow, blue,\n-               red, yellow, red, blue   };\n-\n-   runGame( n, sizeof(r1) / sizeof(r1[0]), r1 );\n-   runGame( n, sizeof(r2) / sizeof(r2[0]), r2 );\n-\n-   return 0;\n-}"}, {"sha": "3395798620f060589ab3afefcfb5c11351991b30", "filename": "gcc/testsuite/go.test/test/bench/shootout/chameneosredux.go", "status": "removed", "additions": 0, "deletions": 180, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,180 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"strconv\"\n-)\n-\n-const (\n-\tblue = iota\n-\tred\n-\tyellow\n-\tncol\n-)\n-\n-var complement = [...]int{\n-\tred | red<<2:       red,\n-\tred | yellow<<2:    blue,\n-\tred | blue<<2:      yellow,\n-\tyellow | red<<2:    blue,\n-\tyellow | yellow<<2: yellow,\n-\tyellow | blue<<2:   red,\n-\tblue | red<<2:      yellow,\n-\tblue | yellow<<2:   red,\n-\tblue | blue<<2:     blue,\n-}\n-\n-var colname = [...]string{\n-\tblue:   \"blue\",\n-\tred:    \"red\",\n-\tyellow: \"yellow\",\n-}\n-\n-// information about the current state of a creature.\n-type info struct {\n-\tcolour int // creature's current colour.\n-\tname   int // creature's name.\n-}\n-\n-// exclusive access data-structure kept inside meetingplace.\n-// if mate is nil, it indicates there's no creature currently waiting;\n-// otherwise the creature's info is stored in info, and\n-// it is waiting to receive its mate's information on the mate channel.\n-type rendez struct {\n-\tn    int         // current number of encounters.\n-\tmate chan<- info // creature waiting when non-nil.\n-\tinfo info        // info about creature waiting.\n-}\n-\n-// result sent by each creature at the end of processing.\n-type result struct {\n-\tmet  int\n-\tsame int\n-}\n-\n-var n = 600\n-\n-func main() {\n-\tflag.Parse()\n-\tif flag.NArg() > 0 {\n-\t\tn, _ = strconv.Atoi(flag.Arg(0))\n-\t}\n-\n-\tfor c0 := 0; c0 < ncol; c0++ {\n-\t\tfor c1 := 0; c1 < ncol; c1++ {\n-\t\t\tfmt.Printf(\"%s + %s -> %s\\n\", colname[c0], colname[c1], colname[complement[c0|c1<<2]])\n-\t\t}\n-\t}\n-\tfmt.Print(\"\\n\")\n-\n-\tpallmall([]int{blue, red, yellow})\n-\tpallmall([]int{blue, red, yellow, red, yellow, blue, red, yellow, red, blue})\n-}\n-\n-func pallmall(cols []int) {\n-\n-\t// invariant: meetingplace always contains a value unless a creature\n-\t// is currently dealing with it (whereupon it must put it back).\n-\tmeetingplace := make(chan rendez, 1)\n-\tmeetingplace <- rendez{n: 0}\n-\n-\tended := make(chan result)\n-\tmsg := \"\"\n-\tfor i, col := range cols {\n-\t\tgo creature(info{col, i}, meetingplace, ended)\n-\t\tmsg += \" \" + colname[col]\n-\t}\n-\tfmt.Println(msg)\n-\ttot := 0\n-\t// wait for all results\n-\tfor _ = range cols {\n-\t\tresult := <-ended\n-\t\ttot += result.met\n-\t\tfmt.Printf(\"%v%v\\n\", result.met, spell(result.same, true))\n-\t}\n-\tfmt.Printf(\"%v\\n\\n\", spell(tot, true))\n-}\n-\n-// in this function, variables ending in 0 refer to the local creature,\n-// variables ending in 1 to the creature we've met.\n-func creature(info0 info, meetingplace chan rendez, ended chan result) {\n-\tc0 := make(chan info)\n-\tmet := 0\n-\tsame := 0\n-\tfor {\n-\t\tvar othername int\n-\t\t// get access to rendez data and decide what to do.\n-\t\tswitch r := <-meetingplace; {\n-\t\tcase r.n >= n:\n-\t\t\t// if no more meetings left, then send our result data and exit.\n-\t\t\tmeetingplace <- rendez{n: r.n}\n-\t\t\tended <- result{met, same}\n-\t\t\treturn\n-\t\tcase r.mate == nil:\n-\t\t\t// no creature waiting; wait for someone to meet us,\n-\t\t\t// get their info and send our info in reply.\n-\t\t\tmeetingplace <- rendez{n: r.n, info: info0, mate: c0}\n-\t\t\tinfo1 := <-c0\n-\t\t\tothername = info1.name\n-\t\t\tinfo0.colour = complement[info0.colour|info1.colour<<2]\n-\t\tdefault:\n-\t\t\t// another creature is waiting for us with its info;\n-\t\t\t// increment meeting count,\n-\t\t\t// send them our info in reply.\n-\t\t\tr.n++\n-\t\t\tmeetingplace <- rendez{n: r.n, mate: nil}\n-\t\t\tr.mate <- info0\n-\t\t\tothername = r.info.name\n-\t\t\tinfo0.colour = complement[info0.colour|r.info.colour<<2]\n-\t\t}\n-\t\tif othername == info0.name {\n-\t\t\tsame++\n-\t\t}\n-\t\tmet++\n-\t}\n-}\n-\n-var digits = [...]string{\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"}\n-\n-func spell(n int, required bool) string {\n-\tif n == 0 && !required {\n-\t\treturn \"\"\n-\t}\n-\treturn spell(n/10, false) + \" \" + digits[n%10]\n-}"}, {"sha": "6016d59a8c9e65ce1b99a1763e24015e0158f19d", "filename": "gcc/testsuite/go.test/test/bench/shootout/chameneosredux.txt", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fchameneosredux.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,29 +0,0 @@\n-blue + blue -> blue\n-blue + red -> yellow\n-blue + yellow -> red\n-red + blue -> yellow\n-red + red -> red\n-red + yellow -> blue\n-yellow + blue -> red\n-yellow + red -> blue\n-yellow + yellow -> yellow\n-\n- blue red yellow\n-400 zero\n-400 zero\n-400 zero\n- one two zero zero\n-\n- blue red yellow red yellow blue red yellow red blue\n-120 zero\n-120 zero\n-120 zero\n-120 zero\n-120 zero\n-120 zero\n-120 zero\n-120 zero\n-120 zero\n-120 zero\n- one two zero zero\n-"}, {"sha": "7e9b98d5051e953482502c0381c371fb0fb91f17", "filename": "gcc/testsuite/go.test/test/bench/shootout/fannkuch-parallel.go", "status": "removed", "additions": 0, "deletions": 224, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch-parallel.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch-parallel.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch-parallel.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,224 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n- * The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * Based on fannkuch.scala by Rex Kerr\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"runtime\"\n-)\n-\n-var n = flag.Int(\"n\", 7, \"count\")\n-var nCPU = flag.Int(\"ncpu\", 4, \"number of cpus\")\n-\n-type Job struct {\n-\tstart []int\n-\tn     int\n-}\n-\n-type Found struct {\n-\twho *Kucher\n-\tk   int\n-}\n-\n-type Kucher struct {\n-\tperm []int\n-\ttemp []int\n-\tflip []int\n-\tin   chan Job\n-}\n-\n-func NewKucher(length int) *Kucher {\n-\treturn &Kucher{\n-\t\tperm: make([]int, length),\n-\t\ttemp: make([]int, length),\n-\t\tflip: make([]int, length),\n-\t\tin:   make(chan Job),\n-\t}\n-}\n-\n-func (k *Kucher) permute(n int) bool {\n-\ti := 0\n-\tfor ; i < n-1 && k.flip[i] == 0; i++ {\n-\t\tt := k.perm[0]\n-\t\tj := 0\n-\t\tfor ; j <= i; j++ {\n-\t\t\tk.perm[j] = k.perm[j+1]\n-\t\t}\n-\t\tk.perm[j] = t\n-\t}\n-\tk.flip[i]--\n-\tfor i > 0 {\n-\t\ti--\n-\t\tk.flip[i] = i\n-\t}\n-\treturn k.flip[n-1] >= 0\n-}\n-\n-func (k *Kucher) count() int {\n-\tK := 0\n-\tcopy(k.temp, k.perm)\n-\tfor k.temp[0] != 0 {\n-\t\tm := k.temp[0]\n-\t\tfor i := 0; i < m; i++ {\n-\t\t\tk.temp[i], k.temp[m] = k.temp[m], k.temp[i]\n-\t\t\tm--\n-\t\t}\n-\t\tK++\n-\t}\n-\treturn K\n-}\n-\n-func (k *Kucher) Run(foreman chan<- Found) {\n-\tfor job := range k.in {\n-\t\tverbose := 30\n-\t\tcopy(k.perm, job.start)\n-\t\tfor i, v := range k.perm {\n-\t\t\tif v != i {\n-\t\t\t\tverbose = 0\n-\t\t\t}\n-\t\t\tk.flip[i] = i\n-\t\t}\n-\t\tK := 0\n-\t\tfor {\n-\t\t\tif verbose > 0 {\n-\t\t\t\tfor _, p := range k.perm {\n-\t\t\t\t\tfmt.Print(p + 1)\n-\t\t\t\t}\n-\t\t\t\tfmt.Println()\n-\t\t\t\tverbose--\n-\t\t\t}\n-\t\t\tcount := k.count()\n-\t\t\tif count > K {\n-\t\t\t\tK = count\n-\t\t\t}\n-\t\t\tif !k.permute(job.n) {\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t}\n-\t\tforeman <- Found{k, K}\n-\t}\n-}\n-\n-type Fanner struct {\n-\tjobind   int\n-\tjobsdone int\n-\tk        int\n-\tjobs     []Job\n-\tworkers  []*Kucher\n-\tin       chan Found\n-\tresult   chan int\n-}\n-\n-func NewFanner(jobs []Job, workers []*Kucher) *Fanner {\n-\treturn &Fanner{\n-\t\tjobs: jobs, workers: workers,\n-\t\tin:     make(chan Found),\n-\t\tresult: make(chan int),\n-\t}\n-}\n-\n-func (f *Fanner) Run(N int) {\n-\tfor msg := range f.in {\n-\t\tif msg.k > f.k {\n-\t\t\tf.k = msg.k\n-\t\t}\n-\t\tif msg.k >= 0 {\n-\t\t\tf.jobsdone++\n-\t\t}\n-\t\tif f.jobind < len(f.jobs) {\n-\t\t\tmsg.who.in <- f.jobs[f.jobind]\n-\t\t\tf.jobind++\n-\t\t} else if f.jobsdone == len(f.jobs) {\n-\t\t\tf.result <- f.k\n-\t\t\treturn\n-\t\t}\n-\t}\n-}\n-\n-func swapped(a []int, i, j int) []int {\n-\tb := make([]int, len(a))\n-\tcopy(b, a)\n-\tb[i], b[j] = a[j], a[i]\n-\treturn b\n-}\n-\n-func main() {\n-\tflag.Parse()\n-\truntime.GOMAXPROCS(*nCPU)\n-\tN := *n\n-\tbase := make([]int, N)\n-\tfor i := range base {\n-\t\tbase[i] = i\n-\t}\n-\n-\tnjobs := 1\n-\tif N > 8 {\n-\t\tnjobs += (N*(N-1))/2 - 28 // njobs = 1 + sum(8..N-1) = 1 + sum(1..N-1) - sum(1..7)\n-\t}\n-\tjobs := make([]Job, njobs)\n-\tjobsind := 0\n-\n-\tfirstN := N\n-\tif firstN > 8 {\n-\t\tfirstN = 8\n-\t}\n-\tjobs[jobsind] = Job{base, firstN}\n-\tjobsind++\n-\tfor i := N - 1; i >= 8; i-- {\n-\t\tfor j := 0; j < i; j++ {\n-\t\t\tjobs[jobsind] = Job{swapped(base, i, j), i}\n-\t\t\tjobsind++\n-\t\t}\n-\t}\n-\n-\tnworkers := *nCPU\n-\tif njobs < nworkers {\n-\t\tnworkers = njobs\n-\t}\n-\tworkers := make([]*Kucher, nworkers)\n-\tforeman := NewFanner(jobs, workers)\n-\tgo foreman.Run(N)\n-\tfor i := range workers {\n-\t\tk := NewKucher(N)\n-\t\tworkers[i] = k\n-\t\tgo k.Run(foreman.in)\n-\t\tforeman.in <- Found{k, -1}\n-\t}\n-\tfmt.Printf(\"Pfannkuchen(%d) = %d\\n\", N, <-foreman.result)\n-}"}, {"sha": "e66f779ea1d18ea1b153c33e43d41c4bc12bad35", "filename": "gcc/testsuite/go.test/test/bench/shootout/fannkuch-parallel.txt", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch-parallel.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch-parallel.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch-parallel.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,31 +0,0 @@\n-1234567\n-2134567\n-2314567\n-3214567\n-3124567\n-1324567\n-2341567\n-3241567\n-3421567\n-4321567\n-4231567\n-2431567\n-3412567\n-4312567\n-4132567\n-1432567\n-1342567\n-3142567\n-4123567\n-1423567\n-1243567\n-2143567\n-2413567\n-4213567\n-2345167\n-3245167\n-3425167\n-4325167\n-4235167\n-2435167\n-Pfannkuchen(7) = 16"}, {"sha": "e576b5441f994b0f829c4839ab5c71f012f0c0e5", "filename": "gcc/testsuite/go.test/test/bench/shootout/fannkuch.c", "status": "removed", "additions": 0, "deletions": 134, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,134 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n- * The Computer Language Shootout\n- * http://shootout.alioth.debian.org/\n- * Contributed by Heiner Marxen\n- *\n- * \"fannkuch\"\tfor C gcc\n- *\n- * $Id: fannkuch.1.gcc.code,v 1.15 2009-04-28 15:39:31 igouy-guest Exp $\n- */\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-#define Int\tint\n-#define Aint\tint\n-\n-    static long\n-fannkuch( int n )\n-{\n-    Aint*\tperm;\n-    Aint*\tperm1;\n-    Aint*\tcount;\n-    long\tflips;\n-    long\tflipsMax;\n-    Int\t\tr;\n-    Int\t\ti;\n-    Int\t\tk;\n-    Int\t\tdidpr;\n-    const Int\tn1\t= n - 1;\n-\n-    if( n < 1 ) return 0;\n-\n-    perm  = calloc(n, sizeof(*perm ));\n-    perm1 = calloc(n, sizeof(*perm1));\n-    count = calloc(n, sizeof(*count));\n-\n-    for( i=0 ; i<n ; ++i ) perm1[i] = i;\t/* initial (trivial) permu */\n-\n-    r = n; didpr = 0; flipsMax = 0;\n-    for(;;) {\n-\tif( didpr < 30 ) {\n-\t    for( i=0 ; i<n ; ++i ) printf(\"%d\", (int)(1+perm1[i]));\n-\t    printf(\"\\n\");\n-\t    ++didpr;\n-\t}\n-\tfor( ; r!=1 ; --r ) {\n-\t    count[r-1] = r;\n-\t}\n-\n-#define XCH(x,y)\t{ Aint t_mp; t_mp=(x); (x)=(y); (y)=t_mp; }\n-\n-\tif( ! (perm1[0]==0 || perm1[n1]==n1) ) {\n-\t    flips = 0;\n-\t    for( i=1 ; i<n ; ++i ) {\t/* perm = perm1 */\n-\t\tperm[i] = perm1[i];\n-\t    }\n-\t    k = perm1[0];\t\t/* cache perm[0] in k */\n-\t    do {\t\t\t/* k!=0 ==> k>0 */\n-\t\tInt\tj;\n-\t\tfor( i=1, j=k-1 ; i<j ; ++i, --j ) {\n-\t\t    XCH(perm[i], perm[j])\n-\t\t}\n-\t\t++flips;\n-\t\t/*\n-\t\t * Now exchange k (caching perm[0]) and perm[k]... with care!\n-\t\t * XCH(k, perm[k]) does NOT work!\n-\t\t */\n-\t\tj=perm[k]; perm[k]=k ; k=j;\n-\t    }while( k );\n-\t    if( flipsMax < flips ) {\n-\t\tflipsMax = flips;\n-\t    }\n-\t}\n-\n-\tfor(;;) {\n-\t    if( r == n ) {\n-\t\treturn flipsMax;\n-\t    }\n-\t    /* rotate down perm[0..r] by one */\n-\t    {\n-\t\tInt\tperm0 = perm1[0];\n-\t\ti = 0;\n-\t\twhile( i < r ) {\n-\t\t    k = i+1;\n-\t\t    perm1[i] = perm1[k];\n-\t\t    i = k;\n-\t\t}\n-\t\tperm1[r] = perm0;\n-\t    }\n-\t    if( (count[r] -= 1) > 0 ) {\n-\t\tbreak;\n-\t    }\n-\t    ++r;\n-\t}\n-    }\n-}\n-\n-    int\n-main( int argc, char* argv[] )\n-{\n-    int\t\tn = (argc>1) ? atoi(argv[1]) : 0;\n-\n-    printf(\"Pfannkuchen(%d) = %ld\\n\", n, fannkuch(n));\n-    return 0;\n-}"}, {"sha": "b554c77b10490a0a403d0f423e1b05ca05b8f200", "filename": "gcc/testsuite/go.test/test/bench/shootout/fannkuch.go", "status": "removed", "additions": 0, "deletions": 122, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,122 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n- * The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * Based on fannkuch.c by Heiner Marxen\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-)\n-\n-var n = flag.Int(\"n\", 7, \"count\")\n-\n-func fannkuch(n int) int {\n-\tif n < 1 {\n-\t\treturn 0\n-\t}\n-\n-\tn1 := n - 1\n-\tperm := make([]int, n)\n-\tperm1 := make([]int, n)\n-\tcount := make([]int, n)\n-\n-\tfor i := 0; i < n; i++ {\n-\t\tperm1[i] = i // initial (trivial) permutation\n-\t}\n-\n-\tr := n\n-\tdidpr := 0\n-\tflipsMax := 0\n-\tfor {\n-\t\tif didpr < 30 {\n-\t\t\tfor i := 0; i < n; i++ {\n-\t\t\t\tfmt.Printf(\"%d\", 1+perm1[i])\n-\t\t\t}\n-\t\t\tfmt.Printf(\"\\n\")\n-\t\t\tdidpr++\n-\t\t}\n-\t\tfor ; r != 1; r-- {\n-\t\t\tcount[r-1] = r\n-\t\t}\n-\n-\t\tif perm1[0] != 0 && perm1[n1] != n1 {\n-\t\t\tflips := 0\n-\t\t\tfor i := 1; i < n; i++ { // perm = perm1\n-\t\t\t\tperm[i] = perm1[i]\n-\t\t\t}\n-\t\t\tk := perm1[0] // cache perm[0] in k\n-\t\t\tfor {         // k!=0 ==> k>0\n-\t\t\t\tfor i, j := 1, k-1; i < j; i, j = i+1, j-1 {\n-\t\t\t\t\tperm[i], perm[j] = perm[j], perm[i]\n-\t\t\t\t}\n-\t\t\t\tflips++\n-\t\t\t\t// Now exchange k (caching perm[0]) and perm[k]... with care!\n-\t\t\t\tj := perm[k]\n-\t\t\t\tperm[k] = k\n-\t\t\t\tk = j\n-\t\t\t\tif k == 0 {\n-\t\t\t\t\tbreak\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tif flipsMax < flips {\n-\t\t\t\tflipsMax = flips\n-\t\t\t}\n-\t\t}\n-\n-\t\tfor ; r < n; r++ {\n-\t\t\t// rotate down perm[0..r] by one\n-\t\t\tperm0 := perm1[0]\n-\t\t\tfor i := 0; i < r; i++ {\n-\t\t\t\tperm1[i] = perm1[i+1]\n-\t\t\t}\n-\t\t\tperm1[r] = perm0\n-\t\t\tcount[r]--\n-\t\t\tif count[r] > 0 {\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t}\n-\t\tif r == n {\n-\t\t\treturn flipsMax\n-\t\t}\n-\t}\n-\treturn 0\n-}\n-\n-func main() {\n-\tflag.Parse()\n-\tfmt.Printf(\"Pfannkuchen(%d) = %d\\n\", *n, fannkuch(*n))\n-}"}, {"sha": "e66f779ea1d18ea1b153c33e43d41c4bc12bad35", "filename": "gcc/testsuite/go.test/test/bench/shootout/fannkuch.txt", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffannkuch.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,31 +0,0 @@\n-1234567\n-2134567\n-2314567\n-3214567\n-3124567\n-1324567\n-2341567\n-3241567\n-3421567\n-4321567\n-4231567\n-2431567\n-3412567\n-4312567\n-4132567\n-1432567\n-1342567\n-3142567\n-4123567\n-1423567\n-1243567\n-2143567\n-2413567\n-4213567\n-2345167\n-3245167\n-3425167\n-4325167\n-4235167\n-2435167\n-Pfannkuchen(7) = 16"}, {"sha": "f1caba0d628000ab62a51a1b731e61bb0db8d559", "filename": "gcc/testsuite/go.test/test/bench/shootout/fasta-1000.out", "status": "removed", "additions": 0, "deletions": 171, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta-1000.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta-1000.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta-1000.out?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,171 +0,0 @@\n->ONE Homo sapiens alu\n-GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGA\n-TCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACT\n-AAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAG\n-GCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCG\n-CCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGT\n-GGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCA\n-GGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAA\n-TTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAG\n-AATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCA\n-GCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGT\n-AATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACC\n-AGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTG\n-GTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACC\n-CGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAG\n-AGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTT\n-TGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACA\n-TGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCT\n-GTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGG\n-TTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGT\n-CTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGG\n-CGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCG\n-TCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTA\n-CTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCG\n-AGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCG\n-GGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACC\n-TGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAA\n-TACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGA\n-GGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACT\n-GCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTC\n-ACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGT\n-TCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGC\n-CGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCG\n-CTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTG\n-GGCGACAGAGCGAGACTCCG\n->TWO IUB ambiguity codes\n-cttBtatcatatgctaKggNcataaaSatgtaaaDcDRtBggDtctttataattcBgtcg\n-tactDtDagcctatttSVHtHttKtgtHMaSattgWaHKHttttagacatWatgtRgaaa\n-NtactMcSMtYtcMgRtacttctWBacgaaatatagScDtttgaagacacatagtVgYgt\n-cattHWtMMWcStgttaggKtSgaYaaccWStcgBttgcgaMttBYatcWtgacaYcaga\n-gtaBDtRacttttcWatMttDBcatWtatcttactaBgaYtcttgttttttttYaaScYa\n-HgtgttNtSatcMtcVaaaStccRcctDaataataStcYtRDSaMtDttgttSagtRRca\n-tttHatSttMtWgtcgtatSSagactYaaattcaMtWatttaSgYttaRgKaRtccactt\n-tattRggaMcDaWaWagttttgacatgttctacaaaRaatataataaMttcgDacgaSSt\n-acaStYRctVaNMtMgtaggcKatcttttattaaaaagVWaHKYagtttttatttaacct\n-tacgtVtcVaattVMBcttaMtttaStgacttagattWWacVtgWYagWVRctDattBYt\n-gtttaagaagattattgacVatMaacattVctgtBSgaVtgWWggaKHaatKWcBScSWa\n-accRVacacaaactaccScattRatatKVtactatatttHttaagtttSKtRtacaaagt\n-RDttcaaaaWgcacatWaDgtDKacgaacaattacaRNWaatHtttStgttattaaMtgt\n-tgDcgtMgcatBtgcttcgcgaDWgagctgcgaggggVtaaScNatttacttaatgacag\n-cccccacatYScaMgtaggtYaNgttctgaMaacNaMRaacaaacaKctacatagYWctg\n-ttWaaataaaataRattagHacacaagcgKatacBttRttaagtatttccgatctHSaat\n-actcNttMaagtattMtgRtgaMgcataatHcMtaBSaRattagttgatHtMttaaKagg\n-YtaaBataSaVatactWtataVWgKgttaaaacagtgcgRatatacatVtHRtVYataSa\n-KtWaStVcNKHKttactatccctcatgWHatWaRcttactaggatctataDtDHBttata\n-aaaHgtacVtagaYttYaKcctattcttcttaataNDaaggaaaDYgcggctaaWSctBa\n-aNtgctggMBaKctaMVKagBaactaWaDaMaccYVtNtaHtVWtKgRtcaaNtYaNacg\n-gtttNattgVtttctgtBaWgtaattcaagtcaVWtactNggattctttaYtaaagccgc\n-tcttagHVggaYtgtNcDaVagctctctKgacgtatagYcctRYHDtgBattDaaDgccK\n-tcHaaStttMcctagtattgcRgWBaVatHaaaataYtgtttagMDMRtaataaggatMt\n-ttctWgtNtgtgaaaaMaatatRtttMtDgHHtgtcattttcWattRSHcVagaagtacg\n-ggtaKVattKYagactNaatgtttgKMMgYNtcccgSKttctaStatatNVataYHgtNa\n-BKRgNacaactgatttcctttaNcgatttctctataScaHtataRagtcRVttacDSDtt\n-aRtSatacHgtSKacYagttMHtWataggatgactNtatSaNctataVtttRNKtgRacc\n-tttYtatgttactttttcctttaaacatacaHactMacacggtWataMtBVacRaSaatc\n-cgtaBVttccagccBcttaRKtgtgcctttttRtgtcagcRttKtaaacKtaaatctcac\n-aattgcaNtSBaaccgggttattaaBcKatDagttactcttcattVtttHaaggctKKga\n-tacatcBggScagtVcacattttgaHaDSgHatRMaHWggtatatRgccDttcgtatcga\n-aacaHtaagttaRatgaVacttagattVKtaaYttaaatcaNatccRttRRaMScNaaaD\n-gttVHWgtcHaaHgacVaWtgttScactaagSgttatcttagggDtaccagWattWtRtg\n-ttHWHacgattBtgVcaYatcggttgagKcWtKKcaVtgaYgWctgYggVctgtHgaNcV\n-taBtWaaYatcDRaaRtSctgaHaYRttagatMatgcatttNattaDttaattgttctaa\n-ccctcccctagaWBtttHtBccttagaVaatMcBHagaVcWcagBVttcBtaYMccagat\n-gaaaaHctctaacgttagNWRtcggattNatcRaNHttcagtKttttgWatWttcSaNgg\n-gaWtactKKMaacatKatacNattgctWtatctaVgagctatgtRaHtYcWcttagccaa\n-tYttWttaWSSttaHcaaaaagVacVgtaVaRMgattaVcDactttcHHggHRtgNcctt\n-tYatcatKgctcctctatVcaaaaKaaaagtatatctgMtWtaaaacaStttMtcgactt\n-taSatcgDataaactaaacaagtaaVctaggaSccaatMVtaaSKNVattttgHccatca\n-cBVctgcaVatVttRtactgtVcaattHgtaaattaaattttYtatattaaRSgYtgBag\n-aHSBDgtagcacRHtYcBgtcacttacactaYcgctWtattgSHtSatcataaatataHt\n-cgtYaaMNgBaatttaRgaMaatatttBtttaaaHHKaatctgatWatYaacttMctctt\n-ttVctagctDaaagtaVaKaKRtaacBgtatccaaccactHHaagaagaaggaNaaatBW\n-attccgStaMSaMatBttgcatgRSacgttVVtaaDMtcSgVatWcaSatcttttVatag\n-ttactttacgatcaccNtaDVgSRcgVcgtgaacgaNtaNatatagtHtMgtHcMtagaa\n-attBgtataRaaaacaYKgtRccYtatgaagtaataKgtaaMttgaaRVatgcagaKStc\n-tHNaaatctBBtcttaYaBWHgtVtgacagcaRcataWctcaBcYacYgatDgtDHccta\n->THREE Homo sapiens frequency\n-aacacttcaccaggtatcgtgaaggctcaagattacccagagaacctttgcaatataaga\n-atatgtatgcagcattaccctaagtaattatattctttttctgactcaaagtgacaagcc\n-ctagtgtatattaaatcggtatatttgggaaattcctcaaactatcctaatcaggtagcc\n-atgaaagtgatcaaaaaagttcgtacttataccatacatgaattctggccaagtaaaaaa\n-tagattgcgcaaaattcgtaccttaagtctctcgccaagatattaggatcctattactca\n-tatcgtgtttttctttattgccgccatccccggagtatctcacccatccttctcttaaag\n-gcctaatattacctatgcaaataaacatatattgttgaaaattgagaacctgatcgtgat\n-tcttatgtgtaccatatgtatagtaatcacgcgactatatagtgctttagtatcgcccgt\n-gggtgagtgaatattctgggctagcgtgagatagtttcttgtcctaatatttttcagatc\n-gaatagcttctatttttgtgtttattgacatatgtcgaaactccttactcagtgaaagtc\n-atgaccagatccacgaacaatcttcggaatcagtctcgttttacggcggaatcttgagtc\n-taacttatatcccgtcgcttactttctaacaccccttatgtatttttaaaattacgttta\n-ttcgaacgtacttggcggaagcgttattttttgaagtaagttacattgggcagactcttg\n-acattttcgatacgactttctttcatccatcacaggactcgttcgtattgatatcagaag\n-ctcgtgatgattagttgtcttctttaccaatactttgaggcctattctgcgaaatttttg\n-ttgccctgcgaacttcacataccaaggaacacctcgcaacatgccttcatatccatcgtt\n-cattgtaattcttacacaatgaatcctaagtaattacatccctgcgtaaaagatggtagg\n-ggcactgaggatatattaccaagcatttagttatgagtaatcagcaatgtttcttgtatt\n-aagttctctaaaatagttacatcgtaatgttatctcgggttccgcgaataaacgagatag\n-attcattatatatggccctaagcaaaaacctcctcgtattctgttggtaattagaatcac\n-acaatacgggttgagatattaattatttgtagtacgaagagatataaaaagatgaacaat\n-tactcaagtcaagatgtatacgggatttataataaaaatcgggtagagatctgctttgca\n-attcagacgtgccactaaatcgtaatatgtcgcgttacatcagaaagggtaactattatt\n-aattaataaagggcttaatcactacatattagatcttatccgatagtcttatctattcgt\n-tgtatttttaagcggttctaattcagtcattatatcagtgctccgagttctttattattg\n-ttttaaggatgacaaaatgcctcttgttataacgctgggagaagcagactaagagtcgga\n-gcagttggtagaatgaggctgcaaaagacggtctcgacgaatggacagactttactaaac\n-caatgaaagacagaagtagagcaaagtctgaagtggtatcagcttaattatgacaaccct\n-taatacttccctttcgccgaatactggcgtggaaaggttttaaaagtcgaagtagttaga\n-ggcatctctcgctcataaataggtagactactcgcaatccaatgtgactatgtaatactg\n-ggaacatcagtccgcgatgcagcgtgtttatcaaccgtccccactcgcctggggagacat\n-gagaccacccccgtggggattattagtccgcagtaatcgactcttgacaatccttttcga\n-ttatgtcatagcaatttacgacagttcagcgaagtgactactcggcgaaatggtattact\n-aaagcattcgaacccacatgaatgtgattcttggcaatttctaatccactaaagcttttc\n-cgttgaatctggttgtagatatttatataagttcactaattaagatcacggtagtatatt\n-gatagtgatgtctttgcaagaggttggccgaggaatttacggattctctattgatacaat\n-ttgtctggcttataactcttaaggctgaaccaggcgtttttagacgacttgatcagctgt\n-tagaatggtttggactccctctttcatgtcagtaacatttcagccgttattgttacgata\n-tgcttgaacaatattgatctaccacacacccatagtatattttataggtcatgctgttac\n-ctacgagcatggtattccacttcccattcaatgagtattcaacatcactagcctcagaga\n-tgatgacccacctctaataacgtcacgttgcggccatgtgaaacctgaacttgagtagac\n-gatatcaagcgctttaaattgcatataacatttgagggtaaagctaagcggatgctttat\n-ataatcaatactcaataataagatttgattgcattttagagttatgacacgacatagttc\n-actaacgagttactattcccagatctagactgaagtactgatcgagacgatccttacgtc\n-gatgatcgttagttatcgacttaggtcgggtctctagcggtattggtacttaaccggaca\n-ctatactaataacccatgatcaaagcataacagaatacagacgataatttcgccaacata\n-tatgtacagaccccaagcatgagaagctcattgaaagctatcattgaagtcccgctcaca\n-atgtgtcttttccagacggtttaactggttcccgggagtcctggagtttcgacttacata\n-aatggaaacaatgtattttgctaatttatctatagcgtcatttggaccaatacagaatat\n-tatgttgcctagtaatccactataacccgcaagtgctgatagaaaatttttagacgattt\n-ataaatgccccaagtatccctcccgtgaatcctccgttatactaattagtattcgttcat\n-acgtataccgcgcatatatgaacatttggcgataaggcgcgtgaattgttacgtgacaga\n-gatagcagtttcttgtgatatggttaacagacgtacatgaagggaaactttatatctata\n-gtgatgcttccgtagaaataccgccactggtctgccaatgatgaagtatgtagctttagg\n-tttgtactatgaggctttcgtttgtttgcagagtataacagttgcgagtgaaaaaccgac\n-gaatttatactaatacgctttcactattggctacaaaatagggaagagtttcaatcatga\n-gagggagtatatggatgctttgtagctaaaggtagaacgtatgtatatgctgccgttcat\n-tcttgaaagatacataagcgataagttacgacaattataagcaacatccctaccttcgta\n-acgatttcactgttactgcgcttgaaatacactatggggctattggcggagagaagcaga\n-tcgcgccgagcatatacgagacctataatgttgatgatagagaaggcgtctgaattgata\n-catcgaagtacactttctttcgtagtatctctcgtcctctttctatctccggacacaaga\n-attaagttatatatatagagtcttaccaatcatgttgaatcctgattctcagagttcttt\n-ggcgggccttgtgatgactgagaaacaatgcaatattgctccaaatttcctaagcaaatt\n-ctcggttatgttatgttatcagcaaagcgttacgttatgttatttaaatctggaatgacg\n-gagcgaagttcttatgtcggtgtgggaataattcttttgaagacagcactccttaaataa\n-tatcgctccgtgtttgtatttatcgaatgggtctgtaaccttgcacaagcaaatcggtgg\n-tgtatatatcggataacaattaatacgatgttcatagtgacagtatactgatcgagtcct\n-ctaaagtcaattacctcacttaacaatctcattgatgttgtgtcattcccggtatcgccc\n-gtagtatgtgctctgattgaccgagtgtgaaccaaggaacatctactaatgcctttgtta\n-ggtaagatctctctgaattccttcgtgccaacttaaaacattatcaaaatttcttctact\n-tggattaactacttttacgagcatggcaaattcccctgtggaagacggttcattattatc\n-ggaaaccttatagaaattgcgtgttgactgaaattagatttttattgtaagagttgcatc\n-tttgcgattcctctggtctagcttccaatgaacagtcctcccttctattcgacatcgggt\n-ccttcgtacatgtctttgcgatgtaataattaggttcggagtgtggccttaatgggtgca\n-actaggaatacaacgcaaatttgctgacatgatagcaaatcggtatgccggcaccaaaac\n-gtgctccttgcttagcttgtgaatgagactcagtagttaaataaatccatatctgcaatc\n-gattccacaggtattgtccactatctttgaactactctaagagatacaagcttagctgag\n-accgaggtgtatatgactacgctgatatctgtaaggtaccaatgcaggcaaagtatgcga\n-gaagctaataccggctgtttccagctttataagattaaaatttggctgtcctggcggcct\n-cagaattgttctatcgtaatcagttggttcattaattagctaagtacgaggtacaactta\n-tctgtcccagaacagctccacaagtttttttacagccgaaacccctgtgtgaatcttaat\n-atccaagcgcgttatctgattagagtttacaactcagtattttatcagtacgttttgttt\n-ccaacattacccggtatgacaaaatgacgccacgtgtcgaataatggtctgaccaatgta\n-ggaagtgaaaagataaatat"}, {"sha": "64c1c5205817725cfbf4b5acd1c28224458bb4de", "filename": "gcc/testsuite/go.test/test/bench/shootout/fasta.c", "status": "removed", "additions": 0, "deletions": 219, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,219 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n- * http://shootout.alioth.debian.org/u32/program.php?test=fasta&lang=gcc&id=3\n- */\n-\n-/*  The Computer Language Benchmarks Game\n- *  http://shootout.alioth.debian.org/\n- *\n- *  contributed by Petr Prokhorenkov\n- */\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-\n-#ifndef fwrite_unlocked\n-// not available on OS X \n-#define fwrite_unlocked fwrite\n-#define fputc_unlocked fputc\n-#define fputs_unlocked fputs\n-#endif\n-\n-#define ARRAY_SIZE(a) (sizeof(a)/sizeof(a[0]))\n-#define unlikely(x) __builtin_expect((x), 0)\n-\n-#define IM 139968\n-#define IA 3877\n-#define IC 29573\n-\n-#define LINE_LEN 60\n-#define LOOKUP_SIZE 4096\n-#define LOOKUP_SCALE ((float)(LOOKUP_SIZE - 1))\n-\n-typedef unsigned random_t;\n-\n-void\n-random_init(random_t *random) {\n-    *random = 42;\n-}\n-\n-// Special version with result rescaled to LOOKUP_SCALE.\n-static inline\n-float\n-random_next_lookup(random_t *random) {\n-    *random = (*random*IA + IC)%IM;\n-\n-    return (*random)*(LOOKUP_SCALE/IM);\n-}\n-\n-struct amino_acid {\n-   char sym;\n-   float prob;\n-   float cprob_lookup;\n-};\n-\n-void\n-repeat(const char *alu, const char *title, int n) {\n-    int len = strlen(alu);\n-    char buffer[len + LINE_LEN];\n-    int pos = 0;\n-\n-    memcpy(buffer, alu, len);\n-    memcpy(buffer + len, alu, LINE_LEN);\n-\n-    fputs_unlocked(title, stdout);\n-    while (n > 0) {\n-        int bytes = n > LINE_LEN ? LINE_LEN : n;\n-\n-        fwrite_unlocked(buffer + pos, bytes, 1, stdout);\n-        pos += bytes;\n-        if (pos > len) {\n-            pos -= len;\n-        }\n-        fputc_unlocked('\\n', stdout);\n-        n -= bytes;\n-    }\n-}\n-\n-/*\n- * Lookup table contains mapping from real values to cumulative\n- * probabilities. Careful selection of table size allows lookup\n- * virtually in constant time.\n- *\n- * All cumulative probabilities are rescaled to LOOKUP_SCALE,\n- * this allows to save one multiplication operation on each iteration\n- * in randomize().\n- */\n-\n-void *\n-fill_lookup(struct amino_acid **lookup, struct amino_acid *amino_acid, int amino_acid_size) {\n-    float p = 0;\n-    int i, j;\n-\n-    for (i = 0; i < amino_acid_size; i++) {\n-        p += amino_acid[i].prob;\n-        amino_acid[i].cprob_lookup = p*LOOKUP_SCALE;\n-    }\n-\n-    // Prevent rounding error.\n-    amino_acid[amino_acid_size - 1].cprob_lookup = LOOKUP_SIZE - 1;\n-\n-    for (i = 0, j = 0; i < LOOKUP_SIZE; i++) {\n-        while (amino_acid[j].cprob_lookup < i) {\n-            j++;\n-        }\n-        lookup[i] = &amino_acid[j];\n-    }\n-\n-    return 0;\n-}\n-\n-void\n-randomize(struct amino_acid *amino_acid, int amino_acid_size,\n-        const char *title, int n, random_t *rand) {\n-    struct amino_acid *lookup[LOOKUP_SIZE];\n-    char line_buffer[LINE_LEN + 1];\n-    int i, j;\n-\n-    line_buffer[LINE_LEN] = '\\n';\n-\n-    fill_lookup(lookup, amino_acid, amino_acid_size);\n-\n-    fputs_unlocked(title, stdout);\n-\n-    for (i = 0, j = 0; i < n; i++, j++) {\n-        if (j == LINE_LEN) {\n-            fwrite_unlocked(line_buffer, LINE_LEN + 1, 1, stdout);\n-            j = 0;\n-        }\n-\n-        float r = random_next_lookup(rand);\n-        struct amino_acid *u = lookup[(short)r];\n-        while (unlikely(u->cprob_lookup < r)) {\n-            ++u;\n-        }\n-        line_buffer[j] = u->sym;\n-    }\n-    line_buffer[j] = '\\n';\n-    fwrite_unlocked(line_buffer, j + 1, 1, stdout);\n-}\n-\n-struct amino_acid amino_acid[] = {\n-   { 'a', 0.27 },\n-   { 'c', 0.12 },\n-   { 'g', 0.12 },\n-   { 't', 0.27 },\n-\n-   { 'B', 0.02 },\n-   { 'D', 0.02 },\n-   { 'H', 0.02 },\n-   { 'K', 0.02 },\n-   { 'M', 0.02 },\n-   { 'N', 0.02 },\n-   { 'R', 0.02 },\n-   { 'S', 0.02 },\n-   { 'V', 0.02 },\n-   { 'W', 0.02 },\n-   { 'Y', 0.02 },\n-};\n-\n-struct amino_acid homo_sapiens[] = {\n-   { 'a', 0.3029549426680 },\n-   { 'c', 0.1979883004921 },\n-   { 'g', 0.1975473066391 },\n-   { 't', 0.3015094502008 },\n-};\n-\n-static const char alu[] =\n-   \"GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTG\"\n-   \"GGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGA\"\n-   \"GACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAA\"\n-   \"AATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAAT\"\n-   \"CCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAAC\"\n-   \"CCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTG\"\n-   \"CACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA\";\n-\n-int\n-main(int argc, const char **argv) {\n-    int n = argc > 1 ? atoi( argv[1] ) : 512;\n-    random_t rand;\n-\n-    random_init(&rand);\n-\n-    repeat(alu, \">ONE Homo sapiens alu\\n\", n*2);\n-    randomize(amino_acid, ARRAY_SIZE(amino_acid),\n-            \">TWO IUB ambiguity codes\\n\", n*3, &rand);\n-    randomize(homo_sapiens, ARRAY_SIZE(homo_sapiens),\n-            \">THREE Homo sapiens frequency\\n\", n*5, &rand);\n-\n-    return 0;\n-}"}, {"sha": "17ff5dae55da47bed7e548427155a9b7d1558299", "filename": "gcc/testsuite/go.test/test/bench/shootout/fasta.go", "status": "removed", "additions": 0, "deletions": 205, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,205 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * Based on C program by by Petr Prokhorenkov.\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"os\"\n-)\n-\n-var out = make(buffer, 0, 32768)\n-\n-var n = flag.Int(\"n\", 1000, \"length of result\")\n-\n-const Line = 60\n-\n-func Repeat(alu []byte, n int) {\n-\tbuf := append(alu, alu...)\n-\toff := 0\n-\tfor n > 0 {\n-\t\tm := n\n-\t\tif m > Line {\n-\t\t\tm = Line\n-\t\t}\n-\t\tbuf1 := out.NextWrite(m + 1)\n-\t\tcopy(buf1, buf[off:])\n-\t\tbuf1[m] = '\\n'\n-\t\tif off += m; off >= len(alu) {\n-\t\t\toff -= len(alu)\n-\t\t}\n-\t\tn -= m\n-\t}\n-}\n-\n-const (\n-\tIM = 139968\n-\tIA = 3877\n-\tIC = 29573\n-\n-\tLookupSize          = 4096\n-\tLookupScale float64 = LookupSize - 1\n-)\n-\n-var rand uint32 = 42\n-\n-type Acid struct {\n-\tsym   byte\n-\tprob  float64\n-\tcprob float64\n-\tnext  *Acid\n-}\n-\n-func computeLookup(acid []Acid) *[LookupSize]*Acid {\n-\tvar lookup [LookupSize]*Acid\n-\tvar p float64\n-\tfor i := range acid {\n-\t\tp += acid[i].prob\n-\t\tacid[i].cprob = p * LookupScale\n-\t\tif i > 0 {\n-\t\t\tacid[i-1].next = &acid[i]\n-\t\t}\n-\t}\n-\tacid[len(acid)-1].cprob = 1.0 * LookupScale\n-\n-\tj := 0\n-\tfor i := range lookup {\n-\t\tfor acid[j].cprob < float64(i) {\n-\t\t\tj++\n-\t\t}\n-\t\tlookup[i] = &acid[j]\n-\t}\n-\n-\treturn &lookup\n-}\n-\n-func Random(acid []Acid, n int) {\n-\tlookup := computeLookup(acid)\n-\tfor n > 0 {\n-\t\tm := n\n-\t\tif m > Line {\n-\t\t\tm = Line\n-\t\t}\n-\t\tbuf := out.NextWrite(m + 1)\n-\t\tf := LookupScale / IM\n-\t\tmyrand := rand\n-\t\tfor i := 0; i < m; i++ {\n-\t\t\tmyrand = (myrand*IA + IC) % IM\n-\t\t\tr := float64(int(myrand)) * f\n-\t\t\ta := lookup[int(r)]\n-\t\t\tfor a.cprob < r {\n-\t\t\t\ta = a.next\n-\t\t\t}\n-\t\t\tbuf[i] = a.sym\n-\t\t}\n-\t\trand = myrand\n-\t\tbuf[m] = '\\n'\n-\t\tn -= m\n-\t}\n-}\n-\n-func main() {\n-\tdefer out.Flush()\n-\n-\tflag.Parse()\n-\n-\tiub := []Acid{\n-\t\t{prob: 0.27, sym: 'a'},\n-\t\t{prob: 0.12, sym: 'c'},\n-\t\t{prob: 0.12, sym: 'g'},\n-\t\t{prob: 0.27, sym: 't'},\n-\t\t{prob: 0.02, sym: 'B'},\n-\t\t{prob: 0.02, sym: 'D'},\n-\t\t{prob: 0.02, sym: 'H'},\n-\t\t{prob: 0.02, sym: 'K'},\n-\t\t{prob: 0.02, sym: 'M'},\n-\t\t{prob: 0.02, sym: 'N'},\n-\t\t{prob: 0.02, sym: 'R'},\n-\t\t{prob: 0.02, sym: 'S'},\n-\t\t{prob: 0.02, sym: 'V'},\n-\t\t{prob: 0.02, sym: 'W'},\n-\t\t{prob: 0.02, sym: 'Y'},\n-\t}\n-\n-\thomosapiens := []Acid{\n-\t\t{prob: 0.3029549426680, sym: 'a'},\n-\t\t{prob: 0.1979883004921, sym: 'c'},\n-\t\t{prob: 0.1975473066391, sym: 'g'},\n-\t\t{prob: 0.3015094502008, sym: 't'},\n-\t}\n-\n-\talu := []byte(\n-\t\t\"GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\" +\n-\t\t\t\"GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\" +\n-\t\t\t\"CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\" +\n-\t\t\t\"ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\" +\n-\t\t\t\"GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\" +\n-\t\t\t\"AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\" +\n-\t\t\t\"AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA\")\n-\n-\tout.WriteString(\">ONE Homo sapiens alu\\n\")\n-\tRepeat(alu, 2**n)\n-\tout.WriteString(\">TWO IUB ambiguity codes\\n\")\n-\tRandom(iub, 3**n)\n-\tout.WriteString(\">THREE Homo sapiens frequency\\n\")\n-\tRandom(homosapiens, 5**n)\n-}\n-\n-type buffer []byte\n-\n-func (b *buffer) Flush() {\n-\tp := *b\n-\tif len(p) > 0 {\n-\t\tos.Stdout.Write(p)\n-\t}\n-\t*b = p[0:0]\n-}\n-\n-func (b *buffer) WriteString(s string) {\n-\tp := b.NextWrite(len(s))\n-\tcopy(p, s)\n-}\n-\n-func (b *buffer) NextWrite(n int) []byte {\n-\tp := *b\n-\tif len(p)+n > cap(p) {\n-\t\tb.Flush()\n-\t\tp = *b\n-\t}\n-\tout := p[len(p) : len(p)+n]\n-\t*b = p[:len(p)+n]\n-\treturn out\n-}"}, {"sha": "f1caba0d628000ab62a51a1b731e61bb0db8d559", "filename": "gcc/testsuite/go.test/test/bench/shootout/fasta.txt", "status": "removed", "additions": 0, "deletions": 171, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ffasta.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,171 +0,0 @@\n->ONE Homo sapiens alu\n-GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGA\n-TCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACT\n-AAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAG\n-GCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCG\n-CCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGT\n-GGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCA\n-GGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAA\n-TTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAG\n-AATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCA\n-GCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGT\n-AATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACC\n-AGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTG\n-GTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACC\n-CGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAG\n-AGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTT\n-TGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACA\n-TGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCT\n-GTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGG\n-TTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGT\n-CTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGG\n-CGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCG\n-TCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTA\n-CTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCG\n-AGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCG\n-GGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACC\n-TGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAA\n-TACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGA\n-GGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACT\n-GCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTC\n-ACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGT\n-TCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGC\n-CGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCG\n-CTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTG\n-GGCGACAGAGCGAGACTCCG\n->TWO IUB ambiguity codes\n-cttBtatcatatgctaKggNcataaaSatgtaaaDcDRtBggDtctttataattcBgtcg\n-tactDtDagcctatttSVHtHttKtgtHMaSattgWaHKHttttagacatWatgtRgaaa\n-NtactMcSMtYtcMgRtacttctWBacgaaatatagScDtttgaagacacatagtVgYgt\n-cattHWtMMWcStgttaggKtSgaYaaccWStcgBttgcgaMttBYatcWtgacaYcaga\n-gtaBDtRacttttcWatMttDBcatWtatcttactaBgaYtcttgttttttttYaaScYa\n-HgtgttNtSatcMtcVaaaStccRcctDaataataStcYtRDSaMtDttgttSagtRRca\n-tttHatSttMtWgtcgtatSSagactYaaattcaMtWatttaSgYttaRgKaRtccactt\n-tattRggaMcDaWaWagttttgacatgttctacaaaRaatataataaMttcgDacgaSSt\n-acaStYRctVaNMtMgtaggcKatcttttattaaaaagVWaHKYagtttttatttaacct\n-tacgtVtcVaattVMBcttaMtttaStgacttagattWWacVtgWYagWVRctDattBYt\n-gtttaagaagattattgacVatMaacattVctgtBSgaVtgWWggaKHaatKWcBScSWa\n-accRVacacaaactaccScattRatatKVtactatatttHttaagtttSKtRtacaaagt\n-RDttcaaaaWgcacatWaDgtDKacgaacaattacaRNWaatHtttStgttattaaMtgt\n-tgDcgtMgcatBtgcttcgcgaDWgagctgcgaggggVtaaScNatttacttaatgacag\n-cccccacatYScaMgtaggtYaNgttctgaMaacNaMRaacaaacaKctacatagYWctg\n-ttWaaataaaataRattagHacacaagcgKatacBttRttaagtatttccgatctHSaat\n-actcNttMaagtattMtgRtgaMgcataatHcMtaBSaRattagttgatHtMttaaKagg\n-YtaaBataSaVatactWtataVWgKgttaaaacagtgcgRatatacatVtHRtVYataSa\n-KtWaStVcNKHKttactatccctcatgWHatWaRcttactaggatctataDtDHBttata\n-aaaHgtacVtagaYttYaKcctattcttcttaataNDaaggaaaDYgcggctaaWSctBa\n-aNtgctggMBaKctaMVKagBaactaWaDaMaccYVtNtaHtVWtKgRtcaaNtYaNacg\n-gtttNattgVtttctgtBaWgtaattcaagtcaVWtactNggattctttaYtaaagccgc\n-tcttagHVggaYtgtNcDaVagctctctKgacgtatagYcctRYHDtgBattDaaDgccK\n-tcHaaStttMcctagtattgcRgWBaVatHaaaataYtgtttagMDMRtaataaggatMt\n-ttctWgtNtgtgaaaaMaatatRtttMtDgHHtgtcattttcWattRSHcVagaagtacg\n-ggtaKVattKYagactNaatgtttgKMMgYNtcccgSKttctaStatatNVataYHgtNa\n-BKRgNacaactgatttcctttaNcgatttctctataScaHtataRagtcRVttacDSDtt\n-aRtSatacHgtSKacYagttMHtWataggatgactNtatSaNctataVtttRNKtgRacc\n-tttYtatgttactttttcctttaaacatacaHactMacacggtWataMtBVacRaSaatc\n-cgtaBVttccagccBcttaRKtgtgcctttttRtgtcagcRttKtaaacKtaaatctcac\n-aattgcaNtSBaaccgggttattaaBcKatDagttactcttcattVtttHaaggctKKga\n-tacatcBggScagtVcacattttgaHaDSgHatRMaHWggtatatRgccDttcgtatcga\n-aacaHtaagttaRatgaVacttagattVKtaaYttaaatcaNatccRttRRaMScNaaaD\n-gttVHWgtcHaaHgacVaWtgttScactaagSgttatcttagggDtaccagWattWtRtg\n-ttHWHacgattBtgVcaYatcggttgagKcWtKKcaVtgaYgWctgYggVctgtHgaNcV\n-taBtWaaYatcDRaaRtSctgaHaYRttagatMatgcatttNattaDttaattgttctaa\n-ccctcccctagaWBtttHtBccttagaVaatMcBHagaVcWcagBVttcBtaYMccagat\n-gaaaaHctctaacgttagNWRtcggattNatcRaNHttcagtKttttgWatWttcSaNgg\n-gaWtactKKMaacatKatacNattgctWtatctaVgagctatgtRaHtYcWcttagccaa\n-tYttWttaWSSttaHcaaaaagVacVgtaVaRMgattaVcDactttcHHggHRtgNcctt\n-tYatcatKgctcctctatVcaaaaKaaaagtatatctgMtWtaaaacaStttMtcgactt\n-taSatcgDataaactaaacaagtaaVctaggaSccaatMVtaaSKNVattttgHccatca\n-cBVctgcaVatVttRtactgtVcaattHgtaaattaaattttYtatattaaRSgYtgBag\n-aHSBDgtagcacRHtYcBgtcacttacactaYcgctWtattgSHtSatcataaatataHt\n-cgtYaaMNgBaatttaRgaMaatatttBtttaaaHHKaatctgatWatYaacttMctctt\n-ttVctagctDaaagtaVaKaKRtaacBgtatccaaccactHHaagaagaaggaNaaatBW\n-attccgStaMSaMatBttgcatgRSacgttVVtaaDMtcSgVatWcaSatcttttVatag\n-ttactttacgatcaccNtaDVgSRcgVcgtgaacgaNtaNatatagtHtMgtHcMtagaa\n-attBgtataRaaaacaYKgtRccYtatgaagtaataKgtaaMttgaaRVatgcagaKStc\n-tHNaaatctBBtcttaYaBWHgtVtgacagcaRcataWctcaBcYacYgatDgtDHccta\n->THREE Homo sapiens frequency\n-aacacttcaccaggtatcgtgaaggctcaagattacccagagaacctttgcaatataaga\n-atatgtatgcagcattaccctaagtaattatattctttttctgactcaaagtgacaagcc\n-ctagtgtatattaaatcggtatatttgggaaattcctcaaactatcctaatcaggtagcc\n-atgaaagtgatcaaaaaagttcgtacttataccatacatgaattctggccaagtaaaaaa\n-tagattgcgcaaaattcgtaccttaagtctctcgccaagatattaggatcctattactca\n-tatcgtgtttttctttattgccgccatccccggagtatctcacccatccttctcttaaag\n-gcctaatattacctatgcaaataaacatatattgttgaaaattgagaacctgatcgtgat\n-tcttatgtgtaccatatgtatagtaatcacgcgactatatagtgctttagtatcgcccgt\n-gggtgagtgaatattctgggctagcgtgagatagtttcttgtcctaatatttttcagatc\n-gaatagcttctatttttgtgtttattgacatatgtcgaaactccttactcagtgaaagtc\n-atgaccagatccacgaacaatcttcggaatcagtctcgttttacggcggaatcttgagtc\n-taacttatatcccgtcgcttactttctaacaccccttatgtatttttaaaattacgttta\n-ttcgaacgtacttggcggaagcgttattttttgaagtaagttacattgggcagactcttg\n-acattttcgatacgactttctttcatccatcacaggactcgttcgtattgatatcagaag\n-ctcgtgatgattagttgtcttctttaccaatactttgaggcctattctgcgaaatttttg\n-ttgccctgcgaacttcacataccaaggaacacctcgcaacatgccttcatatccatcgtt\n-cattgtaattcttacacaatgaatcctaagtaattacatccctgcgtaaaagatggtagg\n-ggcactgaggatatattaccaagcatttagttatgagtaatcagcaatgtttcttgtatt\n-aagttctctaaaatagttacatcgtaatgttatctcgggttccgcgaataaacgagatag\n-attcattatatatggccctaagcaaaaacctcctcgtattctgttggtaattagaatcac\n-acaatacgggttgagatattaattatttgtagtacgaagagatataaaaagatgaacaat\n-tactcaagtcaagatgtatacgggatttataataaaaatcgggtagagatctgctttgca\n-attcagacgtgccactaaatcgtaatatgtcgcgttacatcagaaagggtaactattatt\n-aattaataaagggcttaatcactacatattagatcttatccgatagtcttatctattcgt\n-tgtatttttaagcggttctaattcagtcattatatcagtgctccgagttctttattattg\n-ttttaaggatgacaaaatgcctcttgttataacgctgggagaagcagactaagagtcgga\n-gcagttggtagaatgaggctgcaaaagacggtctcgacgaatggacagactttactaaac\n-caatgaaagacagaagtagagcaaagtctgaagtggtatcagcttaattatgacaaccct\n-taatacttccctttcgccgaatactggcgtggaaaggttttaaaagtcgaagtagttaga\n-ggcatctctcgctcataaataggtagactactcgcaatccaatgtgactatgtaatactg\n-ggaacatcagtccgcgatgcagcgtgtttatcaaccgtccccactcgcctggggagacat\n-gagaccacccccgtggggattattagtccgcagtaatcgactcttgacaatccttttcga\n-ttatgtcatagcaatttacgacagttcagcgaagtgactactcggcgaaatggtattact\n-aaagcattcgaacccacatgaatgtgattcttggcaatttctaatccactaaagcttttc\n-cgttgaatctggttgtagatatttatataagttcactaattaagatcacggtagtatatt\n-gatagtgatgtctttgcaagaggttggccgaggaatttacggattctctattgatacaat\n-ttgtctggcttataactcttaaggctgaaccaggcgtttttagacgacttgatcagctgt\n-tagaatggtttggactccctctttcatgtcagtaacatttcagccgttattgttacgata\n-tgcttgaacaatattgatctaccacacacccatagtatattttataggtcatgctgttac\n-ctacgagcatggtattccacttcccattcaatgagtattcaacatcactagcctcagaga\n-tgatgacccacctctaataacgtcacgttgcggccatgtgaaacctgaacttgagtagac\n-gatatcaagcgctttaaattgcatataacatttgagggtaaagctaagcggatgctttat\n-ataatcaatactcaataataagatttgattgcattttagagttatgacacgacatagttc\n-actaacgagttactattcccagatctagactgaagtactgatcgagacgatccttacgtc\n-gatgatcgttagttatcgacttaggtcgggtctctagcggtattggtacttaaccggaca\n-ctatactaataacccatgatcaaagcataacagaatacagacgataatttcgccaacata\n-tatgtacagaccccaagcatgagaagctcattgaaagctatcattgaagtcccgctcaca\n-atgtgtcttttccagacggtttaactggttcccgggagtcctggagtttcgacttacata\n-aatggaaacaatgtattttgctaatttatctatagcgtcatttggaccaatacagaatat\n-tatgttgcctagtaatccactataacccgcaagtgctgatagaaaatttttagacgattt\n-ataaatgccccaagtatccctcccgtgaatcctccgttatactaattagtattcgttcat\n-acgtataccgcgcatatatgaacatttggcgataaggcgcgtgaattgttacgtgacaga\n-gatagcagtttcttgtgatatggttaacagacgtacatgaagggaaactttatatctata\n-gtgatgcttccgtagaaataccgccactggtctgccaatgatgaagtatgtagctttagg\n-tttgtactatgaggctttcgtttgtttgcagagtataacagttgcgagtgaaaaaccgac\n-gaatttatactaatacgctttcactattggctacaaaatagggaagagtttcaatcatga\n-gagggagtatatggatgctttgtagctaaaggtagaacgtatgtatatgctgccgttcat\n-tcttgaaagatacataagcgataagttacgacaattataagcaacatccctaccttcgta\n-acgatttcactgttactgcgcttgaaatacactatggggctattggcggagagaagcaga\n-tcgcgccgagcatatacgagacctataatgttgatgatagagaaggcgtctgaattgata\n-catcgaagtacactttctttcgtagtatctctcgtcctctttctatctccggacacaaga\n-attaagttatatatatagagtcttaccaatcatgttgaatcctgattctcagagttcttt\n-ggcgggccttgtgatgactgagaaacaatgcaatattgctccaaatttcctaagcaaatt\n-ctcggttatgttatgttatcagcaaagcgttacgttatgttatttaaatctggaatgacg\n-gagcgaagttcttatgtcggtgtgggaataattcttttgaagacagcactccttaaataa\n-tatcgctccgtgtttgtatttatcgaatgggtctgtaaccttgcacaagcaaatcggtgg\n-tgtatatatcggataacaattaatacgatgttcatagtgacagtatactgatcgagtcct\n-ctaaagtcaattacctcacttaacaatctcattgatgttgtgtcattcccggtatcgccc\n-gtagtatgtgctctgattgaccgagtgtgaaccaaggaacatctactaatgcctttgtta\n-ggtaagatctctctgaattccttcgtgccaacttaaaacattatcaaaatttcttctact\n-tggattaactacttttacgagcatggcaaattcccctgtggaagacggttcattattatc\n-ggaaaccttatagaaattgcgtgttgactgaaattagatttttattgtaagagttgcatc\n-tttgcgattcctctggtctagcttccaatgaacagtcctcccttctattcgacatcgggt\n-ccttcgtacatgtctttgcgatgtaataattaggttcggagtgtggccttaatgggtgca\n-actaggaatacaacgcaaatttgctgacatgatagcaaatcggtatgccggcaccaaaac\n-gtgctccttgcttagcttgtgaatgagactcagtagttaaataaatccatatctgcaatc\n-gattccacaggtattgtccactatctttgaactactctaagagatacaagcttagctgag\n-accgaggtgtatatgactacgctgatatctgtaaggtaccaatgcaggcaaagtatgcga\n-gaagctaataccggctgtttccagctttataagattaaaatttggctgtcctggcggcct\n-cagaattgttctatcgtaatcagttggttcattaattagctaagtacgaggtacaactta\n-tctgtcccagaacagctccacaagtttttttacagccgaaacccctgtgtgaatcttaat\n-atccaagcgcgttatctgattagagtttacaactcagtattttatcagtacgttttgttt\n-ccaacattacccggtatgacaaaatgacgccacgtgtcgaataatggtctgaccaatgta\n-ggaagtgaaaagataaatat"}, {"sha": "96c80d8f0c8021b4b9d7fcda536386cae8f7ea86", "filename": "gcc/testsuite/go.test/test/bench/shootout/k-nucleotide-parallel.go", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide-parallel.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide-parallel.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide-parallel.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,157 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- */\n-\n-package main\n-\n-import (\n-\t\"bufio\"\n-\t\"bytes\"\n-\t\"fmt\"\n-\t\"io/ioutil\"\n-\t\"os\"\n-\t\"runtime\"\n-\t\"sort\"\n-)\n-\n-func count(data string, n int) map[string]int {\n-\tcounts := make(map[string]int)\n-\ttop := len(data) - n\n-\tfor i := 0; i <= top; i++ {\n-\t\ts := data[i : i+n]\n-\t\tcounts[s]++\n-\t}\n-\treturn counts\n-}\n-\n-func countOne(data string, s string) int {\n-\treturn count(data, len(s))[s]\n-}\n-\n-type kNuc struct {\n-\tname  string\n-\tcount int\n-}\n-\n-type kNucArray []kNuc\n-\n-func (kn kNucArray) Len() int      { return len(kn) }\n-func (kn kNucArray) Swap(i, j int) { kn[i], kn[j] = kn[j], kn[i] }\n-func (kn kNucArray) Less(i, j int) bool {\n-\tif kn[i].count == kn[j].count {\n-\t\treturn kn[i].name > kn[j].name // sort down\n-\t}\n-\treturn kn[i].count > kn[j].count\n-}\n-\n-func sortedArray(m map[string]int) kNucArray {\n-\tkn := make(kNucArray, len(m))\n-\ti := 0\n-\tfor k, v := range m {\n-\t\tkn[i] = kNuc{k, v}\n-\t\ti++\n-\t}\n-\tsort.Sort(kn)\n-\treturn kn\n-}\n-\n-func printKnucs(a kNucArray) {\n-\tsum := 0\n-\tfor _, kn := range a {\n-\t\tsum += kn.count\n-\t}\n-\tfor _, kn := range a {\n-\t\tfmt.Printf(\"%s %.3f\\n\", kn.name, 100*float64(kn.count)/float64(sum))\n-\t}\n-\tfmt.Print(\"\\n\")\n-}\n-\n-func main() {\n-\truntime.GOMAXPROCS(4)\n-\tin := bufio.NewReader(os.Stdin)\n-\tthree := []byte(\">THREE \")\n-\tfor {\n-\t\tline, err := in.ReadSlice('\\n')\n-\t\tif err != nil {\n-\t\t\tfmt.Fprintln(os.Stderr, \"ReadLine err:\", err)\n-\t\t\tos.Exit(2)\n-\t\t}\n-\t\tif line[0] == '>' && bytes.Equal(line[0:len(three)], three) {\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\tdata, err := ioutil.ReadAll(in)\n-\tif err != nil {\n-\t\tfmt.Fprintln(os.Stderr, \"ReadAll err:\", err)\n-\t\tos.Exit(2)\n-\t}\n-\t// delete the newlines and convert to upper case\n-\tj := 0\n-\tfor i := 0; i < len(data); i++ {\n-\t\tif data[i] != '\\n' {\n-\t\t\tdata[j] = data[i] &^ ' ' // upper case\n-\t\t\tj++\n-\t\t}\n-\t}\n-\tstr := string(data[0:j])\n-\n-\tvar arr1, arr2 kNucArray\n-\tcountsdone := make(chan bool)\n-\tgo func() {\n-\t\tarr1 = sortedArray(count(str, 1))\n-\t\tcountsdone <- true\n-\t}()\n-\tgo func() {\n-\t\tarr2 = sortedArray(count(str, 2))\n-\t\tcountsdone <- true\n-\t}()\n-\n-\tinterests := []string{\"GGT\", \"GGTA\", \"GGTATT\", \"GGTATTTTAATT\", \"GGTATTTTAATTTATAGT\"}\n-\tresults := make([]chan string, len(interests))\n-\tfor i, s := range interests {\n-\t\tch := make(chan string)\n-\t\tresults[i] = ch\n-\t\tgo func(result chan string, ss string) {\n-\t\t\tresult <- fmt.Sprintf(\"%d %s\\n\", countOne(str, ss), ss)\n-\t\t}(ch, s)\n-\t}\n-\t<-countsdone\n-\t<-countsdone\n-\tprintKnucs(arr1)\n-\tprintKnucs(arr2)\n-\tfor _, rc := range results {\n-\t\tfmt.Print(<-rc)\n-\t}\n-\n-}"}, {"sha": "84169b8ec36c670035ca85db716a4d166144cfc9", "filename": "gcc/testsuite/go.test/test/bench/shootout/k-nucleotide-parallel.txt", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide-parallel.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide-parallel.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide-parallel.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,27 +0,0 @@\n-T 31.520\n-A 29.600\n-C 19.480\n-G 19.400\n-\n-AT 9.922\n-TT 9.602\n-TA 9.402\n-AA 8.402\n-GA 6.321\n-TC 6.301\n-TG 6.201\n-GT 6.041\n-CT 5.961\n-AG 5.841\n-CA 5.461\n-AC 5.441\n-CC 4.041\n-CG 4.021\n-GC 3.701\n-GG 3.341\n-\n-54 GGT\n-24 GGTA\n-4 GGTATT\n-0 GGTATTTTAATT\n-0 GGTATTTTAATTTATAGT"}, {"sha": "9c30620209e24e54059a9e0207c5bdf2f7f9829d", "filename": "gcc/testsuite/go.test/test/bench/shootout/k-nucleotide.c", "status": "removed", "additions": 0, "deletions": 228, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,228 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-#include <stdio.h>\n-#include <string.h>\n-#include <ctype.h>\n-#include <stdlib.h>\n-#include <glib.h>\n-\n-typedef struct stat_s stat_t;\n-struct stat_s\n-{\n-   const gchar *key;\n-   long stat;\n-};\n-\n-#define MAX_ELM (8192 / sizeof (stat_t))\n-\n-static int\n-generate_frequencies (int fl, char *buffer, long buflen,\n-\t\t      GHashTable *ht, GTrashStack **ts, GPtrArray *roots, GStringChunk *sc)\n-{\n-   gchar *key;\n-   long i;\n-\n-   if (fl > buflen) return 0;\n-   if (fl == 0) return 0;\n-\n-   for (i = 0; i < buflen - fl + 1; ++i)\n-     {\n-\tchar nulled;\n-\tstat_t *stat;\n-\n-\tnulled = buffer[i + fl];\n-\tbuffer[i + fl] = '\\0';\n-\n-\tkey = g_string_chunk_insert_const(sc, buffer + i);\n-\n-\tstat = g_hash_table_lookup(ht, key);\n-\tif (!stat)\n-\t  {\n-\t     stat = g_trash_stack_pop(ts);\n-\t     if (!stat)\n-\t       {\n-\t\t  int j;\n-\n-\t\t  stat = malloc(sizeof (stat_t) * MAX_ELM);\n-\t\t  g_ptr_array_add(roots, stat);\n-\n-\t\t  for (j = 1; j < MAX_ELM; ++j)\n-\t\t    g_trash_stack_push(ts, stat + j);\n-\t       }\n-\t     stat->stat = 1;\n-\t     stat->key = key;\n-\n-\t     g_hash_table_insert(ht, key, stat);\n-\t  }\n-\telse\n-\t  stat->stat++;\n-\n-\tbuffer[i + fl] = nulled;\n-     }\n-\n-   return buflen - fl + 1;\n-}\n-\n-static int\n-cmp_func(gconstpointer a, gconstpointer b)\n-{\n-   const stat_t *left = a;\n-   const stat_t *right = b;\n-\n-   return right->stat - left->stat;\n-}\n-\n-static void\n-sorted_list(gpointer key, gpointer value, gpointer user_data)\n-{\n-   stat_t *data = value;\n-   GList **lst = user_data;\n-\n-   *lst = g_list_insert_sorted(*lst, data, cmp_func);\n-}\n-\n-static void\n-display_stat(gpointer data, gpointer user_data)\n-{\n-   long *total = user_data;\n-   stat_t *st = data;\n-\n-   printf(\"%s %.3f\\n\", st->key, 100 * (float) st->stat / *total);\n-}\n-\n-void\n-write_frequencies (int fl, char *buffer, long buflen, GTrashStack **ts, GPtrArray *roots)\n-{\n-   GStringChunk *sc;\n-   GHashTable *ht;\n-   GList *lst;\n-   long total;\n-\n-   ht = g_hash_table_new_full(g_str_hash, g_str_equal, NULL /* free key */, NULL /* free value */);\n-   sc = g_string_chunk_new(buflen);\n-   lst = NULL;\n-\n-   total = generate_frequencies (fl, buffer, buflen, ht, ts, roots, sc);\n-\n-   if (!total) goto on_error;\n-\n-   g_hash_table_foreach(ht, sorted_list, &lst);\n-   g_list_foreach(lst, display_stat, &total);\n-   g_list_free(lst);\n-\n- on_error:\n-   g_hash_table_destroy(ht);\n-   g_string_chunk_free(sc);\n-}\n-\n-void\n-write_count (char *searchFor, char *buffer, long buflen, GTrashStack **ts, GPtrArray *roots)\n-{\n-   GStringChunk *sc;\n-   GHashTable *ht;\n-   stat_t *result;\n-   GList *lst;\n-   long total;\n-   long fl;\n-\n-   fl = strlen(searchFor);\n-\n-   ht = g_hash_table_new_full(g_str_hash, g_str_equal, NULL /* free key */, NULL /* free value */);\n-   sc = g_string_chunk_new(buflen);\n-   lst = NULL;\n-   result = NULL;\n-\n-   total = generate_frequencies (fl, buffer, buflen, ht, ts, roots, sc);\n-\n-   if (!total) goto on_error;\n-\n-   result = g_hash_table_lookup(ht, searchFor);\n-\n- on_error:\n-   printf(\"%ld\\t%s\\n\", result ? result->stat : 0, searchFor);\n-\n-   g_hash_table_destroy(ht);\n-   g_string_chunk_free(sc);\n-}\n-\n-int\n-main ()\n-{\n-   char buffer[4096];\n-   GTrashStack *ts;\n-   GPtrArray *roots;\n-   GString *stuff;\n-   gchar *s;\n-   int len;\n-\n-   roots = g_ptr_array_new();\n-   ts = NULL;\n-\n-   while (fgets(buffer, sizeof (buffer), stdin))\n-     if (strncmp(buffer, \">THREE\", 6) == 0)\n-       break;\n-\n-   stuff = g_string_new(NULL);\n-\n-   while (fgets(buffer, sizeof (buffer), stdin))\n-     {\n-\tsize_t sz;\n-\n-\tif (buffer[0] == '>')\n-\t  break;\n-\n-\tsz = strlen(buffer);\n-\tif (buffer[sz - 1] == '\\n')\n-\t  --sz;\n-\n-\tstuff = g_string_append_len(stuff, buffer, sz);\n-     }\n-\n-   stuff = g_string_ascii_up(stuff);\n-   len = stuff->len;\n-   s = g_string_free(stuff, FALSE);\n-\n-   write_frequencies(1, s, len, &ts, roots);\n-   printf(\"\\n\");\n-   write_frequencies(2, s, len, &ts, roots);\n-   printf(\"\\n\");\n-   write_count(\"GGT\", s, len, &ts, roots);\n-   write_count(\"GGTA\", s, len, &ts, roots);\n-   write_count(\"GGTATT\", s, len, &ts, roots);\n-   write_count(\"GGTATTTTAATT\", s, len, &ts, roots);\n-   write_count(\"GGTATTTTAATTTATAGT\", s, len, &ts, roots);\n-\n-   free(s);\n-\n-   g_ptr_array_foreach(roots, (GFunc)free, NULL);\n-   g_ptr_array_free(roots, TRUE);\n-\n-   return 0;\n-}"}, {"sha": "fdc98ed472505be7bba50fb60eaf50627fa1c94e", "filename": "gcc/testsuite/go.test/test/bench/shootout/k-nucleotide.go", "status": "removed", "additions": 0, "deletions": 140, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,140 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- */\n-\n-package main\n-\n-import (\n-\t\"bufio\"\n-\t\"bytes\"\n-\t\"fmt\"\n-\t\"io/ioutil\"\n-\t\"os\"\n-\t\"sort\"\n-)\n-\n-var in *bufio.Reader\n-\n-func count(data string, n int) map[string]int {\n-\tcounts := make(map[string]int)\n-\ttop := len(data) - n\n-\tfor i := 0; i <= top; i++ {\n-\t\ts := data[i : i+n]\n-\t\tcounts[s]++\n-\t}\n-\treturn counts\n-}\n-\n-func countOne(data string, s string) int {\n-\treturn count(data, len(s))[s]\n-}\n-\n-type kNuc struct {\n-\tname  string\n-\tcount int\n-}\n-\n-type kNucArray []kNuc\n-\n-func (kn kNucArray) Len() int      { return len(kn) }\n-func (kn kNucArray) Swap(i, j int) { kn[i], kn[j] = kn[j], kn[i] }\n-func (kn kNucArray) Less(i, j int) bool {\n-\tif kn[i].count == kn[j].count {\n-\t\treturn kn[i].name > kn[j].name // sort down\n-\t}\n-\treturn kn[i].count > kn[j].count\n-}\n-\n-func sortedArray(m map[string]int) kNucArray {\n-\tkn := make(kNucArray, len(m))\n-\ti := 0\n-\tfor k, v := range m {\n-\t\tkn[i].name = k\n-\t\tkn[i].count = v\n-\t\ti++\n-\t}\n-\tsort.Sort(kn)\n-\treturn kn\n-}\n-\n-func print(m map[string]int) {\n-\ta := sortedArray(m)\n-\tsum := 0\n-\tfor _, kn := range a {\n-\t\tsum += kn.count\n-\t}\n-\tfor _, kn := range a {\n-\t\tfmt.Printf(\"%s %.3f\\n\", kn.name, 100*float64(kn.count)/float64(sum))\n-\t}\n-}\n-\n-func main() {\n-\tin = bufio.NewReader(os.Stdin)\n-\tthree := []byte(\">THREE \")\n-\tfor {\n-\t\tline, err := in.ReadSlice('\\n')\n-\t\tif err != nil {\n-\t\t\tfmt.Fprintln(os.Stderr, \"ReadLine err:\", err)\n-\t\t\tos.Exit(2)\n-\t\t}\n-\t\tif line[0] == '>' && bytes.Equal(line[0:len(three)], three) {\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\tdata, err := ioutil.ReadAll(in)\n-\tif err != nil {\n-\t\tfmt.Fprintln(os.Stderr, \"ReadAll err:\", err)\n-\t\tos.Exit(2)\n-\t}\n-\t// delete the newlines and convert to upper case\n-\tj := 0\n-\tfor i := 0; i < len(data); i++ {\n-\t\tif data[i] != '\\n' {\n-\t\t\tdata[j] = data[i] &^ ' ' // upper case\n-\t\t\tj++\n-\t\t}\n-\t}\n-\tstr := string(data[0:j])\n-\n-\tprint(count(str, 1))\n-\tfmt.Print(\"\\n\")\n-\n-\tprint(count(str, 2))\n-\tfmt.Print(\"\\n\")\n-\n-\tinterests := []string{\"GGT\", \"GGTA\", \"GGTATT\", \"GGTATTTTAATT\", \"GGTATTTTAATTTATAGT\"}\n-\tfor _, s := range interests {\n-\t\tfmt.Printf(\"%d %s\\n\", countOne(str, s), s)\n-\t}\n-}"}, {"sha": "84169b8ec36c670035ca85db716a4d166144cfc9", "filename": "gcc/testsuite/go.test/test/bench/shootout/k-nucleotide.txt", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,27 +0,0 @@\n-T 31.520\n-A 29.600\n-C 19.480\n-G 19.400\n-\n-AT 9.922\n-TT 9.602\n-TA 9.402\n-AA 8.402\n-GA 6.321\n-TC 6.301\n-TG 6.201\n-GT 6.041\n-CT 5.961\n-AG 5.841\n-CA 5.461\n-AC 5.441\n-CC 4.041\n-CG 4.021\n-GC 3.701\n-GG 3.341\n-\n-54 GGT\n-24 GGTA\n-4 GGTATT\n-0 GGTATTTTAATT\n-0 GGTATTTTAATTTATAGT"}, {"sha": "c177c088ca6fbe6beec65e58bd1b607472efb43d", "filename": "gcc/testsuite/go.test/test/bench/shootout/mandelbrot.c", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,91 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Shootout\n-   http://shootout.alioth.debian.org/\n-\n-   contributed by Greg Buchholz\n-\n-   for the debian (AMD) machine...\n-   compile flags:  -O3 -ffast-math -march=athlon-xp -funroll-loops\n-\n-   for the gp4 (Intel) machine...\n-   compile flags:  -O3 -ffast-math -march=pentium4 -funroll-loops\n-*/\n-\n-#include<stdio.h>\n-\n-int main (int argc, char **argv)\n-{\n-    int w, h, bit_num = 0;\n-    char byte_acc = 0;\n-    int i, iter = 50;\n-    double x, y, limit = 2.0;\n-    double Zr, Zi, Cr, Ci, Tr, Ti;\n-\n-    w = h = atoi(argv[1]);\n-\n-    printf(\"P4\\n%d %d\\n\",w,h);\n-\n-    for(y=0;y<h;++y)\n-    {\n-        for(x=0;x<w;++x)\n-        {\n-            Zr = Zi = Tr = Ti = 0.0;\n-            Cr = (2.0*x/w - 1.5); Ci=(2.0*y/h - 1.0);\n-\n-            for (i=0;i<iter && (Tr+Ti <= limit*limit);++i)\n-            {\n-                Zi = 2.0*Zr*Zi + Ci;\n-                Zr = Tr - Ti + Cr;\n-                Tr = Zr * Zr;\n-                Ti = Zi * Zi;\n-            }\n-\n-            byte_acc <<= 1;\n-            if(Tr+Ti <= limit*limit) byte_acc |= 0x01;\n-\n-            ++bit_num;\n-\n-            if(bit_num == 8)\n-            {\n-                putc(byte_acc,stdout);\n-                byte_acc = 0;\n-                bit_num = 0;\n-            }\n-            else if(x == w-1)\n-            {\n-                byte_acc <<= (8-w%8);\n-                putc(byte_acc,stdout);\n-                byte_acc = 0;\n-                bit_num = 0;\n-            }\n-        }\n-    }\n-}"}, {"sha": "df60343c240d453c41eab40dba0302863645adfe", "filename": "gcc/testsuite/go.test/test/bench/shootout/mandelbrot.go", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,95 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * Based on mandelbrot.c contributed by Greg Buchholz\n- */\n-\n-package main\n-\n-import (\n-\t\"bufio\"\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"os\"\n-)\n-\n-var n = flag.Int(\"n\", 200, \"size\")\n-\n-func main() {\n-\tflag.Parse()\n-\tout := bufio.NewWriter(os.Stdout)\n-\tdefer out.Flush()\n-\n-\tw := float64(*n)\n-\th := float64(*n)\n-\tbit_num := 0\n-\tbyte_acc := byte(0)\n-\tconst Iter = 50\n-\tconst Zero float64 = 0\n-\tconst Limit = 2.0\n-\n-\tfmt.Fprintf(out, \"P4\\n%d %d\\n\", *n, *n)\n-\n-\tfor y := 0.0; y < h; y++ {\n-\t\tfor x := 0.0; x < w; x++ {\n-\t\t\tZr, Zi, Tr, Ti := Zero, Zero, Zero, Zero\n-\t\t\tCr := (2*x/w - 1.5)\n-\t\t\tCi := (2*y/h - 1.0)\n-\n-\t\t\tfor i := 0; i < Iter && (Tr+Ti <= Limit*Limit); i++ {\n-\t\t\t\tZi = 2*Zr*Zi + Ci\n-\t\t\t\tZr = Tr - Ti + Cr\n-\t\t\t\tTr = Zr * Zr\n-\t\t\t\tTi = Zi * Zi\n-\t\t\t}\n-\n-\t\t\tbyte_acc <<= 1\n-\t\t\tif Tr+Ti <= Limit*Limit {\n-\t\t\t\tbyte_acc |= 0x01\n-\t\t\t}\n-\n-\t\t\tbit_num++\n-\n-\t\t\tif bit_num == 8 {\n-\t\t\t\tout.WriteByte(byte_acc)\n-\t\t\t\tbyte_acc = 0\n-\t\t\t\tbit_num = 0\n-\t\t\t} else if x == w-1 {\n-\t\t\t\tbyte_acc <<= uint(8 - uint(*n)%8)\n-\t\t\t\tout.WriteByte(byte_acc)\n-\t\t\t\tbyte_acc = 0\n-\t\t\t\tbit_num = 0\n-\t\t\t}\n-\t\t}\n-\t}\n-}"}, {"sha": "2f7bbbc6b0a127b8883712eda12c04a786055753", "filename": "gcc/testsuite/go.test/test/bench/shootout/mandelbrot.txt", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db"}, {"sha": "19c43402c8c4bd6580eb7922d2328f2c80b6d3cd", "filename": "gcc/testsuite/go.test/test/bench/shootout/meteor-contest.c", "status": "removed", "additions": 0, "deletions": 626, "changes": 626, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,626 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by Christian Vosteen\n- */\n-\n-#include <stdlib.h>\n-#include <stdio.h>\n-#define TRUE 1\n-#define FALSE 0\n-\n-/* The board is a 50 cell hexagonal pattern.  For    . . . . .\n- * maximum speed the board will be implemented as     . . . . .\n- * 50 bits, which will fit into a 64 bit long long   . . . . .\n- * int.                                               . . . . .\n- *                                                   . . . . .\n- * I will represent 0's as empty cells and 1's        . . . . .\n- * as full cells.                                    . . . . .\n- *                                                    . . . . .\n- *                                                   . . . . .\n- *                                                    . . . . .\n- */\n-\n-unsigned long long board = 0xFFFC000000000000ULL;\n-\n-/* The puzzle pieces must be specified by the path followed\n- * from one end to the other along 12 hexagonal directions.\n- *\n- *   Piece 0   Piece 1   Piece 2   Piece 3   Piece 4\n- *\n- *  O O O O    O   O O   O O O     O O O     O   O\n- *         O    O O           O       O       O O\n- *                           O         O         O\n- *\n- *   Piece 5   Piece 6   Piece 7   Piece 8   Piece 9\n- *\n- *    O O O     O O       O O     O O        O O O O\n- *       O O       O O       O       O O O        O\n- *                  O       O O\n- *\n- * I had to make it 12 directions because I wanted all of the\n- * piece definitions to fit into the same size arrays.  It is\n- * not possible to define piece 4 in terms of the 6 cardinal\n- * directions in 4 moves.\n- */\n-\n-#define E     0\n-#define ESE   1\n-#define SE    2\n-#define S     3\n-#define SW    4\n-#define WSW   5\n-#define W     6\n-#define WNW   7\n-#define NW    8\n-#define N     9\n-#define NE    10\n-#define ENE   11\n-#define PIVOT 12\n-\n-char piece_def[10][4] = {\n-   {  E,  E,  E, SE},\n-   { SE,  E, NE,  E},\n-   {  E,  E, SE, SW},\n-   {  E,  E, SW, SE},\n-   { SE,  E, NE,  S},\n-   {  E,  E, SW,  E},\n-   {  E, SE, SE, NE},\n-   {  E, SE, SE,  W},\n-   {  E, SE,  E,  E},\n-   {  E,  E,  E, SW}\n-};\n-\n-\n-/* To minimize the amount of work done in the recursive solve function below,\n- * I'm going to allocate enough space for all legal rotations of each piece\n- * at each position on the board. That's 10 pieces x 50 board positions x\n- * 12 rotations.  However, not all 12 rotations will fit on every cell, so\n- * I'll have to keep count of the actual number that do.\n- * The pieces are going to be unsigned long long ints just like the board so\n- * they can be bitwise-anded with the board to determine if they fit.\n- * I'm also going to record the next possible open cell for each piece and\n- * location to reduce the burden on the solve function.\n- */\n-unsigned long long pieces[10][50][12];\n-int piece_counts[10][50];\n-char next_cell[10][50][12];\n-\n-/* Returns the direction rotated 60 degrees clockwise */\n-char rotate(char dir) {\n-   return (dir + 2) % PIVOT;\n-}\n-\n-/* Returns the direction flipped on the horizontal axis */\n-char flip(char dir) {\n-   return (PIVOT - dir) % PIVOT;\n-}\n-\n-\n-/* Returns the new cell index from the specified cell in the\n- * specified direction.  The index is only valid if the\n- * starting cell and direction have been checked by the\n- * out_of_bounds function first.\n- */\n-char shift(char cell, char dir) {\n-   switch(dir) {\n-      case E:\n-         return cell + 1;\n-      case ESE:\n-         if((cell / 5) % 2)\n-            return cell + 7;\n-         else\n-            return cell + 6;\n-      case SE:\n-         if((cell / 5) % 2)\n-            return cell + 6;\n-         else\n-            return cell + 5;\n-      case S:\n-         return cell + 10;\n-      case SW:\n-         if((cell / 5) % 2)\n-            return cell + 5;\n-         else\n-            return cell + 4;\n-      case WSW:\n-         if((cell / 5) % 2)\n-            return cell + 4;\n-         else\n-            return cell + 3;\n-      case W:\n-         return cell - 1;\n-      case WNW:\n-         if((cell / 5) % 2)\n-            return cell - 6;\n-         else\n-            return cell - 7;\n-      case NW:\n-         if((cell / 5) % 2)\n-            return cell - 5;\n-         else\n-            return cell - 6;\n-      case N:\n-         return cell - 10;\n-      case NE:\n-         if((cell / 5) % 2)\n-            return cell - 4;\n-         else\n-            return cell - 5;\n-      case ENE:\n-         if((cell / 5) % 2)\n-            return cell - 3;\n-         else\n-            return cell - 4;\n-      default:\n-         return cell;\n-   }\n-}\n-\n-/* Returns wether the specified cell and direction will land outside\n- * of the board.  Used to determine if a piece is at a legal board\n- * location or not.\n- */\n-char out_of_bounds(char cell, char dir) {\n-   char i;\n-   switch(dir) {\n-      case E:\n-         return cell % 5 == 4;\n-      case ESE:\n-         i = cell % 10;\n-         return i == 4 || i == 8 || i == 9 || cell >= 45;\n-      case SE:\n-         return cell % 10 == 9 || cell >= 45;\n-      case S:\n-         return cell >= 40;\n-      case SW:\n-         return cell % 10 == 0 || cell >= 45;\n-      case WSW:\n-         i = cell % 10;\n-         return i == 0 || i == 1 || i == 5 || cell >= 45;\n-      case W:\n-         return cell % 5 == 0;\n-      case WNW:\n-         i = cell % 10;\n-         return i == 0 || i == 1 || i == 5 || cell < 5;\n-      case NW:\n-         return cell % 10 == 0 || cell < 5;\n-      case N:\n-         return cell < 10;\n-      case NE:\n-         return cell % 10 == 9 || cell < 5;\n-      case ENE:\n-         i = cell % 10;\n-         return i == 4 || i == 8 || i == 9 || cell < 5;\n-      default:\n-         return FALSE;\n-   }\n-}\n-\n-/* Rotate a piece 60 degrees clockwise */\n-void rotate_piece(int piece) {\n-   int i;\n-   for(i = 0; i < 4; i++)\n-      piece_def[piece][i] = rotate(piece_def[piece][i]);\n-}\n-\n-/* Flip a piece along the horizontal axis */\n-void flip_piece(int piece) {\n-   int i;\n-   for(i = 0; i < 4; i++)\n-      piece_def[piece][i] = flip(piece_def[piece][i]);\n-}\n-\n-/* Convenience function to quickly calculate all of the indices for a piece */\n-void calc_cell_indices(char *cell, int piece, char index) {\n-   cell[0] = index;\n-   cell[1] = shift(cell[0], piece_def[piece][0]);\n-   cell[2] = shift(cell[1], piece_def[piece][1]);\n-   cell[3] = shift(cell[2], piece_def[piece][2]);\n-   cell[4] = shift(cell[3], piece_def[piece][3]);\n-}\n-\n-/* Convenience function to quickly calculate if a piece fits on the board */\n-int cells_fit_on_board(char *cell, int piece) {\n-   return (!out_of_bounds(cell[0], piece_def[piece][0]) &&\n-         !out_of_bounds(cell[1], piece_def[piece][1]) &&\n-         !out_of_bounds(cell[2], piece_def[piece][2]) &&\n-         !out_of_bounds(cell[3], piece_def[piece][3]));\n-}\n-\n-/* Returns the lowest index of the cells of a piece.\n- * I use the lowest index that a piece occupies as the index for looking up\n- * the piece in the solve function.\n- */\n-char minimum_of_cells(char *cell) {\n-   char minimum = cell[0];\n-   minimum = cell[1] < minimum ? cell[1] : minimum;\n-   minimum = cell[2] < minimum ? cell[2] : minimum;\n-   minimum = cell[3] < minimum ? cell[3] : minimum;\n-   minimum = cell[4] < minimum ? cell[4] : minimum;\n-   return minimum;\n-}\n-\n-/* Calculate the lowest possible open cell if the piece is placed on the board.\n- * Used to later reduce the amount of time searching for open cells in the\n- * solve function.\n- */\n-char first_empty_cell(char *cell, char minimum) {\n-   char first_empty = minimum;\n-   while(first_empty == cell[0] || first_empty == cell[1] ||\n-         first_empty == cell[2] || first_empty == cell[3] ||\n-         first_empty == cell[4])\n-      first_empty++;\n-   return first_empty;\n-}\n-\n-/* Generate the unsigned long long int that will later be anded with the\n- * board to determine if it fits.\n- */\n-unsigned long long bitmask_from_cells(char *cell) {\n-   unsigned long long piece_mask = 0ULL;\n-   int i;\n-   for(i = 0; i < 5; i++)\n-      piece_mask |= 1ULL << cell[i];\n-   return piece_mask;\n-}\n-\n-/* Record the piece and other important information in arrays that will\n- * later be used by the solve function.\n- */\n-void record_piece(int piece, int minimum, char first_empty,\n-      unsigned long long piece_mask) {\n-   pieces[piece][minimum][piece_counts[piece][minimum]] = piece_mask;\n-   next_cell[piece][minimum][piece_counts[piece][minimum]] = first_empty;\n-   piece_counts[piece][minimum]++;\n-}\n-\n-\n-/* Fill the entire board going cell by cell.  If any cells are \"trapped\"\n- * they will be left alone.\n- */\n-void fill_contiguous_space(char *board, int index) {\n-   if(board[index] == 1)\n-      return;\n-   board[index] = 1;\n-   if(!out_of_bounds(index, E))\n-      fill_contiguous_space(board, shift(index, E));\n-   if(!out_of_bounds(index, SE))\n-      fill_contiguous_space(board, shift(index, SE));\n-   if(!out_of_bounds(index, SW))\n-      fill_contiguous_space(board, shift(index, SW));\n-   if(!out_of_bounds(index, W))\n-      fill_contiguous_space(board, shift(index, W));\n-   if(!out_of_bounds(index, NW))\n-      fill_contiguous_space(board, shift(index, NW));\n-   if(!out_of_bounds(index, NE))\n-      fill_contiguous_space(board, shift(index, NE));\n-}\n-\n-\n-/* To thin the number of pieces, I calculate if any of them trap any empty\n- * cells at the edges.  There are only a handful of exceptions where the\n- * the board can be solved with the trapped cells.  For example:  piece 8 can\n- * trap 5 cells in the corner, but piece 3 can fit in those cells, or piece 0\n- * can split the board in half where both halves are viable.\n- */\n-int has_island(char *cell, int piece) {\n-   char temp_board[50];\n-   char c;\n-   int i;\n-   for(i = 0; i < 50; i++)\n-      temp_board[i] = 0;\n-   for(i = 0; i < 5; i++)\n-      temp_board[((int)cell[i])] = 1;\n-   i = 49;\n-   while(temp_board[i] == 1)\n-      i--;\n-   fill_contiguous_space(temp_board, i);\n-   c = 0;\n-   for(i = 0; i < 50; i++)\n-      if(temp_board[i] == 0)\n-         c++;\n-   if(c == 0 || (c == 5 && piece == 8) || (c == 40 && piece == 8) ||\n-         (c % 5 == 0 && piece == 0))\n-      return FALSE;\n-   else\n-      return TRUE;\n-}\n-\n-\n-/* Calculate all six rotations of the specified piece at the specified index.\n- * We calculate only half of piece 3's rotations.  This is because any solution\n- * found has an identical solution rotated 180 degrees.  Thus we can reduce the\n- * number of attempted pieces in the solve algorithm by not including the 180-\n- * degree-rotated pieces of ONE of the pieces.  I chose piece 3 because it gave\n- * me the best time ;)\n- */\n- void calc_six_rotations(char piece, char index) {\n-   char rotation, cell[5];\n-   char minimum, first_empty;\n-   unsigned long long piece_mask;\n-\n-   for(rotation = 0; rotation < 6; rotation++) {\n-      if(piece != 3 || rotation < 3) {\n-         calc_cell_indices(cell, piece, index);\n-         if(cells_fit_on_board(cell, piece) && !has_island(cell, piece)) {\n-            minimum = minimum_of_cells(cell);\n-            first_empty = first_empty_cell(cell, minimum);\n-            piece_mask = bitmask_from_cells(cell);\n-            record_piece(piece, minimum, first_empty, piece_mask);\n-         }\n-      }\n-      rotate_piece(piece);\n-   }\n-}\n-\n-/* Calculate every legal rotation for each piece at each board location. */\n-void calc_pieces(void) {\n-   char piece, index;\n-\n-   for(piece = 0; piece < 10; piece++) {\n-      for(index = 0; index < 50; index++) {\n-         calc_six_rotations(piece, index);\n-         flip_piece(piece);\n-         calc_six_rotations(piece, index);\n-      }\n-   }\n-}\n-\n-\n-\n-/* Calculate all 32 possible states for a 5-bit row and all rows that will\n- * create islands that follow any of the 32 possible rows.  These pre-\n- * calculated 5-bit rows will be used to find islands in a partially solved\n- * board in the solve function.\n- */\n-#define ROW_MASK 0x1F\n-#define TRIPLE_MASK 0x7FFF\n-char all_rows[32] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n-      17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n-int bad_even_rows[32][32];\n-int bad_odd_rows[32][32];\n-int bad_even_triple[32768];\n-int bad_odd_triple[32768];\n-\n-int rows_bad(char row1, char row2, int even) {\n-   /* even is referring to row1 */\n-   int i, in_zeroes, group_okay;\n-   char block, row2_shift;\n-   /* Test for blockages at same index and shifted index */\n-   if(even)\n-      row2_shift = ((row2 << 1) & ROW_MASK) | 0x01;\n-   else\n-      row2_shift = (row2 >> 1) | 0x10;\n-   block = ((row1 ^ row2) & row2) & ((row1 ^ row2_shift) & row2_shift);\n-   /* Test for groups of 0's */\n-   in_zeroes = FALSE;\n-   group_okay = FALSE;\n-   for(i = 0; i < 5; i++) {\n-      if(row1 & (1 << i)) {\n-         if(in_zeroes) {\n-            if(!group_okay)\n-               return TRUE;\n-            in_zeroes = FALSE;\n-            group_okay = FALSE;\n-         }\n-      } else {\n-         if(!in_zeroes)\n-            in_zeroes = TRUE;\n-         if(!(block & (1 << i)))\n-            group_okay = TRUE;\n-      }\n-   }\n-   if(in_zeroes)\n-      return !group_okay;\n-   else\n-      return FALSE;\n-}\n-\n-/* Check for cases where three rows checked sequentially cause a false\n- * positive.  One scenario is when 5 cells may be surrounded where piece 5\n- * or 7 can fit.  The other scenario is when piece 2 creates a hook shape.\n- */\n-int triple_is_okay(char row1, char row2, char row3, int even) {\n-   if(even) {\n-      /* There are four cases:\n-       * row1: 00011  00001  11001  10101\n-       * row2: 01011  00101  10001  10001\n-       * row3: 011??  00110  ?????  ?????\n-       */\n-      return ((row1 == 0x03) && (row2 == 0x0B) && ((row3 & 0x1C) == 0x0C)) ||\n-            ((row1 == 0x01) && (row2 == 0x05) && (row3 == 0x06)) ||\n-            ((row1 == 0x19) && (row2 == 0x11)) ||\n-            ((row1 == 0x15) && (row2 == 0x11));\n-   } else {\n-      /* There are two cases:\n-       * row1: 10011  10101\n-       * row2: 10001  10001\n-       * row3: ?????  ?????\n-       */\n-      return ((row1 == 0x13) && (row2 == 0x11)) ||\n-            ((row1 == 0x15) && (row2 == 0x11));\n-   }\n-}\n-\n-\n-void calc_rows(void) {\n-   int row1, row2, row3;\n-   int result1, result2;\n-   for(row1 = 0; row1 < 32; row1++) {\n-      for(row2 = 0; row2 < 32; row2++) {\n-         bad_even_rows[row1][row2] = rows_bad(row1, row2, TRUE);\n-         bad_odd_rows[row1][row2] = rows_bad(row1, row2, FALSE);\n-      }\n-   }\n-   for(row1 = 0; row1 < 32; row1++) {\n-      for(row2 = 0; row2 < 32; row2++) {\n-         for(row3 = 0; row3 < 32; row3++) {\n-            result1 = bad_even_rows[row1][row2];\n-            result2 = bad_odd_rows[row2][row3];\n-            if(result1 == FALSE && result2 == TRUE\n-                  && triple_is_okay(row1, row2, row3, TRUE))\n-               bad_even_triple[row1+(row2*32)+(row3*1024)] = FALSE;\n-            else\n-               bad_even_triple[row1+(row2*32)+(row3*1024)] = result1 || result2;\n-\n-            result1 = bad_odd_rows[row1][row2];\n-            result2 = bad_even_rows[row2][row3];\n-            if(result1 == FALSE && result2 == TRUE\n-                  && triple_is_okay(row1, row2, row3, FALSE))\n-               bad_odd_triple[row1+(row2*32)+(row3*1024)] = FALSE;\n-            else\n-               bad_odd_triple[row1+(row2*32)+(row3*1024)] = result1 || result2;\n-         }\n-      }\n-   }\n-}\n-\n-\n-\n-/* Calculate islands while solving the board.\n- */\n-int boardHasIslands(char cell) {\n-   /* Too low on board, don't bother checking */\n-   if(cell >= 40)\n-      return FALSE;\n-   int current_triple = (board >> ((cell / 5) * 5)) & TRIPLE_MASK;\n-   if((cell / 5) % 2)\n-      return bad_odd_triple[current_triple];\n-   else\n-      return bad_even_triple[current_triple];\n-}\n-\n-\n-/* The recursive solve algorithm.  Try to place each permutation in the upper-\n- * leftmost empty cell.  Mark off available pieces as it goes along.\n- * Because the board is a bit mask, the piece number and bit mask must be saved\n- * at each successful piece placement.  This data is used to create a 50 char\n- * array if a solution is found.\n- */\n-short avail = 0x03FF;\n-char sol_nums[10];\n-unsigned long long sol_masks[10];\n-signed char solutions[2100][50];\n-int solution_count = 0;\n-int max_solutions = 2100;\n-\n-void record_solution(void) {\n-   int sol_no, index;\n-   unsigned long long sol_mask;\n-   for(sol_no = 0; sol_no < 10; sol_no++) {\n-      sol_mask = sol_masks[sol_no];\n-      for(index = 0; index < 50; index++) {\n-         if(sol_mask & 1ULL) {\n-            solutions[solution_count][index] = sol_nums[sol_no];\n-            /* Board rotated 180 degrees is a solution too! */\n-            solutions[solution_count+1][49-index] = sol_nums[sol_no];\n-         }\n-         sol_mask = sol_mask >> 1;\n-      }\n-   }\n-   solution_count += 2;\n-}\n-\n-void solve(int depth, int cell) {\n-   int piece, rotation, max_rots;\n-   unsigned long long *piece_mask;\n-   short piece_no_mask;\n-\n-   if(solution_count >= max_solutions)\n-      return;\n-\n-   while(board & (1ULL << cell))\n-      cell++;\n-\n-   for(piece = 0; piece < 10; piece++) {\n-      piece_no_mask = 1 << piece;\n-      if(!(avail & piece_no_mask))\n-         continue;\n-      avail ^= piece_no_mask;\n-      max_rots = piece_counts[piece][cell];\n-      piece_mask = pieces[piece][cell];\n-      for(rotation = 0; rotation < max_rots; rotation++) {\n-         if(!(board & *(piece_mask + rotation))) {\n-            sol_nums[depth] = piece;\n-            sol_masks[depth] = *(piece_mask + rotation);\n-            if(depth == 9) {\n-               /* Solution found!!!!!11!!ONE! */\n-               record_solution();\n-               avail ^= piece_no_mask;\n-               return;\n-            }\n-            board |= *(piece_mask + rotation);\n-            if(!boardHasIslands(next_cell[piece][cell][rotation]))\n-               solve(depth + 1, next_cell[piece][cell][rotation]);\n-            board ^= *(piece_mask + rotation);\n-         }\n-      }\n-      avail ^= piece_no_mask;\n-   }\n-}\n-\n-\n-/* qsort comparator - used to find first and last solutions */\n-int solution_sort(const void *elem1, const void *elem2) {\n-   signed char *char1 = (signed char *) elem1;\n-   signed char *char2 = (signed char *) elem2;\n-   int i = 0;\n-   while(i < 50 && char1[i] == char2[i])\n-      i++;\n-   return char1[i] - char2[i];\n-}\n-\n-\n-/* pretty print a board in the specified hexagonal format */\n-void pretty(signed char *b) {\n-   int i;\n-   for(i = 0; i < 50; i += 10) {\n-      printf(\"%c %c %c %c %c \\n %c %c %c %c %c \\n\", b[i]+'0', b[i+1]+'0',\n-            b[i+2]+'0', b[i+3]+'0', b[i+4]+'0', b[i+5]+'0', b[i+6]+'0',\n-            b[i+7]+'0', b[i+8]+'0', b[i+9]+'0');\n-   }\n-   printf(\"\\n\");\n-}\n-\n-int main(int argc, char **argv) {\n-   if(argc > 1)\n-      max_solutions = atoi(argv[1]);\n-   calc_pieces();\n-   calc_rows();\n-   solve(0, 0);\n-   printf(\"%d solutions found\\n\\n\", solution_count);\n-   qsort(solutions, solution_count, 50 * sizeof(signed char), solution_sort);\n-   pretty(solutions[0]);\n-   pretty(solutions[solution_count-1]);\n-   return 0;\n-}"}, {"sha": "34a4e23f97b0a48577f42e81c2d6be5f67cc626d", "filename": "gcc/testsuite/go.test/test/bench/shootout/meteor-contest.go", "status": "removed", "additions": 0, "deletions": 656, "changes": 656, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,656 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * based on meteor-contest.c by Christian Vosteen\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-)\n-\n-var max_solutions = flag.Int(\"n\", 2100, \"maximum number of solutions\")\n-\n-func boolInt(b bool) int8 {\n-\tif b {\n-\t\treturn 1\n-\t}\n-\treturn 0\n-}\n-\n-/* The board is a 50 cell hexagonal pattern.  For    . . . . .\n- * maximum speed the board will be implemented as     . . . . .\n- * 50 bits, which will fit into a 64 bit long long   . . . . .\n- * int.                                               . . . . .\n- *                                                   . . . . .\n- * I will represent 0's as empty cells and 1's        . . . . .\n- * as full cells.                                    . . . . .\n- *                                                    . . . . .\n- *                                                   . . . . .\n- *                                                    . . . . .\n- */\n-\n-var board uint64 = 0xFFFC000000000000\n-\n-/* The puzzle pieces must be specified by the path followed\n- * from one end to the other along 12 hexagonal directions.\n- *\n- *   Piece 0   Piece 1   Piece 2   Piece 3   Piece 4\n- *\n- *  O O O O    O   O O   O O O     O O O     O   O\n- *         O    O O           O       O       O O\n- *                           O         O         O\n- *\n- *   Piece 5   Piece 6   Piece 7   Piece 8   Piece 9\n- *\n- *    O O O     O O       O O     O O        O O O O\n- *       O O       O O       O       O O O        O\n- *                  O       O O\n- *\n- * I had to make it 12 directions because I wanted all of the\n- * piece definitions to fit into the same size arrays.  It is\n- * not possible to define piece 4 in terms of the 6 cardinal\n- * directions in 4 moves.\n- */\n-\n-const (\n-\tE = iota\n-\tESE\n-\tSE\n-\tS\n-\tSW\n-\tWSW\n-\tW\n-\tWNW\n-\tNW\n-\tN\n-\tNE\n-\tENE\n-\tPIVOT\n-)\n-\n-var piece_def = [10][4]int8{\n-\t[4]int8{E, E, E, SE},\n-\t[4]int8{SE, E, NE, E},\n-\t[4]int8{E, E, SE, SW},\n-\t[4]int8{E, E, SW, SE},\n-\t[4]int8{SE, E, NE, S},\n-\t[4]int8{E, E, SW, E},\n-\t[4]int8{E, SE, SE, NE},\n-\t[4]int8{E, SE, SE, W},\n-\t[4]int8{E, SE, E, E},\n-\t[4]int8{E, E, E, SW},\n-}\n-\n-/* To minimize the amount of work done in the recursive solve function below,\n- * I'm going to allocate enough space for all legal rotations of each piece\n- * at each position on the board. That's 10 pieces x 50 board positions x\n- * 12 rotations.  However, not all 12 rotations will fit on every cell, so\n- * I'll have to keep count of the actual number that do.\n- * The pieces are going to be unsigned long long ints just like the board so\n- * they can be bitwise-anded with the board to determine if they fit.\n- * I'm also going to record the next possible open cell for each piece and\n- * location to reduce the burden on the solve function.\n- */\n-var (\n-\tpieces       [10][50][12]uint64\n-\tpiece_counts [10][50]int\n-\tnext_cell    [10][50][12]int8\n-)\n-\n-/* Returns the direction rotated 60 degrees clockwise */\n-func rotate(dir int8) int8 { return (dir + 2) % PIVOT }\n-\n-/* Returns the direction flipped on the horizontal axis */\n-func flip(dir int8) int8 { return (PIVOT - dir) % PIVOT }\n-\n-/* Returns the new cell index from the specified cell in the\n- * specified direction.  The index is only valid if the\n- * starting cell and direction have been checked by the\n- * out_of_bounds function first.\n- */\n-func shift(cell, dir int8) int8 {\n-\tswitch dir {\n-\tcase E:\n-\t\treturn cell + 1\n-\tcase ESE:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell + 7\n-\t\t} else {\n-\t\t\treturn cell + 6\n-\t\t}\n-\tcase SE:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell + 6\n-\t\t} else {\n-\t\t\treturn cell + 5\n-\t\t}\n-\tcase S:\n-\t\treturn cell + 10\n-\tcase SW:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell + 5\n-\t\t} else {\n-\t\t\treturn cell + 4\n-\t\t}\n-\tcase WSW:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell + 4\n-\t\t} else {\n-\t\t\treturn cell + 3\n-\t\t}\n-\tcase W:\n-\t\treturn cell - 1\n-\tcase WNW:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell - 6\n-\t\t} else {\n-\t\t\treturn cell - 7\n-\t\t}\n-\tcase NW:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell - 5\n-\t\t} else {\n-\t\t\treturn cell - 6\n-\t\t}\n-\tcase N:\n-\t\treturn cell - 10\n-\tcase NE:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell - 4\n-\t\t} else {\n-\t\t\treturn cell - 5\n-\t\t}\n-\tcase ENE:\n-\t\tif ((cell / 5) % 2) != 0 {\n-\t\t\treturn cell - 3\n-\t\t} else {\n-\t\t\treturn cell - 4\n-\t\t}\n-\t}\n-\treturn cell\n-}\n-\n-/* Returns wether the specified cell and direction will land outside\n- * of the board.  Used to determine if a piece is at a legal board\n- * location or not.\n- */\n-func out_of_bounds(cell, dir int8) bool {\n-\tswitch dir {\n-\tcase E:\n-\t\treturn cell%5 == 4\n-\tcase ESE:\n-\t\ti := cell % 10\n-\t\treturn i == 4 || i == 8 || i == 9 || cell >= 45\n-\tcase SE:\n-\t\treturn cell%10 == 9 || cell >= 45\n-\tcase S:\n-\t\treturn cell >= 40\n-\tcase SW:\n-\t\treturn cell%10 == 0 || cell >= 45\n-\tcase WSW:\n-\t\ti := cell % 10\n-\t\treturn i == 0 || i == 1 || i == 5 || cell >= 45\n-\tcase W:\n-\t\treturn cell%5 == 0\n-\tcase WNW:\n-\t\ti := cell % 10\n-\t\treturn i == 0 || i == 1 || i == 5 || cell < 5\n-\tcase NW:\n-\t\treturn cell%10 == 0 || cell < 5\n-\tcase N:\n-\t\treturn cell < 10\n-\tcase NE:\n-\t\treturn cell%10 == 9 || cell < 5\n-\tcase ENE:\n-\t\ti := cell % 10\n-\t\treturn i == 4 || i == 8 || i == 9 || cell < 5\n-\t}\n-\treturn false\n-}\n-\n-/* Rotate a piece 60 degrees clockwise */\n-func rotate_piece(piece int) {\n-\tfor i := 0; i < 4; i++ {\n-\t\tpiece_def[piece][i] = rotate(piece_def[piece][i])\n-\t}\n-}\n-\n-/* Flip a piece along the horizontal axis */\n-func flip_piece(piece int) {\n-\tfor i := 0; i < 4; i++ {\n-\t\tpiece_def[piece][i] = flip(piece_def[piece][i])\n-\t}\n-}\n-\n-/* Convenience function to quickly calculate all of the indices for a piece */\n-func calc_cell_indices(cell []int8, piece int, index int8) {\n-\tcell[0] = index\n-\tfor i := 1; i < 5; i++ {\n-\t\tcell[i] = shift(cell[i-1], piece_def[piece][i-1])\n-\t}\n-}\n-\n-/* Convenience function to quickly calculate if a piece fits on the board */\n-func cells_fit_on_board(cell []int8, piece int) bool {\n-\treturn !out_of_bounds(cell[0], piece_def[piece][0]) &&\n-\t\t!out_of_bounds(cell[1], piece_def[piece][1]) &&\n-\t\t!out_of_bounds(cell[2], piece_def[piece][2]) &&\n-\t\t!out_of_bounds(cell[3], piece_def[piece][3])\n-}\n-\n-/* Returns the lowest index of the cells of a piece.\n- * I use the lowest index that a piece occupies as the index for looking up\n- * the piece in the solve function.\n- */\n-func minimum_of_cells(cell []int8) int8 {\n-\tminimum := cell[0]\n-\tfor i := 1; i < 5; i++ {\n-\t\tif cell[i] < minimum {\n-\t\t\tminimum = cell[i]\n-\t\t}\n-\t}\n-\treturn minimum\n-}\n-\n-/* Calculate the lowest possible open cell if the piece is placed on the board.\n- * Used to later reduce the amount of time searching for open cells in the\n- * solve function.\n- */\n-func first_empty_cell(cell []int8, minimum int8) int8 {\n-\tfirst_empty := minimum\n-\tfor first_empty == cell[0] || first_empty == cell[1] ||\n-\t\tfirst_empty == cell[2] || first_empty == cell[3] ||\n-\t\tfirst_empty == cell[4] {\n-\t\tfirst_empty++\n-\t}\n-\treturn first_empty\n-}\n-\n-/* Generate the unsigned long long int that will later be anded with the\n- * board to determine if it fits.\n- */\n-func bitmask_from_cells(cell []int8) uint64 {\n-\tvar piece_mask uint64\n-\tfor i := 0; i < 5; i++ {\n-\t\tpiece_mask |= 1 << uint(cell[i])\n-\t}\n-\treturn piece_mask\n-}\n-\n-/* Record the piece and other important information in arrays that will\n- * later be used by the solve function.\n- */\n-func record_piece(piece int, minimum int8, first_empty int8, piece_mask uint64) {\n-\tpieces[piece][minimum][piece_counts[piece][minimum]] = piece_mask\n-\tnext_cell[piece][minimum][piece_counts[piece][minimum]] = first_empty\n-\tpiece_counts[piece][minimum]++\n-}\n-\n-/* Fill the entire board going cell by cell.  If any cells are \"trapped\"\n- * they will be left alone.\n- */\n-func fill_contiguous_space(board []int8, index int8) {\n-\tif board[index] == 1 {\n-\t\treturn\n-\t}\n-\tboard[index] = 1\n-\tif !out_of_bounds(index, E) {\n-\t\tfill_contiguous_space(board, shift(index, E))\n-\t}\n-\tif !out_of_bounds(index, SE) {\n-\t\tfill_contiguous_space(board, shift(index, SE))\n-\t}\n-\tif !out_of_bounds(index, SW) {\n-\t\tfill_contiguous_space(board, shift(index, SW))\n-\t}\n-\tif !out_of_bounds(index, W) {\n-\t\tfill_contiguous_space(board, shift(index, W))\n-\t}\n-\tif !out_of_bounds(index, NW) {\n-\t\tfill_contiguous_space(board, shift(index, NW))\n-\t}\n-\tif !out_of_bounds(index, NE) {\n-\t\tfill_contiguous_space(board, shift(index, NE))\n-\t}\n-}\n-\n-/* To thin the number of pieces, I calculate if any of them trap any empty\n- * cells at the edges.  There are only a handful of exceptions where the\n- * the board can be solved with the trapped cells.  For example:  piece 8 can\n- * trap 5 cells in the corner, but piece 3 can fit in those cells, or piece 0\n- * can split the board in half where both halves are viable.\n- */\n-func has_island(cell []int8, piece int) bool {\n-\ttemp_board := make([]int8, 50)\n-\tvar i int\n-\tfor i = 0; i < 5; i++ {\n-\t\ttemp_board[cell[i]] = 1\n-\t}\n-\ti = 49\n-\tfor temp_board[i] == 1 {\n-\t\ti--\n-\t}\n-\tfill_contiguous_space(temp_board, int8(i))\n-\tc := 0\n-\tfor i = 0; i < 50; i++ {\n-\t\tif temp_board[i] == 0 {\n-\t\t\tc++\n-\t\t}\n-\t}\n-\tif c == 0 || (c == 5 && piece == 8) || (c == 40 && piece == 8) ||\n-\t\t(c%5 == 0 && piece == 0) {\n-\t\treturn false\n-\t}\n-\treturn true\n-}\n-\n-/* Calculate all six rotations of the specified piece at the specified index.\n- * We calculate only half of piece 3's rotations.  This is because any solution\n- * found has an identical solution rotated 180 degrees.  Thus we can reduce the\n- * number of attempted pieces in the solve algorithm by not including the 180-\n- * degree-rotated pieces of ONE of the pieces.  I chose piece 3 because it gave\n- * me the best time ;)\n- */\n-func calc_six_rotations(piece, index int) {\n-\tcell := make([]int8, 5)\n-\tfor rotation := 0; rotation < 6; rotation++ {\n-\t\tif piece != 3 || rotation < 3 {\n-\t\t\tcalc_cell_indices(cell, piece, int8(index))\n-\t\t\tif cells_fit_on_board(cell, piece) && !has_island(cell, piece) {\n-\t\t\t\tminimum := minimum_of_cells(cell)\n-\t\t\t\tfirst_empty := first_empty_cell(cell, minimum)\n-\t\t\t\tpiece_mask := bitmask_from_cells(cell)\n-\t\t\t\trecord_piece(piece, minimum, first_empty, piece_mask)\n-\t\t\t}\n-\t\t}\n-\t\trotate_piece(piece)\n-\t}\n-}\n-\n-/* Calculate every legal rotation for each piece at each board location. */\n-func calc_pieces() {\n-\tfor piece := 0; piece < 10; piece++ {\n-\t\tfor index := 0; index < 50; index++ {\n-\t\t\tcalc_six_rotations(piece, index)\n-\t\t\tflip_piece(piece)\n-\t\t\tcalc_six_rotations(piece, index)\n-\t\t}\n-\t}\n-}\n-\n-/* Calculate all 32 possible states for a 5-bit row and all rows that will\n- * create islands that follow any of the 32 possible rows.  These pre-\n- * calculated 5-bit rows will be used to find islands in a partially solved\n- * board in the solve function.\n- */\n-const (\n-\tROW_MASK    = 0x1F\n-\tTRIPLE_MASK = 0x7FFF\n-)\n-\n-var (\n-\tall_rows = [32]int8{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n-\t\t17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n-\t}\n-\tbad_even_rows   [32][32]int8\n-\tbad_odd_rows    [32][32]int8\n-\tbad_even_triple [32768]int8\n-\tbad_odd_triple  [32768]int8\n-)\n-\n-func rows_bad(row1, row2 int8, even bool) int8 {\n-\t/* even is referring to row1 */\n-\tvar row2_shift int8\n-\t/* Test for blockages at same index and shifted index */\n-\tif even {\n-\t\trow2_shift = ((row2 << 1) & ROW_MASK) | 0x01\n-\t} else {\n-\t\trow2_shift = (row2 >> 1) | 0x10\n-\t}\n-\tblock := ((row1 ^ row2) & row2) & ((row1 ^ row2_shift) & row2_shift)\n-\t/* Test for groups of 0's */\n-\tin_zeroes := false\n-\tgroup_okay := false\n-\tfor i := uint8(0); i < 5; i++ {\n-\t\tif row1&(1<<i) != 0 {\n-\t\t\tif in_zeroes {\n-\t\t\t\tif !group_okay {\n-\t\t\t\t\treturn 1\n-\t\t\t\t}\n-\t\t\t\tin_zeroes = false\n-\t\t\t\tgroup_okay = false\n-\t\t\t}\n-\t\t} else {\n-\t\t\tif !in_zeroes {\n-\t\t\t\tin_zeroes = true\n-\t\t\t}\n-\t\t\tif (block & (1 << i)) == 0 {\n-\t\t\t\tgroup_okay = true\n-\t\t\t}\n-\t\t}\n-\t}\n-\tif in_zeroes {\n-\t\treturn boolInt(!group_okay)\n-\t}\n-\treturn 0\n-}\n-\n-/* Check for cases where three rows checked sequentially cause a false\n- * positive.  One scenario is when 5 cells may be surrounded where piece 5\n- * or 7 can fit.  The other scenario is when piece 2 creates a hook shape.\n- */\n-func triple_is_okay(row1, row2, row3 int, even bool) bool {\n-\tif even {\n-\t\t/* There are four cases:\n-\t\t * row1: 00011  00001  11001  10101\n-\t\t * row2: 01011  00101  10001  10001\n-\t\t * row3: 011??  00110  ?????  ?????\n-\t\t */\n-\t\treturn ((row1 == 0x03) && (row2 == 0x0B) && ((row3 & 0x1C) == 0x0C)) ||\n-\t\t\t((row1 == 0x01) && (row2 == 0x05) && (row3 == 0x06)) ||\n-\t\t\t((row1 == 0x19) && (row2 == 0x11)) ||\n-\t\t\t((row1 == 0x15) && (row2 == 0x11))\n-\t}\n-\t/* There are two cases:\n-\t * row1: 10011  10101\n-\t * row2: 10001  10001\n-\t * row3: ?????  ?????\n-\t */\n-\treturn ((row1 == 0x13) && (row2 == 0x11)) ||\n-\t\t((row1 == 0x15) && (row2 == 0x11))\n-}\n-\n-func calc_rows() {\n-\tfor row1 := int8(0); row1 < 32; row1++ {\n-\t\tfor row2 := int8(0); row2 < 32; row2++ {\n-\t\t\tbad_even_rows[row1][row2] = rows_bad(row1, row2, true)\n-\t\t\tbad_odd_rows[row1][row2] = rows_bad(row1, row2, false)\n-\t\t}\n-\t}\n-\tfor row1 := 0; row1 < 32; row1++ {\n-\t\tfor row2 := 0; row2 < 32; row2++ {\n-\t\t\tfor row3 := 0; row3 < 32; row3++ {\n-\t\t\t\tresult1 := bad_even_rows[row1][row2]\n-\t\t\t\tresult2 := bad_odd_rows[row2][row3]\n-\t\t\t\tif result1 == 0 && result2 != 0 && triple_is_okay(row1, row2, row3, true) {\n-\t\t\t\t\tbad_even_triple[row1+(row2*32)+(row3*1024)] = 0\n-\t\t\t\t} else {\n-\t\t\t\t\tbad_even_triple[row1+(row2*32)+(row3*1024)] = boolInt(result1 != 0 || result2 != 0)\n-\t\t\t\t}\n-\n-\t\t\t\tresult1 = bad_odd_rows[row1][row2]\n-\t\t\t\tresult2 = bad_even_rows[row2][row3]\n-\t\t\t\tif result1 == 0 && result2 != 0 && triple_is_okay(row1, row2, row3, false) {\n-\t\t\t\t\tbad_odd_triple[row1+(row2*32)+(row3*1024)] = 0\n-\t\t\t\t} else {\n-\t\t\t\t\tbad_odd_triple[row1+(row2*32)+(row3*1024)] = boolInt(result1 != 0 || result2 != 0)\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-}\n-\n-/* Calculate islands while solving the board.\n- */\n-func boardHasIslands(cell int8) int8 {\n-\t/* Too low on board, don't bother checking */\n-\tif cell >= 40 {\n-\t\treturn 0\n-\t}\n-\tcurrent_triple := (board >> uint((cell/5)*5)) & TRIPLE_MASK\n-\tif (cell/5)%2 != 0 {\n-\t\treturn bad_odd_triple[current_triple]\n-\t}\n-\treturn bad_even_triple[current_triple]\n-}\n-\n-/* The recursive solve algorithm.  Try to place each permutation in the upper-\n- * leftmost empty cell.  Mark off available pieces as it goes along.\n- * Because the board is a bit mask, the piece number and bit mask must be saved\n- * at each successful piece placement.  This data is used to create a 50 char\n- * array if a solution is found.\n- */\n-var (\n-\tavail          uint16 = 0x03FF\n-\tsol_nums       [10]int8\n-\tsol_masks      [10]uint64\n-\tsolutions      [2100][50]int8\n-\tsolution_count = 0\n-)\n-\n-func record_solution() {\n-\tfor sol_no := 0; sol_no < 10; sol_no++ {\n-\t\tsol_mask := sol_masks[sol_no]\n-\t\tfor index := 0; index < 50; index++ {\n-\t\t\tif sol_mask&1 == 1 {\n-\t\t\t\tsolutions[solution_count][index] = sol_nums[sol_no]\n-\t\t\t\t/* Board rotated 180 degrees is a solution too! */\n-\t\t\t\tsolutions[solution_count+1][49-index] = sol_nums[sol_no]\n-\t\t\t}\n-\t\t\tsol_mask = sol_mask >> 1\n-\t\t}\n-\t}\n-\tsolution_count += 2\n-}\n-\n-func solve(depth, cell int8) {\n-\tif solution_count >= *max_solutions {\n-\t\treturn\n-\t}\n-\n-\tfor board&(1<<uint(cell)) != 0 {\n-\t\tcell++\n-\t}\n-\n-\tfor piece := int8(0); piece < 10; piece++ {\n-\t\tvar piece_no_mask uint16 = 1 << uint(piece)\n-\t\tif avail&piece_no_mask == 0 {\n-\t\t\tcontinue\n-\t\t}\n-\t\tavail ^= piece_no_mask\n-\t\tmax_rots := piece_counts[piece][cell]\n-\t\tpiece_mask := pieces[piece][cell]\n-\t\tfor rotation := 0; rotation < max_rots; rotation++ {\n-\t\t\tif board&piece_mask[rotation] == 0 {\n-\t\t\t\tsol_nums[depth] = piece\n-\t\t\t\tsol_masks[depth] = piece_mask[rotation]\n-\t\t\t\tif depth == 9 {\n-\t\t\t\t\t/* Solution found!!!!!11!!ONE! */\n-\t\t\t\t\trecord_solution()\n-\t\t\t\t\tavail ^= piece_no_mask\n-\t\t\t\t\treturn\n-\t\t\t\t}\n-\t\t\t\tboard |= piece_mask[rotation]\n-\t\t\t\tif boardHasIslands(next_cell[piece][cell][rotation]) == 0 {\n-\t\t\t\t\tsolve(depth+1, next_cell[piece][cell][rotation])\n-\t\t\t\t}\n-\t\t\t\tboard ^= piece_mask[rotation]\n-\t\t\t}\n-\t\t}\n-\t\tavail ^= piece_no_mask\n-\t}\n-}\n-\n-/* pretty print a board in the specified hexagonal format */\n-func pretty(b *[50]int8) {\n-\tfor i := 0; i < 50; i += 10 {\n-\t\tfmt.Printf(\"%c %c %c %c %c \\n %c %c %c %c %c \\n\", b[i]+'0', b[i+1]+'0',\n-\t\t\tb[i+2]+'0', b[i+3]+'0', b[i+4]+'0', b[i+5]+'0', b[i+6]+'0',\n-\t\t\tb[i+7]+'0', b[i+8]+'0', b[i+9]+'0')\n-\t}\n-\tfmt.Printf(\"\\n\")\n-}\n-\n-/* Find smallest and largest solutions */\n-func smallest_largest() (smallest, largest *[50]int8) {\n-\tsmallest = &solutions[0]\n-\tlargest = &solutions[0]\n-\tfor i := 1; i < solution_count; i++ {\n-\t\tcandidate := &solutions[i]\n-\t\tfor j, s := range *smallest {\n-\t\t\tc := candidate[j]\n-\t\t\tif c == s {\n-\t\t\t\tcontinue\n-\t\t\t}\n-\t\t\tif c < s {\n-\t\t\t\tsmallest = candidate\n-\t\t\t}\n-\t\t\tbreak\n-\t\t}\n-\t\tfor j, s := range *largest {\n-\t\t\tc := candidate[j]\n-\t\t\tif c == s {\n-\t\t\t\tcontinue\n-\t\t\t}\n-\t\t\tif c > s {\n-\t\t\t\tlargest = candidate\n-\t\t\t}\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn\n-}\n-\n-func main() {\n-\tflag.Parse()\n-\tcalc_pieces()\n-\tcalc_rows()\n-\tsolve(0, 0)\n-\tfmt.Printf(\"%d solutions found\\n\\n\", solution_count)\n-\tsmallest, largest := smallest_largest()\n-\tpretty(smallest)\n-\tpretty(largest)\n-}"}, {"sha": "38d9783d64fb7d1eb058c5754c930402c27e758d", "filename": "gcc/testsuite/go.test/test/bench/shootout/meteor-contest.txt", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmeteor-contest.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,24 +0,0 @@\n-2098 solutions found\n-\n-0 0 0 0 1 \n- 2 2 2 0 1 \n-2 6 6 1 1 \n- 2 6 1 5 5 \n-8 6 5 5 5 \n- 8 6 3 3 3 \n-4 8 8 9 3 \n- 4 4 8 9 3 \n-4 7 4 7 9 \n- 7 7 7 9 9 \n-\n-9 9 9 9 8 \n- 9 6 6 8 5 \n-6 6 8 8 5 \n- 6 8 2 5 5 \n-7 7 7 2 5 \n- 7 4 7 2 0 \n-1 4 2 2 0 \n- 1 4 4 0 3 \n-1 4 0 0 3 \n- 1 1 3 3 3 \n-"}, {"sha": "3b95b05929eec67c9159de2226410587362bc99c", "filename": "gcc/testsuite/go.test/test/bench/shootout/nbody.c", "status": "removed", "additions": 0, "deletions": 170, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,170 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n- * The Great Computer Language Shootout\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by Christoph Bauer\n- *\n- */\n-\n-#include <math.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-#define pi 3.141592653589793\n-#define solar_mass (4 * pi * pi)\n-#define days_per_year 365.24\n-\n-struct planet {\n-  double x, y, z;\n-  double vx, vy, vz;\n-  double mass;\n-};\n-\n-void advance(int nbodies, struct planet * bodies, double dt)\n-{\n-  int i, j;\n-\n-  for (i = 0; i < nbodies; i++) {\n-    struct planet * b = &(bodies[i]);\n-    for (j = i + 1; j < nbodies; j++) {\n-      struct planet * b2 = &(bodies[j]);\n-      double dx = b->x - b2->x;\n-      double dy = b->y - b2->y;\n-      double dz = b->z - b2->z;\n-      double distance = sqrt(dx * dx + dy * dy + dz * dz);\n-      double mag = dt / (distance * distance * distance);\n-      b->vx -= dx * b2->mass * mag;\n-      b->vy -= dy * b2->mass * mag;\n-      b->vz -= dz * b2->mass * mag;\n-      b2->vx += dx * b->mass * mag;\n-      b2->vy += dy * b->mass * mag;\n-      b2->vz += dz * b->mass * mag;\n-    }\n-  }\n-  for (i = 0; i < nbodies; i++) {\n-    struct planet * b = &(bodies[i]);\n-    b->x += dt * b->vx;\n-    b->y += dt * b->vy;\n-    b->z += dt * b->vz;\n-  }\n-}\n-\n-double energy(int nbodies, struct planet * bodies)\n-{\n-  double e;\n-  int i, j;\n-\n-  e = 0.0;\n-  for (i = 0; i < nbodies; i++) {\n-    struct planet * b = &(bodies[i]);\n-    e += 0.5 * b->mass * (b->vx * b->vx + b->vy * b->vy + b->vz * b->vz);\n-    for (j = i + 1; j < nbodies; j++) {\n-      struct planet * b2 = &(bodies[j]);\n-      double dx = b->x - b2->x;\n-      double dy = b->y - b2->y;\n-      double dz = b->z - b2->z;\n-      double distance = sqrt(dx * dx + dy * dy + dz * dz);\n-      e -= (b->mass * b2->mass) / distance;\n-    }\n-  }\n-  return e;\n-}\n-\n-void offset_momentum(int nbodies, struct planet * bodies)\n-{\n-  double px = 0.0, py = 0.0, pz = 0.0;\n-  int i;\n-  for (i = 0; i < nbodies; i++) {\n-    px += bodies[i].vx * bodies[i].mass;\n-    py += bodies[i].vy * bodies[i].mass;\n-    pz += bodies[i].vz * bodies[i].mass;\n-  }\n-  bodies[0].vx = - px / solar_mass;\n-  bodies[0].vy = - py / solar_mass;\n-  bodies[0].vz = - pz / solar_mass;\n-}\n-\n-#define NBODIES 5\n-struct planet bodies[NBODIES] = {\n-  {                               /* sun */\n-    0, 0, 0, 0, 0, 0, solar_mass\n-  },\n-  {                               /* jupiter */\n-    4.84143144246472090e+00,\n-    -1.16032004402742839e+00,\n-    -1.03622044471123109e-01,\n-    1.66007664274403694e-03 * days_per_year,\n-    7.69901118419740425e-03 * days_per_year,\n-    -6.90460016972063023e-05 * days_per_year,\n-    9.54791938424326609e-04 * solar_mass\n-  },\n-  {                               /* saturn */\n-    8.34336671824457987e+00,\n-    4.12479856412430479e+00,\n-    -4.03523417114321381e-01,\n-    -2.76742510726862411e-03 * days_per_year,\n-    4.99852801234917238e-03 * days_per_year,\n-    2.30417297573763929e-05 * days_per_year,\n-    2.85885980666130812e-04 * solar_mass\n-  },\n-  {                               /* uranus */\n-    1.28943695621391310e+01,\n-    -1.51111514016986312e+01,\n-    -2.23307578892655734e-01,\n-    2.96460137564761618e-03 * days_per_year,\n-    2.37847173959480950e-03 * days_per_year,\n-    -2.96589568540237556e-05 * days_per_year,\n-    4.36624404335156298e-05 * solar_mass\n-  },\n-  {                               /* neptune */\n-    1.53796971148509165e+01,\n-    -2.59193146099879641e+01,\n-    1.79258772950371181e-01,\n-    2.68067772490389322e-03 * days_per_year,\n-    1.62824170038242295e-03 * days_per_year,\n-    -9.51592254519715870e-05 * days_per_year,\n-    5.15138902046611451e-05 * solar_mass\n-  }\n-};\n-\n-int main(int argc, char ** argv)\n-{\n-  int n = atoi(argv[1]);\n-  int i;\n-\n-  offset_momentum(NBODIES, bodies);\n-  printf (\"%.9f\\n\", energy(NBODIES, bodies));\n-  for (i = 1; i <= n; i++)\n-    advance(NBODIES, bodies, 0.01);\n-  printf (\"%.9f\\n\", energy(NBODIES, bodies));\n-  return 0;\n-}"}, {"sha": "988f3ba9cc06cd0b6e60396df6d68796175841cd", "filename": "gcc/testsuite/go.test/test/bench/shootout/nbody.go", "status": "removed", "additions": 0, "deletions": 177, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,177 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * based on C program by Christoph Bauer\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"math\"\n-)\n-\n-var n = flag.Int(\"n\", 1000, \"number of iterations\")\n-\n-type Body struct {\n-\tx, y, z, vx, vy, vz, mass float64\n-}\n-\n-const (\n-\tsolarMass   = 4 * math.Pi * math.Pi\n-\tdaysPerYear = 365.24\n-)\n-\n-func (b *Body) offsetMomentum(px, py, pz float64) {\n-\tb.vx = -px / solarMass\n-\tb.vy = -py / solarMass\n-\tb.vz = -pz / solarMass\n-}\n-\n-type System []*Body\n-\n-func NewSystem(body []Body) System {\n-\tn := make(System, len(body))\n-\tfor i := 0; i < len(body); i++ {\n-\t\tn[i] = new(Body) // copy to avoid overwriting the inputs\n-\t\t*n[i] = body[i]\n-\t}\n-\tvar px, py, pz float64\n-\tfor _, body := range n {\n-\t\tpx += body.vx * body.mass\n-\t\tpy += body.vy * body.mass\n-\t\tpz += body.vz * body.mass\n-\t}\n-\tn[0].offsetMomentum(px, py, pz)\n-\treturn n\n-}\n-\n-func (sys System) energy() float64 {\n-\tvar e float64\n-\tfor i, body := range sys {\n-\t\te += 0.5 * body.mass *\n-\t\t\t(body.vx*body.vx + body.vy*body.vy + body.vz*body.vz)\n-\t\tfor j := i + 1; j < len(sys); j++ {\n-\t\t\tbody2 := sys[j]\n-\t\t\tdx := body.x - body2.x\n-\t\t\tdy := body.y - body2.y\n-\t\t\tdz := body.z - body2.z\n-\t\t\tdistance := math.Sqrt(dx*dx + dy*dy + dz*dz)\n-\t\t\te -= (body.mass * body2.mass) / distance\n-\t\t}\n-\t}\n-\treturn e\n-}\n-\n-func (sys System) advance(dt float64) {\n-\tfor i, body := range sys {\n-\t\tfor j := i + 1; j < len(sys); j++ {\n-\t\t\tbody2 := sys[j]\n-\t\t\tdx := body.x - body2.x\n-\t\t\tdy := body.y - body2.y\n-\t\t\tdz := body.z - body2.z\n-\n-\t\t\tdSquared := dx*dx + dy*dy + dz*dz\n-\t\t\tdistance := math.Sqrt(dSquared)\n-\t\t\tmag := dt / (dSquared * distance)\n-\n-\t\t\tbody.vx -= dx * body2.mass * mag\n-\t\t\tbody.vy -= dy * body2.mass * mag\n-\t\t\tbody.vz -= dz * body2.mass * mag\n-\n-\t\t\tbody2.vx += dx * body.mass * mag\n-\t\t\tbody2.vy += dy * body.mass * mag\n-\t\t\tbody2.vz += dz * body.mass * mag\n-\t\t}\n-\t}\n-\n-\tfor _, body := range sys {\n-\t\tbody.x += dt * body.vx\n-\t\tbody.y += dt * body.vy\n-\t\tbody.z += dt * body.vz\n-\t}\n-}\n-\n-var (\n-\tjupiter = Body{\n-\t\tx:    4.84143144246472090e+00,\n-\t\ty:    -1.16032004402742839e+00,\n-\t\tz:    -1.03622044471123109e-01,\n-\t\tvx:   1.66007664274403694e-03 * daysPerYear,\n-\t\tvy:   7.69901118419740425e-03 * daysPerYear,\n-\t\tvz:   -6.90460016972063023e-05 * daysPerYear,\n-\t\tmass: 9.54791938424326609e-04 * solarMass,\n-\t}\n-\tsaturn = Body{\n-\t\tx:    8.34336671824457987e+00,\n-\t\ty:    4.12479856412430479e+00,\n-\t\tz:    -4.03523417114321381e-01,\n-\t\tvx:   -2.76742510726862411e-03 * daysPerYear,\n-\t\tvy:   4.99852801234917238e-03 * daysPerYear,\n-\t\tvz:   2.30417297573763929e-05 * daysPerYear,\n-\t\tmass: 2.85885980666130812e-04 * solarMass,\n-\t}\n-\turanus = Body{\n-\t\tx:    1.28943695621391310e+01,\n-\t\ty:    -1.51111514016986312e+01,\n-\t\tz:    -2.23307578892655734e-01,\n-\t\tvx:   2.96460137564761618e-03 * daysPerYear,\n-\t\tvy:   2.37847173959480950e-03 * daysPerYear,\n-\t\tvz:   -2.96589568540237556e-05 * daysPerYear,\n-\t\tmass: 4.36624404335156298e-05 * solarMass,\n-\t}\n-\tneptune = Body{\n-\t\tx:    1.53796971148509165e+01,\n-\t\ty:    -2.59193146099879641e+01,\n-\t\tz:    1.79258772950371181e-01,\n-\t\tvx:   2.68067772490389322e-03 * daysPerYear,\n-\t\tvy:   1.62824170038242295e-03 * daysPerYear,\n-\t\tvz:   -9.51592254519715870e-05 * daysPerYear,\n-\t\tmass: 5.15138902046611451e-05 * solarMass,\n-\t}\n-\tsun = Body{\n-\t\tmass: solarMass,\n-\t}\n-)\n-\n-func main() {\n-\tflag.Parse()\n-\n-\tsystem := NewSystem([]Body{sun, jupiter, saturn, uranus, neptune})\n-\tfmt.Printf(\"%.9f\\n\", system.energy())\n-\tfor i := 0; i < *n; i++ {\n-\t\tsystem.advance(0.01)\n-\t}\n-\tfmt.Printf(\"%.9f\\n\", system.energy())\n-}"}, {"sha": "1731557ce19f86112c5a71d266c4f5d3b4e86a19", "filename": "gcc/testsuite/go.test/test/bench/shootout/nbody.txt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fnbody.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,2 +0,0 @@\n--0.169075164\n--0.169087605"}, {"sha": "c064da0dd20e125ab744ab7b9c933cc31c8cc0e3", "filename": "gcc/testsuite/go.test/test/bench/shootout/pidigits.c", "status": "removed", "additions": 0, "deletions": 123, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,123 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n-  http://shootout.alioth.debian.org/\n-\n-  contributed by Paolo Bonzini & Sean Bartlett\n-  modified by Michael Mellor\n-*/\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <gmp.h>\n-\n-static mpz_t numer, accum, denom, tmp1, tmp2;\n-\n-static int extract_digit()\n-{\n-  if (mpz_cmp(numer, accum) > 0)\n-    return -1;\n-\n-  /* Compute (numer * 3 + accum) / denom */\n-  mpz_mul_2exp(tmp1, numer, 1);\n-  mpz_add(tmp1, tmp1, numer);\n-  mpz_add(tmp1, tmp1, accum);\n-  mpz_fdiv_qr(tmp1, tmp2, tmp1, denom);\n-\n-  /* Now, if (numer * 4 + accum) % denom... */\n-  mpz_add(tmp2, tmp2, numer);\n-\n-  /* ... is normalized, then the two divisions have the same result.  */\n-  if (mpz_cmp(tmp2, denom) >= 0)\n-    return -1;\n-\n-  return mpz_get_ui(tmp1);\n-}\n-\n-static void next_term(unsigned int k)\n-{\n-  unsigned int y2 = k*2 + 1;\n-\n-  mpz_mul_2exp(tmp1, numer, 1);\n-  mpz_add(accum, accum, tmp1);\n-  mpz_mul_ui(accum, accum, y2);\n-  mpz_mul_ui(numer, numer, k);\n-  mpz_mul_ui(denom, denom, y2);\n-}\n-\n-static void eliminate_digit(unsigned int d)\n-{\n-  mpz_submul_ui(accum, denom, d);\n-  mpz_mul_ui(accum, accum, 10);\n-  mpz_mul_ui(numer, numer, 10);\n-}\n-\n-static void pidigits(unsigned int n)\n-{\n-  int d;\n-  unsigned int i = 0, k = 0, m;\n-  mpz_init(tmp1);\n-  mpz_init(tmp2);\n-  mpz_init_set_ui(numer, 1);\n-  mpz_init_set_ui(accum, 0);\n-  mpz_init_set_ui(denom, 1);\n-\n-  for(;;)\n-  {\n-    do {\n-      k++;\n-      next_term(k);\n-      d = extract_digit();\n-    } while(d == -1);\n-\n-    putchar(d + '0');\n-\n-    i++;\n-    m = i%10;\n-    if(m == 0)\n-      printf(\"\\t:%d\\n\", i);\n-    if(i >= n)\n-      break;\n-    eliminate_digit(d);\n-  }\n-\n-  if(m) {\n-    m = 10 - m;\n-    while(m--)\n-      putchar(' ');\n-    printf(\"\\t:%d\\n\", n);\n-  }\n-}\n-\n-int main(int argc, char **argv)\n-{\n-  pidigits(argc > 1 ? atoi(argv[1]) : 27);\n-  return 0;\n-}"}, {"sha": "a0f21a91db64ab6f83606aed1188f9e25b0d02e2", "filename": "gcc/testsuite/go.test/test/bench/shootout/pidigits.go", "status": "removed", "additions": 0, "deletions": 135, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,135 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * based on pidigits.c (by Paolo Bonzini & Sean Bartlett,\n- *                      modified by Michael Mellor)\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"math/big\"\n-)\n-\n-var n = flag.Int(\"n\", 27, \"number of digits\")\n-var silent = flag.Bool(\"s\", false, \"don't print result\")\n-\n-var (\n-\ttmp1  = big.NewInt(0)\n-\ttmp2  = big.NewInt(0)\n-\ttmp3  = big.NewInt(0)\n-\ty2    = big.NewInt(0)\n-\tbigk  = big.NewInt(0)\n-\tnumer = big.NewInt(1)\n-\taccum = big.NewInt(0)\n-\tdenom = big.NewInt(1)\n-\tten   = big.NewInt(10)\n-)\n-\n-func extract_digit() int64 {\n-\tif numer.Cmp(accum) > 0 {\n-\t\treturn -1\n-\t}\n-\n-\t// Compute (numer * 3 + accum) / denom\n-\ttmp1.Lsh(numer, 1)\n-\ttmp1.Add(tmp1, numer)\n-\ttmp1.Add(tmp1, accum)\n-\ttmp1.DivMod(tmp1, denom, tmp2)\n-\n-\t// Now, if (numer * 4 + accum) % denom...\n-\ttmp2.Add(tmp2, numer)\n-\n-\t// ... is normalized, then the two divisions have the same result.\n-\tif tmp2.Cmp(denom) >= 0 {\n-\t\treturn -1\n-\t}\n-\n-\treturn tmp1.Int64()\n-}\n-\n-func next_term(k int64) {\n-\ty2.SetInt64(k*2 + 1)\n-\tbigk.SetInt64(k)\n-\n-\ttmp1.Lsh(numer, 1)\n-\taccum.Add(accum, tmp1)\n-\taccum.Mul(accum, y2)\n-\tnumer.Mul(numer, bigk)\n-\tdenom.Mul(denom, y2)\n-}\n-\n-func eliminate_digit(d int64) {\n-\ttmp3.SetInt64(d)\n-\taccum.Sub(accum, tmp3.Mul(denom, tmp3))\n-\taccum.Mul(accum, ten)\n-\tnumer.Mul(numer, ten)\n-}\n-\n-func printf(s string, arg ...interface{}) {\n-\tif !*silent {\n-\t\tfmt.Printf(s, arg...)\n-\t}\n-}\n-\n-func main() {\n-\tflag.Parse()\n-\n-\tvar m int // 0 <= m < 10\n-\tfor i, k := 0, int64(0); ; {\n-\t\td := int64(-1)\n-\t\tfor d < 0 {\n-\t\t\tk++\n-\t\t\tnext_term(k)\n-\t\t\td = extract_digit()\n-\t\t}\n-\n-\t\tprintf(\"%c\", d+'0')\n-\n-\t\ti++\n-\t\tm = i % 10\n-\t\tif m == 0 {\n-\t\t\tprintf(\"\\t:%d\\n\", i)\n-\t\t}\n-\t\tif i >= *n {\n-\t\t\tbreak\n-\t\t}\n-\t\teliminate_digit(d)\n-\t}\n-\n-\tif m > 0 {\n-\t\tprintf(\"%s\\t:%d\\n\", \"          \"[m:10], *n)\n-\t}\n-}"}, {"sha": "ad946a9e85d9f9b7e99dd3d88f0a1cefd8de10c4", "filename": "gcc/testsuite/go.test/test/bench/shootout/pidigits.txt", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fpidigits.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,3 +0,0 @@\n-3141592653\t:10\n-5897932384\t:20\n-6264338   \t:27"}, {"sha": "9c6d42101d968a811d1840300dc9ef8d37466fac", "filename": "gcc/testsuite/go.test/test/bench/shootout/regex-dna-parallel.go", "status": "removed", "additions": 0, "deletions": 124, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna-parallel.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna-parallel.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna-parallel.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,124 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- */\n-\n-package main\n-\n-import (\n-\t\"fmt\"\n-\t\"io/ioutil\"\n-\t\"os\"\n-\t\"regexp\"\n-\t\"runtime\"\n-)\n-\n-var variants = []string{\n-\t\"agggtaaa|tttaccct\",\n-\t\"[cgt]gggtaaa|tttaccc[acg]\",\n-\t\"a[act]ggtaaa|tttacc[agt]t\",\n-\t\"ag[act]gtaaa|tttac[agt]ct\",\n-\t\"agg[act]taaa|ttta[agt]cct\",\n-\t\"aggg[acg]aaa|ttt[cgt]ccct\",\n-\t\"agggt[cgt]aa|tt[acg]accct\",\n-\t\"agggta[cgt]a|t[acg]taccct\",\n-\t\"agggtaa[cgt]|[acg]ttaccct\",\n-}\n-\n-type Subst struct {\n-\tpat, repl string\n-}\n-\n-var substs = []Subst{\n-\tSubst{\"B\", \"(c|g|t)\"},\n-\tSubst{\"D\", \"(a|g|t)\"},\n-\tSubst{\"H\", \"(a|c|t)\"},\n-\tSubst{\"K\", \"(g|t)\"},\n-\tSubst{\"M\", \"(a|c)\"},\n-\tSubst{\"N\", \"(a|c|g|t)\"},\n-\tSubst{\"R\", \"(a|g)\"},\n-\tSubst{\"S\", \"(c|g)\"},\n-\tSubst{\"V\", \"(a|c|g)\"},\n-\tSubst{\"W\", \"(a|t)\"},\n-\tSubst{\"Y\", \"(c|t)\"},\n-}\n-\n-func countMatches(pat string, bytes []byte) int {\n-\tre := regexp.MustCompile(pat)\n-\tn := 0\n-\tfor {\n-\t\te := re.FindIndex(bytes)\n-\t\tif e == nil {\n-\t\t\tbreak\n-\t\t}\n-\t\tn++\n-\t\tbytes = bytes[e[1]:]\n-\t}\n-\treturn n\n-}\n-\n-func main() {\n-\truntime.GOMAXPROCS(4)\n-\tbytes, err := ioutil.ReadAll(os.Stdin)\n-\tif err != nil {\n-\t\tfmt.Fprintf(os.Stderr, \"can't read input: %s\\n\", err)\n-\t\tos.Exit(2)\n-\t}\n-\tilen := len(bytes)\n-\t// Delete the comment lines and newlines\n-\tbytes = regexp.MustCompile(\"(>[^\\n]+)?\\n\").ReplaceAll(bytes, []byte{})\n-\tclen := len(bytes)\n-\n-\tmresults := make([]chan int, len(variants))\n-\tfor i, s := range variants {\n-\t\tch := make(chan int)\n-\t\tmresults[i] = ch\n-\t\tgo func(ss string) {\n-\t\t\tch <- countMatches(ss, bytes)\n-\t\t}(s)\n-\t}\n-\n-\tlenresult := make(chan int)\n-\tbb := bytes\n-\tgo func() {\n-\t\tfor _, sub := range substs {\n-\t\t\tbb = regexp.MustCompile(sub.pat).ReplaceAll(bb, []byte(sub.repl))\n-\t\t}\n-\t\tlenresult <- len(bb)\n-\t}()\n-\n-\tfor i, s := range variants {\n-\t\tfmt.Printf(\"%s %d\\n\", s, <-mresults[i])\n-\t}\n-\tfmt.Printf(\"\\n%d\\n%d\\n%d\\n\", ilen, clen, <-lenresult)\n-}"}, {"sha": "e23e71fd6eb93073f1a980601c684b2699948d04", "filename": "gcc/testsuite/go.test/test/bench/shootout/regex-dna-parallel.txt", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna-parallel.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna-parallel.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna-parallel.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,13 +0,0 @@\n-agggtaaa|tttaccct 1\n-[cgt]gggtaaa|tttaccc[acg] 0\n-a[act]ggtaaa|tttacc[agt]t 0\n-ag[act]gtaaa|tttac[agt]ct 0\n-agg[act]taaa|ttta[agt]cct 1\n-aggg[acg]aaa|ttt[cgt]ccct 0\n-agggt[cgt]aa|tt[acg]accct 0\n-agggta[cgt]a|t[acg]taccct 0\n-agggtaa[cgt]|[acg]ttaccct 2\n-\n-10245\n-10000\n-13348"}, {"sha": "134f8215c7f48e8dc04f90d8b464808f6bf71a8c", "filename": "gcc/testsuite/go.test/test/bench/shootout/regex-dna.c", "status": "removed", "additions": 0, "deletions": 154, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,154 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n-** The Computer Language Shootout\n-** http://shootout.alioth.debian.org/\n-** contributed by Mike Pall\n-**\n-** regex-dna benchmark using PCRE\n-**\n-** compile with:\n-**   gcc -O3 -fomit-frame-pointer -o regexdna regexdna.c -lpcre\n-*/\n-\n-#define __USE_STRING_INLINES\n-#include <stdio.h>\n-#include <string.h>\n-#include <stdlib.h>\n-#include <pcre.h>\n-\n-typedef struct fbuf {\n-  char *buf;\n-  size_t size, len;\n-} fbuf_t;\n-\n-static void fb_init(fbuf_t *b)\n-{\n-  b->buf = NULL;\n-  b->len = b->size = 0;\n-}\n-\n-static char *fb_need(fbuf_t *b, size_t need)\n-{\n-  need += b->len;\n-  if (need > b->size) {\n-    if (b->size == 0) b->size = need;\n-    else while (need > b->size) b->size += b->size;\n-    if (!(b->buf = realloc(b->buf, b->size))) exit(1);\n-  }\n-  return b->buf+b->len;\n-}\n-\n-#define FB_MINREAD\t(3<<16)\n-\n-/* Read all of a stdio stream into dst buffer. */\n-static size_t fb_readall(fbuf_t *dst, FILE *fp)\n-{\n-  char *dp;\n-  int n;\n-  for (dp = fb_need(dst, FB_MINREAD);\n-       (n = fread(dp, 1, dst->size-dst->len, fp)) > 0;\n-       dp = fb_need(dst, FB_MINREAD)) dst->len += n;\n-  if (ferror(fp)) exit(1);\n-  return dst->len;\n-}\n-\n-/* Substitute pattern p with replacement r, copying from src to dst buffer. */\n-static size_t fb_subst(fbuf_t *dst, fbuf_t *src, const char *p, const char *r)\n-{\n-  pcre *re;\n-  pcre_extra *re_ex;\n-  const char *re_e;\n-  char *dp;\n-  int re_eo, m[3], pos, rlen, clen;\n-  if (!(re = pcre_compile(p, PCRE_CASELESS, &re_e, &re_eo, NULL))) exit(1);\n-  re_ex = pcre_study(re, 0, &re_e);\n-  for (dst->len = 0, rlen = strlen(r), pos = 0;\n-       pcre_exec(re, re_ex, src->buf, src->len, pos, 0, m, 3) >= 0;\n-       pos = m[1]) {\n-    clen = m[0]-pos;\n-    dp = fb_need(dst, clen+rlen);\n-    dst->len += clen+rlen;\n-    memcpy(dp, src->buf+pos, clen);\n-    memcpy(dp+clen, r, rlen);\n-  }\n-  clen = src->len-pos;\n-  dp = fb_need(dst, clen);\n-  dst->len += clen;\n-  memcpy(dp, src->buf+pos, clen);\n-  return dst->len;\n-}\n-\n-/* Count all matches with pattern p in src buffer. */\n-static int fb_countmatches(fbuf_t *src, const char *p)\n-{\n-  pcre *re;\n-  pcre_extra *re_ex;\n-  const char *re_e;\n-  int re_eo, m[3], pos, count;\n-  if (!(re = pcre_compile(p, PCRE_CASELESS, &re_e, &re_eo, NULL))) exit(1);\n-  re_ex = pcre_study(re, 0, &re_e);\n-  for (count = 0, pos = 0;\n-       pcre_exec(re, re_ex, src->buf, src->len, pos, 0, m, 3) >= 0;\n-       pos = m[1]) count++;\n-  return count;\n-}\n-\n-static const char *variants[] = {\n-  \"agggtaaa|tttaccct\",         \"[cgt]gggtaaa|tttaccc[acg]\",\n-  \"a[act]ggtaaa|tttacc[agt]t\", \"ag[act]gtaaa|tttac[agt]ct\",\n-  \"agg[act]taaa|ttta[agt]cct\", \"aggg[acg]aaa|ttt[cgt]ccct\",\n-  \"agggt[cgt]aa|tt[acg]accct\", \"agggta[cgt]a|t[acg]taccct\",\n-  \"agggtaa[cgt]|[acg]ttaccct\", NULL\n-};\n-\n-static const char *subst[] = {\n-  \"B\", \"(c|g|t)\", \"D\", \"(a|g|t)\",   \"H\", \"(a|c|t)\", \"K\", \"(g|t)\",\n-  \"M\", \"(a|c)\",   \"N\", \"(a|c|g|t)\", \"R\", \"(a|g)\",   \"S\", \"(c|g)\",\n-  \"V\", \"(a|c|g)\", \"W\", \"(a|t)\",     \"Y\", \"(c|t)\",   NULL\n-};\n-\n-int main(int argc, char **argv)\n-{\n-  fbuf_t seq[2];\n-  const char **pp;\n-  size_t ilen, clen, slen;\n-  int flip;\n-  fb_init(&seq[0]);\n-  fb_init(&seq[1]);\n-  ilen = fb_readall(&seq[0], stdin);\n-  clen = fb_subst(&seq[1], &seq[0], \">.*|\\n\", \"\");\n-  for (pp = variants; *pp; pp++)\n-    printf(\"%s %d\\n\", *pp, fb_countmatches(&seq[1], *pp));\n-  for (slen = 0, flip = 1, pp = subst; *pp; pp += 2, flip = 1-flip)\n-    slen = fb_subst(&seq[1-flip], &seq[flip], *pp, pp[1]);\n-  printf(\"\\n%zu\\n%zu\\n%zu\\n\", ilen, clen, slen);\n-  return 0;\n-}"}, {"sha": "042d7f28361a4abfdaf7af3e5727da2715fbf4e2", "filename": "gcc/testsuite/go.test/test/bench/shootout/regex-dna.go", "status": "removed", "additions": 0, "deletions": 106, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,106 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- */\n-\n-package main\n-\n-import (\n-\t\"fmt\"\n-\t\"io/ioutil\"\n-\t\"os\"\n-\t\"regexp\"\n-)\n-\n-var variants = []string{\n-\t\"agggtaaa|tttaccct\",\n-\t\"[cgt]gggtaaa|tttaccc[acg]\",\n-\t\"a[act]ggtaaa|tttacc[agt]t\",\n-\t\"ag[act]gtaaa|tttac[agt]ct\",\n-\t\"agg[act]taaa|ttta[agt]cct\",\n-\t\"aggg[acg]aaa|ttt[cgt]ccct\",\n-\t\"agggt[cgt]aa|tt[acg]accct\",\n-\t\"agggta[cgt]a|t[acg]taccct\",\n-\t\"agggtaa[cgt]|[acg]ttaccct\",\n-}\n-\n-type Subst struct {\n-\tpat, repl string\n-}\n-\n-var substs = []Subst{\n-\tSubst{\"B\", \"(c|g|t)\"},\n-\tSubst{\"D\", \"(a|g|t)\"},\n-\tSubst{\"H\", \"(a|c|t)\"},\n-\tSubst{\"K\", \"(g|t)\"},\n-\tSubst{\"M\", \"(a|c)\"},\n-\tSubst{\"N\", \"(a|c|g|t)\"},\n-\tSubst{\"R\", \"(a|g)\"},\n-\tSubst{\"S\", \"(c|g)\"},\n-\tSubst{\"V\", \"(a|c|g)\"},\n-\tSubst{\"W\", \"(a|t)\"},\n-\tSubst{\"Y\", \"(c|t)\"},\n-}\n-\n-func countMatches(pat string, bytes []byte) int {\n-\tre := regexp.MustCompile(pat)\n-\tn := 0\n-\tfor {\n-\t\te := re.FindIndex(bytes)\n-\t\tif len(e) == 0 {\n-\t\t\tbreak\n-\t\t}\n-\t\tn++\n-\t\tbytes = bytes[e[1]:]\n-\t}\n-\treturn n\n-}\n-\n-func main() {\n-\tbytes, err := ioutil.ReadAll(os.Stdin)\n-\tif err != nil {\n-\t\tfmt.Fprintf(os.Stderr, \"can't read input: %s\\n\", err)\n-\t\tos.Exit(2)\n-\t}\n-\tilen := len(bytes)\n-\t// Delete the comment lines and newlines\n-\tbytes = regexp.MustCompile(\"(>[^\\n]+)?\\n\").ReplaceAll(bytes, []byte{})\n-\tclen := len(bytes)\n-\tfor _, s := range variants {\n-\t\tfmt.Printf(\"%s %d\\n\", s, countMatches(s, bytes))\n-\t}\n-\tfor _, sub := range substs {\n-\t\tbytes = regexp.MustCompile(sub.pat).ReplaceAll(bytes, []byte(sub.repl))\n-\t}\n-\tfmt.Printf(\"\\n%d\\n%d\\n%d\\n\", ilen, clen, len(bytes))\n-}"}, {"sha": "e23e71fd6eb93073f1a980601c684b2699948d04", "filename": "gcc/testsuite/go.test/test/bench/shootout/regex-dna.txt", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fregex-dna.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,13 +0,0 @@\n-agggtaaa|tttaccct 1\n-[cgt]gggtaaa|tttaccc[acg] 0\n-a[act]ggtaaa|tttacc[agt]t 0\n-ag[act]gtaaa|tttac[agt]ct 0\n-agg[act]taaa|ttta[agt]cct 1\n-aggg[acg]aaa|ttt[cgt]ccct 0\n-agggt[cgt]aa|tt[acg]accct 0\n-agggta[cgt]a|t[acg]taccct 0\n-agggtaa[cgt]|[acg]ttaccct 2\n-\n-10245\n-10000\n-13348"}, {"sha": "b34c84696ed0e1644dc8e221c1cc44c0555f82fa", "filename": "gcc/testsuite/go.test/test/bench/shootout/reverse-complement.c", "status": "removed", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,100 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n- * The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org\n- *\n- * contributed by Bob W\n- */\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-#define JBFSIZE 82      // line input buffer size\n-#define QBFSIZE 5200     // output buffer initial size\n-#define Z16     \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"\n-#define V32     \"\\0TVGH\\0\\0CD\\0\\0M\\0KN\\0\\0\\0YSA\\0BW\\0R\\0\\0\\0\\0\\0\\0\"\n-#define VALL    Z16 Z16 Z16 Z16 V32 V32 Z16 Z16 Z16 Z16 Z16 Z16 Z16 Z16\n-\n-int errex(char *s, int n) {      // error message+value, return 1\n-  fprintf(stderr,\"\\n*** Error: %s [%d]!\\n\", s, n);\n-  return 1;\n-}\n-\n-int main () {                    // ***** main *****\n-  char *pj, *pq, *pr;            // buffer pointers: inp,out,/out\n-  char *jjj = malloc(JBFSIZE);   // allocate input line buffer\n-  char *qqq = malloc(QBFSIZE);   // output buffer (dyn. size)\n-  char *pqstop = qqq+QBFSIZE;    // end-of-buffer pointer\n-  char xtab[256] = VALL;         // char conversion table\n-\n-  if (!jjj || !qqq)\n-    return errex(\"Buffer allocation\", !jjj + !qqq);\n-  pj = fgets(jjj,JBFSIZE,stdin);         // fetch 1st line\n-  if (!pj)\n-    return errex(\"No input data\",0);\n-  if (*jjj != '>')\n-    return errex(\"1st char not '>'\", 0);\n-\n-  while (pj) {                           // MAIN LOOP: process data\n-    fputs(jjj, stdout);                  // output ID line\n-\n-    for (pq=qqq+1, pr=pqstop; ; pq++) {  // LOOP: fill output buffer\n-      pj = fgets(jjj, JBFSIZE, stdin);   // get line from stdin\n-      if (!pj || (*jjj=='>'))  break;    // EOF or new ID line\n-      if (pr <= (pq+61)) {               // need to resize buffer\n-        char *newstop = pqstop + 12777888;\n-        char *newptr  = realloc(qqq, newstop-qqq);\n-        if (!newptr)\n-          return errex(\"Out of memory\", 0);\n-        if (newptr != qqq) {             // new base: adj. pointers\n-          size_t x = newptr-qqq;         // offset for pointer update\n-          pq+=x;  pr+=x;  qqq+=x;\n-          newstop+=x;  pqstop+=x;\n-        }\n-        pr = __builtin_memmove(newstop-(pqstop-pr), pr, pqstop-pr);\n-        pqstop = newstop;                // buffer resize complete\n-      }\n-      while (*pj) {                      // LOOP: conv. & revert line\n-        char c = xtab[(unsigned char)(*pj++)];\n-        if (c)                           // conversion valid\n-          *(--pr) = c;\n-      }\n-    }\n-\n-    for (pq = qqq; pr<pqstop; ) {        // LOOP: format output\n-      size_t x = (pqstop-pr)<60 ? pqstop-pr : 60;\n-      __builtin_memmove(pq,pr,x);        // move line to free space\n-      pr+=x;  pq+=x;  *(pq++) = 0xA;     // adjust pointers, add LF\n-    }\n-    fwrite(qqq, 1, pq-qqq, stdout);      // output converted data\n-  }\n-  return 0;\n-}"}, {"sha": "baa30ffccc8c38a0042a5bebec535349b02dcc97", "filename": "gcc/testsuite/go.test/test/bench/shootout/reverse-complement.go", "status": "removed", "additions": 0, "deletions": 105, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,105 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- */\n-\n-package main\n-\n-import (\n-\t\"bufio\"\n-\t\"os\"\n-)\n-\n-const lineSize = 60\n-\n-var complement = [256]uint8{\n-\t'A': 'T', 'a': 'T',\n-\t'C': 'G', 'c': 'G',\n-\t'G': 'C', 'g': 'C',\n-\t'T': 'A', 't': 'A',\n-\t'U': 'A', 'u': 'A',\n-\t'M': 'K', 'm': 'K',\n-\t'R': 'Y', 'r': 'Y',\n-\t'W': 'W', 'w': 'W',\n-\t'S': 'S', 's': 'S',\n-\t'Y': 'R', 'y': 'R',\n-\t'K': 'M', 'k': 'M',\n-\t'V': 'B', 'v': 'B',\n-\t'H': 'D', 'h': 'D',\n-\t'D': 'H', 'd': 'H',\n-\t'B': 'V', 'b': 'V',\n-\t'N': 'N', 'n': 'N',\n-}\n-\n-func main() {\n-\tin := bufio.NewReader(os.Stdin)\n-\tbuf := make([]byte, 1024*1024)\n-\tline, err := in.ReadSlice('\\n')\n-\tfor err == nil {\n-\t\tos.Stdout.Write(line)\n-\n-\t\t// Accumulate reversed complement in buf[w:]\n-\t\tnchar := 0\n-\t\tw := len(buf)\n-\t\tfor {\n-\t\t\tline, err = in.ReadSlice('\\n')\n-\t\t\tif err != nil || line[0] == '>' {\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t\tline = line[0 : len(line)-1]\n-\t\t\tnchar += len(line)\n-\t\t\tif len(line)+nchar/60+128 >= w {\n-\t\t\t\tnbuf := make([]byte, len(buf)*5)\n-\t\t\t\tcopy(nbuf[len(nbuf)-len(buf):], buf)\n-\t\t\t\tw += len(nbuf) - len(buf)\n-\t\t\t\tbuf = nbuf\n-\t\t\t}\n-\n-\t\t\t// This loop is the bottleneck.\n-\t\t\tfor _, c := range line {\n-\t\t\t\tw--\n-\t\t\t\tbuf[w] = complement[c]\n-\t\t\t}\n-\t\t}\n-\n-\t\t// Copy down to beginning of buffer, inserting newlines.\n-\t\t// The loop left room for the newlines and 128 bytes of padding.\n-\t\ti := 0\n-\t\tfor j := w; j < len(buf); j += 60 {\n-\t\t\tn := copy(buf[i:i+60], buf[j:])\n-\t\t\tbuf[i+n] = '\\n'\n-\t\t\ti += n + 1\n-\t\t}\n-\t\tos.Stdout.Write(buf[0:i])\n-\t}\n-}"}, {"sha": "14d792ade8d52eaf0f7a9059d1d78d58d57096c0", "filename": "gcc/testsuite/go.test/test/bench/shootout/reverse-complement.txt", "status": "removed", "additions": 0, "deletions": 171, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Freverse-complement.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,171 +0,0 @@\n->ONE Homo sapiens alu\n-CGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAAC\n-CTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACA\n-GGCGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCAT\n-GTTGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAA\n-AGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTC\n-TGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCGCCTCCCGG\n-GTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGCGCCACC\n-ACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGGCCAGGCTG\n-GTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTA\n-CAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCT\n-GGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTC\n-TCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGCGCCACCACGCCCGGCTAAT\n-TTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGGCCAGGCTGGTCTCGAACTCCT\n-GACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCA\n-CCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGC\n-GCGATCTCGGCTCACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCC\n-TCCCGAGTAGCTGGGATTACAGGCGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTA\n-GTAGAGACGGGGTTTCACCATGTTGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGAT\n-CCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCT\n-TTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTC\n-ACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTG\n-GGATTACAGGCGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGT\n-TTCACCATGTTGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGG\n-CCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAG\n-TCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCG\n-CCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGC\n-GCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGG\n-CCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGC\n-TGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTGTCG\n-CCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCGCCTCCCGGGTTCA\n-AGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGCGCCACCACGCC\n-CGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGGCCAGGCTGGTCTC\n-GAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGC\n-GTGAGCCACCGCGCCCGGCC\n->TWO IUB ambiguity codes\n-TAGGDHACHATCRGTRGVTGAGWTATGYTGCTGTCABACDWVTRTAAGAVVAGATTTNDA\n-GASMTCTGCATBYTTCAAKTTACMTATTACTTCATARGGYACMRTGTTTTYTATACVAAT\n-TTCTAKGDACKADACTATATNTANTCGTTCACGBCGYSCBHTANGGTGATCGTAAAGTAA\n-CTATBAAAAGATSTGWATBCSGAKHTTABBAACGTSYCATGCAAVATKTSKTASCGGAAT\n-WVATTTNTCCTTCTTCTTDDAGTGGTTGGATACVGTTAYMTMTBTACTTTHAGCTAGBAA\n-AAGAGKAAGTTRATWATCAGATTMDDTTTAAAVAAATATTKTCYTAAATTVCNKTTRACG\n-ADTATATTTATGATSADSCAATAWAGCGRTAGTGTAAGTGACVGRADYGTGCTACHVSDT\n-CTVCARCSYTTAATATARAAAATTTAATTTACDAATTGBACAGTAYAABATBTGCAGBVG\n-TGATGGDCAAAATBNMSTTABKATTGGSTCCTAGBTTACTTGTTTAGTTTATHCGATSTA\n-AAGTCGAKAAASTGTTTTAWAKCAGATATACTTTTMTTTTGBATAGAGGAGCMATGATRA\n-AAGGNCAYDCCDDGAAAGTHGBTAATCKYTBTACBGTBCTTTTTGDTAASSWTAAWAARA\n-TTGGCTAAGWGRADTYACATAGCTCBTAGATAWAGCAATNGTATMATGTTKMMAGTAWTC\n-CCNTSGAAWATWCAAAAMACTGAADNTYGATNAATCCGAYWNCTAACGTTAGAGDTTTTC\n-ATCTGGKRTAVGAABVCTGWGBTCTDVGKATTBTCTAAGGVADAAAVWTCTAGGGGAGGG\n-TTAGAACAATTAAHTAATNAAATGCATKATCTAAYRTDTCAGSAYTTYHGATRTTWAVTA\n-BGNTCDACAGBCCRCAGWCRTCABTGMMAWGMCTCAACCGATRTGBCAVAATCGTDWDAA\n-CAYAWAATWCTGGTAHCCCTAAGATAACSCTTAGTGSAACAWTBGTCDTTDGACWDBAAC\n-HTTTNGSKTYYAAYGGATNTGATTTAARTTAMBAATCTAAGTBTCATYTAACTTADTGTT\n-TCGATACGAAHGGCYATATACCWDTKYATDCSHTDTCAAAATGTGBACTGSCCVGATGTA\n-TCMMAGCCTTDAAABAATGAAGAGTAACTHATMGVTTAATAACCCGGTTVSANTGCAATT\n-GTGAGATTTAMGTTTAMAAYGCTGACAYAAAAAGGCACAMYTAAGVGGCTGGAABVTACG\n-GATTSTYGTBVAKTATWACCGTGTKAGTDTGTATGTTTAAAGGAAAAAGTAACATARAAA\n-GGTYCAMNYAAABTATAGNTSATANAGTCATCCTATWADKAACTRGTMSACDGTATSAYT\n-AAHSHGTAABYGACTYTATADTGSTATAGAGAAATCGNTAAAGGAAATCAGTTGTNCYMV\n-TNACDRTATBNATATASTAGAAMSCGGGANRCKKMCAAACATTNAGTCTRMAATBMTACC\n-CGTACTTCTBGDSYAATWGAAAATGACADDCHAKAAAYATATTKTTTTCACANACWAGAA\n-AKATCCTTATTAYKHKCTAAACARTATTTTDATBTVWCYGCAATACTAGGKAAASTTDGA\n-MGGCHTTHAATVCAHDRYAGGRCTATACGTCMAGAGAGCTBTHGNACARTCCBDCTAAGA\n-GCGGCTTTARTAAAGAATCCNAGTAWBTGACTTGAATTACWTVACAGAAABCAATNAAAC\n-CGTNTRANTTGAYCMAWBADTANABRGGTKTHTWTAGTTVCTMBKTAGMTVKCCAGCANT\n-TVAGSWTTAGCCGCRHTTTCCTTHNTATTAAGAAGAATAGGMTRAARTCTABGTACDTTT\n-TATAAVDHAHTATAGATCCTAGTAAGYTWATDWCATGAGGGATAGTAAMDMNGBASTWAM\n-TSTATRBAYDABATGTATATYCGCACTGTTTTAACMCWBTATAWAGTATBTSTATVTTAR\n-CCTMTTAAKADATCAACTAATYTSVTAKGDATTATGCKTCAYCAKAATACTTKAANGAGT\n-ATTSDAGATCGGAAATACTTAAYAAVGTATMCGCTTGTGTDCTAATYTATTTTATTTWAA\n-CAGWRCTATGTAGMTGTTTGTTYKTNGTTKTCAGAACNTRACCTACKTGSRATGTGGGGG\n-CTGTCATTAAGTAAATNGSTTABCCCCTCGCAGCTCWHTCGCGAAGCAVATGCKACGHCA\n-ACAKTTAATAACASAAADATTWNYTGTAATTGTTCGTMHACHTWATGTGCWTTTTGAAHY\n-ACTTTGTAYAMSAAACTTAADAAATATAGTABMATATYAATGSGGTAGTTTGTGTBYGGT\n-TWSGSVGWMATTDMTCCWWCABTCSVACAGBAATGTTKATBGTCAATAATCTTCTTAAAC\n-ARVAATHAGYBWCTRWCABGTWWAATCTAAGTCASTAAAKTAAGVKBAATTBGABACGTA\n-AGGTTAAATAAAAACTRMDTWBCTTTTTAATAAAAGATMGCCTACKAKNTBAGYRASTGT\n-ASSTCGTHCGAAKTTATTATATTYTTTGTAGAACATGTCAAAACTWTWTHGKTCCYAATA\n-AAGTGGAYTMCYTAARCSTAAATWAKTGAATTTRAGTCTSSATACGACWAKAASATDAAA\n-TGYYACTSAACAAHAKTSHYARGASTATTATTHAGGYGGASTTTBGAKGATSANAACACD\n-TRGSTTRAAAAAAAACAAGARTCVTAGTAAGATAWATGVHAAKATWGAAAAGTYAHVTAC\n-TCTGRTGTCAWGATRVAAKTCGCAAVCGASWGGTTRTCSAMCCTAACASGWKKAWDAATG\n-ACRCBACTATGTGTCTTCAAAHGSCTATATTTCGTVWAGAAGTAYCKGARAKSGKAGTAN\n-TTTCYACATWATGTCTAAAADMDTWCAATSTKDACAMAADADBSAAATAGGCTHAHAGTA\n-CGACVGAATTATAAAGAHCCVAYHGHTTTACATSTTTATGNCCMTAGCATATGATAVAAG\n->THREE Homo sapiens frequency\n-ATATTTATCTTTTCACTTCCTACATTGGTCAGACCATTATTCGACACGTGGCGTCATTTT\n-GTCATACCGGGTAATGTTGGAAACAAAACGTACTGATAAAATACTGAGTTGTAAACTCTA\n-ATCAGATAACGCGCTTGGATATTAAGATTCACACAGGGGTTTCGGCTGTAAAAAAACTTG\n-TGGAGCTGTTCTGGGACAGATAAGTTGTACCTCGTACTTAGCTAATTAATGAACCAACTG\n-ATTACGATAGAACAATTCTGAGGCCGCCAGGACAGCCAAATTTTAATCTTATAAAGCTGG\n-AAACAGCCGGTATTAGCTTCTCGCATACTTTGCCTGCATTGGTACCTTACAGATATCAGC\n-GTAGTCATATACACCTCGGTCTCAGCTAAGCTTGTATCTCTTAGAGTAGTTCAAAGATAG\n-TGGACAATACCTGTGGAATCGATTGCAGATATGGATTTATTTAACTACTGAGTCTCATTC\n-ACAAGCTAAGCAAGGAGCACGTTTTGGTGCCGGCATACCGATTTGCTATCATGTCAGCAA\n-ATTTGCGTTGTATTCCTAGTTGCACCCATTAAGGCCACACTCCGAACCTAATTATTACAT\n-CGCAAAGACATGTACGAAGGACCCGATGTCGAATAGAAGGGAGGACTGTTCATTGGAAGC\n-TAGACCAGAGGAATCGCAAAGATGCAACTCTTACAATAAAAATCTAATTTCAGTCAACAC\n-GCAATTTCTATAAGGTTTCCGATAATAATGAACCGTCTTCCACAGGGGAATTTGCCATGC\n-TCGTAAAAGTAGTTAATCCAAGTAGAAGAAATTTTGATAATGTTTTAAGTTGGCACGAAG\n-GAATTCAGAGAGATCTTACCTAACAAAGGCATTAGTAGATGTTCCTTGGTTCACACTCGG\n-TCAATCAGAGCACATACTACGGGCGATACCGGGAATGACACAACATCAATGAGATTGTTA\n-AGTGAGGTAATTGACTTTAGAGGACTCGATCAGTATACTGTCACTATGAACATCGTATTA\n-ATTGTTATCCGATATATACACCACCGATTTGCTTGTGCAAGGTTACAGACCCATTCGATA\n-AATACAAACACGGAGCGATATTATTTAAGGAGTGCTGTCTTCAAAAGAATTATTCCCACA\n-CCGACATAAGAACTTCGCTCCGTCATTCCAGATTTAAATAACATAACGTAACGCTTTGCT\n-GATAACATAACATAACCGAGAATTTGCTTAGGAAATTTGGAGCAATATTGCATTGTTTCT\n-CAGTCATCACAAGGCCCGCCAAAGAACTCTGAGAATCAGGATTCAACATGATTGGTAAGA\n-CTCTATATATATAACTTAATTCTTGTGTCCGGAGATAGAAAGAGGACGAGAGATACTACG\n-AAAGAAAGTGTACTTCGATGTATCAATTCAGACGCCTTCTCTATCATCAACATTATAGGT\n-CTCGTATATGCTCGGCGCGATCTGCTTCTCTCCGCCAATAGCCCCATAGTGTATTTCAAG\n-CGCAGTAACAGTGAAATCGTTACGAAGGTAGGGATGTTGCTTATAATTGTCGTAACTTAT\n-CGCTTATGTATCTTTCAAGAATGAACGGCAGCATATACATACGTTCTACCTTTAGCTACA\n-AAGCATCCATATACTCCCTCTCATGATTGAAACTCTTCCCTATTTTGTAGCCAATAGTGA\n-AAGCGTATTAGTATAAATTCGTCGGTTTTTCACTCGCAACTGTTATACTCTGCAAACAAA\n-CGAAAGCCTCATAGTACAAACCTAAAGCTACATACTTCATCATTGGCAGACCAGTGGCGG\n-TATTTCTACGGAAGCATCACTATAGATATAAAGTTTCCCTTCATGTACGTCTGTTAACCA\n-TATCACAAGAAACTGCTATCTCTGTCACGTAACAATTCACGCGCCTTATCGCCAAATGTT\n-CATATATGCGCGGTATACGTATGAACGAATACTAATTAGTATAACGGAGGATTCACGGGA\n-GGGATACTTGGGGCATTTATAAATCGTCTAAAAATTTTCTATCAGCACTTGCGGGTTATA\n-GTGGATTACTAGGCAACATAATATTCTGTATTGGTCCAAATGACGCTATAGATAAATTAG\n-CAAAATACATTGTTTCCATTTATGTAAGTCGAAACTCCAGGACTCCCGGGAACCAGTTAA\n-ACCGTCTGGAAAAGACACATTGTGAGCGGGACTTCAATGATAGCTTTCAATGAGCTTCTC\n-ATGCTTGGGGTCTGTACATATATGTTGGCGAAATTATCGTCTGTATTCTGTTATGCTTTG\n-ATCATGGGTTATTAGTATAGTGTCCGGTTAAGTACCAATACCGCTAGAGACCCGACCTAA\n-GTCGATAACTAACGATCATCGACGTAAGGATCGTCTCGATCAGTACTTCAGTCTAGATCT\n-GGGAATAGTAACTCGTTAGTGAACTATGTCGTGTCATAACTCTAAAATGCAATCAAATCT\n-TATTATTGAGTATTGATTATATAAAGCATCCGCTTAGCTTTACCCTCAAATGTTATATGC\n-AATTTAAAGCGCTTGATATCGTCTACTCAAGTTCAGGTTTCACATGGCCGCAACGTGACG\n-TTATTAGAGGTGGGTCATCATCTCTGAGGCTAGTGATGTTGAATACTCATTGAATGGGAA\n-GTGGAATACCATGCTCGTAGGTAACAGCATGACCTATAAAATATACTATGGGTGTGTGGT\n-AGATCAATATTGTTCAAGCATATCGTAACAATAACGGCTGAAATGTTACTGACATGAAAG\n-AGGGAGTCCAAACCATTCTAACAGCTGATCAAGTCGTCTAAAAACGCCTGGTTCAGCCTT\n-AAGAGTTATAAGCCAGACAAATTGTATCAATAGAGAATCCGTAAATTCCTCGGCCAACCT\n-CTTGCAAAGACATCACTATCAATATACTACCGTGATCTTAATTAGTGAACTTATATAAAT\n-ATCTACAACCAGATTCAACGGAAAAGCTTTAGTGGATTAGAAATTGCCAAGAATCACATT\n-CATGTGGGTTCGAATGCTTTAGTAATACCATTTCGCCGAGTAGTCACTTCGCTGAACTGT\n-CGTAAATTGCTATGACATAATCGAAAAGGATTGTCAAGAGTCGATTACTGCGGACTAATA\n-ATCCCCACGGGGGTGGTCTCATGTCTCCCCAGGCGAGTGGGGACGGTTGATAAACACGCT\n-GCATCGCGGACTGATGTTCCCAGTATTACATAGTCACATTGGATTGCGAGTAGTCTACCT\n-ATTTATGAGCGAGAGATGCCTCTAACTACTTCGACTTTTAAAACCTTTCCACGCCAGTAT\n-TCGGCGAAAGGGAAGTATTAAGGGTTGTCATAATTAAGCTGATACCACTTCAGACTTTGC\n-TCTACTTCTGTCTTTCATTGGTTTAGTAAAGTCTGTCCATTCGTCGAGACCGTCTTTTGC\n-AGCCTCATTCTACCAACTGCTCCGACTCTTAGTCTGCTTCTCCCAGCGTTATAACAAGAG\n-GCATTTTGTCATCCTTAAAACAATAATAAAGAACTCGGAGCACTGATATAATGACTGAAT\n-TAGAACCGCTTAAAAATACAACGAATAGATAAGACTATCGGATAAGATCTAATATGTAGT\n-GATTAAGCCCTTTATTAATTAATAATAGTTACCCTTTCTGATGTAACGCGACATATTACG\n-ATTTAGTGGCACGTCTGAATTGCAAAGCAGATCTCTACCCGATTTTTATTATAAATCCCG\n-TATACATCTTGACTTGAGTAATTGTTCATCTTTTTATATCTCTTCGTACTACAAATAATT\n-AATATCTCAACCCGTATTGTGTGATTCTAATTACCAACAGAATACGAGGAGGTTTTTGCT\n-TAGGGCCATATATAATGAATCTATCTCGTTTATTCGCGGAACCCGAGATAACATTACGAT\n-GTAACTATTTTAGAGAACTTAATACAAGAAACATTGCTGATTACTCATAACTAAATGCTT\n-GGTAATATATCCTCAGTGCCCCTACCATCTTTTACGCAGGGATGTAATTACTTAGGATTC\n-ATTGTGTAAGAATTACAATGAACGATGGATATGAAGGCATGTTGCGAGGTGTTCCTTGGT\n-ATGTGAAGTTCGCAGGGCAACAAAAATTTCGCAGAATAGGCCTCAAAGTATTGGTAAAGA\n-AGACAACTAATCATCACGAGCTTCTGATATCAATACGAACGAGTCCTGTGATGGATGAAA\n-GAAAGTCGTATCGAAAATGTCAAGAGTCTGCCCAATGTAACTTACTTCAAAAAATAACGC\n-TTCCGCCAAGTACGTTCGAATAAACGTAATTTTAAAAATACATAAGGGGTGTTAGAAAGT\n-AAGCGACGGGATATAAGTTAGACTCAAGATTCCGCCGTAAAACGAGACTGATTCCGAAGA\n-TTGTTCGTGGATCTGGTCATGACTTTCACTGAGTAAGGAGTTTCGACATATGTCAATAAA\n-CACAAAAATAGAAGCTATTCGATCTGAAAAATATTAGGACAAGAAACTATCTCACGCTAG\n-CCCAGAATATTCACTCACCCACGGGCGATACTAAAGCACTATATAGTCGCGTGATTACTA\n-TACATATGGTACACATAAGAATCACGATCAGGTTCTCAATTTTCAACAATATATGTTTAT\n-TTGCATAGGTAATATTAGGCCTTTAAGAGAAGGATGGGTGAGATACTCCGGGGATGGCGG\n-CAATAAAGAAAAACACGATATGAGTAATAGGATCCTAATATCTTGGCGAGAGACTTAAGG\n-TACGAATTTTGCGCAATCTATTTTTTACTTGGCCAGAATTCATGTATGGTATAAGTACGA\n-ACTTTTTTGATCACTTTCATGGCTACCTGATTAGGATAGTTTGAGGAATTTCCCAAATAT\n-ACCGATTTAATATACACTAGGGCTTGTCACTTTGAGTCAGAAAAAGAATATAATTACTTA\n-GGGTAATGCTGCATACATATTCTTATATTGCAAAGGTTCTCTGGGTAATCTTGAGCCTTC\n-ACGATACCTGGTGAAGTGTT"}, {"sha": "2706f39ec3d593e56c93d5ba4a4ad88ba0dbcbba", "filename": "gcc/testsuite/go.test/test/bench/shootout/spectral-norm-parallel.go", "status": "removed", "additions": 0, "deletions": 111, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm-parallel.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm-parallel.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm-parallel.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,111 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * Based on spectral-norm.c by Sebastien Loisel\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"math\"\n-\t\"runtime\"\n-)\n-\n-var n = flag.Int(\"n\", 2000, \"count\")\n-var nCPU = flag.Int(\"ncpu\", 4, \"number of cpus\")\n-\n-func evalA(i, j int) float64 { return 1 / float64(((i+j)*(i+j+1)/2 + i + 1)) }\n-\n-type Vec []float64\n-\n-func (v Vec) Times(i, n int, u Vec, c chan int) {\n-\tfor ; i < n; i++ {\n-\t\tv[i] = 0\n-\t\tfor j := 0; j < len(u); j++ {\n-\t\t\tv[i] += evalA(i, j) * u[j]\n-\t\t}\n-\t}\n-\tc <- 1\n-}\n-\n-func (v Vec) TimesTransp(i, n int, u Vec, c chan int) {\n-\tfor ; i < n; i++ {\n-\t\tv[i] = 0\n-\t\tfor j := 0; j < len(u); j++ {\n-\t\t\tv[i] += evalA(j, i) * u[j]\n-\t\t}\n-\t}\n-\tc <- 1\n-}\n-\n-func wait(c chan int) {\n-\tfor i := 0; i < *nCPU; i++ {\n-\t\t<-c\n-\t}\n-}\n-\n-func (v Vec) ATimesTransp(u Vec) {\n-\tx := make(Vec, len(u))\n-\tc := make(chan int, *nCPU)\n-\tfor i := 0; i < *nCPU; i++ {\n-\t\tgo x.Times(i*len(v) / *nCPU, (i+1)*len(v) / *nCPU, u, c)\n-\t}\n-\twait(c)\n-\tfor i := 0; i < *nCPU; i++ {\n-\t\tgo v.TimesTransp(i*len(v) / *nCPU, (i+1)*len(v) / *nCPU, x, c)\n-\t}\n-\twait(c)\n-}\n-\n-func main() {\n-\tflag.Parse()\n-\truntime.GOMAXPROCS(*nCPU)\n-\tN := *n\n-\tu := make(Vec, N)\n-\tfor i := 0; i < N; i++ {\n-\t\tu[i] = 1\n-\t}\n-\tv := make(Vec, N)\n-\tfor i := 0; i < 10; i++ {\n-\t\tv.ATimesTransp(u)\n-\t\tu.ATimesTransp(v)\n-\t}\n-\tvar vBv, vv float64\n-\tfor i := 0; i < N; i++ {\n-\t\tvBv += u[i] * v[i]\n-\t\tvv += v[i] * v[i]\n-\t}\n-\tfmt.Printf(\"%0.9f\\n\", math.Sqrt(vBv/vv))\n-}"}, {"sha": "832eb3d2176016ff98b021703bd3ac95a614dd1a", "filename": "gcc/testsuite/go.test/test/bench/shootout/spectral-norm.c", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,82 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* -*- mode: c -*-\n- *\n- * The Great Computer Language Shootout\n- * http://shootout.alioth.debian.org/\n- *\n- * Contributed by Sebastien Loisel\n- */\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <math.h>\n-\n-double eval_A(int i, int j) { return 1.0/((i+j)*(i+j+1)/2+i+1); }\n-\n-void eval_A_times_u(int N, const double u[], double Au[])\n-{\n-  int i,j;\n-  for(i=0;i<N;i++)\n-    {\n-      Au[i]=0;\n-      for(j=0;j<N;j++) Au[i]+=eval_A(i,j)*u[j];\n-    }\n-}\n-\n-void eval_At_times_u(int N, const double u[], double Au[])\n-{\n-  int i,j;\n-  for(i=0;i<N;i++)\n-    {\n-      Au[i]=0;\n-      for(j=0;j<N;j++) Au[i]+=eval_A(j,i)*u[j];\n-    }\n-}\n-\n-void eval_AtA_times_u(int N, const double u[], double AtAu[])\n-{ double v[N]; eval_A_times_u(N,u,v); eval_At_times_u(N,v,AtAu); }\n-\n-int main(int argc, char *argv[])\n-{\n-  int i;\n-  int N = ((argc == 2) ? atoi(argv[1]) : 2000);\n-  double u[N],v[N],vBv,vv;\n-  for(i=0;i<N;i++) u[i]=1;\n-  for(i=0;i<10;i++)\n-    {\n-      eval_AtA_times_u(N,u,v);\n-      eval_AtA_times_u(N,v,u);\n-    }\n-  vBv=vv=0;\n-  for(i=0;i<N;i++) { vBv+=u[i]*v[i]; vv+=v[i]*v[i]; }\n-  printf(\"%0.9f\\n\",sqrt(vBv/vv));\n-  return 0;\n-}"}, {"sha": "6667f3e04a5e1bc39238d4ff7d603e34c7997e9d", "filename": "gcc/testsuite/go.test/test/bench/shootout/spectral-norm.go", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,93 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- * Based on spectral-norm.c by Sebastien Loisel\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"math\"\n-)\n-\n-var n = flag.Int(\"n\", 2000, \"count\")\n-\n-func evalA(i, j int) float64 { return 1 / float64(((i+j)*(i+j+1)/2 + i + 1)) }\n-\n-type Vec []float64\n-\n-func (v Vec) Times(u Vec) {\n-\tfor i := 0; i < len(v); i++ {\n-\t\tv[i] = 0\n-\t\tfor j := 0; j < len(u); j++ {\n-\t\t\tv[i] += evalA(i, j) * u[j]\n-\t\t}\n-\t}\n-}\n-\n-func (v Vec) TimesTransp(u Vec) {\n-\tfor i := 0; i < len(v); i++ {\n-\t\tv[i] = 0\n-\t\tfor j := 0; j < len(u); j++ {\n-\t\t\tv[i] += evalA(j, i) * u[j]\n-\t\t}\n-\t}\n-}\n-\n-func (v Vec) ATimesTransp(u Vec) {\n-\tx := make(Vec, len(u))\n-\tx.Times(u)\n-\tv.TimesTransp(x)\n-}\n-\n-func main() {\n-\tflag.Parse()\n-\tN := *n\n-\tu := make(Vec, N)\n-\tfor i := 0; i < N; i++ {\n-\t\tu[i] = 1\n-\t}\n-\tv := make(Vec, N)\n-\tfor i := 0; i < 10; i++ {\n-\t\tv.ATimesTransp(u)\n-\t\tu.ATimesTransp(v)\n-\t}\n-\tvar vBv, vv float64\n-\tfor i := 0; i < N; i++ {\n-\t\tvBv += u[i] * v[i]\n-\t\tvv += v[i] * v[i]\n-\t}\n-\tfmt.Printf(\"%0.9f\\n\", math.Sqrt(vBv/vv))\n-}"}, {"sha": "b9885983ee4387f942ee8510c1c9c05bfcb1af5f", "filename": "gcc/testsuite/go.test/test/bench/shootout/spectral-norm.txt", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fspectral-norm.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1 +0,0 @@\n-1.274224152"}, {"sha": "a518134ba65e6e8459a4c59607514d99a2e22a7e", "filename": "gcc/testsuite/go.test/test/bench/shootout/threadring.c", "status": "removed", "additions": 0, "deletions": 103, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.c?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,103 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/*\n-* The Computer Language Benchmarks Game\n-* http://shootout.alioth.debian.org/\n-\n-* contributed by Premysl Hruby\n-*/\n-\n-#include <stdint.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <pthread.h>\n-#include <string.h>\n-#include <limits.h>\n-\n-#define THREADS (503)\n-\n-\n-struct stack {\n-   char x[PTHREAD_STACK_MIN];\n-};\n-\n-\n-/* staticaly initialize mutex[0] mutex */\n-static pthread_mutex_t mutex[THREADS];\n-static int data[THREADS];\n-static struct stack stacks[THREADS];\n-/* stacks must be defined staticaly, or my i386 box run of virtual memory for this\n- * process while creating thread +- #400 */\n-\n-static void* thread(void *num)\n-{\n-   int l = (int)(uintptr_t)num;\n-   int r = (l+1) % THREADS;\n-   int token;\n-\n-   while(1) {\n-      pthread_mutex_lock(mutex + l);\n-      token = data[l];\n-      if (token) {\n-         data[r] = token - 1;\n-         pthread_mutex_unlock(mutex + r);\n-      }\n-      else {\n-         printf(\"%i\\n\", l+1);\n-         exit(0);\n-      }\n-   }\n-}\n-\n-\n-\n-int main(int argc, char **argv)\n-{\n-   int i;\n-   pthread_t cthread;\n-   pthread_attr_t stack_attr;\n-\n-   if (argc != 2)\n-      exit(255);\n-   data[0] = atoi(argv[1]);\n-\n-   pthread_attr_init(&stack_attr);\n-\n-   for (i = 0; i < THREADS; i++) {\n-      pthread_mutex_init(mutex + i, NULL);\n-      pthread_mutex_lock(mutex + i);\n-\n-      pthread_attr_setstack(&stack_attr, &stacks[i], sizeof(struct stack));\n-      pthread_create(&cthread, &stack_attr, thread, (void*)(uintptr_t)i);\n-   }\n-\n-   pthread_mutex_unlock(mutex + 0);\n-   pthread_join(cthread, NULL);\n-}"}, {"sha": "e76dd0b452decdc25b359015197eb328cc6d589f", "filename": "gcc/testsuite/go.test/test/bench/shootout/threadring.go", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,71 +0,0 @@\n-/*\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met:\n-\n-    * Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n-\n-    * Redistributions in binary form must reproduce the above copyright\n-    notice, this list of conditions and the following disclaimer in the\n-    documentation and/or other materials provided with the distribution.\n-\n-    * Neither the name of \"The Computer Language Benchmarks Game\" nor the\n-    name of \"The Computer Language Shootout Benchmarks\" nor the names of\n-    its contributors may be used to endorse or promote products derived\n-    from this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n-ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n-POSSIBILITY OF SUCH DAMAGE.\n-*/\n-\n-/* The Computer Language Benchmarks Game\n- * http://shootout.alioth.debian.org/\n- *\n- * contributed by The Go Authors.\n- */\n-\n-package main\n-\n-import (\n-\t\"flag\"\n-\t\"fmt\"\n-\t\"os\"\n-)\n-\n-var n = flag.Int(\"n\", 1000, \"how many passes\")\n-\n-const Nthread = 503\n-\n-func f(i int, in <-chan int, out chan<- int) {\n-\tfor {\n-\t\tn := <-in\n-\t\tif n == 0 {\n-\t\t\tfmt.Printf(\"%d\\n\", i)\n-\t\t\tos.Exit(0)\n-\t\t}\n-\t\tout <- n - 1\n-\t}\n-}\n-\n-func main() {\n-\tflag.Parse()\n-\n-\tone := make(chan int) // will be input to thread 1\n-\tvar in, out chan int = nil, one\n-\tfor i := 1; i <= Nthread-1; i++ {\n-\t\tin, out = out, make(chan int)\n-\t\tgo f(i, in, out)\n-\t}\n-\tgo f(Nthread, out, one)\n-\tone <- *n\n-\t<-make(chan int) // hang until ring completes\n-}"}, {"sha": "f9aaa4d565f4a169e1033d0aa0aa7eb4a22e351f", "filename": "gcc/testsuite/go.test/test/bench/shootout/threadring.txt", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.txt?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1 +0,0 @@\n-498"}, {"sha": "4e7d17a11b9cb429172b9bb521ca8150eaf5738e", "filename": "gcc/testsuite/go.test/test/bench/shootout/timing.log", "status": "removed", "additions": 0, "deletions": 1254, "changes": 1254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.log", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.log", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.log?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,1254 +0,0 @@\n-All tests on r45 or r70\n-\n-Aug 3 2009\n-\n-First version of fasta. Translation of fasta.c, fetched from\n-\thttp://shootout.alioth.debian.org/u32q/benchmark.php?test=fasta&lang=gpp&id=4\n-\n-fasta -n 25000000\n-\tgcc -O2 fasta.c\t5.98u 0.00s 6.01r\n-\tgccgo -O2 fasta.go\t8.82u 0.02s 8.85r\n-\t6g fasta.go\t13.50u 0.02s 13.53r\n-\t6g -B fata.go\t12.99u 0.02s 13.02r\n-\n-Aug 4 2009\n-[added timing.sh]\n-\n-# myrandom:\n-#   hand-written optimization of integer division\n-#   use int32->float conversion\n-fasta -n 25000000\n-\t# probably I/O library inefficiencies\n-\tgcc -O2 fasta.c\t5.99u 0.00s 6.00r \n-\tgccgo -O2 fasta.go\t8.82u 0.02s 8.85r\n-\tgc fasta\t10.70u 0.00s 10.77r\n-\tgc_B fasta\t10.09u 0.03s 10.12r\n-\n-reverse-complement < output-of-fasta-25000000\n-\t# we don't know - memory cache behavior?\n-\tgcc -O2 reverse-complement.c\t2.04u 0.94s 10.54r\n-\tgccgo -O2 reverse-complement.go\t6.54u 0.63s 7.17r\n-\tgc reverse-complement\t6.55u 0.70s 7.26r\n-\tgc_B reverse-complement\t6.32u 0.70s 7.10r\n-\n-nbody 50000000\n-\t# math.Sqrt needs to be in assembly; inlining is probably the other 50%\n-\tgcc -O2 nbody.c\t21.61u 0.01s 24.80r\n-\tgccgo -O2 nbody.go\t118.55u 0.02s 120.32r\n-\tgc nbody\t100.84u 0.00s 100.85r\n-\tgc_B nbody\t103.33u 0.00s 103.39r\n-[\n-hacked Sqrt in assembler\n-\tgc nbody\t31.97u 0.00s 32.01r\n-]\n-\n-binary-tree 15 # too slow to use 20\n-\t# memory allocation and garbage collection\n-\tgcc -O2 binary-tree.c -lm\t0.86u 0.00s 0.87r\n-\tgccgo -O2 binary-tree.go\t1.69u 0.46s 2.15r\n-\tgccgo -O2 binary-tree-freelist.go\t8.48u 0.00s 8.48r\n-\tgc binary-tree\t9.60u 0.01s 9.62r\n-\tgc binary-tree-freelist\t0.48u 0.01s 0.50r\n-\n-August 5, 2009\n-\n-fannkuch 12\n-\t# bounds checking is half the difference\n-\t# rest might be registerization\n-\tgcc -O2 fannkuch.c\t60.09u 0.01s 60.32r\n-\tgccgo -O2 fannkuch.go\t64.89u 0.00s 64.92r\n-\tgc fannkuch\t124.59u 0.00s 124.67r\n-\tgc_B fannkuch\t91.14u 0.00s 91.16r\n-\n-regex-dna 100000\n-\t# regexp code is slow on trivial regexp\n-\tgcc -O2 regex-dna.c -lpcre\t0.92u 0.00s 0.99r\n-\tgc regexp-dna\t26.94u 0.18s 28.75r\n-\tgc_B regexp-dna\t26.51u 0.09s 26.75r\n-\n-spectral-norm 5500\n-\tgcc -O2 spectral-norm.c -lm\t11.54u 0.00s 11.55r\n-\tgccgo -O2 spectral-norm.go\t12.20u 0.00s 12.23r\n-\tgc spectral-norm\t50.23u 0.00s 50.36r\n-\tgc_B spectral-norm\t49.69u 0.01s 49.83r\n-\tgc spectral-norm-parallel\t24.47u 0.03s 11.05r  # has shift >>1 not div /2\n-\t[using >>1 instead of /2 : gc gives 24.33u 0.00s 24.33r]\n-\n-August 6, 2009\n-\n-k-nucleotide 5000000\n-\t# string maps are slower than glib string maps\n-\tgcc -O2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include k-nucleotide.c -lglib-2.0\tk-nucleotide.c: 10.72u 0.01s 10.74r\n-\tgccgo -O2 k-nucleotide.go\t21.64u 0.83s 22.78r\n-\tgc k-nucleotide\t16.08u 0.06s 16.50r\n-\tgc_B k-nucleotide\t17.32u 0.02s 17.37r\n-\n-mandelbrot 5500\n-\t# floating point code generator should use more registers\n-\tgcc -O2 mandelbrot.c\t56.13u 0.02s 56.17r\n-\tgccgo -O2 mandelbrot.go\t57.49u 0.01s 57.51r\n-\tgc mandelbrot\t74.32u 0.00s 74.35r\n-\tgc_B mandelbrot\t74.28u 0.01s 74.31r\n-\n-meteor 2100\n-\t# we don't know\n-\tgcc -O2 meteor-contest.c\t0.10u 0.00s 0.10r\n-\tgccgo -O2 meteor-contest.go\t0.12u 0.00s 0.14r\n-\tgc meteor-contest\t0.24u 0.00s 0.26r\n-\tgc_B meteor-contest\t0.23u 0.00s 0.24r\n-\n-pidigits 10000\n-\t# bignum is slower than gmp\n-\tgcc -O2 pidigits.c -lgmp\t2.60u 0.00s 2.62r\n-\tgc pidigits\t77.69u 0.14s 78.18r\n-\tgc_B pidigits\t74.26u 0.18s 75.41r\n-\tgc_B pidigits\t68.48u 0.20s 69.31r   # special case: no bounds checking in bignum\n-\n-August 7 2009\n-\n-# New gc does better division by powers of 2.  Significant improvements:\n-\n-spectral-norm 5500\n-\t# floating point code generator should use more registers; possibly inline evalA\n-\tgcc -O2 spectral-norm.c -lm\t11.50u 0.00s 11.50r\n-\tgccgo -O2 spectral-norm.go\t12.02u 0.00s 12.02r\n-\tgc spectral-norm\t23.98u 0.00s 24.00r\t# new time is 0.48 times old time, 52% faster\n-\tgc_B spectral-norm\t23.71u 0.01s 23.72r\t# ditto\n-\tgc spectral-norm-parallel\t24.04u 0.00s 6.26r  # /2 put back.  note: 4x faster (on r70, idle)\n-\n-k-nucleotide 1000000\n-\t# string maps are slower than glib string maps\n-\tgcc -O2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include k-nucleotide.c -lglib-2.0\t10.82u 0.04s 10.87r\n-\tgccgo -O2 k-nucleotide.go\t22.73u 0.89s 23.63r\n-\tgc k-nucleotide\t15.97u 0.03s 16.04r\n-\tgc_B k-nucleotide\t15.86u 0.06s 15.93r\t# 8.5% faster, but probably due to weird cache effeccts in previous version\n-\n-pidigits 10000\n-\t# bignum is slower than gmp\n-\tgcc -O2 pidigits.c -lgmp\t2.58u 0.00s 2.58r\n-\tgc pidigits\t71.24u 0.04s 71.28r\t# 8.5% faster\n-\tgc_B pidigits\t71.25u 0.03s 71.29r\t# 4% faster\n-\n-threadring 50000000\n-\tgcc -O2 threadring.c -lpthread\t35.51u 160.21s 199.50r\n-\tgccgo -O2 threadring.go\t90.33u 459.95s 448.03r\n-\tgc threadring\t33.11u 0.00s 33.14r\n-\tGOMAXPROCS=4 gc threadring\t114.48u 226.65s 371.59r\n-\t# change wait code to do <-make(chan int) instead of time.Sleep\n-\tgc threadring\t28.41u 0.01s 29.35r\n-\tGOMAXPROCS=4 gc threadring\t112.59u 232.83s 384.72r\n-\t\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t18.14u 276.52s 76.93r\n-\tgc chameneosredux\t20.19u 0.01s 20.23r\n-\n-Aug 10 2009\n-\n-# new 6g with better fp registers, fast div and mod of integers\n-# complete set of timings listed. significant changes marked ***\n-\n-fasta -n 25000000\n-\t# probably I/O library inefficiencies\n-\tgcc -O2 fasta.c\t5.96u 0.00s 5.97r\n-\tgc fasta\t10.59u 0.01s 10.61r\n-\tgc_B fasta\t9.92u 0.02s 9.95r\n-\n-reverse-complement < output-of-fasta-25000000\n-\t# we don't know - memory cache behavior?\n-\tgcc -O2 reverse-complement.c\t1.96u 1.56s 16.23r\n-\tgccgo -O2 reverse-complement.go\t6.41u 0.62s 7.05r\n-\tgc reverse-complement\t6.46u 0.70s 7.17r\n-\tgc_B reverse-complement\t6.22u 0.72s 6.95r\n-\n-nbody 50000000\n-\t# math.Sqrt needs to be in assembly; inlining is probably the other 50%\n-\tgcc -O2 nbody.c\t21.26u 0.01s 21.28r\n-\tgccgo -O2 nbody.go\t116.68u 0.07s 116.80r\n-\tgc nbody\t86.64u 0.01s 86.68r\t# -14%\n-\tgc_B nbody\t85.72u 0.02s 85.77r\t# *** -17%\n-\n-binary-tree 15 # too slow to use 20\n-\t# memory allocation and garbage collection\n-\tgcc -O2 binary-tree.c -lm\t0.87u 0.00s 0.87r\n-\tgccgo -O2 binary-tree.go\t1.61u 0.47s 2.09r\n-\tgccgo -O2 binary-tree-freelist.go\t0.00u 0.00s 0.01r\n-\tgc binary-tree\t9.11u 0.01s 9.13r\t# *** -5%\n-\tgc binary-tree-freelist\t0.47u 0.01s 0.48r\n-\n-fannkuch 12\n-\t# bounds checking is half the difference\n-\t# rest might be registerization\n-\tgcc -O2 fannkuch.c\t59.92u 0.00s 59.94r\n-\tgccgo -O2 fannkuch.go\t65.54u 0.00s 65.58r\n-\tgc fannkuch\t123.98u 0.01s 124.04r\n-\tgc_B fannkuch\t90.75u 0.00s 90.78r\n-\n-regex-dna 100000\n-\t# regexp code is slow on trivial regexp\n-\tgcc -O2 regex-dna.c -lpcre\t0.91u 0.00s 0.92r\n-\tgc regex-dna\t27.25u 0.02s 27.28r\n-\tgc_B regex-dna\t29.51u 0.03s 29.55r\n-\n-spectral-norm 5500\n-\t# possibly inline evalA\n-\tgcc -O2 spectral-norm.c -lm\t11.57u 0.00s 11.57r\n-\tgccgo -O2 spectral-norm.go\t12.07u 0.01s 12.08r\n-\tgc spectral-norm\t23.99u 0.00s 24.00r\n-\tgc_B spectral-norm\t23.73u 0.00s 23.75r\n-\n-k-nucleotide 1000000\n-\t# string maps are slower than glib string maps\n-\tgcc -O2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include k-nucleotide.c -lglib-2.0\t10.63u 0.02s 10.69r\n-\tgccgo -O2 k-nucleotide.go\t23.19u 0.91s 24.12r\n-\tgc k-nucleotide\t16.73u 0.04s 16.78r\t# *** +5% (but this one seems to vary by more than that)\n-\tgc_B k-nucleotide\t16.46u 0.04s 16.51r\t# *** +5%\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t56.16u 0.00s 56.16r\n-\tgccgo -O2 mandelbrot.go\t57.41u 0.01s 57.42r\n-\tgc mandelbrot\t64.05u 0.02s 64.08r\t# *** -14%\n-\tgc_B mandelbrot\t64.10u 0.02s 64.14r\t# *** -14%\n-\n-meteor 2100\n-\t# we don't know\n-\tgcc -O2 meteor-contest.c\t0.10u 0.00s 0.10r\n-\tgccgo -O2 meteor-contest.go\t0.12u 0.00s 0.12r\n-\tgc meteor-contest\t0.18u 0.00s 0.20r\t# *** -25%\n-\tgc_B meteor-contest\t0.17u 0.00s 0.18r\t# *** -24%\n-\n-pidigits 10000\n-\t# bignum is slower than gmp\n-\tgcc -O2 pidigits.c -lgmp\t2.57u 0.00s 2.57r\n-\tgc pidigits\t71.82u 0.04s 71.89r\n-\tgc_B pidigits\t71.84u 0.08s 71.98r\n-\n-threadring 50000000\n-\tgcc -O2 threadring.c -lpthread\t30.91u 164.33s 204.57r\n-\tgccgo -O2 threadring.go\t87.12u 460.04s 447.61r\n-\tgc threadring\t38.55u 0.00s 38.56r\t# *** +16%\n-\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t17.93u 323.65s 88.47r\n-\tgc chameneosredux\t21.72u 0.00s 21.73r\n-\n-August 10 2009\n-\n-# In-place versions for some bignum operations.\n-pidigits 10000\n-\tgcc -O2 pidigits.c -lgmp\t2.56u 0.00s 2.57r\n-\tgc pidigits\t55.22u 0.04s 55.29r\t# *** -23%\n-\tgc_B pidigits\t55.49u 0.02s 55.60r\t# *** -23%\n-\n-September 3 2009\n-\n-# New 6g inlines slices, has a few other tweaks.\n-# Complete rerun. Significant changes marked.\n-\n-fasta -n 25000000\n-\t# probably I/O library inefficiencies\n-\tgcc -O2 fasta.c\t5.96u 0.00s 5.96r\n-\tgc fasta\t10.63u 0.02s 10.66r\n-\tgc_B fasta\t9.92u 0.01s 9.94r\n-\n-reverse-complement < output-of-fasta-25000000\n-\t# we don't know - memory cache behavior?\n-\tgcc -O2 reverse-complement.c\t1.92u 0.33s 2.93r\n-\tgccgo -O2 reverse-complement.go\t6.76u 0.72s 7.58r\t# +5%\n-\tgc reverse-complement\t6.59u 0.70s 7.29r\t# +2%\n-\tgc_B reverse-complement\t5.57u 0.80s 6.37r\t# -10%\n-\n-nbody 50000000\n-\t# math.Sqrt needs to be in assembly; inlining is probably the other 50%\n-\t# also loop alignment appears to be critical\n-\tgcc -O2 nbody.c\t21.28u 0.00s 21.28r\n-\tgccgo -O2 nbody.go\t119.21u 0.00s 119.22r\t# +2%\n-\tgc nbody\t109.72u 0.00s 109.78r\t# + 28% *****\n-\tgc_B nbody\t85.90u 0.00s 85.91r\n-\n-binary-tree 15 # too slow to use 20\n-\t# memory allocation and garbage collection\n-\tgcc -O2 binary-tree.c -lm\t0.86u 0.00s 0.87r\n-\tgccgo -O2 binary-tree.go\t1.88u 0.54s 2.42r\t# +17%\n-\tgccgo -O2 binary-tree-freelist.go\t0.01u 0.01s 0.02r\n-\tgc binary-tree\t8.94u 0.01s 8.96r\t# -2%\n-\tgc binary-tree-freelist\t0.47u 0.01s 0.48r\n-\n-fannkuch 12\n-\t# bounds checking is half the difference\n-\t# rest might be registerization\n-\tgcc -O2 fannkuch.c\t60.12u 0.00s 60.12r\n-\tgccgo -O2 fannkuch.go\t92.62u 0.00s 92.66r\t\t# +41% ***\n-\tgc fannkuch\t123.90u 0.00s 123.92r\n-\tgc_B fannkuch\t89.71u 0.00s 89.74r\t# -1%\n-\n-regex-dna 100000\n-\t# regexp code is slow on trivial regexp\n-\tgcc -O2 regex-dna.c -lpcre\t0.88u 0.00s 0.88r\n-\tgc regex-dna\t25.77u 0.01s 25.79r\t\t# -5%\n-\tgc_B regex-dna\t26.05u 0.02s 26.09r\t# -12% ***\n-\n-spectral-norm 5500\n-\t# possibly inline evalA\n-\tgcc -O2 spectral-norm.c -lm\t11.51u 0.00s 11.51r\n-\tgccgo -O2 spectral-norm.go\t11.95u 0.00s 11.96r\n-\tgc spectral-norm\t24.23u 0.00s 24.23r\n-\tgc_B spectral-norm\t23.83u 0.00s 23.84r\n-\n-k-nucleotide 1000000\n-\t# string maps are slower than glib string maps\n-\tgcc -O2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include k-nucleotide.c -lglib-2.0\t10.68u 0.04s 10.72r\n-\tgccgo -O2 k-nucleotide.go\t23.03u 0.88s 23.92r\n-\tgc k-nucleotide\t15.79u 0.05s 15.85r\t# -5% (but this one seems to vary by more than that)\n-\tgc_B k-nucleotide\t17.88u 0.05s 17.95r # +8% (ditto)\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t56.17u 0.02s 56.20r\n-\tgccgo -O2 mandelbrot.go\t56.74u 0.02s 56.79r\t # -1%\n-\tgc mandelbrot\t63.31u 0.01s 63.35r\t# -1%\n-\tgc_B mandelbrot\t63.29u 0.00s 63.31r\t# -1%\n-\n-meteor 2100\n-\t# we don't know\n-\tgcc -O2 meteor-contest.c\t0.10u 0.00s 0.10r\n-\tgccgo -O2 meteor-contest.go\t0.11u 0.00s 0.12r\n-\tgc meteor-contest\t0.18u 0.00s 0.19r\n-\tgc_B meteor-contest\t0.17u 0.00s 0.18r\n-\n-pidigits 10000\n-\t# bignum is slower than gmp\n-\tgcc -O2 pidigits.c -lgmp\t2.56u 0.00s 2.57r\n-\tgc pidigits\t55.87u 0.03s 55.91r\n-\tgc_B pidigits\t55.93u 0.03s 55.99r\n-\n-# these tests are compared using real time, since they run multiple processors\n-# accuracy probably low\n-threadring 50000000\n-\tgcc -O2 threadring.c -lpthread\t26.31u 164.69s 199.92r\t# -2%\n-\tgccgo -O2 threadring.go\t87.90u 487.26s 472.81r\t# +6%\n-\tgc threadring\t28.89u 0.00s 28.90r\t# -25% ***\n-\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t16.41u 296.91s 81.17r\t# -8%\n-\tgc chameneosredux\t19.97u 0.00s 19.97r\t# -8%\n-\n-Sep 22, 2009\n-\n-# 6g inlines sliceslice in most cases.\n-\n-fasta -n 25000000\n-\t# probably I/O library inefficiencies\n-\tgc fasta\t10.24u 0.00s 10.25r\t# -4%\n-\tgc_B fasta\t9.68u 0.01s 9.69r\t# -3%\n-\n-reverse-complement < output-of-fasta-25000000\n-\t# we don't know - memory cache behavior?\n-\tgc reverse-complement\t6.67u 0.69s 7.37r\t# +1%\n-\tgc_B reverse-complement\t6.00u 0.64s 6.65r\t# +7%\n-\n-nbody -n 50000000\n-\t# math.Sqrt needs to be in assembly; inlining is probably the other 50%\n-\t# also loop alignment appears to be critical\n-\tgc nbody\t86.27u 0.00s 86.29r\t# -21%\n-\tgc_B nbody\t104.52u 0.00s 104.54r\t# +22%\n-\n-fannkuch 12\n-\t# bounds checking is half the difference\n-\t# rest might be registerization\n-\tgc fannkuch\t128.36u 0.00s 128.37r\t# +4%\n-\tgc_B fannkuch\t89.32u 0.00s 89.34r\n-\n-regex-dna 100000\n-\t# regexp code is slow on trivial regexp\n-\tgc regex-dna\t24.82u 0.01s 24.86r\t# -4%\n-\tgc_B regex-dna\t24.55u 0.01s 24.57r\t# -6%\n-\n-spectral-norm 5500\n-\t# possibly inline evalA\n-\tgc spectral-norm\t24.05u 0.00s 24.07r\t# -1%\n-\tgc_B spectral-norm\t23.60u 0.00s 23.65r\t # -1%\n-\n-k-nucleotide 1000000\n-\t# string maps are slower than glib string maps\n-\tgc k-nucleotide\t17.84u 0.04s 17.89r\t# +13% but mysterious variation continues\n-\tgc_B k-nucleotide\t15.56u 0.08s 15.65r\t# -13% (ditto)\n-\n-mandelbrot 16000\n-\tgc mandelbrot\t64.08u 0.01s 64.11r\t# +1%\n-\tgc_B mandelbrot\t64.04u 0.00s 64.05r\t# +1%\n-\n-pidigits 10000\n-\t# bignum is slower than gmp\n-\tgc pidigits\t58.68u 0.02s 58.72r\t# +5%\n-\tgc_B pidigits\t58.86u 0.05s 58.99r\t# +5%\n-\n-# these tests are compared using real time, since they run multiple processors\n-# accuracy probably low\n-threadring 50000000\n-\tgc threadring\t32.70u 0.02s 32.77r\t# +13%\n-\n-chameneos 6000000\n-\tgc chameneosredux\t26.62u 0.00s 26.63r\t# +13%\n-\n-Sep 24, 2009\n-\n-# Sqrt now in assembler for 6g.\n-nbody -n 50000000\n-\t# remember, at least for 6g, alignment of loops may be important\n-\tgcc -O2 nbody.c\t21.24u 0.00s 21.25r\n-\tgccgo -O2 nbody.go\t121.03u 0.00s 121.04r\n-\tgc nbody\t30.26u 0.00s 30.27r\t# -65% ***\n-\tgc_B nbody\t30.20u 0.02s 30.22r\t# -72% *** \n-\n-Nov 13 2009\n-\n-# fix bug in regexp; take performance hit.  good regexps will come in time.\n-regex-dna 100000\n-\tgcc -O2 regex-dna.c -lpcre\t0.92u 0.00s 0.94r\n-\tgc regex-dna\t29.78u 0.03s 29.83r\n-\tgc_B regex-dna\t32.63u 0.03s 32.74r\n-\n-Nov 24 2009\n-\n-# Roger Peppe's rewrite of the benchmark\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t18.00u 303.29s 83.64r\n-\tgc chameneosredux\t12.10u 0.00s 12.10r  # 2.22X faster\n-\n-Jan 6, 2010\n-\n-# Long-overdue update.  All numbers included in this complete run.\n-# Some programs (e.g. reverse-complement) rewritten for speed.\n-# Regular expressions much faster in common cases (although still far behind PCRE)\n-# Bignum stuff improved\n-# Better (but sometimes slower) locking in channels.\n-\n-fasta -n 25000000\n-\tgcc -O2 fasta.c\t5.99u 0.01s 6.00r\n-\tgc fasta\t9.11u 0.00s 9.12r\t# -11%\n-\tgc_B fasta\t8.60u 0.00s 8.62r\t# +12% ??\n-\n-reverse-complement < output-of-fasta-25000000\n-\tgcc -O2 reverse-complement.c\t2.00u 0.80s 9.54r\n-#\tgccgo -O2 reverse-complement.go\t4.57u 0.35s 4.94r\t# 33% faster\n-\tgc reverse-complement\t2.01u 0.38s 2.40r\t# 3.3X faster\n-\tgc_B reverse-complement\t1.88u 0.36s 2.24r\t# 3.2X faster\n-GOGC=off\n-\tgc reverse-complement\t2.01u 0.35s 2.37r\n-\tgc_B reverse-complement\t1.86u 0.32s 2.19r\n-\n-nbody -n 50000000\n-\tgcc -O2 nbody.c\t21.28u 0.00s 21.31r\n-\tgccgo -O2 nbody.go\t80.02u 0.00s 80.05r\t# 33% faster\n-\tgc nbody\t30.13u 0.00s 30.13r\n-\tgc_B nbody\t29.89u 0.01s 29.91r\n-\n-binary-tree 15 # too slow to use 20\n-\tgcc -O2 binary-tree.c -lm\t0.86u 0.00s 0.87r\n-\tgccgo -O2 binary-tree.go\t4.82u 0.41s 5.24r\t# 2.5X slower\n-\tgc binary-tree\t7.23u 0.01s 7.25r\t# # -19%\n-\tgc binary-tree-freelist\t0.43u 0.00s 0.44r\t# -9%\n-\n-fannkuch 12\n-\tgcc -O2 fannkuch.c\t60.17u 0.00s 60.17r\n-\tgccgo -O2 fannkuch.go\t78.47u 0.01s 78.49r\n-\tgc fannkuch\t128.86u 0.00s 128.96r\n-\tgc_B fannkuch\t90.17u 0.00s 90.21r\n-\n-regex-dna 100000\n-\tgcc -O2 regex-dna.c -lpcre\t0.90u 0.00s 0.92r\n-\tgc regex-dna\t9.48u 0.01s 9.50r\t# 3.1X faster\n-\tgc_B regex-dna\t9.08u 0.00s 9.10r\t# 3.6X faster\n-\n-spectral-norm 5500\n-\tgcc -O2 spectral-norm.c -lm\t11.48u 0.00s 11.48r\n-\tgccgo -O2 spectral-norm.go\t11.68u 0.00s 11.70r\n-\tgc spectral-norm\t23.98u 0.00s 23.99r\n-\tgc_B spectral-norm\t23.68u 0.00s 23.69r\n-\n-k-nucleotide 1000000\n-\tgcc -O2 k-nucleotide.c\t10.85u 0.04s 10.90r\n-\tgccgo -O2 k-nucleotide.go\t25.26u 0.87s 26.14r\n-\tgc k-nucleotide\t15.28u 0.06s 15.37r\t# restored; mysterious variation continues\n-\tgc_B k-nucleotide\t15.97u 0.03s 16.00r\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t56.12u 0.01s 56.15r\n-\tgccgo -O2 mandelbrot.go\t56.86u 0.01s 56.89r\n-\tgc mandelbrot\t66.05u 0.00s 66.07r\t# -3%\n-\tgc_B mandelbrot\t66.06u 0.00s 66.07r\t# -3%\n-\n-meteor 2100\n-\tgcc -O2 meteor-contest.c\t0.10u 0.00s 0.10r\n-\tgccgo -O2 meteor-contest.go\t0.12u 0.00s 0.12r\n-\tgc meteor-contest\t0.17u 0.00s 0.17r\n-\tgc_B meteor-contest\t0.15u 0.00s 0.16r\n-\n-pidigits 10000\n-\tgcc -O2 pidigits.c -lgmp\t2.57u 0.00s 2.59r\n-\tgc pidigits\t38.27u 0.02s 38.30r\t# 1.5X faster\n-\tgc_B pidigits\t38.27u 0.02s 38.31r\t# 1.5X faster\n-\n-threadring 50000000\n-\tgcc -O2 threadring.c\t37.11u 170.59s 212.75r\n-\tgccgo -O2 threadring.go\t89.67u 447.56s 442.55r\t# -6.5%\n-\tgc threadring\t36.08u 0.04s 36.15r\t# +10%\n-\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t19.02u 331.08s 90.79r\n-\tgc chameneosredux\t12.54u 0.00s 12.55r\n-\n-Oct 19, 2010\n-\n-# Another long-overdue update. Some of the code is new; parallel versions\n-# of some are added.  A few significant improvements.\n-\n-fasta -n 25000000\n-\tgcc -O2 fasta.c\t4.92u 0.00s 4.93r\n-\tgccgo -O2 fasta.go\t3.31u 0.00s 3.34r  # new code\n-\tgc fasta\t3.68u 0.00s 3.69r  # 2.5X faster with no code\n-\tgc_B fasta\t3.68u 0.00s 3.69r  # 2.3X faster with no code\n-\n-reverse-complement < output-of-fasta-25000000\n-\tgcc -O2 reverse-complement.c\t1.93u 0.81s 11.24r\n-\tgccgo -O2 reverse-complement.go\t1.58u 0.43s 2.04r  # first run with new code?\n-\tgc reverse-complement\t1.84u 0.34s 2.20r  # 10% faster\n-\tgc_B reverse-complement\t1.85u 0.32s 2.18r\n-\n-nbody -n 50000000\n-\tgcc -O2 nbody.c\t21.35u 0.00s 21.36r\n-\tgccgo -O2 nbody.go\t21.62u 0.00s 21.66r  # 3.7X faster - why??\n-\tgc nbody\t29.78u 0.00s 29.79r\n-\tgc_B nbody\t29.72u 0.00s 29.72r\n-\n-binary-tree 15 # too slow to use 20\n-\tgcc -O2 binary-tree.c -lm\t0.86u 0.00s 0.88r\n-\tgccgo -O2 binary-tree.go\t4.05u 0.02s 4.08r  # 28% faster\n-\tgccgo -O2 binary-tree-freelist\t0.34u 0.08s 0.34r\n-\tgc binary-tree\t5.94u 0.00s 5.95r  # 20% faster\n-\tgc binary-tree-freelist\t0.50u 0.01s 0.54r\n-\n-fannkuch 12\n-\tgcc -O2 fannkuch.c\t60.45u 0.00s 60.45r\n-\tgccgo -O2 fannkuch.go\t64.64u 0.00s 64.64r\n-\tgccgo -O2 fannkuch-parallel.go\t115.63u 0.00s 31.58r\n-\tgc fannkuch\t126.52u 0.04s 126.68r\n-\tgc fannkuch-parallel\t238.82u 0.10s 65.93r  # GOMAXPROCS=4\n-\tgc_B fannkuch\t88.99u 0.00s 89.02r\n-\n-regex-dna 100000\n-\tgcc -O2 regex-dna.c -lpcre\t0.89u 0.00s 0.89r\n-\tgc regex-dna\t8.99u 0.02s 9.03r\n-\tgc regex-dna-parallel\t8.94u 0.02s 3.68r  # GOMAXPROCS=4\n-\tgc_B regex-dna\t9.12u 0.00s 9.14r\n-\n-spectral-norm 5500\n-\tgcc -O2 spectral-norm.c -lm\t11.55u 0.00s 11.57r\n-\tgccgo -O2 spectral-norm.go\t11.73u 0.00s 11.75r\n-\tgc spectral-norm\t23.74u 0.00s 23.79r\n-\tgc_B spectral-norm\t24.49u 0.02s 24.54r\n-\n-k-nucleotide 1000000\n-\tgcc -O2 k-nucleotide.c\t11.44u 0.06s 11.50r\n-\tgccgo -O2 k-nucleotide.go\t8.65u 0.04s 8.71r\n-\tgccgo -O2 k-nucleotide-parallel.go\t8.75u 0.03s 2.97r # set GOMAXPROCS=4\n-\tgc k-nucleotide\t14.92u 0.05s 15.01r\n-\tgc k-nucleotide-parallel\t16.96u 0.06s 6.53r  # set GOMAXPROCS=4\n-\tgc_B k-nucleotide\t15.97u 0.03s 16.08r\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t56.32u 0.00s 56.35r\n-\tgccgo -O2 mandelbrot.go\t55.62u 0.02s 55.77r\n-\tgc mandelbrot\t64.85u 0.01s 64.94r\n-\tgc_B mandelbrot\t65.02u 0.01s 65.14r\n-\n-meteor 2100\n-\tgcc -O2 meteor-contest.c\t0.10u 0.00s 0.10r\n-\tgccgo -O2 meteor-contest.go\t0.10u 0.00s 0.11r\n-\tgc meteor-contest\t0.17u 0.00s 0.18r\n-\tgc_B meteor-contest\t0.16u 0.00s 0.16r\n-\n-pidigits 10000\n-\tgcc -O2 pidigits.c -lgmp\t2.58u 0.00s 2.59r\n-\tgccgo -O2 pidigits.go\t14.06u 0.01s 14.09r # first run?\n-\tgc pidigits\t8.47u 0.05s 8.55r # 4.5X faster due to package big\n-\tgc_B pidigits\t8.33u 0.01s 8.36r # 4.5X faster due to package big\n-\n-threadring 50000000\n-\tgcc -O2 threadring.c\t28.18u 153.19s 186.47r\n-\tgccgo -O2 threadring.go\t110.10u 516.48s 515.25r\n-\tgc threadring\t40.39u 0.00s 40.40r\n-\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t18.20u 301.55s 83.10r\n-\tgccgo -O2 chameneosredux.go\t52.22u 324.54s 201.21r\n-\tgc chameneosredux\t13.52u 0.00s 13.54r\n-\n-Dec 14, 2010\n-\n-# Improved regex code (same algorithm) gets ~30%.\n-\n-regex-dna 100000\n-\tgcc -O2 regex-dna.c -lpcre\t0.77u 0.01s 0.78r\n-\tgc regex-dna\t6.80u 0.00s 6.81r\n-\tgc regex-dna-parallel\t6.82u 0.01s 2.75r\n-\tgc_B regex-dna\t6.69u 0.02s 6.70r\n-\n-Feb 15, 2011\n-\n-# Improved GC, still single-threaded but more efficient\n-\n-fasta -n 25000000\n-\tgcc -O2 fasta.c\t3.40u 0.00s 3.40r\n-\tgccgo -O2 fasta.go\t3.51u 0.00s 3.50r\n-\tgc fasta\t3.66u 0.01s 3.66r\n-\tgc_B fasta\t3.66u 0.00s 3.66r\n-\n-reverse-complement < output-of-fasta-25000000\n-\tgcc -O2 reverse-complement.c\t1.86u 1.29s 4.93r\n-\tgccgo -O2 reverse-complement.go\t2.18u 0.41s 2.60r\n-\tgc reverse-complement\t1.67u 0.48s 2.15r\n-\tgc_B reverse-complement\t1.71u 0.45s 2.15r\n-\n-nbody -n 50000000\n-\tgcc -O2 -lm nbody.c\t21.64u 0.00s 21.64r\n-\tgccgo -O2 nbody.go\t21.46u 0.00s 21.45r\n-\tgc nbody\t29.07u 0.00s 29.06r\n-\tgc_B nbody\t31.61u 0.00s 31.61r\n-\n-binary-tree 15 # too slow to use 20\n-\tgcc -O2 binary-tree.c -lm\t0.88u 0.00s 0.87r\n-\tgccgo -O2 binary-tree.go\t2.74u 0.07s 2.81r\n-\tgccgo -O2 binary-tree-freelist.go\t0.01u 0.00s 0.00r\n-\tgc binary-tree\t4.22u 0.02s 4.24r\n-\tgc binary-tree-freelist\t0.54u 0.02s 0.55r\n-\n-fannkuch 12\n-\tgcc -O2 fannkuch.c\t57.64u 0.00s 57.64r\n-\tgccgo -O2 fannkuch.go\t65.79u 0.00s 65.82r\n-\tgccgo -O2 fannkuch-parallel.go\t160.91u 0.02s 43.90r\n-\tgc fannkuch\t126.36u 0.03s 126.53r\n-\tgc fannkuch-parallel\t175.23u 0.04s 45.49r\n-\tgc_B fannkuch\t89.23u 0.00s 89.24r\n-\n-regex-dna 100000\n-\tgcc -O2 regex-dna.c -lpcre\t0.77u 0.01s 0.80r\n-\tgccgo -O2 regex-dna.go\t12.38u 0.10s 12.52r\n-\tgccgo -O2 regex-dna-parallel.go\t43.96u 4.64s 15.11r\n-\tgc regex-dna\t7.03u 0.01s 7.05r\n-\tgc regex-dna-parallel\t6.85u 0.05s 2.70r\n-\tgc_B regex-dna\t6.87u 0.02s 6.89r\n-\n-spectral-norm 5500\n-\tgcc -O2 spectral-norm.c -lm\t12.29u 0.00s 12.28r\n-\tgccgo -O2 spectral-norm.go\t11.79u 0.00s 11.79r\n-\tgc spectral-norm\t24.00u 0.02s 24.05r\n-\tgc_B spectral-norm\t24.59u 0.01s 24.59r\n-\n-k-nucleotide 1000000\n-\tgcc -O2 k-nucleotide.c\t9.75u 0.07s 9.82r\n-\tgccgo -O2 k-nucleotide.go\t8.92u 0.06s 8.98r\n-\tgccgo -O2 k-nucleotide-parallel.go\t8.40u 0.04s 2.76r\n-\tgc k-nucleotide\t17.01u 0.03s 17.04r\n-\tgc k-nucleotide-parallel\t16.51u 0.08s 6.21r\n-\tgc_B k-nucleotide\t16.94u 0.08s 17.02r\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t54.60u 0.00s 54.66r\n-\tgccgo -O2 mandelbrot.go\t59.38u 0.00s 59.41r\n-\tgc mandelbrot\t64.93u 0.04s 65.08r\n-\tgc_B mandelbrot\t64.85u 0.03s 64.92r\n-\n-meteor 2098\n-\tgcc -O2 meteor-contest.c\t0.10u 0.01s 0.10r\n-\tgccgo -O2 meteor-contest.go\t0.11u 0.00s 0.11r\n-\tgc meteor-contest\t0.18u 0.00s 0.17r\n-\tgc_B meteor-contest\t0.17u 0.00s 0.16r\n-\n-pidigits 10000\n-\tgcc -O2 pidigits.c -lgmp\t2.24u 0.00s 2.23r\n-\tgccgo -O2 pidigits.go\t14.05u 0.00s 14.06r\n-\tgc pidigits\t6.34u 0.05s 6.38r\n-\tgc_B pidigits\t6.37u 0.02s 6.38r\n-\n-threadring 50000000\n-\tgcc -O2 threadring.c\t30.50u 258.05s 325.72r\n-\tgccgo -O2 threadring.go\t92.87u 748.39s 728.46r\n-\tgc threadring\t38.03u 0.01s 38.04r\n-\n-# Apr 15, 2011\n-# Move to new machine, Intel Xeon E5520@2.27GHz.\n-# (Was Opteron(tm) Processor 8214 HE)\n-\n-fasta -n 25000000\n-OLD:\n-\tgcc -O2 fasta.c\t3.39u 0.04s 3.42r\n-\tgccgo -O2 fasta.go\t3.52u 0.00s 3.52r\n-\tgc fasta\t3.63u 0.04s 3.67r\n-\tgc_B fasta\t3.66u 0.00s 3.66r\n-NEW:\n-\tgcc -O2 fasta.c\t1.45u 0.02s 1.47r\n-\tgccgo -O2 fasta.go\t1.51u 0.01s 1.51r\n-\tgc fasta\t2.04u 0.00s 2.04r\n-\tgc_B fasta\t2.05u 0.00s 2.04r\n-\n-reverse-complement < output-of-fasta-25000000\n-OLD:\n-\tgcc -O2 reverse-complement.c\t1.87u 1.51s 7.02r\n-\tgccgo -O2 reverse-complement.go\t1.56u 0.54s 3.37r\n-\tgc reverse-complement\t1.73u 0.36s 2.08r\n-\tgc_B reverse-complement\t1.75u 0.37s 2.12r\n-NEW:\n-\tgcc -O2 reverse-complement.c\t1.20u 0.47s 12.96r\n-\tgccgo -O2 reverse-complement.go\t0.88u 0.14s 1.01r\n-\tgc reverse-complement\t1.13u 0.17s 1.30r\n-\tgc_B reverse-complement\t1.11u 0.09s 1.20r\n-\n-nbody -n 50000000\n-OLD:\n-\tgcc -O2 -lm nbody.c\t21.90u 0.00s 21.92r\n-\tgccgo -O2 nbody.go\t23.12u 0.03s 23.19r\n-\tgc nbody\t29.07u 0.00s 29.07r\n-\tgc_B nbody\t31.84u 0.00s 31.85r\n-NEW:\n-\tgcc -O2 -lm nbody.c\t13.01u 0.00s 13.03r\n-\tgccgo -O2 nbody.go\t13.35u 0.00s 13.37r\n-\tgc nbody\t21.78u 0.00s 21.82r\n-\tgc_B nbody\t21.72u 0.00s 21.76r\n-\n-binary-tree 15 # too slow to use 20\n-OLD:\n-\tgcc -O2 binary-tree.c -lm\t0.83u 0.02s 0.84r\n-\tgccgo -O2 binary-tree.go\t2.61u 0.02s 2.62r\n-\tgccgo -O2 binary-tree-freelist.go\t0.32u 0.01s 0.32r\n-\tgc binary-tree\t3.93u 0.04s 3.97r\n-\tgc binary-tree-freelist\t0.47u 0.03s 0.50r\n-NEW:\n-\tgcc -O2 binary-tree.c -lm\t0.60u 0.00s 0.59r\n-\tgccgo -O2 binary-tree.go\t1.53u 0.00s 1.52r\n-\tgccgo -O2 binary-tree-freelist.go\t0.01u 0.00s 0.00r\n-\tgc binary-tree\t1.93u 0.02s 1.95r\n-\tgc binary-tree-freelist\t0.32u 0.01s 0.32r\n-\n-fannkuch 12\n-OLD:\n-\tgcc -O2 fannkuch.c\t57.64u 0.00s 57.64r\n-\tgccgo -O2 fannkuch.go\t65.56u 0.01s 65.65r\n-\tgccgo -O2 fannkuch-parallel.go\t179.12u 0.00s 49.82r\n-\tgc fannkuch\t126.39u 0.00s 126.39r\n-\tgc fannkuch-parallel\t172.49u 0.02s 45.44r\n-\tgc_B fannkuch\t89.30u 0.00s 89.28r\n-NEW:\n-\tgcc -O2 fannkuch.c\t45.17u 0.00s 45.26r\n-\tgccgo -O2 fannkuch.go\t53.63u 0.00s 53.73r\n-\tgccgo -O2 fannkuch-parallel.go\t216.72u 0.00s 58.42r\n-\tgc fannkuch\t108.21u 0.00s 108.44r\n-\tgc fannkuch-parallel\t227.20u 0.00s 57.27r\n-\tgc_B fannkuch\t56.14u 0.00s 56.26r\n-\n-regex-dna 100000\n-OLD:\n-\tgcc -O2 regex-dna.c -lpcre\t0.77u 0.01s 0.78r\n-\tgccgo -O2 regex-dna.go\t10.15u 0.02s 10.23r\n-\tgccgo -O2 regex-dna-parallel.go\t33.81u 3.22s 11.62r\n-\tgc regex-dna\t6.52u 0.04s 6.56r\n-\tgc regex-dna-parallel\t6.84u 0.03s 2.70r\n-\tgc_B regex-dna\t6.83u 0.01s 6.84r\n-NEW:\n-\tgcc -O2 regex-dna.c -lpcre\t0.47u 0.00s 0.47r\n-\tgccgo -O2 regex-dna.go\t6.00u 0.00s 6.00r\n-\tgccgo -O2 regex-dna-parallel.go\t44.54u 1.57s 6.51r\n-\tgc regex-dna\t5.41u 0.01s 5.42r\n-\tgc regex-dna-parallel\t5.62u 0.01s 2.20r\n-\tgc_B regex-dna\t5.50u 0.00s 5.50r\n-\n-spectral-norm 5500\n-OLD:\n-\tgcc -O2 spectral-norm.c -lm\t12.29u 0.00s 12.28r\n-\tgccgo -O2 spectral-norm.go\t11.56u 0.00s 11.55r\n-\tgc spectral-norm\t23.98u 0.00s 24.00r\n-\tgc_B spectral-norm\t24.62u 0.00s 24.65r\n-NEW:\n-\tgcc -O2 spectral-norm.c -lm\t15.79u 0.00s 15.82r\n-\tgccgo -O2 spectral-norm.go\t15.32u 0.00s 15.35r\n-\tgc spectral-norm\t19.62u 0.01s 19.67r\n-\tgc_B spectral-norm\t19.62u 0.00s 19.66r\n-\n-k-nucleotide 1000000\n-OLD:\n-\tgcc -O2 k-nucleotide.c\t9.82u 0.06s 9.87r\n-\tgccgo -O2 k-nucleotide.go\t8.30u 0.02s 8.32r\n-\tgccgo -O2 k-nucleotide-parallel.go\t8.84u 0.05s 3.02r\n-\tgc k-nucleotide\t15.38u 0.07s 15.44r\n-\tgc k-nucleotide-parallel\t16.40u 0.03s 5.93r\n-\tgc_B k-nucleotide\t15.19u 0.05s 15.23r\n-NEW:\n-\tgcc -O2 -k-nucleotide.c\t4.88u 0.03s 4.92r\n-\tgccgo -O2 k-nucleotide.go\t5.94u 0.01s 5.96r\n-\tgccgo -O2 k-nucleotide-parallel.go\t6.44u 0.03s 1.47r\n-\tgc k-nucleotide\t9.61u 0.01s 9.63r\n-\tgc k-nucleotide-parallel\t9.70u 0.00s 3.39r\n-\tgc_B k-nucleotide\t9.19u 0.03s 9.23r\n-\n-mandelbrot 16000\n-OLD:\n-\tgcc -O2 mandelbrot.c\t54.54u 0.00s 54.56r\n-\tgccgo -O2 mandelbrot.go\t59.63u 0.03s 59.67r\n-\tgc mandelbrot\t64.82u 0.00s 64.83r\n-\tgc_B mandelbrot\t64.84u 0.00s 64.91r\n-NEW:\n-\tgcc -O2 mandelbrot.c\t36.07u 0.01s 36.15r\n-\tgccgo -O2 mandelbrot.go\t43.57u 0.00s 43.66r\n-\tgc mandelbrot\t60.66u 0.00s 60.79r\n-\tgc_B mandelbrot\t60.90u 0.00s 61.03r\n-\n-meteor 2098\n-OLD:\n-\tgcc -O2 meteor-contest.c\t0.11u 0.00s 0.10r\n-\tgccgo -O2 meteor-contest.go\t0.10u 0.01s 0.10r\n-\tgc meteor-contest\t0.18u 0.00s 0.17r\n-\tgc_B meteor-contest\t0.17u 0.00s 0.16r\n-NEW:\n-\tgcc -O2 meteor-contest.c\t0.10u 0.00s 0.09r\n-\tgccgo -O2 meteor-contest.go\t0.10u 0.00s 0.09r\n-\tgc meteor-contest\t0.14u 0.00s 0.14r\n-\tgc_B meteor-contest\t0.13u 0.00s 0.13r\n-\n-pidigits 10000\n-OLD:\n-\tgcc -O2 pidigits.c -lgmp\t2.22u 0.00s 2.21r\n-\tgccgo -O2 pidigits.go\t13.39u 0.00s 13.40r\n-\tgc pidigits\t6.42u 0.04s 6.45r\n-\tgc_B pidigits\t6.45u 0.02s 6.47r\n-NEW:\n-\tgcc -O2 pidigits.c -lgmp\t2.27u 0.00s 2.29r\n-\tgccgo -O2 pidigits.go\t9.21u 0.00s 9.22r\n-\tgc pidigits\t3.60u 0.00s 3.60r\n-\tgc_B pidigits\t3.56u 0.02s 3.58r\n-\n-threadring 50000000\n-OLD:\n-\tgcc -O2 threadring.c -lpthread\t34.51u 267.95s 336.12r\n-\tgccgo -O2 threadring.go\t103.51u 588.57s 627.16r\n-\tgc threadring\t54.68u 0.00s 54.73r\n-NEW:\n-\tgcc -O2 threadring.c 32.00u 259.39s 369.74r\n-\tgccgo -O2 threadring.go\t133.06u 546.02s 595.33r\n-\tgc threadring\t16.75u 0.02s 16.80r\n-\n-chameneos 6000000\n-OLD:\n-\tgcc -O2 chameneosredux.c -lpthread\t12.65u 31.02s 13.33r\n-\tgccgo -O2 chameneosredux.go\t47.04u 302.84s 252.29r\n-\tgc chameneosredux\t14.14u 0.00s 14.14r\n-NEW:\n-\tgcc -O2 chameneosredux.c -lpthread\t8.05u 63.43s 11.16r\n-\tgccgo -O2 chameneosredux.go\t82.95u 304.37s 207.64r\n-\tgc chameneosredux\t9.42u 0.00s 9.43r\n-\n-# May 13, 2011\n-# after gc update to inline append when possible - 35% faster\n-\n-regex-dna 100000\n-\tgc regex-dna\t3.94u 0.00s 3.95r\n-\tgc regex-dna-parallel\t4.15u 0.01s 1.63r\n-\tgc_B regex-dna\t4.01u 0.01s 4.02r\n-\n-# Aug 4, 2011\n-# After various updates to locking code and some runtime changes.\n-# Slowdowns believed due to slower (but more correct) memmove.\n-\n-fannkuch 12\n-\tgccgo -O2 fannkuch.go\t51.59u 0.00s 51.69r # -4%\n-\tgccgo -O2 fannkuch-parallel.go\t253.17u 0.00s 64.67r # -11%\n-\tgc fannkuch\t103.14u 0.00s 103.36r # -5%\n-\tgc fannkuch-parallel\t189.63u 0.00s 49.37r # +9%\n-\tgc_B fannkuch\t49.19u 0.00s 49.29r # -14%\n-\n-regex-dna 100000\n-\tgc regex-dna\t3.78u 0.00s 3.78r # -43%\n-\tgc regex-dna-parallel\t3.84u 0.02s 1.48r # -49%\n-\tgc_B regex-dna\t3.62u 0.00s 3.63r # -52%\n-\n-k-nucleotide 1000000\n-\tgc k-nucleotide\t12.23u 0.02s 12.27r # +27%\n-\tgc k-nucleotide-parallel\t12.76u 0.02s 4.37r # +29%\n-\tgc_B k-nucleotide\t12.18u 0.01s 12.21r # +33%\n-\n-threadring 50000000\n-\tgc threadring\t17.49u 0.00s 17.53r # +4%\n-\n-chameneos 6000000\n-\tgc chameneosredux\t7.61u 0.00s 7.63r # -24%\n-\n-Aug 9, 2011\n-# After custom algorithms for 1- 2- 4- 8-byte scalars.\n-\n-fannkuch 12\n-\tgc fannkuch-parallel\t157.17u 0.00s 41.08r # -17%\n-\n-k-nucleotide 1000000\n-\tgc k-nucleotide\t8.72u 0.03s 8.76r # -39%\n-\tgc k-nucleotide-parallel\t8.79u 0.01s 3.14r # -39%\n-\tgc_B k-nucleotide\t8.65u 0.03s 8.69r # -39%\n-\n-pidigits 10000\n-\tgc pidigits\t3.71u 0.02s 3.73r # +4%\n-\tgc_B pidigits\t3.73u 0.00s 3.73r # +4%\n-\n-threadring 50000000\n-\tgc threadring\t14.51u 0.00s 14.54r # -17%\n-\n-chameneos 6000000\n-\tgc chameneosredux\t7.41u 0.00s 7.42r # -3%\n-\n-# A complete run at the Go 1 release.\n-# Significant changes:\n-# - gccgo is now enabled for all tests (goroutines are cheap enough)\n-# - threadring and chameneos are 14% faster, probably due to runtime changes\n-# - regex-dna 36% faster\n-# - fannkuch-parallel (only) slowed down 40%\n-# - gccgo on binary-tree-freelist is still optimized to nothing\n-# Other changes are modest.\n-\n-fasta -n 25000000\n-\tgcc -O2 fasta.c\t1.45u 0.02s 1.48r\n-\tgccgo -O2 fasta.go\t1.46u 0.00s 1.47r\n-\tgc fasta\t1.99u 0.01s 2.00r\n-\tgc_B fasta\t1.99u 0.01s 2.01r\n-\n-reverse-complement < output-of-fasta-25000000\n-\tgcc -O2 reverse-complement.c\t0.95u 0.48s 4.99r\n-\tgccgo -O2 reverse-complement.go\t0.93u 0.16s 1.09r\n-\tgc reverse-complement\t1.20u 0.19s 1.39r\n-\tgc_B reverse-complement\t1.04u 0.16s 1.20r\n-\n-nbody -n 50000000\n-\tgcc -O2 -lm nbody.c\t13.02u 0.00s 13.05r\n-\tgccgo -O2 nbody.go\t14.46u 0.00s 14.49r\n-\tgc nbody\t21.79u 0.00s 21.84r\n-\tgc_B nbody\t21.74u 0.00s 21.79r\n-\n-binary-tree 15 # too slow to use 20\n-\tgcc -O2 binary-tree.c -lm\t0.60u 0.01s 0.61r\n-\tgccgo -O2 binary-tree.go\t1.30u 0.01s 1.32r\n-\tgccgo -O2 binary-tree-freelist.go\t0.00u 0.00s 0.00r\n-\tgc binary-tree\t1.84u 0.01s 1.86r\n-\tgc binary-tree-freelist\t0.33u 0.00s 0.33r\n-\n-fannkuch 12\n-\tgcc -O2 fannkuch.c\t45.24u 0.00s 45.34r\n-\tgccgo -O2 fannkuch.go\t59.76u 0.01s 59.90r\n-\tgccgo -O2 fannkuch-parallel.go\t218.20u 0.01s 61.60r\n-\tgc fannkuch\t103.92u 0.00s 104.16r\n-\tgc fannkuch-parallel\t221.61u 0.00s 60.49r\n-\tgc_B fannkuch\t53.17u 0.00s 53.30r\n-\n-regex-dna 100000\n-\tgcc -O2 regex-dna.c -lpcre\t0.47u 0.00s 0.48r\n-\tgccgo -O2 regex-dna.go\t6.52u 0.00s 6.54r\n-\tgccgo -O2 regex-dna-parallel.go\t14.40u 0.73s 4.35r\n-\tgc regex-dna\t2.63u 0.02s 2.66r # -36%\n-\tgc regex-dna-parallel\t2.87u 0.01s 1.11r\n-\tgc_B regex-dna\t2.65u 0.00s 2.66r\n-\n-spectral-norm 5500\n-\tgcc -O2 spectral-norm.c -lm\t15.78u 0.00s 15.82r\n-\tgccgo -O2 spectral-norm.go\t15.79u 0.00s 15.83r\n-\tgc spectral-norm\t19.76u 0.00s 19.80r\n-\tgc_B spectral-norm\t19.73u 0.01s 19.78r\n-\n-k-nucleotide 1000000\n-\tgcc -O2  k-nucleotide.c\t5.59u 0.03s 5.63r\n-\tgccgo -O2 k-nucleotide.go\t4.09u 0.03s 4.13r\n-\tgccgo -O2 k-nucleotide-parallel.go\t4.50u 0.06s 1.63r\n-\tgc k-nucleotide\t9.23u 0.02s 9.27r\n-\tgc k-nucleotide-parallel\t9.87u 0.03s 3.55r\n-\tgc_B k-nucleotide\t9.20u 0.00s 9.22r\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t36.09u 0.00s 36.18r\n-\tgccgo -O2 mandelbrot.go\t41.69u 0.01s 41.80r\n-\tgc mandelbrot\t60.91u 0.02s 61.07r\n-\tgc_B mandelbrot\t60.90u 0.00s 61.04r\n-\n-meteor 2098\n-\tgcc -O2 meteor-contest.c\t0.09u 0.00s 0.09r\n-\tgccgo -O2 meteor-contest.go\t0.09u 0.00s 0.09r\n-\tgc meteor-contest\t0.14u 0.00s 0.15r\n-\tgc_B meteor-contest\t0.14u 0.00s 0.14r\n-\n-pidigits 10000\n-\tgcc -O2 pidigits.c -lgmp\t2.27u 0.00s 2.27r\n-\tgccgo -O2 pidigits.go\t8.65u 0.00s 8.67r\n-\tgc pidigits\t3.70u 0.04s 3.75r\n-\tgc_B pidigits\t3.72u 0.02s 3.75r\n-\n-threadring 50000000\n-\tgcc -O2 threadring.c\t40.91u 369.85s 323.31r\n-\tgccgo -O2 threadring.go\t26.97u 30.82s 57.93r\n-\tgc threadring\t12.81u 0.01s 12.85r # -13%\n-\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t9.44u 72.90s 12.65r\n-\tgccgo -O2 chameneosredux.go\t7.73u 7.53s 15.30r\n-\tgc chameneosredux\t6.51u 0.00s 6.53r # - 14%\n-\n-# After http://codereview.appspot.com/6248049, moving panicindex\n-# calls out of line (putting the likely code into a single path and shortening\n-# loops). Significant changes since the last run (note: some are slower for\n-# unrelated and as yet undiagnosed reasons):\n-\n-nbody -n 50000000\n-\tgc nbody\t19.10u 0.01s 19.19r # -12%\n-\tgc_B nbody\t19.19u 0.00s 19.23r # -12%\n-\n-binary-tree 15 # too slow to use 20\n-\tgc binary-tree\t1.49u 0.01s 1.51r # -19%\n-\t\n-fannkuch 12\n-\tgc fannkuch\t60.79u 0.00s 60.92r # -41%\n-\tgc fannkuch-parallel\t183.51u 0.01s 51.75r # -14%\n-\tgc_B fannkuch\t51.68u 0.00s 51.79r # -3%\n-\n-k-nucleotide 1000000\n-\tgc k-nucleotide\t9.74u 0.04s 9.80r # +6%\n-\tgc k-nucleotide-parallel\t9.89u 0.05s 3.59r # +1%\n-\tgc_B k-nucleotide\t9.39u 0.02s 9.43r # +2%\n-\n-mandelbrot (much slower, due to unrelated http://codereview.appspot.com/6209077)\n-\tgc mandelbrot\t100.98u 0.00s 101.20r # +65%\n-\tgc_B mandelbrot\t100.90u 0.01s 101.17r # +65%\n-\n-meteor 2098\n-\tgc meteor-contest\t0.13u 0.00s 0.13r # -13%\n-\tgc_B meteor-contest\t0.13u 0.00s 0.13r # -7%\n-\n-# May 30, 2012.\n-# After http://codereview.appspot.com/6261051, restoring old code generated\n-# for floating-point constants. Mandelbrot is back to its previous numbers.\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t36.07u 0.00s 36.16r\n-\tgccgo -O2 mandelbrot.go\t41.72u 0.01s 41.90r\n-\tgc mandelbrot\t60.62u 0.00s 60.76r\n-\tgc_B mandelbrot\t60.68u 0.00s 60.82r\n-\n-# May 30, 2012.\n-# After http://codereview.appspot.com/6248068, better FP code\n-# by avoiding MOVSD between registers.\n-# Plus some other timing changes that have crept in from other speedups,\n-# from garbage collection to Printf.\n-\n-fasta -n 25000000\n-\tgc fasta\t1.76u 0.00s 1.76r # -12%\n-\tgc_B fasta\t1.71u 0.00s 1.72r # -12%\n-\n-nbody -n 50000000\n-\tgc nbody\t17.56u 0.00s 17.60r # -8%\n-\tgc_B nbody\t17.30u 0.00s 17.34r # -10%\n-\n-fannkuch 12\n-\tgc fannkuch-parallel\t155.92u 0.01s 44.05r # -15%\n-\n-k-nucleotide 1000000\n-\tgc k-nucleotide\t9.22u 0.01s 9.26r # -5%\n-\tgc k-nucleotide-parallel\t9.23u 0.03s 3.26r # -9%\n-\tgc_B k-nucleotide\t9.22u 0.03s 9.28r # -2%\n-\n-mandelbrot 16000\n-\tgc mandelbrot\t44.80u 0.00s 44.90r # -27%\n-\tgc_B mandelbrot\t44.81u 0.00s 44.92r # -26%\n-\n-pidigits 10000\n-\tgc pidigits\t3.51u 0.00s 3.52r # -6%\n-\tgc_B pidigits\t3.51u 0.00s 3.52r # -6%\n-\n-# Aug 28, 2012\n-# After some assembler work in package big.\n-pidigits 10000\n-\tgc pidigits\t2.85u 0.02s 2.88r # -22%\n-\tgc_B pidigits\t2.88u 0.01s 2.90r # -21%\n-\n-# Sep 26, 2012\n-# 64-bit ints, plus significantly better floating-point code.\n-# Interesting details:\n-# \tGenerally something in the 0-10% slower range, some (binary tree) more\n-#\tFloating-point noticeably faster:\n-#\t\tnbody -25%\n-#\t\tmandelbrot -37% relative to Go 1.\n-#\tOther:\n-#\t\tregex-dna +47%\n-fasta -n 25000000\n-\tgcc -O2 fasta.c\t1.43u 0.03s 1.46r\n-\tgccgo -O2 fasta.go\t1.47u 0.00s 1.47r\n-\tgc fasta\t1.78u 0.01s 1.80r\n-\tgc_B fasta\t1.76u 0.00s 1.76r\n-\n-reverse-complement < output-of-fasta-25000000\n-\tgcc -O2 reverse-complement.c\t1.14u 0.39s 11.19r\n-\tgccgo -O2 reverse-complement.go\t0.91u 0.17s 1.09r\n-\tgc reverse-complement\t1.12u 0.18s 1.31r\n-\tgc_B reverse-complement\t1.12u 0.15s 1.28r\n-\n-nbody -n 50000000\n-\tgcc -O2 nbody.c -lm\t13.02u 0.00s 13.05r\n-\tgccgo -O2 nbody.go\t13.90u 0.00s 13.93r\n-\tgc nbody\t17.05u 0.00s 17.09r\n-\tgc_B nbody\t16.30u 0.00s 16.34r\n-\n-binary-tree 15 # too slow to use 20\n-\tgcc -O2 binary-tree.c -lm\t0.61u 0.00s 0.61r\n-\tgccgo -O2 binary-tree.go\t1.24u 0.04s 1.29r\n-\tgccgo -O2 binary-tree-freelist.go\t0.21u 0.01s 0.22r\n-\tgc binary-tree\t1.93u 0.02s 1.96r\n-\tgc binary-tree-freelist\t0.32u 0.00s 0.33r\n-\n-fannkuch 12\n-\tgcc -O2 fannkuch.c\t45.19u 0.00s 45.29r\n-\tgccgo -O2 fannkuch.go\t60.32u 0.00s 60.45r\n-\tgccgo -O2 fannkuch-parallel.go\t185.59u 0.00s 59.49r\n-\tgc fannkuch\t72.14u 0.00s 72.30r\n-\tgc fannkuch-parallel\t172.54u 0.00s 43.59r\n-\tgc_B fannkuch\t53.55u 0.00s 53.67r\n-\n-regex-dna 100000\n-\tgcc -O2 regex-dna.c -lpcre\t0.47u 0.00s 0.47r\n-\tgccgo -O2 regex-dna.go\t6.49u 0.05s 6.56r\n-\tgccgo -O2 regex-dna-parallel.go\t14.60u 0.67s 4.42r\n-\tgc regex-dna\t3.91u 0.00s 3.92r\n-\tgc regex-dna-parallel\t4.01u 0.03s 1.56r\n-\tgc_B regex-dna\t3.91u 0.00s 3.92r\n-\n-spectral-norm 5500\n-\tgcc -O2 spectral-norm.c -lm\t15.85u 0.00s 15.89r\n-\tgccgo -O2 spectral-norm.go\t15.86u 0.00s 15.89r\n-\tgc spectral-norm\t19.72u 0.00s 19.76r\n-\tgc_B spectral-norm\t19.68u 0.01s 19.74r\n-\n-k-nucleotide 1000000\n-\tgcc -O2 k-nucleotide.c -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -lglib-2.0 \t4.90u 0.01s 4.93r\n-\tgccgo -O2 k-nucleotide.go\t4.78u 0.01s 4.80r\n-\tgccgo -O2 k-nucleotide-parallel.go\t6.49u 0.02s 2.18r\n-\tgc k-nucleotide\t9.05u 0.02s 9.09r\n-\tgc k-nucleotide-parallel\t9.27u 0.01s 3.29r\n-\tgc_B k-nucleotide\t8.95u 0.03s 9.00r\n-\n-mandelbrot 16000\n-\tgcc -O2 mandelbrot.c\t36.11u 0.00s 36.19r\n-\tgccgo -O2 mandelbrot.go\t43.67u 0.00s 43.77r\n-\tgc mandelbrot\t38.57u 0.00s 38.66r\n-\tgc_B mandelbrot\t38.59u 0.00s 38.68r\n-\n-meteor 2098\n-\tgcc -O2 meteor-contest.c\t0.09u 0.00s 0.09r\n-\tgccgo -O2 meteor-contest.go\t0.09u 0.00s 0.09r\n-\tgc meteor-contest\t0.13u 0.00s 0.14r\n-\tgc_B meteor-contest\t0.12u 0.00s 0.13r\n-\n-pidigits 10000\n-\tgcc -O2 pidigits.c -lgmp\t2.26u 0.00s 2.27r\n-\tgccgo -O2 pidigits.go\t9.05u 0.00s 9.07r\n-\tgc pidigits\t2.88u 0.02s 2.90r\n-\tgc_B pidigits\t2.89u 0.00s 2.90r\n-\n-threadring 50000000\n-\tgcc -O2 threadring.c -lpthread\t37.30u 327.81s 289.28r\n-\tgccgo -O2 threadring.go\t42.83u 26.15s 69.14r\n-\tgc threadring\t13.00u 0.00s 13.03r\n-\n-chameneos 6000000\n-\tgcc -O2 chameneosredux.c -lpthread\t8.80u 71.67s 12.19r\n-\tgccgo -O2 chameneosredux.go\t11.28u 6.68s 18.00r\n-\tgc chameneosredux\t6.94u 0.00s 6.96r\n-\n-# May 23, 2013\n-# Go 1.1, which includes precise GC, new scheduler, faster maps.\n-# 20%-ish speedups across many benchmarks.\n-# gccgo showing significant improvement (even though it's not yet up to Go 1.1)\n-#\n-# Standouts:\n-#\tfannkuch, regex-dna, k-nucleotide, threadring, chameneos\n-\n-fasta -n 25000000\n-\tgcc -m64 -O2 fasta.c\t1.54u 0.01s 1.55r\n-\tgccgo -O2 fasta.go\t1.42u 0.00s 1.43r\n-\tgc fasta\t1.50u 0.01s 1.52r # -16%\n-\tgc_B fasta\t1.46u 0.00s 1.46r # -17%\n-\n-reverse-complement < output-of-fasta-25000000\n-\tgcc -m64 -O2 reverse-complement.c\t0.87u 0.37s 4.36r\n-\tgccgo -O2 reverse-complement.go\t0.77u 0.15s 0.93r # -15%\n-\tgc reverse-complement\t0.99u 0.12s 1.12r # -15%\n-\tgc_B reverse-complement\t0.85u 0.17s 1.02r # -21%\n-\n-nbody -n 50000000\n-\tgcc -m64 -O2 nbody.c -lm\t13.50u 0.00s 13.53r\n-\tgccgo -O2 nbody.go\t13.98u 0.01s 14.02r\n-\tgc nbody\t16.63u 0.01s 16.67r\n-\tgc_B nbody\t15.74u 0.00s 15.76r\n-\n-binary-tree 15 # too slow to use 20\n-\tgcc -m64 -O2 binary-tree.c -lm\t0.61u 0.00s 0.61r\n-\tgccgo -O2 binary-tree.go\t1.11u 0.01s 1.12r # -13%\n-\tgccgo -O2 binary-tree-freelist.go\t0.22u 0.01s 0.23r\n-\tgc binary-tree\t1.83u 0.02s 1.83r # -7%\n-\tgc binary-tree-freelist\t0.32u 0.00s 0.32r\n-\n-fannkuch 12\n-\tgcc -m64 -O2 fannkuch.c\t45.56u 0.00s 45.67r\n-\tgccgo -O2 fannkuch.go\t57.71u 0.00s 57.85r # -4%\n-\tgccgo -O2 fannkuch-parallel.go\t146.31u 0.00s 37.50r #-37%\n-\tgc fannkuch\t70.06u 0.03s 70.17r # -3%\n-\tgc fannkuch-parallel\t131.88u 0.06s 33.59r # -23%\n-\tgc_B fannkuch\t45.55u 0.02s 45.63r # -15%\n-\n-regex-dna 100000\n-\tgcc -m64 -O2 regex-dna.c -lpcre\t0.44u 0.01s 0.45r\n-\tgccgo -O2 regex-dna.go\t5.59u 0.00s 5.61r # -14%\n-\tgccgo -O2 regex-dna-parallel.go\t10.85u 0.30s 3.34r # -24%\n-\tgc regex-dna\t2.23u 0.01s 2.25r # -43%\n-\tgc regex-dna-parallel\t2.35u 0.00s 0.93r # -40%\n-\tgc_B regex-dna\t2.24u 0.01s 2.25r # -43%\n-\n-spectral-norm 5500\n-\tgcc -m64 -O2 spectral-norm.c -lm\t14.84u 0.00s 14.88r\n-\tgccgo -O2 spectral-norm.go\t15.33u 0.00s 15.37r\n-\tgc spectral-norm\t16.75u 0.02s 16.79r # -15%\n-\tgc_B spectral-norm\t16.77u 0.01s 16.79r # -15%\n-\n-k-nucleotide 1000000\n-\tgcc -O2 k-nucleotide.c -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -lglib-2.0 \t4.50u 0.00s 4.52r\n-\tgccgo -O2 k-nucleotide.go\t3.72u 0.04s 3.77r # -21%\n-\tgccgo -O2 k-nucleotide-parallel.go\t3.88u 0.03s 1.42r # -35%\n-\tgc k-nucleotide\t6.32u 0.01s 6.33r # -31%\n-\tgc k-nucleotide-parallel\t6.47u 0.05s 2.13r # -33%\n-\tgc_B k-nucleotide\t6.45u 0.01s 6.47r # - 28%\n-\n-mandelbrot 16000\n-\tgcc -m64 -O2 mandelbrot.c\t36.03u 0.00s 36.11r\n-\tgccgo -O2 mandelbrot.go\t37.61u 0.00s 37.74r # -14%\n-\tgc mandelbrot\t38.19u 0.05s 38.29r\n-\tgc_B mandelbrot\t38.19u 0.03s 38.26r\n-\n-meteor 2098\n-\tgcc -m64 -O2 meteor-contest.c\t0.08u 0.00s 0.08r\n-\tgccgo -O2 meteor-contest.go\t0.09u 0.01s 0.10r\n-\tgc meteor-contest\t0.12u 0.00s 0.12r # -15% although perhaps just noise\n-\tgc_B meteor-contest\t0.11u 0.00s 0.12r # -8% although perhaps just noise\n-\n-pidigits 10000\n-\tgcc -m64 -O2 pidigits.c -lgmp\t2.27u 0.00s 2.28r\n-\tgccgo -O2 pidigits.go\t8.95u 0.02s 8.99r\n-\tgc pidigits\t2.88u 0.14s 2.91r\n-\tgc_B pidigits\t2.92u 0.10s 2.91r\n-\n-threadring 50000000\n-\tgcc -m64 -O2 threadring.c -lpthread\t14.75u 167.88s 212.23r\n-\tgccgo -O2 threadring.go\t36.72u 12.08s 48.91r # -29%\n-\tgc threadring\t10.93u 0.01s 10.95r # -16%\n-\n-chameneos 6000000\n-\tgcc -m64 -O2 chameneosredux.c -lpthread\t8.89u 56.62s 9.75r\n-\tgccgo -O2 chameneosredux.go\t9.48u 2.48s 11.99r # -33%\n-\tgc chameneosredux\t5.80u 0.00s 5.81r # -16%\n-"}, {"sha": "2db895c26302c626db23063098c398e851fe8bfe", "filename": "gcc/testsuite/go.test/test/bench/shootout/timing.sh", "status": "removed", "additions": 0, "deletions": 219, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.sh?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,219 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright 2009 The Go Authors.  All rights reserved.\n-# Use of this source code is governed by a BSD-style\n-# license that can be found in the LICENSE file.\n-\n-set -e\n-\n-eval $(go tool dist env)\n-O=$GOCHAR\n-GC=\"go tool ${O}g\"\n-LD=\"go tool ${O}l\"\n-\n-gccm=\"\"\n-case \"$O\" in\n-8)\n-\tgccm=-m32;;\n-6)\n-\tgccm=-m64;;\n-esac\n-\n-PATH=.:$PATH\n-\n-havegccgo=false\n-if which gccgo >/dev/null 2>&1\n-then\n-\thavegccgo=true\n-fi\n-\n-mode=run\n-case X\"$1\" in\n-X-test)\n-\tmode=test\n-\tshift\n-esac\n-\n-gc() {\n-\t$GC $1.go; $LD $1.$O\n-}\n-\n-gc_B() {\n-\t$GC -B $1.go; $LD $1.$O\n-}\n-\n-runonly() {\n-\tif [ $mode = run ]\n-\tthen\n-\t\t\"$@\"\n-\tfi\n-}\n-\n-run() {\n-\tif [ $mode = test ]\n-\tthen\n-\t\tif echo $1 | grep -q '^gc '\n-\t\tthen\n-\t\t\t$1\t# compile the program\n-\t\t\tprogram=$(echo $1 | sed 's/gc //')\n-\t\t\tshift\n-\t\t\techo $program\n-\t\t\t$1 <fasta-1000.out > /tmp/$$\n-\t\t\tcase $program in\n-\t\t\tchameneosredux)\n-\t\t\t\t# exact numbers may vary but non-numbers should match\n-\t\t\t\tgrep -v '[0-9]' /tmp/$$ > /tmp/$$x\n-\t\t\t\tgrep -v '[0-9]' chameneosredux.txt > /tmp/$$y\n-\t\t\t\tcmp /tmp/$$x /tmp/$$y\n-\t\t\t\trm -f /tmp/$$ /tmp/$$x /tmp/$$y\n-\t\t\t\t;;\n-\t\t\t*)\n-\t\t\t\tcmp /tmp/$$ $program.txt\n-\t\t\t\trm -f /tmp/$$\n-\t\t\tesac\n-\t\tfi\n-\t\treturn\n-\tfi\n-\tif ! $havegccgo && echo $1 | grep -q '^gccgo '\n-\tthen\n-\t\treturn\n-\tfi\n-\techo -n '\t'$1'\t'\n-\t$1\n-\tshift\n-\t\n-\techo $((time -p $* >/dev/null) 2>&1) | awk '{print $4 \"u \" $6 \"s \" $2 \"r\"}'\n-}\n-\n-fasta() {\n-\trunonly echo 'fasta -n 25000000'\n-\trun \"gcc $gccm -O2 fasta.c\" a.out 25000000\n-\trun 'gccgo -O2 fasta.go' a.out -n 25000000\t#commented out until WriteString is in bufio\n-\trun 'gc fasta' $O.out -n 25000000\n-\trun 'gc_B fasta' $O.out -n 25000000\n-}\n-\n-revcomp() {\n-\trunonly gcc -O2 fasta.c\n-\trunonly a.out 25000000 > x\n-\trunonly echo 'reverse-complement < output-of-fasta-25000000'\n-\trun \"gcc $gccm -O2 reverse-complement.c\" a.out < x\n-\trun 'gccgo -O2 reverse-complement.go' a.out < x\n-\trun 'gc reverse-complement' $O.out < x\n-\trun 'gc_B reverse-complement' $O.out < x\n-\trm x\n-}\n-\n-nbody() {\n-\trunonly echo 'nbody -n 50000000'\n-\trun \"gcc $gccm -O2 nbody.c -lm\" a.out 50000000\n-\trun 'gccgo -O2 nbody.go' a.out -n 50000000\n-\trun 'gc nbody' $O.out -n 50000000\n-\trun 'gc_B nbody' $O.out -n 50000000\n-}\n-\n-binarytree() {\n-\trunonly echo 'binary-tree 15 # too slow to use 20'\n-\trun \"gcc $gccm -O2 binary-tree.c -lm\" a.out 15\n-\trun 'gccgo -O2 binary-tree.go' a.out -n 15\n-\trun 'gccgo -O2 binary-tree-freelist.go' a.out -n 15\n-\trun 'gc binary-tree' $O.out -n 15\n-\trun 'gc binary-tree-freelist' $O.out -n 15\n-}\n-\n-fannkuch() {\n-\trunonly echo 'fannkuch 12'\n-\trun \"gcc $gccm -O2 fannkuch.c\" a.out 12\n-\trun 'gccgo -O2 fannkuch.go' a.out -n 12\n-\trun 'gccgo -O2 fannkuch-parallel.go' a.out -n 12\n-\trun 'gc fannkuch' $O.out -n 12\n-\trun 'gc fannkuch-parallel' $O.out -n 12\n-\trun 'gc_B fannkuch' $O.out -n 12\n-}\n-\n-regexdna() {\n-\trunonly gcc -O2 fasta.c\n-\trunonly a.out 100000 > x\n-\trunonly echo 'regex-dna 100000'\n-\trun \"gcc $gccm -O2 regex-dna.c -lpcre\" a.out <x\n-\trun 'gccgo -O2 regex-dna.go' a.out <x\n-\trun 'gccgo -O2 regex-dna-parallel.go' a.out <x\n-\trun 'gc regex-dna' $O.out <x\n-\trun 'gc regex-dna-parallel' $O.out <x\n-\trun 'gc_B regex-dna' $O.out <x\n-\trm x\n-}\n-\n-spectralnorm() {\n-\trunonly echo 'spectral-norm 5500'\n-\trun \"gcc $gccm -O2 spectral-norm.c -lm\" a.out 5500\n-\trun 'gccgo -O2 spectral-norm.go' a.out -n 5500\n-\trun 'gc spectral-norm' $O.out -n 5500\n-\trun 'gc_B spectral-norm' $O.out -n 5500\n-}\n-\n-knucleotide() {\n-\trunonly gcc -O2 fasta.c\n-\trunonly a.out 1000000 > x  # should be using 25000000\n-\trunonly echo 'k-nucleotide 1000000'\n-\tif [ $mode = run ]; then\n-\t\trun \"gcc -O2 k-nucleotide.c $(pkg-config glib-2.0 --cflags --libs)\" a.out <x\n-\tfi\n-\trun 'gccgo -O2 k-nucleotide.go' a.out <x\n-\trun 'gccgo -O2 k-nucleotide-parallel.go' a.out <x\n-\trun 'gc k-nucleotide' $O.out <x\n-\trun 'gc k-nucleotide-parallel' $O.out <x\n-\trun 'gc_B k-nucleotide' $O.out <x\n-\trm x\n-}\n-\n-mandelbrot() {\n-\trunonly echo 'mandelbrot 16000'\n-\trun \"gcc $gccm -O2 mandelbrot.c\" a.out 16000\n-\trun 'gccgo -O2 mandelbrot.go' a.out -n 16000\n-\trun 'gc mandelbrot' $O.out -n 16000\n-\trun 'gc_B mandelbrot' $O.out -n 16000\n-}\n-\n-meteor() {\n-\trunonly echo 'meteor 2098'\n-\trun \"gcc $gccm -O2 meteor-contest.c\" a.out 2098\n-\trun 'gccgo -O2 meteor-contest.go' a.out -n 2098\n-\trun 'gc meteor-contest' $O.out -n 2098\n-\trun 'gc_B  meteor-contest' $O.out -n 2098\n-}\n-\n-pidigits() {\n-\trunonly echo 'pidigits 10000'\n-\trun \"gcc $gccm -O2 pidigits.c -lgmp\" a.out 10000\n-\trun 'gccgo -O2 pidigits.go' a.out -n 10000\n-\trun 'gc pidigits' $O.out -n 10000\n-\trun 'gc_B  pidigits' $O.out -n 10000\n-}\n-\n-threadring() {\n-\trunonly echo 'threadring 50000000'\n-\trun \"gcc $gccm -O2 threadring.c -lpthread\" a.out 50000000\n-\trun 'gccgo -O2 threadring.go' a.out -n 50000000\n-\trun 'gc threadring' $O.out -n 50000000\n-}\n-\n-chameneos() {\n-\trunonly echo 'chameneos 6000000'\n-\trun \"gcc $gccm -O2 chameneosredux.c -lpthread\" a.out 6000000\n-\trun 'gccgo -O2 chameneosredux.go' a.out 6000000\n-\trun 'gc chameneosredux' $O.out 6000000\n-}\n-\n-case $# in\n-0)\n-\trun=\"fasta revcomp nbody binarytree fannkuch regexdna spectralnorm knucleotide mandelbrot meteor pidigits threadring chameneos\"\n-\t;;\n-*)\n-\trun=$*\n-esac\n-\n-for i in $run\n-do\n-\t$i\n-\trunonly echo\n-done"}, {"sha": "70e01b1a307fd96409b0052794938ced33f866f6", "filename": "gcc/testsuite/go.test/test/blank1.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -4,7 +4,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Test that incorrect uses of the blank identifer are caught.\n+// Test that incorrect uses of the blank identifier are caught.\n // Does not compile.\n \n package _\t// ERROR \"invalid package name\"\n@@ -13,6 +13,10 @@ var t struct {\n \t_ int\n }\n \n+func (x int) _() { // ERROR \"methods on non-local type\"\n+\tprintln(x)\n+}\n+\n type T struct {\n       _ []int\n }"}, {"sha": "6b79a98e48f8a5eca3312a27eda8e4dc4f5e8f50", "filename": "gcc/testsuite/go.test/test/bombad.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbombad.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbombad.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbombad.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "aa1d51b6f9cc6e5290bd677ebddac497fee69b71", "filename": "gcc/testsuite/go.test/test/bounds.go", "status": "modified", "additions": 61, "deletions": 47, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbounds.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbounds.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbounds.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck -0 -m -l\n \n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -12,23 +12,23 @@ package foo\n var (\n \ts []int\n \n-\ta1 [1]int\n-\ta1k [1000]int\n+\ta1    [1]int\n+\ta1k   [1000]int\n \ta100k [100000]int\n \n-\tp1 *[1]int\n-\tp1k *[1000]int\n+\tp1    *[1]int\n+\tp1k   *[1000]int\n \tp100k *[100000]int\n \n-\ti int\n-\tui uint\n-\ti8 int8\n-\tui8 uint8\n-\ti16 int16\n+\ti    int\n+\tui   uint\n+\ti8   int8\n+\tui8  uint8\n+\ti16  int16\n \tui16 uint16\n-\ti32 int32\n+\ti32  int32\n \tui32 uint32\n-\ti64 int64\n+\ti64  int64\n \tui64 uint64\n )\n \n@@ -61,11 +61,11 @@ func main() {\n \t// Unsigned 8-bit numbers don't need checks for len >= 2\u2078.\n \tuse(s[ui8])\n \tuse(a1[ui8])\n-\tuse(a1k[ui8])  // ERROR \"index bounds check elided\"\n-\tuse(a100k[ui8])  // ERROR \"index bounds check elided\"\n+\tuse(a1k[ui8])   // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui8]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui8])\n-\tuse(p1k[ui8])  // ERROR \"index bounds check elided\"\n-\tuse(p100k[ui8])  // ERROR \"index bounds check elided\"\n+\tuse(p1k[ui8])   // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui8]) // ERROR \"index bounds check elided\"\n \n \tuse(s[i16])\n \tuse(a1[i16])\n@@ -79,10 +79,10 @@ func main() {\n \tuse(s[ui16])\n \tuse(a1[ui16])\n \tuse(a1k[ui16])\n-\tuse(a100k[ui16])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui16]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui16])\n \tuse(p1k[ui16])\n-\tuse(p100k[ui16])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui16]) // ERROR \"index bounds check elided\"\n \n \tuse(s[i32])\n \tuse(a1[i32])\n@@ -128,11 +128,11 @@ func main() {\n \n \tuse(s[ui%999])\n \tuse(a1[ui%999])\n-\tuse(a1k[ui%999])  // ERROR \"index bounds check elided\"\n-\tuse(a100k[ui%999])  // ERROR \"index bounds check elided\"\n+\tuse(a1k[ui%999])   // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui%999]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui%999])\n-\tuse(p1k[ui%999])  // ERROR \"index bounds check elided\"\n-\tuse(p100k[ui%999])  // ERROR \"index bounds check elided\"\n+\tuse(p1k[ui%999])   // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui%999]) // ERROR \"index bounds check elided\"\n \n \tuse(s[i%1000])\n \tuse(a1[i%1000])\n@@ -144,11 +144,11 @@ func main() {\n \n \tuse(s[ui%1000])\n \tuse(a1[ui%1000])\n-\tuse(a1k[ui%1000])  // ERROR \"index bounds check elided\"\n-\tuse(a100k[ui%1000])  // ERROR \"index bounds check elided\"\n+\tuse(a1k[ui%1000])   // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui%1000]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui%1000])\n-\tuse(p1k[ui%1000])  // ERROR \"index bounds check elided\"\n-\tuse(p100k[ui%1000])  // ERROR \"index bounds check elided\"\n+\tuse(p1k[ui%1000])   // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui%1000]) // ERROR \"index bounds check elided\"\n \n \tuse(s[i%1001])\n \tuse(a1[i%1001])\n@@ -161,45 +161,59 @@ func main() {\n \tuse(s[ui%1001])\n \tuse(a1[ui%1001])\n \tuse(a1k[ui%1001])\n-\tuse(a100k[ui%1001])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui%1001]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui%1001])\n \tuse(p1k[ui%1001])\n-\tuse(p100k[ui%1001])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui%1001]) // ERROR \"index bounds check elided\"\n \n \t// Bitwise and truncates the maximum value to the mask value.\n \t// The result (for a positive mask) cannot be negative, so elision\n \t// applies to both signed and unsigned indexes.\n \tuse(s[i&999])\n \tuse(a1[i&999])\n-\tuse(a1k[i&999])  // ERROR \"index bounds check elided\"\n-\tuse(a100k[i&999])  // ERROR \"index bounds check elided\"\n+\tuse(a1k[i&999])   // ERROR \"index bounds check elided\"\n+\tuse(a100k[i&999]) // ERROR \"index bounds check elided\"\n \tuse(p1[i&999])\n-\tuse(p1k[i&999])  // ERROR \"index bounds check elided\"\n-\tuse(p100k[i&999])  // ERROR \"index bounds check elided\"\n+\tuse(p1k[i&999])   // ERROR \"index bounds check elided\"\n+\tuse(p100k[i&999]) // ERROR \"index bounds check elided\"\n \n \tuse(s[ui&999])\n \tuse(a1[ui&999])\n-\tuse(a1k[ui&999])  // ERROR \"index bounds check elided\"\n-\tuse(a100k[ui&999])  // ERROR \"index bounds check elided\"\n+\tuse(a1k[ui&999])   // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui&999]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui&999])\n-\tuse(p1k[ui&999])  // ERROR \"index bounds check elided\"\n-\tuse(p100k[ui&999])  // ERROR \"index bounds check elided\"\n+\tuse(p1k[ui&999])   // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui&999]) // ERROR \"index bounds check elided\"\n \n \tuse(s[i&1000])\n \tuse(a1[i&1000])\n \tuse(a1k[i&1000])\n-\tuse(a100k[i&1000])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[i&1000]) // ERROR \"index bounds check elided\"\n \tuse(p1[i&1000])\n \tuse(p1k[i&1000])\n-\tuse(p100k[i&1000])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[i&1000]) // ERROR \"index bounds check elided\"\n \n \tuse(s[ui&1000])\n \tuse(a1[ui&1000])\n \tuse(a1k[ui&1000])\n-\tuse(a100k[ui&1000])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui&1000]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui&1000])\n \tuse(p1k[ui&1000])\n-\tuse(p100k[ui&1000])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui&1000]) // ERROR \"index bounds check elided\"\n+\n+\tuse(a1[i&^-1]) // ERROR \"index bounds check elided\"\n+\tuse(a1[i&^0])\n+\tuse(a1[i&^-2])\n+\tuse(a1[i&^1])\n+\tuse(a1k[i&^-1]) // ERROR \"index bounds check elided\"\n+\tuse(a1k[i&^0])\n+\tuse(a1k[i&^-2]) // ERROR \"index bounds check elided\"\n+\tuse(a1k[i&^1])\n+\tuse(a1k[i8&^0])\n+\tuse(a1k[i8&^-128]) // ERROR \"index bounds check elided\"\n+\tuse(a1k[ui8&^1])   // ERROR \"index bounds check elided\"\n+\tuse(a1k[ui16&^0xf000])\n+\tuse(a1k[ui16&^0xff00]) // ERROR \"index bounds check elided\"\n \n \t// Right shift cuts the effective number of bits in the index,\n \t// but only for unsigned (signed stays negative).\n@@ -214,10 +228,10 @@ func main() {\n \tuse(s[ui32>>22])\n \tuse(a1[ui32>>22])\n \tuse(a1k[ui32>>22])\n-\tuse(a100k[ui32>>22])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui32>>22]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui32>>22])\n \tuse(p1k[ui32>>22])\n-\tuse(p100k[ui32>>22])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui32>>22]) // ERROR \"index bounds check elided\"\n \n \tuse(s[i32>>23])\n \tuse(a1[i32>>23])\n@@ -229,11 +243,11 @@ func main() {\n \n \tuse(s[ui32>>23])\n \tuse(a1[ui32>>23])\n-\tuse(a1k[ui32>>23])  // ERROR \"index bounds check elided\"\n-\tuse(a100k[ui32>>23])  // ERROR \"index bounds check elided\"\n+\tuse(a1k[ui32>>23])   // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui32>>23]) // ERROR \"index bounds check elided\"\n \tuse(p1[ui32>>23])\n-\tuse(p1k[ui32>>23])  // ERROR \"index bounds check elided\"\n-\tuse(p100k[ui32>>23])  // ERROR \"index bounds check elided\"\n+\tuse(p1k[ui32>>23])   // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui32>>23]) // ERROR \"index bounds check elided\"\n \n \t// Division cuts the range like right shift does.\n \tuse(s[i/1e6])\n@@ -263,7 +277,7 @@ func main() {\n \tuse(p1[ui/1e7])\n }\n \n-var sum int \n+var sum int\n \n func use(x int) {\n \tsum += x"}, {"sha": "4632dcd0f7906a483044f428590337b90c66aca9", "filename": "gcc/testsuite/go.test/test/bugs/bug395.go", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug395.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug395.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug395.go?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,25 +0,0 @@\n-// echo bug395 is broken  # takes 90+ seconds to break\n-// # $G $D/$F.go || echo bug395\n-\n-// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n-// To run this test you must use the ./run shell script.\n-\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// Issue 1909\n-// Would OOM due to exponential recursion on Foo's expanded methodset in nodefmt\n-package test\n-\n-type Foo interface {\n-\tBar() interface {\n-\t\tFoo\n-\t}\n-\tBaz() interface {\n-\t\tFoo\n-\t}\n-\tBug() interface {\n-\t\tFoo\n-\t}\n-}"}, {"sha": "b816d34fc345d808a088db8f0dc509a78415c832", "filename": "gcc/testsuite/go.test/test/bugs/placeholder", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fplaceholder", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fplaceholder", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fplaceholder?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,2 +0,0 @@\n-This file keeps Mercurial from deleting the directory\n-when there are no known bugs."}, {"sha": "ff69dbe5dbca24058e4435656f24bf12d07d3278", "filename": "gcc/testsuite/go.test/test/chan/doubleselect.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fdoubleselect.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fdoubleselect.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fdoubleselect.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -61,6 +61,7 @@ func recver(in <-chan int) {\n func main() {\n \truntime.GOMAXPROCS(2)\n \n+\tflag.Parse()\n \tc1 := make(chan int)\n \tc2 := make(chan int)\n \tc3 := make(chan int)"}, {"sha": "0001bcf8a29728b5a138490f93005b8cc7d2e2d5", "filename": "gcc/testsuite/go.test/test/chan/fifo.go", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Ffifo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Ffifo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Ffifo.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -54,4 +54,3 @@ func main() {\n \tAsynchFifo()\n \tSynchFifo()\n }\n-"}, {"sha": "0c96d921d1ea303bb1d78240cf3ccf97d8b02e04", "filename": "gcc/testsuite/go.test/test/chan/perm.go", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fperm.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fperm.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fperm.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -24,19 +24,23 @@ func main() {\n \tcr = cs // ERROR \"illegal types|incompatible|cannot\"\n \tcs = cr // ERROR \"illegal types|incompatible|cannot\"\n \n-\tc <- 0 // ok\n-\t<-c    // ok\n-\tx, ok := <-c\t// ok\n+\tvar n int\n+\t<-n    // ERROR \"receive from non-chan|expected channel\"\n+\tn <- 2 // ERROR \"send to non-chan|must be channel\"\n+\n+\tc <- 0       // ok\n+\t<-c          // ok\n+\tx, ok := <-c // ok\n \t_, _ = x, ok\n \n-\tcr <- 0 // ERROR \"send\"\n-\t<-cr    // ok\n-\tx, ok = <-cr\t// ok\n+\tcr <- 0      // ERROR \"send\"\n+\t<-cr         // ok\n+\tx, ok = <-cr // ok\n \t_, _ = x, ok\n \n-\tcs <- 0 // ok\n-\t<-cs    // ERROR \"receive\"\n-\tx, ok = <-cs\t// ERROR \"receive\"\n+\tcs <- 0      // ok\n+\t<-cs         // ERROR \"receive\"\n+\tx, ok = <-cs // ERROR \"receive\"\n \t_, _ = x, ok\n \n \tselect {\n@@ -53,10 +57,14 @@ func main() {\n \t\t_ = x\n \t}\n \n-\tfor _ = range cs {// ERROR \"receive\"\n+\tfor _ = range cs { // ERROR \"receive\"\n+\t}\n+\n+\tfor range cs { // ERROR \"receive\"\n \t}\n \n \tclose(c)\n \tclose(cs)\n-\tclose(cr)  // ERROR \"receive\"\n+\tclose(cr) // ERROR \"receive\"\n+\tclose(n)  // ERROR \"invalid operation.*non-chan type|must be channel\"\n }"}, {"sha": "e999dde2bee4f80e445dae1f0b2531a399fa1ba3", "filename": "gcc/testsuite/go.test/test/chan/powser1.go", "status": "modified", "additions": 178, "deletions": 148, "changes": 326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -11,18 +11,18 @@\n // coefficients.  A denominator of zero signifies the end.\n // Original code in Newsqueak by Doug McIlroy.\n // See Squinting at Power Series by Doug McIlroy,\n-//   http://www.cs.bell-labs.com/who/rsc/thread/squint.pdf\n+//   https://swtch.com/~rsc/thread/squint.pdf\n \n package main\n \n import \"os\"\n \n-type rat struct  {\n-\tnum, den  int64\t// numerator, denominator\n+type rat struct {\n+\tnum, den int64 // numerator, denominator\n }\n \n func (u rat) pr() {\n-\tif u.den==1 {\n+\tif u.den == 1 {\n \t\tprint(u.num)\n \t} else {\n \t\tprint(u.num, \"/\", u.den)\n@@ -35,12 +35,12 @@ func (u rat) eq(c rat) bool {\n }\n \n type dch struct {\n-\treq chan  int\n-\tdat chan  rat\n+\treq chan int\n+\tdat chan rat\n \tnam int\n }\n \n-type dch2 [2] *dch\n+type dch2 [2]*dch\n \n var chnames string\n var chnameserial int\n@@ -77,25 +77,25 @@ func mkdch2() *dch2 {\n // a signal on the release-wait channel tells the next newer\n // generation to begin servicing out[1].\n \n-func dosplit(in *dch, out *dch2, wait chan int ) {\n-\tboth := false\t// do not service both channels\n+func dosplit(in *dch, out *dch2, wait chan int) {\n+\tboth := false // do not service both channels\n \n \tselect {\n \tcase <-out[0].req:\n-\t\t\n+\n \tcase <-wait:\n \t\tboth = true\n \t\tselect {\n \t\tcase <-out[0].req:\n-\t\t\t\n+\n \t\tcase <-out[1].req:\n \t\t\tout[0], out[1] = out[1], out[0]\n \t\t}\n \t}\n \n \tseqno++\n \tin.req <- seqno\n-\trelease := make(chan  int)\n+\trelease := make(chan int)\n \tgo dosplit(in, out, release)\n \tdat := <-in.dat\n \tout[0].dat <- dat\n@@ -128,17 +128,19 @@ func get(in *dch) rat {\n \n func getn(in []*dch) []rat {\n \tn := len(in)\n-\tif n != 2 { panic(\"bad n in getn\") }\n-\treq := new([2] chan int)\n-\tdat := new([2] chan rat)\n+\tif n != 2 {\n+\t\tpanic(\"bad n in getn\")\n+\t}\n+\treq := new([2]chan int)\n+\tdat := new([2]chan rat)\n \tout := make([]rat, 2)\n \tvar i int\n \tvar it rat\n-\tfor i=0; i<n; i++ {\n+\tfor i = 0; i < n; i++ {\n \t\treq[i] = in[i].req\n \t\tdat[i] = nil\n \t}\n-\tfor n=2*n; n>0; n-- {\n+\tfor n = 2 * n; n > 0; n-- {\n \t\tseqno++\n \n \t\tselect {\n@@ -178,8 +180,8 @@ func repeat(dat rat, out *dch) {\n \t}\n }\n \n-type PS *dch\t// power series\n-type PS2 *[2] PS // pair of power series\n+type PS *dch    // power series\n+type PS2 *[2]PS // pair of power series\n \n var Ones PS\n var Twos PS\n@@ -200,23 +202,27 @@ func mkPS2() *dch2 {\n \n // Integer gcd; needed for rational arithmetic\n \n-func gcd (u, v int64) int64 {\n-\tif u < 0 { return gcd(-u, v) }\n-\tif u == 0 { return v }\n+func gcd(u, v int64) int64 {\n+\tif u < 0 {\n+\t\treturn gcd(-u, v)\n+\t}\n+\tif u == 0 {\n+\t\treturn v\n+\t}\n \treturn gcd(v%u, u)\n }\n \n // Make a rational from two ints and from one int\n \n func i2tor(u, v int64) rat {\n-\tg := gcd(u,v)\n+\tg := gcd(u, v)\n \tvar r rat\n \tif v > 0 {\n-\t\tr.num = u/g\n-\t\tr.den = v/g\n+\t\tr.num = u / g\n+\t\tr.den = v / g\n \t} else {\n-\t\tr.num = -u/g\n-\t\tr.den = -v/g\n+\t\tr.num = -u / g\n+\t\tr.den = -v / g\n \t}\n \treturn r\n }\n@@ -228,29 +234,30 @@ func itor(u int64) rat {\n var zero rat\n var one rat\n \n-\n // End mark and end test\n \n var finis rat\n \n func end(u rat) int64 {\n-\tif u.den==0 { return 1 }\n+\tif u.den == 0 {\n+\t\treturn 1\n+\t}\n \treturn 0\n }\n \n // Operations on rationals\n \n func add(u, v rat) rat {\n-\tg := gcd(u.den,v.den)\n-\treturn  i2tor(u.num*(v.den/g)+v.num*(u.den/g),u.den*(v.den/g))\n+\tg := gcd(u.den, v.den)\n+\treturn i2tor(u.num*(v.den/g)+v.num*(u.den/g), u.den*(v.den/g))\n }\n \n func mul(u, v rat) rat {\n-\tg1 := gcd(u.num,v.den)\n-\tg2 := gcd(u.den,v.num)\n+\tg1 := gcd(u.num, v.den)\n+\tg2 := gcd(u.den, v.num)\n \tvar r rat\n-\tr.num = (u.num/g1)*(v.num/g2)\n-\tr.den = (u.den/g2)*(v.den/g1)\n+\tr.num = (u.num / g1) * (v.num / g2)\n+\tr.den = (u.den / g2) * (v.den / g1)\n \treturn r\n }\n \n@@ -262,31 +269,33 @@ func sub(u, v rat) rat {\n \treturn add(u, neg(v))\n }\n \n-func inv(u rat) rat {\t// invert a rat\n-\tif u.num == 0 { panic(\"zero divide in inv\") }\n+func inv(u rat) rat { // invert a rat\n+\tif u.num == 0 {\n+\t\tpanic(\"zero divide in inv\")\n+\t}\n \treturn i2tor(u.den, u.num)\n }\n \n // print eval in floating point of PS at x=c to n terms\n func evaln(c rat, U PS, n int) {\n \txn := float64(1)\n-\tx := float64(c.num)/float64(c.den)\n+\tx := float64(c.num) / float64(c.den)\n \tval := float64(0)\n-\tfor i:=0; i<n; i++ {\n+\tfor i := 0; i < n; i++ {\n \t\tu := get(U)\n \t\tif end(u) != 0 {\n \t\t\tbreak\n \t\t}\n-\t\tval = val + x * float64(u.num)/float64(u.den)\n-\t\txn = xn*x\n+\t\tval = val + x*float64(u.num)/float64(u.den)\n+\t\txn = xn * x\n \t}\n \tprint(val, \"\\n\")\n }\n \n // Print n terms of a power series\n func printn(U PS, n int) {\n \tdone := false\n-\tfor ; !done && n>0; n-- {\n+\tfor ; !done && n > 0; n-- {\n \t\tu := get(U)\n \t\tif end(u) != 0 {\n \t\t\tdone = true\n@@ -299,10 +308,14 @@ func printn(U PS, n int) {\n \n // Evaluate n terms of power series U at x=c\n func eval(c rat, U PS, n int) rat {\n-\tif n==0 { return zero }\n+\tif n == 0 {\n+\t\treturn zero\n+\t}\n \ty := get(U)\n-\tif end(y) != 0 { return zero }\n-\treturn add(y,mul(c,eval(c,U,n-1)))\n+\tif end(y) != 0 {\n+\t\treturn zero\n+\t}\n+\treturn add(y, mul(c, eval(c, U, n-1)))\n }\n \n // Power-series constructors return channels on which power\n@@ -313,7 +326,7 @@ func eval(c rat, U PS, n int) rat {\n \n func Split(U PS) *dch2 {\n \tUU := mkdch2()\n-\tgo split(U,UU)\n+\tgo split(U, UU)\n \treturn UU\n }\n \n@@ -324,16 +337,16 @@ func Add(U, V PS) PS {\n \t\tvar uv []rat\n \t\tfor {\n \t\t\t<-Z.req\n-\t\t\tuv = get2(U,V)\n-\t\t\tswitch end(uv[0])+2*end(uv[1]) {\n+\t\t\tuv = get2(U, V)\n+\t\t\tswitch end(uv[0]) + 2*end(uv[1]) {\n \t\t\tcase 0:\n \t\t\t\tZ.dat <- add(uv[0], uv[1])\n \t\t\tcase 1:\n \t\t\t\tZ.dat <- uv[1]\n-\t\t\t\tcopy(V,Z)\n+\t\t\t\tcopy(V, Z)\n \t\t\tcase 2:\n \t\t\t\tZ.dat <- uv[0]\n-\t\t\t\tcopy(U,Z)\n+\t\t\t\tcopy(U, Z)\n \t\t\tcase 3:\n \t\t\t\tZ.dat <- finis\n \t\t\t}\n@@ -343,7 +356,7 @@ func Add(U, V PS) PS {\n }\n \n // Multiply a power series by a constant\n-func Cmul(c rat,U PS) PS {\n+func Cmul(c rat, U PS) PS {\n \tZ := mkPS()\n \tgo func() {\n \t\tdone := false\n@@ -353,7 +366,7 @@ func Cmul(c rat,U PS) PS {\n \t\t\tif end(u) != 0 {\n \t\t\t\tdone = true\n \t\t\t} else {\n-\t\t\t\tZ.dat <- mul(c,u)\n+\t\t\t\tZ.dat <- mul(c, u)\n \t\t\t}\n \t\t}\n \t\tZ.dat <- finis\n@@ -372,43 +385,47 @@ func Sub(U, V PS) PS {\n func Monmul(U PS, n int) PS {\n \tZ := mkPS()\n \tgo func() {\n-\t\tfor ; n>0; n-- { put(zero,Z) }\n-\t\tcopy(U,Z)\n+\t\tfor ; n > 0; n-- {\n+\t\t\tput(zero, Z)\n+\t\t}\n+\t\tcopy(U, Z)\n \t}()\n \treturn Z\n }\n \n // Multiply by x\n \n func Xmul(U PS) PS {\n-\treturn Monmul(U,1)\n+\treturn Monmul(U, 1)\n }\n \n func Rep(c rat) PS {\n \tZ := mkPS()\n-\tgo repeat(c,Z)\n+\tgo repeat(c, Z)\n \treturn Z\n }\n \n // Monomial c*x^n\n \n func Mon(c rat, n int) PS {\n-\tZ:=mkPS()\n+\tZ := mkPS()\n \tgo func() {\n-\t\tif(c.num!=0) {\n-\t\t\tfor ; n>0; n=n-1 { put(zero,Z) }\n-\t\t\tput(c,Z)\n+\t\tif c.num != 0 {\n+\t\t\tfor ; n > 0; n = n - 1 {\n+\t\t\t\tput(zero, Z)\n+\t\t\t}\n+\t\t\tput(c, Z)\n \t\t}\n-\t\tput(finis,Z)\n+\t\tput(finis, Z)\n \t}()\n \treturn Z\n }\n \n func Shift(c rat, U PS) PS {\n \tZ := mkPS()\n \tgo func() {\n-\t\tput(c,Z)\n-\t\tcopy(U,Z)\n+\t\tput(c, Z)\n+\t\tcopy(U, Z)\n \t}()\n \treturn Z\n }\n@@ -440,20 +457,20 @@ func Poly(a []rat) PS {\n //\tthen UV = u*v + x*(u*VV+v*UU) + x*x*UU*VV\n \n func Mul(U, V PS) PS {\n-\tZ:=mkPS()\n+\tZ := mkPS()\n \tgo func() {\n \t\t<-Z.req\n-\t\tuv := get2(U,V)\n-\t\tif end(uv[0])!=0 || end(uv[1]) != 0 {\n+\t\tuv := get2(U, V)\n+\t\tif end(uv[0]) != 0 || end(uv[1]) != 0 {\n \t\t\tZ.dat <- finis\n \t\t} else {\n-\t\t\tZ.dat <- mul(uv[0],uv[1])\n+\t\t\tZ.dat <- mul(uv[0], uv[1])\n \t\t\tUU := Split(U)\n \t\t\tVV := Split(V)\n-\t\t\tW := Add(Cmul(uv[0],VV[0]),Cmul(uv[1],UU[0]))\n+\t\t\tW := Add(Cmul(uv[0], VV[0]), Cmul(uv[1], UU[0]))\n \t\t\t<-Z.req\n \t\t\tZ.dat <- get(W)\n-\t\t\tcopy(Add(W,Mul(UU[1],VV[1])),Z)\n+\t\t\tcopy(Add(W, Mul(UU[1], VV[1])), Z)\n \t\t}\n \t}()\n \treturn Z\n@@ -462,18 +479,18 @@ func Mul(U, V PS) PS {\n // Differentiate\n \n func Diff(U PS) PS {\n-\tZ:=mkPS()\n+\tZ := mkPS()\n \tgo func() {\n \t\t<-Z.req\n \t\tu := get(U)\n \t\tif end(u) == 0 {\n-\t\t\tdone:=false\n-\t\t\tfor i:=1; !done; i++ {\n+\t\t\tdone := false\n+\t\t\tfor i := 1; !done; i++ {\n \t\t\t\tu = get(U)\n \t\t\t\tif end(u) != 0 {\n \t\t\t\t\tdone = true\n \t\t\t\t} else {\n-\t\t\t\t\tZ.dat <- mul(itor(int64(i)),u)\n+\t\t\t\t\tZ.dat <- mul(itor(int64(i)), u)\n \t\t\t\t\t<-Z.req\n \t\t\t\t}\n \t\t\t}\n@@ -484,16 +501,18 @@ func Diff(U PS) PS {\n }\n \n // Integrate, with const of integration\n-func Integ(c rat,U PS) PS {\n-\tZ:=mkPS()\n+func Integ(c rat, U PS) PS {\n+\tZ := mkPS()\n \tgo func() {\n-\t\tput(c,Z)\n-\t\tdone:=false\n-\t\tfor i:=1; !done; i++ {\n+\t\tput(c, Z)\n+\t\tdone := false\n+\t\tfor i := 1; !done; i++ {\n \t\t\t<-Z.req\n \t\t\tu := get(U)\n-\t\t\tif end(u) != 0 { done= true }\n-\t\t\tZ.dat <- mul(i2tor(1,int64(i)),u)\n+\t\t\tif end(u) != 0 {\n+\t\t\t\tdone = true\n+\t\t\t}\n+\t\t\tZ.dat <- mul(i2tor(1, int64(i)), u)\n \t\t}\n \t\tZ.dat <- finis\n \t}()\n@@ -503,17 +522,17 @@ func Integ(c rat,U PS) PS {\n // Binomial theorem (1+x)^c\n \n func Binom(c rat) PS {\n-\tZ:=mkPS()\n+\tZ := mkPS()\n \tgo func() {\n \t\tn := 1\n \t\tt := itor(1)\n-\t\tfor c.num!=0 {\n-\t\t\tput(t,Z)\n-\t\t\tt = mul(mul(t,c),i2tor(1,int64(n)))\n-\t\t\tc = sub(c,one)\n+\t\tfor c.num != 0 {\n+\t\t\tput(t, Z)\n+\t\t\tt = mul(mul(t, c), i2tor(1, int64(n)))\n+\t\t\tc = sub(c, one)\n \t\t\tn++\n \t\t}\n-\t\tput(finis,Z)\n+\t\tput(finis, Z)\n \t}()\n \treturn Z\n }\n@@ -527,14 +546,14 @@ func Binom(c rat) PS {\n //\tZZ = -UU*(z+x*ZZ)/u\n \n func Recip(U PS) PS {\n-\tZ:=mkPS()\n+\tZ := mkPS()\n \tgo func() {\n-\t\tZZ:=mkPS2()\n+\t\tZZ := mkPS2()\n \t\t<-Z.req\n \t\tz := inv(get(U))\n \t\tZ.dat <- z\n-\t\tsplit(Mul(Cmul(neg(z),U),Shift(z,ZZ[0])),ZZ)\n-\t\tcopy(ZZ[1],Z)\n+\t\tsplit(Mul(Cmul(neg(z), U), Shift(z, ZZ[0])), ZZ)\n+\t\tcopy(ZZ[1], Z)\n \t}()\n \treturn Z\n }\n@@ -548,7 +567,7 @@ func Recip(U PS) PS {\n \n func Exp(U PS) PS {\n \tZZ := mkPS2()\n-\tsplit(Integ(one,Mul(ZZ[0],Diff(U))),ZZ)\n+\tsplit(Integ(one, Mul(ZZ[0], Diff(U))), ZZ)\n \treturn ZZ[1]\n }\n \n@@ -559,28 +578,28 @@ func Exp(U PS) PS {\n // bug: a nonzero constant term is ignored\n \n func Subst(U, V PS) PS {\n-\tZ:= mkPS()\n+\tZ := mkPS()\n \tgo func() {\n \t\tVV := Split(V)\n \t\t<-Z.req\n \t\tu := get(U)\n \t\tZ.dat <- u\n \t\tif end(u) == 0 {\n \t\t\tif end(get(VV[0])) != 0 {\n-\t\t\t\tput(finis,Z)\n+\t\t\t\tput(finis, Z)\n \t\t\t} else {\n-\t\t\t\tcopy(Mul(VV[0],Subst(U,VV[1])),Z)\n+\t\t\t\tcopy(Mul(VV[0], Subst(U, VV[1])), Z)\n \t\t\t}\n \t\t}\n \t}()\n \treturn Z\n }\n \n-// Monomial Substition: U(c x^n)\n+// Monomial Substitution: U(c x^n)\n // Each Ui is multiplied by c^i and followed by n-1 zeros\n \n func MonSubst(U PS, c0 rat, n int) PS {\n-\tZ:= mkPS()\n+\tZ := mkPS()\n \tgo func() {\n \t\tc := one\n \t\tfor {\n@@ -601,14 +620,13 @@ func MonSubst(U PS, c0 rat, n int) PS {\n \treturn Z\n }\n \n-\n func Init() {\n \tchnameserial = -1\n \tseqno = 0\n \tchnames = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n \tzero = itor(0)\n \tone = itor(1)\n-\tfinis = i2tor(1,0)\n+\tfinis = i2tor(1, 0)\n \tOnes = Rep(one)\n \tTwos = Rep(itor(2))\n }\n@@ -627,7 +645,8 @@ func check(U PS, c rat, count int, str string) {\n \t}\n }\n \n-const N=10\n+const N = 10\n+\n func checka(U PS, a []rat, str string) {\n \tfor i := 0; i < N; i++ {\n \t\tcheck(U, a[i], 1, str)\n@@ -636,53 +655,64 @@ func checka(U PS, a []rat, str string) {\n \n func main() {\n \tInit()\n-\tif len(os.Args) > 1 {  // print\n-\t\tprint(\"Ones: \"); printn(Ones, 10)\n-\t\tprint(\"Twos: \"); printn(Twos, 10)\n-\t\tprint(\"Add: \"); printn(Add(Ones, Twos), 10)\n-\t\tprint(\"Diff: \"); printn(Diff(Ones), 10)\n-\t\tprint(\"Integ: \"); printn(Integ(zero, Ones), 10)\n-\t\tprint(\"CMul: \"); printn(Cmul(neg(one), Ones), 10)\n-\t\tprint(\"Sub: \"); printn(Sub(Ones, Twos), 10)\n-\t\tprint(\"Mul: \"); printn(Mul(Ones, Ones), 10)\n-\t\tprint(\"Exp: \"); printn(Exp(Ones), 15)\n-\t\tprint(\"MonSubst: \"); printn(MonSubst(Ones, neg(one), 2), 10)\n-\t\tprint(\"ATan: \"); printn(Integ(zero, MonSubst(Ones, neg(one), 2)), 10)\n-\t} else {  // test\n+\tif len(os.Args) > 1 { // print\n+\t\tprint(\"Ones: \")\n+\t\tprintn(Ones, 10)\n+\t\tprint(\"Twos: \")\n+\t\tprintn(Twos, 10)\n+\t\tprint(\"Add: \")\n+\t\tprintn(Add(Ones, Twos), 10)\n+\t\tprint(\"Diff: \")\n+\t\tprintn(Diff(Ones), 10)\n+\t\tprint(\"Integ: \")\n+\t\tprintn(Integ(zero, Ones), 10)\n+\t\tprint(\"CMul: \")\n+\t\tprintn(Cmul(neg(one), Ones), 10)\n+\t\tprint(\"Sub: \")\n+\t\tprintn(Sub(Ones, Twos), 10)\n+\t\tprint(\"Mul: \")\n+\t\tprintn(Mul(Ones, Ones), 10)\n+\t\tprint(\"Exp: \")\n+\t\tprintn(Exp(Ones), 15)\n+\t\tprint(\"MonSubst: \")\n+\t\tprintn(MonSubst(Ones, neg(one), 2), 10)\n+\t\tprint(\"ATan: \")\n+\t\tprintn(Integ(zero, MonSubst(Ones, neg(one), 2)), 10)\n+\t} else { // test\n \t\tcheck(Ones, one, 5, \"Ones\")\n-\t\tcheck(Add(Ones, Ones), itor(2), 0, \"Add Ones Ones\")  // 1 1 1 1 1\n+\t\tcheck(Add(Ones, Ones), itor(2), 0, \"Add Ones Ones\") // 1 1 1 1 1\n \t\tcheck(Add(Ones, Twos), itor(3), 0, \"Add Ones Twos\") // 3 3 3 3 3\n \t\ta := make([]rat, N)\n \t\td := Diff(Ones)\n-\t\tfor i:=0; i < N; i++ {\n-\t\t\ta[i] = itor(int64(i+1))\n+\t\tfor i := 0; i < N; i++ {\n+\t\t\ta[i] = itor(int64(i + 1))\n \t\t}\n-\t\tchecka(d, a, \"Diff\")  // 1 2 3 4 5\n+\t\tchecka(d, a, \"Diff\") // 1 2 3 4 5\n \t\tin := Integ(zero, Ones)\n-\t\ta[0] = zero  // integration constant\n-\t\tfor i:=1; i < N; i++ {\n+\t\ta[0] = zero // integration constant\n+\t\tfor i := 1; i < N; i++ {\n \t\t\ta[i] = i2tor(1, int64(i))\n \t\t}\n-\t\tchecka(in, a, \"Integ\")  // 0 1 1/2 1/3 1/4 1/5\n-\t\tcheck(Cmul(neg(one), Twos), itor(-2), 10, \"CMul\")  // -1 -1 -1 -1 -1\n-\t\tcheck(Sub(Ones, Twos), itor(-1), 0, \"Sub Ones Twos\")  // -1 -1 -1 -1 -1\n+\t\tchecka(in, a, \"Integ\")                               // 0 1 1/2 1/3 1/4 1/5\n+\t\tcheck(Cmul(neg(one), Twos), itor(-2), 10, \"CMul\")    // -1 -1 -1 -1 -1\n+\t\tcheck(Sub(Ones, Twos), itor(-1), 0, \"Sub Ones Twos\") // -1 -1 -1 -1 -1\n \t\tm := Mul(Ones, Ones)\n-\t\tfor i:=0; i < N; i++ {\n-\t\t\ta[i] = itor(int64(i+1))\n+\t\tfor i := 0; i < N; i++ {\n+\t\t\ta[i] = itor(int64(i + 1))\n \t\t}\n-\t\tchecka(m, a, \"Mul\")  // 1 2 3 4 5\n+\t\tchecka(m, a, \"Mul\") // 1 2 3 4 5\n \t\te := Exp(Ones)\n \t\ta[0] = itor(1)\n \t\ta[1] = itor(1)\n-\t\ta[2] = i2tor(3,2)\n-\t\ta[3] = i2tor(13,6)\n-\t\ta[4] = i2tor(73,24)\n-\t\ta[5] = i2tor(167,40)\n-\t\ta[6] = i2tor(4051,720)\n-\t\ta[7] = i2tor(37633,5040)\n-\t\ta[8] = i2tor(43817,4480)\n-\t\ta[9] = i2tor(4596553,362880)\n-\t\tchecka(e, a, \"Exp\")  // 1 1 3/2 13/6 73/24\n+\t\ta[2] = i2tor(3, 2)\n+\t\ta[3] = i2tor(13, 6)\n+\t\ta[4] = i2tor(73, 24)\n+\t\ta[5] = i2tor(167, 40)\n+\t\ta[6] = i2tor(4051, 720)\n+\t\ta[7] = i2tor(37633, 5040)\n+\t\ta[8] = i2tor(43817, 4480)\n+\t\ta[9] = i2tor(4596553, 362880)\n+\t\tchecka(e, a, \"Exp\") // 1 1 3/2 13/6 73/24\n \t\tat := Integ(zero, MonSubst(Ones, neg(one), 2))\n \t\tfor c, i := 1, 0; i < N; i++ {\n \t\t\tif i%2 == 0 {\n@@ -692,20 +722,20 @@ func main() {\n \t\t\t\tc *= -1\n \t\t\t}\n \t\t}\n-\t\tchecka(at, a, \"ATan\")  // 0 -1 0 -1/3 0 -1/5\n-/*\n-\t\tt := Revert(Integ(zero, MonSubst(Ones, neg(one), 2)))\n-\t\ta[0] = zero\n-\t\ta[1] = itor(1)\n-\t\ta[2] = zero\n-\t\ta[3] = i2tor(1,3)\n-\t\ta[4] = zero\n-\t\ta[5] = i2tor(2,15)\n-\t\ta[6] = zero\n-\t\ta[7] = i2tor(17,315)\n-\t\ta[8] = zero\n-\t\ta[9] = i2tor(62,2835)\n-\t\tchecka(t, a, \"Tan\")  // 0 1 0 1/3 0 2/15\n-*/\n+\t\tchecka(at, a, \"ATan\") // 0 -1 0 -1/3 0 -1/5\n+\t\t/*\n+\t\t\tt := Revert(Integ(zero, MonSubst(Ones, neg(one), 2)))\n+\t\t\ta[0] = zero\n+\t\t\ta[1] = itor(1)\n+\t\t\ta[2] = zero\n+\t\t\ta[3] = i2tor(1,3)\n+\t\t\ta[4] = zero\n+\t\t\ta[5] = i2tor(2,15)\n+\t\t\ta[6] = zero\n+\t\t\ta[7] = i2tor(17,315)\n+\t\t\ta[8] = zero\n+\t\t\ta[9] = i2tor(62,2835)\n+\t\t\tchecka(t, a, \"Tan\")  // 0 1 0 1/3 0 2/15\n+\t\t*/\n \t}\n }"}, {"sha": "72cbba8cf6cce13e207599c572cfce82f0e869de", "filename": "gcc/testsuite/go.test/test/chan/powser2.go", "status": "modified", "additions": 221, "deletions": 191, "changes": 412, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -15,23 +15,23 @@\n // coefficients.  A denominator of zero signifies the end.\n // Original code in Newsqueak by Doug McIlroy.\n // See Squinting at Power Series by Doug McIlroy,\n-//   http://www.cs.bell-labs.com/who/rsc/thread/squint.pdf\n+//   https://swtch.com/~rsc/thread/squint.pdf\n \n package main\n \n import \"os\"\n \n-type rat struct  {\n-\tnum, den  int64\t// numerator, denominator\n+type rat struct {\n+\tnum, den int64 // numerator, denominator\n }\n \n type item interface {\n \tpr()\n \teq(c item) bool\n }\n \n-func (u *rat) pr(){\n-\tif u.den==1 {\n+func (u *rat) pr() {\n+\tif u.den == 1 {\n \t\tprint(u.num)\n \t} else {\n \t\tprint(u.num, \"/\", u.den)\n@@ -45,12 +45,12 @@ func (u *rat) eq(c item) bool {\n }\n \n type dch struct {\n-\treq chan  int\n-\tdat chan  item\n+\treq chan int\n+\tdat chan item\n \tnam int\n }\n \n-type dch2 [2] *dch\n+type dch2 [2]*dch\n \n var chnames string\n var chnameserial int\n@@ -87,25 +87,25 @@ func mkdch2() *dch2 {\n // a signal on the release-wait channel tells the next newer\n // generation to begin servicing out[1].\n \n-func dosplit(in *dch, out *dch2, wait chan int ){\n-\tboth := false\t// do not service both channels\n+func dosplit(in *dch, out *dch2, wait chan int) {\n+\tboth := false // do not service both channels\n \n \tselect {\n \tcase <-out[0].req:\n-\t\t\n+\n \tcase <-wait:\n \t\tboth = true\n \t\tselect {\n \t\tcase <-out[0].req:\n-\t\t\t\n+\n \t\tcase <-out[1].req:\n-\t\t\tout[0],out[1] = out[1], out[0]\n+\t\t\tout[0], out[1] = out[1], out[0]\n \t\t}\n \t}\n \n \tseqno++\n \tin.req <- seqno\n-\trelease := make(chan  int)\n+\trelease := make(chan int)\n \tgo dosplit(in, out, release)\n \tdat := <-in.dat\n \tout[0].dat <- dat\n@@ -117,13 +117,13 @@ func dosplit(in *dch, out *dch2, wait chan int ){\n \trelease <- 0\n }\n \n-func split(in *dch, out *dch2){\n+func split(in *dch, out *dch2) {\n \trelease := make(chan int)\n \tgo dosplit(in, out, release)\n \trelease <- 0\n }\n \n-func put(dat item, out *dch){\n+func put(dat item, out *dch) {\n \t<-out.req\n \tout.dat <- dat\n }\n@@ -137,21 +137,23 @@ func get(in *dch) *rat {\n // Get one item from each of n demand channels\n \n func getn(in []*dch) []item {\n-\tn:=len(in)\n-\tif n != 2 { panic(\"bad n in getn\") }\n-\treq := make([] chan int, 2)\n-\tdat := make([] chan item, 2)\n+\tn := len(in)\n+\tif n != 2 {\n+\t\tpanic(\"bad n in getn\")\n+\t}\n+\treq := make([]chan int, 2)\n+\tdat := make([]chan item, 2)\n \tout := make([]item, 2)\n \tvar i int\n \tvar it item\n-\tfor i=0; i<n; i++ {\n+\tfor i = 0; i < n; i++ {\n \t\treq[i] = in[i].req\n \t\tdat[i] = nil\n \t}\n-\tfor n=2*n; n>0; n-- {\n+\tfor n = 2 * n; n > 0; n-- {\n \t\tseqno++\n \n-\t\tselect{\n+\t\tselect {\n \t\tcase req[0] <- seqno:\n \t\t\tdat[0] = in[0].dat\n \t\t\treq[0] = nil\n@@ -171,25 +173,25 @@ func getn(in []*dch) []item {\n \n // Get one item from each of 2 demand channels\n \n-func get2(in0 *dch, in1 *dch)  []item {\n+func get2(in0 *dch, in1 *dch) []item {\n \treturn getn([]*dch{in0, in1})\n }\n \n-func copy(in *dch, out *dch){\n+func copy(in *dch, out *dch) {\n \tfor {\n \t\t<-out.req\n \t\tout.dat <- get(in)\n \t}\n }\n \n-func repeat(dat item, out *dch){\n+func repeat(dat item, out *dch) {\n \tfor {\n \t\tput(dat, out)\n \t}\n }\n \n-type PS *dch\t// power series\n-type PS2 *[2] PS // pair of power series\n+type PS *dch    // power series\n+type PS2 *[2]PS // pair of power series\n \n var Ones PS\n var Twos PS\n@@ -210,93 +212,100 @@ func mkPS2() *dch2 {\n \n // Integer gcd; needed for rational arithmetic\n \n-func gcd (u, v int64) int64{\n-\tif u < 0 { return gcd(-u, v) }\n-\tif u == 0 { return v }\n+func gcd(u, v int64) int64 {\n+\tif u < 0 {\n+\t\treturn gcd(-u, v)\n+\t}\n+\tif u == 0 {\n+\t\treturn v\n+\t}\n \treturn gcd(v%u, u)\n }\n \n // Make a rational from two ints and from one int\n \n-func i2tor(u, v int64) *rat{\n-\tg := gcd(u,v)\n+func i2tor(u, v int64) *rat {\n+\tg := gcd(u, v)\n \tr := new(rat)\n \tif v > 0 {\n-\t\tr.num = u/g\n-\t\tr.den = v/g\n+\t\tr.num = u / g\n+\t\tr.den = v / g\n \t} else {\n-\t\tr.num = -u/g\n-\t\tr.den = -v/g\n+\t\tr.num = -u / g\n+\t\tr.den = -v / g\n \t}\n \treturn r\n }\n \n-func itor(u int64) *rat{\n+func itor(u int64) *rat {\n \treturn i2tor(u, 1)\n }\n \n var zero *rat\n var one *rat\n \n-\n // End mark and end test\n \n var finis *rat\n \n func end(u *rat) int64 {\n-\tif u.den==0 { return 1 }\n+\tif u.den == 0 {\n+\t\treturn 1\n+\t}\n \treturn 0\n }\n \n // Operations on rationals\n \n func add(u, v *rat) *rat {\n-\tg := gcd(u.den,v.den)\n-\treturn  i2tor(u.num*(v.den/g)+v.num*(u.den/g),u.den*(v.den/g))\n+\tg := gcd(u.den, v.den)\n+\treturn i2tor(u.num*(v.den/g)+v.num*(u.den/g), u.den*(v.den/g))\n }\n \n-func mul(u, v *rat) *rat{\n-\tg1 := gcd(u.num,v.den)\n-\tg2 := gcd(u.den,v.num)\n+func mul(u, v *rat) *rat {\n+\tg1 := gcd(u.num, v.den)\n+\tg2 := gcd(u.den, v.num)\n \tr := new(rat)\n-\tr.num =(u.num/g1)*(v.num/g2)\n-\tr.den = (u.den/g2)*(v.den/g1)\n+\tr.num = (u.num / g1) * (v.num / g2)\n+\tr.den = (u.den / g2) * (v.den / g1)\n \treturn r\n }\n \n-func neg(u *rat) *rat{\n+func neg(u *rat) *rat {\n \treturn i2tor(-u.num, u.den)\n }\n \n-func sub(u, v *rat) *rat{\n+func sub(u, v *rat) *rat {\n \treturn add(u, neg(v))\n }\n \n-func inv(u *rat) *rat{\t// invert a rat\n-\tif u.num == 0 { panic(\"zero divide in inv\") }\n+func inv(u *rat) *rat { // invert a rat\n+\tif u.num == 0 {\n+\t\tpanic(\"zero divide in inv\")\n+\t}\n \treturn i2tor(u.den, u.num)\n }\n \n // print eval in floating point of PS at x=c to n terms\n func Evaln(c *rat, U PS, n int) {\n \txn := float64(1)\n-\tx := float64(c.num)/float64(c.den)\n+\tx := float64(c.num) / float64(c.den)\n \tval := float64(0)\n-\tfor i:=0; i<n; i++ {\n+\tfor i := 0; i < n; i++ {\n \t\tu := get(U)\n \t\tif end(u) != 0 {\n \t\t\tbreak\n \t\t}\n-\t\tval = val + x * float64(u.num)/float64(u.den)\n-\t\txn = xn*x\n+\t\tval = val + x*float64(u.num)/float64(u.den)\n+\t\txn = xn * x\n \t}\n \tprint(val, \"\\n\")\n }\n \n // Print n terms of a power series\n-func Printn(U PS, n int){\n+func Printn(U PS, n int) {\n \tdone := false\n-\tfor ; !done && n>0; n-- {\n+\tfor ; !done && n > 0; n-- {\n \t\tu := get(U)\n \t\tif end(u) != 0 {\n \t\t\tdone = true\n@@ -307,16 +316,20 @@ func Printn(U PS, n int){\n \tprint((\"\\n\"))\n }\n \n-func Print(U PS){\n-\tPrintn(U,1000000000)\n+func Print(U PS) {\n+\tPrintn(U, 1000000000)\n }\n \n // Evaluate n terms of power series U at x=c\n-func eval(c *rat, U PS, n int) *rat{\n-\tif n==0 { return zero }\n+func eval(c *rat, U PS, n int) *rat {\n+\tif n == 0 {\n+\t\treturn zero\n+\t}\n \ty := get(U)\n-\tif end(y) != 0 { return zero }\n-\treturn add(y,mul(c,eval(c,U,n-1)))\n+\tif end(y) != 0 {\n+\t\treturn zero\n+\t}\n+\treturn add(y, mul(c, eval(c, U, n-1)))\n }\n \n // Power-series constructors return channels on which power\n@@ -325,29 +338,29 @@ func eval(c *rat, U PS, n int) *rat{\n \n // Make a pair of power series identical to a given power series\n \n-func Split(U PS) *dch2{\n+func Split(U PS) *dch2 {\n \tUU := mkdch2()\n-\tgo split(U,UU)\n+\tgo split(U, UU)\n \treturn UU\n }\n \n // Add two power series\n-func Add(U, V PS) PS{\n+func Add(U, V PS) PS {\n \tZ := mkPS()\n-\tgo func(U, V, Z PS){\n-\t\tvar uv [] item\n+\tgo func(U, V, Z PS) {\n+\t\tvar uv []item\n \t\tfor {\n \t\t\t<-Z.req\n-\t\t\tuv = get2(U,V)\n-\t\t\tswitch end(uv[0].(*rat))+2*end(uv[1].(*rat)) {\n+\t\t\tuv = get2(U, V)\n+\t\t\tswitch end(uv[0].(*rat)) + 2*end(uv[1].(*rat)) {\n \t\t\tcase 0:\n \t\t\t\tZ.dat <- add(uv[0].(*rat), uv[1].(*rat))\n \t\t\tcase 1:\n \t\t\t\tZ.dat <- uv[1]\n-\t\t\t\tcopy(V,Z)\n+\t\t\t\tcopy(V, Z)\n \t\t\tcase 2:\n \t\t\t\tZ.dat <- uv[0]\n-\t\t\t\tcopy(U,Z)\n+\t\t\t\tcopy(U, Z)\n \t\t\tcase 3:\n \t\t\t\tZ.dat <- finis\n \t\t\t}\n@@ -357,17 +370,17 @@ func Add(U, V PS) PS{\n }\n \n // Multiply a power series by a constant\n-func Cmul(c *rat,U PS) PS{\n+func Cmul(c *rat, U PS) PS {\n \tZ := mkPS()\n-\tgo func(c *rat, U, Z PS){\n+\tgo func(c *rat, U, Z PS) {\n \t\tdone := false\n \t\tfor !done {\n \t\t\t<-Z.req\n \t\t\tu := get(U)\n \t\t\tif end(u) != 0 {\n \t\t\t\tdone = true\n \t\t\t} else {\n-\t\t\t\tZ.dat <- mul(c,u)\n+\t\t\t\tZ.dat <- mul(c, u)\n \t\t\t}\n \t\t}\n \t\tZ.dat <- finis\n@@ -377,52 +390,56 @@ func Cmul(c *rat,U PS) PS{\n \n // Subtract\n \n-func Sub(U, V PS) PS{\n+func Sub(U, V PS) PS {\n \treturn Add(U, Cmul(neg(one), V))\n }\n \n // Multiply a power series by the monomial x^n\n \n-func Monmul(U PS, n int) PS{\n+func Monmul(U PS, n int) PS {\n \tZ := mkPS()\n-\tgo func(n int, U PS, Z PS){\n-\t\tfor ; n>0; n-- { put(zero,Z) }\n-\t\tcopy(U,Z)\n+\tgo func(n int, U PS, Z PS) {\n+\t\tfor ; n > 0; n-- {\n+\t\t\tput(zero, Z)\n+\t\t}\n+\t\tcopy(U, Z)\n \t}(n, U, Z)\n \treturn Z\n }\n \n // Multiply by x\n \n-func Xmul(U PS) PS{\n-\treturn Monmul(U,1)\n+func Xmul(U PS) PS {\n+\treturn Monmul(U, 1)\n }\n \n-func Rep(c *rat) PS{\n+func Rep(c *rat) PS {\n \tZ := mkPS()\n-\tgo repeat(c,Z)\n+\tgo repeat(c, Z)\n \treturn Z\n }\n \n // Monomial c*x^n\n \n-func Mon(c *rat, n int) PS{\n-\tZ:=mkPS()\n-\tgo func(c *rat, n int, Z PS){\n-\t\tif(c.num!=0) {\n-\t\t\tfor ; n>0; n=n-1 { put(zero,Z) }\n-\t\t\tput(c,Z)\n+func Mon(c *rat, n int) PS {\n+\tZ := mkPS()\n+\tgo func(c *rat, n int, Z PS) {\n+\t\tif c.num != 0 {\n+\t\t\tfor ; n > 0; n = n - 1 {\n+\t\t\t\tput(zero, Z)\n+\t\t\t}\n+\t\t\tput(c, Z)\n \t\t}\n-\t\tput(finis,Z)\n+\t\tput(finis, Z)\n \t}(c, n, Z)\n \treturn Z\n }\n \n-func Shift(c *rat, U PS) PS{\n+func Shift(c *rat, U PS) PS {\n \tZ := mkPS()\n-\tgo func(c *rat, U, Z PS){\n-\t\tput(c,Z)\n-\t\tcopy(U,Z)\n+\tgo func(c *rat, U, Z PS) {\n+\t\tput(c, Z)\n+\t\tcopy(U, Z)\n \t}(c, U, Z)\n \treturn Z\n }\n@@ -453,41 +470,41 @@ func Poly(a [] *rat) PS{\n //\tlet V = v + x*VV\n //\tthen UV = u*v + x*(u*VV+v*UU) + x*x*UU*VV\n \n-func Mul(U, V PS) PS{\n-\tZ:=mkPS()\n-\tgo func(U, V, Z PS){\n+func Mul(U, V PS) PS {\n+\tZ := mkPS()\n+\tgo func(U, V, Z PS) {\n \t\t<-Z.req\n-\t\tuv := get2(U,V)\n-\t\tif end(uv[0].(*rat))!=0 || end(uv[1].(*rat)) != 0 {\n+\t\tuv := get2(U, V)\n+\t\tif end(uv[0].(*rat)) != 0 || end(uv[1].(*rat)) != 0 {\n \t\t\tZ.dat <- finis\n \t\t} else {\n-\t\t\tZ.dat <- mul(uv[0].(*rat),uv[1].(*rat))\n+\t\t\tZ.dat <- mul(uv[0].(*rat), uv[1].(*rat))\n \t\t\tUU := Split(U)\n \t\t\tVV := Split(V)\n-\t\t\tW := Add(Cmul(uv[0].(*rat),VV[0]),Cmul(uv[1].(*rat),UU[0]))\n+\t\t\tW := Add(Cmul(uv[0].(*rat), VV[0]), Cmul(uv[1].(*rat), UU[0]))\n \t\t\t<-Z.req\n \t\t\tZ.dat <- get(W)\n-\t\t\tcopy(Add(W,Mul(UU[1],VV[1])),Z)\n+\t\t\tcopy(Add(W, Mul(UU[1], VV[1])), Z)\n \t\t}\n \t}(U, V, Z)\n \treturn Z\n }\n \n // Differentiate\n \n-func Diff(U PS) PS{\n-\tZ:=mkPS()\n-\tgo func(U, Z PS){\n+func Diff(U PS) PS {\n+\tZ := mkPS()\n+\tgo func(U, Z PS) {\n \t\t<-Z.req\n \t\tu := get(U)\n \t\tif end(u) == 0 {\n-\t\t\tdone:=false\n-\t\t\tfor i:=1; !done; i++ {\n+\t\t\tdone := false\n+\t\t\tfor i := 1; !done; i++ {\n \t\t\t\tu = get(U)\n \t\t\t\tif end(u) != 0 {\n-\t\t\t\t\tdone=true\n+\t\t\t\t\tdone = true\n \t\t\t\t} else {\n-\t\t\t\t\tZ.dat <- mul(itor(int64(i)),u)\n+\t\t\t\t\tZ.dat <- mul(itor(int64(i)), u)\n \t\t\t\t\t<-Z.req\n \t\t\t\t}\n \t\t\t}\n@@ -498,16 +515,18 @@ func Diff(U PS) PS{\n }\n \n // Integrate, with const of integration\n-func Integ(c *rat,U PS) PS{\n-\tZ:=mkPS()\n-\tgo func(c *rat, U, Z PS){\n-\t\tput(c,Z)\n-\t\tdone:=false\n-\t\tfor i:=1; !done; i++ {\n+func Integ(c *rat, U PS) PS {\n+\tZ := mkPS()\n+\tgo func(c *rat, U, Z PS) {\n+\t\tput(c, Z)\n+\t\tdone := false\n+\t\tfor i := 1; !done; i++ {\n \t\t\t<-Z.req\n \t\t\tu := get(U)\n-\t\t\tif end(u) != 0 { done= true }\n-\t\t\tZ.dat <- mul(i2tor(1,int64(i)),u)\n+\t\t\tif end(u) != 0 {\n+\t\t\t\tdone = true\n+\t\t\t}\n+\t\t\tZ.dat <- mul(i2tor(1, int64(i)), u)\n \t\t}\n \t\tZ.dat <- finis\n \t}(c, U, Z)\n@@ -516,18 +535,18 @@ func Integ(c *rat,U PS) PS{\n \n // Binomial theorem (1+x)^c\n \n-func Binom(c *rat) PS{\n-\tZ:=mkPS()\n-\tgo func(c *rat, Z PS){\n+func Binom(c *rat) PS {\n+\tZ := mkPS()\n+\tgo func(c *rat, Z PS) {\n \t\tn := 1\n \t\tt := itor(1)\n-\t\tfor c.num!=0 {\n-\t\t\tput(t,Z)\n-\t\t\tt = mul(mul(t,c),i2tor(1,int64(n)))\n-\t\t\tc = sub(c,one)\n+\t\tfor c.num != 0 {\n+\t\t\tput(t, Z)\n+\t\t\tt = mul(mul(t, c), i2tor(1, int64(n)))\n+\t\t\tc = sub(c, one)\n \t\t\tn++\n \t\t}\n-\t\tput(finis,Z)\n+\t\tput(finis, Z)\n \t}(c, Z)\n \treturn Z\n }\n@@ -540,15 +559,15 @@ func Binom(c *rat) PS{\n //\tu*ZZ + z*UU +x*UU*ZZ = 0\n //\tZZ = -UU*(z+x*ZZ)/u\n \n-func Recip(U PS) PS{\n-\tZ:=mkPS()\n-\tgo func(U, Z PS){\n-\t\tZZ:=mkPS2()\n+func Recip(U PS) PS {\n+\tZ := mkPS()\n+\tgo func(U, Z PS) {\n+\t\tZZ := mkPS2()\n \t\t<-Z.req\n \t\tz := inv(get(U))\n \t\tZ.dat <- z\n-\t\tsplit(Mul(Cmul(neg(z),U),Shift(z,ZZ[0])),ZZ)\n-\t\tcopy(ZZ[1],Z)\n+\t\tsplit(Mul(Cmul(neg(z), U), Shift(z, ZZ[0])), ZZ)\n+\t\tcopy(ZZ[1], Z)\n \t}(U, Z)\n \treturn Z\n }\n@@ -560,9 +579,9 @@ func Recip(U PS) PS{\n //\tDZ = Z*DU\n //\tintegrate to get Z\n \n-func Exp(U PS) PS{\n+func Exp(U PS) PS {\n \tZZ := mkPS2()\n-\tsplit(Integ(one,Mul(ZZ[0],Diff(U))),ZZ)\n+\tsplit(Integ(one, Mul(ZZ[0], Diff(U))), ZZ)\n \treturn ZZ[1]\n }\n \n@@ -573,28 +592,28 @@ func Exp(U PS) PS{\n // bug: a nonzero constant term is ignored\n \n func Subst(U, V PS) PS {\n-\tZ:= mkPS()\n+\tZ := mkPS()\n \tgo func(U, V, Z PS) {\n \t\tVV := Split(V)\n \t\t<-Z.req\n \t\tu := get(U)\n \t\tZ.dat <- u\n \t\tif end(u) == 0 {\n \t\t\tif end(get(VV[0])) != 0 {\n-\t\t\t\tput(finis,Z)\n+\t\t\t\tput(finis, Z)\n \t\t\t} else {\n-\t\t\t\tcopy(Mul(VV[0],Subst(U,VV[1])),Z)\n+\t\t\t\tcopy(Mul(VV[0], Subst(U, VV[1])), Z)\n \t\t\t}\n \t\t}\n \t}(U, V, Z)\n \treturn Z\n }\n \n-// Monomial Substition: U(c x^n)\n+// Monomial Substitution: U(c x^n)\n // Each Ui is multiplied by c^i and followed by n-1 zeros\n \n func MonSubst(U PS, c0 *rat, n int) PS {\n-\tZ:= mkPS()\n+\tZ := mkPS()\n \tgo func(U, Z PS, c0 *rat, n int) {\n \t\tc := one\n \t\tfor {\n@@ -615,14 +634,13 @@ func MonSubst(U PS, c0 *rat, n int) PS {\n \treturn Z\n }\n \n-\n func Init() {\n \tchnameserial = -1\n \tseqno = 0\n \tchnames = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n \tzero = itor(0)\n \tone = itor(1)\n-\tfinis = i2tor(1,0)\n+\tfinis = i2tor(1, 0)\n \tOnes = Rep(one)\n \tTwos = Rep(itor(2))\n }\n@@ -641,7 +659,8 @@ func check(U PS, c *rat, count int, str string) {\n \t}\n }\n \n-const N=10\n+const N = 10\n+\n func checka(U PS, a []*rat, str string) {\n \tfor i := 0; i < N; i++ {\n \t\tcheck(U, a[i], 1, str)\n@@ -650,53 +669,64 @@ func checka(U PS, a []*rat, str string) {\n \n func main() {\n \tInit()\n-\tif len(os.Args) > 1 {  // print\n-\t\tprint(\"Ones: \"); Printn(Ones, 10)\n-\t\tprint(\"Twos: \"); Printn(Twos, 10)\n-\t\tprint(\"Add: \"); Printn(Add(Ones, Twos), 10)\n-\t\tprint(\"Diff: \"); Printn(Diff(Ones), 10)\n-\t\tprint(\"Integ: \"); Printn(Integ(zero, Ones), 10)\n-\t\tprint(\"CMul: \"); Printn(Cmul(neg(one), Ones), 10)\n-\t\tprint(\"Sub: \"); Printn(Sub(Ones, Twos), 10)\n-\t\tprint(\"Mul: \"); Printn(Mul(Ones, Ones), 10)\n-\t\tprint(\"Exp: \"); Printn(Exp(Ones), 15)\n-\t\tprint(\"MonSubst: \"); Printn(MonSubst(Ones, neg(one), 2), 10)\n-\t\tprint(\"ATan: \"); Printn(Integ(zero, MonSubst(Ones, neg(one), 2)), 10)\n-\t} else {  // test\n+\tif len(os.Args) > 1 { // print\n+\t\tprint(\"Ones: \")\n+\t\tPrintn(Ones, 10)\n+\t\tprint(\"Twos: \")\n+\t\tPrintn(Twos, 10)\n+\t\tprint(\"Add: \")\n+\t\tPrintn(Add(Ones, Twos), 10)\n+\t\tprint(\"Diff: \")\n+\t\tPrintn(Diff(Ones), 10)\n+\t\tprint(\"Integ: \")\n+\t\tPrintn(Integ(zero, Ones), 10)\n+\t\tprint(\"CMul: \")\n+\t\tPrintn(Cmul(neg(one), Ones), 10)\n+\t\tprint(\"Sub: \")\n+\t\tPrintn(Sub(Ones, Twos), 10)\n+\t\tprint(\"Mul: \")\n+\t\tPrintn(Mul(Ones, Ones), 10)\n+\t\tprint(\"Exp: \")\n+\t\tPrintn(Exp(Ones), 15)\n+\t\tprint(\"MonSubst: \")\n+\t\tPrintn(MonSubst(Ones, neg(one), 2), 10)\n+\t\tprint(\"ATan: \")\n+\t\tPrintn(Integ(zero, MonSubst(Ones, neg(one), 2)), 10)\n+\t} else { // test\n \t\tcheck(Ones, one, 5, \"Ones\")\n-\t\tcheck(Add(Ones, Ones), itor(2), 0, \"Add Ones Ones\")  // 1 1 1 1 1\n+\t\tcheck(Add(Ones, Ones), itor(2), 0, \"Add Ones Ones\") // 1 1 1 1 1\n \t\tcheck(Add(Ones, Twos), itor(3), 0, \"Add Ones Twos\") // 3 3 3 3 3\n \t\ta := make([]*rat, N)\n \t\td := Diff(Ones)\n-\t\tfor i:=0; i < N; i++ {\n-\t\t\ta[i] = itor(int64(i+1))\n+\t\tfor i := 0; i < N; i++ {\n+\t\t\ta[i] = itor(int64(i + 1))\n \t\t}\n-\t\tchecka(d, a, \"Diff\")  // 1 2 3 4 5\n+\t\tchecka(d, a, \"Diff\") // 1 2 3 4 5\n \t\tin := Integ(zero, Ones)\n-\t\ta[0] = zero  // integration constant\n-\t\tfor i:=1; i < N; i++ {\n+\t\ta[0] = zero // integration constant\n+\t\tfor i := 1; i < N; i++ {\n \t\t\ta[i] = i2tor(1, int64(i))\n \t\t}\n-\t\tchecka(in, a, \"Integ\")  // 0 1 1/2 1/3 1/4 1/5\n-\t\tcheck(Cmul(neg(one), Twos), itor(-2), 10, \"CMul\")  // -1 -1 -1 -1 -1\n-\t\tcheck(Sub(Ones, Twos), itor(-1), 0, \"Sub Ones Twos\")  // -1 -1 -1 -1 -1\n+\t\tchecka(in, a, \"Integ\")                               // 0 1 1/2 1/3 1/4 1/5\n+\t\tcheck(Cmul(neg(one), Twos), itor(-2), 10, \"CMul\")    // -1 -1 -1 -1 -1\n+\t\tcheck(Sub(Ones, Twos), itor(-1), 0, \"Sub Ones Twos\") // -1 -1 -1 -1 -1\n \t\tm := Mul(Ones, Ones)\n-\t\tfor i:=0; i < N; i++ {\n-\t\t\ta[i] = itor(int64(i+1))\n+\t\tfor i := 0; i < N; i++ {\n+\t\t\ta[i] = itor(int64(i + 1))\n \t\t}\n-\t\tchecka(m, a, \"Mul\")  // 1 2 3 4 5\n+\t\tchecka(m, a, \"Mul\") // 1 2 3 4 5\n \t\te := Exp(Ones)\n \t\ta[0] = itor(1)\n \t\ta[1] = itor(1)\n-\t\ta[2] = i2tor(3,2)\n-\t\ta[3] = i2tor(13,6)\n-\t\ta[4] = i2tor(73,24)\n-\t\ta[5] = i2tor(167,40)\n-\t\ta[6] = i2tor(4051,720)\n-\t\ta[7] = i2tor(37633,5040)\n-\t\ta[8] = i2tor(43817,4480)\n-\t\ta[9] = i2tor(4596553,362880)\n-\t\tchecka(e, a, \"Exp\")  // 1 1 3/2 13/6 73/24\n+\t\ta[2] = i2tor(3, 2)\n+\t\ta[3] = i2tor(13, 6)\n+\t\ta[4] = i2tor(73, 24)\n+\t\ta[5] = i2tor(167, 40)\n+\t\ta[6] = i2tor(4051, 720)\n+\t\ta[7] = i2tor(37633, 5040)\n+\t\ta[8] = i2tor(43817, 4480)\n+\t\ta[9] = i2tor(4596553, 362880)\n+\t\tchecka(e, a, \"Exp\") // 1 1 3/2 13/6 73/24\n \t\tat := Integ(zero, MonSubst(Ones, neg(one), 2))\n \t\tfor c, i := 1, 0; i < N; i++ {\n \t\t\tif i%2 == 0 {\n@@ -706,20 +736,20 @@ func main() {\n \t\t\t\tc *= -1\n \t\t\t}\n \t\t}\n-\t\tchecka(at, a, \"ATan\");  // 0 -1 0 -1/3 0 -1/5\n-/*\n-\t\tt := Revert(Integ(zero, MonSubst(Ones, neg(one), 2)))\n-\t\ta[0] = zero\n-\t\ta[1] = itor(1)\n-\t\ta[2] = zero\n-\t\ta[3] = i2tor(1,3)\n-\t\ta[4] = zero\n-\t\ta[5] = i2tor(2,15)\n-\t\ta[6] = zero\n-\t\ta[7] = i2tor(17,315)\n-\t\ta[8] = zero\n-\t\ta[9] = i2tor(62,2835)\n-\t\tchecka(t, a, \"Tan\")  // 0 1 0 1/3 0 2/15\n-*/\n+\t\tchecka(at, a, \"ATan\") // 0 -1 0 -1/3 0 -1/5\n+\t\t/*\n+\t\t\tt := Revert(Integ(zero, MonSubst(Ones, neg(one), 2)))\n+\t\t\ta[0] = zero\n+\t\t\ta[1] = itor(1)\n+\t\t\ta[2] = zero\n+\t\t\ta[3] = i2tor(1,3)\n+\t\t\ta[4] = zero\n+\t\t\ta[5] = i2tor(2,15)\n+\t\t\ta[6] = zero\n+\t\t\ta[7] = i2tor(17,315)\n+\t\t\ta[8] = zero\n+\t\t\ta[9] = i2tor(62,2835)\n+\t\t\tchecka(t, a, \"Tan\")  // 0 1 0 1/3 0 2/15\n+\t\t*/\n \t}\n }"}, {"sha": "31e27d7573709e23340dcf5b2298725a7ce5a52f", "filename": "gcc/testsuite/go.test/test/chan/select2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "dd14c7381eae70c6974cf837b93028ca5d123363", "filename": "gcc/testsuite/go.test/test/chan/select3.go", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -14,12 +14,10 @@ import \"time\"\n const always = \"function did not\"\n const never = \"function did\"\n \n-\n func unreachable() {\n \tpanic(\"control flow shouldn't reach here\")\n }\n \n-\n // Calls f and verifies that f always/never panics depending on signal.\n func testPanic(signal string, f func()) {\n \tdefer func() {\n@@ -34,7 +32,6 @@ func testPanic(signal string, f func()) {\n \tf()\n }\n \n-\n // Calls f and empirically verifies that f always/never blocks depending on signal.\n func testBlock(signal string, f func()) {\n \tc := make(chan string)\n@@ -43,15 +40,21 @@ func testBlock(signal string, f func()) {\n \t\tc <- never // f didn't block\n \t}()\n \tgo func() {\n-\t\ttime.Sleep(1e8) // 0.1s seems plenty long\n-\t\tc <- always     // f blocked always\n+\t\tif signal == never {\n+\t\t\t// Wait a long time to make sure that we don't miss our window by accident on a slow machine.\n+\t\t\ttime.Sleep(10 * time.Second)\n+\t\t} else {\n+\t\t\t// Wait as short a time as we can without false negatives.\n+\t\t\t// 10ms should be long enough to catch most failures.\n+\t\t\ttime.Sleep(10 * time.Millisecond)\n+\t\t}\n+\t\tc <- always // f blocked always\n \t}()\n \tif <-c != signal {\n \t\tpanic(signal + \" block\")\n \t}\n }\n \n-\n func main() {\n \tconst async = 1 // asynchronous channels\n \tvar nilch chan int\n@@ -114,8 +117,7 @@ func main() {\n \n \t// empty selects always block\n \ttestBlock(always, func() {\n-\t\tselect {\n-\t\t}\n+\t\tselect {}\n \t})\n \n \t// selects with only nil channels always block"}, {"sha": "8b98c3aaa2e95b1c1488fc0bda93ff763f6cd055", "filename": "gcc/testsuite/go.test/test/chan/select5.go", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect5.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect5.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect5.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // runoutput\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -27,16 +27,16 @@ func main() {\n \tfmt.Fprintln(out, header)\n \ta := new(arg)\n \n-\t// Generate each kind of test as a separate function to avoid\n-\t// hitting the 6g optimizer with one enormous function.\n+\t// Generate each test as a separate function to avoid\n+\t// hitting the gc optimizer with one enormous function.\n \t// If we name all the functions init we don't have to\n \t// maintain a list of which ones to run.\n \tdo := func(t *template.Template) {\n-\t\tfmt.Fprintln(out, `func init() {`)\n \t\tfor ; next(); a.reset() {\n+\t\t\tfmt.Fprintln(out, `func init() {`)\n \t\t\trun(t, a, out)\n+\t\t\tfmt.Fprintln(out, `}`)\n \t\t}\n-\t\tfmt.Fprintln(out, `}`)\n \t}\n \n \tdo(recv)"}, {"sha": "6e8129f947737cc3670bc444630108d06066620b", "filename": "gcc/testsuite/go.test/test/chan/select6.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect6.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect6.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect6.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f7222ca35d583909e29c0942b44dfeb2fb715f9a", "filename": "gcc/testsuite/go.test/test/chan/select7.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect7.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect7.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect7.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "d296a55cda1fb5429193c696ca76ef40d1f2e796", "filename": "gcc/testsuite/go.test/test/chan/sendstmt.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsendstmt.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsendstmt.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsendstmt.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,11 +1,11 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // Test various parsing cases that are a little\n-// different now that send is a statement, not a expression.\n+// different now that send is a statement, not an expression.\n \n package main\n \n@@ -30,7 +30,7 @@ func chanchan() {\n \n func sendprec() {\n \tc := make(chan bool, 1)\n-\tc <- false || true\t// not a syntax error: same as c <- (false || true)\n+\tc <- false || true // not a syntax error: same as c <- (false || true)\n \tif !<-c {\n \t\tpanic(\"sent false\")\n \t}"}, {"sha": "8dce9247cd45ef710ef728c1d85d1e2d7c28e9e4", "filename": "gcc/testsuite/go.test/test/chancap.go", "status": "modified", "additions": 42, "deletions": 2, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchancap.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchancap.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchancap.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -8,8 +8,17 @@\n \n package main\n \n+import (\n+\t\"strings\"\n+\t\"unsafe\"\n+)\n+\n+type T chan int\n+\n+const ptrSize = unsafe.Sizeof((*byte)(nil))\n+\n func main() {\n-\tc := make(chan int, 10)\n+\tc := make(T, 10)\n \tif len(c) != 0 || cap(c) != 10 {\n \t\tprintln(\"chan len/cap \", len(c), cap(c), \" want 0 10\")\n \t\tpanic(\"fail\")\n@@ -23,9 +32,40 @@ func main() {\n \t\tpanic(\"fail\")\n \t}\n \n-\tc = make(chan int)\n+\tc = make(T)\n \tif len(c) != 0 || cap(c) != 0 {\n \t\tprintln(\"chan len/cap \", len(c), cap(c), \" want 0 0\")\n \t\tpanic(\"fail\")\n \t}\n+\n+\tn := -1\n+\tshouldPanic(\"makechan: size out of range\", func() { _ = make(T, n) })\n+\tshouldPanic(\"makechan: size out of range\", func() { _ = make(T, int64(n)) })\n+\tif ptrSize == 8 {\n+\t\t// Test mem > maxAlloc\n+\t\tvar n2 int64 = 1 << 59\n+\t\tshouldPanic(\"makechan: size out of range\", func() { _ = make(T, int(n2)) })\n+\t\t// Test elem.size*cap overflow\n+\t\tn2 = 1<<63 - 1\n+\t\tshouldPanic(\"makechan: size out of range\", func() { _ = make(T, int(n2)) })\n+\t} else {\n+\t\tn = 1<<31 - 1\n+\t\tshouldPanic(\"makechan: size out of range\", func() { _ = make(T, n) })\n+\t\tshouldPanic(\"makechan: size out of range\", func() { _ = make(T, int64(n)) })\n+\t}\n+}\n+\n+func shouldPanic(str string, f func()) {\n+\tdefer func() {\n+\t\terr := recover()\n+\t\tif err == nil {\n+\t\t\tpanic(\"did not panic\")\n+\t\t}\n+\t\ts := err.(error).Error()\n+\t\tif !strings.Contains(s, str) {\n+\t\t\tpanic(\"got panic \" + s + \", want \" + str)\n+\t\t}\n+\t}()\n+\n+\tf()\n }"}, {"sha": "6db9ce5cc85b8b6223e88479301853bbe3cd009a", "filename": "gcc/testsuite/go.test/test/cmp.go", "status": "modified", "additions": 60, "deletions": 1, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -35,6 +35,10 @@ func istrue(b bool) {\n \n type T *int\n \n+type X int\n+\n+func (X) x() {}\n+\n func main() {\n \tvar a []int\n \tvar b map[string]int\n@@ -111,7 +115,7 @@ func main() {\n \tisfalse(ic != d)\n \tisfalse(ie != e)\n \n-\t// 6g used to let this go through as true.\n+\t// gc used to let this go through as true.\n \tvar g uint64 = 123\n \tvar h int64 = 123\n \tvar ig interface{} = g\n@@ -129,6 +133,44 @@ func main() {\n \t\tpanic(\"bad m[c]\")\n \t}\n \n+\t// interface comparisons (issue 7207)\n+\t{\n+\t\ttype I1 interface {\n+\t\t\tx()\n+\t\t}\n+\t\ttype I2 interface {\n+\t\t\tx()\n+\t\t}\n+\t\ta1 := I1(X(0))\n+\t\tb1 := I1(X(1))\n+\t\ta2 := I2(X(0))\n+\t\tb2 := I2(X(1))\n+\t\ta3 := I1(a2)\n+\t\ta4 := I2(a1)\n+\t\tvar e interface{} = X(0)\n+\t\ta5 := e.(I1)\n+\t\ta6 := e.(I2)\n+\t\tisfalse(a1 == b1)\n+\t\tisfalse(a1 == b2)\n+\t\tisfalse(a2 == b1)\n+\t\tisfalse(a2 == b2)\n+\t\tistrue(a1 == a2)\n+\t\tistrue(a1 == a3)\n+\t\tistrue(a1 == a4)\n+\t\tistrue(a1 == a5)\n+\t\tistrue(a1 == a6)\n+\t\tistrue(a2 == a3)\n+\t\tistrue(a2 == a4)\n+\t\tistrue(a2 == a5)\n+\t\tistrue(a2 == a6)\n+\t\tistrue(a3 == a4)\n+\t\tistrue(a3 == a5)\n+\t\tistrue(a3 == a6)\n+\t\tistrue(a4 == a5)\n+\t\tistrue(a4 == a6)\n+\t\tistrue(a5 == a6)\n+\t}\n+\n \t// non-interface comparisons\n \t{\n \t\tc := make(chan int)\n@@ -387,6 +429,23 @@ func main() {\n \t\tisfalse(iz != x)\n \t}\n \n+\t// named booleans\n+\t{\n+\t\ttype mybool bool\n+\t\tvar b mybool\n+\n+\t\ttype T struct{ data [20]byte }\n+\t\tvar x, y T\n+\t\tb = x == y\n+\t\tistrue(x == y)\n+\t\tistrue(bool(b))\n+\n+\t\tm := make(map[string][10]interface{})\n+\t\tb = m[\"x\"] == m[\"y\"]\n+\t\tistrue(m[\"x\"] == m[\"y\"])\n+\t\tistrue(bool(b))\n+\t}\n+\n \tshouldPanic(p1)\n \tshouldPanic(p2)\n \tshouldPanic(p3)"}, {"sha": "7cf76044ef9b8ebc97baefeb00ccfa31a14fb9ef", "filename": "gcc/testsuite/go.test/test/cmp6.go", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -18,7 +18,10 @@ type T3 struct{ z []int }\n \n var t3 T3\n \n-type T4 struct { _ []int; a float64 }\n+type T4 struct {\n+\t_ []int\n+\ta float64\n+}\n \n var t4 T4\n \n@@ -51,6 +54,14 @@ func main() {\n \tuse(p3 == p1)\n \tuse(p3 == p2)\n \n+\t// Arrays are comparable if and only if their element type is comparable.\n+\tvar a1 [1]int\n+\tvar a2 [1]func()\n+\tvar a3 [0]func()\n+\tuse(a1 == a1)\n+\tuse(a2 == a2) // ERROR \"invalid operation|invalid comparison\"\n+\tuse(a3 == a3) // ERROR \"invalid operation|invalid comparison\"\n+\n \t// Comparison of structs should have a good message\n \tuse(t3 == t3) // ERROR \"struct|expected\"\n \tuse(t4 == t4) // ERROR \"cannot be compared|non-comparable\""}, {"sha": "d63c7ebc7e84c84b658d8880e1c28b717003dc4b", "filename": "gcc/testsuite/go.test/test/cmplx.go", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplx.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplx.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplx.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -28,6 +28,14 @@ var (\n \tC128 Complex128\n )\n \n+func F1() int {\n+\treturn 1\n+}\n+\n+func F3() (int, int, int) {\n+\treturn 1, 2, 3\n+}\n+\n func main() {\n \t// ok\n \tc64 = complex(f32, f32)\n@@ -41,6 +49,11 @@ func main() {\n \t_ = complex(f64, F64) // ERROR \"complex\"\n \t_ = complex(F64, f64) // ERROR \"complex\"\n \n+\t_ = complex(F1()) // ERROR \"not enough arguments\"\n+\t_ = complex(F3()) // ERROR \"too many arguments\"\n+\n+\t_ = complex() // ERROR \"not enough arguments\"\n+\n \tc128 = complex(f32, f32) // ERROR \"cannot use\"\n \tc64 = complex(f64, f64)  // ERROR \"cannot use\"\n \n@@ -51,4 +64,5 @@ func main() {\n \n \tC64 = complex(f32, f32)  // ERROR \"cannot use\"\n \tC128 = complex(f64, f64) // ERROR \"cannot use\"\n+\n }"}, {"sha": "7c2a4e2996d5160a8500a1a3a139f8de156a21c3", "filename": "gcc/testsuite/go.test/test/complit1.go", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -22,6 +22,10 @@ var (\n \t_ = m[0][:]            // ERROR \"slice of unaddressable value\"\n \t_ = f()[:]             // ERROR \"slice of unaddressable value\"\n \n+\t_ = 301[:]  // ERROR \"cannot slice|attempt to slice object that is not\"\n+\t_ = 3.1[:]  // ERROR \"cannot slice|attempt to slice object that is not\"\n+\t_ = true[:] // ERROR \"cannot slice|attempt to slice object that is not\"\n+\n \t// these are okay because they are slicing a pointer to an array\n \t_ = (&[3]int{1, 2, 3})[:]\n \t_ = mp[0][:]\n@@ -35,8 +39,27 @@ type T struct {\n \tnext *T\n }\n \n+type TP *T\n+type Ti int\n+\n var (\n \t_ = &T{0, 0, \"\", nil}               // ok\n \t_ = &T{i: 0, f: 0, s: \"\", next: {}} // ERROR \"missing type in composite literal|omit types within composite literal\"\n \t_ = &T{0, 0, \"\", {}}                // ERROR \"missing type in composite literal|omit types within composite literal\"\n+\t_ = TP{i: 0, f: 0, s: \"\", next: {}} // ERROR \"invalid composite literal type TP|omit types within composite literal\"\n+\t_ = &Ti{}                           // ERROR \"invalid composite literal type Ti|expected.*type for composite literal\"\n+)\n+\n+type M map[T]T\n+\n+var (\n+\t_ = M{{i:1}: {i:2}}\n+\t_ = M{T{i:1}: {i:2}}\n+\t_ = M{{i:1}: T{i:2}}\n+\t_ = M{T{i:1}: T{i:2}}\n )\n+\n+type S struct { s [1]*M1 }\n+type M1 map[S]int\n+var _ = M1{{s:[1]*M1{&M1{{}:1}}}:2}\n+"}, {"sha": "e6375f2697b42a50cf1138bb590d7ad4d1a15b11", "filename": "gcc/testsuite/go.test/test/compos.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcompos.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcompos.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcompos.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f8aa1dd9ab667c6c5600386d88cafe933c823e0a", "filename": "gcc/testsuite/go.test/test/const.go", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -19,8 +19,15 @@ const (\n \tc3div2  = 3 / 2\n \tc1e3    = 1e3\n \n+\trsh1 = 1e100 >> 1000\n+\trsh2 = 1e302 >> 1000\n+\n \tctrue  = true\n \tcfalse = !ctrue\n+\n+\t// Issue #34563\n+\t_ = string(int(123))\n+\t_ = string(rune(456))\n )\n \n const (\n@@ -48,6 +55,8 @@ func ints() {\n \tassert(c3div2 == 1, \"3/2\")\n \tassert(c1e3 == 1000, \"c1e3 int\")\n \tassert(c1e3 == 1e3, \"c1e3 float\")\n+\tassert(rsh1 == 0, \"rsh1\")\n+\tassert(rsh2 == 9, \"rsh2\")\n \n \t// verify that all (in range) are assignable as ints\n \tvar i int\n@@ -118,9 +127,83 @@ func floats() {\n \tassert(f == f1e3, \"f == f1e3\")\n }\n \n+func interfaces() {\n+\tvar (\n+\t\tnilN interface{}\n+\t\tnilI *int\n+\t\tfive = 5\n+\n+\t\t_ = nil == interface{}(nil)\n+\t\t_ = interface{}(nil) == nil\n+\t)\n+\tii := func(i1 interface{}, i2 interface{}) bool { return i1 == i2 }\n+\tni := func(n interface{}, i int) bool { return n == i }\n+\tin := func(i int, n interface{}) bool { return i == n }\n+\tpi := func(p *int, i interface{}) bool { return p == i }\n+\tip := func(i interface{}, p *int) bool { return i == p }\n+\n+\tassert((interface{}(nil) == interface{}(nil)) == ii(nilN, nilN),\n+\t\t\"for interface{}==interface{} compiler == runtime\")\n+\n+\tassert(((*int)(nil) == interface{}(nil)) == pi(nilI, nilN),\n+\t\t\"for *int==interface{} compiler == runtime\")\n+\tassert((interface{}(nil) == (*int)(nil)) == ip(nilN, nilI),\n+\t\t\"for interface{}==*int compiler == runtime\")\n+\n+\tassert((&five == interface{}(nil)) == pi(&five, nilN),\n+\t\t\"for interface{}==*int compiler == runtime\")\n+\tassert((interface{}(nil) == &five) == ip(nilN, &five),\n+\t\t\"for interface{}==*int compiler == runtime\")\n+\n+\tassert((5 == interface{}(5)) == ni(five, five),\n+\t\t\"for int==interface{} compiler == runtime\")\n+\tassert((interface{}(5) == 5) == in(five, five),\n+\t\t\"for interface{}==int comipiler == runtime\")\n+}\n+\n+// Test that typed floating-point and complex arithmetic\n+// is computed with correct precision.\n+func truncate() {\n+\tconst (\n+\t\tx30 = 1 << 30\n+\t\tx60 = 1 << 60\n+\n+\t\tstaticF32 = float32(x30) + 1 - x30\n+\t\tstaticF64 = float64(x60) + 1 - x60\n+\t\tstaticC64 = complex64(x30) + 1 - x30\n+\t\tstaticC128 = complex128(x60) + 1 - x60\n+\t)\n+\tdynamicF32 := float32(x30)\n+\tdynamicF32 += 1\n+\tdynamicF32 -= x30\n+\n+\tdynamicF64 := float64(x60)\n+\tdynamicF64 += 1\n+\tdynamicF64 -= x60\n+\n+\tdynamicC64 := complex64(x30)\n+\tdynamicC64 += 1\n+\tdynamicC64 -= x30\n+\n+\tdynamicC128 := complex128(x60)\n+\tdynamicC128 += 1\n+\tdynamicC128 -= x60\n+\n+\tassert(staticF32 == 0, \"staticF32 == 0\")\n+\tassert(staticF64 == 0, \"staticF64 == 0\")\n+\tassert(dynamicF32 == 0, \"dynamicF32 == 0\")\n+\tassert(dynamicF64 == 0, \"dynamicF64 == 0\")\n+\tassert(staticC64 == 0, \"staticC64 == 0\")\n+\tassert(staticC128 == 0, \"staticC128 == 0\")\n+\tassert(dynamicC64 == 0, \"dynamicC64 == 0\")\n+\tassert(dynamicC128 == 0, \"dynamicC128 == 0\")\n+}\n+\n func main() {\n \tints()\n \tfloats()\n+\tinterfaces()\n+\ttruncate()\n \n \tassert(ctrue == true, \"ctrue == true\")\n \tassert(cfalse == false, \"cfalse == false\")"}, {"sha": "3fd5b55522fd5d849b24ce14de1815a9c2a93cc8", "filename": "gcc/testsuite/go.test/test/const1.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -68,7 +68,7 @@ var (\n \tc3 float64 = float64(Big) * Big // ERROR \"overflow\"\n \tc4         = Big * Big          // ERROR \"overflow\"\n \tc5         = Big / 0            // ERROR \"division by zero\"\n-\tc6         = 1000 % 1e3         // ERROR \"floating-point % operation|expected integer type\"\n+\tc6         = 1000 % 1e3         // ERROR \"invalid operation|expected integer type\"\n )\n \n func f(int)\n@@ -90,5 +90,5 @@ func main() {\n const ptr = nil // ERROR \"const.*nil\"\n const _ = string([]byte(nil)) // ERROR \"is not a? ?constant\"\n const _ = uintptr(unsafe.Pointer((*int)(nil))) // ERROR \"is not a? ?constant\"\n-const _ = unsafe.Pointer((*int)(nil)) // ERROR \"cannot be nil|invalid constant type\"\n-const _ = (*int)(nil) // ERROR \"cannot be nil|invalid constant type\"\n+const _ = unsafe.Pointer((*int)(nil)) // ERROR \"cannot be nil|invalid constant type|is not a constant\"\n+const _ = (*int)(nil) // ERROR \"cannot be nil|invalid constant type|is not a constant\""}, {"sha": "785e1ec04d2fdc474cdc3e3422d8808b796aa945", "filename": "gcc/testsuite/go.test/test/const4.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst4.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -4,7 +4,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Test len constants and non-constants, http://golang.org/issue/3244.\n+// Test len constants and non-constants, https://golang.org/issue/3244.\n \n package main\n "}, {"sha": "51e46cbb2fdb84e8025a53942fba73ef557f0963", "filename": "gcc/testsuite/go.test/test/const5.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst5.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst5.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst5.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -4,7 +4,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Test that len non-constants are not constants, http://golang.org/issue/3244.\n+// Test that len non-constants are not constants, https://golang.org/issue/3244.\n \n package p\n \n@@ -18,6 +18,7 @@ var s [][30]int\n \n func f() *[40]int\n var c chan *[50]int\n+var z complex128\n \n const (\n \tn1 = len(b.a)\n@@ -29,5 +30,8 @@ const (\n \n \tn6 = cap(f())  // ERROR \"is not a constant|is not constant\"\n \tn7 = cap(<-c) // ERROR \"is not a constant|is not constant\"\n+\tn8 = real(z) // ERROR \"is not a constant|is not constant\"\n+\tn9 = len([4]float64{real(z)}) // ERROR \"is not a constant|is not constant\"\n+\n )\n "}, {"sha": "b340e589d5e1e01764106132b83ed65b7f162dc8", "filename": "gcc/testsuite/go.test/test/const6.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst6.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst6.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst6.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2013 The Go Authors.  All rights reserved.\n+// Copyright 2013 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "afb63cd55a102d051e6bc22992eb67cb8fdab2b6", "filename": "gcc/testsuite/go.test/test/convert1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "1c66c89e8800757618a80a0a120b9106584661a3", "filename": "gcc/testsuite/go.test/test/convlit.go", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -9,6 +9,8 @@\n \n package main\n \n+import \"unsafe\"\n+\n // explicit conversion of constants\n var x1 = string(1)\n var x2 string = string(1)\n@@ -18,11 +20,16 @@ var x5 = \"a\" + string(1)\n var x6 = int(1e100)      // ERROR \"overflow\"\n var x7 = float32(1e1000) // ERROR \"overflow\"\n \n+// unsafe.Pointer can only convert to/from uintptr\n+var _ = string(unsafe.Pointer(uintptr(65)))  // ERROR \"convert|conversion\"\n+var _ = float64(unsafe.Pointer(uintptr(65))) // ERROR \"convert|conversion\"\n+var _ = int(unsafe.Pointer(uintptr(65)))     // ERROR \"convert|conversion\"\n+\n // implicit conversions merit scrutiny\n var s string\n var bad1 string = 1  // ERROR \"conver|incompatible|invalid|cannot\"\n-var bad2 = s + 1     // ERROR \"conver|incompatible|invalid\"\n-var bad3 = s + 'a'   // ERROR \"conver|incompatible|invalid\"\n+var bad2 = s + 1     // ERROR \"conver|incompatible|invalid|cannot\"\n+var bad3 = s + 'a'   // ERROR \"conver|incompatible|invalid|cannot\"\n var bad4 = \"a\" + 1   // ERROR \"literals|incompatible|convert|invalid\"\n var bad5 = \"a\" + 'a' // ERROR \"literals|incompatible|convert|invalid\"\n "}, {"sha": "84503f7d5b182751a825ff42dc97e1cb01583e74", "filename": "gcc/testsuite/go.test/test/ddd.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "01b9c0eadb2e821c108f6bf82babf35f3d4c2b4d", "filename": "gcc/testsuite/go.test/test/ddd1.go", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -18,18 +18,18 @@ var (\n \t_ = sum()\n \t_ = sum(1.0, 2.0)\n \t_ = sum(1.5)      // ERROR \"integer\"\n-\t_ = sum(\"hello\")  // ERROR \".hello. .type string. as type int|incompatible\"\n-\t_ = sum([]int{1}) // ERROR \"\\[\\]int literal.*as type int|incompatible\"\n+\t_ = sum(\"hello\")  // ERROR \".hello. .type untyped string. as type int|incompatible\"\n+\t_ = sum([]int{1}) // ERROR \"\\[\\]int{...}.*as type int|incompatible\"\n )\n \n func sum3(int, int, int) int { return 0 }\n func tuple() (int, int, int) { return 1, 2, 3 }\n \n var (\n \t_ = sum(tuple())\n-\t_ = sum(tuple()...) // ERROR \"multiple-value|[.][.][.]\"\n+\t_ = sum(tuple()...) // ERROR \"multiple-value\"\n \t_ = sum3(tuple())\n-\t_ = sum3(tuple()...) // ERROR \"multiple-value|[.][.][.]\" \"not enough\"\n+\t_ = sum3(tuple()...) // ERROR \"multiple-value\"\n )\n \n type T []T\n@@ -42,6 +42,8 @@ var (\n \t_ = funny([]T{}) // ok because []T{} is a T; passes []T{[]T{}}\n )\n \n+func Foo(n int) {}\n+\n func bad(args ...int) {\n \tprint(1, 2, args...)\t// ERROR \"[.][.][.]\"\n \tprintln(args...)\t// ERROR \"[.][.][.]\"\n@@ -51,12 +53,12 @@ func bad(args ...int) {\n \t_ = new(int...)\t// ERROR \"[.][.][.]\"\n \tn := 10\n \t_ = make([]byte, n...)\t// ERROR \"[.][.][.]\"\n-\t// TODO(rsc): enable after gofmt bug is fixed\n-\t//\t_ = make([]byte, 10 ...)\t// error \"[.][.][.]\"\n+\t_ = make([]byte, 10 ...)\t// ERROR \"[.][.][.]\"\n \tvar x int\n \t_ = unsafe.Pointer(&x...)\t// ERROR \"[.][.][.]\"\n \t_ = unsafe.Sizeof(x...)\t// ERROR \"[.][.][.]\"\n \t_ = [...]byte(\"foo\") // ERROR \"[.][.][.]\"\n \t_ = [...][...]int{{1,2,3},{4,5,6}}\t// ERROR \"[.][.][.]\"\n-}\n \n+\tFoo(x...) // ERROR \"invalid use of .*[.][.][.]\"\n+}"}, {"sha": "f3f863c83f183f5e1ea3ab2355ec769e36734e3c", "filename": "gcc/testsuite/go.test/test/ddd2.dir/ddd2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.dir%2Fddd2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.dir%2Fddd2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.dir%2Fddd2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "608091dd9b6383be98d427138a2ccadf68518f62", "filename": "gcc/testsuite/go.test/test/ddd2.dir/ddd3.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.dir%2Fddd3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.dir%2Fddd3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.dir%2Fddd3.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "612ba292c2eccb7f2ae3fa1a66c66a79e9712aa0", "filename": "gcc/testsuite/go.test/test/ddd2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // rundir\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b74677ac59c9810743ce6ba667858bd4e835c440", "filename": "gcc/testsuite/go.test/test/deferprint.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferprint.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferprint.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferprint.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n-// cmpout\n+// run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b5570415c242bb1c0c47fddb87c527cc69adc6fd", "filename": "gcc/testsuite/go.test/test/divide.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivide.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivide.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivide.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "ab85b7f149237587ed978c2151e96a59f7332c44", "filename": "gcc/testsuite/go.test/test/divmod.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivmod.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivmod.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivmod.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,12 +1,12 @@\n // run\n \n-// Copyright 2013 The Go Authors.  All rights reserved.\n+// Copyright 2013 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // Test division of variables. Generate many test cases,\n // compute correct answer using shift and subtract,\n-// and then compare against results from divison and\n+// and then compare against results from division and\n // modulus operators.\n //\n // Primarily useful for testing software div/mod."}, {"sha": "d051f33bf79db1941ddbb78179555f6064d86347", "filename": "gcc/testsuite/go.test/test/eof.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "90792ca76e10073aaef100015347b365a22fb4ce", "filename": "gcc/testsuite/go.test/test/eof1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "de0c4fd2f87c71faa12b41a727091a37086818fe", "filename": "gcc/testsuite/go.test/test/errchk", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ferrchk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb287056e6a709b8028cdf368c313ebe89877db/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ferrchk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ferrchk?ref=2fb287056e6a709b8028cdf368c313ebe89877db", "patch": "@@ -1,147 +0,0 @@\n-#!/usr/bin/env perl\n-# Copyright 2009 The Go Authors. All rights reserved.\n-# Use of this source code is governed by a BSD-style\n-# license that can be found in the LICENSE file.\n-\n-# This script checks that the compilers emit the errors which we expect.\n-# Usage: errchk COMPILER [OPTS] SOURCEFILES.  This will run the command\n-# COMPILER [OPTS] SOURCEFILES.  The compilation is expected to fail; if\n-# it succeeds, this script will report an error.  The stderr output of\n-# the compiler will be matched against comments in SOURCEFILES.  For each\n-# line of the source files which should generate an error, there should\n-# be a comment of the form // ERROR \"regexp\".  If the compiler generates\n-# an error for a line which has no such comment, this script will report\n-# an error.  Likewise if the compiler does not generate an error for a\n-# line which has a comment, or if the error message does not match the\n-# <regexp>.  The <regexp> syntax is Perl but its best to stick to egrep.\n-\n-use POSIX;\n-\n-my $exitcode = 1;\n-\n-if(@ARGV >= 1 && $ARGV[0] eq \"-0\") {\n-\t$exitcode = 0;\n-\tshift;\n-}\n-\n-if(@ARGV < 1) {\n-\tprint STDERR \"Usage: errchk COMPILER [OPTS] SOURCEFILES\\n\";\n-\texit 1;\n-}\n-\n-# Grab SOURCEFILES\n-foreach(reverse 0 .. @ARGV-1) {\n-\tunless($ARGV[$_] =~ /\\.(go|s)$/) {\n-\t\t@file = @ARGV[$_+1 .. @ARGV-1];\n-\t\tlast;\n-\t}\n-}\n-\n-foreach $file (@file) {\n-\topen(SRC, $file) || die \"BUG: errchk: open $file: $!\";\n-\t$src{$file} = [<SRC>];\n-\tclose(SRC);\n-}\n-\n-# Run command\n-$cmd = join(' ', @ARGV);\n-open(CMD, \"exec $cmd </dev/null 2>&1 |\") || die \"BUG: errchk: run $cmd: $!\";\n-\n-# 6g error messages continue onto additional lines with leading tabs.\n-# Split the output at the beginning of each line that doesn't begin with a tab.\n-$out = join('', <CMD>);\n-@out = split(/^(?!\\t)/m, $out);\n-\n-close CMD;\n-\n-if($exitcode != 0 && $? == 0) {\n-\tprint STDERR \"BUG: errchk: command succeeded unexpectedly\\n\";\n-\tprint STDERR @out;\n-\texit 0;\n-}\n-\n-if($exitcode == 0 && $? != 0) {\n-\tprint STDERR \"BUG: errchk: command failed unexpectedly\\n\";\n-\tprint STDERR @out;\n-\texit 0;\n-}\n-\n-if(!WIFEXITED($?)) {\n-\tprint STDERR \"BUG: errchk: compiler crashed\\n\";\n-\tprint STDERR @out, \"\\n\";\n-\texit 0;\n-}\n-\n-sub bug() {\n-\tif(!$bug++) {\n-\t\tprint STDERR \"BUG: \";\n-\t}\n-}\n-\n-sub chk {\n-\tmy $file = shift;\n-\tmy $line = 0;\n-\tmy $regexp;\n-\tmy @errmsg;\n-\tmy @match;\n-\tforeach my $src (@{$src{$file}}) {\n-\t\t$line++;\n-\t\tnext if $src =~ m|////|;  # double comment disables ERROR\n-\t\tnext unless $src =~ m|// (GC_)?ERROR (.*)|;\n-\t\tmy $all = $2;\n-\t\tif($all !~ /^\"([^\"]*)\"/) {\n-\t\t\tprint STDERR \"$file:$line: malformed regexp\\n\";\n-\t\t\tnext;\n-\t\t}\n-\t\t@errmsg = grep { /$file:$line[:[]/ } @out;\n-\t\t@out = grep { !/$file:$line[:[]/ } @out;\n-\t\tif(@errmsg == 0) {\n-\t\t\tbug();\n-\t\t\tprint STDERR \"errchk: $file:$line: missing expected error: '$all'\\n\";\n-\t\t\tnext;\n-\t\t}\n-\t\tforeach my $regexp ($all =~ /\"([^\"]*)\"/g) {\n-\t\t\t# Turn relative line number in message into absolute line number.\n-\t\t\tif($regexp =~ /LINE(([+-])([0-9]+))?/) {\n-\t\t\t\tmy $n = $line;\n-\t\t\t\tif(defined($1)) {\n-\t\t\t\t\tif($2 eq \"+\") {\n-\t\t\t\t\t\t$n += int($3);\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\t$n -= int($3);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\t$regexp = \"$`$file:$n$'\";\n-\t\t\t}\n-\t\n-\t\t\t@match = grep { /$regexp/ } @errmsg;\n-\t\t\tif(@match == 0) {\n-\t\t\t\tbug();\n-\t\t\t\tprint STDERR \"errchk: $file:$line: error messages do not match '$regexp'\\n\";\n-\t\t\t\tnext;\n-\t\t\t}\n-\t\t\t@errmsg = grep { !/$regexp/ } @errmsg;\n-\t\t}\n-\t\tif(@errmsg != 0) {\n-\t\t\tbug();\n-\t\t\tprint STDERR \"errchk: $file:$line: unmatched error messages:\\n\";\n-\t\t\tforeach my $l (@errmsg) {\n-\t\t\t\tprint STDERR \"> $l\";\n-\t\t\t}\n-\t\t}\n-\t}\n-}\n-\n-foreach $file (@file) {\n-\tchk($file)\n-}\n-\n-if(@out != 0) {\n-\tbug();\n-\tprint STDERR \"errchk: unmatched error messages:\\n\";\n-\tprint STDERR \"==================================================\\n\";\n-\tprint STDERR @out;\n-\tprint STDERR \"==================================================\\n\";\n-}\n-\n-exit 0;"}, {"sha": "5c6eb559faf0667b37433d7d6db1bce091439892", "filename": "gcc/testsuite/go.test/test/escape2.go", "status": "modified", "additions": 813, "deletions": 326, "changes": 1139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,12 +1,14 @@\n // errorcheck -0 -m -l\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // Test, using compiler diagnostic flags, that the escape analysis is working.\n // Compiles but does not run.  Inlining is disabled.\n \n+// escape2n.go contains all the same tests but compiles with -N.\n+\n package foo\n \n import (\n@@ -16,94 +18,94 @@ import (\n \n var gxx *int\n \n-func foo1(x int) { // ERROR \"moved to heap: x\"\n-\tgxx = &x // ERROR \"&x escapes to heap\"\n+func foo1(x int) { // ERROR \"moved to heap: x$\"\n+\tgxx = &x\n }\n \n-func foo2(yy *int) { // ERROR \"leaking param: yy\"\n+func foo2(yy *int) { // ERROR \"leaking param: yy$\"\n \tgxx = yy\n }\n \n-func foo3(x int) *int { // ERROR \"moved to heap: x\"\n-\treturn &x // ERROR \"&x escapes to heap\"\n+func foo3(x int) *int { // ERROR \"moved to heap: x$\"\n+\treturn &x\n }\n \n type T *T\n \n-func foo3b(t T) { // ERROR \"leaking param: t\"\n+func foo3b(t T) { // ERROR \"leaking param: t$\"\n \t*t = t\n }\n \n // xx isn't going anywhere, so use of yy is ok\n-func foo4(xx, yy *int) { // ERROR \"xx does not escape\" \"yy does not escape\"\n+func foo4(xx, yy *int) { // ERROR \"xx does not escape$\" \"yy does not escape$\"\n \txx = yy\n }\n \n // xx isn't going anywhere, so taking address of yy is ok\n-func foo5(xx **int, yy *int) { // ERROR \"xx does not escape\" \"yy does not escape\"\n-\txx = &yy // ERROR \"&yy does not escape\"\n+func foo5(xx **int, yy *int) { // ERROR \"xx does not escape$\" \"yy does not escape$\"\n+\txx = &yy\n }\n \n-func foo6(xx **int, yy *int) { // ERROR \"xx does not escape\" \"leaking param: yy\"\n+func foo6(xx **int, yy *int) { // ERROR \"xx does not escape$\" \"leaking param: yy$\"\n \t*xx = yy\n }\n \n-func foo7(xx **int, yy *int) { // ERROR \"xx does not escape\" \"yy does not escape\"\n+func foo7(xx **int, yy *int) { // ERROR \"xx does not escape$\" \"yy does not escape$\"\n \t**xx = *yy\n }\n \n-func foo8(xx, yy *int) int { // ERROR \"xx does not escape\" \"yy does not escape\"\n+func foo8(xx, yy *int) int { // ERROR \"xx does not escape$\" \"yy does not escape$\"\n \txx = yy\n \treturn *xx\n }\n \n-func foo9(xx, yy *int) *int { // ERROR \"leaking param: xx\" \"leaking param: yy\"\n+func foo9(xx, yy *int) *int { // ERROR \"leaking param: xx to result ~r2 level=0$\" \"leaking param: yy to result ~r2 level=0$\"\n \txx = yy\n \treturn xx\n }\n \n-func foo10(xx, yy *int) { // ERROR \"xx does not escape\" \"yy does not escape\"\n+func foo10(xx, yy *int) { // ERROR \"xx does not escape$\" \"yy does not escape$\"\n \t*xx = *yy\n }\n \n func foo11() int {\n \tx, y := 0, 42\n-\txx := &x // ERROR \"&x does not escape\"\n-\tyy := &y // ERROR \"&y does not escape\"\n+\txx := &x\n+\tyy := &y\n \t*xx = *yy\n \treturn x\n }\n \n var xxx **int\n \n-func foo12(yyy **int) { // ERROR \"leaking param: yyy\"\n+func foo12(yyy **int) { // ERROR \"leaking param: yyy$\"\n \txxx = yyy\n }\n \n-// Must treat yyy as leaking because *yyy leaks, and the escape analysis \n+// Must treat yyy as leaking because *yyy leaks, and the escape analysis\n // summaries in exported metadata do not distinguish these two cases.\n-func foo13(yyy **int) { // ERROR \"leaking param: yyy\"\n+func foo13(yyy **int) { // ERROR \"leaking param content: yyy$\"\n \t*xxx = *yyy\n }\n \n-func foo14(yyy **int) { // ERROR \"yyy does not escape\"\n+func foo14(yyy **int) { // ERROR \"yyy does not escape$\"\n \t**xxx = **yyy\n }\n \n-func foo15(yy *int) { // ERROR \"moved to heap: yy\"\n-\txxx = &yy // ERROR \"&yy escapes to heap\"\n+func foo15(yy *int) { // ERROR \"moved to heap: yy$\"\n+\txxx = &yy\n }\n \n-func foo16(yy *int) { // ERROR \"leaking param: yy\"\n+func foo16(yy *int) { // ERROR \"leaking param: yy$\"\n \t*xxx = yy\n }\n \n-func foo17(yy *int) { // ERROR \"yy does not escape\"\n+func foo17(yy *int) { // ERROR \"yy does not escape$\"\n \t**xxx = *yy\n }\n \n-func foo18(y int) { // ERROR \"moved to heap: \"y\"\n-\t*xxx = &y // ERROR \"&y escapes to heap\"\n+func foo18(y int) { // ERROR \"moved to heap: y$\"\n+\t*xxx = &y\n }\n \n func foo19(y int) {\n@@ -116,52 +118,52 @@ type Bar struct {\n }\n \n func NewBar() *Bar {\n-\treturn &Bar{42, nil} // ERROR \"&Bar literal escapes to heap\"\n+\treturn &Bar{42, nil} // ERROR \"&Bar{...} escapes to heap$\"\n }\n \n-func NewBarp(x *int) *Bar { // ERROR \"leaking param: x\"\n-\treturn &Bar{42, x} // ERROR \"&Bar literal escapes to heap\"\n+func NewBarp(x *int) *Bar { // ERROR \"leaking param: x$\"\n+\treturn &Bar{42, x} // ERROR \"&Bar{...} escapes to heap$\"\n }\n \n-func NewBarp2(x *int) *Bar { // ERROR \"x does not escape\"\n-\treturn &Bar{*x, nil} // ERROR \"&Bar literal escapes to heap\"\n+func NewBarp2(x *int) *Bar { // ERROR \"x does not escape$\"\n+\treturn &Bar{*x, nil} // ERROR \"&Bar{...} escapes to heap$\"\n }\n \n-func (b *Bar) NoLeak() int { // ERROR \"b does not escape\"\n+func (b *Bar) NoLeak() int { // ERROR \"b does not escape$\"\n \treturn *(b.ii)\n }\n \n-func (b *Bar) Leak() *int { // ERROR \"leaking param: b\"\n-\treturn &b.i // ERROR \"&b.i escapes to heap\"\n+func (b *Bar) Leak() *int { // ERROR \"leaking param: b to result ~r0 level=0$\"\n+\treturn &b.i\n }\n \n-func (b *Bar) AlsoNoLeak() *int { // ERROR \"b does not escape\"\n+func (b *Bar) AlsoNoLeak() *int { // ERROR \"leaking param: b to result ~r0 level=1$\"\n \treturn b.ii\n }\n \n-func (b Bar) AlsoLeak() *int { // ERROR \"leaking param: b\"\n+func (b Bar) AlsoLeak() *int { // ERROR \"leaking param: b to result ~r0 level=0$\"\n \treturn b.ii\n }\n \n-func (b Bar) LeaksToo() *int { // ERROR \"leaking param: b\"\n-\tv := 0    // ERROR \"moved to heap: v\"\n-\tb.ii = &v // ERROR \"&v escapes\"\n+func (b Bar) LeaksToo() *int { // ERROR \"leaking param: b to result ~r0 level=0$\"\n+\tv := 0 // ERROR \"moved to heap: v$\"\n+\tb.ii = &v\n \treturn b.ii\n }\n \n-func (b *Bar) LeaksABit() *int { // ERROR \"b does not escape\"\n-\tv := 0    // ERROR \"moved to heap: v\"\n-\tb.ii = &v // ERROR \"&v escapes\"\n+func (b *Bar) LeaksABit() *int { // ERROR \"leaking param: b to result ~r0 level=1$\"\n+\tv := 0 // ERROR \"moved to heap: v$\"\n+\tb.ii = &v\n \treturn b.ii\n }\n \n-func (b Bar) StillNoLeak() int { // ERROR \"b does not escape\"\n+func (b Bar) StillNoLeak() int { // ERROR \"b does not escape$\"\n \tv := 0\n-\tb.ii = &v // ERROR \"&v does not escape\"\n+\tb.ii = &v\n \treturn b.i\n }\n \n-func goLeak(b *Bar) { // ERROR \"leaking param: b\"\n+func goLeak(b *Bar) { // ERROR \"leaking param: b$\"\n \tgo b.NoLeak()\n }\n \n@@ -171,90 +173,105 @@ type Bar2 struct {\n }\n \n func NewBar2() *Bar2 {\n-\treturn &Bar2{[12]int{42}, nil} // ERROR \"&Bar2 literal escapes to heap\"\n+\treturn &Bar2{[12]int{42}, nil} // ERROR \"&Bar2{...} escapes to heap$\"\n }\n \n-func (b *Bar2) NoLeak() int { // ERROR \"b does not escape\"\n+func (b *Bar2) NoLeak() int { // ERROR \"b does not escape$\"\n \treturn b.i[0]\n }\n \n-func (b *Bar2) Leak() []int { // ERROR \"leaking param: b\"\n-\treturn b.i[:] // ERROR \"b.i escapes to heap\"\n+func (b *Bar2) Leak() []int { // ERROR \"leaking param: b to result ~r0 level=0$\"\n+\treturn b.i[:]\n }\n \n-func (b *Bar2) AlsoNoLeak() []int { // ERROR \"b does not escape\"\n+func (b *Bar2) AlsoNoLeak() []int { // ERROR \"leaking param: b to result ~r0 level=1$\"\n \treturn b.ii[0:1]\n }\n \n-func (b Bar2) AgainNoLeak() [12]int { // ERROR \"b does not escape\"\n+func (b Bar2) AgainNoLeak() [12]int { // ERROR \"b does not escape$\"\n \treturn b.i\n }\n \n-func (b *Bar2) LeakSelf() { // ERROR \"leaking param: b\"\n-\tb.ii = b.i[0:4] // ERROR \"b.i escapes to heap\"\n+func (b *Bar2) LeakSelf() { // ERROR \"leaking param: b$\"\n+\tb.ii = b.i[0:4]\n }\n \n-func (b *Bar2) LeakSelf2() { // ERROR \"leaking param: b\"\n+func (b *Bar2) LeakSelf2() { // ERROR \"leaking param: b$\"\n \tvar buf []int\n-\tbuf = b.i[0:] // ERROR \"b.i escapes to heap\"\n+\tbuf = b.i[0:]\n \tb.ii = buf\n }\n \n func foo21() func() int {\n-\tx := 42             // ERROR \"moved to heap: x\"\n-\treturn func() int { // ERROR \"func literal escapes to heap\"\n-\t\treturn x // ERROR \"&x escapes to heap\"\n+\tx := 42\n+\treturn func() int { // ERROR \"func literal escapes to heap$\"\n+\t\treturn x\n+\t}\n+}\n+\n+func foo21a() func() int {\n+\tx := 42             // ERROR \"moved to heap: x$\"\n+\treturn func() int { // ERROR \"func literal escapes to heap$\"\n+\t\tx++\n+\t\treturn x\n \t}\n }\n \n func foo22() int {\n \tx := 42\n-\treturn func() int { // ERROR \"func literal does not escape\"\n+\treturn func() int { // ERROR \"func literal does not escape$\"\n \t\treturn x\n \t}()\n }\n \n-func foo23(x int) func() int { // ERROR \"moved to heap: x\"\n-\treturn func() int { // ERROR \"func literal escapes to heap\"\n-\t\treturn x // ERROR \"&x escapes to heap\"\n+func foo23(x int) func() int {\n+\treturn func() int { // ERROR \"func literal escapes to heap$\"\n+\t\treturn x\n \t}\n }\n \n-func foo23a(x int) func() int { // ERROR \"moved to heap: x\"\n-\tf := func() int { // ERROR \"func literal escapes to heap\"\n-\t\treturn x // ERROR \"&x escapes to heap\"\n+func foo23a(x int) func() int {\n+\tf := func() int { // ERROR \"func literal escapes to heap$\"\n+\t\treturn x\n \t}\n \treturn f\n }\n \n-func foo23b(x int) *(func() int) { // ERROR \"moved to heap: x\"\n-\tf := func() int { return x } // ERROR \"moved to heap: f\" \"func literal escapes to heap\" \"&x escapes to heap\"\n-\treturn &f                    // ERROR \"&f escapes to heap\"\n+func foo23b(x int) *(func() int) {\n+\tf := func() int { return x } // ERROR \"func literal escapes to heap$\" \"moved to heap: f$\"\n+\treturn &f\n+}\n+\n+func foo23c(x int) func() int { // ERROR \"moved to heap: x$\"\n+\treturn func() int { // ERROR \"func literal escapes to heap$\"\n+\t\tx++\n+\t\treturn x\n+\t}\n }\n \n func foo24(x int) int {\n-\treturn func() int { // ERROR \"func literal does not escape\"\n+\treturn func() int { // ERROR \"func literal does not escape$\"\n \t\treturn x\n \t}()\n }\n \n var x *int\n \n-func fooleak(xx *int) int { // ERROR \"leaking param: xx\"\n+func fooleak(xx *int) int { // ERROR \"leaking param: xx$\"\n \tx = xx\n \treturn *x\n }\n \n-func foonoleak(xx *int) int { // ERROR \"xx does not escape\"\n+func foonoleak(xx *int) int { // ERROR \"xx does not escape$\"\n \treturn *x + *xx\n }\n \n-func foo31(x int) int { // ERROR \"moved to heap: x\"\n-\treturn fooleak(&x) // ERROR \"&x escapes to heap\"\n+func foo31(x int) int { // ERROR \"moved to heap: x$\"\n+\treturn fooleak(&x)\n }\n \n func foo32(x int) int {\n-\treturn foonoleak(&x) // ERROR \"&x does not escape\"\n+\treturn foonoleak(&x)\n }\n \n type Foo struct {\n@@ -265,114 +282,114 @@ type Foo struct {\n var F Foo\n var pf *Foo\n \n-func (f *Foo) fooleak() { // ERROR \"leaking param: f\"\n+func (f *Foo) fooleak() { // ERROR \"leaking param: f$\"\n \tpf = f\n }\n \n-func (f *Foo) foonoleak() { // ERROR \"f does not escape\"\n+func (f *Foo) foonoleak() { // ERROR \"f does not escape$\"\n \tF.x = f.x\n }\n \n-func (f *Foo) Leak() { // ERROR \"leaking param: f\"\n+func (f *Foo) Leak() { // ERROR \"leaking param: f$\"\n \tf.fooleak()\n }\n \n-func (f *Foo) NoLeak() { // ERROR \"f does not escape\"\n+func (f *Foo) NoLeak() { // ERROR \"f does not escape$\"\n \tf.foonoleak()\n }\n \n-func foo41(x int) { // ERROR \"moved to heap: x\"\n-\tF.xx = &x // ERROR \"&x escapes to heap\"\n+func foo41(x int) { // ERROR \"moved to heap: x$\"\n+\tF.xx = &x\n }\n \n-func (f *Foo) foo42(x int) { // ERROR \"f does not escape\" \"moved to heap: x\"\n-\tf.xx = &x // ERROR \"&x escapes to heap\"\n+func (f *Foo) foo42(x int) { // ERROR \"f does not escape$\" \"moved to heap: x$\"\n+\tf.xx = &x\n }\n \n-func foo43(f *Foo, x int) { // ERROR \"f does not escape\" \"moved to heap: x\"\n-\tf.xx = &x // ERROR \"&x escapes to heap\"\n+func foo43(f *Foo, x int) { // ERROR \"f does not escape$\" \"moved to heap: x$\"\n+\tf.xx = &x\n }\n \n-func foo44(yy *int) { // ERROR \"leaking param: yy\"\n+func foo44(yy *int) { // ERROR \"leaking param: yy$\"\n \tF.xx = yy\n }\n \n-func (f *Foo) foo45() { // ERROR \"f does not escape\"\n+func (f *Foo) foo45() { // ERROR \"f does not escape$\"\n \tF.x = f.x\n }\n \n // See foo13 above for explanation of why f leaks.\n-func (f *Foo) foo46() { // ERROR \"leaking param: f\"\n+func (f *Foo) foo46() { // ERROR \"leaking param content: f$\"\n \tF.xx = f.xx\n }\n \n-func (f *Foo) foo47() { // ERROR \"leaking param: f\"\n-\tf.xx = &f.x // ERROR \"&f.x escapes to heap\"\n+func (f *Foo) foo47() { // ERROR \"leaking param: f$\"\n+\tf.xx = &f.x\n }\n \n var ptrSlice []*int\n \n-func foo50(i *int) { // ERROR \"leaking param: i\"\n+func foo50(i *int) { // ERROR \"leaking param: i$\"\n \tptrSlice[0] = i\n }\n \n var ptrMap map[*int]*int\n \n-func foo51(i *int) { // ERROR \"leaking param: i\"\n+func foo51(i *int) { // ERROR \"leaking param: i$\"\n \tptrMap[i] = i\n }\n \n-func indaddr1(x int) *int { // ERROR \"moved to heap: x\"\n-\treturn &x // ERROR \"&x escapes to heap\"\n+func indaddr1(x int) *int { // ERROR \"moved to heap: x$\"\n+\treturn &x\n }\n \n-func indaddr2(x *int) *int { // ERROR \"leaking param: x\"\n-\treturn *&x // ERROR \"&x does not escape\"\n+func indaddr2(x *int) *int { // ERROR \"leaking param: x to result ~r1 level=0$\"\n+\treturn *&x\n }\n \n-func indaddr3(x *int32) *int { // ERROR \"leaking param: x\"\n-\treturn *(**int)(unsafe.Pointer(&x)) // ERROR \"&x does not escape\"\n+func indaddr3(x *int32) *int { // ERROR \"leaking param: x to result ~r1 level=0$\"\n+\treturn *(**int)(unsafe.Pointer(&x))\n }\n \n // From package math:\n \n func Float32bits(f float32) uint32 {\n-\treturn *(*uint32)(unsafe.Pointer(&f)) // ERROR \"&f does not escape\"\n+\treturn *(*uint32)(unsafe.Pointer(&f))\n }\n \n func Float32frombits(b uint32) float32 {\n-\treturn *(*float32)(unsafe.Pointer(&b)) // ERROR \"&b does not escape\"\n+\treturn *(*float32)(unsafe.Pointer(&b))\n }\n \n func Float64bits(f float64) uint64 {\n-\treturn *(*uint64)(unsafe.Pointer(&f)) // ERROR \"&f does not escape\"\n+\treturn *(*uint64)(unsafe.Pointer(&f))\n }\n \n func Float64frombits(b uint64) float64 {\n-\treturn *(*float64)(unsafe.Pointer(&b)) // ERROR \"&b does not escape\"\n+\treturn *(*float64)(unsafe.Pointer(&b))\n }\n \n // contrast with\n-func float64bitsptr(f float64) *uint64 { // ERROR \"moved to heap: f\"\n-\treturn (*uint64)(unsafe.Pointer(&f)) // ERROR \"&f escapes to heap\"\n+func float64bitsptr(f float64) *uint64 { // ERROR \"moved to heap: f$\"\n+\treturn (*uint64)(unsafe.Pointer(&f))\n }\n \n-func float64ptrbitsptr(f *float64) *uint64 { // ERROR \"leaking param: f\"\n+func float64ptrbitsptr(f *float64) *uint64 { // ERROR \"leaking param: f to result ~r1 level=0$\"\n \treturn (*uint64)(unsafe.Pointer(f))\n }\n \n-func typesw(i interface{}) *int { // ERROR \"leaking param: i\"\n+func typesw(i interface{}) *int { // ERROR \"leaking param: i to result ~r1 level=0$\"\n \tswitch val := i.(type) {\n \tcase *int:\n \t\treturn val\n \tcase *int8:\n-\t\tv := int(*val) // ERROR \"moved to heap: v\"\n-\t\treturn &v      // ERROR \"&v escapes to heap\"\n+\t\tv := int(*val) // ERROR \"moved to heap: v$\"\n+\t\treturn &v\n \t}\n \treturn nil\n }\n \n-func exprsw(i *int) *int { // ERROR \"leaking param: i\"\n+func exprsw(i *int) *int { // ERROR \"leaking param: i to result ~r1 level=0$\"\n \tswitch j := i; *j + 110 {\n \tcase 12:\n \t\treturn j\n@@ -384,20 +401,20 @@ func exprsw(i *int) *int { // ERROR \"leaking param: i\"\n }\n \n // assigning to an array element is like assigning to the array\n-func foo60(i *int) *int { // ERROR \"leaking param: i\"\n+func foo60(i *int) *int { // ERROR \"leaking param: i to result ~r1 level=0$\"\n \tvar a [12]*int\n \ta[0] = i\n \treturn a[1]\n }\n \n-func foo60a(i *int) *int { // ERROR \"i does not escape\"\n+func foo60a(i *int) *int { // ERROR \"i does not escape$\"\n \tvar a [12]*int\n \ta[0] = i\n \treturn nil\n }\n \n // assigning to a struct field  is like assigning to the struct\n-func foo61(i *int) *int { // ERROR \"leaking param: i\"\n+func foo61(i *int) *int { // ERROR \"leaking param: i to result ~r1 level=0$\"\n \ttype S struct {\n \t\ta, b *int\n \t}\n@@ -406,7 +423,7 @@ func foo61(i *int) *int { // ERROR \"leaking param: i\"\n \treturn s.b\n }\n \n-func foo61a(i *int) *int { // ERROR \"i does not escape\"\n+func foo61a(i *int) *int { // ERROR \"i does not escape$\"\n \ttype S struct {\n \t\ta, b *int\n \t}\n@@ -418,11 +435,11 @@ func foo61a(i *int) *int { // ERROR \"i does not escape\"\n // assigning to a struct field is like assigning to the struct but\n // here this subtlety is lost, since s.a counts as an assignment to a\n // track-losing dereference.\n-func foo62(i *int) *int { // ERROR \"leaking param: i\"\n+func foo62(i *int) *int { // ERROR \"leaking param: i$\"\n \ttype S struct {\n \t\ta, b *int\n \t}\n-\ts := new(S) // ERROR \"new[(]S[)] does not escape\"\n+\ts := new(S) // ERROR \"new\\(S\\) does not escape$\"\n \ts.a = i\n \treturn nil // s.b\n }\n@@ -431,14 +448,14 @@ type M interface {\n \tM()\n }\n \n-func foo63(m M) { // ERROR \"m does not escape\"\n+func foo63(m M) { // ERROR \"m does not escape$\"\n }\n \n-func foo64(m M) { // ERROR \"leaking param: m\"\n+func foo64(m M) { // ERROR \"leaking param: m$\"\n \tm.M()\n }\n \n-func foo64b(m M) { // ERROR \"leaking param: m\"\n+func foo64b(m M) { // ERROR \"leaking param: m$\"\n \tdefer m.M()\n }\n \n@@ -448,96 +465,122 @@ func (MV) M() {}\n \n func foo65() {\n \tvar mv MV\n-\tfoo63(&mv) // ERROR \"&mv does not escape\"\n+\tfoo63(&mv)\n }\n \n func foo66() {\n-\tvar mv MV  // ERROR \"moved to heap: mv\"\n-\tfoo64(&mv) // ERROR \"&mv escapes to heap\"\n+\tvar mv MV // ERROR \"moved to heap: mv$\"\n+\tfoo64(&mv)\n }\n \n func foo67() {\n \tvar mv MV\n-\tfoo63(mv)\n+\tfoo63(mv) // ERROR \"mv does not escape$\"\n }\n \n func foo68() {\n \tvar mv MV\n-\tfoo64(mv) // escapes but it's an int so irrelevant\n+\t// escapes but it's an int so irrelevant\n+\tfoo64(mv) // ERROR \"mv escapes to heap$\"\n }\n \n-func foo69(m M) { // ERROR \"leaking param: m\"\n+func foo69(m M) { // ERROR \"leaking param: m$\"\n \tfoo64(m)\n }\n \n-func foo70(mv1 *MV, m M) { // ERROR \"leaking param: mv1\" \"leaking param: m\"\n+func foo70(mv1 *MV, m M) { // ERROR \"leaking param: m$\" \"leaking param: mv1$\"\n \tm = mv1\n \tfoo64(m)\n }\n \n-func foo71(x *int) []*int { // ERROR \"leaking param: x\"\n+func foo71(x *int) []*int { // ERROR \"leaking param: x$\"\n \tvar y []*int\n \ty = append(y, x)\n \treturn y\n }\n \n-func foo71a(x int) []*int { // ERROR \"moved to heap: x\"\n+func foo71a(x int) []*int { // ERROR \"moved to heap: x$\"\n \tvar y []*int\n-\ty = append(y, &x) // ERROR \"&x escapes to heap\"\n+\ty = append(y, &x)\n \treturn y\n }\n \n func foo72() {\n \tvar x int\n \tvar y [1]*int\n-\ty[0] = &x // ERROR \"&x does not escape\"\n+\ty[0] = &x\n }\n \n func foo72aa() [10]*int {\n-\tvar x int // ERROR \"moved to heap: x\"\n+\tvar x int // ERROR \"moved to heap: x$\"\n \tvar y [10]*int\n-\ty[0] = &x // ERROR \"&x escapes to heap\"\n+\ty[0] = &x\n \treturn y\n }\n \n func foo72a() {\n \tvar y [10]*int\n \tfor i := 0; i < 10; i++ {\n \t\t// escapes its scope\n-\t\tx := i    // ERROR \"moved to heap: x\"\n-\t\ty[i] = &x // ERROR \"&x escapes to heap\"\n+\t\tx := i // ERROR \"moved to heap: x$\"\n+\t\ty[i] = &x\n \t}\n \treturn\n }\n \n func foo72b() [10]*int {\n \tvar y [10]*int\n \tfor i := 0; i < 10; i++ {\n-\t\tx := i    // ERROR \"moved to heap: x\"\n-\t\ty[i] = &x // ERROR \"&x escapes to heap\"\n+\t\tx := i // ERROR \"moved to heap: x$\"\n+\t\ty[i] = &x\n \t}\n \treturn y\n }\n \n // issue 2145\n func foo73() {\n-\ts := []int{3, 2, 1} // ERROR \"\\[\\]int literal does not escape\"\n+\ts := []int{3, 2, 1} // ERROR \"\\[\\]int{...} does not escape$\"\n \tfor _, v := range s {\n-\t\tvv := v // ERROR \"moved to heap: vv\"\n+\t\tvv := v\n \t\t// actually just escapes its scope\n-\t\tdefer func() { // ERROR \"func literal escapes to heap\"\n-\t\t\tprintln(vv) // ERROR \"&vv escapes to heap\"\n+\t\tdefer func() { // ERROR \"func literal escapes to heap$\"\n+\t\t\tprintln(vv)\n+\t\t}()\n+\t}\n+}\n+\n+func foo731() {\n+\ts := []int{3, 2, 1} // ERROR \"\\[\\]int{...} does not escape$\"\n+\tfor _, v := range s {\n+\t\tvv := v // ERROR \"moved to heap: vv$\"\n+\t\t// actually just escapes its scope\n+\t\tdefer func() { // ERROR \"func literal escapes to heap$\"\n+\t\t\tvv = 42\n+\t\t\tprintln(vv)\n \t\t}()\n \t}\n }\n \n func foo74() {\n-\ts := []int{3, 2, 1} // ERROR \"\\[\\]int literal does not escape\"\n+\ts := []int{3, 2, 1} // ERROR \"\\[\\]int{...} does not escape$\"\n \tfor _, v := range s {\n-\t\tvv := v // ERROR \"moved to heap: vv\"\n+\t\tvv := v\n \t\t// actually just escapes its scope\n-\t\tfn := func() { // ERROR \"func literal escapes to heap\"\n-\t\t\tprintln(vv) // ERROR \"&vv escapes to heap\"\n+\t\tfn := func() { // ERROR \"func literal escapes to heap$\"\n+\t\t\tprintln(vv)\n+\t\t}\n+\t\tdefer fn()\n+\t}\n+}\n+\n+func foo74a() {\n+\ts := []int{3, 2, 1} // ERROR \"\\[\\]int{...} does not escape$\"\n+\tfor _, v := range s {\n+\t\tvv := v // ERROR \"moved to heap: vv$\"\n+\t\t// actually just escapes its scope\n+\t\tfn := func() { // ERROR \"func literal escapes to heap$\"\n+\t\t\tvv += 1\n+\t\t\tprintln(vv)\n \t\t}\n \t\tdefer fn()\n \t}\n@@ -546,135 +589,163 @@ func foo74() {\n // issue 3975\n func foo74b() {\n \tvar array [3]func()\n-\ts := []int{3, 2, 1} // ERROR \"\\[\\]int literal does not escape\"\n+\ts := []int{3, 2, 1} // ERROR \"\\[\\]int{...} does not escape$\"\n+\tfor i, v := range s {\n+\t\tvv := v\n+\t\t// actually just escapes its scope\n+\t\tarray[i] = func() { // ERROR \"func literal escapes to heap$\"\n+\t\t\tprintln(vv)\n+\t\t}\n+\t}\n+}\n+\n+func foo74c() {\n+\tvar array [3]func()\n+\ts := []int{3, 2, 1} // ERROR \"\\[\\]int{...} does not escape$\"\n \tfor i, v := range s {\n-\t\tvv := v // ERROR \"moved to heap: vv\"\n+\t\tvv := v // ERROR \"moved to heap: vv$\"\n \t\t// actually just escapes its scope\n-\t\tarray[i] = func() { // ERROR \"func literal escapes to heap\"\n-\t\t\tprintln(vv) // ERROR \"&vv escapes to heap\"\n+\t\tarray[i] = func() { // ERROR \"func literal escapes to heap$\"\n+\t\t\tprintln(&vv)\n \t\t}\n \t}\n }\n \n-func myprint(y *int, x ...interface{}) *int { // ERROR \"x does not escape\" \"leaking param: y\"\n+func myprint(y *int, x ...interface{}) *int { // ERROR \"leaking param: y to result ~r2 level=0$\" \"x does not escape$\"\n \treturn y\n }\n \n-func myprint1(y *int, x ...interface{}) *interface{} { // ERROR \"y does not escape\" \"leaking param: x\"\n-\treturn &x[0] // ERROR \"&x.0. escapes to heap\"\n+func myprint1(y *int, x ...interface{}) *interface{} { // ERROR \"leaking param: x to result ~r2 level=0$\" \"y does not escape$\"\n+\treturn &x[0]\n }\n \n-func foo75(z *int) { // ERROR \"z does not escape\"\n-\tmyprint(z, 1, 2, 3) // ERROR \"[.][.][.] argument does not escape\"\n+func foo75(z *int) { // ERROR \"z does not escape$\"\n+\tmyprint(z, 1, 2, 3) // ERROR \"1 does not escape\" \"2 does not escape\" \"3 does not escape\" \"... argument does not escape$\"\n }\n \n-func foo75a(z *int) { // ERROR \"z does not escape\"\n-\tmyprint1(z, 1, 2, 3) // ERROR \"[.][.][.] argument does not escape\"\n+func foo75a(z *int) { // ERROR \"z does not escape$\"\n+\tmyprint1(z, 1, 2, 3) // ERROR \"1 does not escape\" \"2 does not escape\" \"3 does not escape\" \"... argument does not escape$\"\n }\n \n-func foo75esc(z *int) { // ERROR \"leaking param: z\"\n-\tgxx = myprint(z, 1, 2, 3) // ERROR \"[.][.][.] argument does not escape\"\n+func foo75esc(z *int) { // ERROR \"leaking param: z$\"\n+\tgxx = myprint(z, 1, 2, 3) // ERROR \"1 does not escape\" \"2 does not escape\" \"3 does not escape\" \"... argument does not escape$\"\n }\n \n-func foo75aesc(z *int) { // ERROR \"z does not escape\"\n+func foo75aesc(z *int) { // ERROR \"z does not escape$\"\n \tvar ppi **interface{}       // assignments to pointer dereferences lose track\n-\t*ppi = myprint1(z, 1, 2, 3) // ERROR \"[.][.][.] argument escapes to heap\"\n+\t*ppi = myprint1(z, 1, 2, 3) // ERROR \"... argument escapes to heap$\" \"1 escapes to heap$\" \"2 escapes to heap$\" \"3 escapes to heap$\"\n+}\n+\n+func foo75aesc1(z *int) { // ERROR \"z does not escape$\"\n+\tsink = myprint1(z, 1, 2, 3) // ERROR \"... argument escapes to heap$\" \"1 escapes to heap$\" \"2 escapes to heap$\" \"3 escapes to heap$\"\n }\n \n-func foo76(z *int) { // ERROR \"leaking param: z\"\n-\tmyprint(nil, z) // ERROR \"[.][.][.] argument does not escape\"\n+func foo76(z *int) { // ERROR \"z does not escape\"\n+\tmyprint(nil, z) // ERROR \"... argument does not escape$\"\n }\n \n-func foo76a(z *int) { // ERROR \"leaking param: z\"\n-\tmyprint1(nil, z) // ERROR \"[.][.][.] argument does not escape\"\n+func foo76a(z *int) { // ERROR \"z does not escape\"\n+\tmyprint1(nil, z) // ERROR \"... argument does not escape$\"\n }\n \n func foo76b() {\n-\tmyprint(nil, 1, 2, 3) // ERROR \"[.][.][.] argument does not escape\"\n+\tmyprint(nil, 1, 2, 3) // ERROR \"1 does not escape\" \"2 does not escape\" \"3 does not escape\" \"... argument does not escape$\"\n }\n \n func foo76c() {\n-\tmyprint1(nil, 1, 2, 3) // ERROR \"[.][.][.] argument does not escape\"\n+\tmyprint1(nil, 1, 2, 3) // ERROR \"1 does not escape\" \"2 does not escape\" \"3 does not escape\" \"... argument does not escape$\"\n }\n \n func foo76d() {\n-\tdefer myprint(nil, 1, 2, 3) // ERROR \"[.][.][.] argument does not escape\"\n+\tdefer myprint(nil, 1, 2, 3) // ERROR \"1 does not escape\" \"2 does not escape\" \"3 does not escape\" \"... argument does not escape$\"\n }\n \n func foo76e() {\n-\tdefer myprint1(nil, 1, 2, 3) // ERROR \"[.][.][.] argument does not escape\"\n+\tdefer myprint1(nil, 1, 2, 3) // ERROR \"1 does not escape\" \"2 does not escape\" \"3 does not escape\" \"... argument does not escape$\"\n }\n \n func foo76f() {\n \tfor {\n \t\t// TODO: This one really only escapes its scope, but we don't distinguish yet.\n-\t\tdefer myprint(nil, 1, 2, 3) // ERROR \"[.][.][.] argument escapes to heap\"\n+\t\tdefer myprint(nil, 1, 2, 3) // ERROR \"... argument escapes to heap$\" \"1 escapes to heap$\" \"2 escapes to heap$\" \"3 escapes to heap$\"\n \t}\n }\n \n func foo76g() {\n \tfor {\n-\t\tdefer myprint1(nil, 1, 2, 3) // ERROR \"[.][.][.] argument escapes to heap\"\n+\t\tdefer myprint1(nil, 1, 2, 3) // ERROR \"... argument escapes to heap$\" \"1 escapes to heap$\" \"2 escapes to heap$\" \"3 escapes to heap$\"\n \t}\n }\n \n-func foo77(z []interface{}) { // ERROR \"z does not escape\"\n+func foo77(z []interface{}) { // ERROR \"z does not escape$\"\n \tmyprint(nil, z...) // z does not escape\n }\n \n-func foo77a(z []interface{}) { // ERROR \"z does not escape\"\n+func foo77a(z []interface{}) { // ERROR \"z does not escape$\"\n \tmyprint1(nil, z...)\n }\n \n-func foo77b(z []interface{}) { // ERROR \"leaking param: z\"\n+func foo77b(z []interface{}) { // ERROR \"leaking param: z$\"\n \tvar ppi **interface{}\n \t*ppi = myprint1(nil, z...)\n }\n \n-func foo78(z int) *int { // ERROR \"moved to heap: z\"\n-\treturn &z // ERROR \"&z escapes to heap\"\n+func foo77c(z []interface{}) { // ERROR \"leaking param: z$\"\n+\tsink = myprint1(nil, z...)\n+}\n+\n+func dotdotdot() {\n+\ti := 0\n+\tmyprint(nil, &i) // ERROR \"... argument does not escape$\"\n+\n+\tj := 0\n+\tmyprint1(nil, &j) // ERROR \"... argument does not escape$\"\n }\n \n-func foo78a(z int) *int { // ERROR \"moved to heap: z\"\n-\ty := &z   // ERROR \"&z escapes to heap\"\n-\tx := &y   // ERROR \"&y does not escape\"\n+func foo78(z int) *int { // ERROR \"moved to heap: z$\"\n+\treturn &z\n+}\n+\n+func foo78a(z int) *int { // ERROR \"moved to heap: z$\"\n+\ty := &z\n+\tx := &y\n \treturn *x // really return y\n }\n \n func foo79() *int {\n-\treturn new(int) // ERROR \"new[(]int[)] escapes to heap\"\n+\treturn new(int) // ERROR \"new\\(int\\) escapes to heap$\"\n }\n \n func foo80() *int {\n \tvar z *int\n \tfor {\n \t\t// Really just escapes its scope but we don't distinguish\n-\t\tz = new(int) // ERROR \"new[(]int[)] escapes to heap\"\n+\t\tz = new(int) // ERROR \"new\\(int\\) escapes to heap$\"\n \t}\n \t_ = z\n \treturn nil\n }\n \n func foo81() *int {\n \tfor {\n-\t\tz := new(int) // ERROR \"new[(]int[)] does not escape\"\n+\t\tz := new(int) // ERROR \"new\\(int\\) does not escape$\"\n \t\t_ = z\n \t}\n \treturn nil\n }\n \n-func tee(p *int) (x, y *int) { return p, p } // ERROR \"leaking param\"\n+func tee(p *int) (x, y *int) { return p, p } // ERROR \"leaking param: p to result x level=0$\" \"leaking param: p to result y level=0$\"\n \n-func noop(x, y *int) {} // ERROR \"does not escape\"\n+func noop(x, y *int) {} // ERROR \"x does not escape$\" \"y does not escape$\"\n \n func foo82() {\n-\tvar x, y, z int  // ERROR \"moved to heap\"\n-\tgo noop(tee(&z)) // ERROR \"&z escapes to heap\"\n-\tgo noop(&x, &y)  // ERROR \"escapes to heap\"\n+\tvar x, y, z int // ERROR \"moved to heap: x$\" \"moved to heap: y$\" \"moved to heap: z$\"\n+\tgo noop(tee(&z))\n+\tgo noop(&x, &y)\n \tfor {\n-\t\tvar u, v, w int     // ERROR \"moved to heap\"\n-\t\tdefer noop(tee(&u)) // ERROR \"&u escapes to heap\"\n-\t\tdefer noop(&v, &w)  // ERROR \"escapes to heap\"\n+\t\tvar u, v, w int // ERROR \"moved to heap: u$\" \"moved to heap: v$\" \"moved to heap: w$\"\n+\t\tdefer noop(tee(&u))\n+\t\tdefer noop(&v, &w)\n \t}\n }\n \n@@ -687,32 +758,32 @@ type LimitedFooer struct {\n \tN int64\n }\n \n-func LimitFooer(r Fooer, n int64) Fooer { // ERROR \"leaking param: r\"\n-\treturn &LimitedFooer{r, n} // ERROR \"&LimitedFooer literal escapes to heap\"\n+func LimitFooer(r Fooer, n int64) Fooer { // ERROR \"leaking param: r$\"\n+\treturn &LimitedFooer{r, n} // ERROR \"&LimitedFooer{...} escapes to heap$\"\n }\n \n-func foo90(x *int) map[*int]*int { // ERROR \"leaking param: x\"\n-\treturn map[*int]*int{nil: x} // ERROR \"map\\[\\*int\\]\\*int literal escapes to heap\"\n+func foo90(x *int) map[*int]*int { // ERROR \"leaking param: x$\"\n+\treturn map[*int]*int{nil: x} // ERROR \"map\\[\\*int\\]\\*int{...} escapes to heap$\"\n }\n \n-func foo91(x *int) map[*int]*int { // ERROR \"leaking param: x\"\n-\treturn map[*int]*int{x: nil} // ERROR \"map\\[\\*int\\]\\*int literal escapes to heap\"\n+func foo91(x *int) map[*int]*int { // ERROR \"leaking param: x$\"\n+\treturn map[*int]*int{x: nil} // ERROR \"map\\[\\*int\\]\\*int{...} escapes to heap$\"\n }\n \n-func foo92(x *int) [2]*int { // ERROR \"leaking param: x\"\n+func foo92(x *int) [2]*int { // ERROR \"leaking param: x to result ~r1 level=0$\"\n \treturn [2]*int{x, nil}\n }\n \n // does not leak c\n-func foo93(c chan *int) *int { // ERROR \"c does not escape\"\n+func foo93(c chan *int) *int { // ERROR \"c does not escape$\"\n \tfor v := range c {\n \t\treturn v\n \t}\n \treturn nil\n }\n \n // does not leak m\n-func foo94(m map[*int]*int, b bool) *int { // ERROR \"m does not escape\"\n+func foo94(m map[*int]*int, b bool) *int { // ERROR \"leaking param: m to result ~r2 level=1\"\n \tfor k, v := range m {\n \t\tif b {\n \t\t\treturn k\n@@ -723,150 +794,150 @@ func foo94(m map[*int]*int, b bool) *int { // ERROR \"m does not escape\"\n }\n \n // does leak x\n-func foo95(m map[*int]*int, x *int) { // ERROR \"m does not escape\" \"leaking param: x\"\n+func foo95(m map[*int]*int, x *int) { // ERROR \"m does not escape$\" \"leaking param: x$\"\n \tm[x] = x\n }\n \n-// does not leak m\n-func foo96(m []*int) *int { // ERROR \"m does not escape\"\n+// does not leak m but does leak content\n+func foo96(m []*int) *int { // ERROR \"leaking param: m to result ~r1 level=1\"\n \treturn m[0]\n }\n \n // does leak m\n-func foo97(m [1]*int) *int { // ERROR \"leaking param: m\"\n+func foo97(m [1]*int) *int { // ERROR \"leaking param: m to result ~r1 level=0$\"\n \treturn m[0]\n }\n \n // does not leak m\n-func foo98(m map[int]*int) *int { // ERROR \"m does not escape\"\n+func foo98(m map[int]*int) *int { // ERROR \"m does not escape$\"\n \treturn m[0]\n }\n \n // does leak m\n-func foo99(m *[1]*int) []*int { // ERROR \"leaking param: m\"\n+func foo99(m *[1]*int) []*int { // ERROR \"leaking param: m to result ~r1 level=0$\"\n \treturn m[:]\n }\n \n // does not leak m\n-func foo100(m []*int) *int { // ERROR \"m does not escape\"\n+func foo100(m []*int) *int { // ERROR \"leaking param: m to result ~r1 level=1\"\n \tfor _, v := range m {\n \t\treturn v\n \t}\n \treturn nil\n }\n \n // does leak m\n-func foo101(m [1]*int) *int { // ERROR \"leaking param: m\"\n+func foo101(m [1]*int) *int { // ERROR \"leaking param: m to result ~r1 level=0$\"\n \tfor _, v := range m {\n \t\treturn v\n \t}\n \treturn nil\n }\n \n // does not leak m\n-func foo101a(m [1]*int) *int { // ERROR \"m does not escape\"\n-\tfor i := range m { // ERROR \"moved to heap: i\"\n-\t\treturn &i // ERROR \"&i escapes to heap\"\n+func foo101a(m [1]*int) *int { // ERROR \"m does not escape$\"\n+\tfor i := range m { // ERROR \"moved to heap: i$\"\n+\t\treturn &i\n \t}\n \treturn nil\n }\n \n // does leak x\n-func foo102(m []*int, x *int) { // ERROR \"m does not escape\" \"leaking param: x\"\n+func foo102(m []*int, x *int) { // ERROR \"m does not escape$\" \"leaking param: x$\"\n \tm[0] = x\n }\n \n // does not leak x\n-func foo103(m [1]*int, x *int) { // ERROR \"m does not escape\" \"x does not escape\"\n+func foo103(m [1]*int, x *int) { // ERROR \"m does not escape$\" \"x does not escape$\"\n \tm[0] = x\n }\n \n var y []*int\n \n-// does not leak x\n-func foo104(x []*int) { // ERROR \"x does not escape\"\n+// does not leak x but does leak content\n+func foo104(x []*int) { // ERROR \"leaking param content: x\"\n \tcopy(y, x)\n }\n \n-// does not leak x\n-func foo105(x []*int) { // ERROR \"x does not escape\"\n+// does not leak x but does leak content\n+func foo105(x []*int) { // ERROR \"leaking param content: x\"\n \t_ = append(y, x...)\n }\n \n // does leak x\n-func foo106(x *int) { // ERROR \"leaking param: x\"\n+func foo106(x *int) { // ERROR \"leaking param: x$\"\n \t_ = append(y, x)\n }\n \n-func foo107(x *int) map[*int]*int { // ERROR \"leaking param: x\"\n-\treturn map[*int]*int{x: nil} // ERROR \"map.* literal escapes to heap\"\n+func foo107(x *int) map[*int]*int { // ERROR \"leaking param: x$\"\n+\treturn map[*int]*int{x: nil} // ERROR \"map\\[\\*int\\]\\*int{...} escapes to heap$\"\n }\n \n-func foo108(x *int) map[*int]*int { // ERROR \"leaking param: x\"\n-\treturn map[*int]*int{nil: x} // ERROR \"map.* literal escapes to heap\"\n+func foo108(x *int) map[*int]*int { // ERROR \"leaking param: x$\"\n+\treturn map[*int]*int{nil: x} // ERROR \"map\\[\\*int\\]\\*int{...} escapes to heap$\"\n }\n \n-func foo109(x *int) *int { // ERROR \"leaking param: x\"\n-\tm := map[*int]*int{x: nil} // ERROR \"map.* literal does not escape\"\n+func foo109(x *int) *int { // ERROR \"leaking param: x$\"\n+\tm := map[*int]*int{x: nil} // ERROR \"map\\[\\*int\\]\\*int{...} does not escape$\"\n \tfor k, _ := range m {\n \t\treturn k\n \t}\n \treturn nil\n }\n \n-func foo110(x *int) *int { // ERROR \"leaking param: x\"\n-\tm := map[*int]*int{nil: x} // ERROR \"map.* literal does not escape\"\n+func foo110(x *int) *int { // ERROR \"leaking param: x$\"\n+\tm := map[*int]*int{nil: x} // ERROR \"map\\[\\*int\\]\\*int{...} does not escape$\"\n \treturn m[nil]\n }\n \n-func foo111(x *int) *int { // ERROR \"leaking param: x\"\n-\tm := []*int{x} // ERROR \"\\[\\]\\*int literal does not escape\"\n+func foo111(x *int) *int { // ERROR \"leaking param: x to result ~r1 level=0\"\n+\tm := []*int{x} // ERROR \"\\[\\]\\*int{...} does not escape$\"\n \treturn m[0]\n }\n \n-func foo112(x *int) *int { // ERROR \"leaking param: x\"\n+func foo112(x *int) *int { // ERROR \"leaking param: x to result ~r1 level=0$\"\n \tm := [1]*int{x}\n \treturn m[0]\n }\n \n-func foo113(x *int) *int { // ERROR \"leaking param: x\"\n+func foo113(x *int) *int { // ERROR \"leaking param: x to result ~r1 level=0$\"\n \tm := Bar{ii: x}\n \treturn m.ii\n }\n \n-func foo114(x *int) *int { // ERROR \"leaking param: x\"\n-\tm := &Bar{ii: x} // ERROR \"&Bar literal does not escape\"\n+func foo114(x *int) *int { // ERROR \"leaking param: x to result ~r1 level=0$\"\n+\tm := &Bar{ii: x} // ERROR \"&Bar{...} does not escape$\"\n \treturn m.ii\n }\n \n-func foo115(x *int) *int { // ERROR \"leaking param: x\"\n+func foo115(x *int) *int { // ERROR \"leaking param: x to result ~r1 level=0$\"\n \treturn (*int)(unsafe.Pointer(uintptr(unsafe.Pointer(x)) + 1))\n }\n \n func foo116(b bool) *int {\n \tif b {\n-\t\tx := 1    // ERROR \"moved to heap: x\"\n-\t\treturn &x // ERROR \"&x escapes to heap\"\n+\t\tx := 1 // ERROR \"moved to heap: x$\"\n+\t\treturn &x\n \t} else {\n-\t\ty := 1    // ERROR \"moved to heap: y\"\n-\t\treturn &y // ERROR \"&y escapes to heap\"\n+\t\ty := 1 // ERROR \"moved to heap: y$\"\n+\t\treturn &y\n \t}\n \treturn nil\n }\n \n-func foo117(unknown func(interface{})) { // ERROR \"unknown does not escape\"\n-\tx := 1      // ERROR \"moved to heap: x\"\n-\tunknown(&x) // ERROR \"&x escapes to heap\"\n+func foo117(unknown func(interface{})) { // ERROR \"unknown does not escape$\"\n+\tx := 1 // ERROR \"moved to heap: x$\"\n+\tunknown(&x)\n }\n \n-func foo118(unknown func(*int)) { // ERROR \"unknown does not escape\"\n-\tx := 1      // ERROR \"moved to heap: x\"\n-\tunknown(&x) // ERROR \"&x escapes to heap\"\n+func foo118(unknown func(*int)) { // ERROR \"unknown does not escape$\"\n+\tx := 1 // ERROR \"moved to heap: x$\"\n+\tunknown(&x)\n }\n \n func external(*int)\n \n-func foo119(x *int) { // ERROR \"leaking param: x\"\n+func foo119(x *int) { // ERROR \"leaking param: x$\"\n \texternal(x)\n }\n \n@@ -1077,16 +1148,16 @@ L100:\n \n func foo121() {\n \tfor i := 0; i < 10; i++ {\n-\t\tdefer myprint(nil, i) // ERROR \"[.][.][.] argument escapes to heap\"\n-\t\tgo myprint(nil, i)    // ERROR \"[.][.][.] argument escapes to heap\"\n+\t\tdefer myprint(nil, i) // ERROR \"... argument escapes to heap$\" \"i escapes to heap$\"\n+\t\tgo myprint(nil, i)    // ERROR \"... argument escapes to heap$\" \"i escapes to heap$\"\n \t}\n }\n \n // same as foo121 but check across import\n func foo121b() {\n \tfor i := 0; i < 10; i++ {\n-\t\tdefer fmt.Printf(\"%d\", i) // ERROR \"[.][.][.] argument escapes to heap\"\n-\t\tgo fmt.Printf(\"%d\", i)    // ERROR \"[.][.][.] argument escapes to heap\"\n+\t\tdefer fmt.Printf(\"%d\", i) // ERROR \"... argument escapes to heap$\" \"i escapes to heap$\"\n+\t\tgo fmt.Printf(\"%d\", i)    // ERROR \"... argument escapes to heap$\" \"i escapes to heap$\"\n \t}\n }\n \n@@ -1096,7 +1167,7 @@ func foo122() {\n \n \tgoto L1\n L1:\n-\ti = new(int) // ERROR \"new.int. does not escape\"\n+\ti = new(int) // ERROR \"new\\(int\\) does not escape$\"\n \t_ = i\n }\n \n@@ -1105,35 +1176,35 @@ func foo123() {\n \tvar i *int\n \n L1:\n-\ti = new(int) // ERROR \"new.int. escapes to heap\"\n+\ti = new(int) // ERROR \"new\\(int\\) escapes to heap$\"\n \n \tgoto L1\n \t_ = i\n }\n \n-func foo124(x **int) { // ERROR \"x does not escape\"\n-\tvar i int // ERROR \"moved to heap: i\"\n-\tp := &i   // ERROR \"&i escapes\"\n-\tfunc() {  // ERROR \"func literal does not escape\"\n-\t\t*x = p // ERROR \"leaking closure reference p\"\n+func foo124(x **int) { // ERROR \"x does not escape$\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tp := &i\n+\tfunc() { // ERROR \"func literal does not escape$\"\n+\t\t*x = p\n \t}()\n }\n \n-func foo125(ch chan *int) { // ERROR \"does not escape\"\n-\tvar i int // ERROR \"moved to heap\"\n-\tp := &i   // ERROR \"&i escapes to heap\"\n-\tfunc() {  // ERROR \"func literal does not escape\"\n-\t\tch <- p // ERROR \"leaking closure reference p\"\n+func foo125(ch chan *int) { // ERROR \"ch does not escape$\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tp := &i\n+\tfunc() { // ERROR \"func literal does not escape$\"\n+\t\tch <- p\n \t}()\n }\n \n func foo126() {\n \tvar px *int // loopdepth 0\n \tfor {\n \t\t// loopdepth 1\n-\t\tvar i int // ERROR \"moved to heap\"\n-\t\tfunc() {  // ERROR \"func literal does not escape\"\n-\t\t\tpx = &i // ERROR \"&i escapes\"\n+\t\tvar i int // ERROR \"moved to heap: i$\"\n+\t\tfunc() {  // ERROR \"func literal does not escape$\"\n+\t\t\tpx = &i\n \t\t}()\n \t}\n \t_ = px\n@@ -1142,104 +1213,104 @@ func foo126() {\n var px *int\n \n func foo127() {\n-\tvar i int // ERROR \"moved to heap: i\"\n-\tp := &i   // ERROR \"&i escapes to heap\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tp := &i\n \tq := p\n \tpx = q\n }\n \n func foo128() {\n \tvar i int\n-\tp := &i // ERROR \"&i does not escape\"\n+\tp := &i\n \tq := p\n \t_ = q\n }\n \n func foo129() {\n-\tvar i int // ERROR \"moved to heap: i\"\n-\tp := &i   // ERROR \"&i escapes to heap\"\n-\tfunc() {  // ERROR \"func literal does not escape\"\n-\t\tq := p   // ERROR \"leaking closure reference p\"\n-\t\tfunc() { // ERROR \"func literal does not escape\"\n-\t\t\tr := q // ERROR \"leaking closure reference q\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tp := &i\n+\tfunc() { // ERROR \"func literal does not escape$\"\n+\t\tq := p\n+\t\tfunc() { // ERROR \"func literal does not escape$\"\n+\t\t\tr := q\n \t\t\tpx = r\n \t\t}()\n \t}()\n }\n \n func foo130() {\n \tfor {\n-\t\tvar i int // ERROR \"moved to heap\"\n-\t\tfunc() {  // ERROR \"func literal does not escape\"\n-\t\t\tpx = &i // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\t\tvar i int // ERROR \"moved to heap: i$\"\n+\t\tfunc() {  // ERROR \"func literal does not escape$\"\n+\t\t\tpx = &i\n \t\t}()\n \t}\n }\n \n func foo131() {\n-\tvar i int // ERROR \"moved to heap\"\n-\tfunc() {  // ERROR \"func literal does not escape\"\n-\t\tpx = &i // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tfunc() {  // ERROR \"func literal does not escape$\"\n+\t\tpx = &i\n \t}()\n }\n \n func foo132() {\n-\tvar i int   // ERROR \"moved to heap\"\n-\tgo func() { // ERROR \"func literal escapes to heap\"\n-\t\tpx = &i // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\tvar i int   // ERROR \"moved to heap: i$\"\n+\tgo func() { // ERROR \"func literal escapes to heap$\"\n+\t\tpx = &i\n \t}()\n }\n \n func foo133() {\n-\tvar i int      // ERROR \"moved to heap\"\n-\tdefer func() { // ERROR \"func literal does not escape\"\n-\t\tpx = &i // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\tvar i int      // ERROR \"moved to heap: i$\"\n+\tdefer func() { // ERROR \"func literal does not escape$\"\n+\t\tpx = &i\n \t}()\n }\n \n func foo134() {\n \tvar i int\n-\tp := &i  // ERROR \"&i does not escape\"\n-\tfunc() { // ERROR \"func literal does not escape\"\n+\tp := &i\n+\tfunc() { // ERROR \"func literal does not escape$\"\n \t\tq := p\n-\t\tfunc() { // ERROR \"func literal does not escape\"\n+\t\tfunc() { // ERROR \"func literal does not escape$\"\n \t\t\tr := q\n \t\t\t_ = r\n \t\t}()\n \t}()\n }\n \n func foo135() {\n-\tvar i int   // ERROR \"moved to heap: i\"\n-\tp := &i     // ERROR \"&i escapes to heap\" \"moved to heap: p\"\n-\tgo func() { // ERROR \"func literal escapes to heap\"\n-\t\tq := p   // ERROR \"&p escapes to heap\"\n-\t\tfunc() { // ERROR \"func literal does not escape\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tp := &i\n+\tgo func() { // ERROR \"func literal escapes to heap$\"\n+\t\tq := p\n+\t\tfunc() { // ERROR \"func literal does not escape$\"\n \t\t\tr := q\n \t\t\t_ = r\n \t\t}()\n \t}()\n }\n \n func foo136() {\n-\tvar i int   // ERROR \"moved to heap: i\"\n-\tp := &i     // ERROR \"&i escapes to heap\" \"moved to heap: p\"\n-\tgo func() { // ERROR \"func literal escapes to heap\"\n-\t\tq := p   // ERROR \"&p escapes to heap\" \"leaking closure reference p\"\n-\t\tfunc() { // ERROR \"func literal does not escape\"\n-\t\t\tr := q // ERROR \"leaking closure reference q\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tp := &i\n+\tgo func() { // ERROR \"func literal escapes to heap$\"\n+\t\tq := p\n+\t\tfunc() { // ERROR \"func literal does not escape$\"\n+\t\t\tr := q\n \t\t\tpx = r\n \t\t}()\n \t}()\n }\n \n func foo137() {\n-\tvar i int // ERROR \"moved to heap: i\"\n-\tp := &i   // ERROR \"&i escapes to heap\"\n-\tfunc() {  // ERROR \"func literal does not escape\"\n-\t\tq := p      // ERROR \"leaking closure reference p\" \"moved to heap: q\"\n-\t\tgo func() { // ERROR \"func literal escapes to heap\"\n-\t\t\tr := q // ERROR \"&q escapes to heap\"\n+\tvar i int // ERROR \"moved to heap: i$\"\n+\tp := &i\n+\tfunc() { // ERROR \"func literal does not escape$\"\n+\t\tq := p\n+\t\tgo func() { // ERROR \"func literal escapes to heap$\"\n+\t\t\tr := q\n \t\t\t_ = r\n \t\t}()\n \t}()\n@@ -1249,8 +1320,8 @@ func foo138() *byte {\n \ttype T struct {\n \t\tx [1]byte\n \t}\n-\tt := new(T)    // ERROR \"new.T. escapes to heap\"\n-\treturn &t.x[0] // ERROR \"&t.x.0. escapes to heap\"\n+\tt := new(T) // ERROR \"new\\(T\\) escapes to heap$\"\n+\treturn &t.x[0]\n }\n \n func foo139() *byte {\n@@ -1259,8 +1330,8 @@ func foo139() *byte {\n \t\t\ty byte\n \t\t}\n \t}\n-\tt := new(T)   // ERROR \"new.T. escapes to heap\"\n-\treturn &t.x.y // ERROR \"&t.x.y escapes to heap\"\n+\tt := new(T) // ERROR \"new\\(T\\) escapes to heap$\"\n+\treturn &t.x.y\n }\n \n // issue 4751\n@@ -1272,8 +1343,8 @@ func foo140() interface{} {\n \t\tX string\n \t\tT *T\n \t}\n-\tt := &T{} // ERROR \"&T literal escapes to heap\"\n-\treturn U{\n+\tt := &T{} // ERROR \"&T{} escapes to heap$\"\n+\treturn U{ // ERROR \"U{...} escapes to heap$\"\n \t\tX: t.X,\n \t\tT: t,\n \t}\n@@ -1287,53 +1358,53 @@ func F2([]byte)\n \n //go:noescape\n \n-func F3(x []byte) // ERROR \"F3 x does not escape\"\n+func F3(x []byte) // ERROR \"x does not escape$\"\n \n-func F4(x []byte)\n+func F4(x []byte) // ERROR \"leaking param: x$\"\n \n func G() {\n \tvar buf1 [10]byte\n-\tF1(buf1[:]) // ERROR \"buf1 does not escape\"\n-\t\n-\tvar buf2 [10]byte // ERROR \"moved to heap: buf2\"\n-\tF2(buf2[:]) // ERROR \"buf2 escapes to heap\"\n+\tF1(buf1[:])\n+\n+\tvar buf2 [10]byte // ERROR \"moved to heap: buf2$\"\n+\tF2(buf2[:])\n \n \tvar buf3 [10]byte\n-\tF3(buf3[:]) // ERROR \"buf3 does not escape\"\n-\t\n-\tvar buf4 [10]byte // ERROR \"moved to heap: buf4\"\n-\tF4(buf4[:]) // ERROR \"buf4 escapes to heap\"\n+\tF3(buf3[:])\n+\n+\tvar buf4 [10]byte // ERROR \"moved to heap: buf4$\"\n+\tF4(buf4[:])\n }\n \n type Tm struct {\n \tx int\n }\n \n-func (t *Tm) M() { // ERROR \"t does not escape\"\n+func (t *Tm) M() { // ERROR \"t does not escape$\"\n }\n \n func foo141() {\n \tvar f func()\n-\t\n-\tt := new(Tm) // ERROR \"escapes to heap\"\n-\tf = t.M // ERROR \"t.M does not escape\"\n+\n+\tt := new(Tm) // ERROR \"new\\(Tm\\) does not escape$\"\n+\tf = t.M      // ERROR \"t.M does not escape$\"\n \t_ = f\n }\n \n var gf func()\n \n func foo142() {\n-\tt := new(Tm) // ERROR \"escapes to heap\"\n-\tgf = t.M // ERROR \"t.M escapes to heap\"\n+\tt := new(Tm) // ERROR \"new\\(Tm\\) escapes to heap$\"\n+\tgf = t.M     // ERROR \"t.M escapes to heap$\"\n }\n \n // issue 3888.\n func foo143() {\n \tfor i := 0; i < 1000; i++ {\n-\t\tfunc() { // ERROR \"func literal does not escape\"\n+\t\tfunc() { // ERROR \"func literal does not escape$\"\n \t\t\tfor i := 0; i < 1; i++ {\n \t\t\t\tvar t Tm\n-\t\t\t\tt.M() // ERROR \"t does not escape\"\n+\t\t\t\tt.M()\n \t\t\t}\n \t\t}()\n \t}\n@@ -1349,11 +1420,427 @@ func foo144a(*int)\n \n func foo144() {\n \tvar x int\n-\tfoo144a(&x) // ERROR \"&x does not escape\"\n+\tfoo144a(&x)\n \tvar y int\n-\tfoo144b(&y) // ERROR \"&y does not escape\"\n+\tfoo144b(&y)\n }\n \n //go:noescape\n \n func foo144b(*int)\n+\n+// issue 7313: for loop init should not be treated as \"in loop\"\n+\n+type List struct {\n+\tNext *List\n+}\n+\n+func foo145(l List) { // ERROR \"l does not escape$\"\n+\tvar p *List\n+\tfor p = &l; p.Next != nil; p = p.Next {\n+\t}\n+}\n+\n+func foo146(l List) { // ERROR \"l does not escape$\"\n+\tvar p *List\n+\tp = &l\n+\tfor ; p.Next != nil; p = p.Next {\n+\t}\n+}\n+\n+func foo147(l List) { // ERROR \"l does not escape$\"\n+\tvar p *List\n+\tp = &l\n+\tfor p.Next != nil {\n+\t\tp = p.Next\n+\t}\n+}\n+\n+func foo148(l List) { // ERROR \"l does not escape$\"\n+\tfor p := &l; p.Next != nil; p = p.Next {\n+\t}\n+}\n+\n+// related: address of variable should have depth of variable, not of loop\n+\n+func foo149(l List) { // ERROR \"l does not escape$\"\n+\tvar p *List\n+\tfor {\n+\t\tfor p = &l; p.Next != nil; p = p.Next {\n+\t\t}\n+\t}\n+}\n+\n+// issue 7934: missed ... if element type had no pointers\n+\n+var save150 []byte\n+\n+func foo150(x ...byte) { // ERROR \"leaking param: x$\"\n+\tsave150 = x\n+}\n+\n+func bar150() {\n+\tfoo150(1, 2, 3) // ERROR \"... argument escapes to heap$\"\n+}\n+\n+// issue 7931: bad handling of slice of array\n+\n+var save151 *int\n+\n+func foo151(x *int) { // ERROR \"leaking param: x$\"\n+\tsave151 = x\n+}\n+\n+func bar151() {\n+\tvar a [64]int // ERROR \"moved to heap: a$\"\n+\ta[4] = 101\n+\tfoo151(&(&a)[4:8][0])\n+}\n+\n+func bar151b() {\n+\tvar a [10]int // ERROR \"moved to heap: a$\"\n+\tb := a[:]\n+\tfoo151(&b[4:8][0])\n+}\n+\n+func bar151c() {\n+\tvar a [64]int // ERROR \"moved to heap: a$\"\n+\ta[4] = 101\n+\tfoo151(&(&a)[4:8:8][0])\n+}\n+\n+func bar151d() {\n+\tvar a [10]int // ERROR \"moved to heap: a$\"\n+\tb := a[:]\n+\tfoo151(&b[4:8:8][0])\n+}\n+\n+// issue 8120\n+\n+type U struct {\n+\ts *string\n+}\n+\n+func (u *U) String() *string { // ERROR \"leaking param: u to result ~r0 level=1$\"\n+\treturn u.s\n+}\n+\n+type V struct {\n+\ts *string\n+}\n+\n+func NewV(u U) *V { // ERROR \"leaking param: u$\"\n+\treturn &V{u.String()} // ERROR \"&V{...} escapes to heap$\"\n+}\n+\n+func foo152() {\n+\ta := \"a\" // ERROR \"moved to heap: a$\"\n+\tu := U{&a}\n+\tv := NewV(u)\n+\tprintln(v)\n+}\n+\n+// issue 8176 - &x in type switch body not marked as escaping\n+\n+func foo153(v interface{}) *int { // ERROR \"v does not escape\"\n+\tswitch x := v.(type) {\n+\tcase int: // ERROR \"moved to heap: x$\"\n+\t\treturn &x\n+\t}\n+\tpanic(0)\n+}\n+\n+// issue 8185 - &result escaping into result\n+\n+func f() (x int, y *int) { // ERROR \"moved to heap: x$\"\n+\ty = &x\n+\treturn\n+}\n+\n+func g() (x interface{}) { // ERROR \"moved to heap: x$\"\n+\tx = &x\n+\treturn\n+}\n+\n+var sink interface{}\n+\n+type Lit struct {\n+\tp *int\n+}\n+\n+func ptrlitNoescape() {\n+\t// Both literal and element do not escape.\n+\ti := 0\n+\tx := &Lit{&i} // ERROR \"&Lit{...} does not escape$\"\n+\t_ = x\n+}\n+\n+func ptrlitNoEscape2() {\n+\t// Literal does not escape, but element does.\n+\ti := 0        // ERROR \"moved to heap: i$\"\n+\tx := &Lit{&i} // ERROR \"&Lit{...} does not escape$\"\n+\tsink = *x\n+}\n+\n+func ptrlitEscape() {\n+\t// Both literal and element escape.\n+\ti := 0        // ERROR \"moved to heap: i$\"\n+\tx := &Lit{&i} // ERROR \"&Lit{...} escapes to heap$\"\n+\tsink = x\n+}\n+\n+// self-assignments\n+\n+type Buffer struct {\n+\tarr    [64]byte\n+\tarrPtr *[64]byte\n+\tbuf1   []byte\n+\tbuf2   []byte\n+\tstr1   string\n+\tstr2   string\n+}\n+\n+func (b *Buffer) foo() { // ERROR \"b does not escape$\"\n+\tb.buf1 = b.buf1[1:2]   // ERROR \"\\(\\*Buffer\\).foo ignoring self-assignment in b.buf1 = b.buf1\\[1:2\\]$\"\n+\tb.buf1 = b.buf1[1:2:3] // ERROR \"\\(\\*Buffer\\).foo ignoring self-assignment in b.buf1 = b.buf1\\[1:2:3\\]$\"\n+\tb.buf1 = b.buf2[1:2]   // ERROR \"\\(\\*Buffer\\).foo ignoring self-assignment in b.buf1 = b.buf2\\[1:2\\]$\"\n+\tb.buf1 = b.buf2[1:2:3] // ERROR \"\\(\\*Buffer\\).foo ignoring self-assignment in b.buf1 = b.buf2\\[1:2:3\\]$\"\n+}\n+\n+func (b *Buffer) bar() { // ERROR \"leaking param: b$\"\n+\tb.buf1 = b.arr[1:2]\n+}\n+\n+func (b *Buffer) arrayPtr() { // ERROR \"b does not escape\"\n+\tb.buf1 = b.arrPtr[1:2]   // ERROR \"\\(\\*Buffer\\).arrayPtr ignoring self-assignment in b.buf1 = b.arrPtr\\[1:2\\]$\"\n+\tb.buf1 = b.arrPtr[1:2:3] // ERROR \"\\(\\*Buffer\\).arrayPtr ignoring self-assignment in b.buf1 = b.arrPtr\\[1:2:3\\]$\"\n+}\n+\n+func (b *Buffer) baz() { // ERROR \"b does not escape$\"\n+\tb.str1 = b.str1[1:2] // ERROR \"\\(\\*Buffer\\).baz ignoring self-assignment in b.str1 = b.str1\\[1:2\\]$\"\n+\tb.str1 = b.str2[1:2] // ERROR \"\\(\\*Buffer\\).baz ignoring self-assignment in b.str1 = b.str2\\[1:2\\]$\"\n+}\n+\n+func (b *Buffer) bat() { // ERROR \"leaking param content: b$\"\n+\to := new(Buffer) // ERROR \"new\\(Buffer\\) escapes to heap$\"\n+\to.buf1 = b.buf1[1:2]\n+\tsink = o\n+}\n+\n+func quux(sp *string, bp *[]byte) { // ERROR \"bp does not escape$\" \"sp does not escape$\"\n+\t*sp = (*sp)[1:2] // ERROR \"quux ignoring self-assignment in \\*sp = \\(\\*sp\\)\\[1:2\\]$\"\n+\t*bp = (*bp)[1:2] // ERROR \"quux ignoring self-assignment in \\*bp = \\(\\*bp\\)\\[1:2\\]$\"\n+}\n+\n+type StructWithString struct {\n+\tp *int\n+\ts string\n+}\n+\n+// This is escape analysis false negative.\n+// We assign the pointer to x.p but leak x.s. Escape analysis coarsens flows\n+// to just x, and thus &i looks escaping.\n+func fieldFlowTracking() {\n+\tvar x StructWithString\n+\ti := 0 // ERROR \"moved to heap: i$\"\n+\tx.p = &i\n+\tsink = x.s // ERROR \"x.s escapes to heap$\"\n+}\n+\n+// String operations.\n+\n+func slicebytetostring0() {\n+\tb := make([]byte, 20) // ERROR \"make\\(\\[\\]byte, 20\\) does not escape$\"\n+\ts := string(b)        // ERROR \"string\\(b\\) does not escape$\"\n+\t_ = s\n+}\n+\n+func slicebytetostring1() {\n+\tb := make([]byte, 20) // ERROR \"make\\(\\[\\]byte, 20\\) does not escape$\"\n+\ts := string(b)        // ERROR \"string\\(b\\) does not escape$\"\n+\ts1 := s[0:1]\n+\t_ = s1\n+}\n+\n+func slicebytetostring2() {\n+\tb := make([]byte, 20) // ERROR \"make\\(\\[\\]byte, 20\\) does not escape$\"\n+\ts := string(b)        // ERROR \"string\\(b\\) escapes to heap$\"\n+\ts1 := s[0:1]          // ERROR \"moved to heap: s1$\"\n+\tsink = &s1\n+}\n+\n+func slicebytetostring3() {\n+\tb := make([]byte, 20) // ERROR \"make\\(\\[\\]byte, 20\\) does not escape$\"\n+\ts := string(b)        // ERROR \"string\\(b\\) escapes to heap$\"\n+\ts1 := s[0:1]\n+\tsink = s1 // ERROR \"s1 escapes to heap$\"\n+}\n+\n+func addstr0() {\n+\ts0 := \"a\"\n+\ts1 := \"b\"\n+\ts := s0 + s1 // ERROR \"s0 \\+ s1 does not escape$\"\n+\t_ = s\n+}\n+\n+func addstr1() {\n+\ts0 := \"a\"\n+\ts1 := \"b\"\n+\ts := \"c\"\n+\ts += s0 + s1 // ERROR \"s0 \\+ s1 does not escape$\"\n+\t_ = s\n+}\n+\n+func addstr2() {\n+\tb := make([]byte, 20) // ERROR \"make\\(\\[\\]byte, 20\\) does not escape$\"\n+\ts0 := \"a\"\n+\ts := string(b) + s0 // ERROR \"string\\(b\\) \\+ s0 does not escape$\" \"string\\(b\\) does not escape$\"\n+\t_ = s\n+}\n+\n+func addstr3() {\n+\ts0 := \"a\"\n+\ts1 := \"b\"\n+\ts := s0 + s1 // ERROR \"s0 \\+ s1 escapes to heap$\"\n+\ts2 := s[0:1]\n+\tsink = s2 // ERROR \"s2 escapes to heap$\"\n+}\n+\n+func intstring0() bool {\n+\t// string does not escape\n+\tx := '0'\n+\ts := string(x) // ERROR \"string\\(x\\) does not escape$\"\n+\treturn s == \"0\"\n+}\n+\n+func intstring1() string {\n+\t// string does not escape, but the buffer does\n+\tx := '0'\n+\ts := string(x) // ERROR \"string\\(x\\) escapes to heap$\"\n+\treturn s\n+}\n+\n+func intstring2() {\n+\t// string escapes to heap\n+\tx := '0'\n+\ts := string(x) // ERROR \"moved to heap: s$\" \"string\\(x\\) escapes to heap$\"\n+\tsink = &s\n+}\n+\n+func stringtoslicebyte0() {\n+\ts := \"foo\"\n+\tx := []byte(s) // ERROR \"\\(\\[\\]byte\\)\\(s\\) does not escape$\"\n+\t_ = x\n+}\n+\n+func stringtoslicebyte1() []byte {\n+\ts := \"foo\"\n+\treturn []byte(s) // ERROR \"\\(\\[\\]byte\\)\\(s\\) escapes to heap$\"\n+}\n+\n+func stringtoslicebyte2() {\n+\ts := \"foo\"\n+\tsink = []byte(s) // ERROR \"\\(\\[\\]byte\\)\\(s\\) escapes to heap$\"\n+}\n+\n+func stringtoslicerune0() {\n+\ts := \"foo\"\n+\tx := []rune(s) // ERROR \"\\(\\[\\]rune\\)\\(s\\) does not escape$\"\n+\t_ = x\n+}\n+\n+func stringtoslicerune1() []rune {\n+\ts := \"foo\"\n+\treturn []rune(s) // ERROR \"\\(\\[\\]rune\\)\\(s\\) escapes to heap$\"\n+}\n+\n+func stringtoslicerune2() {\n+\ts := \"foo\"\n+\tsink = []rune(s) // ERROR \"\\(\\[\\]rune\\)\\(s\\) escapes to heap$\"\n+}\n+\n+func slicerunetostring0() {\n+\tr := []rune{1, 2, 3} // ERROR \"\\[\\]rune{...} does not escape$\"\n+\ts := string(r)       // ERROR \"string\\(r\\) does not escape$\"\n+\t_ = s\n+}\n+\n+func slicerunetostring1() string {\n+\tr := []rune{1, 2, 3} // ERROR \"\\[\\]rune{...} does not escape$\"\n+\treturn string(r)     // ERROR \"string\\(r\\) escapes to heap$\"\n+}\n+\n+func slicerunetostring2() {\n+\tr := []rune{1, 2, 3} // ERROR \"\\[\\]rune{...} does not escape$\"\n+\tsink = string(r)     // ERROR \"string\\(r\\) escapes to heap$\"\n+}\n+\n+func makemap0() {\n+\tm := make(map[int]int) // ERROR \"make\\(map\\[int\\]int\\) does not escape$\"\n+\tm[0] = 0\n+\tm[1]++\n+\tdelete(m, 1)\n+\tsink = m[0] // ERROR \"m\\[0\\] escapes to heap$\"\n+}\n+\n+func makemap1() map[int]int {\n+\treturn make(map[int]int) // ERROR \"make\\(map\\[int\\]int\\) escapes to heap$\"\n+}\n+\n+func makemap2() {\n+\tm := make(map[int]int) // ERROR \"make\\(map\\[int\\]int\\) escapes to heap$\"\n+\tsink = m\n+}\n+\n+func nonescapingEface(m map[interface{}]bool) bool { // ERROR \"m does not escape$\"\n+\treturn m[\"foo\"] // ERROR \".foo. does not escape$\"\n+}\n+\n+func nonescapingIface(m map[M]bool) bool { // ERROR \"m does not escape$\"\n+\treturn m[MV(0)] // ERROR \"MV\\(0\\) does not escape$\"\n+}\n+\n+func issue10353() {\n+\tx := new(int) // ERROR \"new\\(int\\) escapes to heap$\"\n+\tissue10353a(x)()\n+}\n+\n+func issue10353a(x *int) func() { // ERROR \"leaking param: x$\"\n+\treturn func() { // ERROR \"func literal escapes to heap$\"\n+\t\tprintln(*x)\n+\t}\n+}\n+\n+func issue10353b() {\n+\tvar f func()\n+\tfor {\n+\t\tx := new(int) // ERROR \"new\\(int\\) escapes to heap$\"\n+\t\tf = func() {  // ERROR \"func literal escapes to heap$\"\n+\t\t\tprintln(*x)\n+\t\t}\n+\t}\n+\t_ = f\n+}\n+\n+func issue11387(x int) func() int {\n+\tf := func() int { return x }    // ERROR \"func literal escapes to heap\"\n+\tslice1 := []func() int{f}       // ERROR \"\\[\\].* does not escape\"\n+\tslice2 := make([]func() int, 1) // ERROR \"make\\(.*\\) does not escape\"\n+\tcopy(slice2, slice1)\n+\treturn slice2[0]\n+}\n+\n+func issue12397(x, y int) { // ERROR \"moved to heap: y$\"\n+\t// x does not escape below, because all relevant code is dead.\n+\tif false {\n+\t\tgxx = &x\n+\t} else {\n+\t\tgxx = &y\n+\t}\n+\n+\tif true {\n+\t\tgxx = &y\n+\t} else {\n+\t\tgxx = &x\n+\t}\n+}"}, {"sha": "f1131a268845582d37dab792a10c7fbf90b37d83", "filename": "gcc/testsuite/go.test/test/escape3.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape3.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a4a9c14a3e0cc211eff199b93d131b8eddb28469", "filename": "gcc/testsuite/go.test/test/escape4.go", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape4.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck -0 -m\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -12,38 +12,38 @@ package foo\n var p *int\n \n func alloc(x int) *int { // ERROR \"can inline alloc\" \"moved to heap: x\"\n-\treturn &x // ERROR \"&x escapes to heap\"\n+\treturn &x\n }\n \n var f func()\n \n func f1() {\n-\tp = alloc(2) // ERROR \"inlining call to alloc\" \"&x escapes to heap\" \"moved to heap: x\"\n+\tp = alloc(2) // ERROR \"inlining call to alloc\" \"moved to heap: x\"\n \n \t// Escape analysis used to miss inlined code in closures.\n \n-\tfunc() { // ERROR \"func literal does not escape\"\n-\t\tp = alloc(3) // ERROR \"inlining call to alloc\" \"&x escapes to heap\" \"moved to heap: x\"\n-\t}()\n+\tfunc() { // ERROR \"can inline f1.func1\"\n+\t\tp = alloc(3) // ERROR \"inlining call to alloc\"\n+\t}() // ERROR \"inlining call to f1.func1\" \"inlining call to alloc\" \"moved to heap: x\"\n \n-\tf = func() { // ERROR \"func literal escapes to heap\"\n-\t\tp = alloc(3) // ERROR \"inlining call to alloc\" \"&x escapes to heap\" \"moved to heap: x\"\n+\tf = func() { // ERROR \"func literal escapes to heap\" \"can inline f1.func2\"\n+\t\tp = alloc(3) // ERROR \"inlining call to alloc\" \"moved to heap: x\"\n \t}\n \tf()\n }\n \n func f2() {} // ERROR \"can inline f2\"\n \n-// No inline for panic, recover.\n-func f3() { panic(1) }\n+// No inline for recover; panic now allowed to inline.\n+func f3() { panic(1) } // ERROR \"can inline f3\"\n func f4() { recover() }\n \n func f5() *byte {\n \ttype T struct {\n \t\tx [1]byte\n \t}\n-\tt := new(T) // ERROR \"new.T. escapes to heap\"\n-\treturn &t.x[0] // ERROR \"&t.x.0. escapes to heap\"\n+\tt := new(T)    // ERROR \"new.T. escapes to heap\"\n+\treturn &t.x[0]\n }\n \n func f6() *byte {\n@@ -52,6 +52,6 @@ func f6() *byte {\n \t\t\ty byte\n \t\t}\n \t}\n-\tt := new(T) // ERROR \"new.T. escapes to heap\"\n-\treturn &t.x.y // ERROR \"&t.x.y escapes to heap\"\n+\tt := new(T)   // ERROR \"new.T. escapes to heap\"\n+\treturn &t.x.y\n }"}, {"sha": "2ed2023cd26e72ad3db20eeebf28a6deaae3a363", "filename": "gcc/testsuite/go.test/test/escape5.go", "status": "modified", "additions": 140, "deletions": 20, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape5.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape5.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape5.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck -0 -m -l\n \n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -9,6 +9,11 @@\n \n package foo\n \n+import (\n+\t\"runtime\"\n+\t\"unsafe\"\n+)\n+\n func noleak(p *int) int { // ERROR \"p does not escape\"\n \treturn *p\n }\n@@ -17,19 +22,19 @@ func leaktoret(p *int) *int { // ERROR \"leaking param: p to result\"\n \treturn p\n }\n \n-func leaktoret2(p *int) (*int, *int) { // ERROR \"leaking param: p to result .anon1\" \"leaking param: p to result .anon2\"\n+func leaktoret2(p *int) (*int, *int) { // ERROR \"leaking param: p to result ~r1\" \"leaking param: p to result ~r2\"\n \treturn p, p\n }\n \n-func leaktoret22(p, q *int) (*int, *int) { // ERROR \"leaking param: p to result .anon2\" \"leaking param: q to result .anon3\"\n+func leaktoret22(p, q *int) (*int, *int) { // ERROR \"leaking param: p to result ~r2\" \"leaking param: q to result ~r3\"\n \treturn p, q\n }\n \n-func leaktoret22b(p, q *int) (*int, *int) { // ERROR \"leaking param: p to result .anon3\" \"leaking param: q to result .anon2\"\n+func leaktoret22b(p, q *int) (*int, *int) { // ERROR \"leaking param: p to result ~r3\" \"leaking param: q to result ~r2\"\n \treturn leaktoret22(q, p)\n }\n \n-func leaktoret22c(p, q *int) (*int, *int) { // ERROR \"leaking param: p to result .anon3\" \"leaking param: q to result .anon2\"\n+func leaktoret22c(p, q *int) (*int, *int) { // ERROR \"leaking param: p to result ~r3\" \"leaking param: q to result ~r2\"\n \tr, s := leaktoret22(q, p)\n \treturn r, s\n }\n@@ -58,37 +63,37 @@ func leaktosink(p *int) *int { // ERROR \"leaking param: p\"\n \n func f1() {\n \tvar x int\n-\tp := noleak(&x) // ERROR \"&x does not escape\"\n+\tp := noleak(&x)\n \t_ = p\n }\n \n func f2() {\n \tvar x int\n-\tp := leaktoret(&x) // ERROR \"&x does not escape\"\n+\tp := leaktoret(&x)\n \t_ = p\n }\n \n func f3() {\n-\tvar x int          // ERROR \"moved to heap: x\"\n-\tp := leaktoret(&x) // ERROR \"&x escapes to heap\"\n+\tvar x int // ERROR \"moved to heap: x\"\n+\tp := leaktoret(&x)\n \tgp = p\n }\n \n func f4() {\n-\tvar x int              // ERROR \"moved to heap: x\"\n-\tp, q := leaktoret2(&x) // ERROR \"&x escapes to heap\"\n+\tvar x int // ERROR \"moved to heap: x\"\n+\tp, q := leaktoret2(&x)\n \tgp = p\n \tgp = q\n }\n \n func f5() {\n \tvar x int\n-\tleaktoret22(leaktoret2(&x)) // ERROR \"&x does not escape\"\n+\tleaktoret22(leaktoret2(&x))\n }\n \n func f6() {\n-\tvar x int                               // ERROR \"moved to heap: x\"\n-\tpx1, px2 := leaktoret22(leaktoret2(&x)) // ERROR \"&x escapes to heap\"\n+\tvar x int // ERROR \"moved to heap: x\"\n+\tpx1, px2 := leaktoret22(leaktoret2(&x))\n \tgp = px1\n \t_ = px2\n }\n@@ -117,7 +122,6 @@ func leakrecursive2(p, q *int) (*int, *int) { // ERROR \"leaking param: p\" \"leaki\n \treturn p, q\n }\n \n-\n var global interface{}\n \n type T1 struct {\n@@ -128,24 +132,140 @@ type T2 struct {\n \tY *T1\n }\n \n-func f8(p *T1) (k T2) { // ERROR \"leaking param: p to result k\" \"leaking param: p\"\n+func f8(p *T1) (k T2) { // ERROR \"leaking param: p$\"\n \tif p == nil {\n \t\tk = T2{}\n \t\treturn\n \t}\n \n-\tglobal = p // should make p leak always\n+\t// should make p leak always\n+\tglobal = p\n \treturn T2{p}\n }\n \n func f9() {\n \tvar j T1 // ERROR \"moved to heap: j\"\n-\tf8(&j) // ERROR \"&j escapes to heap\"\n+\tf8(&j)\n }\n \n func f10() {\n \t// These don't escape but are too big for the stack\n-\tvar x [1<<30]byte // ERROR \"moved to heap: x\"\n-\tvar y = make([]byte, 1<<30) // ERROR \"does not escape\"\n+\tvar x [1 << 30]byte         // ERROR \"moved to heap: x\"\n+\tvar y = make([]byte, 1<<30) // ERROR \"make\\(\\[\\]byte, 1 << 30\\) escapes to heap\"\n \t_ = x[0] + y[0]\n }\n+\n+// Test for issue 19687 (passing to unnamed parameters does not escape).\n+func f11(**int) {\n+}\n+func f12(_ **int) {\n+}\n+func f13() {\n+\tvar x *int\n+\tf11(&x)\n+\tf12(&x)\n+\truntime.KeepAlive(&x)\n+}\n+\n+// Test for issue 24305 (passing to unnamed receivers does not escape).\n+type U int\n+\n+func (*U) M()   {}\n+func (_ *U) N() {}\n+\n+func _() {\n+\tvar u U\n+\tu.M()\n+\tu.N()\n+}\n+\n+func fbad24305() {\n+\t// BAD u should not be heap allocated\n+\tvar u U // ERROR \"moved to heap: u\"\n+\t(*U).M(&u)\n+\t(*U).N(&u)\n+}\n+\n+// Issue 24730: taking address in a loop causes unnecessary escape\n+type T24730 struct {\n+\tx [64]byte\n+}\n+\n+func (t *T24730) g() { // ERROR \"t does not escape\"\n+\ty := t.x[:]\n+\tfor i := range t.x[:] {\n+\t\ty = t.x[:]\n+\t\ty[i] = 1\n+\t}\n+\n+\tvar z *byte\n+\tfor i := range t.x[:] {\n+\t\tz = &t.x[i]\n+\t\t*z = 2\n+\t}\n+}\n+\n+// Issue 15730: copy causes unnecessary escape\n+\n+var sink []byte\n+var sink2 []int\n+var sink3 []*int\n+\n+func f15730a(args ...interface{}) { // ERROR \"args does not escape\"\n+\tfor _, arg := range args {\n+\t\tswitch a := arg.(type) {\n+\t\tcase string:\n+\t\t\tcopy(sink, a)\n+\t\t}\n+\t}\n+}\n+\n+func f15730b(args ...interface{}) { // ERROR \"args does not escape\"\n+\tfor _, arg := range args {\n+\t\tswitch a := arg.(type) {\n+\t\tcase []int:\n+\t\t\tcopy(sink2, a)\n+\t\t}\n+\t}\n+}\n+\n+func f15730c(args ...interface{}) { // ERROR \"leaking param content: args\"\n+\tfor _, arg := range args {\n+\t\tswitch a := arg.(type) {\n+\t\tcase []*int:\n+\t\t\t// copy pointerful data should cause escape\n+\t\t\tcopy(sink3, a)\n+\t\t}\n+\t}\n+}\n+\n+// Issue 29000: unnamed parameter is not handled correctly\n+\n+var sink4 interface{}\n+var alwaysFalse = false\n+\n+func f29000(_ int, x interface{}) { // ERROR \"leaking param: x\"\n+\tsink4 = x\n+\tif alwaysFalse {\n+\t\tg29000()\n+\t}\n+}\n+\n+func g29000() {\n+\tx := 1\n+\tf29000(2, x) // ERROR \"x escapes to heap\"\n+}\n+\n+// Issue 28369: taking an address of a parameter and converting it into a uintptr causes an\n+// unnecessary escape.\n+\n+var sink28369 uintptr\n+\n+func f28369(n int) int {\n+\tif n == 0 {\n+\t\tsink28369 = uintptr(unsafe.Pointer(&n))\n+\t\treturn n\n+\t}\n+\n+\treturn 1 + f28369(n-1)\n+}"}, {"sha": "2f59d81a614d4857ec61f5e786a2e1f0a544bfb4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug083.dir/bug0.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.dir%2Fbug0.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.dir%2Fbug0.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.dir%2Fbug0.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "ea5bcfe205ad5da6f954bd31cdc317537f8ab457", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug083.dir/bug1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.dir%2Fbug1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.dir%2Fbug1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.dir%2Fbug1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "7a6e34747f6605013de116965fbbfb8146b21a79", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug088.dir/bug0.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.dir%2Fbug0.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.dir%2Fbug0.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.dir%2Fbug0.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2568e37d0209cef4ac690c094c2c2559298fff53", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug088.dir/bug1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.dir%2Fbug1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.dir%2Fbug1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.dir%2Fbug1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "7494c580b77df90b611f873c52e4f3431aae6967", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug106.dir/bug0.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.dir%2Fbug0.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.dir%2Fbug0.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.dir%2Fbug0.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "eff0d36ed29532d38db96962fa511d18e9f10f93", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug106.dir/bug1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.dir%2Fbug1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.dir%2Fbug1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.dir%2Fbug1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "cfec4c9f1f47138747714a37081c5b928425dcee", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug108.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug108.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug108.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug108.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -6,6 +6,6 @@\n \n package main\n func f() {\n-\tv := 1 << 1025;\t\t// ERROR \"overflow|stupid shift\"\n+\tv := 1 << 1025;\t\t// ERROR \"overflow|shift count too large\"\n \t_ = v\n }"}, {"sha": "22c71817526236f9f01b1f2abeb6a987866dd7b0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug121.go", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug121.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug121.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug121.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -15,4 +15,3 @@ type I interface {\n type J interface {\n \th T;  // ERROR \"syntax|signature\"\n }\n-"}, {"sha": "19a2bfbd4b545214ecd153ea7e7cf12c3a3f76a1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug133.dir/bug0.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug0.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug0.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug0.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "dd59b2f2ec193b58a436c20f501c69c48e599c72", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug133.dir/bug1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b6184c2e75b03e047441741e301690f16399a03a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug133.dir/bug2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.dir%2Fbug2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "5fef5ad38acb0b2da44161e2523d9ece7e4ffbd0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug1515.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug1515.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug1515.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug1515.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2673552d80b8a6a2a6286ff79dc01987d2772ca9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug160.dir/x.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.dir%2Fx.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.dir%2Fx.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.dir%2Fx.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "428808dd19879a0a56ce39b90a60363a19c914f4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug160.dir/y.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.dir%2Fy.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.dir%2Fy.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.dir%2Fy.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "62ab7c2fa1cdf79e0bf406ba8f6b9bfb0b2936bd", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug169.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug169.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug169.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug169.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -5,6 +5,6 @@\n // license that can be found in the LICENSE file.\n \n package main\n-var x = ''';\t\t// ERROR \"char\"\n+var x = ''';\t\t// ERROR \"char|rune\"\n \n "}, {"sha": "3515c649bbeb1b5340bc6b1b13fde66666b0f64a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug173.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug173.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug173.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug173.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -18,4 +18,6 @@ func main() {\n \t}\n \tfor _ = range t {\n \t}\n+\tfor range t {\n+\t}\n }"}, {"sha": "7001dd081e9ab0c7e23655f081e1105d1ffd726f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug176.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug176.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug176.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug176.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -9,6 +9,6 @@ package main\n var x int\n \n var a = []int{ x: 1}\t// ERROR \"constant\"\n-var b = [...]int{ x : 1}\t// ERROR \"constant\"\n+var b = [...]int{x: 1}\t// GCCGO_ERROR \"constant\"\n var c = map[int]int{ x: 1}\n "}, {"sha": "aef7bd2d8944a883c344b558dbdff1abb11aad54", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug195.go", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug195.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug195.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug195.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -6,22 +6,22 @@\n \n package main\n \n-type I1 interface { I2 }\t// ERROR \"interface\"\n+type I1 interface{ I2 } // ERROR \"interface\"\n type I2 int\n \n-type I3 interface { int }\t// ERROR \"interface\"\n+type I3 interface{ int } // ERROR \"interface\"\n \n type S struct {\n-\tx interface{ S }\t// ERROR \"interface\"\n+\tx interface{ S } // ERROR \"interface\"\n }\n-type I4 interface {\n-\tI4\t// ERROR \"interface\"\n+type I4 interface { // GC_ERROR \"invalid recursive type I4\\n\\tLINE: I4 refers to\\n\\tLINE: I4$\"\n+\tI4 // GCCGO_ERROR \"interface\"\n }\n \n-type I5 interface {\n-\tI6\t// GCCGO_ERROR \"interface\"\n+type I5 interface { // GC_ERROR \"invalid recursive type I5\\n\\tLINE: I5 refers to\\n\\tLINE+4: I6 refers to\\n\\tLINE: I5$\"\n+\tI6 // GCCGO_ERROR \"interface\"\n }\n \n type I6 interface {\n-\tI5\t// ERROR \"interface\"\n+\tI5 // GCCGO_ERROR \"interface\"\n }"}, {"sha": "68647ec372b46328f2c1b16683808bb12fb95bde", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug203.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug203.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug203.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug203.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "91efa3ff79005ed51d83bbaf3c3ca3679cd05dfe", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug206.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// cmpout\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f3c25e727f0db8ec2559b2d170840e117a31102d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug214.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug214.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug214.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug214.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -5,7 +5,7 @@\n // license that can be found in the LICENSE file.\n \n // Used to crash the compiler.\n-// http://code.google.com/p/go/issues/detail?id=88\n+// https://golang.org/issue/88\n \n package main\n "}, {"sha": "b27cc7db1a91620bf6804de1d4d59fab6029a05a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug215.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug215.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug215.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug215.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -5,7 +5,7 @@\n // license that can be found in the LICENSE file.\n \n // Used to crash the compiler.\n-// http://code.google.com/p/go/issues/detail?id=158\n+// https://golang.org/issue/158\n \n package main\n "}, {"sha": "470369a6a80f8d155660e56babd759c9455a7deb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug216.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug216.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug216.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug216.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -5,7 +5,7 @@\n // license that can be found in the LICENSE file.\n \n // Used to be rejected\n-// http://code.google.com/p/go/issues/detail?id=188\n+// https://golang.org/issue/188\n \n package main\n "}, {"sha": "ea836b9b6d591c4eb51e148c015d8b21251d0186", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug217.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug217.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug217.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug217.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -5,11 +5,13 @@\n // license that can be found in the LICENSE file.\n \n // Used to crash\n-// http://code.google.com/p/go/issues/detail?id=204\n+// https://golang.org/issue/204\n \n package main\n \n func () x()\t// ERROR \"no receiver\"\n \n func (a b, c d) x()\t// ERROR \"multiple receiver\"\n \n+type b int\n+"}, {"sha": "f159f05fa8d447118a29ce72b04cec954ad1af0e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug218.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug218.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug218.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug218.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -5,7 +5,7 @@\n // license that can be found in the LICENSE file.\n \n // Crashes 6g, 8g\n-// http://code.google.com/p/go/issues/detail?id=238\n+// https://golang.org/issue/238\n \n package main\n "}, {"sha": "4275474a972a1684c1c33c83b19c8af822d51fe3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug221.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug221.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug221.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug221.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -7,7 +7,7 @@\n // function call arg reordering was picking out 1 call that\n // didn't need to be in a temporary, but it was picking\n // out the first call instead of the last call.\n-// http://code.google.com/p/go/issues/detail?id=370\n+// https://golang.org/issue/370\n \n package main\n "}, {"sha": "afbdd977d173ceeeb66279255d2cbb77fedc6a26", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug227.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug227.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug227.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug227.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f7ac670689bd73c35f006f2fd6e51813dc818bee", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug228.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug228.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug228.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug228.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a30202fa2c75cd81542d67756981c8416087e80d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug229.go", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug229.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug229.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug229.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -10,11 +10,11 @@ import \"testing\"\n \n func main() {\n \tvar t testing.T\n-\t\n+\n \t// make sure error mentions that\n \t// name is unexported, not just \"name not found\".\n \n-\tt.name = nil\t// ERROR \"unexported\"\n-\t\n-\tprintln(testing.anyLowercaseName(\"asdf\"))\t// ERROR \"unexported\" \"undefined: testing.anyLowercaseName\"\n+\tt.common.name = nil // ERROR \"unexported\"\n+\n+\tprintln(testing.anyLowercaseName(\"asdf\")) // ERROR \"unexported\"\n }"}, {"sha": "e5eead52e200d88ac6c4640be211601cf9452c85", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug230.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug230.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug230.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug230.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f64ddc3e757cd0cecd749b32fc684e7c40ba3a55", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug231.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug231.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug231.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug231.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "10b0c521a40b0480b4ace208417ff1b033a105b2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug232.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug232.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug232.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug232.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "d4e1e078169eea6fb92e51657fa104510a2921a5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug233.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug233.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug233.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug233.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "0d37ce22f5bb2504b6d4a858cfa8ba5e516ea954", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug234.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug234.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug234.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug234.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a33092bdb64aa8fcd18c2911560b3798b5f67feb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug235.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug235.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug235.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug235.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "de7e8e3d8a22d82ab7f9dae7c893305da462dc29", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug236.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug236.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug236.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug236.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "75d6132df96bccabde84439003d5ff5eedccacfc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug237.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug237.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug237.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug237.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "5b6bb7517d26aa5d26d9abc55799e1d14f5c1962", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug243.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug243.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug243.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug243.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "adf62f98b5426115aabba792810127453c5dbb3b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug245.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug245.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug245.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug245.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "6550bd87c0d9f91c8996228767687cc9b8756c7b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug247.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug247.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug247.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug247.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f1db77d2f5d31976a2af3c395e0e158f81400fdc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug248.dir/bug1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file\n \n-package p\n+package q\n \n type T struct {\n \tX, Y int"}, {"sha": "c0fdecfdb7b1e2a05abfccb67bea8e85ada95b2e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug248.dir/bug2.go", "status": "modified", "additions": 37, "deletions": 69, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -2,19 +2,20 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file\n \n-package main\n+package s\n \n import (\n \tp0 \"./bug0\"\n \tp1 \"./bug1\"\n-\n-\t\"reflect\"\n-\t\"strings\"\n )\n \n+// both p0.T and p1.T are struct { X, Y int }.\n+\n var v0 p0.T\n var v1 p1.T\n \n+// interfaces involving the two\n+\n type I0 interface {\n \tM(p0.T)\n }\n@@ -23,83 +24,50 @@ type I1 interface {\n \tM(p1.T)\n }\n \n+// t0 satisfies I0 and p0.I\n type t0 int\n \n func (t0) M(p0.T) {}\n \n+// t1 satisfies I1 and p1.I\n type t1 float64\n \n func (t1) M(p1.T) {}\n \n+// check static interface assignments\n var i0 I0 = t0(0) // ok\n var i1 I1 = t1(0) // ok\n \n+var i2 I0 = t1(0) // ERROR \"does not implement|incompatible\"\n+var i3 I1 = t0(0) // ERROR \"does not implement|incompatible\"\n+\n var p0i p0.I = t0(0) // ok\n var p1i p1.I = t1(0) // ok\n \n-func main() {\n-\t// check that reflect paths are correct,\n-\t// meaning that reflect data for v0, v1 didn't get confused.\n-\n-\t// path is full (rooted) path name.  check suffix for gc, prefix for gccgo\n-\tif s := reflect.TypeOf(v0).PkgPath(); !strings.HasSuffix(s, \"/bug0\") && !strings.HasPrefix(s, \"bug0\") {\n-\t\tprintln(\"bad v0 path\", len(s), s)\n-\t\tpanic(\"fail\")\n-\t}\n-\tif s := reflect.TypeOf(v1).PkgPath(); !strings.HasSuffix(s, \"/bug1\") && !strings.HasPrefix(s, \"bug1\") {\n-\t\tprintln(\"bad v1 path\", s)\n-\t\tpanic(\"fail\")\n-\t}\n-\n-\t// check that dynamic interface check doesn't get confused\n-\tvar i interface{} = t0(0)\n-\tif _, ok := i.(I1); ok {\n-\t\tprintln(\"used t0 as i1\")\n-\t\tpanic(\"fail\")\n-\t}\n-\tif _, ok := i.(p1.I); ok {\n-\t\tprintln(\"used t0 as p1.I\")\n-\t\tpanic(\"fail\")\n-\t}\n-\n-\ti = t1(1)\n-\tif _, ok := i.(I0); ok {\n-\t\tprintln(\"used t1 as i0\")\n-\t\tpanic(\"fail\")\n-\t}\n-\tif _, ok := i.(p0.I); ok {\n-\t\tprintln(\"used t1 as p0.I\")\n-\t\tpanic(\"fail\")\n-\t}\n-\n-\t// check that type switch works.\n-\t// the worry is that if p0.T and p1.T have the same hash,\n-\t// the binary search will handle one of them incorrectly.\n-\tfor j := 0; j < 3; j++ {\n-\t\tswitch j {\n-\t\tcase 0:\n-\t\t\ti = p0.T{}\n-\t\tcase 1:\n-\t\t\ti = p1.T{}\n-\t\tcase 2:\n-\t\t\ti = 3.14\n-\t\t}\n-\t\tswitch i.(type) {\n-\t\tcase p0.T:\n-\t\t\tif j != 0 {\n-\t\t\t\tprintln(\"type switch p0.T\")\n-\t\t\t\tpanic(\"fail\")\n-\t\t\t}\n-\t\tcase p1.T:\n-\t\t\tif j != 1 {\n-\t\t\t\tprintln(\"type switch p1.T\")\n-\t\t\t\tpanic(\"fail\")\n-\t\t\t}\n-\t\tdefault:\n-\t\t\tif j != 2 {\n-\t\t\t\tprintln(\"type switch default\", j)\n-\t\t\t\tpanic(\"fail\")\n-\t\t\t}\n-\t\t}\n-\t}\n+var p0i1 p0.I = t1(0) // ERROR \"does not implement|incompatible\"\n+var p0i2 p1.I = t0(0) // ERROR \"does not implement|incompatible\"\n+\n+func foobar() {\n+\t// check that cannot assign one to the other,\n+\t// but can convert.\n+\tv0 = v1 // ERROR \"assign\"\n+\tv1 = v0 // ERROR \"assign\"\n+\n+\tv0 = p0.T(v1)\n+\tv1 = p1.T(v0)\n+\n+\ti0 = i1   // ERROR \"cannot use|incompatible\"\n+\ti1 = i0   // ERROR \"cannot use|incompatible\"\n+\tp0i = i1  // ERROR \"cannot use|incompatible\"\n+\tp1i = i0  // ERROR \"cannot use|incompatible\"\n+\ti0 = p1i  // ERROR \"cannot use|incompatible\"\n+\ti1 = p0i  // ERROR \"cannot use|incompatible\"\n+\tp0i = p1i // ERROR \"cannot use|incompatible\"\n+\tp1i = p0i // ERROR \"cannot use|incompatible\"\n+\n+\ti0 = p0i\n+\tp0i = i0\n+\n+\ti1 = p1i\n+\tp1i = i1\n }"}, {"sha": "ba547d64a1074fd63facf0d7416a4284ffcfd40f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug248.dir/bug3.go", "status": "modified", "additions": 67, "deletions": 35, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.dir%2Fbug3.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -7,15 +7,14 @@ package main\n import (\n \tp0 \"./bug0\"\n \tp1 \"./bug1\"\n-)\n \n-// both p0.T and p1.T are struct { X, Y int }.\n+\t\"reflect\"\n+\t\"strings\"\n+)\n \n var v0 p0.T\n var v1 p1.T\n \n-// interfaces involving the two\n-\n type I0 interface {\n \tM(p0.T)\n }\n@@ -24,50 +23,83 @@ type I1 interface {\n \tM(p1.T)\n }\n \n-// t0 satisfies I0 and p0.I\n type t0 int\n \n func (t0) M(p0.T) {}\n \n-// t1 satisfies I1 and p1.I\n type t1 float64\n \n func (t1) M(p1.T) {}\n \n-// check static interface assignments\n var i0 I0 = t0(0) // ok\n var i1 I1 = t1(0) // ok\n \n-var i2 I0 = t1(0) // ERROR \"does not implement|incompatible\"\n-var i3 I1 = t0(0) // ERROR \"does not implement|incompatible\"\n-\n var p0i p0.I = t0(0) // ok\n var p1i p1.I = t1(0) // ok\n \n-var p0i1 p0.I = t1(0) // ERROR \"does not implement|incompatible\"\n-var p0i2 p1.I = t0(0) // ERROR \"does not implement|incompatible\"\n-\n func main() {\n-\t// check that cannot assign one to the other,\n-\t// but can convert.\n-\tv0 = v1 // ERROR \"assign\"\n-\tv1 = v0 // ERROR \"assign\"\n-\n-\tv0 = p0.T(v1)\n-\tv1 = p1.T(v0)\n-\n-\ti0 = i1   // ERROR \"cannot use|incompatible\"\n-\ti1 = i0   // ERROR \"cannot use|incompatible\"\n-\tp0i = i1  // ERROR \"cannot use|incompatible\"\n-\tp1i = i0  // ERROR \"cannot use|incompatible\"\n-\ti0 = p1i  // ERROR \"cannot use|incompatible\"\n-\ti1 = p0i  // ERROR \"cannot use|incompatible\"\n-\tp0i = p1i // ERROR \"cannot use|incompatible\"\n-\tp1i = p0i // ERROR \"cannot use|incompatible\"\n-\n-\ti0 = p0i\n-\tp0i = i0\n-\n-\ti1 = p1i\n-\tp1i = i1\n+\t// check that reflect paths are correct,\n+\t// meaning that reflect data for v0, v1 didn't get confused.\n+\n+\t// path is full (rooted) path name.  check suffix for gc, prefix for gccgo\n+\tif s := reflect.TypeOf(v0).PkgPath(); !strings.HasSuffix(s, \"/bug0\") && !strings.HasPrefix(s, \"bug0\") {\n+\t\tprintln(\"bad v0 path\", len(s), s)\n+\t\tpanic(\"fail\")\n+\t}\n+\tif s := reflect.TypeOf(v1).PkgPath(); !strings.HasSuffix(s, \"/bug1\") && !strings.HasPrefix(s, \"bug1\") {\n+\t\tprintln(\"bad v1 path\", s)\n+\t\tpanic(\"fail\")\n+\t}\n+\n+\t// check that dynamic interface check doesn't get confused\n+\tvar i interface{} = t0(0)\n+\tif _, ok := i.(I1); ok {\n+\t\tprintln(\"used t0 as i1\")\n+\t\tpanic(\"fail\")\n+\t}\n+\tif _, ok := i.(p1.I); ok {\n+\t\tprintln(\"used t0 as p1.I\")\n+\t\tpanic(\"fail\")\n+\t}\n+\n+\ti = t1(1)\n+\tif _, ok := i.(I0); ok {\n+\t\tprintln(\"used t1 as i0\")\n+\t\tpanic(\"fail\")\n+\t}\n+\tif _, ok := i.(p0.I); ok {\n+\t\tprintln(\"used t1 as p0.I\")\n+\t\tpanic(\"fail\")\n+\t}\n+\n+\t// check that type switch works.\n+\t// the worry is that if p0.T and p1.T have the same hash,\n+\t// the binary search will handle one of them incorrectly.\n+\tfor j := 0; j < 3; j++ {\n+\t\tswitch j {\n+\t\tcase 0:\n+\t\t\ti = p0.T{}\n+\t\tcase 1:\n+\t\t\ti = p1.T{}\n+\t\tcase 2:\n+\t\t\ti = 3.14\n+\t\t}\n+\t\tswitch i.(type) {\n+\t\tcase p0.T:\n+\t\t\tif j != 0 {\n+\t\t\t\tprintln(\"type switch p0.T\")\n+\t\t\t\tpanic(\"fail\")\n+\t\t\t}\n+\t\tcase p1.T:\n+\t\t\tif j != 1 {\n+\t\t\t\tprintln(\"type switch p1.T\")\n+\t\t\t\tpanic(\"fail\")\n+\t\t\t}\n+\t\tdefault:\n+\t\t\tif j != 2 {\n+\t\t\t\tprintln(\"type switch default\", j)\n+\t\t\t\tpanic(\"fail\")\n+\t\t\t}\n+\t\t}\n+\t}\n }"}, {"sha": "93d2fdb67117a577c8bc3a13d703b4fdbfc22411", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug248.go", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug248.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,15 +1,12 @@\n-// $G $D/$F.dir/bug0.go &&\n-// $G $D/$F.dir/bug1.go &&\n-// $G $D/$F.dir/bug2.go &&\n-// errchk $G -e $D/$F.dir/bug3.go &&\n-// $L bug2.$A &&\n-// ./$A.out || echo BUG: failed to compile\n-\n-// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n-// To run this test you must use the ./run shell script.\n+// +build !nacl,!js,!plan9\n+// errorcheckandrundir -1\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-ignored\n+package ignored\n+\n+// Compile: bug0.go, bug1.go\n+// Compile and errorCheck: bug2.go\n+// Link and run: bug3.go"}, {"sha": "ec9699a894ef034e790d87f4ba8d78e2cc916bf1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug249.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug249.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug249.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug249.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2009 The Go Authors.  All rights reserved.\n+// Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "9fb34c33d5ef1c03bf3c87344b11395384795465", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug250.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug250.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug250.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug250.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f678925fbb61ab74b5cfedc776cd31bb8a80b649", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug252.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug252.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug252.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug252.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "933f3f1ccc2a8ef1d604ea01b0b10f56ae1606b5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug253.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug253.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug253.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug253.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "3902cd5e899c18e1e3fdcd67840d6bc812cac6b6", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug254.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug254.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug254.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug254.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "705a0321b4ef2aa45e2a7f2c59c0bdf59aee27b1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug256.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug256.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug256.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug256.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b05c37a3312b7f275fdac954843159b12d756ab8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug257.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug257.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug257.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug257.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "075da87577cb6c76650080a6b18ba3f48891b00e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug258.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug258.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug258.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug258.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "857b442010093b3f7d16c9f2c314343b96905582", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug259.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug259.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug259.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug259.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "abe6431b515305969c7bb349ee94b93f1542e78b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug261.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug261.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug261.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug261.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2f320def263d4012d84302e15be12ba4072907b9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug264.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug264.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug264.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug264.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -4,7 +4,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Test case for http://code.google.com/p/go/issues/detail?id=692\n+// Test case for https://golang.org/issue/692\n \n package main\n "}, {"sha": "5e0516691a0f35c50aced22371d962b44b8d0776", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug265.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug265.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug265.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug265.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -4,7 +4,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Test case for http://code.google.com/p/go/issues/detail?id=700\n+// Test case for https://golang.org/issue/700\n \n package main\n "}, {"sha": "5d2334c05a84fd2cd843a5a687bdfe17c5e23e57", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug266.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug266.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug266.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug266.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "ec0dbc6c34bb44d31390ab93da93de0f5ecf4ae3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug269.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug269.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug269.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug269.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=749\n+// https://golang.org/issue/749\n \n package main\n "}, {"sha": "a6abbfef7e88bf8e227853ca61112b99af225402", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug271.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug271.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug271.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug271.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=662\n+// https://golang.org/issue/662\n \n package main\n "}, {"sha": "6b8862f697480ec5db5e5de5c9824e417939494e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug272.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug272.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug272.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug272.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=589\n+// https://golang.org/issue/589\n \n package main\n "}, {"sha": "2af8800171ed4f7991006c6fbc999644ee178813", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug273.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug273.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug273.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug273.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -14,7 +14,7 @@ var bug = false\n \n var minus1 = -1\n var five = 5\n-var big int64 = 10 | 1<<40\n+var big int64 = 10 | 1<<46\n \n type block [1 << 19]byte\n "}, {"sha": "e93f30ee96910e124245df1d9c94f17cf6f06c3b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug274.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug274.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug274.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug274.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -13,7 +13,7 @@\n // Both gccgo and gofmt correctly refuse this program as is and accept it\n // when the semicolons are present.\n \n-// This is a test case for issue 777 ( http://code.google.com/p/go/issues/detail?id=777 ).\n+// This is a test case for issue 777 ( https://golang.org/issue/777 ).\n \n package main\n "}, {"sha": "d3be7548aaeb350fff356162b9a8272f5a60501c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug275.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug275.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug275.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug275.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "4817ebfee4e1faffb3b76171d8c5ea316dbe52a3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug278.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug278.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug278.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug278.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "3b1df3b8feb9385e539c2e0200849b2c74de564e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug279.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug279.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug279.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug279.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=799\n+// https://golang.org/issue/799\n \n package main\n "}, {"sha": "afec57f037ad6ba7fd401347b32fce52951a166f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug280.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug280.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug280.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug280.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=808\n+// https://golang.org/issue/808\n \n package main\n "}, {"sha": "c65530f7ddb12134a9e1dc289b4dd81cc2376878", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug281.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug281.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug281.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug281.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=807\n+// https://golang.org/issue/807\n \n package main\n "}, {"sha": "0f7422c0ba0e2d68c30a28e4c702785daa2523f5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug282.dir/p1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug282.dir%2Fp1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug282.dir%2Fp1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug282.dir%2Fp1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f614507946602c75adfc1d76ba41b1908c7b9da7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug282.dir/p2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug282.dir%2Fp2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug282.dir%2Fp2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug282.dir%2Fp2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "ef1953b2feb7fdc1d63a156bdc7e3b07ada91adb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug283.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug283.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug283.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug283.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=806\n+// https://golang.org/issue/806\n // triggered out of registers on 8g\n \n package bug283"}, {"sha": "0632ab4ba793c5d452b7d95ec554bb6b8b3b20c5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug285.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug285.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug285.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug285.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,12 +1,12 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // Test for issue 778: Map key values that are assignment\n // compatible with the map key type must be accepted according\n-// to the spec: http://golang.org/doc/go_spec.html#Indexes .\n+// to the spec: https://golang.org/doc/go_spec.html#Indexes .\n \n package main\n "}, {"sha": "b1271f465d26ba316a74e1764871cf2744e6fec8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug286.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug286.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug286.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug286.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "94582a86955ef9c218a72258d356ee01b3061cce", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug287.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug287.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug287.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug287.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "0a53d32e9ffa5ff8ea8b67ce8b0a10f2a963bb7f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug288.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug288.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug288.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug288.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "3fc7fb2eeff7cf002d43bbfaedf4ed3d971baf3a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug289.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug289.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug289.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug289.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -9,14 +9,14 @@\n package main\n \n func f1() {\n-\ta, b := f()\t// ERROR \"mismatch|does not match\"\n+\ta, b := f()\t// ERROR \"assignment mismatch|does not match\"\n \t_ = a\n \t_ = b\n }\n \n func f2() {\n \tvar a, b int\n-\ta, b = f()\t// ERROR \"mismatch|does not match\"\n+\ta, b = f()\t// ERROR \"assignment mismatch|does not match\"\n \t_ = a\n \t_ = b\n }"}, {"sha": "4eee285a355f2f6fcb3cac17b9a824403b3b2d49", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug290.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug290.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug290.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug290.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=920\n+// https://golang.org/issue/920\n \n package main\n "}, {"sha": "ac84a7e5ef3dd65d7c60c57d67ed3e68734e0bb3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug291.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug291.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug291.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug291.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=915\n+// https://golang.org/issue/915\n \n package main\n "}, {"sha": "1130a287d863ce2d1a23295307f841d1bf6af0dc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug292.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug292.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug292.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug292.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=843\n+// https://golang.org/issue/843\n \n package main\n "}, {"sha": "ae7cc1fd1cbbb799a78bd7daf22fb7761fa30d67", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug293.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug293.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug293.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug293.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=846\n+// https://golang.org/issue/846\n \n package main\n "}, {"sha": "b35b7719162c5b83f6f6ccf49b42a7356aa9c23e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug294.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug294.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug294.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug294.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=800\n+// https://golang.org/issue/800\n \n package main\n "}, {"sha": "d1c961ce1d8b868e150b8be38281584b49629722", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug295.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug295.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug295.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug295.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2ef4e662203f152520b2c728b4d3ada904b4fcef", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug296.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug296.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug296.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug296.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "c2bd253d056eac03045250d3d29fa89ba79ac2cf", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug297.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug297.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug297.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug297.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -11,5 +11,5 @@ package main\n type ByteSize float64\n const (\n \t_ = iota;   // ignore first value by assigning to blank identifier\n-\tKB ByteSize = 1<<(10*X) // ERROR \"undefined\" \"is not a constant|as type ByteSize\"\n+\tKB ByteSize = 1<<(10*X) // ERROR \"undefined\"\n )"}, {"sha": "0aed03216d56c883288ee5c912848002d94459f5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug298.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug298.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug298.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug298.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "cf11bcc1e0e6b69043b9107fae8a98f875040246", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug299.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug299.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug299.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug299.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "1695a9640e7a4cc3ac18d3e26fb634164ba4a34f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug300.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug300.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug300.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug300.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2be62b8bc806cd316a8243ef79ceb46084f78d3a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug301.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug301.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug301.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug301.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// http://code.google.com/p/go/issues/detail?id=990\n+// https://golang.org/issue/990\n \n package main\n "}, {"sha": "52c054fb4c663339ff153569477a56d345f5f488", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug302.dir/main.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.dir%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.dir%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.dir%2Fmain.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,12 +1,12 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n // Check that the export information is correct in p.6.\n-import _ \"./p\"\n+import _ \"p\"\n \n // Check that it's still correct in pp.a (which contains p.6).\n-import _ \"./pp\"\n+import _ \"pp\"\n "}, {"sha": "0be521b4f88d51fa095ed4aba7f50d61e9fe1796", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug302.dir/p.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.dir%2Fp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.dir%2Fp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.dir%2Fp.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "87f9d4ef70ccc1ddc0cc6f3a528fc161294d9402", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug302.go", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug302.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,9 +1,45 @@\n-// $G $D/bug302.dir/p.go && pack grc pp.a p.$A && $G $D/bug302.dir/main.go\n+// +build !nacl,!js\n+// run\n \n-// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n-// To run this test you must use the ./run shell script.\n-\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"os\"\n+\t\"os/exec\"\n+\t\"path/filepath\"\n+)\n+\n+var tmpDir string\n+\n+func main() {\n+\tfb, err := filepath.Abs(\"fixedbugs\")\n+\tif err == nil {\n+\t\ttmpDir, err = ioutil.TempDir(\"\", \"bug302\")\n+\t}\n+\tif err != nil {\n+\t\tfmt.Println(err)\n+\t\tos.Exit(1)\n+\t}\n+\tdefer os.RemoveAll(tmpDir)\n+\n+\trun(\"go\", \"tool\", \"compile\", filepath.Join(fb, \"bug302.dir\", \"p.go\"))\n+\trun(\"go\", \"tool\", \"pack\", \"grc\", \"pp.a\", \"p.o\")\n+\trun(\"go\", \"tool\", \"compile\", \"-I\", \".\", filepath.Join(fb, \"bug302.dir\", \"main.go\"))\n+}\n+\n+func run(cmd string, args ...string) {\n+\tc := exec.Command(cmd, args...)\n+\tc.Dir = tmpDir\n+\tout, err := c.CombinedOutput()\n+\tif err != nil {\n+\t\tfmt.Println(string(out))\n+\t\tfmt.Println(err)\n+\t\tos.Exit(1)\n+\t}\n+}"}, {"sha": "aef8b22ba78b2ebadc4179772e8108176bedcf77", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug303.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug303.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug303.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug303.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "4073073eec646a0fadce6709612f565fbdf8215a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug304.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug304.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug304.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug304.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "0c34b1a9e71aa53c8f6cf27a939e5d778bbf7c96", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug305.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug305.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug305.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug305.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b28551807d663b885f3ff0e167651869367be5c3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug306.dir/p1.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug306.dir%2Fp1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug306.dir%2Fp1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug306.dir%2Fp1.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f614507946602c75adfc1d76ba41b1908c7b9da7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug306.dir/p2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug306.dir%2Fp2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug306.dir%2Fp2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug306.dir%2Fp2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a23903c49bccfe83457e4c31569907ba4d405a89", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug308.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug308.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug308.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug308.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "d707aa3c934968f8e78cad4f7ac9cec4814cc926", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug309.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug309.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug309.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug309.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f5cab44c7e2c93bf0b1b35b38c0d576ab2c22baf", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug311.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug311.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug311.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug311.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "af423e5b293f8849008dd1661273f74de2804f69", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug312.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug312.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug312.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug312.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "335f84d4ba16b2e1fa2ae0c178429289ef991801", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug313.dir/a.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.dir%2Fa.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "26e6413702fc3bcbff42d2765aeaa2c08783d88d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug313.dir/b.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.dir%2Fb.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f7e023848b6702a1b2e1a15880b4f46ebd559168", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug313.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug313.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheckdir\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "4cd9ec28130a3f814b7c83ae073e8cc9ac1d08f2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug317.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug317.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug317.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug317.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b93106d4bdb0a64b306d397e3a2c2d62b2d6d3d2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug319.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug319.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug319.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug319.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "0406b965616d289beab55dd9ebef4b486ae3ad3c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug320.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug320.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug320.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug320.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "19970af34c215f179d9e99fbe8019f09141327bf", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug321.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug321.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug321.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug321.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "3cb8eaab43fb68318998b78e0c20ec36b83652eb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug323.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug323.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug323.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug323.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "e6528ae46a21b29d4d922da3d060e7d7b3e63a43", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug325.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug325.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug325.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug325.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "75d620cde533e266848dceea1ab007061f63a9cb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug326.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug326.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug326.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug326.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "ecb5d22684227527f8b0ffc348fc6f51c5264290", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug327.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug327.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug327.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug327.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "57043f30af72dc35d58eb81962fec29d41415ad7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug328.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug328.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug328.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug328.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n-// cmpout\n+// run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "37c93d0f6e634e626a53a3d0d1dac6c60b8e919c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug329.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug329.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug329.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug329.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2f33feb4b6afb49ea92844c994823b1c1fa77185", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug330.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug330.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug330.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug330.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "9eb57cd3edb0bcc3756491fdc7d5de4523277ce0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug331.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug331.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug331.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug331.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "159c8b4e68b89c9b3317ce8b0a5fe05f86eaa5c2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug332.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug332.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug332.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug332.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -13,5 +13,5 @@ func main() {}\n // issue 1474\n \n // important: no newline on end of next line.\n-// 6g used to print <epoch> instead of bug332.go:111 \n-func (t *T) F() {} // ERROR \"bug332\"\n\\ No newline at end of file\n+// 6g used to print <epoch> instead of bug332.go:111\n+func (t *T) F() {} // ERROR \"undefined.*T\"\n\\ No newline at end of file"}, {"sha": "149843a3b04904e1c290ab51c00ae9f6ee89f7e7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug333.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug333.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug333.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug333.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "9558c06ca4681dfcd1870b14dcec8d11020b3bda", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug334.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug334.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug334.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug334.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "6ecc5c45ef89224d7f2a20272dc83b200c540e31", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug335.dir/a.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.dir%2Fa.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a7735a82e41e57a53d1e026127bc9b787c9a67fb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug335.dir/b.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.dir%2Fb.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "fda9eb8f0a70bbf7167f1d30d1d424e5110b4c83", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug335.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug335.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compiledir\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "fbcd3a51514566bf9479c715de69ccf3e40628db", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug336.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug336.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug336.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug336.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "1a0616f70adf5f8cc8086765ef28a11b1b7a08b9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug337.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug337.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug337.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug337.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a4537a4232952382ac834e1d9ab9e2f9c6c5c648", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug338.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug338.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug338.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug338.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "36be76170fa243f7c4b6cbedf9dcded5296c9712", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug339.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug339.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug339.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug339.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "baab28216f681660b83274bfcfacba7fd42c7ab3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug341.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug341.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug341.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug341.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "f90f6f32cc71cd88ceba9e2e30401dff04fc23bc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug342.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug342.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug342.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug342.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "fd8bd76bbfce383685126fea1ece90d9ae6a0e88", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug343.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug343.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug343.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug343.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b53abd26e3f114f8c33eb9b545f12de22b7cef1a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug344.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug344.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug344.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug344.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "ca7a5092e9f849cbe04e70c23bf86b90646b4f66", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug345.dir/io.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.dir%2Fio.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.dir%2Fio.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.dir%2Fio.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "b77a2fad5fba076e5c0e7ad8f3d87fcaccc057f3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug345.dir/main.go", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.dir%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.dir%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.dir%2Fmain.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,13 +1,14 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n import (\n \t\"bufio\"\n-\t\"./io\"\n \tgoio \"io\"\n+\n+\t\"./io\"\n )\n \n func main() {\n@@ -22,7 +23,7 @@ func main() {\n \t// main.go:27: cannot use &x (type *\"io\".SectionReader) as type *\"/Users/rsc/g/go/test/fixedbugs/bug345.dir/io\".SectionReader in function argument\n \n \tvar w io.Writer\n-\tbufio.NewWriter(w)  // ERROR \"test/io|has incompatible type\"\n+\tbufio.NewWriter(w) // ERROR \"[\\w.]+[^.]/io|has incompatible type\"\n \tvar x goio.SectionReader\n-\tio.SR(&x)  // ERROR \"test/io|has incompatible type\"\n+\tio.SR(&x) // ERROR \"[\\w.]+[^.]/io|has incompatible type\"\n }"}, {"sha": "b974a61ffb2b393979d4bb6612d84eb802c4be69", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug345.go", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug345.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.dir/io.go && errchk $G -e $D/$F.dir/main.go\n+// +build !windows\n+// errorcheckdir -n\n \n-// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n-// To run this test you must use the ./run shell script.\n-\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package ignored\n+\n+// TODO(ysmolsky): Fix golang.org/issue/25693 to enable on Windows."}, {"sha": "f69b58d18322e670a7f0dabff9c3ff7d51e2f868", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug346.go", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug346.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug346.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug346.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -9,11 +9,28 @@ package main\n import \"os\"\n \n func main() {\n-\tx := 4\n-\ta, b, c, d := func(i int) (p int, q int, r int, s int) { return 1, i, 3, x }(2)\n+\t// Test unclosed closure.\n+\t{\n+\t\tx := 4\n+\t\ta, b, c, d := func(i int) (p int, q int, r int, s int) { return 1, i, 3, x }(2)\n \n-\tif a != 1 || b != 2 || c != 3 || d != 4 {\n-\t\tprintln(\"abcd: expected 1 2 3 4 got\", a, b, c, d)\n-\t\tos.Exit(1)\n+\t\tif a != 1 || b != 2 || c != 3 || d != 4 {\n+\t\t\tprintln(\"1# abcd: expected 1 2 3 4 got\", a, b, c, d)\n+\t\t\tos.Exit(1)\n+\t\t}\n+\t}\n+\t// Test real closure.\n+\t{\n+\t\tx := 4\n+\t\tgf = func(i int) (p int, q int, r int, s int) { return 1, i, 3, x }\n+\n+\t\ta, b, c, d := gf(2)\n+\n+\t\tif a != 1 || b != 2 || c != 3 || d != 4 {\n+\t\t\tprintln(\"2# abcd: expected 1 2 3 4 got\", a, b, c, d)\n+\t\t\tos.Exit(1)\n+\t\t}\n \t}\n }\n+\n+var gf func(int) (int, int, int, int)"}, {"sha": "92afb2e70444ff0e4cc86e45669c1075e3df3258", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug347.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug347.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug347.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug347.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "c7f134615935a34e8450dcc96241532bbefeab32", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug348.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug348.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug348.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug348.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a6e83869a447172585a970dc790eabf0ee76a0fc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug349.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug349.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug349.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug349.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "cdce1cfbe2c5753f06a29d0f6c82f63827747e77", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug350.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug350.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug350.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug350.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "8fd63e3e95fcdd47a808ad6f91646fd687109acc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug351.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug351.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug351.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug351.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "464ad7b8bf42e97ade9d431d62aa0ccdb61c10b9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug352.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug352.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug352.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug352.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "4a65f7774a7ad5f496f0423b57edf2ac5c2bb2dc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug353.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug353.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug353.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug353.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "293180faee5b2ff386d07724e6c12836c839f9ee", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug354.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug354.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug354.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug354.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "880353a90287f9c42dc6f0d39ef8fe506373ad0d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug355.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug355.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug355.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug355.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "6d93860be95c6a1043c867a2ca8b92817519b7e4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug356.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug356.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug356.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug356.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "e9db50e88e97c0dcc07ad32c4075900bcbc639d2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug357.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug357.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug357.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug357.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "5ca0be1f6e27116c08769fea77d1933ce86db36a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug358.go", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug358.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug358.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug358.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -10,13 +10,14 @@\n package main\n \n import (\n-\t\"io/ioutil\"\t// GCCGO_ERROR \"imported and not used\"\n+\t// avoid imported and not used errors\n+\t// \"io/ioutil\"\n \t\"net/http\"\n-\t\"os\"\t\t// GCCGO_ERROR \"imported and not used\"\n+\t// \"os\"\n )\n \n func makeHandler(fn func(http.ResponseWriter, *http.Request, string)) http.HandlerFunc {\n-\treturn func(w http.ResponseWriter, r *http.Request)  // ERROR \"syntax error|invalid use of type\"\n+\treturn func(w http.ResponseWriter, r *http.Request)  // ERROR \"syntax error|not an expression|invalid use of type\"\n }\n \n type Page struct {"}, {"sha": "8e282431eb394350281390267db2cd7c9827ee60", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug361.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug361.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug361.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug361.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "771d13d4353d60e2c5e427858507dbbf99b393fb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug362.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug362.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug362.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug362.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "1bd1400987d1b1bc139e5540423f3d46a36e6a57", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug363.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug363.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug363.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug363.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "985b6de092726d6f11d12ce0e48b9d1924d89352", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug365.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug365.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug365.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug365.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "3af5beaaf077b9a769cbdb4e091f3297c7ec32dd", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug366.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug366.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug366.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug366.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "353ea5a0b1a3b3c5e8d5405bdc033ad8218c9c97", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug368.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug368.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug368.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug368.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "9964347250948886b45eb066a59e7bfb20e14c63", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug369.dir/pkg.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.dir%2Fpkg.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.dir%2Fpkg.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.dir%2Fpkg.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "9316f7aad0b1df71d896b56ad0e02d6c37d3c108", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug369.go", "status": "modified", "additions": 32, "deletions": 41, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug369.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,11 +1,7 @@\n-// $G -N -o slow.$A $D/bug369.dir/pkg.go &&\n-// $G -o fast.$A $D/bug369.dir/pkg.go &&\n+// +build !nacl,!js,!windows\n // run\n \n-// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n-// To run this test you must use the ./run shell script.\n-\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -14,50 +10,45 @@\n package main\n \n import (\n-\t\"flag\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n \t\"os\"\n-\t\"runtime\"\n-\t\"testing\"\n-\n-\tfast \"./fast\"\n-\tslow \"./slow\"\n+\t\"os/exec\"\n+\t\"path/filepath\"\n )\n \n-var buf = make([]byte, 1048576)\n+func main() {\n+\terr := os.Chdir(filepath.Join(\".\", \"fixedbugs\", \"bug369.dir\"))\n+\tcheck(err)\n+\n+\ttmpDir, err := ioutil.TempDir(\"\", \"bug369\")\n+\tcheck(err)\n+\tdefer os.RemoveAll(tmpDir)\n \n-func BenchmarkFastNonASCII(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n-\t\tfast.NonASCII(buf, 0)\n+\ttmp := func(name string) string {\n+\t\treturn filepath.Join(tmpDir, name)\n \t}\n+\n+\trun(\"go\", \"tool\", \"compile\", \"-N\", \"-o\", tmp(\"slow.o\"), \"pkg.go\")\n+\trun(\"go\", \"tool\", \"compile\", \"-o\", tmp(\"fast.o\"), \"pkg.go\")\n+\trun(\"go\", \"tool\", \"compile\", \"-D\", tmpDir, \"-o\", tmp(\"main.o\"), \"main.go\")\n+\trun(\"go\", \"tool\", \"link\", \"-o\", tmp(\"a.exe\"), tmp(\"main.o\"))\n+\trun(tmp(\"a.exe\"))\n }\n \n-func BenchmarkSlowNonASCII(b *testing.B) {\n-\tfor i := 0; i < b.N; i++ {\n-\t\tslow.NonASCII(buf, 0)\n+func run(name string, args ...string) {\n+\tcmd := exec.Command(name, args...)\n+\tout, err := cmd.CombinedOutput()\n+\tif err != nil {\n+\t\tfmt.Println(string(out))\n+\t\tfmt.Println(err)\n+\t\tos.Exit(1)\n \t}\n }\n \n-func main() {\n-\ttesting.Init()\n-\tos.Args = []string{os.Args[0], \"-test.benchtime=100ms\"}\n-\tflag.Parse()\n-\n-\trslow := testing.Benchmark(BenchmarkSlowNonASCII)\n-\trfast := testing.Benchmark(BenchmarkFastNonASCII)\n-\ttslow := rslow.NsPerOp()\n-\ttfast := rfast.NsPerOp()\n-\n-\t// Optimization should be good for at least 2x, but be forgiving.\n-\t// On the ARM simulator we see closer to 1.5x.\n-\tspeedup := float64(tslow)/float64(tfast)\n-\twant := 1.8\n-\tif runtime.GOARCH == \"arm\" {\n-\t\twant = 1.3\n-\t}\n-\tif speedup < want {\n-\t\t// TODO(rsc): doesn't work on linux-amd64 or darwin-amd64 builders, nor on\n-\t\t// a Lenovo x200 (linux-amd64) laptop.\n-\t\t//println(\"fast:\", tfast, \"slow:\", tslow, \"speedup:\", speedup, \"want:\", want)\n-\t\t//println(\"not fast enough\")\n+func check(err error) {\n+\tif err != nil {\n+\t\tfmt.Println(err)\n+\t\tos.Exit(1)\n \t}\n }"}, {"sha": "c5165c52ccf7cb952e56249685db060f2c724a61", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug370.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug370.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug370.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug370.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "3a626e523ce58578bc1766dad99d3e8e13211dcc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug371.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug371.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug371.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug371.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "5fba131d7a22938543bbf75d1e3087f6cc1de433", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug372.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug372.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug372.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug372.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2d604cbd3c6bda02763223b9fbc8a7b30b3924ca", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug374.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug374.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug374.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug374.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "08d5afc894ddc519071e1929b9da1289e72238e0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug375.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug375.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug375.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug375.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "cd700124fe59d6218e19fce28b46ca528f237672", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug376.go", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug376.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug376.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug376.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,11 +1,10 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // issue 1951\n package foo\n import \"unsafe\"\n-var v = unsafe.Sizeof  // ERROR \"must be called\"\n-\n+var v = unsafe.Sizeof  // ERROR \"not in function call|must be called\""}, {"sha": "c7b0dac31324b8031c57f09738cac76d37fe68f8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug378.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug378.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug378.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug378.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "5638123d5028f5c80cdb67eee8bb604a36f847d8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug379.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug379.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug379.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug379.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "0cb34873272ba8b894d5a92d595009321f7078c8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug380.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug380.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug380.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug380.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a0a1c8aaa44ce43128285e0c6c29447bd3116304", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug381.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug381.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug381.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug381.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "92fe4e335a1815d33728a8bb20c58c100e2f53de", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug382.dir/pkg.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug382.dir%2Fpkg.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug382.dir%2Fpkg.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug382.dir%2Fpkg.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "dc2ecd61fbd66f51d6705fdc90c4f4ba9472093d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug383.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug383.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug383.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug383.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "d02352b47845264e6963762050f500c61c3f440e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug384.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug384.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug384.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug384.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "73a1311f3223f26624fbd078504689aa4fdd9822", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug385_32.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug385_32.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug385_32.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug385_32.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,7 +1,7 @@\n-// +build 386 arm\n+// +build 386 amd64p32 arm\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "0f941ca2f4dfa2d8da31c09209345a6162604ab1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug385_64.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug385_64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug385_64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug385_64.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,7 +1,7 @@\n // +build amd64\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "889c8b0c12598d4d302962f40879a3f55b495e64", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug386.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug386.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug386.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug386.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "d8854457446fc9076b6afc2ba61533f4f1423e52", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug387.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug387.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug387.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug387.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "14804c8471540694032dd449f737fd2191db437b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug389.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug389.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug389.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug389.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "9211b1c2cf4992464197265aea998d2b27c1b0d7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug391.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug391.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug391.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug391.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "aba8649b5b1d387a32fc96c85048a4c85356bce9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug392.dir/one.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fone.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fone.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fone.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "2ee41f0251072d9d19e5c9696709bf931ee0f39c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug392.dir/pkg2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fpkg2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fpkg2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fpkg2.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "1403798bd30a4fe473e1a465ff33696f00ca75d3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug392.dir/pkg3.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fpkg3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fpkg3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug392.dir%2Fpkg3.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "61af578c5310471ac5428797e4991e4f37f0bcb3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug393.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug393.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug393.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug393.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "08bac182f704b6a1e9923c08affad872c63d65a0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug394.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug394.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug394.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug394.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "66eba63f5c1dfd3614f10cc1370409f3dd017533", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug396.dir/one.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug396.dir%2Fone.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug396.dir%2Fone.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug396.dir%2Fone.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "9152bec2545b73f7598d008d048960ff87d5a95d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug396.dir/two.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug396.dir%2Ftwo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug396.dir%2Ftwo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug396.dir%2Ftwo.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "6188e3ee0cc642365d4bad6f04d551326e54f544", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug397.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug397.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug397.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug397.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // errorcheck\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "a1583bd7746cbd977f33b3790c52df53d486ae62", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug398.go", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug398.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug398.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug398.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,23 +1,43 @@\n // compile\n \n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // Used to crash compiler in interface type equality check.\n+// (This test used to have problems - see #15596.)\n \n package p\n \n+// exported interfaces\n+\n type I1 interface {\n       F() interface{I1}\n }\n \n type I2 interface {\n       F() interface{I2}\n-}       \n+}\n+\n+var V1 I1\n+var V2 I2\n+\n+func F() bool {\n+       return V1 == V2\n+}\n+\n+// non-exported interfaces\n+\n+type i1 interface {\n+      F() interface{i1}\n+}\n+\n+type i2 interface {\n+      F() interface{i2}\n+}\n \n-var v1 I1\n-var v2 I2\n+var v1 i1\n+var v2 i2\n \n func f() bool {\n        return v1 == v2"}, {"sha": "e460d812277d1627cd9f7d78e16bfd839a1adac0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug399.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug399.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug399.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug399.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "215498e085707eba846f6af3594d10608b85636f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug401.go", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug401.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug401.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug401.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2011 The Go Authors.  All rights reserved.\n+// Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n@@ -9,9 +9,8 @@ package main\n \n type T struct{}\n \n+//go:noinline\n func (T) cplx() complex128 {\n-\tfor false {\n-\t} // avoid inlining\n \treturn complex(1, 0)\n }\n "}, {"sha": "f9f554d817daa48d5dcf2e2b2c1ad104a0bc1528", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug402.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug402.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug402.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug402.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // run\n \n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}, {"sha": "aa3c1ea61fa7265e78b3e7e634a05d37c8440330", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug403.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug403.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b9f48c3743c6737acdc93074d058c1603be2a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug403.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug403.go?ref=4a3b9f48c3743c6737acdc93074d058c1603be2a", "patch": "@@ -1,6 +1,6 @@\n // compile\n \n-// Copyright 2012 The Go Authors.  All rights reserved.\n+// Copyright 2012 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n "}]}