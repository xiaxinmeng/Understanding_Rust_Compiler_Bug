{"sha": "b100151b6d20180b9e11b259943fd8e63fdec865", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEwMDE1MWI2ZDIwMTgwYjllMTFiMjU5OTQzZmQ4ZTYzZmRlYzg2NQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2010-09-09T13:51:25Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2010-09-09T13:51:25Z"}, "message": "re PR middle-end/40386 (wrong code generation for several SPEC CPU2000 benchmarks (lucas, mgrid, face, applu, apsi) with -O1 -fno-ira-share-spill-slots)\n\n2010-09-09  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/40386\n\t* ira.c (pseudo_for_reload_consideration_p): Don't use\n\tflag_ira_share_spill_slots.\n\n2010-09-09  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/40386\n\t* gcc.c-torture/execute/{pr40386.c,pr40386.x}: New testcase.\n\nFrom-SVN: r164100", "tree": {"sha": "df613838380e559b92b2c5f6d0dd1513b0b58ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df613838380e559b92b2c5f6d0dd1513b0b58ad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b100151b6d20180b9e11b259943fd8e63fdec865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b100151b6d20180b9e11b259943fd8e63fdec865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b100151b6d20180b9e11b259943fd8e63fdec865", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b100151b6d20180b9e11b259943fd8e63fdec865/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f08b23714ff4412ef37672bc120499801f9561b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f08b23714ff4412ef37672bc120499801f9561b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f08b23714ff4412ef37672bc120499801f9561b8"}], "stats": {"total": 115, "additions": 113, "deletions": 2}, "files": [{"sha": "f407781ca46add8ec7016c7849931e60a2b41e82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b100151b6d20180b9e11b259943fd8e63fdec865", "patch": "@@ -1,3 +1,9 @@\n+2010-09-09  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/40386\n+\t* ira.c (pseudo_for_reload_consideration_p): Don't use\n+\tflag_ira_share_spill_slots.\n+\n 2010-09-09  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/s390/s390.c (legitimate_reload_constant_p): Accept floating-"}, {"sha": "a38808ce59d89cbc68fd6eb830d34fd17b29c7d2", "filename": "gcc/ira.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=b100151b6d20180b9e11b259943fd8e63fdec865", "patch": "@@ -2742,8 +2742,7 @@ pseudo_for_reload_consideration_p (int regno)\n {\n   /* Consider spilled pseudos too for IRA because they still have a\n      chance to get hard-registers in the reload when IRA is used.  */\n-  return (reg_renumber[regno] >= 0\n-\t  || (ira_conflicts_p && flag_ira_share_spill_slots));\n+  return (reg_renumber[regno] >= 0 || ira_conflicts_p);\n }\n \n /* Init LIVE_SUBREGS[ALLOCNUM] and LIVE_SUBREGS_USED[ALLOCNUM] using"}, {"sha": "cf6aa57d6152aae2e1b119f4fad69fdd35eec73b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b100151b6d20180b9e11b259943fd8e63fdec865", "patch": "@@ -1,3 +1,8 @@\n+2010-09-09  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/40386\n+\t* gcc.c-torture/execute/{pr40386.c,pr40386.x}: New testcase.\n+\t\n 2010-09-09  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* gfortran.dg/inline_transpose_1.f90: New test."}, {"sha": "ae0ac5a98f1b27306a386334d51dd6d6234a76c3", "filename": "gcc/testsuite/gcc.c-torture/execute/pr40386.c", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c?ref=b100151b6d20180b9e11b259943fd8e63fdec865", "patch": "@@ -0,0 +1,99 @@\n+/* { dg-options \"-fno-ira-share-spill-slots\" } */\n+#define CHAR_BIT 8\n+\n+#define ROR(a,b) (((a) >> (b)) | ((a) << ((sizeof (a) * CHAR_BIT) - (b))))\n+#define ROL(a,b) (((a) << (b)) | ((a) >> ((sizeof (a) * CHAR_BIT) - (b))))\n+\n+#define CHAR_VALUE ((char)0xf234)\n+#define SHORT_VALUE ((short)0xf234)\n+#define INT_VALUE ((int)0xf234)\n+#define LONG_VALUE ((long)0xf2345678L)\n+#define LL_VALUE ((long long)0xf2345678abcdef0LL)\n+\n+#define SHIFT1 4\n+#define SHIFT2 ((sizeof (long long) * CHAR_BIT) - SHIFT1)\n+\n+char c = CHAR_VALUE;\n+short s = SHORT_VALUE;\n+int i = INT_VALUE;\n+long l = LONG_VALUE;\n+long long ll = LL_VALUE;\n+int shift1 = SHIFT1;\n+int shift2 = SHIFT2;\n+\n+main ()\n+{\n+  if (ROR (c, shift1) != ROR (CHAR_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (c, SHIFT1) != ROR (CHAR_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (s, shift1) != ROR (SHORT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (s, SHIFT1) != ROR (SHORT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (i, shift1) != ROR (INT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (i, SHIFT1) != ROR (INT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (l, shift1) != ROR (LONG_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (l, SHIFT1) != ROR (LONG_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (ll, shift1) != ROR (LL_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (ll, SHIFT1) != ROR (LL_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROR (ll, shift2) != ROR (LL_VALUE, SHIFT2))\n+    abort ();\n+\n+  if (ROR (ll, SHIFT2) != ROR (LL_VALUE, SHIFT2))\n+    abort ();\n+\n+  if (ROL (c, shift1) != ROL (CHAR_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (c, SHIFT1) != ROL (CHAR_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (s, shift1) != ROL (SHORT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (s, SHIFT1) != ROL (SHORT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (i, shift1) != ROL (INT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (i, SHIFT1) != ROL (INT_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (l, shift1) != ROL (LONG_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (l, SHIFT1) != ROL (LONG_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (ll, shift1) != ROL (LL_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (ll, SHIFT1) != ROL (LL_VALUE, SHIFT1))\n+    abort ();\n+\n+  if (ROL (ll, shift2) != ROL (LL_VALUE, SHIFT2))\n+    abort ();\n+\n+  if (ROL (ll, SHIFT2) != ROL (LL_VALUE, SHIFT2))\n+    abort ();\n+\n+  exit (0);\n+}"}, {"sha": "12192e203e70fdb7296d3c69da5f5c0d7adb8dbc", "filename": "gcc/testsuite/gcc.c-torture/execute/pr40386.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b100151b6d20180b9e11b259943fd8e63fdec865/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.x?ref=b100151b6d20180b9e11b259943fd8e63fdec865", "patch": "@@ -0,0 +1,2 @@\n+set additional_flags \"-fno-ira-share-spill-slots\"\n+return 0"}]}