{"sha": "6656fda37b7354784b395dffbdd4049c441b4e99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY1NmZkYTM3YjczNTQ3ODRiMzk1ZGZmYmRkNDA0OWM0NDFiNGU5OQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2008-02-19T21:29:26Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2008-02-19T21:29:26Z"}, "message": "dyn_load.c (GC_dyld_image_add): Remove ifdef clause and use the macro GC_GETSECTBYNAME instead.\n\n2007-02-19  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* dyn_load.c (GC_dyld_image_add): Remove ifdef clause and use the macro\n\tGC_GETSECTBYNAME instead.\n\t* include/private/gc_priv.h: Define GC_GETSECTBYNAME according to the\n\tarchitecture (Darwin).\n\nFrom-SVN: r132452", "tree": {"sha": "b5eb56b596e3b3c62b9334b31da2c0edbc70cc26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5eb56b596e3b3c62b9334b31da2c0edbc70cc26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6656fda37b7354784b395dffbdd4049c441b4e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6656fda37b7354784b395dffbdd4049c441b4e99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6656fda37b7354784b395dffbdd4049c441b4e99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6656fda37b7354784b395dffbdd4049c441b4e99/comments", "author": null, "committer": null, "parents": [{"sha": "3e4b9ad009a7478ec9606983658f5c120e49e6c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4b9ad009a7478ec9606983658f5c120e49e6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4b9ad009a7478ec9606983658f5c120e49e6c4"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "da28024df1754e0612bf98127806244d7fde5ba7", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6656fda37b7354784b395dffbdd4049c441b4e99/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6656fda37b7354784b395dffbdd4049c441b4e99/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=6656fda37b7354784b395dffbdd4049c441b4e99", "patch": "@@ -1,3 +1,10 @@\n+2007-02-19  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* dyn_load.c (GC_dyld_image_add): Remove ifdef clause and use the macro\n+\tGC_GETSECTBYNAME instead.\n+\t* include/private/gc_priv.h: Define GC_GETSECTBYNAME according to the\n+\tarchitecture (Darwin).\n+\n 2008-01-26  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* include/private/gcconfig.h (HBLKSIZE): Define for MIPS."}, {"sha": "f205be2823d18291d68ab9638d33e410b6569143", "filename": "boehm-gc/dyn_load.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6656fda37b7354784b395dffbdd4049c441b4e99/boehm-gc%2Fdyn_load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6656fda37b7354784b395dffbdd4049c441b4e99/boehm-gc%2Fdyn_load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdyn_load.c?ref=6656fda37b7354784b395dffbdd4049c441b4e99", "patch": "@@ -1168,12 +1168,9 @@ static void GC_dyld_image_add(const struct GC_MACH_HEADER *hdr, intptr_t slide)\n     const struct GC_MACH_SECTION *sec;\n     if (GC_no_dls) return;\n     for(i=0;i<sizeof(GC_dyld_sections)/sizeof(GC_dyld_sections[0]);i++) {\n-#   if defined (__LP64__)\n-      sec = getsectbynamefromheader_64(\n-#   else\n-      sec = getsectbynamefromheader(\n-#   endif\n-            hdr,GC_dyld_sections[i].seg,GC_dyld_sections[i].sect);\n+\n+      sec = GC_GETSECTBYNAME (hdr, GC_dyld_sections[i].seg,\n+\t\t\t      GC_dyld_sections[i].sect);\n         if(sec == NULL || sec->size == 0) continue;\n         start = slide + sec->addr;\n         end = start + sec->size;\n@@ -1194,12 +1191,8 @@ static void GC_dyld_image_remove(const struct GC_MACH_HEADER *hdr,\n     unsigned long start,end,i;\n     const struct GC_MACH_SECTION *sec;\n     for(i=0;i<sizeof(GC_dyld_sections)/sizeof(GC_dyld_sections[0]);i++) {\n-#   if defined (__LP64__)\n-      sec = getsectbynamefromheader_64(\n-#   else\n-      sec = getsectbynamefromheader(\n-#   endif\n-            hdr,GC_dyld_sections[i].seg,GC_dyld_sections[i].sect);\n+      sec = GC_GETSECTBYNAME (hdr, GC_dyld_sections[i].seg,\n+\t\t\t      GC_dyld_sections[i].sect);\n         if(sec == NULL || sec->size == 0) continue;\n         start = slide + sec->addr;\n         end = start + sec->size;"}, {"sha": "fdebe3688a52ea5c7d48d8955ec71d3bcd32b14f", "filename": "boehm-gc/include/private/gc_priv.h", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6656fda37b7354784b395dffbdd4049c441b4e99/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6656fda37b7354784b395dffbdd4049c441b4e99/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h?ref=6656fda37b7354784b395dffbdd4049c441b4e99", "patch": "@@ -472,16 +472,18 @@ extern GC_warn_proc GC_current_warn_proc;\n #      if defined(POWERPC)\n #              if CPP_WORDSZ == 32\n #                define GC_THREAD_STATE_T ppc_thread_state_t\n-#\t\t  define GC_MACH_THREAD_STATE PPC_THREAD_STATE\n-#\t\t  define GC_MACH_THREAD_STATE_COUNT PPC_THREAD_STATE_COUNT\n+#\t\t define GC_MACH_THREAD_STATE PPC_THREAD_STATE\n+#\t\t define GC_MACH_THREAD_STATE_COUNT PPC_THREAD_STATE_COUNT\n #                define GC_MACH_HEADER mach_header\n #                define GC_MACH_SECTION section\n+#                define GC_GETSECTBYNAME getsectbynamefromheader\n #              else\n #                define GC_THREAD_STATE_T ppc_thread_state64_t\n-#\t\t  define GC_MACH_THREAD_STATE PPC_THREAD_STATE64\n-#\t\t  define GC_MACH_THREAD_STATE_COUNT PPC_THREAD_STATE64_COUNT\n+#\t\t define GC_MACH_THREAD_STATE PPC_THREAD_STATE64\n+#\t\t define GC_MACH_THREAD_STATE_COUNT PPC_THREAD_STATE64_COUNT\n #                define GC_MACH_HEADER mach_header_64\n #                define GC_MACH_SECTION section_64\n+#                define GC_GETSECTBYNAME getsectbynamefromheader_64\n #              endif\n #      elif defined(I386) || defined(X86_64)\n #              if CPP_WORDSZ == 32\n@@ -490,12 +492,14 @@ extern GC_warn_proc GC_current_warn_proc;\n #                define GC_MACH_THREAD_STATE_COUNT x86_THREAD_STATE32_COUNT\n #                define GC_MACH_HEADER mach_header\n #                define GC_MACH_SECTION section\n+#                define GC_GETSECTBYNAME getsectbynamefromheader\n #              else\n #                define GC_THREAD_STATE_T x86_thread_state64_t\n #                define GC_MACH_THREAD_STATE x86_THREAD_STATE64\n #                define GC_MACH_THREAD_STATE_COUNT x86_THREAD_STATE64_COUNT\n #                define GC_MACH_HEADER mach_header_64\n #                define GC_MACH_SECTION section_64\n+#                define GC_GETSECTBYNAME getsectbynamefromheader_64\n #              endif\n #      else\n #              error define GC_THREAD_STATE_T"}]}