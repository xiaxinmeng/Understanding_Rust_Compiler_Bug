{"sha": "9e11785b7ca8a566d2caa154530d416bda7da2ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUxMTc4NWI3Y2E4YTU2NmQyY2FhMTU0NTMwZDQxNmJkYTdkYTJlYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-03-20T22:52:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-03-20T22:52:04Z"}, "message": "regmove.c (stack_memref_p): Fix typo, reorg for readability.\n\n        * regmove.c (stack_memref_p): Fix typo, reorg for readability.\n        (combine_stack_adjustments_for_block): Don't allow sp references\n        in the side of a set we're not fixing up.\n        * toplev.c (rest_of_compilation): Run combine_stack_adjustments\n        after life_analysis.\n\nFrom-SVN: r32654", "tree": {"sha": "c72f960fd860511bb5a9ff145b513ffeded56927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c72f960fd860511bb5a9ff145b513ffeded56927"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e11785b7ca8a566d2caa154530d416bda7da2ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e11785b7ca8a566d2caa154530d416bda7da2ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e11785b7ca8a566d2caa154530d416bda7da2ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e11785b7ca8a566d2caa154530d416bda7da2ec/comments", "author": null, "committer": null, "parents": [{"sha": "e245d3af6fd6a1362cc83eff738b2a59a3c636cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e245d3af6fd6a1362cc83eff738b2a59a3c636cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e245d3af6fd6a1362cc83eff738b2a59a3c636cc"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "69a2a70e868ef782d22bf12d1a352f90e9e5ec8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e11785b7ca8a566d2caa154530d416bda7da2ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e11785b7ca8a566d2caa154530d416bda7da2ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e11785b7ca8a566d2caa154530d416bda7da2ec", "patch": "@@ -1,3 +1,11 @@\n+2000-03-20  Richard Henderson  <rth@cygnus.com>\n+\n+\t* regmove.c (stack_memref_p): Fix typo, reorg for readability.\n+\t(combine_stack_adjustments_for_block): Don't allow sp references\n+\tin the side of a set we're not fixing up.\n+\t* toplev.c (rest_of_compilation): Run combine_stack_adjustments\n+\tafter life_analysis.\n+\n 2000-03-20  Richard Henderson  <rth@cygnus.com>\n \n \t* calls.c (expand_call): Don't bother generating tail call"}, {"sha": "8e59c69ce77b7b451cd9971beefe46f36ed08237", "filename": "gcc/regmove.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e11785b7ca8a566d2caa154530d416bda7da2ec/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e11785b7ca8a566d2caa154530d416bda7da2ec/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=9e11785b7ca8a566d2caa154530d416bda7da2ec", "patch": "@@ -2116,14 +2116,21 @@ combine_stack_adjustments ()\n /* Recognize a MEM of the form (sp) or (plus sp const).  */\n \n static int\n-stack_memref_p (mem)\n-     rtx mem;\n+stack_memref_p (x)\n+     rtx x;\n {\n-  return (GET_CODE (mem) == MEM\n-\t  && (XEXP (mem, 0) == stack_pointer_rtx\n-\t      || (GET_CODE (XEXP (mem, 0)) == PLUS\n-\t\t  && XEXP (XEXP (mem, 0), 0) == stack_pointer_rtx\n-\t\t  && GET_CODE (XEXP (XEXP (mem, 0), 0)) == CONST_INT)));\n+  if (GET_CODE (x) != MEM)\n+    return 0;\n+  x = XEXP (x, 0);\n+\n+  if (x == stack_pointer_rtx)\n+    return 1;\n+  if (GET_CODE (x) == PLUS\n+      && XEXP (x, 0) == stack_pointer_rtx\n+      && GET_CODE (XEXP (x, 1)) == CONST_INT)\n+    return 1;\n+\n+  return 0;\n }\n \n /* Recognize either normal single_set or the hack in i386.md for\n@@ -2330,14 +2337,16 @@ combine_stack_adjustments_for_block (bb)\n \t    }\n \n \t  /* Find loads from stack memory and record them.  */\n-\t  if (last_sp_set && stack_memref_p (src))\n+\t  if (last_sp_set && stack_memref_p (src)\n+\t      && ! reg_mentioned_p (stack_pointer_rtx, dest))\n \t    {\n \t      memlist = record_one_stack_memref (insn, src, memlist);\n \t      goto processed;\n \t    }\n \n \t  /* Find stores to stack memory and record them.  */\n-\t  if (last_sp_set && stack_memref_p (dest))\n+\t  if (last_sp_set && stack_memref_p (dest)\n+\t      && ! reg_mentioned_p (stack_pointer_rtx, src))\n \t    {\n \t      memlist = record_one_stack_memref (insn, dest, memlist);\n \t      goto processed;\n@@ -2351,6 +2360,7 @@ combine_stack_adjustments_for_block (bb)\n \t      && GET_CODE (dest) == MEM\n \t      && GET_CODE (XEXP (dest, 0)) == PRE_DEC\n \t      && XEXP (XEXP (dest, 0), 0) == stack_pointer_rtx\n+\t      && ! reg_mentioned_p (stack_pointer_rtx, src)\n \t      && validate_change (insn, &SET_DEST (set),\n \t\t\t\t  change_address (dest, VOIDmode,\n \t\t\t\t\t\t  stack_pointer_rtx), 0))"}, {"sha": "bf6dce21277a0336e8093737c1fb6c4efe18706f", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e11785b7ca8a566d2caa154530d416bda7da2ec/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e11785b7ca8a566d2caa154530d416bda7da2ec/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=9e11785b7ca8a566d2caa154530d416bda7da2ec", "patch": "@@ -3555,17 +3555,16 @@ rest_of_compilation (decl)\n \n   if (optimize)\n     {\n-      TIMEVAR (flow2_time, { cleanup_cfg (insns); });\n+      TIMEVAR (flow2_time,\n+\t       {\n+\t\t cleanup_cfg (insns);\n+\t\t life_analysis (insns, max_reg_num (), rtl_dump_file, 1);\n+\t       });\n \n #ifndef ACCUMULATE_OUTGOING_ARGS\n       TIMEVAR (flow2_time, { combine_stack_adjustments (); });\n #endif\n \n-      TIMEVAR (flow2_time, \n-\t       {\n-\t\t life_analysis (insns, max_reg_num (), rtl_dump_file, 1);\n-\t       });\n-\n       if (ggc_p)\n \tggc_collect ();\n     }"}]}