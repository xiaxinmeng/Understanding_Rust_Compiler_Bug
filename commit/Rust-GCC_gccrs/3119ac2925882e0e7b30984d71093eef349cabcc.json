{"sha": "3119ac2925882e0e7b30984d71093eef349cabcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzExOWFjMjkyNTg4MmUwZTdiMzA5ODRkNzEwOTNlZWYzNDljYWJjYw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-12-04T19:20:12Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-12-04T19:20:12Z"}, "message": "re PR middle-end/56917 (-ftrapv detects a overflow wrongly.)\n\n\tPR middle-end/56917\n\t* fold-const.c (fold_unary_loc): Perform the negation in A's type\n\twhen transforming ~ (A - 1) or ~ (A + -1) to -A.\n\n\t* c-c++-common/ubsan/pr56917.c: New test.\n\nFrom-SVN: r218395", "tree": {"sha": "57ddb125dd815eba52b7c03670badf6f9e880a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57ddb125dd815eba52b7c03670badf6f9e880a46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3119ac2925882e0e7b30984d71093eef349cabcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3119ac2925882e0e7b30984d71093eef349cabcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3119ac2925882e0e7b30984d71093eef349cabcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3119ac2925882e0e7b30984d71093eef349cabcc/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d348be26b9d5c668e37459f65ab88ece7d2db2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d348be26b9d5c668e37459f65ab88ece7d2db2d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d348be26b9d5c668e37459f65ab88ece7d2db2d6"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "2d41d93b171d5379571a70809dbd3dd754315e9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3119ac2925882e0e7b30984d71093eef349cabcc", "patch": "@@ -1,3 +1,9 @@\n+2014-12-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/56917\n+\t* fold-const.c (fold_unary_loc): Perform the negation in A's type\n+\twhen transforming ~ (A - 1) or ~ (A + -1) to -A.\n+\n 2014-12-04  Tobias Burnus  <burnus@net-b.de>\n \n \t* Makefile.in: Remove CLOOGLIB and CLOOGINC."}, {"sha": "c268007415cd1d044defadfd6f5d3d69dcafb257", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=3119ac2925882e0e7b30984d71093eef349cabcc", "patch": "@@ -8141,9 +8141,14 @@ fold_unary_loc (location_t loc, enum tree_code code, tree type, tree op0)\n \t\t    && integer_onep (TREE_OPERAND (arg0, 1)))\n \t\t   || (TREE_CODE (arg0) == PLUS_EXPR\n \t\t       && integer_all_onesp (TREE_OPERAND (arg0, 1)))))\n-\treturn fold_build1_loc (loc, NEGATE_EXPR, type,\n-\t\t\t    fold_convert_loc (loc, type,\n-\t\t\t\t\t      TREE_OPERAND (arg0, 0)));\n+\t{\n+\t  /* Perform the negation in ARG0's type and only then convert\n+\t     to TYPE as to avoid introducing undefined behavior.  */\n+\t  tree t = fold_build1_loc (loc, NEGATE_EXPR,\n+\t\t\t\t    TREE_TYPE (TREE_OPERAND (arg0, 0)),\n+\t\t\t\t    TREE_OPERAND (arg0, 0));\n+\t  return fold_convert_loc (loc, type, t);\n+\t}\n       /* Convert ~(X ^ Y) to ~X ^ Y or X ^ ~Y if ~X or ~Y simplify.  */\n       else if (TREE_CODE (arg0) == BIT_XOR_EXPR\n \t       && (tem = fold_unary_loc (loc, BIT_NOT_EXPR, type,"}, {"sha": "0b3a9d682a92593ca9f2ad884ed6365556a514be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3119ac2925882e0e7b30984d71093eef349cabcc", "patch": "@@ -1,3 +1,8 @@\n+2014-12-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/56917\n+\t* c-c++-common/ubsan/pr56917.c: New test.\n+\n 2014-12-04  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/ipa/propalign-1.c: New test."}, {"sha": "cfbae97c0c69c45a6ff43b7fcf562eed5c4b3039", "filename": "gcc/testsuite/c-c++-common/ubsan/pr56917.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr56917.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3119ac2925882e0e7b30984d71093eef349cabcc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr56917.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr56917.c?ref=3119ac2925882e0e7b30984d71093eef349cabcc", "patch": "@@ -0,0 +1,34 @@\n+/* PR middle-end/56917 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=undefined -fno-sanitize-recover=undefined\" } */\n+\n+#define INT_MIN (-__INT_MAX__ - 1)\n+#define LONG_MIN (-__LONG_MAX__ - 1L)\n+#define LLONG_MIN (-__LONG_LONG_MAX__ - 1LL)\n+\n+int __attribute__ ((noinline,noclone))\n+fn1 (unsigned int u)\n+{\n+  return (-(int) (u - 1U)) - 1;\n+}\n+\n+long __attribute__ ((noinline,noclone))\n+fn2 (unsigned long int ul)\n+{\n+  return (-(long) (ul - 1UL)) - 1L;\n+}\n+\n+long long __attribute__ ((noinline,noclone))\n+fn3 (unsigned long long int ull)\n+{\n+  return (-(long long) (ull - 1ULL)) - 1LL;\n+}\n+\n+int\n+main (void)\n+{\n+  if (fn1 (__INT_MAX__ + 1U) != INT_MIN\n+      || fn2 (__LONG_MAX__ + 1UL) != LONG_MIN\n+      || fn3 (__LONG_LONG_MAX__ + 1ULL) != LLONG_MIN)\n+    __builtin_abort ();\n+}"}]}