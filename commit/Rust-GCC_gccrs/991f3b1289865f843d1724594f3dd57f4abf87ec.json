{"sha": "991f3b1289865f843d1724594f3dd57f4abf87ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkxZjNiMTI4OTg2NWY4NDNkMTcyNDU5NGYzZGQ1N2Y0YWJmODdlYw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-11-22T00:02:02Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-11-22T00:02:02Z"}, "message": "re PR fortran/29652 (ambiguous interface declaration undetected)\n\n2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29652\n\t* interface.c (check_interface1): Use a local value, instead of\n\tthe dummy, as the inner iterator over interface symbols.\n\n2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29652\n\t* gfortran.dg/generic_7.f90: New test.\n\t* gfortran.dg/defined_operators_1.f90: Add new error.\n\nFrom-SVN: r119076", "tree": {"sha": "e62b2d2f9aaa4913fcee701e4860e243dd0984c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e62b2d2f9aaa4913fcee701e4860e243dd0984c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/991f3b1289865f843d1724594f3dd57f4abf87ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991f3b1289865f843d1724594f3dd57f4abf87ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991f3b1289865f843d1724594f3dd57f4abf87ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991f3b1289865f843d1724594f3dd57f4abf87ec/comments", "author": null, "committer": null, "parents": [{"sha": "ac8f6c69032b9a07b3036a2514bd59353b2a32c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8f6c69032b9a07b3036a2514bd59353b2a32c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac8f6c69032b9a07b3036a2514bd59353b2a32c3"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "d758a484db439b5397df4b7cbfd7005fdc209444", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=991f3b1289865f843d1724594f3dd57f4abf87ec", "patch": "@@ -1,3 +1,9 @@\n+2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29652\n+\t* interface.c (check_interface1): Use a local value, instead of\n+\tthe dummy, as the inner iterator over interface symbols.\n+\n 2006-11-21 Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/29820"}, {"sha": "e1564b21e2ee6faaec9474d4c4c22b40e79cc820", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=991f3b1289865f843d1724594f3dd57f4abf87ec", "patch": "@@ -964,12 +964,12 @@ check_interface0 (gfc_interface * p, const char *interface_name)\n    here.  */\n \n static int\n-check_interface1 (gfc_interface * p, gfc_interface * q,\n+check_interface1 (gfc_interface * p, gfc_interface * q0,\n \t\t  int generic_flag, const char *interface_name)\n {\n-\n+  gfc_interface * q;\n   for (; p; p = p->next)\n-    for (; q; q = q->next)\n+    for (q = q0; q; q = q->next)\n       {\n \tif (p->sym == q->sym)\n \t  continue;\t\t/* Duplicates OK here */"}, {"sha": "564af554773178814ef9d251e630e25dc3ebc9b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=991f3b1289865f843d1724594f3dd57f4abf87ec", "patch": "@@ -1,3 +1,9 @@\n+2006-11-22 Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29652\n+\t* gfortran.dg/generic_7.f90: New test.\n+\t* gfortran.dg/defined_operators_1.f90: Add new error.\n+\n 2006-11-22  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR tree-optimization/29902"}, {"sha": "0233bf0b9a743504d4ec51484015f59caa4e2102", "filename": "gcc/testsuite/gfortran.dg/defined_operators_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_operators_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_operators_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_operators_1.f90?ref=991f3b1289865f843d1724594f3dd57f4abf87ec", "patch": "@@ -11,7 +11,7 @@ module mymod\n      module procedure foo_1 ! { dg-error \"must be INTENT\" }\n      module procedure foo_2 ! { dg-error \"cannot be optional\" }\n      module procedure foo_3 ! { dg-error \"must have, at most, two arguments\" }\n-     module procedure foo_1_OK\n+     module procedure foo_1_OK  ! { dg-error \"Ambiguous interfaces\" }\n      module procedure foo_2_OK\n      function foo_chr (chr) ! { dg-error \"cannot be assumed character length\" }\n        character(*) :: foo_chr"}, {"sha": "12cb9ae0dcfa5487b528afdb3a025bd28e4760f9", "filename": "gcc/testsuite/gfortran.dg/generic_7.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/991f3b1289865f843d1724594f3dd57f4abf87ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_7.f90?ref=991f3b1289865f843d1724594f3dd57f4abf87ec", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! Tests the fix for PR29652, in which ambiguous interfaces were not detected\n+! with more than two specific procedures in the interface.\n+!\n+! Contributed by Daniel Franke  <franke.daniel@gmail.com>\n+!\n+MODULE global\n+INTERFACE iface\n+  MODULE PROCEDURE sub_a\n+  MODULE PROCEDURE sub_b ! { dg-error \"Ambiguous interfaces\" }\n+  MODULE PROCEDURE sub_c\n+END INTERFACE\n+CONTAINS\n+  SUBROUTINE sub_a(x)\n+    INTEGER, INTENT(in) :: x\n+    WRITE (*,*) 'A: ', x\n+  END SUBROUTINE\n+  SUBROUTINE sub_b(y)\n+    INTEGER, INTENT(in) :: y\n+    WRITE (*,*) 'B: ', y\n+  END SUBROUTINE\n+  SUBROUTINE sub_c(x, y)\n+    REAL, INTENT(in) :: x, y\n+    WRITE(*,*) x, y\n+  END SUBROUTINE\n+END MODULE\n+! { dg-final { cleanup-modules \"global\" } }"}]}