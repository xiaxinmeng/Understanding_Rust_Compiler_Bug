{"sha": "e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiNWQ3YmFlMWM5Y2M5YmQxZmFhOTA1YzA1MjZkY2UyZWU5MDkyNA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2015-09-17T09:09:34Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2015-09-17T09:09:34Z"}, "message": "re PR fortran/52846 ([F2008] Support submodules)\n\n2015-09-17  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/52846\n\tPR fortran/67588\n\t* module.c : Add static no_module_procedures.\n\t(gfc_match_submodule): Correct memory leakage caused during the\n\tfreeing of use_lists.\n\t(mio_symbol_attribute): Reset above if module procedure is\n\tencountered.\n\t(gfc_dump_module): Set above and exit without writing smod file\n\tif it reset.\n\t* gfortran.texi : Add section on submodule support.\n\n2015-09-17  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/52846\n\t* gfortran.dg/public_private_module_5.f90: Add module procedure\n\ttrigger_smod to ensure that the smod file is written.\n\nFrom-SVN: r227855", "tree": {"sha": "a7c286c611bf842796a367c55951cec6af9a1761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7c286c611bf842796a367c55951cec6af9a1761"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/comments", "author": null, "committer": null, "parents": [{"sha": "fb0f04feaa6710087d04a5214394bd468d983a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0f04feaa6710087d04a5214394bd468d983a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0f04feaa6710087d04a5214394bd468d983a6b"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "ee6db56529d2ad86e65df84890160a429afab64b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "patch": "@@ -1,3 +1,16 @@\n+2015-09-17  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/52846\n+\tPR fortran/67588\n+\t* module.c : Add static no_module_procedures.\n+\t(gfc_match_submodule): Correct memory leakage caused during the\n+\tfreeing of use_lists.\n+\t(mio_symbol_attribute): Reset above if module procedure is\n+\tencountered.\n+\t(gfc_dump_module): Set above and exit without writing smod file\n+\tif it reset.\n+\t* gfortran.texi : Add section on submodule support.\n+\n 2015-09-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/67526"}, {"sha": "876f22663d5717b14df912a5a9f4276d4c40466e", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "patch": "@@ -1047,6 +1047,14 @@ of @code{ISO_FORTRAN_ENV}.\n and experimental support for multiple images with the @option{-fcoarray=lib}\n flag.\n \n+@item Submodules are supported. It should noted that @code{MODULEs} do not\n+produce the smod file needed by the descendent @code{SUBMODULEs} unless they\n+contain at least one @code{MODULE PROCEDURE} interface. The reason for this is\n+that @code{SUBMODULEs} are useless without @code{MODULE PROCEDUREs}. See\n+http://j3-fortran.org/doc/meeting/207/15-209.txt for a discussion and a draft\n+interpretation. Adopting this interpretation has the advantage that code that\n+does not use submodules does not generate smod files.\n+\n @item The @code{DO CONCURRENT} construct is supported.\n \n @item The @code{BLOCK} construct is supported."}, {"sha": "f0d84a4861244c84b7632119a65e5591ee38c5f5", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "patch": "@@ -193,6 +193,11 @@ static gzFile module_fp;\n static const char *module_name;\n /* The name of the .smod file that the submodule will write to.  */\n static const char *submodule_name;\n+\n+/* Suppress the output of a .smod file by module, if no module\n+   procedures have been seen.  */\n+static bool no_module_procedures;\n+\n static gfc_use_list *module_list;\n \n /* If we're reading an intrinsic module, this is its ID.  */\n@@ -798,7 +803,7 @@ gfc_match_submodule (void)\n   /* Just retain the ultimate .(s)mod file for reading, since it\n      contains all the information in its ancestors.  */\n   use_list = module_list;\n-  for (; module_list->next; use_list = use_list->next)\n+  for (; module_list->next; use_list = module_list)\n     {\n       module_list = use_list->next;\n       free (use_list);\n@@ -2222,7 +2227,10 @@ mio_symbol_attribute (symbol_attribute *attr)\n       if (attr->array_outer_dependency)\n \tMIO_NAME (ab_attribute) (AB_ARRAY_OUTER_DEPENDENCY, attr_bits);\n       if (attr->module_procedure)\n+\t{\n \tMIO_NAME (ab_attribute) (AB_MODULE_PROCEDURE, attr_bits);\n+\t  no_module_procedures = false;\n+\t}\n \n       mio_rparen ();\n \n@@ -6081,9 +6089,10 @@ gfc_dump_module (const char *name, int dump_flag)\n   else\n     dump_smod =false;\n \n+  no_module_procedures = true;\n   dump_module (name, dump_flag);\n \n-  if (dump_smod)\n+  if (no_module_procedures || dump_smod)\n     return;\n \n   /* Write a submodule file from a module.  The 'dump_smod' flag switches"}, {"sha": "018173042d2dfa6454a0bc1505d78d8d1db7fd95", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "patch": "@@ -1,3 +1,9 @@\n+2015-09-17  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/52846\n+\t* gfortran.dg/public_private_module_5.f90: Add module procedure\n+\ttrigger_smod to ensure that the smod file is written.\n+\n 2015-09-17  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/copysign_1.c: New."}, {"sha": "2698000c46a6461c22c890867691ecdc2c4f06c1", "filename": "gcc/testsuite/gfortran.dg/submodule_5.f08", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_5.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_5.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_5.f08?ref=e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "patch": "@@ -10,6 +10,14 @@ module foo_interface\n   type foo\n     character(len=16), private :: byebye = \"adieu, world!   \"\n   end type foo\n+\n+! This interface is required to trigger the output of an .smod file.\n+! See http://j3-fortran.org/doc/meeting/207/15-209.txt\n+  interface\n+    integer module function trigger_smod ()\n+    end function\n+  end interface\n+\n end module\n \n module foo_interface_brother"}]}