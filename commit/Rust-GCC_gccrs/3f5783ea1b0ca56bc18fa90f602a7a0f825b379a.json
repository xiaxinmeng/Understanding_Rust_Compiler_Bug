{"sha": "3f5783ea1b0ca56bc18fa90f602a7a0f825b379a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y1NzgzZWExYjBjYTU2YmMxOGZhOTBmNjAyYTdhMGY4MjViMzc5YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-05-07T17:57:10Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-05-07T17:57:10Z"}, "message": "sse.md (ssescalarnummask): New mode attribute.\n\n\t* config/i386/sse.md (ssescalarnummask): New mode attribute.\n\t(PEXTR_MODE, PEXTR_MODEx): New mode iterators.\n\t(*vec_extract<mode>): Merge from *sse4_1_pextrb_memory and\n\t*sse4_1_pextrw_memory. Handle register target operands.\n\t(*vec_extractv8hi_sse2): New pattern.\n\t(*vec_extractv16qi_zext): Rename from *sse4_1_pextrb_<mode>.\n\t(*vec_extractv8hi_zext): Rename from *sse2_pextrw_<mode>.\n\t(*vec_extract<mode>_mem): New insn and split pattern.\n\nFrom-SVN: r198691", "tree": {"sha": "c0dd8a645ea799270b2e68a4674fcf112b1372c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0dd8a645ea799270b2e68a4674fcf112b1372c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "924af4dc3e6a81db5005755819350c7d5ea32a27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/924af4dc3e6a81db5005755819350c7d5ea32a27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/924af4dc3e6a81db5005755819350c7d5ea32a27"}], "stats": {"total": 172, "additions": 115, "deletions": 57}, "files": [{"sha": "37791f3e8effb9828dc72443ff51729930b5816c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f5783ea1b0ca56bc18fa90f602a7a0f825b379a", "patch": "@@ -1,3 +1,15 @@\n+2013-05-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (ssescalarnummask): New mode attribute.\n+\t(PEXTR_MODE, PEXTR_MODEx): New mode iterators.\n+\t(*vec_extract<mode>): Merge from *sse4_1_pextrb_memory and\n+\t*sse4_1_pextrw_memory using PEXTR_MODE mode iterator. Handle\n+\tregister target operands.\n+\t(*vec_extractv8hi_sse2): New pattern.\n+\t(*vec_extractv16qi_zext): Rename from *sse4_1_pextrb_<mode>.\n+\t(*vec_extractv8hi_zext): Rename from *sse2_pextrw_<mode>.\n+\t(*vec_extract<mode>_mem): New insn and split pattern.\n+\n 2013-05-07  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* config/arm/arm.c (arm_asan_shadow_offset): New function."}, {"sha": "fc921e27eef5e34c234eaa3cce7dc449918daaa4", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 103, "deletions": 57, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5783ea1b0ca56bc18fa90f602a7a0f825b379a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3f5783ea1b0ca56bc18fa90f602a7a0f825b379a", "patch": "@@ -362,6 +362,13 @@\n    (V8SF \"8\") (V4DF \"4\")\n    (V4SF \"4\") (V2DF \"2\")])\n \n+;; Mask of scalar elements in each vector type\n+(define_mode_attr ssescalarnummask\n+  [(V32QI \"31\") (V16HI \"15\") (V8SI \"7\") (V4DI \"3\")\n+   (V16QI \"15\") (V8HI \"7\") (V4SI \"3\") (V2DI \"1\")\n+   (V8SF \"7\") (V4DF \"3\")\n+   (V4SF \"3\") (V2DF \"1\")])\n+\n ;; SSE prefix for integer vector modes\n (define_mode_attr sseintprefix\n   [(V2DI \"p\") (V2DF \"\")\n@@ -6933,60 +6940,6 @@\n    (set_attr \"prefix\" \"orig,orig,vex,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*sse4_1_pextrb_<mode>\"\n-  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n-\t(zero_extend:SWI48\n-\t  (vec_select:QI\n-\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t    (parallel [(match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpextrb\\t{%2, %1, %k0|%k0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_pextrb_memory\"\n-  [(set (match_operand:QI 0 \"memory_operand\" \"=m\")\n-\t(vec_select:QI\n-\t  (match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t  (parallel [(match_operand:SI 2 \"const_0_to_15_operand\" \"n\")])))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpextrb\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse2_pextrw_<mode>\"\n-  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n-\t(zero_extend:SWI48\n-\t  (vec_select:HI\n-\t    (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t    (parallel [(match_operand:SI 2 \"const_0_to_7_operand\" \"n\")]))))]\n-  \"TARGET_SSE2\"\n-  \"%vpextrw\\t{%2, %1, %k0|%k0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"*sse4_1_pextrw_memory\"\n-  [(set (match_operand:HI 0 \"memory_operand\" \"=m\")\n-\t(vec_select:HI\n-\t  (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t  (parallel [(match_operand:SI 2 \"const_0_to_7_operand\" \"n\")])))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpextrw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_expand \"avx2_pshufdv3\"\n   [(match_operand:V8SI 0 \"register_operand\")\n    (match_operand:V8SI 1 \"nonimmediate_operand\")\n@@ -7315,14 +7268,107 @@\n    (set_attr \"prefix\" \"maybe_vex,maybe_vex,orig,orig,vex\")\n    (set_attr \"mode\" \"TI,TI,V4SF,SF,SF\")])\n \n+;; Modes handled by pextr patterns.\n+(define_mode_iterator PEXTR_MODEx\n+  [V16QI V8HI])\n+\n+(define_mode_iterator PEXTR_MODE\n+  [(V16QI \"TARGET_SSE4_1\") V8HI])\n+\n+(define_insn \"*vec_extract<mode>\"\n+  [(set (match_operand:<ssescalarmode> 0 \"nonimmediate_operand\" \"=r,m\")\n+\t(vec_select:<ssescalarmode>\n+\t  (match_operand:PEXTR_MODE 1 \"register_operand\" \"x,x\")\n+\t  (parallel\n+\t    [(match_operand:SI 2 \"const_0_to_<ssescalarnummask>_operand\")])))]\n+  \"TARGET_SSE4_1\"\n+  \"@\n+   %vpextr<ssemodesuffix>\\t{%2, %1, %k0|%k0, %1, %2}\n+   %vpextr<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else\n+       (and (eq_attr \"alternative\" \"0\")\n+\t    (eq (const_string \"<MODE>mode\") (const_string \"V8HImode\")))\n+       (const_string \"1\")\n+       (const_string \"*\")))\n+   (set (attr \"prefix_extra\")\n+     (if_then_else\n+       (and (eq_attr \"alternative\" \"0\")\n+\t    (eq (const_string \"<MODE>mode\") (const_string \"V8HImode\")))\n+       (const_string \"*\")\n+       (const_string \"1\")))\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"maybe_vex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*vec_extractv8hi_sse2\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+\t(vec_select:HI\n+\t  (match_operand:V8HI 1 \"register_operand\" \"x\")\n+\t  (parallel\n+\t    [(match_operand:SI 2 \"const_0_to_7_operand\")])))]\n+  \"TARGET_SSE2 && !TARGET_SSE4_1\"\n+  \"pextrw\\t{%2, %1, %k0|%k0, %1, %2}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*vec_extractv16qi_zext\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(zero_extend:SWI48\n+\t  (vec_select:QI\n+\t    (match_operand:V16QI 1 \"register_operand\" \"x\")\n+\t    (parallel\n+\t      [(match_operand:SI 2 \"const_0_to_15_operand\")]))))]\n+  \"TARGET_SSE4_1\"\n+  \"%vpextrb\\t{%2, %1, %k0|%k0, %1, %2}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"maybe_vex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*vec_extractv8hi_zext\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(zero_extend:SWI48\n+\t  (vec_select:HI\n+\t    (match_operand:V8HI 1 \"register_operand\" \"x\")\n+\t    (parallel\n+\t      [(match_operand:SI 2 \"const_0_to_7_operand\")]))))]\n+  \"TARGET_SSE2\"\n+  \"%vpextrw\\t{%2, %1, %k0|%k0, %1, %2}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"maybe_vex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn_and_split \"*vec_extract<mode>_mem\"\n+  [(set (match_operand:<ssescalarmode> 0 \"register_operand\" \"=r\")\n+\t(vec_select:<ssescalarmode>\n+\t  (match_operand:PEXTR_MODEx 1 \"memory_operand\" \"o\")\n+\t  (parallel\n+\t    [(match_operand 2 \"const_0_to_<ssescalarnummask>_operand\")])))]\n+  \"TARGET_SSE\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0) (match_dup 1))]\n+{\n+  int offs = INTVAL (operands[2]) * GET_MODE_SIZE (<ssescalarmode>mode);\n+\n+  operands[1] = adjust_address (operands[1], <ssescalarmode>mode, offs);\n+})\n+\n (define_insn \"*vec_extract<ssevecmodelower>_0\"\n-  [(set (match_operand:SWI48 0 \"nonimmediate_operand\"\t       \"=r,r,x ,m,r\")\n+  [(set (match_operand:SWI48 0 \"nonimmediate_operand\"\t       \"=r ,r,x ,m\")\n \t(vec_select:SWI48\n-\t  (match_operand:<ssevecmode> 1 \"nonimmediate_operand\" \"Yj,x,xm,x,m\")\n+\t  (match_operand:<ssevecmode> 1 \"nonimmediate_operand\" \"mYj,x,xm,x\")\n \t  (parallel [(const_int 0)])))]\n   \"TARGET_SSE && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"#\"\n-  [(set_attr \"isa\" \"*,sse4,*,*,*\")])\n+  [(set_attr \"isa\" \"*,sse4,*,*\")])\n \n (define_insn \"*vec_extractv2di_0_sse\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"     \"=x,m\")"}]}