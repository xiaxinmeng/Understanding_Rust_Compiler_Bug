{"sha": "984400f04ebece71be188278c3224f49d3a381a9", "node_id": "C_kwDOANBUbNoAKDk4NDQwMGYwNGViZWNlNzFiZTE4ODI3OGMzMjI0ZjQ5ZDNhMzgxYTk", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-09-27T23:11:49Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-10-01T16:02:54Z"}, "message": "libsanitizer: Bump asan/tsan versions\n\nBump asan/tsan versions for upstream commits:\n\ncommit f1bb30a4956f83e46406d6082e5d376ce65391e0\nAuthor: Vitaly Buka <vitalybuka@google.com>\nDate:   Thu Aug 26 10:25:09 2021 -0700\n\n    [sanitizer] No THREADLOCAL in qsort and bsearch\n\n    qsort can reuse qsort_r if available.\n    bsearch always passes key as the first comparator argument, so we\n    can use it to wrap the original comparator.\n\n    Differential Revision: https://reviews.llvm.org/D108751\n\ncommit d77b476c1953bcb0a608b2d6a4f2dd9fe0b43967\nAuthor: Dmitry Vyukov <dvyukov@google.com>\nDate:   Mon Aug 2 16:52:53 2021 +0200\n\n    tsan: avoid extra call indirection in unaligned access functions\n\n    Currently unaligned access functions are defined in tsan_interface.cpp\n    and do a real call to MemoryAccess. This means we have a real call\n    and no read/write constant propagation.\n\n    Unaligned memory access can be quite hot for some programs\n    (observed on some compression algorithms with ~90% of unaligned accesses).\n\n    Move them to tsan_interface_inl.h to avoid the additional call\n    and enable constant propagation.\n    Also reorder the actual store and memory access handling for\n    __sanitizer_unaligned_store callbacks to enable tail calling\n    in MemoryAccess.\n\n    Depends on D107282.\n\n    Reviewed By: vitalybuka, melver\n\ncommit 97795be22f634667ce7a022398c59ccc9f7440eb\nAuthor: Dmitry Vyukov <dvyukov@google.com>\nDate:   Fri Jul 30 08:35:11 2021 +0200\n\n    tsan: optimize test-only barrier\n\n    The updated lots_of_threads.c test with 300 threads\n    started running for too long on machines with low\n    hardware parallelism (e.g. taskset -c 0-1).\n    On lots of CPUs it finishes in ~2 secs. But with\n    taskset -c 0-1 it runs for hundreds of seconds\n    effectively spinning in the barrier in the sleep loop.\n\n    We now have the handy futex API in sanitizer_common.\n    Use it instead of the passive spin loop.\n    It makes the test run only faster with taskset -c 0-1,\n    it runs for ~1.5 secs, while with full parallelism\n    it still runs for ~2 secs (but consumes less CPU time).\n\n    Depends on D107131.\n\n    Reviewed By: vitalybuka", "tree": {"sha": "49cf726418e1f312122bdb1a68f3a9fe397d49c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49cf726418e1f312122bdb1a68f3a9fe397d49c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/984400f04ebece71be188278c3224f49d3a381a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/984400f04ebece71be188278c3224f49d3a381a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/984400f04ebece71be188278c3224f49d3a381a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/984400f04ebece71be188278c3224f49d3a381a9/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "488efba0ab265598d585ad36abac643b4b3da2b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/488efba0ab265598d585ad36abac643b4b3da2b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/488efba0ab265598d585ad36abac643b4b3da2b5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7a2a23f2b5679d94bd255d608add573d398d5542", "filename": "libsanitizer/asan/libtool-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/984400f04ebece71be188278c3224f49d3a381a9/libsanitizer%2Fasan%2Flibtool-version", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/984400f04ebece71be188278c3224f49d3a381a9/libsanitizer%2Fasan%2Flibtool-version", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2Flibtool-version?ref=984400f04ebece71be188278c3224f49d3a381a9", "patch": "@@ -3,4 +3,4 @@\n # a separate file so that version updates don't involve re-running\n # automake.\n # CURRENT:REVISION:AGE\n-7:0:0\n+8:0:0"}, {"sha": "6fa8162dd20138aac22ff71ef1485f449354814d", "filename": "libsanitizer/tsan/libtool-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/984400f04ebece71be188278c3224f49d3a381a9/libsanitizer%2Ftsan%2Flibtool-version", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/984400f04ebece71be188278c3224f49d3a381a9/libsanitizer%2Ftsan%2Flibtool-version", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2Flibtool-version?ref=984400f04ebece71be188278c3224f49d3a381a9", "patch": "@@ -3,4 +3,4 @@\n # a separate file so that version updates don't involve re-running\n # automake.\n # CURRENT:REVISION:AGE\n-1:0:0\n+2:0:0"}]}