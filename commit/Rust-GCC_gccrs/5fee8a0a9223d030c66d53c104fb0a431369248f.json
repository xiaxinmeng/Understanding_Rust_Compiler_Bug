{"sha": "5fee8a0a9223d030c66d53c104fb0a431369248f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZlZThhMGE5MjIzZDAzMGM2NmQ1M2MxMDRmYjBhNDMxMzY5MjQ4Zg==", "commit": {"author": {"name": "John Ericson", "email": "git@JohnEricson.me", "date": "2021-09-19T15:08:32Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-09-19T15:08:32Z"}, "message": "[PATCH] Factor out `find_a_program` helper around `find_a_file`\n\ngcc/\n\t* gcc.c (find_a_program): New function, factored out of...\n\t(find_a_file): Here.\n\t(execute): Use find_a_program when looking for programs rather\n\tthan find_a_file.", "tree": {"sha": "dc6903de9280bf2e051dbd7fd9c58d4922066cfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc6903de9280bf2e051dbd7fd9c58d4922066cfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fee8a0a9223d030c66d53c104fb0a431369248f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fee8a0a9223d030c66d53c104fb0a431369248f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fee8a0a9223d030c66d53c104fb0a431369248f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fee8a0a9223d030c66d53c104fb0a431369248f/comments", "author": {"login": "Ericson2314", "id": 1055245, "node_id": "MDQ6VXNlcjEwNTUyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1055245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ericson2314", "html_url": "https://github.com/Ericson2314", "followers_url": "https://api.github.com/users/Ericson2314/followers", "following_url": "https://api.github.com/users/Ericson2314/following{/other_user}", "gists_url": "https://api.github.com/users/Ericson2314/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ericson2314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ericson2314/subscriptions", "organizations_url": "https://api.github.com/users/Ericson2314/orgs", "repos_url": "https://api.github.com/users/Ericson2314/repos", "events_url": "https://api.github.com/users/Ericson2314/events{/privacy}", "received_events_url": "https://api.github.com/users/Ericson2314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16f9776669c0d7695ee93163a86d27a4805ab37d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f9776669c0d7695ee93163a86d27a4805ab37d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f9776669c0d7695ee93163a86d27a4805ab37d"}], "stats": {"total": 59, "additions": 34, "deletions": 25}, "files": [{"sha": "1a74bf92f7afb4ffeea8ef6b2d01682d7d5e3f21", "filename": "gcc/gcc.c", "status": "modified", "additions": 34, "deletions": 25, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fee8a0a9223d030c66d53c104fb0a431369248f/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fee8a0a9223d030c66d53c104fb0a431369248f/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5fee8a0a9223d030c66d53c104fb0a431369248f", "patch": "@@ -367,6 +367,7 @@ static void putenv_from_prefixes (const struct path_prefix *, const char *,\n \t\t\t\t  bool);\n static int access_check (const char *, int);\n static char *find_a_file (const struct path_prefix *, const char *, int, bool);\n+static char *find_a_program (const char *);\n static void add_prefix (struct path_prefix *, const char *, const char *,\n \t\t\tint, int, int);\n static void add_sysrooted_prefix (struct path_prefix *, const char *,\n@@ -3052,22 +3053,7 @@ find_a_file (const struct path_prefix *pprefix, const char *name, int mode,\n {\n   struct file_at_path_info info;\n \n-#ifdef DEFAULT_ASSEMBLER\n-  if (! strcmp (name, \"as\") && access (DEFAULT_ASSEMBLER, mode) == 0)\n-    return xstrdup (DEFAULT_ASSEMBLER);\n-#endif\n-\n-#ifdef DEFAULT_LINKER\n-  if (! strcmp (name, \"ld\") && access (DEFAULT_LINKER, mode) == 0)\n-    return xstrdup (DEFAULT_LINKER);\n-#endif\n-\n-#ifdef DEFAULT_DSYMUTIL\n-  if (! strcmp (name, \"dsymutil\") && access (DEFAULT_DSYMUTIL, mode) == 0)\n-    return xstrdup (DEFAULT_DSYMUTIL);\n-#endif\n-\n-  /* Determine the filename to execute (special case for absolute paths).  */\n+  /* Find the filename in question (special case for absolute paths).  */\n \n   if (IS_ABSOLUTE_PATH (name))\n     {\n@@ -3088,6 +3074,32 @@ find_a_file (const struct path_prefix *pprefix, const char *name, int mode,\n \t\t\t\tfile_at_path, &info);\n }\n \n+/* Specialization of find_a_file for programs that also takes into account\n+   configure-specified default programs. */\n+\n+static char*\n+find_a_program (const char *name)\n+{\n+  /* Do not search if default matches query. */\n+\n+#ifdef DEFAULT_ASSEMBLER\n+  if (! strcmp (name, \"as\") && access (DEFAULT_ASSEMBLER, mode) == 0)\n+    return xstrdup (DEFAULT_ASSEMBLER);\n+#endif\n+\n+#ifdef DEFAULT_LINKER\n+  if (! strcmp (name, \"ld\") && access (DEFAULT_LINKER, mode) == 0)\n+    return xstrdup (DEFAULT_LINKER);\n+#endif\n+\n+#ifdef DEFAULT_DSYMUTIL\n+  if (! strcmp (name, \"dsymutil\") && access (DEFAULT_DSYMUTIL, mode) == 0)\n+    return xstrdup (DEFAULT_DSYMUTIL);\n+#endif\n+\n+  return find_a_file (&exec_prefixes, name, X_OK, false);\n+}\n+\n /* Ranking of prefixes in the sort list. -B prefixes are put before\n    all others.  */\n \n@@ -3243,8 +3255,7 @@ execute (void)\n \n   if (wrapper_string)\n     {\n-      string = find_a_file (&exec_prefixes,\n-\t\t\t    argbuf[0], X_OK, false);\n+      string = find_a_program (argbuf[0]);\n       if (string)\n \targbuf[0] = string;\n       insert_wrapper (wrapper_string);\n@@ -3269,7 +3280,7 @@ execute (void)\n \n   if (!wrapper_string)\n     {\n-      string = find_a_file (&exec_prefixes, commands[0].prog, X_OK, false);\n+      string = find_a_program(commands[0].prog);\n       if (string)\n \tcommands[0].argv[0] = string;\n     }\n@@ -3284,8 +3295,7 @@ execute (void)\n \tcommands[n_commands].prog = argbuf[i + 1];\n \tcommands[n_commands].argv\n \t  = &(argbuf.address ())[i + 1];\n-\tstring = find_a_file (&exec_prefixes, commands[n_commands].prog,\n-\t\t\t      X_OK, false);\n+\tstring = find_a_program(commands[n_commands].prog);\n \tif (string)\n \t  commands[n_commands].argv[0] = string;\n \tn_commands++;\n@@ -8556,8 +8566,7 @@ driver::maybe_putenv_COLLECT_LTO_WRAPPER () const\n   if (have_c)\n     lto_wrapper_file = NULL;\n   else\n-    lto_wrapper_file = find_a_file (&exec_prefixes, \"lto-wrapper\",\n-\t\t\t\t    X_OK, false);\n+    lto_wrapper_file = find_a_program (\"lto-wrapper\");\n   if (lto_wrapper_file)\n     {\n       lto_wrapper_file = convert_white_space (lto_wrapper_file);\n@@ -8671,7 +8680,7 @@ driver::maybe_print_and_exit () const\n #endif\n \t  print_prog_name = concat (print_prog_name, use_ld, NULL);\n \t}\n-      char *newname = find_a_file (&exec_prefixes, print_prog_name, X_OK, 0);\n+      char *newname = find_a_program (print_prog_name);\n       printf (\"%s\\n\", (newname ? newname : print_prog_name));\n       return (0);\n     }\n@@ -9070,7 +9079,7 @@ driver::maybe_run_linker (const char *argv0) const\n \t  /* We'll use ld if we can't find collect2.  */\n \t  if (! strcmp (linker_name_spec, \"collect2\"))\n \t    {\n-\t      char *s = find_a_file (&exec_prefixes, \"collect2\", X_OK, false);\n+\t      char *s = find_a_program (\"collect2\");\n \t      if (s == NULL)\n \t\tset_static_spec_shared (&linker_name_spec, \"ld\");\n \t    }"}]}