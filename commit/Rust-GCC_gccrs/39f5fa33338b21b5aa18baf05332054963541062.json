{"sha": "39f5fa33338b21b5aa18baf05332054963541062", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlmNWZhMzMzMzhiMjFiNWFhMThiYWYwNTMzMjA1NDk2MzU0MTA2Mg==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "drow@mvista.com", "date": "2001-07-06T17:16:46Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-07-06T17:16:46Z"}, "message": "configure.in: Remove NATIVE, NULL_TARGET.\n\n\n2001-07-06  Daniel Jacobowitz  <drow@mvista.com>\n\n        * configure.in: Remove NATIVE, NULL_TARGET.\n        Set CANADIAN only for Canadian crosses.  Set xcompiling\n        for both Canadian crosses and host-x-host crosses.\n        * configure: Regenerated.\n\nFrom-SVN: r43814", "tree": {"sha": "406e9d4d67f1e0fe937a2a3872e15edf6391eef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/406e9d4d67f1e0fe937a2a3872e15edf6391eef0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39f5fa33338b21b5aa18baf05332054963541062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f5fa33338b21b5aa18baf05332054963541062", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39f5fa33338b21b5aa18baf05332054963541062", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f5fa33338b21b5aa18baf05332054963541062/comments", "author": null, "committer": null, "parents": [{"sha": "b8ef6023aa859d213bae3523248257950c8d0ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ef6023aa859d213bae3523248257950c8d0ec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ef6023aa859d213bae3523248257950c8d0ec2"}], "stats": {"total": 1469, "additions": 723, "deletions": 746}, "files": [{"sha": "069248a61c41460fdf352d39b6067db6ce1cbadb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f5fa33338b21b5aa18baf05332054963541062/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f5fa33338b21b5aa18baf05332054963541062/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=39f5fa33338b21b5aa18baf05332054963541062", "patch": "@@ -1,3 +1,10 @@\n+2001-07-06  Daniel Jacobowitz  <drow@mvista.com>\n+\n+        * configure.in: Remove NATIVE, NULL_TARGET.\n+        Set CANADIAN only for Canadian crosses.  Set xcompiling\n+        for both Canadian crosses and host-x-host crosses.\n+        * configure: Regenerated.\n+\n 2001-07-06  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n         * include/bits/stl_vector.h (vector::_M_initialize_aux): Fix typo."}, {"sha": "ecbee17f88e099ede9723fd8868106fc82907779", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 709, "deletions": 734, "changes": 1443, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f5fa33338b21b5aa18baf05332054963541062/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f5fa33338b21b5aa18baf05332054963541062/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=39f5fa33338b21b5aa18baf05332054963541062"}, {"sha": "ffbf49e218a930fec602ff3cfc6e1b4c09d5fd2a", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f5fa33338b21b5aa18baf05332054963541062/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f5fa33338b21b5aa18baf05332054963541062/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=39f5fa33338b21b5aa18baf05332054963541062", "patch": "@@ -72,22 +72,21 @@ GLIBCPP_ENABLE_THREADS\n GLIBCPP_ENABLE_CXX_FLAGS([none])\n GLIBCPP_ENABLE_SJLJ_EXCEPTIONS\n \n-if test -n \"$with_cross_host\"; then\n+if test -n \"$with_cross_host\" || test x\"$build\" != x\"$host\"; then\n \n-  # We are being configured with a cross compiler.  AC_REPLACE_FUNCS\n-  # may not work correctly, because the compiler may not be able to\n-  # link executables.\n+  # We are being configured with some form of cross compiler.\n+  # mknumeric_limits may not work correctly, either because the\n+  # compiler may not run on this machine, may not be able to link\n+  # executables, or may produce executables we can't run on this\n+  # machine.\n   xcompiling=1\n-  NATIVE=no\n \n   # If Canadian cross, then don't pick up tools from the build\n   # directory.\n-  if test x\"$build\" != x\"$with_cross_host\" && x\"$build\" != x\"$target\"; then\n+  if test -n \"$with_cross_host\" && test x\"$build\" != x\"$with_cross_host\"; then\n     CANADIAN=yes\n-    NULL_TARGET=yes\n   else\n     CANADIAN=no\n-    NULL_TARGET=no\n   fi\n \n   case \"$target_alias\" in\n@@ -198,9 +197,7 @@ else\n   # that include AC_TRY_COMPILE now, as the linker is assumed to be\n   # working.\n   xcompiling=0\n-  NATIVE=yes\n   CANADIAN=no\n-  NULL_TARGET=no\n \n   # Check for available headers.\n   AC_CHECK_HEADERS([nan.h ieeefp.h endian.h sys/isa_defs.h machine/endian.h \\\n@@ -231,8 +228,6 @@ AC_LINK_FILES($os_include_dir/bits/ctype_noninline.h, \\\n include/bits/ctype_noninline.h)\n AC_LINK_FILES($ATOMICITYH/bits/atomicity.h, include/bits/atomicity.h)\n \n-AM_CONDITIONAL(NULL_TARGET, test \"$NULL_TARGET\" = yes)\n-AM_CONDITIONAL(NATIVE, test \"$NATIVE\" = yes || test \"$NULL_TARGET\" = yes)\n AM_CONDITIONAL(CANADIAN, test \"$CANADIAN\" = yes)\n  \n AC_CACHE_SAVE"}]}