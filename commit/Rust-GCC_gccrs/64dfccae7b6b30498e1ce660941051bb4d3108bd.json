{"sha": "64dfccae7b6b30498e1ce660941051bb4d3108bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRkZmNjYWU3YjZiMzA0OThlMWNlNjYwOTQxMDUxYmI0ZDMxMDhiZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T13:30:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T13:30:23Z"}, "message": "[multiple changes]\n\n2015-10-26  Emmanuel Briot  <briot@adacore.com>\n\n\t* s-os_lib.adb (Argument_String_To_List): Remove backslashes in\n\targument value.\n\n2015-10-26  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_unst.ads, exp_unst.adb (Is_Uplevel_Referenced): Removed.\n\nFrom-SVN: r229361", "tree": {"sha": "f33760e2d5b7cdd11fcc68880c4170f21ce55300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f33760e2d5b7cdd11fcc68880c4170f21ce55300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64dfccae7b6b30498e1ce660941051bb4d3108bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64dfccae7b6b30498e1ce660941051bb4d3108bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64dfccae7b6b30498e1ce660941051bb4d3108bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64dfccae7b6b30498e1ce660941051bb4d3108bd/comments", "author": null, "committer": null, "parents": [{"sha": "a9658b115b061ddb02bc809d5923cb14b0678256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9658b115b061ddb02bc809d5923cb14b0678256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9658b115b061ddb02bc809d5923cb14b0678256"}], "stats": {"total": 57, "additions": 31, "deletions": 26}, "files": [{"sha": "4f63dfe074ef2d083272ac40ffd73dd5a9fe8224", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=64dfccae7b6b30498e1ce660941051bb4d3108bd", "patch": "@@ -1,3 +1,12 @@\n+2015-10-26  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* s-os_lib.adb (Argument_String_To_List): Remove backslashes in\n+\targument value.\n+\n+2015-10-26  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_unst.ads, exp_unst.adb (Is_Uplevel_Referenced): Removed.\n+\n 2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_util.adb, sem_aux.adb, exp_attr.adb, sem_eval.adb: Minor"}, {"sha": "99d546fab9e19ee3ea38880a5488419c455c3aa2", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=64dfccae7b6b30498e1ce660941051bb4d3108bd", "patch": "@@ -119,21 +119,6 @@ package body Exp_Unst is\n      Table_Increment      => 200,\n      Table_Name           => \"Unnest_Urefs\");\n \n-   ---------------------------\n-   -- Is_Uplevel_Referenced --\n-   ---------------------------\n-\n-   function Is_Uplevel_Referenced (E : Entity_Id) return Boolean is\n-   begin\n-      for J in Urefs.First .. Urefs.Last loop\n-         if Urefs.Table (J).Ent = E then\n-            return True;\n-         end if;\n-      end loop;\n-\n-      return False;\n-   end Is_Uplevel_Referenced;\n-\n    -----------------------\n    -- Unnest_Subprogram --\n    -----------------------"}, {"sha": "084e904b677c91985e786c5e450bb2f894e15468", "filename": "gcc/ada/exp_unst.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2Fexp_unst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2Fexp_unst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.ads?ref=64dfccae7b6b30498e1ce660941051bb4d3108bd", "patch": "@@ -686,7 +686,4 @@ package Exp_Unst is\n    --  adds the ARECP parameter to all nested subprograms which need it, and\n    --  modifies all uplevel references appropriately.\n \n-   function Is_Uplevel_Referenced (E : Entity_Id) return Boolean;\n-   --  Determines if E has some uplevel reference from a nested subprogram\n-\n end Exp_Unst;"}, {"sha": "573b738541dd596517010390ecfad51f52573a12", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64dfccae7b6b30498e1ce660941051bb4d3108bd/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=64dfccae7b6b30498e1ce660941051bb4d3108bd", "patch": "@@ -189,6 +189,12 @@ package body System.OS_Lib is\n       New_Argc : Natural := 0;\n       Idx      : Integer;\n \n+      Cleaned     : String (1 .. Arg_String'Length);\n+      Cleaned_Idx : Natural;\n+      --  A cleaned up version of the argument. This function is taking\n+      --  backslash escapes when computing the bounds for arguments. It is\n+      --  then removing the extra backslashes from the argument.\n+\n    begin\n       Idx := Arg_String'First;\n \n@@ -198,10 +204,9 @@ package body System.OS_Lib is\n          declare\n             Quoted  : Boolean := False;\n             Backqd  : Boolean := False;\n-            Old_Idx : Integer;\n \n          begin\n-            Old_Idx := Idx;\n+            Cleaned_Idx := Cleaned'First;\n \n             loop\n                --  An unquoted space is the end of an argument\n@@ -217,25 +222,34 @@ package body System.OS_Lib is\n                  and then Arg_String (Idx) = '\"'\n                then\n                   Quoted := True;\n+                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+                  Cleaned_Idx := Cleaned_Idx + 1;\n \n                --  End of a quoted string and end of an argument\n \n                elsif (Quoted and not Backqd)\n                  and then Arg_String (Idx) = '\"'\n                then\n+                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+                  Cleaned_Idx := Cleaned_Idx + 1;\n                   Idx := Idx + 1;\n                   exit;\n \n-               --  Following character is backquoted\n-\n-               elsif Arg_String (Idx) = '\\' then\n-                  Backqd := True;\n-\n                --  Turn off backquoting after advancing one character\n \n                elsif Backqd then\n                   Backqd := False;\n+                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+                  Cleaned_Idx := Cleaned_Idx + 1;\n \n+               --  Following character is backquoted\n+\n+               elsif Arg_String (Idx) = '\\' then\n+                  Backqd := True;\n+\n+               else\n+                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+                  Cleaned_Idx := Cleaned_Idx + 1;\n                end if;\n \n                Idx := Idx + 1;\n@@ -246,7 +260,7 @@ package body System.OS_Lib is\n \n             New_Argc := New_Argc + 1;\n             New_Argv (New_Argc) :=\n-              new String'(Arg_String (Old_Idx .. Idx - 1));\n+              new String'(Cleaned (Cleaned'First .. Cleaned_Idx - 1));\n \n             --  Skip extraneous spaces\n "}]}