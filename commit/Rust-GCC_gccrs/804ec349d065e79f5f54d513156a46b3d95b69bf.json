{"sha": "804ec349d065e79f5f54d513156a46b3d95b69bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0ZWMzNDlkMDY1ZTc5ZjVmNTRkNTEzMTU2YTQ2YjNkOTViNjliZg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2017-01-13T10:56:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:56:14Z"}, "message": "bindgen.adb, [...]: Minor reformatting and typo fixes.\n\n2017-01-13  Gary Dismukes  <dismukes@adacore.com>\n\n\t* bindgen.adb, sem_ch6.adb, binde.adb, exp_ch3.adb: Minor reformatting\n\tand typo fixes.\n\nFrom-SVN: r244420", "tree": {"sha": "c5a531e8435529a1626e3d82c20b82204f03aada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5a531e8435529a1626e3d82c20b82204f03aada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/804ec349d065e79f5f54d513156a46b3d95b69bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804ec349d065e79f5f54d513156a46b3d95b69bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/804ec349d065e79f5f54d513156a46b3d95b69bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804ec349d065e79f5f54d513156a46b3d95b69bf/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "354ae44943ca7642d2f3a48ca428bfb5df2e0049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354ae44943ca7642d2f3a48ca428bfb5df2e0049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354ae44943ca7642d2f3a48ca428bfb5df2e0049"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "ba0408a44f073a05486da6e37196e65c9f0251a0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=804ec349d065e79f5f54d513156a46b3d95b69bf", "patch": "@@ -1,3 +1,8 @@\n+2017-01-13  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* bindgen.adb, sem_ch6.adb, binde.adb, exp_ch3.adb: Minor reformatting\n+\tand typo fixes.\n+\n 2017-01-13  Javier Miranda  <miranda@adacore.com>\n \n \t* einfo.ads (Component_Bit_Offset): Fix documentation."}, {"sha": "7ab20924f927e6e161d9b03528d88797ac186a0b", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=804ec349d065e79f5f54d513156a46b3d95b69bf", "patch": "@@ -83,8 +83,8 @@ package body Binde is\n    --  will be a successor of X (spec), and X (spec) will be a predecessor of\n    --  Y (body).\n    --\n-   --  Note that we store the successors of each unit explictly. We don't store\n-   --  the predecessors, but we store a count of them.\n+   --  Note that we store the successors of each unit explicitly. We don't\n+   --  store the predecessors, but we store a count of them.\n    --\n    --  The basic algorithm is to first compute a directed graph of units (type\n    --  Unit_Node_Record, below), with successors as edges. A unit is \"ready\"\n@@ -538,7 +538,7 @@ package body Binde is\n \n          return False;\n \n-      --  Prefer a pure or preelaborated unit to one that is not Pure should\n+      --  Prefer a pure or preelaborated unit to one that is not. Pure should\n       --  come before preelaborated.\n \n       elsif Is_Pure_Or_Preelab_Unit (U1)\n@@ -734,7 +734,7 @@ package body Binde is\n \n       --  If either unit is predefined or internal, then we use the normal\n       --  Better_Choice_Optimistic rule, since we don't want to disturb the\n-      --  elaboration rules of the language with -p, same treatment for\n+      --  elaboration rules of the language with -p; same treatment for\n       --  Pure/Preelab.\n \n       --  Prefer a predefined unit to a non-predefined unit\n@@ -1035,7 +1035,7 @@ package body Binde is\n       end if;\n \n       --  For all successors, decrement the number of predecessors, and if it\n-      --  becomes zero, then add to no predecessor list.\n+      --  becomes zero, then add to no-predecessor list.\n \n       S := UNR.Table (Chosen).Successors;\n       while S /= No_Successor loop\n@@ -2543,7 +2543,7 @@ package body Binde is\n       --  private;\", and pass in iterators to iterate over all nodes, and over\n       --  the successors of a given node. However, that leads to using advanced\n       --  features of Ada that are not allowed in the compiler and binder for\n-      --  bootstrapping reason. It also leads to trampolines, which are not\n+      --  bootstrapping reasons. It also leads to trampolines, which are not\n       --  allowed in the compiler and binder. Restricting Node to be discrete\n       --  allows us to iterate over all nodes with a 'for' loop, and allows us\n       --  to attach temporary information to nodes by having an array indexed\n@@ -2617,7 +2617,7 @@ package body Binde is\n             Low_Links (N) := Index;\n             Index := Index + 1;\n \n-            --  Push it one the stack:\n+            --  Push it on the stack:\n \n             Top := Stack_Position_Of_N;\n             Stack (Top) := N;\n@@ -2902,7 +2902,7 @@ package body Binde is\n \n          Compute_Unit_SCCs;\n \n-         --  Initialize the no predecessor list\n+         --  Initialize the no-predecessor list\n \n          No_Pred := No_Unit_Id;\n          for U in UNR.First .. UNR.Last loop\n@@ -2913,7 +2913,7 @@ package body Binde is\n          end loop;\n \n          --  OK, now we determine the elaboration order proper. All we do is to\n-         --  select the best choice from the no predecessor list until all the\n+         --  select the best choice from the no-predecessor list until all the\n          --  nodes have been chosen.\n \n          Outer : loop\n@@ -3100,7 +3100,7 @@ package body Binde is\n \n          Gather_Dependencies;\n \n-         --  Initialize the no predecessor list\n+         --  Initialize the no-predecessor list\n \n          No_Pred := No_Unit_Id;\n          for U in UNR.First .. UNR.Last loop\n@@ -3111,7 +3111,7 @@ package body Binde is\n          end loop;\n \n          --  OK, now we determine the elaboration order proper. All we do is to\n-         --  select the best choice from the no predecessor list until all the\n+         --  select the best choice from the no-predecessor list until all the\n          --  nodes have been chosen.\n \n          Outer : loop"}, {"sha": "b4d7cecc38565490575131af22edf36013405326", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=804ec349d065e79f5f54d513156a46b3d95b69bf", "patch": "@@ -404,7 +404,7 @@ package body Bindgen is\n \n    procedure Write_Statement_Buffer (S : String);\n    --  First writes its argument (using Set_String (S)), then writes out the\n-   --  contents of statement buffer up to Stm_Last, and reset Stm_Last to 0\n+   --  contents of statement buffer up to Stm_Last, and resets Stm_Last to 0.\n \n    procedure Write_Bind_Line (S : String);\n    --  Write S (an LF-terminated string) to the binder file (for use with"}, {"sha": "bae35be45fede7b772d80f0dba828356f051d19c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=804ec349d065e79f5f54d513156a46b3d95b69bf", "patch": "@@ -5655,8 +5655,8 @@ package body Exp_Ch3 is\n          if Is_Imported (Def_Id) or else Suppress_Initialization (Def_Id) then\n             return;\n \n-         --  Nothing to do if the object being initializes is of a task type\n-         --  and restriction No_Tasking is in effect because this is a direct\n+         --  Nothing to do if the object being initialized is of a task type\n+         --  and restriction No_Tasking is in effect, because this is a direct\n          --  violation of the restriction.\n \n          elsif Is_Task_Type (Base_Typ)"}, {"sha": "86bbb532771b962755ea785537ff41f4989f6d33", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804ec349d065e79f5f54d513156a46b3d95b69bf/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=804ec349d065e79f5f54d513156a46b3d95b69bf", "patch": "@@ -379,7 +379,7 @@ package body Sem_Ch6 is\n \n          --  An entity can only be frozen if it has a completion, so we must\n          --  check this explicitly. If it is declared elsewhere it will have\n-         --  been frozen already, so only types declared in currently opend\n+         --  been frozen already, so only types declared in currently opened\n          --  scopes need to be tested.\n \n          if Ekind (Ret_Type) = E_Private_Type\n@@ -2245,9 +2245,9 @@ package body Sem_Ch6 is\n       --  to be used to undo the transformation.\n \n       procedure Freeze_Expr_Types (Spec_Id : Entity_Id);\n-      --  (AI12-0103) N is the body associated with an expression function that\n-      --  is a completion, and Spec_Id its defining entity. Freeze before N all\n-      --  the types referenced by the expression of the function.\n+      --  AI12-0103: N is the body associated with an expression function that\n+      --  is a completion, and Spec_Id is its defining entity. Freeze before N\n+      --  all the types referenced by the expression of the function.\n \n       function Is_Private_Concurrent_Primitive\n         (Subp_Id : Entity_Id) return Boolean;\n@@ -3498,8 +3498,9 @@ package body Sem_Ch6 is\n             Set_Has_Delayed_Freeze (Spec_Id);\n             Freeze_Before (N, Spec_Id);\n \n-            --  At the occurrence of an expression function declaration that is\n-            --  a completion, its expression causes freezing (AI12-0103).\n+            --  AI12-0103: At the occurrence of an expression function\n+            --  declaration that is a completion, its expression causes\n+            --  freezing.\n \n             if Has_Completion (Spec_Id)\n               and then Was_Expression_Function (N)\n@@ -8544,7 +8545,7 @@ package body Sem_Ch6 is\n                         and then Ekind (Entity (E1)) = E_Discriminant\n                         and then Ekind (Entity (E2)) = E_In_Parameter)\n \n-             --  AI12-050 : The loop variables of quantified expressions\n+             --  AI12-050: The loop variables of quantified expressions\n              --  match if they have the same identifier, even though they\n              --  are different entities.\n "}]}