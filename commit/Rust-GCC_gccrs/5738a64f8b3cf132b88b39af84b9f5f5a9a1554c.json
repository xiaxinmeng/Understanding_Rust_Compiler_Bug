{"sha": "5738a64f8b3cf132b88b39af84b9f5f5a9a1554c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTczOGE2NGY4YjNjZjEzMmI4OGIzOWFmODRiOWY1ZjVhOWExNTU0Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-03T13:17:22Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-04T19:59:38Z"}, "message": "x86: Update STORE_MAX_PIECES\n\nUpdate STORE_MAX_PIECES to allow 16/32/64 bytes only if inter-unit move\nis enabled since vec_duplicate enabled by inter-unit move is used to\nimplement store_by_pieces of 16/32/64 bytes.\n\ngcc/\n\n\tPR target/101742\n\t* config/i386/i386.h (STORE_MAX_PIECES): Allow 16/32/64 bytes\n\tonly if TARGET_INTER_UNIT_MOVES_TO_VEC is true.\n\ngcc/testsuite/\n\n\tPR target/101742\n\t* gcc.target/i386/pr101742a.c: New test.\n\t* gcc.target/i386/pr101742b.c: Likewise.", "tree": {"sha": "3587f41db394a98e89ffefa94f794095f3fe630e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3587f41db394a98e89ffefa94f794095f3fe630e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09dba016db937e61be21ef1e9581065a9ed2847d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09dba016db937e61be21ef1e9581065a9ed2847d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09dba016db937e61be21ef1e9581065a9ed2847d"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "21fe51bba40e5e4a46d4426a249102a49fd5dddf", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=5738a64f8b3cf132b88b39af84b9f5f5a9a1554c", "patch": "@@ -1780,18 +1780,22 @@ typedef struct ix86_args {\n \t  && TARGET_SSE_UNALIGNED_STORE_OPTIMAL) \\\n \t ? 16 : UNITS_PER_WORD)))\n \n-/* STORE_MAX_PIECES is the number of bytes at a time that we can\n-   store efficiently.  */\n+/* STORE_MAX_PIECES is the number of bytes at a time that we can store\n+   efficiently.  Allow 16/32/64 bytes only if inter-unit move is enabled\n+   since vec_duplicate enabled by inter-unit move is used to implement\n+   store_by_pieces of 16/32/64 bytes.  */\n #define STORE_MAX_PIECES \\\n-  ((TARGET_AVX512F && !TARGET_PREFER_AVX256) \\\n-   ? 64 \\\n-   : ((TARGET_AVX \\\n-       && !TARGET_PREFER_AVX128 \\\n-       && !TARGET_AVX256_SPLIT_UNALIGNED_STORE) \\\n-      ? 32 \\\n-      : ((TARGET_SSE2 \\\n-\t  && TARGET_SSE_UNALIGNED_STORE_OPTIMAL) \\\n-\t ? 16 : UNITS_PER_WORD)))\n+  (TARGET_INTER_UNIT_MOVES_TO_VEC \\\n+   ? ((TARGET_AVX512F && !TARGET_PREFER_AVX256) \\\n+      ? 64 \\\n+      : ((TARGET_AVX \\\n+\t  && !TARGET_PREFER_AVX128 \\\n+\t  && !TARGET_AVX256_SPLIT_UNALIGNED_STORE) \\\n+\t  ? 32 \\\n+\t  : ((TARGET_SSE2 \\\n+\t      && TARGET_SSE_UNALIGNED_STORE_OPTIMAL) \\\n+\t      ? 16 : UNITS_PER_WORD))) \\\n+   : UNITS_PER_WORD)\n \n /* If a memory-to-memory move would take MOVE_RATIO or more simple\n    move-instruction pairs, we will do a cpymem or libcall instead."}, {"sha": "67ea40587dd3b25ef2ee2b2868ccb4abeca64b01", "filename": "gcc/testsuite/gcc.target/i386/pr101742a.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101742a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101742a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101742a.c?ref=5738a64f8b3cf132b88b39af84b9f5f5a9a1554c", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3 -mtune=nano-x2\" } */\n+\n+int n2;\n+\n+__attribute__ ((simd)) char\n+w7 (void)\n+{\n+  short int xb = n2;\n+  int qp;\n+\n+  for (qp = 0; qp < 2; ++qp)\n+    xb = xb < 1;\n+\n+  return xb;\n+}"}, {"sha": "ba19064077bf371f65cfc8ed3c68adce4f243352", "filename": "gcc/testsuite/gcc.target/i386/pr101742b.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101742b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5738a64f8b3cf132b88b39af84b9f5f5a9a1554c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101742b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101742b.c?ref=5738a64f8b3cf132b88b39af84b9f5f5a9a1554c", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3 -mtune=nano-x2 -mtune-ctrl=sse_unaligned_store_optimal\" } */\n+\n+#include \"pr101742a.c\""}]}