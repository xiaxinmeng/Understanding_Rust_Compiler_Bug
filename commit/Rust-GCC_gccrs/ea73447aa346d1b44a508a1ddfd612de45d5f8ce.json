{"sha": "ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE3MzQ0N2FhMzQ2ZDFiNDRhNTA4YTFkZGZkNjEyZGU0NWQ1ZjhjZQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-01-12T18:52:11Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-01-12T18:52:11Z"}, "message": "re PR fortran/55072 (Missing internal_pack leads to wrong code with derived type)\n\n2013-01-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/55072\n\t* trans-array.c (gfc_conv_array_parameter): No packing was done for\n\tfull arrays of derived type.\n\n\n2013-01-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/55072\n\t* gfortran.dg/assumed_type_2.f90: Fix test case.\n\t* gfortran.dg/internal_pack_13.f90: New test.\n\t* gfortran.dg/internal_pack_14.f90: New test.\n\nFrom-SVN: r195125", "tree": {"sha": "a71230bb5b028dc40d6653592542427418118ed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71230bb5b028dc40d6653592542427418118ed2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5acf0f24b8d53cb754c4ece3b5b54cbd4abb461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5acf0f24b8d53cb754c4ece3b5b54cbd4abb461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5acf0f24b8d53cb754c4ece3b5b54cbd4abb461"}], "stats": {"total": 94, "additions": 84, "deletions": 10}, "files": [{"sha": "c1e27634306ae2f49c53a34ff4fa2328b9aef7b1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "patch": "@@ -1,3 +1,9 @@\n+2013-01-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55072\n+\t* trans-array.c (gfc_conv_array_parameter): No packing was done for\n+\tfull arrays of derived type.\n+\n 2013-01-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/55868"}, {"sha": "088a29973f07ba9a1deb4d6b0fbd066cfcea600e", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "patch": "@@ -7002,20 +7002,14 @@ gfc_conv_array_parameter (gfc_se * se, gfc_expr * expr, bool g77,\n     this_array_result = false;\n \n   /* Passing address of the array if it is not pointer or assumed-shape.  */\n-  if (full_array_var && g77 && !this_array_result)\n+  if (full_array_var && g77 && !this_array_result\n+      && sym->ts.type != BT_DERIVED && sym->ts.type != BT_CLASS)\n     {\n       tmp = gfc_get_symbol_decl (sym);\n \n       if (sym->ts.type == BT_CHARACTER)\n \tse->string_length = sym->ts.u.cl->backend_decl;\n \n-      if (sym->ts.type == BT_DERIVED || sym->ts.type == BT_CLASS)\n-\t{\n-\t  gfc_conv_expr_descriptor (se, expr);\n-\t  se->expr = gfc_conv_array_data (se->expr);\n-\t  return;\n-\t}\n-\n       if (!sym->attr.pointer\n \t  && sym->as\n \t  && sym->as->type != AS_ASSUMED_SHAPE"}, {"sha": "f847f1b7a3e2fb9cc6119aead77e63dcff971f87", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "patch": "@@ -1,3 +1,10 @@\n+2013-01-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55072\n+\t* gfortran.dg/assumed_type_2.f90: Fix test case.\n+\t* gfortran.dg/internal_pack_13.f90: New test.\n+\t* gfortran.dg/internal_pack_14.f90: New test.\n+\n 2013-01-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/55868"}, {"sha": "28d38a16982796120e39d50a02ea959d11c3545b", "filename": "gcc/testsuite/gfortran.dg/assumed_type_2.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_2.f90?ref=ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "patch": "@@ -157,15 +157,14 @@ end subroutine sub_array_assumed\n ! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) array_class_t1_alloc._data.data\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) array_class_t1_ptr._data.dat\" 1 \"original\" } }a\n \n-! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(D\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(D\" 3 \"original\" } }\n ! { dg-final { scan-tree-dump-times \" = _gfortran_internal_pack \\\\(&parm\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(&array_int\\\\)\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(\\\\(real\\\\(kind=4\\\\).0:. . restrict\\\\) array_real_alloc.data\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \" = _gfortran_internal_pack \\\\(&array_char_ptr\\\\);\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"\\\\.data = \\\\(void .\\\\) &array_t1.0.;\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(\\\\(struct t1.0:. .\\\\) parm\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(\\\\(struct t2.0:. . restrict\\\\) array_t2_alloc.data\\\\);\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(\\\\(struct t3.0:. .\\\\) array_t3_ptr.data\\\\);\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(\\\\(struct t1.0:. . restrict\\\\) array_class_t1_alloc._data.data\\\\);\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(\\\\(struct t1.0:. .\\\\) array_class_t1_ptr._data.data\\\\);\" 1 \"original\" } }\n "}, {"sha": "21fdc5418789225fe65df542f3a183d5424d7ad0", "filename": "gcc/testsuite/gfortran.dg/internal_pack_13.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_13.f90?ref=ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+!\n+! PR 55072: [4.6/4.7/4.8 Regression] Missing internal_pack leads to wrong code with derived type\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+implicit none\n+type t\n+integer :: i\n+end type t\n+type(t), target :: tgt(4,4)\n+type(t), pointer :: p(:,:)\n+integer :: i,j,k\n+\n+k = 1\n+do i = 1, 4\n+  do j = 1, 4\n+    tgt(i,j)%i = k\n+    k = k+1\n+  end do\n+end do\n+\n+p => tgt(::2,::2)\n+print *,p%i\n+call bar(p)\n+\n+contains\n+\n+  subroutine bar(x)\n+    type(t) :: x(*)\n+    print *,x(1:4)%i\n+    if (any (x(1:4)%i /= [1, 9, 3, 11])) call abort()\n+  end subroutine\n+end"}, {"sha": "1a4b3725fbb7bbc3e1963d242e7c78bbf5f865f9", "filename": "gcc/testsuite/gfortran.dg/internal_pack_14.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea73447aa346d1b44a508a1ddfd612de45d5f8ce/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_14.f90?ref=ea73447aa346d1b44a508a1ddfd612de45d5f8ce", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+!\n+! PR 55072: [4.6/4.7/4.8 Regression] Missing internal_pack leads to wrong code with derived type\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+program GiBUU_neutrino_bug\n+\n+  Type particle\n+    integer :: ID\n+  End Type\n+\n+  type(particle), dimension(1:2,1:2) :: OutPart\n+\n+  OutPart(1,:)%ID = 1\n+  OutPart(2,:)%ID = 2\n+\n+  call s1(OutPart(1,:))\n+\n+contains\n+\n+  subroutine s1(j)\n+    type(particle) :: j(:)\n+    print *,j(:)%ID\n+    call s2(j)\n+  end subroutine\n+\n+  subroutine s2(k)\n+    type(particle) :: k(1:2)\n+    print *,k(:)%ID\n+    if (any (k(1:2)%ID /= [1, 1])) call abort()\n+  end subroutine\n+\n+end"}]}