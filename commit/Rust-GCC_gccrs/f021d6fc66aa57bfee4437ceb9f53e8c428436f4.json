{"sha": "f021d6fc66aa57bfee4437ceb9f53e8c428436f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAyMWQ2ZmM2NmFhNTdiZmVlNDQzN2NlYjlmNTNlOGM0Mjg0MzZmNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-03-29T22:32:53Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-03-29T22:32:53Z"}, "message": "i386.md (sse_movdfcc_eq): Fix constraint (sse_mov?fcc splitter): Use operands_match_p instead of...\n\n\n\t* i386.md (sse_movdfcc_eq): Fix constraint (sse_mov?fcc splitter): Use operands_match_p\n\tinstead of rtx_equal_p; fix the output template.\n\nFrom-SVN: r40959", "tree": {"sha": "2c74863cca339abfc0cfc49518b05215a561f340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c74863cca339abfc0cfc49518b05215a561f340"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f021d6fc66aa57bfee4437ceb9f53e8c428436f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f021d6fc66aa57bfee4437ceb9f53e8c428436f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f021d6fc66aa57bfee4437ceb9f53e8c428436f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f021d6fc66aa57bfee4437ceb9f53e8c428436f4/comments", "author": null, "committer": null, "parents": [{"sha": "885a70fdff53beb587e130d48162eba8ff2a7480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885a70fdff53beb587e130d48162eba8ff2a7480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/885a70fdff53beb587e130d48162eba8ff2a7480"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "6696baf7173d6f7e92f984baf3bba123172bdf5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021d6fc66aa57bfee4437ceb9f53e8c428436f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021d6fc66aa57bfee4437ceb9f53e8c428436f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f021d6fc66aa57bfee4437ceb9f53e8c428436f4", "patch": "@@ -1,3 +1,8 @@\n+Fri Mar 30 00:31:00 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (sse_movdfcc_eq): Fix constraint (sse_mov?fcc splitter): Use operands_match_p\n+\tinstead of rtx_equal_p; fix the output template.\n+\n Fri Mar 30 00:21:41 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (ix86_expand_setcc): Support 64bit."}, {"sha": "d8c402e9787824dc7b4a2af502b56a994a3c10e7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021d6fc66aa57bfee4437ceb9f53e8c428436f4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021d6fc66aa57bfee4437ceb9f53e8c428436f4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f021d6fc66aa57bfee4437ceb9f53e8c428436f4", "patch": "@@ -15582,7 +15582,7 @@\n \t\t\t     (match_operand:SF 4 \"nonimmediate_operand\" \"xm#f,xm#f,f#x,x#f,f#x,x#f\"))\n \t\t      (match_operand:SF 1 \"nonimmediate_operand\" \"x#fr,0#fr,0#fx,0#fx,0#rx,0#rx\")\n \t\t      (match_operand:SF 2 \"nonimmediate_operand\" \"x#fr,x#fr,f#fx,f#fx,rm#rx,rm#rx\")))\n-   (clobber (match_scratch:SF 5 \"=1,&4,X,X,X,X\"))\n+   (clobber (match_scratch:SF 5 \"=1,&3,X,X,X,X\"))\n    (clobber (reg:CC 17))]\n   \"TARGET_SSE\n    && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n@@ -15655,18 +15655,18 @@\n   \"SSE_REG_P (operands[0]) && reload_completed\"\n   [(set (match_dup 4) (match_op_dup 1 [(match_dup 4) (match_dup 5)]))\n    (set (subreg:TI (match_dup 2) 0) (and:TI (subreg:TI (match_dup 2) 0)\n-\t\t\t\t\t    (subreg:TI (match_dup 0) 0)))\n-   (set (subreg:TI (match_dup 4) 0) (and:TI (not:TI (subreg:TI (match_dup 0) 0))\n+\t\t\t\t\t    (subreg:TI (match_dup 4) 0)))\n+   (set (subreg:TI (match_dup 4) 0) (and:TI (not:TI (subreg:TI (match_dup 4) 0))\n \t\t\t\t\t    (subreg:TI (match_dup 3) 0)))\n    (set (subreg:TI (match_dup 0) 0) (ior:TI (subreg:TI (match_dup 6) 0)\n \t\t\t\t\t    (subreg:TI (match_dup 7) 0)))]\n   \"\n {\n   PUT_MODE (operands[1], GET_MODE (operands[0]));\n-  if (rtx_equal_p (operands[0], operands[4]))\n+  if (operands_match_p (operands[0], operands[4]))\n     operands[6] = operands[4], operands[7] = operands[2];\n   else\n-    operands[6] = operands[2], operands[7] = operands[0];\n+    operands[6] = operands[2], operands[7] = operands[4];\n }\")\n \n ;; Special case of conditional move we can handle effectivly."}]}