{"sha": "ab3d88bed12beabdc31b9f8808da9dab0a3dae64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIzZDg4YmVkMTJiZWFiZGMzMWI5Zjg4MDhkYTlkYWIwYTNkYWU2NA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-06-18T17:13:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-06-18T17:13:35Z"}, "message": "re PR libstdc++/16020 (cannot copy __gnu_debug::bitset)\n\n2004-06-18  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/16020\n\t* include/debug/safe_base.h\n\t(_Safe_sequence_base::_Safe_sequence_base(const _Safe_sequence_base&),\n\t_Safe_sequence_base::operator=): Provide definitions.\n\t* testsuite/23_containers/bitset/cons/16020.cc: New.\n\nFrom-SVN: r83357", "tree": {"sha": "31e54df1c906f1b2d670c9c6ad803d2e923753e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31e54df1c906f1b2d670c9c6ad803d2e923753e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab3d88bed12beabdc31b9f8808da9dab0a3dae64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3d88bed12beabdc31b9f8808da9dab0a3dae64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab3d88bed12beabdc31b9f8808da9dab0a3dae64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3d88bed12beabdc31b9f8808da9dab0a3dae64/comments", "author": null, "committer": null, "parents": [{"sha": "2832d07bd187c8298675cf1f6f2020033624e0df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2832d07bd187c8298675cf1f6f2020033624e0df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2832d07bd187c8298675cf1f6f2020033624e0df"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "bd7da02e485ab43e110acdf9049ec3394d5d5067", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3d88bed12beabdc31b9f8808da9dab0a3dae64/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3d88bed12beabdc31b9f8808da9dab0a3dae64/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ab3d88bed12beabdc31b9f8808da9dab0a3dae64", "patch": "@@ -1,3 +1,11 @@\n+2004-06-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/16020\n+\t* include/debug/safe_base.h\n+\t(_Safe_sequence_base::_Safe_sequence_base(const _Safe_sequence_base&),\n+\t_Safe_sequence_base::operator=): Provide definitions.\n+\t* testsuite/23_containers/bitset/cons/16020.cc: New.\n+\n 2004-06-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/pool_allocator.h: Qualify __throw_bad_alloc."}, {"sha": "fb62620f06a2c96599ceb6e0a01422ec4cf9c6e0", "filename": "libstdc++-v3/include/debug/safe_base.h", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3d88bed12beabdc31b9f8808da9dab0a3dae64/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3d88bed12beabdc31b9f8808da9dab0a3dae64/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h?ref=ab3d88bed12beabdc31b9f8808da9dab0a3dae64", "patch": "@@ -165,10 +165,23 @@ namespace __gnu_debug\n     { }\n \n     explicit\n-    _Safe_sequence_base(const _Safe_sequence_base&);\n+    _Safe_sequence_base(const _Safe_sequence_base& __seq)\n+    : _M_iterators(__seq._M_iterators),\n+      _M_const_iterators(__seq._M_const_iterators),\n+      _M_version(__seq._M_version)\n+    { }\n \n     _Safe_sequence_base&\n-    operator=(const _Safe_sequence_base&);\n+    operator=(const _Safe_sequence_base& __seq)\n+    {\n+      if (&__seq != this)\n+\t{\n+\t  _M_iterators = __seq._M_iterators;\n+\t  _M_const_iterators = __seq._M_const_iterators;\n+\t  _M_version = __seq._M_version;\n+\t}\n+      return *this;\n+    }\n \n     /** Notify all iterators that reference this sequence that the\n \tsequence is being destroyed. */"}, {"sha": "dbf1797572cdb1c49945a5fb24b18571b8e9d5b7", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/16020.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3d88bed12beabdc31b9f8808da9dab0a3dae64/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F16020.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3d88bed12beabdc31b9f8808da9dab0a3dae64/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F16020.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F16020.cc?ref=ab3d88bed12beabdc31b9f8808da9dab0a3dae64", "patch": "@@ -0,0 +1,42 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <debug/bitset>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/16020\n+void test01()\n+{\n+  using __gnu_debug::bitset;\n+  bool test __attribute__((unused)) = true;\n+\n+  bitset<5> b(7);\n+  bitset<5> c;\n+\n+  bitset<5> bb(b);\n+  c = bb;\n+\n+  VERIFY( bb == b );\n+  VERIFY( c == bb );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}