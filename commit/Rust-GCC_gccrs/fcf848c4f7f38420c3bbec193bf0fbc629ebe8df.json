{"sha": "fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNmODQ4YzRmN2YzODQyMGMzYmJlYzE5M2JmMGZiYzYyOWViZThkZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-26T09:49:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-04-26T09:49:04Z"}, "message": "[multiple changes]\n\n2012-04-26  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_aggr.adb: Minor reformatting.\n\n2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Expand_Cleanup_Actions): Update the call to\n\tRequires_Cleanup_Actions.\n\t* exp_util.adb (Requires_Cleanup_Actions (List_Id; Boolean;\n\tBoolean)): Rename formal parameter For_Package to Lib_Level to\n\tbetter reflect its purpose. Update the related comment and all\n\toccurrences of For_Package in the body.\n\t(Requires_Cleanup_Actions\n\t(Node_Id; Boolean)): Add new formal parameter Lib_Level. Add\n\tlocal constant At_Lib_Level to keep monitor whether the path\n\ttaken from the top-most context to the current construct involves\n\tpackage constructs. Update all calls to Requires_Cleanup_Actions.\n\t* exp_util.ads (Requires_Cleanup_Actions): Add new formal\n\tparameter Lib_Level and associated comment.\n\n2012-04-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Process_Formals): If the type of the formal is\n\ta non null access type, mark the generated subtype as having a\n\tdelayed freeze only if the designated type is not frozen yet.\n\n2012-04-26  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: New package Clean with attributes\n\tObject_Artifact_Extensions and Source_Artifact_Extensions.\n\t* prj-nmsc.adb (Process_Clean): Process new package Clean\n\t* prj.ads (Language_Config): New components\n\tClean_Object_Artifacts and Clean_Source_Artifacts.\n\t* snames.ads-tmpl: New standard names Clean,\n\tObject_Artifact_Extensions and Source_Artifact_Extensions.\n\nFrom-SVN: r186867", "tree": {"sha": "377f1b871b76d4821d44212dba3d76960aac53ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/377f1b871b76d4821d44212dba3d76960aac53ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/comments", "author": null, "committer": null, "parents": [{"sha": "68f640f221af5ffdaf1e06a2e146287c346b590a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f640f221af5ffdaf1e06a2e146287c346b590a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f640f221af5ffdaf1e06a2e146287c346b590a"}], "stats": {"total": 209, "additions": 175, "deletions": 34}, "files": [{"sha": "6a19fc7e7f50cd4984f190eb950d751a4db4c0f8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -1,3 +1,39 @@\n+2012-04-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_aggr.adb: Minor reformatting.\n+\n+2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Expand_Cleanup_Actions): Update the call to\n+\tRequires_Cleanup_Actions.\n+\t* exp_util.adb (Requires_Cleanup_Actions (List_Id; Boolean;\n+\tBoolean)): Rename formal parameter For_Package to Lib_Level to\n+\tbetter reflect its purpose. Update the related comment and all\n+\toccurrences of For_Package in the body.\n+\t(Requires_Cleanup_Actions\n+\t(Node_Id; Boolean)): Add new formal parameter Lib_Level. Add\n+\tlocal constant At_Lib_Level to keep monitor whether the path\n+\ttaken from the top-most context to the current construct involves\n+\tpackage constructs. Update all calls to Requires_Cleanup_Actions.\n+\t* exp_util.ads (Requires_Cleanup_Actions): Add new formal\n+\tparameter Lib_Level and associated comment.\n+\n+2012-04-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Process_Formals): If the type of the formal is\n+\ta non null access type, mark the generated subtype as having a\n+\tdelayed freeze only if the designated type is not frozen yet.\n+\n+2012-04-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: New package Clean with attributes\n+\tObject_Artifact_Extensions and Source_Artifact_Extensions.\n+\t* prj-nmsc.adb (Process_Clean): Process new package Clean\n+\t* prj.ads (Language_Config): New components\n+\tClean_Object_Artifacts and Clean_Source_Artifacts.\n+\t* snames.ads-tmpl: New standard names Clean,\n+\tObject_Artifact_Extensions and Source_Artifact_Extensions.\n+\n 2012-04-26  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.adb (Proper_First_Index): Moved from Sem_Util."}, {"sha": "aae8894245353c549c4b30ef03e883dbfa4ea304", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -6030,10 +6030,10 @@ package body Exp_Aggr is\n          end if;\n \n          --  At this stage we have a suitable aggregate for handling at compile\n-         --  time (the only remaining checks are that the values of expressions\n-         --  in the aggregate are compile-time known, checks are performed by\n+         --  time. The only remaining checks are that the values of expressions\n+         --  in the aggregate are compile-time known (checks are performed by\n          --  Get_Component_Val, and that any subtypes or ranges are statically\n-         --  known).\n+         --  known.\n \n          --  If the aggregate is not fully positional at this stage, then\n          --  convert it to positional form. Either this will fail, in which"}, {"sha": "dfd0a067b150bffa27ed625dc6b4036a65f1cee5", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -3599,7 +3599,7 @@ package body Exp_Ch7 is\n                                  and then VM_Target = No_VM;\n \n       Actions_Required     : constant Boolean :=\n-                               Requires_Cleanup_Actions (N)\n+                               Requires_Cleanup_Actions (N, True)\n                                  or else Is_Asynchronous_Call\n                                  or else Is_Master\n                                  or else Is_Protected_Body"}, {"sha": "8d51701e1ff2d9788630db41a7f470264909c983", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -150,16 +150,16 @@ package body Exp_Util is\n \n    function Requires_Cleanup_Actions\n      (L                 : List_Id;\n-      For_Package       : Boolean;\n+      Lib_Level         : Boolean;\n       Nested_Constructs : Boolean) return Boolean;\n    --  Given a list L, determine whether it contains one of the following:\n    --\n    --    1) controlled objects\n    --    2) library-level tagged types\n    --\n-   --  Flag For_Package should be set when the list comes from a package spec\n-   --  or body. Flag Nested_Constructs should be set when any nested packages\n-   --  declared in L must be processed.\n+   --  Flag Lib_Level should be set when the list comes from a construct at\n+   --  the library level. Flag Nested_Constructs should be set when any nested\n+   --  packages declared in L must be processed.\n \n    -------------------------------------\n    -- Activate_Atomic_Synchronization --\n@@ -7038,9 +7038,14 @@ package body Exp_Util is\n    -- Requires_Cleanup_Actions --\n    ------------------------------\n \n-   function Requires_Cleanup_Actions (N : Node_Id) return Boolean is\n-      For_Pkg : constant Boolean :=\n-                  Nkind_In (N, N_Package_Body, N_Package_Specification);\n+   function Requires_Cleanup_Actions\n+     (N         : Node_Id;\n+      Lib_Level : Boolean) return Boolean\n+   is\n+      At_Lib_Level : constant Boolean := Lib_Level and then\n+                       Nkind_In (N, N_Package_Body, N_Package_Specification);\n+      --  N is at the library level if the top-most context is a package and\n+      --  the path taken to reach N does not inlcude non-package constructs.\n \n    begin\n       case Nkind (N) is\n@@ -7052,20 +7057,20 @@ package body Exp_Util is\n               N_Subprogram_Body       |\n               N_Task_Body             =>\n             return\n-              Requires_Cleanup_Actions (Declarations (N), For_Pkg, True)\n+              Requires_Cleanup_Actions (Declarations (N), At_Lib_Level, True)\n                 or else\n               (Present (Handled_Statement_Sequence (N))\n                 and then\n               Requires_Cleanup_Actions (Statements\n-                (Handled_Statement_Sequence (N)), For_Pkg, True));\n+                (Handled_Statement_Sequence (N)), At_Lib_Level, True));\n \n          when N_Package_Specification =>\n             return\n               Requires_Cleanup_Actions\n-                (Visible_Declarations (N), For_Pkg, True)\n+                (Visible_Declarations (N), At_Lib_Level, True)\n                   or else\n               Requires_Cleanup_Actions\n-                (Private_Declarations (N), For_Pkg, True);\n+                (Private_Declarations (N), At_Lib_Level, True);\n \n          when others                  =>\n             return False;\n@@ -7078,7 +7083,7 @@ package body Exp_Util is\n \n    function Requires_Cleanup_Actions\n      (L                 : List_Id;\n-      For_Package       : Boolean;\n+      Lib_Level         : Boolean;\n       Nested_Constructs : Boolean) return Boolean\n    is\n       Decl    : Node_Id;\n@@ -7125,9 +7130,7 @@ package body Exp_Util is\n             --  finalization disabled. This applies only to objects at the\n             --  library level.\n \n-            if For_Package\n-              and then Finalize_Storage_Only (Obj_Typ)\n-            then\n+            if Lib_Level and then Finalize_Storage_Only (Obj_Typ) then\n                null;\n \n             --  Transient variables are treated separately in order to minimize\n@@ -7203,9 +7206,7 @@ package body Exp_Util is\n             --  finalization disabled. This applies only to objects at the\n             --  library level.\n \n-            if For_Package\n-              and then Finalize_Storage_Only (Obj_Typ)\n-            then\n+            if Lib_Level and then Finalize_Storage_Only (Obj_Typ) then\n                null;\n \n             --  Return object of a build-in-place function. This case is\n@@ -7257,7 +7258,7 @@ package body Exp_Util is\n                 (Is_Type (Typ)\n                    and then Needs_Finalization (Typ)))\n               and then Requires_Cleanup_Actions\n-                         (Actions (Decl), For_Package, Nested_Constructs)\n+                         (Actions (Decl), Lib_Level, Nested_Constructs)\n             then\n                return True;\n             end if;\n@@ -7274,7 +7275,8 @@ package body Exp_Util is\n             end if;\n \n             if Ekind (Pack_Id) /= E_Generic_Package\n-              and then Requires_Cleanup_Actions (Specification (Decl))\n+              and then Requires_Cleanup_Actions\n+                         (Specification (Decl), Lib_Level)\n             then\n                return True;\n             end if;\n@@ -7287,7 +7289,7 @@ package body Exp_Util is\n             Pack_Id := Corresponding_Spec (Decl);\n \n             if Ekind (Pack_Id) /= E_Generic_Package\n-              and then Requires_Cleanup_Actions (Decl)\n+              and then Requires_Cleanup_Actions (Decl, Lib_Level)\n             then\n                return True;\n             end if;"}, {"sha": "e42c8a5b0d9c755fe90a2eaf2d5c1d7b0c36f8e4", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -744,14 +744,17 @@ package Exp_Util is\n    --  terms is scalar. This is true for scalars in the Ada sense, and for\n    --  packed arrays which are represented by a scalar (modular) type.\n \n-   function Requires_Cleanup_Actions (N : Node_Id) return Boolean;\n+   function Requires_Cleanup_Actions\n+     (N         : Node_Id;\n+      Lib_Level : Boolean) return Boolean;\n    --  Given a node N, determine whether its declarative and/or statement list\n    --  contains one of the following:\n    --\n    --    1) controlled objects\n    --    2) library-level tagged types\n    --\n-   --  The above cases require special actions on scope exit.\n+   --  The above cases require special actions on scope exit. Flag Lib_Level\n+   --  is used to track whether a construct is at the library level.\n \n    function Safe_Unchecked_Type_Conversion (Exp : Node_Id) return Boolean;\n    --  Given the node for an N_Unchecked_Type_Conversion, return True if this"}, {"sha": "8fefe66ae10874d2fe8b0433fee551d3a829c8bf", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -281,6 +281,13 @@ package body Prj.Attr is\n    \"SVresponse_file_format#\" &\n    \"LVresponse_file_switches#\" &\n \n+   --  package Clean\n+\n+   \"Pclean#\" &\n+   \"LVswitches#\" &\n+   \"Lasource_artifact_extensions#\" &\n+   \"Laobject_artifact_extensions#\" &\n+\n    --  package Cross_Reference\n \n    \"Pcross_reference#\" &"}, {"sha": "1084ee2700789ab9e4a375f941a55fb12a326a6d", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 80, "deletions": 2, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -1101,6 +1101,9 @@ package body Prj.Nmsc is\n          procedure Process_Builder (Attributes : Variable_Id);\n          --  Process the simple attributes of package Builder\n \n+         procedure Process_Clean  (Arrays : Array_Id);\n+         --  Process the associate array attributes of package Clean\n+\n          procedure Process_Compiler (Arrays : Array_Id);\n          --  Process the associate array attributes of package Compiler\n \n@@ -1223,6 +1226,71 @@ package body Prj.Nmsc is\n             end loop;\n          end Process_Builder;\n \n+         -------------------\n+         -- Process_Clean --\n+         -------------------\n+\n+         procedure Process_Clean  (Arrays : Array_Id) is\n+            Current_Array_Id : Array_Id;\n+            Current_Array    : Array_Data;\n+            Element_Id       : Array_Element_Id;\n+            Element          : Array_Element;\n+            List             : String_List_Id;\n+\n+         begin\n+            --  Process the associative array attribute of package Clean\n+\n+            Current_Array_Id := Arrays;\n+            while Current_Array_Id /= No_Array loop\n+               Current_Array := Shared.Arrays.Table (Current_Array_Id);\n+\n+               Element_Id := Current_Array.Value;\n+               while Element_Id /= No_Array_Element loop\n+                  Element := Shared.Array_Elements.Table (Element_Id);\n+\n+                  --  Get the name of the language\n+\n+                  Lang_Index := Get_Language_From_Name\n+                    (Project, Get_Name_String (Element.Index));\n+\n+                  if Lang_Index /= No_Language_Index then\n+                     case Current_Array.Name is\n+\n+                        --  Attribute Object_Artifact_Extensions (<language>)\n+\n+                        when Name_Object_Artifact_Extensions =>\n+                           List := Element.Value.Values;\n+\n+                           if List /= Nil_String then\n+                              Put (Into_List =>\n+                                     Lang_Index.Config.Clean_Object_Artifacts,\n+                                   From_List => List,\n+                                   In_Tree   => Data.Tree);\n+                           end if;\n+\n+                        --  Attribute Source_Artifact_Extensions (<language>)\n+\n+                        when Name_Source_Artifact_Extensions =>\n+                           List := Element.Value.Values;\n+\n+                           if List /= Nil_String then\n+                              Put (Into_List =>\n+                                     Lang_Index.Config.Clean_Source_Artifacts,\n+                                   From_List => List,\n+                                   In_Tree   => Data.Tree);\n+                           end if;\n+                        when others =>\n+                           null;\n+                     end case;\n+                  end if;\n+\n+                  Element_Id := Element.Next;\n+               end loop;\n+\n+               Current_Array_Id := Current_Array.Next;\n+            end loop;\n+         end Process_Clean;\n+\n          ----------------------\n          -- Process_Compiler --\n          ----------------------\n@@ -1832,6 +1900,12 @@ package body Prj.Nmsc is\n \n                   Process_Builder (Element.Decl.Attributes);\n \n+               when Name_Clean =>\n+\n+                  --  Process attributes of package Clean\n+\n+                  Process_Clean (Element.Decl.Arrays);\n+\n                when Name_Compiler =>\n \n                   --  Process attributes of package Compiler\n@@ -3217,7 +3291,9 @@ package body Prj.Nmsc is\n       if Project.Library then\n          Support_For_Libraries := Project.Config.Lib_Support;\n \n-         if Support_For_Libraries = Prj.None then\n+         if not Project.Externally_Built and then\n+           Support_For_Libraries = Prj.None\n+         then\n             Error_Msg\n               (Data.Flags,\n                \"?libraries are not supported on this platform\",\n@@ -3405,7 +3481,9 @@ package body Prj.Nmsc is\n                   end if;\n \n                   if Project.Library_Kind /= Static then\n-                     if Support_For_Libraries = Prj.Static_Only then\n+                     if not Project.Externally_Built and then\n+                       Support_For_Libraries = Prj.Static_Only\n+                     then\n                         Error_Msg\n                           (Data.Flags,\n                            \"only static libraries are supported \" &"}, {"sha": "696db4ac530c3be534a96827a01465314c62ae9f", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -606,6 +606,12 @@ package Prj is\n       Toolchain_Description : Name_Id := No_Name;\n       --  Hold the value of attribute Toolchain_Description for the language\n \n+      Clean_Object_Artifacts : Name_List_Index := No_Name_List;\n+      --  List of object artifact extensions to be deleted by gprclean\n+\n+      Clean_Source_Artifacts : Name_List_Index := No_Name_List;\n+      --  List of source artifact extensions to be deleted by gprclean\n+\n    end record;\n \n    No_Language_Config : constant Language_Config :=\n@@ -654,7 +660,9 @@ package Prj is\n                            Binder_Required_Switches     => No_Name_List,\n                            Binder_Prefix                => No_Name,\n                            Toolchain_Version            => No_Name,\n-                           Toolchain_Description        => No_Name);\n+                           Toolchain_Description        => No_Name,\n+                           Clean_Object_Artifacts       => No_Name_List,\n+                           Clean_Source_Artifacts       => No_Name_List);\n \n    --  The following record ???\n "}, {"sha": "920cb0cd0ac6d979457f49843ff58907bf05d80e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -10813,15 +10813,19 @@ package body Sem_Ch6 is\n                        Related_Nod => Related_Nod,\n                        Scope_Id    => Scope (Current_Scope));\n \n-                  --  If the designated type of the itype is an itype we\n-                  --  decorate it with the Has_Delayed_Freeze attribute to\n-                  --  avoid problems with the backend.\n+                  --  If the designated type of the itype is an itype that is\n+                  --  not frozen yet, we set the Has_Delayed_Freeze attribute\n+                  --  on the access subtype, to prevent order-of-elaboration\n+                  --  issues in the backend.\n \n                   --  Example:\n                   --     type T is access procedure;\n                   --     procedure Op (O : not null T);\n \n-                  if Is_Itype (Directly_Designated_Type (Formal_Type)) then\n+                  if Is_Itype (Directly_Designated_Type (Formal_Type))\n+                    and then\n+                      not Is_Frozen (Directly_Designated_Type (Formal_Type))\n+                  then\n                      Set_Has_Delayed_Freeze (Formal_Type);\n                   end if;\n                end if;"}, {"sha": "b0f8736ff23522884fdf65a564694467fc54909b", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf848c4f7f38420c3bbec193bf0fbc629ebe8df/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=fcf848c4f7f38420c3bbec193bf0fbc629ebe8df", "patch": "@@ -1106,6 +1106,7 @@ package Snames is\n    Name_Binder                             : constant Name_Id := N + $;\n    Name_Body_Suffix                        : constant Name_Id := N + $;\n    Name_Builder                            : constant Name_Id := N + $;\n+   Name_Clean                              : constant Name_Id := N + $;\n    Name_Compiler                           : constant Name_Id := N + $;\n    Name_Compiler_Command                   : constant Name_Id := N + $; -- GB\n    Name_Config_Body_File_Name              : constant Name_Id := N + $;\n@@ -1195,6 +1196,7 @@ package Snames is\n    Name_Multi_Unit_Switches                : constant Name_Id := N + $;\n    Name_Naming                             : constant Name_Id := N + $;\n    Name_None                               : constant Name_Id := N + $;\n+   Name_Object_Artifact_Extensions         : constant Name_Id := N + $;\n    Name_Object_File_Suffix                 : constant Name_Id := N + $;\n    Name_Object_File_Switches               : constant Name_Id := N + $;\n    Name_Object_Generated                   : constant Name_Id := N + $;\n@@ -1224,6 +1226,7 @@ package Snames is\n    Name_Shared_Library_Prefix              : constant Name_Id := N + $;\n    Name_Shared_Library_Suffix              : constant Name_Id := N + $;\n    Name_Separate_Suffix                    : constant Name_Id := N + $;\n+   Name_Source_Artifact_Extensions         : constant Name_Id := N + $;\n    Name_Source_Dirs                        : constant Name_Id := N + $;\n    Name_Source_File_Switches               : constant Name_Id := N + $;\n    Name_Source_Files                       : constant Name_Id := N + $;"}]}