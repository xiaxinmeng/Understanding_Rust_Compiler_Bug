{"sha": "63f56527335a7667769b5dea15569e23d0ebc749", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNmNTY1MjczMzVhNzY2Nzc2OWI1ZGVhMTU1NjllMjNkMGViYzc0OQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2020-04-02T22:29:10Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2020-04-02T22:29:10Z"}, "message": "Fix some comment typos in alias.c.\n\n2020-04-02  Sandra Loosemore  <sandra@codesourcery.com>\n\n\t* alias.c (get_alias_set): Fix comment typos.", "tree": {"sha": "db7a66aa6d06c0aee74936f3f1bce65d2168752e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db7a66aa6d06c0aee74936f3f1bce65d2168752e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63f56527335a7667769b5dea15569e23d0ebc749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63f56527335a7667769b5dea15569e23d0ebc749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63f56527335a7667769b5dea15569e23d0ebc749", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63f56527335a7667769b5dea15569e23d0ebc749/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a950bb6e95236bb60ec17cda36763945d3d0a714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a950bb6e95236bb60ec17cda36763945d3d0a714", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a950bb6e95236bb60ec17cda36763945d3d0a714"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "8c57cd58629e24c3a73b7fd898130b11f5ac1d5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63f56527335a7667769b5dea15569e23d0ebc749/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63f56527335a7667769b5dea15569e23d0ebc749/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63f56527335a7667769b5dea15569e23d0ebc749", "patch": "@@ -1,3 +1,7 @@\n+2020-04-02  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* alias.c (get_alias_set): Fix comment typos.\n+\n 2020-04-02  Fritz Reese  <foreese@gcc.gnu.org>\n \n \tPR fortran/85982"}, {"sha": "49bd7b37966f1e836b601840328a77cdd4af61f5", "filename": "gcc/alias.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63f56527335a7667769b5dea15569e23d0ebc749/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63f56527335a7667769b5dea15569e23d0ebc749/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=63f56527335a7667769b5dea15569e23d0ebc749", "patch": "@@ -861,7 +861,7 @@ get_alias_set (tree t)\n   alias_set_type set;\n \n   /* We cannot give up with -fno-strict-aliasing because we need to build\n-     proper type representation for possible functions which are build with\n+     proper type representations for possible functions which are built with\n      -fstrict-aliasing.  */\n \n   /* return 0 if this or its type is an error.  */\n@@ -920,9 +920,9 @@ get_alias_set (tree t)\n       if (set != -1)\n \treturn set;\n       /* Handle structure type equality for pointer types, arrays and vectors.\n-\t This is easy to do, because the code bellow ignore canonical types on\n+\t This is easy to do, because the code below ignores canonical types on\n \t these anyway.  This is important for LTO, where TYPE_CANONICAL for\n-\t pointers cannot be meaningfuly computed by the frotnend.  */\n+\t pointers cannot be meaningfully computed by the frontend.  */\n       if (canonical_type_used_p (t))\n \t{\n \t  /* In LTO we set canonical types for all types where it makes\n@@ -1031,9 +1031,9 @@ get_alias_set (tree t)\n \t   || TREE_CODE (p) == VECTOR_TYPE;\n \t   p = TREE_TYPE (p))\n \t{\n-\t  /* Ada supports recusive pointers.  Instead of doing recrusion check\n-\t     just give up once the preallocated space of 8 elements is up.\n-\t     In this case just punt to void * alias set.  */\n+\t  /* Ada supports recursive pointers.  Instead of doing recursion\n+\t     check, just give up once the preallocated space of 8 elements\n+\t     is up.  In this case just punt to void * alias set.  */\n \t  if (reference.length () == 8)\n \t    {\n \t      p = ptr_type_node;\n@@ -1048,7 +1048,7 @@ get_alias_set (tree t)\n \t}\n       p = TYPE_MAIN_VARIANT (p);\n \n-      /* In LTO for C++ programs we can turn in complete types to complete\n+      /* In LTO for C++ programs we can turn incomplete types to complete\n \t using ODR name lookup.  */\n       if (in_lto_p && TYPE_STRUCTURAL_EQUALITY_P (p) && odr_type_p (p))\n \t{"}]}