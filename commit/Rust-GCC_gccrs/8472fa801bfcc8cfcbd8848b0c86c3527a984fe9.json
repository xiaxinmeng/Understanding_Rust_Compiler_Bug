{"sha": "8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3MmZhODAxYmZjYzhjZmNiZDg4NDhiMGM4NmMzNTI3YTk4NGZlOQ==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2014-02-04T17:25:38Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-02-04T17:25:38Z"}, "message": "re PR ipa/60058 (internal compiler error: Segmentation fault)\n\n\n\tPR ipa/60058\n\t* ipa-cp.c (ipa_get_indirect_edge_target_1): Check that target\n\tis non-null.\n\t* g++.dg/torture/pr60058.C: New testcase.\n\nFrom-SVN: r207478", "tree": {"sha": "2dfd80c3d5ad38be932f5fb35f09f90abb05463b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dfd80c3d5ad38be932f5fb35f09f90abb05463b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/comments", "author": null, "committer": null, "parents": [{"sha": "df98e37fb714b93c45f9d0ce38a15c779573f0e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df98e37fb714b93c45f9d0ce38a15c779573f0e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df98e37fb714b93c45f9d0ce38a15c779573f0e4"}], "stats": {"total": 68, "additions": 56, "deletions": 12}, "files": [{"sha": "68ec96251eec71dfd04583b59a3b207db89c2fea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "patch": "@@ -1,3 +1,9 @@\n+2014-02-04  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR ipa/60058\n+\t* ipa-cp.c (ipa_get_indirect_edge_target_1): Check that target\n+\tis non-null.\n+\n 2014-02-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gimple-fold.c (can_refer_decl_in_current_unit_p): Default visibility is safe."}, {"sha": "a2682bbe18d49dc2a565c792c53cc0afd405cc57", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "patch": "@@ -1573,20 +1573,23 @@ ipa_get_indirect_edge_target_1 (struct cgraph_edge *ie,\n \t{\n \t  target = gimple_get_virt_method_for_vtable (ie->indirect_info->otr_token,\n \t\t\t\t\t\t      vtable, offset);\n-\t  if ((TREE_CODE (TREE_TYPE (target)) == FUNCTION_TYPE\n-\t       && DECL_FUNCTION_CODE (target) == BUILT_IN_UNREACHABLE)\n-\t      || !possible_polymorphic_call_target_p\n-\t\t   (ie, cgraph_get_node (target)))\n+\t  if (target)\n \t    {\n-\t      if (dump_file)\n-\t\tfprintf (dump_file,\n-\t\t\t \"Type inconsident devirtualization: %s/%i->%s\\n\",\n-\t\t\t ie->caller->name (), ie->caller->order,\n-\t\t\t IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (target)));\n-\t      target = builtin_decl_implicit (BUILT_IN_UNREACHABLE);\n-\t      cgraph_get_create_node (target);\n+\t      if ((TREE_CODE (TREE_TYPE (target)) == FUNCTION_TYPE\n+\t\t   && DECL_FUNCTION_CODE (target) == BUILT_IN_UNREACHABLE)\n+\t\t  || !possible_polymorphic_call_target_p\n+\t\t       (ie, cgraph_get_node (target)))\n+\t\t{\n+\t\t  if (dump_file)\n+\t\t    fprintf (dump_file,\n+\t\t\t     \"Type inconsident devirtualization: %s/%i->%s\\n\",\n+\t\t\t     ie->caller->name (), ie->caller->order,\n+\t\t\t     IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (target)));\n+\t\t  target = builtin_decl_implicit (BUILT_IN_UNREACHABLE);\n+\t\t  cgraph_get_create_node (target);\n+\t\t}\n+\t      return target;\n \t    }\n-\t  return target;\n \t}\n     }\n "}, {"sha": "028b911c271ea0ef3064d815cc87e497045e13b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "patch": "@@ -1,3 +1,8 @@\n+2014-02-04  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR ipa/60058\n+\t* g++.dg/torture/pr60058.C: New testcase.\n+\n 2014-02-04  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* g++.dg/tsan/default_options.C: Invert check."}, {"sha": "1144137cb91831155690747de097a11d65a63380", "filename": "gcc/testsuite/g++.dg/torture/pr60058.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60058.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8472fa801bfcc8cfcbd8848b0c86c3527a984fe9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60058.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60058.C?ref=8472fa801bfcc8cfcbd8848b0c86c3527a984fe9", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+\n+typedef enum {} UErrorCode;\n+class A {\n+public:\n+  virtual A &m_fn1(A &, const A &, UErrorCode &) const;\n+  void m_fn2();\n+  A();\n+  A(int);\n+};\n+class __attribute__((visibility(\"hidden\"))) B : public A {\n+public:\n+  B(A &p1) : norm2(p1), set(0) {}\n+  A &m_fn1(A &, const A &, UErrorCode &) const;\n+  A &norm2;\n+  const int &set;\n+};\n+\n+UErrorCode a;\n+A c;\n+void fn1(A *p1) {\n+  A b;\n+  p1->m_fn1(b, 0, a).m_fn2();\n+}\n+\n+void fn2() {\n+  B d(c);\n+  fn1(&d);\n+}"}]}