{"sha": "f64b9ed94ccf6ee21b769a7213def41918d793a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY0YjllZDk0Y2NmNmVlMjFiNzY5YTcyMTNkZWY0MTkxOGQ3OTNhMQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-10-06T11:45:05Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-10-06T11:45:05Z"}, "message": "re PR fortran/84640 (gcc/fortran/simplify.c:2587:9: runtime error: pointer index expression with base 0x0000090de160 overflowed to 0xffffffffc0632960)\n\n 2018-10-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84640\n\t* simplify.c (gfc_simplify_cshift): Extend size of hs_ex and ss_ex\n\tby one. Set extents one past the array boundaries to zero to avoid\n\twarning with instrumented compiler.\n\t(gfc_simplify_eoshift): Likewise, only for ss_ex.\n\nFrom-SVN: r264898", "tree": {"sha": "3d0da4751f218c71c5f5f1f5bbcc3805ebdfc9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d0da4751f218c71c5f5f1f5bbcc3805ebdfc9f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f64b9ed94ccf6ee21b769a7213def41918d793a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64b9ed94ccf6ee21b769a7213def41918d793a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f64b9ed94ccf6ee21b769a7213def41918d793a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64b9ed94ccf6ee21b769a7213def41918d793a1/comments", "author": null, "committer": null, "parents": [{"sha": "a141f2d86293dc202e35bd4d7f832756e1792cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a141f2d86293dc202e35bd4d7f832756e1792cdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a141f2d86293dc202e35bd4d7f832756e1792cdf"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "309a714aeaf7307f14db6866171b269ad8153539", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64b9ed94ccf6ee21b769a7213def41918d793a1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64b9ed94ccf6ee21b769a7213def41918d793a1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f64b9ed94ccf6ee21b769a7213def41918d793a1", "patch": "@@ -1,3 +1,11 @@\n+ 2018-10-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84640\n+\t* simplify.c (gfc_simplify_cshift): Extend size of hs_ex and ss_ex\n+\tby one. Set extents one past the array boundaries to zero to avoid\n+\twarning with instrumented compiler.\n+\t(gfc_simplify_eoshift): Likewise, only for ss_ex.\n+\n 2018-10-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/87487"}, {"sha": "7bdd23d4e72c301618e0133bc5d1c71b6a9a0df6", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64b9ed94ccf6ee21b769a7213def41918d793a1/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64b9ed94ccf6ee21b769a7213def41918d793a1/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=f64b9ed94ccf6ee21b769a7213def41918d793a1", "patch": "@@ -2011,11 +2011,11 @@ gfc_simplify_cshift (gfc_expr *array, gfc_expr *shift, gfc_expr *dim)\n   ssize_t *shiftvec, *hptr;\n   ssize_t shift_val, len;\n   ssize_t count[GFC_MAX_DIMENSIONS], extent[GFC_MAX_DIMENSIONS],\n-    hs_ex[GFC_MAX_DIMENSIONS],\n+    hs_ex[GFC_MAX_DIMENSIONS + 1],\n     hstride[GFC_MAX_DIMENSIONS], sstride[GFC_MAX_DIMENSIONS],\n     a_extent[GFC_MAX_DIMENSIONS], a_stride[GFC_MAX_DIMENSIONS],\n     h_extent[GFC_MAX_DIMENSIONS],\n-    ss_ex[GFC_MAX_DIMENSIONS];\n+    ss_ex[GFC_MAX_DIMENSIONS + 1];\n   ssize_t rsoffset;\n   int d, n;\n   bool continue_loop;\n@@ -2110,6 +2110,8 @@ gfc_simplify_cshift (gfc_expr *array, gfc_expr *shift, gfc_expr *dim)\n \t  n++;\n \t}\n     }\n+  ss_ex[n] = 0;\n+  hs_ex[n] = 0;\n \n   if (shiftvec)\n     {\n@@ -2403,7 +2405,7 @@ gfc_simplify_eoshift (gfc_expr *array, gfc_expr *shift, gfc_expr *boundary,\n   ssize_t shift_val, len;\n   ssize_t count[GFC_MAX_DIMENSIONS], extent[GFC_MAX_DIMENSIONS],\n     sstride[GFC_MAX_DIMENSIONS], a_extent[GFC_MAX_DIMENSIONS],\n-    a_stride[GFC_MAX_DIMENSIONS], ss_ex[GFC_MAX_DIMENSIONS];\n+    a_stride[GFC_MAX_DIMENSIONS], ss_ex[GFC_MAX_DIMENSIONS + 1];\n   ssize_t rsoffset;\n   int d, n;\n   bool continue_loop;\n@@ -2546,6 +2548,7 @@ gfc_simplify_eoshift (gfc_expr *array, gfc_expr *shift, gfc_expr *boundary,\n \t  n++;\n \t}\n     }\n+  ss_ex[n] = 0;\n \n   continue_loop = true;\n   d = array->rank;"}]}