{"sha": "d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNlNmNhYjJlMGMzOTc1MjdhNGQ3YTA2ZDUyYWYwNGZkNGE4YzExYQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2018-04-25T12:32:19Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-04-25T12:32:19Z"}, "message": "[NDS32] Fix bug in bit-instruction checking functions.\n\ngcc/\n\t* config/nds32/nds32-predicates.c (nds32_can_use_bclr_p): Mask with\n\tGET_MODE_MASK before any checking.\n\t(nds32_can_use_bset_p): Likewise.\n\t(nds32_can_use_btgl_p): Likewise.\n\nFrom-SVN: r259647", "tree": {"sha": "a4d96b6da0b67edbf7af34654a6fcb269abe78e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4d96b6da0b67edbf7af34654a6fcb269abe78e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed4230b2f9bfe98205b155df607bf6c608b1b78d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4230b2f9bfe98205b155df607bf6c608b1b78d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4230b2f9bfe98205b155df607bf6c608b1b78d"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "6ea0aaa7eeaa1ef4dd02a3d72f418653c62d9234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a", "patch": "@@ -1,3 +1,10 @@\n+2018-04-25  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32-predicates.c (nds32_can_use_bclr_p): Mask with\n+\tGET_MODE_MASK before any checking.\n+\t(nds32_can_use_bset_p): Likewise.\n+\t(nds32_can_use_btgl_p): Likewise.\n+\n 2018-04-25  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32-doubleword.md: New define_split pattern for"}, {"sha": "a670623bf9a12daaaaa379d8ade6c02e061dc1c8", "filename": "gcc/config/nds32/nds32-predicates.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c?ref=d3e6cab2e0c397527a4d7a06d52af04fd4a8c11a", "patch": "@@ -360,12 +360,13 @@ int\n nds32_can_use_bclr_p (int ival)\n {\n   int one_bit_count;\n+  unsigned HOST_WIDE_INT mask = GET_MODE_MASK (SImode);\n \n   /* Calculate the number of 1-bit of (~ival), if there is only one 1-bit,\n      it means the original ival has only one 0-bit,\n      So it is ok to perform 'bclr' operation.  */\n \n-  one_bit_count = popcount_hwi ((unsigned HOST_WIDE_INT) (~ival));\n+  one_bit_count = popcount_hwi ((unsigned HOST_WIDE_INT) (~ival) & mask);\n \n   /* 'bclr' is a performance extension instruction.  */\n   return (TARGET_EXT_PERF && (one_bit_count == 1));\n@@ -376,11 +377,12 @@ int\n nds32_can_use_bset_p (int ival)\n {\n   int one_bit_count;\n+  unsigned HOST_WIDE_INT mask = GET_MODE_MASK (SImode);\n \n   /* Caculate the number of 1-bit of ival, if there is only one 1-bit,\n      it is ok to perform 'bset' operation.  */\n \n-  one_bit_count = popcount_hwi ((unsigned HOST_WIDE_INT) (ival));\n+  one_bit_count = popcount_hwi ((unsigned HOST_WIDE_INT) (ival) & mask);\n \n   /* 'bset' is a performance extension instruction.  */\n   return (TARGET_EXT_PERF && (one_bit_count == 1));\n@@ -391,11 +393,12 @@ int\n nds32_can_use_btgl_p (int ival)\n {\n   int one_bit_count;\n+  unsigned HOST_WIDE_INT mask = GET_MODE_MASK (SImode);\n \n   /* Caculate the number of 1-bit of ival, if there is only one 1-bit,\n      it is ok to perform 'btgl' operation.  */\n \n-  one_bit_count = popcount_hwi ((unsigned HOST_WIDE_INT) (ival));\n+  one_bit_count = popcount_hwi ((unsigned HOST_WIDE_INT) (ival) & mask);\n \n   /* 'btgl' is a performance extension instruction.  */\n   return (TARGET_EXT_PERF && (one_bit_count == 1));"}]}