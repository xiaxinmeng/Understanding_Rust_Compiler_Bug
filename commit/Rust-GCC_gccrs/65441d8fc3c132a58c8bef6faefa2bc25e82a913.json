{"sha": "65441d8fc3c132a58c8bef6faefa2bc25e82a913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU0NDFkOGZjM2MxMzJhNThjOGJlZjZmYWVmYTJiYzI1ZTgyYTkxMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-19T10:03:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-19T12:02:11Z"}, "message": "libstdc++: Improve overflow check for file timestamps\n\nThe current code assumes that system_clock::duration is nanoseconds, and\nalso performs a value-changing conversion from nanoseconds::max() to\ndouble (which doesn't matter after dividing by 1e9, but triggers a\nwarning with Clang nonetheless).\n\nA better solution is to use system_clock::duration::max() and perform\nthe comparison entirely using the std::chrono types, rather than with\ndimensionless arithmetic types.\n\nThis doesn't address the FIXME in the function, so the overflow check\nstill rejects some values that could be represented by the file_clock.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/filesystem/ops-common.h (filesystem::file_time): Improve\n\toverflow check by using system_clock::duration::max().", "tree": {"sha": "bab239b99473d7f922535c6b57a8cca5ba683fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bab239b99473d7f922535c6b57a8cca5ba683fd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65441d8fc3c132a58c8bef6faefa2bc25e82a913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65441d8fc3c132a58c8bef6faefa2bc25e82a913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65441d8fc3c132a58c8bef6faefa2bc25e82a913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65441d8fc3c132a58c8bef6faefa2bc25e82a913/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a1cf1a7a8be1dc0de48035d88fecf4954e37ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8a1cf1a7a8be1dc0de48035d88fecf4954e37ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8a1cf1a7a8be1dc0de48035d88fecf4954e37ba"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bf26c06b7b5ce12c845c796c0a84d5c4135a3726", "filename": "libstdc++-v3/src/filesystem/ops-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65441d8fc3c132a58c8bef6faefa2bc25e82a913/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65441d8fc3c132a58c8bef6faefa2bc25e82a913/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h?ref=65441d8fc3c132a58c8bef6faefa2bc25e82a913", "patch": "@@ -229,7 +229,7 @@ namespace __gnu_posix\n     // (This only applies to the C++17 Filesystem library, because for the\n     // Filesystem TS we don't have a distinct __file_clock, we just use the\n     // system clock for file timestamps).\n-    if (s >= (nanoseconds::max().count() / 1e9))\n+    if (seconds{s} >= floor<seconds>(system_clock::duration::max()))\n       {\n \tec = std::make_error_code(std::errc::value_too_large); // EOVERFLOW\n \treturn system_clock::time_point::min();"}]}