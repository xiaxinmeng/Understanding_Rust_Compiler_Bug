{"sha": "499568ed0202754e468970c3572ad560001a83cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5NTY4ZWQwMjAyNzU0ZTQ2ODk3MGMzNTcyYWQ1NjAwMDFhODNjZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-05-16T23:19:23Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-05-16T23:19:23Z"}, "message": "ipa-utils.h (warn_types_mismatch, [...]): Declare.\n\n\n\t* ipa-utils.h (warn_types_mismatch, odr_or_derived_type_p,\n\todr_types_equivalent_p): Declare.\n\t(odr_type_p): Use gcc_checking_assert.\n\t(type_in_anonymous_namespace_p) Declare.\n\t(type_with_linkage_p): Declare.\n\t* common.opt (Wlto-type-mismatch): New warning.\n\t* ipa-devirt.c (compound_type_base): New function.\n\t(odr_or_derived_type_p): New function.\n\t(odr_types_equivalent_p): New function.\n\t(add_type_duplicate): Simplify.\n\t(type_with_linkage_p): Add hack to prevent false positives on C types\n\t(type_in_anonymous_namespace_p): Likewise.\n\t* tree.c (need_assembler_name_p): Use type_with_linkage.\n\t* tree.h (type_in_anonymous_namespace_p): Remove.\n\t* doc/invoke.texi (-Wlto-type-mismatch): Document\n\nFrom-SVN: r223259", "tree": {"sha": "dd9ae7ad5fd951386a60f02f271be5d8fb8ce939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd9ae7ad5fd951386a60f02f271be5d8fb8ce939"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/499568ed0202754e468970c3572ad560001a83cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499568ed0202754e468970c3572ad560001a83cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/499568ed0202754e468970c3572ad560001a83cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499568ed0202754e468970c3572ad560001a83cf/comments", "author": null, "committer": null, "parents": [{"sha": "259d29e396dbee07d0211196cd212c3464c5c325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/259d29e396dbee07d0211196cd212c3464c5c325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/259d29e396dbee07d0211196cd212c3464c5c325"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "ee7f737e16df8b62f9c6f4ec63a82cf2b3208731", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499568ed0202754e468970c3572ad560001a83cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499568ed0202754e468970c3572ad560001a83cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=499568ed0202754e468970c3572ad560001a83cf", "patch": "@@ -1,3 +1,21 @@\n+2015-05-16  Jan HUbicka  <hubicka@ucw.cz>\n+\n+\t* ipa-utils.h (warn_types_mismatch, odr_or_derived_type_p,\n+\todr_types_equivalent_p): Declare.\n+\t(odr_type_p): Use gcc_checking_assert.\n+\t(type_in_anonymous_namespace_p) Declare.\n+\t(type_with_linkage_p): Declare.\n+\t* common.opt (Wlto-type-mismatch): New warning.\n+\t* ipa-devirt.c (compound_type_base): New function.\n+\t(odr_or_derived_type_p): New function.\n+\t(odr_types_equivalent_p): New function.\n+\t(add_type_duplicate): Simplify.\n+\t(type_with_linkage_p): Add hack to prevent false positives on C types\n+\t(type_in_anonymous_namespace_p): Likewise.\n+\t* tree.c (need_assembler_name_p): Use type_with_linkage.\n+\t* tree.h (type_in_anonymous_namespace_p): Remove.\n+\t* doc/invoke.texi (-Wlto-type-mismatch): Document\n+\n 2015-05-16  Jan HUbicka  <hubicka@ucw.cz>\n \n \t* tree.c (verify_type_variant): Verify tree_base and type_common flags."}]}