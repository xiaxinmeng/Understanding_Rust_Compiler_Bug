{"sha": "5fc6b47ac69605297ade8ff79468eaa836d707a0", "node_id": "C_kwDOANBUbNoAKDVmYzZiNDdhYzY5NjA1Mjk3YWRlOGZmNzk0NjhlYWE4MzZkNzA3YTA", "commit": {"author": {"name": "Etienne Servais", "email": "servais@adacore.com", "date": "2021-11-03T14:48:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-11-10T08:57:41Z"}, "message": "[Ada] ACATS BDC1002 shall not error on arbitrary aspect\n\ngcc/ada/\n\n\t* aspects.adb, aspects.ads (Is_Aspect_Id): New function.\n\t* namet-sp.ads, namet-sp.adb (Aspect_Spell_Check,\n\tAttribute_Spell_Check): New Functions.\n\t* par-ch13.adb (Possible_Misspelled_Aspect): Removed.\n\t(With_Present): Use Aspect_Spell_Check, use Is_Aspect_Id.\n\t(Get_Aspect_Specifications): Use Aspect_Spell_Check,\n\tIs_Aspect_Id, Bad_Aspect.\n\t* par-sync.adb (Resync_Past_Malformed_Aspect): Use Is_Aspect_Id.\n\t* sem_ch13.adb (Check_One_Attr): Use Is_Aspect_Id.\n\t* sem_prag.adb (Process_Restrictions_Or_Restriction_Warnings):\n\tIntroduce the Process_No_Specification_Of_Aspect, emit a warning\n\tinstead of an error on unknown aspect, hint for typos.\n\tIntroduce Process_No_Use_Of_Attribute to add spell check for\n\tattributes too.\n\t(Set_Error_Msg_To_Profile_Name): Use Is_Aspect_Id.\n\t* sem_util.adb (Bad_Attribute): Use Attribute_Spell_Check.\n\t(Bad_Aspect): New function.\n\t* sem_util.ads (Bad_Aspect): New function.", "tree": {"sha": "78f650470847818392a34fb539fa4b96ddda0aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78f650470847818392a34fb539fa4b96ddda0aa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fc6b47ac69605297ade8ff79468eaa836d707a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc6b47ac69605297ade8ff79468eaa836d707a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fc6b47ac69605297ade8ff79468eaa836d707a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc6b47ac69605297ade8ff79468eaa836d707a0/comments", "author": {"login": "vser1", "id": 8308457, "node_id": "MDQ6VXNlcjgzMDg0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8308457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vser1", "html_url": "https://github.com/vser1", "followers_url": "https://api.github.com/users/vser1/followers", "following_url": "https://api.github.com/users/vser1/following{/other_user}", "gists_url": "https://api.github.com/users/vser1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vser1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vser1/subscriptions", "organizations_url": "https://api.github.com/users/vser1/orgs", "repos_url": "https://api.github.com/users/vser1/repos", "events_url": "https://api.github.com/users/vser1/events{/privacy}", "received_events_url": "https://api.github.com/users/vser1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "301526488738f16fa1018a2f1c9ce3138ecdf2cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301526488738f16fa1018a2f1c9ce3138ecdf2cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301526488738f16fa1018a2f1c9ce3138ecdf2cb"}], "stats": {"total": 240, "additions": 164, "deletions": 76}, "files": [{"sha": "bf661b97a9b2a3fb813eda310756bf5d6ec9fbe8", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -323,6 +323,16 @@ package body Aspects is\n       return Present (Find_Aspect (Id, A, Class_Present => Class_Present));\n    end Has_Aspect;\n \n+   ------------------\n+   -- Is_Aspect_Id --\n+   ------------------\n+\n+   function Is_Aspect_Id (Aspect : Name_Id) return Boolean is\n+     (Get_Aspect_Id (Aspect) /= No_Aspect);\n+\n+   function Is_Aspect_Id (Aspect : Node_Id) return Boolean is\n+     (Get_Aspect_Id (Aspect) /= No_Aspect);\n+\n    ------------------\n    -- Move_Aspects --\n    ------------------"}, {"sha": "4bb28ceb7a123767f63b91617e2b31fc9e44f838", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -773,6 +773,14 @@ package Aspects is\n    --  Given an aspect specification, return the corresponding aspect_id value.\n    --  If the name does not match any aspect, return No_Aspect.\n \n+   function Is_Aspect_Id (Aspect : Name_Id) return Boolean;\n+   pragma Inline (Is_Aspect_Id);\n+   --  Return True if a corresponding aspect id exists\n+\n+   function Is_Aspect_Id (Aspect : Node_Id) return Boolean;\n+   pragma Inline (Is_Aspect_Id);\n+   --  Return True if a corresponding aspect id exists\n+\n    ------------------------------------\n    -- Delaying Evaluation of Aspects --\n    ------------------------------------"}, {"sha": "f10373ff45a6adb19c2837f9c182425c03b55a79", "filename": "gcc/ada/namet-sp.adb", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fnamet-sp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fnamet-sp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet-sp.adb?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -23,6 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Aspects;\n+with Snames;\n with System.WCh_Cnv; use System.WCh_Cnv;\n \n with GNAT.UTF_32_Spelling_Checker;\n@@ -44,6 +46,44 @@ package body Namet.Sp is\n    --  either Name_Buffer or Name_Len. The result is in Result (1 .. Length).\n    --  The caller must ensure that the result buffer is long enough.\n \n+   ------------------------\n+   -- Aspect_Spell_Check --\n+   ------------------------\n+\n+   function Aspect_Spell_Check (Name : Name_Id) return Boolean is\n+     (Aspect_Spell_Check (Name) /= No_Name);\n+\n+   function Aspect_Spell_Check (Name : Name_Id) return Name_Id is\n+      use Aspects;\n+   begin\n+      for J in Aspect_Id_Exclude_No_Aspect loop\n+         if Is_Bad_Spelling_Of (Name, Aspect_Names (J)) then\n+            return Aspect_Names (J);\n+         end if;\n+      end loop;\n+\n+      return No_Name;\n+   end Aspect_Spell_Check;\n+\n+   ---------------------------\n+   -- Attribute_Spell_Check --\n+   ---------------------------\n+\n+   function Attribute_Spell_Check (N : Name_Id) return Boolean is\n+     (Attribute_Spell_Check (N) /= No_Name);\n+\n+   function Attribute_Spell_Check (N : Name_Id) return Name_Id is\n+      use Snames;\n+   begin\n+      for J in First_Attribute_Name .. Last_Attribute_Name loop\n+         if Is_Bad_Spelling_Of (N, J) then\n+            return J;\n+         end if;\n+      end loop;\n+\n+      return No_Name;\n+   end Attribute_Spell_Check;\n+\n    ----------------------------\n    -- Get_Name_String_UTF_32 --\n    ----------------------------"}, {"sha": "23dbd2bd28c739f070746412276ce77c3d4c9ab2", "filename": "gcc/ada/namet-sp.ads", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fnamet-sp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fnamet-sp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet-sp.ads?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -31,6 +31,20 @@\n \n package Namet.Sp is\n \n+   function Aspect_Spell_Check (Name : Name_Id) return Boolean;\n+   --  Returns True, if Name is a misspelling of some aspect name\n+\n+   function Aspect_Spell_Check (Name : Name_Id) return Name_Id;\n+   --  Returns a possible correction, if Name is a misspelling of some aspect\n+   --  name. If not, return No_Name.\n+\n+   function Attribute_Spell_Check (N : Name_Id) return Boolean;\n+   --  Returns True, if Name is a misspelling of some attribute name\n+\n+   function Attribute_Spell_Check (N : Name_Id) return Name_Id;\n+   --  Returns a possible correction, if Name is a misspelling of some\n+   --  attribute name. If not, return No_Name.\n+\n    function Is_Bad_Spelling_Of (Found, Expect : Name_Id) return Boolean;\n    --  Compares two identifier names from the names table, and returns True if\n    --  Found is a plausible misspelling of Expect. This function properly deals"}, {"sha": "227696afcd79a944fea231c9826f953b93a9a968", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 9, "deletions": 38, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -47,28 +47,10 @@ package body Ch13 is\n       Scan_State : Saved_Scan_State;\n       Result     : Boolean;\n \n-      function Possible_Misspelled_Aspect return Boolean;\n-      --  Returns True, if Token_Name is a misspelling of some aspect name\n-\n       function With_Present return Boolean;\n       --  Returns True if WITH is present, indicating presence of aspect\n       --  specifications. Also allows incorrect use of WHEN in place of WITH.\n \n-      --------------------------------\n-      -- Possible_Misspelled_Aspect --\n-      --------------------------------\n-\n-      function Possible_Misspelled_Aspect return Boolean is\n-      begin\n-         for J in Aspect_Id_Exclude_No_Aspect loop\n-            if Is_Bad_Spelling_Of (Token_Name, Aspect_Names (J)) then\n-               return True;\n-            end if;\n-         end loop;\n-\n-         return False;\n-      end Possible_Misspelled_Aspect;\n-\n       ------------------\n       -- With_Present --\n       ------------------\n@@ -89,7 +71,7 @@ package body Ch13 is\n                Scan; -- past WHEN\n \n                if Token = Tok_Identifier\n-                 and then Get_Aspect_Id (Token_Name) /= No_Aspect\n+                 and then Is_Aspect_Id (Token_Name)\n                then\n                   Error_Msg_SC (\"WHEN should be WITH\");\n                   Restore_Scan_State (Scan_State);\n@@ -149,8 +131,8 @@ package body Ch13 is\n       --  specification is ill-formed.\n \n       elsif not Strict then\n-         if Get_Aspect_Id (Token_Name) /= No_Aspect\n-           or else Possible_Misspelled_Aspect\n+         if Is_Aspect_Id (Token_Name)\n+           or else Aspect_Spell_Check (Token_Name)\n          then\n             Result := True;\n          else\n@@ -164,7 +146,7 @@ package body Ch13 is\n       --  is still an aspect specification so we give an appropriate message.\n \n       else\n-         if Get_Aspect_Id (Token_Name) = No_Aspect then\n+         if not Is_Aspect_Id (Token_Name) then\n             Result := False;\n \n          else\n@@ -271,21 +253,10 @@ package body Ch13 is\n             begin\n                Check_Restriction (Msg_Issued, No_Unrecognized_Aspects, Aspect);\n                if not Msg_Issued then\n-                  Error_Msg_Warn := not Debug_Flag_2;\n-                  Error_Msg_N\n-                    (\"<<& is not a valid aspect identifier\", Token_Node);\n-                  OK := False;\n+                  Bad_Aspect (Token_Node, Token_Name, not Debug_Flag_2);\n \n-                  --  Check bad spelling\n+                  OK := False;\n \n-                  for J in Aspect_Id_Exclude_No_Aspect loop\n-                     if Is_Bad_Spelling_Of (Token_Name, Aspect_Names (J)) then\n-                        Error_Msg_Name_1 := Aspect_Names (J);\n-                        Error_Msg_N -- CODEFIX\n-                          (\"\\<<possible misspelling of%\", Token_Node);\n-                        exit;\n-                     end if;\n-                  end loop;\n                end if;\n             end;\n \n@@ -456,7 +427,7 @@ package body Ch13 is\n                            --         Aspect => ...\n \n                            if Token = Tok_Identifier\n-                             and then Get_Aspect_Id (Token_Name) /= No_Aspect\n+                             and then Is_Aspect_Id (Token_Name)\n                            then\n                               Restore_Scan_State (Scan_State);\n \n@@ -588,7 +559,7 @@ package body Ch13 is\n          --  and proceed to the next aspect.\n \n          elsif Token = Tok_Identifier\n-           and then Get_Aspect_Id (Token_Name) /= No_Aspect\n+           and then Is_Aspect_Id (Token_Name)\n          then\n             declare\n                Scan_State : Saved_Scan_State;\n@@ -626,7 +597,7 @@ package body Ch13 is\n                Scan; -- past semicolon\n \n                if Token = Tok_Identifier\n-                 and then Get_Aspect_Id (Token_Name) /= No_Aspect\n+                 and then Is_Aspect_Id (Token_Name)\n                then\n                   Scan; -- past identifier\n "}, {"sha": "05188a7e1f2dd9b59c2997e2c1d5117cbdb1a833", "filename": "gcc/ada/par-sync.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fpar-sync.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fpar-sync.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-sync.adb?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -172,7 +172,7 @@ package body Sync is\n                --  current malformed aspect has been successfully skipped.\n \n                if Token = Tok_Identifier\n-                 and then Get_Aspect_Id (Token_Name) /= No_Aspect\n+                 and then Is_Aspect_Id (Token_Name)\n                then\n                   Restore_Scan_State (Scan_State);\n                   exit;"}, {"sha": "f6679456f2b0c4cfafb797d39077685bfb556169", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -6249,7 +6249,7 @@ package body Sem_Ch13 is\n \n       Check_Restriction_No_Use_Of_Attribute (N);\n \n-      if Get_Aspect_Id (Chars (N)) /= No_Aspect then\n+      if Is_Aspect_Id (Chars (N)) then\n          --  6.1/3 No_Specification_of_Aspect: Identifies an aspect for which\n          --    no aspect_specification, attribute_definition_clause, or pragma\n          --    is given."}, {"sha": "c3ea16df54d9ca6289f9270d6d70aeff028e2773", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 46, "deletions": 25, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -10444,6 +10444,49 @@ package body Sem_Prag is\n          Expr  : Node_Id;\n          Val   : Uint;\n \n+         procedure Process_No_Specification_of_Aspect;\n+         --  Process the No_Specification_of_Aspect restriction\n+\n+         procedure Process_No_Use_Of_Attribute;\n+         --  Process the No_Use_Of_Attribute restriction\n+\n+         ----------------------------------------\n+         -- Process_No_Specification_of_Aspect --\n+         ----------------------------------------\n+\n+         procedure Process_No_Specification_of_Aspect is\n+            Name : constant Name_Id := Chars (Expr);\n+         begin\n+            if Nkind (Expr) = N_Identifier\n+               and then Is_Aspect_Id (Name)\n+            then\n+               Set_Restriction_No_Specification_Of_Aspect (Expr, Warn);\n+            else\n+               Bad_Aspect (Expr, Name, Warn => True);\n+\n+               raise Pragma_Exit;\n+            end if;\n+         end Process_No_Specification_of_Aspect;\n+\n+         ---------------------------------\n+         -- Process_No_Use_Of_Attribute --\n+         ---------------------------------\n+\n+         procedure Process_No_Use_Of_Attribute is\n+            Name : constant Name_Id := Chars (Expr);\n+         begin\n+            if Nkind (Expr) = N_Identifier\n+               and then Is_Attribute_Name (Name)\n+            then\n+               Set_Restriction_No_Use_Of_Attribute (Expr, Warn);\n+            else\n+               Bad_Attribute (Expr, Name, Warn => True);\n+            end if;\n+\n+         end Process_No_Use_Of_Attribute;\n+\n+      --  Start of processing for Process_Restrictions_Or_Restriction_Warnings\n+\n       begin\n          --  Ignore all Restrictions pragmas in CodePeer mode\n \n@@ -10668,34 +10711,12 @@ package body Sem_Prag is\n             --  Case of No_Specification_Of_Aspect => aspect-identifier\n \n             elsif Id = Name_No_Specification_Of_Aspect then\n-               declare\n-                  A_Id : Aspect_Id;\n-\n-               begin\n-                  if Nkind (Expr) /= N_Identifier then\n-                     A_Id := No_Aspect;\n-                  else\n-                     A_Id := Get_Aspect_Id (Chars (Expr));\n-                  end if;\n-\n-                  if A_Id = No_Aspect then\n-                     Error_Pragma_Arg (\"invalid restriction name\", Arg);\n-                  else\n-                     Set_Restriction_No_Specification_Of_Aspect (Expr, Warn);\n-                  end if;\n-               end;\n+               Process_No_Specification_of_Aspect;\n \n             --  Case of No_Use_Of_Attribute => attribute-identifier\n \n             elsif Id = Name_No_Use_Of_Attribute then\n-               if Nkind (Expr) /= N_Identifier\n-                 or else not Is_Attribute_Name (Chars (Expr))\n-               then\n-                  Error_Msg_N (\"unknown attribute name??\", Expr);\n-\n-               else\n-                  Set_Restriction_No_Use_Of_Attribute (Expr, Warn);\n-               end if;\n+               Process_No_Use_Of_Attribute;\n \n             --  Case of No_Use_Of_Entity => fully-qualified-name\n \n@@ -11488,7 +11509,7 @@ package body Sem_Prag is\n \n       Check_Restriction_No_Use_Of_Pragma (N);\n \n-      if Get_Aspect_Id (Chars (Pragma_Identifier (N))) /= No_Aspect then\n+      if Is_Aspect_Id (Chars (Pragma_Identifier (N))) then\n          --  6.1/3 No_Specification_of_Aspect: Identifies an aspect for which\n          --    no aspect_specification, attribute_definition_clause, or pragma\n          --    is given."}, {"sha": "5feb83d31515f93d3de71df57c84e5957e79dff1", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -1606,6 +1606,27 @@ package body Sem_Util is\n         and then Scope_Depth (ST) >= Scope_Depth (SCT);\n    end Available_Full_View_Of_Component;\n \n+   ----------------\n+   -- Bad_Aspect --\n+   ----------------\n+\n+   procedure Bad_Aspect\n+     (N    : Node_Id;\n+      Nam  : Name_Id;\n+      Warn : Boolean := False)\n+   is\n+   begin\n+      Error_Msg_Warn := Warn;\n+      Error_Msg_N (\"<<& is not a valid aspect identifier\", N);\n+\n+      --  Check bad spelling\n+      Error_Msg_Name_1 := Aspect_Spell_Check (Nam);\n+      if Error_Msg_Name_1 /= No_Name then\n+         Error_Msg_N -- CODEFIX\n+            (\"\\<<possible misspelling of %\", N);\n+      end if;\n+   end Bad_Aspect;\n+\n    -------------------\n    -- Bad_Attribute --\n    -------------------\n@@ -1617,20 +1638,15 @@ package body Sem_Util is\n    is\n    begin\n       Error_Msg_Warn := Warn;\n-      Error_Msg_N (\"unrecognized attribute&<<\", N);\n+      Error_Msg_N (\"<<unrecognized attribute&\", N);\n \n       --  Check for possible misspelling\n \n-      Error_Msg_Name_1 := First_Attribute_Name;\n-      while Error_Msg_Name_1 <= Last_Attribute_Name loop\n-         if Is_Bad_Spelling_Of (Nam, Error_Msg_Name_1) then\n-            Error_Msg_N -- CODEFIX\n-              (\"\\possible misspelling of %<<\", N);\n-            exit;\n-         end if;\n-\n-         Error_Msg_Name_1 := Error_Msg_Name_1 + 1;\n-      end loop;\n+      Error_Msg_Name_1 := Attribute_Spell_Check (Nam);\n+      if Error_Msg_Name_1 /= No_Name then\n+         Error_Msg_N -- CODEFIX\n+            (\"\\<<possible misspelling of %\", N);\n+      end if;\n    end Bad_Attribute;\n \n    --------------------------------"}, {"sha": "abc18ec8d63f000bdd72d6aa3f49aec209b7941a", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc6b47ac69605297ade8ff79468eaa836d707a0/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=5fc6b47ac69605297ade8ff79468eaa836d707a0", "patch": "@@ -209,6 +209,14 @@ package Sem_Util is\n    --  are open, and the scope of the array is not outside the scope of the\n    --  component.\n \n+   procedure Bad_Aspect\n+     (N    : Node_Id;\n+      Nam  : Name_Id;\n+      Warn : Boolean := False);\n+   --  Called when node N is expected to contain a valid aspect name, and\n+   --  Nam is found instead. If Warn is set True this is a warning, else this\n+   --  is an error.\n+\n    procedure Bad_Attribute\n      (N    : Node_Id;\n       Nam  : Name_Id;"}]}