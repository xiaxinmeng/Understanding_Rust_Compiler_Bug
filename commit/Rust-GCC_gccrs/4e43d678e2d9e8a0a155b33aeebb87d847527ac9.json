{"sha": "4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU0M2Q2NzhlMmQ5ZThhMGExNTViMzNhZWViYjg3ZDg0NzUyN2FjOQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-03T21:57:34Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-04T07:48:30Z"}, "message": "Use '-frust-debug' to control dumping of various Rust front end internals\n\n... as discussed in #479, and elsewhere.", "tree": {"sha": "80cab08459e22566c1e75bf23a4e33e3f988de8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80cab08459e22566c1e75bf23a4e33e3f988de8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff4715d79e2c17d270db8b94315aa6b574f48994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff4715d79e2c17d270db8b94315aa6b574f48994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff4715d79e2c17d270db8b94315aa6b574f48994"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "192d82994ada2e2e26a751524fc5437479bd8dc7", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -51,7 +51,7 @@ $ make\n Running the compiler itself without make install we can simply invoke the compiler proper:\n \n ```bash\n-$ ./gcc/rust1 test.rs -frust-dump-parse -Warray-bounds -dumpbase test.rs -mtune=generic -march=x86-64 -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64\n+$ ./gcc/rust1 test.rs -frust-debug -frust-dump-parse -Warray-bounds -dumpbase test.rs -mtune=generic -march=x86-64 -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64\n ```\n \n To invoke the compiler driver (gccrs) we need to:\n@@ -170,12 +170,7 @@ $ docker run --rm -v \"$PWD\":/usr/src/myapp -w /usr/src/myapp \\\n     gcc/testsuite/rust/compile/torture/type_infer1.rs -S -o type_infer1.s \n ```\n \n-To emit the debug outputs you can add the option -frust-dump-all :\n-```bash\n-$ docker run --rm -v \"$PWD\":/usr/src/myapp -w /usr/src/myapp \\\n-    gccrs-dev:latest gccrs -g -O2 \\\n-    gcc/testsuite/rust/compile/torture/type_infer1.rs -o type_infer1 -frust-dump-all\n-```\n+To emit Rust front end debug output, you may add options like `-frust-debug`, `-frust-dump-all`.\n \n \n ## Contributing"}, {"sha": "707feeb29fbfacc280cb2cadb6b7b29dc4d5793e", "filename": "gcc/rust/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flang.opt?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -35,6 +35,10 @@ L\n Rust Joined Separate\n ; Not documented\n \n+frust-debug\n+Rust Var(flag_rust_debug)\n+Dump various Rust front end internals.\n+\n frust-dump-\n Rust Joined RejectNegative\n -frust-dump-<type>\tDump Rust frontend internal information."}, {"sha": "6f405c91fba78e196507b393eff9b54183817246", "filename": "gcc/rust/rust-diagnostics.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Frust-diagnostics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Frust-diagnostics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-diagnostics.cc?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -200,6 +200,9 @@ rust_error_at (const RichLocation location, const char *fmt, ...)\n void\n rust_debug (const Location location, const char *fmt, ...)\n {\n+  if (!rust_be_debug_p ())\n+    return;\n+\n   va_list ap;\n \n   va_start (ap, fmt);"}, {"sha": "6c179f9d0f327e807899a3a46e3024d8e71b44b6", "filename": "gcc/rust/rust-diagnostics.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Frust-diagnostics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Frust-diagnostics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-diagnostics.h?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -93,6 +93,8 @@ extern void\n rust_be_inform (const Location, const std::string &infomsg);\n extern void\n rust_be_get_quotechars (const char **open_quote, const char **close_quote);\n+extern bool\n+rust_be_debug_p (void);\n \n namespace Rust {\n /* A structure used to represent an error. Useful for enabling"}, {"sha": "de8acc8e3c9e853ea3072b465a8259114a25e1af", "filename": "gcc/rust/rust-gcc-diagnostics.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Frust-gcc-diagnostics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Frust%2Frust-gcc-diagnostics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc-diagnostics.cc?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -21,6 +21,8 @@\n #include \"rust-system.h\"\n #include \"rust-diagnostics.h\"\n \n+#include \"options.h\"\n+\n void\n rust_be_error_at (const Location location, const std::string &errmsg)\n {\n@@ -63,3 +65,9 @@ rust_be_get_quotechars (const char **open_qu, const char **close_qu)\n   *open_qu = open_quote;\n   *close_qu = close_quote;\n }\n+\n+bool\n+rust_be_debug_p (void)\n+{\n+  return !!flag_rust_debug;\n+}"}, {"sha": "90b0e575b45f947e3989d1efb2c997de922e7c73", "filename": "gcc/testsuite/rust/compile/debug-diagnostics-default.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-default.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-default.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-default.rs?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -0,0 +1,5 @@\n+// Make sure we don't see any 'note's:\n+// { dg-bogus {note: } \"\" { target *-*-* } 0 }\n+\n+fn main() {\n+}"}, {"sha": "77b82b35e62561d64cd0f61adf9f53ba77999bab", "filename": "gcc/testsuite/rust/compile/debug-diagnostics-off.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-off.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-off.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-off.rs?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fno-rust-debug\" }\n+\n+// Make sure we don't see any 'note's:\n+// { dg-bogus {note: } \"\" { target *-*-* } 0 }\n+\n+fn main() {\n+}"}, {"sha": "847fd24d7bd7b3cb8587ae2e038770e91b9f5e97", "filename": "gcc/testsuite/rust/compile/debug-diagnostics-on.rs", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-on.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e43d678e2d9e8a0a155b33aeebb87d847527ac9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-on.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdebug-diagnostics-on.rs?ref=4e43d678e2d9e8a0a155b33aeebb87d847527ac9", "patch": "@@ -1,5 +1,7 @@\n+// { dg-additional-options \"-frust-debug\" }\n+\n // Just scan for one of the Rust front end debug diagnostics:\n-// { dg-message {note: Attempting to parse file: .+/gcc/testsuite/rust/compile/debug-diagnostics\\.rs} \"\" { target *-*-* } 0 }\n+// { dg-message {note: Attempting to parse file: .+/gcc/testsuite/rust/compile/debug-diagnostics-on\\.rs} \"\" { target *-*-* } 0 }\n \n fn main() {\n }", "previous_filename": "gcc/testsuite/rust/compile/debug-diagnostics.rs"}]}