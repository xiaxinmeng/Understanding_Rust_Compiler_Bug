{"sha": "34ea150cdc6e60203ebd073f7895461c8d2002d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRlYTE1MGNkYzZlNjAyMDNlYmQwNzNmNzg5NTQ2MWM4ZDIwMDJkOA==", "commit": {"author": {"name": "Charles Baylis", "email": "charles.baylis@linaro.org", "date": "2015-11-30T17:11:16Z"}, "committer": {"name": "Charles Baylis", "email": "cbaylis@gcc.gnu.org", "date": "2015-11-30T17:11:16Z"}, "message": "re PR target/63870 ([Aarch64] [ARM] Errors in use of NEON intrinsics are reported incorrectly)\n\ngcc/testsuite/ChangeLog:\n\n2015-11-30  Charles Baylis  <charles.baylis@linaro.org>\n\n\tPR target/63870\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f16_indices_1.c (f_vld2_lane_f16): Remove xfails for arm targets.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f32_indices_1.c (f_vld2_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f64_indices_1.c (f_vld2_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_p8_indices_1.c (f_vld2_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s16_indices_1.c (f_vld2_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s32_indices_1.c (f_vld2_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s64_indices_1.c (f_vld2_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s8_indices_1.c (f_vld2_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u16_indices_1.c (f_vld2_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u32_indices_1.c (f_vld2_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u64_indices_1.c (f_vld2_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u8_indices_1.c (f_vld2_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f16_indices_1.c (f_vld2q_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f32_indices_1.c (f_vld2q_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f64_indices_1.c (f_vld2q_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_p8_indices_1.c (f_vld2q_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s16_indices_1.c (f_vld2q_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s32_indices_1.c (f_vld2q_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s64_indices_1.c (f_vld2q_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s8_indices_1.c (f_vld2q_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u16_indices_1.c (f_vld2q_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u32_indices_1.c (f_vld2q_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u64_indices_1.c (f_vld2q_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u8_indices_1.c (f_vld2q_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f16_indices_1.c (f_vld3_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f32_indices_1.c (f_vld3_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f64_indices_1.c (f_vld3_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_p8_indices_1.c (f_vld3_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s16_indices_1.c (f_vld3_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s32_indices_1.c (f_vld3_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s64_indices_1.c (f_vld3_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s8_indices_1.c (f_vld3_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u16_indices_1.c (f_vld3_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u32_indices_1.c (f_vld3_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u64_indices_1.c (f_vld3_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u8_indices_1.c (f_vld3_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f16_indices_1.c (f_vld3q_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f32_indices_1.c (f_vld3q_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f64_indices_1.c (f_vld3q_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_p8_indices_1.c (f_vld3q_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s16_indices_1.c (f_vld3q_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s32_indices_1.c (f_vld3q_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s64_indices_1.c (f_vld3q_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s8_indices_1.c (f_vld3q_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u16_indices_1.c (f_vld3q_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u32_indices_1.c (f_vld3q_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u64_indices_1.c (f_vld3q_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u8_indices_1.c (f_vld3q_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f16_indices_1.c (f_vld4_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f32_indices_1.c (f_vld4_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f64_indices_1.c (f_vld4_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_p8_indices_1.c (f_vld4_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s16_indices_1.c (f_vld4_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s32_indices_1.c (f_vld4_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s64_indices_1.c (f_vld4_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s8_indices_1.c (f_vld4_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u16_indices_1.c (f_vld4_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u32_indices_1.c (f_vld4_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u64_indices_1.c (f_vld4_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u8_indices_1.c (f_vld4_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f16_indices_1.c (f_vld4q_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f32_indices_1.c (f_vld4q_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f64_indices_1.c (f_vld4q_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_p8_indices_1.c (f_vld4q_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s16_indices_1.c (f_vld4q_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s32_indices_1.c (f_vld4q_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s64_indices_1.c (f_vld4q_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s8_indices_1.c (f_vld4q_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u16_indices_1.c (f_vld4q_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u32_indices_1.c (f_vld4q_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u64_indices_1.c (f_vld4q_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u8_indices_1.c (f_vld4q_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f16_indices_1.c (f_vst2_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f32_indices_1.c (f_vst2_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f64_indices_1.c (f_vst2_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_p8_indices_1.c (f_vst2_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s16_indices_1.c (f_vst2_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s32_indices_1.c (f_vst2_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s64_indices_1.c (f_vst2_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s8_indices_1.c (f_vst2_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u16_indices_1.c (f_vst2_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u32_indices_1.c (f_vst2_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u64_indices_1.c (f_vst2_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u8_indices_1.c (f_vst2_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f16_indices_1.c (f_vst2q_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f32_indices_1.c (f_vst2q_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f64_indices_1.c (f_vst2q_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_p8_indices_1.c (f_vst2q_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s16_indices_1.c (f_vst2q_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s32_indices_1.c (f_vst2q_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s64_indices_1.c (f_vst2q_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s8_indices_1.c (f_vst2q_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u16_indices_1.c (f_vst2q_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u32_indices_1.c (f_vst2q_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u64_indices_1.c (f_vst2q_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u8_indices_1.c (f_vst2q_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f16_indices_1.c (f_vst3_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f32_indices_1.c (f_vst3_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f64_indices_1.c (f_vst3_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_p8_indices_1.c (f_vst3_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s16_indices_1.c (f_vst3_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s32_indices_1.c (f_vst3_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s64_indices_1.c (f_vst3_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s8_indices_1.c (f_vst3_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u16_indices_1.c (f_vst3_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u32_indices_1.c (f_vst3_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u64_indices_1.c (f_vst3_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u8_indices_1.c (f_vst3_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f16_indices_1.c (f_vst3q_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f32_indices_1.c (f_vst3q_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f64_indices_1.c (f_vst3q_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_p8_indices_1.c (f_vst3q_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s16_indices_1.c (f_vst3q_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s32_indices_1.c (f_vst3q_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s64_indices_1.c (f_vst3q_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s8_indices_1.c (f_vst3q_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u16_indices_1.c (f_vst3q_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u32_indices_1.c (f_vst3q_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u64_indices_1.c (f_vst3q_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u8_indices_1.c (f_vst3q_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f16_indices_1.c (f_vst4_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f32_indices_1.c (f_vst4_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f64_indices_1.c (f_vst4_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_p8_indices_1.c (f_vst4_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s16_indices_1.c (f_vst4_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s32_indices_1.c (f_vst4_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s64_indices_1.c (f_vst4_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s8_indices_1.c (f_vst4_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u16_indices_1.c (f_vst4_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u32_indices_1.c (f_vst4_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u64_indices_1.c (f_vst4_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u8_indices_1.c (f_vst4_lane_u8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f16_indices_1.c (f_vst4q_lane_f16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f32_indices_1.c (f_vst4q_lane_f32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f64_indices_1.c (f_vst4q_lane_f64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_p8_indices_1.c (f_vst4q_lane_p8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s16_indices_1.c (f_vst4q_lane_s16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s32_indices_1.c (f_vst4q_lane_s32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s64_indices_1.c (f_vst4q_lane_s64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s8_indices_1.c (f_vst4q_lane_s8): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u16_indices_1.c (f_vst4q_lane_u16): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u32_indices_1.c (f_vst4q_lane_u32): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u64_indices_1.c (f_vst4q_lane_u64): Ditto.\n\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u8_indices_1.c (f_vst4q_lane_u8): Ditto.\n\nFrom-SVN: r231077", "tree": {"sha": "8a3f3108e981949a66293db78a460aff9461f8e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a3f3108e981949a66293db78a460aff9461f8e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34ea150cdc6e60203ebd073f7895461c8d2002d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ea150cdc6e60203ebd073f7895461c8d2002d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ea150cdc6e60203ebd073f7895461c8d2002d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ea150cdc6e60203ebd073f7895461c8d2002d8/comments", "author": null, "committer": null, "parents": [{"sha": "e0ca27c53103d532b51a61679b5d4c13d35a09d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ca27c53103d532b51a61679b5d4c13d35a09d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0ca27c53103d532b51a61679b5d4c13d35a09d0"}], "stats": {"total": 868, "additions": 436, "deletions": 432}, "files": [{"sha": "e2355f5ea50832d96ac1abfc1ce13bea21ca7512", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -1,3 +1,151 @@\n+2015-11-30  Charles Baylis  <charles.baylis@linaro.org>\n+\n+\tPR target/63870\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f16_indices_1.c (f_vld2_lane_f16): Remove xfails for arm targets.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f32_indices_1.c (f_vld2_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f64_indices_1.c (f_vld2_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_p8_indices_1.c (f_vld2_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s16_indices_1.c (f_vld2_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s32_indices_1.c (f_vld2_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s64_indices_1.c (f_vld2_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s8_indices_1.c (f_vld2_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u16_indices_1.c (f_vld2_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u32_indices_1.c (f_vld2_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u64_indices_1.c (f_vld2_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u8_indices_1.c (f_vld2_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f16_indices_1.c (f_vld2q_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f32_indices_1.c (f_vld2q_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f64_indices_1.c (f_vld2q_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_p8_indices_1.c (f_vld2q_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s16_indices_1.c (f_vld2q_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s32_indices_1.c (f_vld2q_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s64_indices_1.c (f_vld2q_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s8_indices_1.c (f_vld2q_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u16_indices_1.c (f_vld2q_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u32_indices_1.c (f_vld2q_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u64_indices_1.c (f_vld2q_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u8_indices_1.c (f_vld2q_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f16_indices_1.c (f_vld3_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f32_indices_1.c (f_vld3_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f64_indices_1.c (f_vld3_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_p8_indices_1.c (f_vld3_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s16_indices_1.c (f_vld3_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s32_indices_1.c (f_vld3_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s64_indices_1.c (f_vld3_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s8_indices_1.c (f_vld3_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u16_indices_1.c (f_vld3_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u32_indices_1.c (f_vld3_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u64_indices_1.c (f_vld3_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u8_indices_1.c (f_vld3_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f16_indices_1.c (f_vld3q_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f32_indices_1.c (f_vld3q_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f64_indices_1.c (f_vld3q_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_p8_indices_1.c (f_vld3q_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s16_indices_1.c (f_vld3q_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s32_indices_1.c (f_vld3q_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s64_indices_1.c (f_vld3q_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s8_indices_1.c (f_vld3q_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u16_indices_1.c (f_vld3q_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u32_indices_1.c (f_vld3q_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u64_indices_1.c (f_vld3q_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u8_indices_1.c (f_vld3q_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f16_indices_1.c (f_vld4_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f32_indices_1.c (f_vld4_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f64_indices_1.c (f_vld4_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_p8_indices_1.c (f_vld4_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s16_indices_1.c (f_vld4_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s32_indices_1.c (f_vld4_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s64_indices_1.c (f_vld4_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s8_indices_1.c (f_vld4_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u16_indices_1.c (f_vld4_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u32_indices_1.c (f_vld4_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u64_indices_1.c (f_vld4_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u8_indices_1.c (f_vld4_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f16_indices_1.c (f_vld4q_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f32_indices_1.c (f_vld4q_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f64_indices_1.c (f_vld4q_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_p8_indices_1.c (f_vld4q_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s16_indices_1.c (f_vld4q_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s32_indices_1.c (f_vld4q_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s64_indices_1.c (f_vld4q_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s8_indices_1.c (f_vld4q_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u16_indices_1.c (f_vld4q_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u32_indices_1.c (f_vld4q_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u64_indices_1.c (f_vld4q_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u8_indices_1.c (f_vld4q_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f16_indices_1.c (f_vst2_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f32_indices_1.c (f_vst2_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f64_indices_1.c (f_vst2_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_p8_indices_1.c (f_vst2_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s16_indices_1.c (f_vst2_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s32_indices_1.c (f_vst2_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s64_indices_1.c (f_vst2_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s8_indices_1.c (f_vst2_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u16_indices_1.c (f_vst2_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u32_indices_1.c (f_vst2_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u64_indices_1.c (f_vst2_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u8_indices_1.c (f_vst2_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f16_indices_1.c (f_vst2q_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f32_indices_1.c (f_vst2q_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f64_indices_1.c (f_vst2q_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_p8_indices_1.c (f_vst2q_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s16_indices_1.c (f_vst2q_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s32_indices_1.c (f_vst2q_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s64_indices_1.c (f_vst2q_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s8_indices_1.c (f_vst2q_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u16_indices_1.c (f_vst2q_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u32_indices_1.c (f_vst2q_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u64_indices_1.c (f_vst2q_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u8_indices_1.c (f_vst2q_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f16_indices_1.c (f_vst3_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f32_indices_1.c (f_vst3_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f64_indices_1.c (f_vst3_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_p8_indices_1.c (f_vst3_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s16_indices_1.c (f_vst3_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s32_indices_1.c (f_vst3_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s64_indices_1.c (f_vst3_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s8_indices_1.c (f_vst3_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u16_indices_1.c (f_vst3_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u32_indices_1.c (f_vst3_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u64_indices_1.c (f_vst3_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u8_indices_1.c (f_vst3_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f16_indices_1.c (f_vst3q_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f32_indices_1.c (f_vst3q_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f64_indices_1.c (f_vst3q_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_p8_indices_1.c (f_vst3q_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s16_indices_1.c (f_vst3q_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s32_indices_1.c (f_vst3q_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s64_indices_1.c (f_vst3q_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s8_indices_1.c (f_vst3q_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u16_indices_1.c (f_vst3q_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u32_indices_1.c (f_vst3q_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u64_indices_1.c (f_vst3q_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u8_indices_1.c (f_vst3q_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f16_indices_1.c (f_vst4_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f32_indices_1.c (f_vst4_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f64_indices_1.c (f_vst4_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_p8_indices_1.c (f_vst4_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s16_indices_1.c (f_vst4_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s32_indices_1.c (f_vst4_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s64_indices_1.c (f_vst4_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s8_indices_1.c (f_vst4_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u16_indices_1.c (f_vst4_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u32_indices_1.c (f_vst4_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u64_indices_1.c (f_vst4_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u8_indices_1.c (f_vst4_lane_u8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f16_indices_1.c (f_vst4q_lane_f16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f32_indices_1.c (f_vst4q_lane_f32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f64_indices_1.c (f_vst4q_lane_f64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_p8_indices_1.c (f_vst4q_lane_p8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s16_indices_1.c (f_vst4q_lane_s16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s32_indices_1.c (f_vst4q_lane_s32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s64_indices_1.c (f_vst4q_lane_s64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s8_indices_1.c (f_vst4q_lane_s8): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u16_indices_1.c (f_vst4q_lane_u16): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u32_indices_1.c (f_vst4q_lane_u32): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u64_indices_1.c (f_vst4q_lane_u64): Ditto.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u8_indices_1.c (f_vst4q_lane_u8): Ditto.\n+\n 2015-11-30  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/46032"}, {"sha": "46fa753ca26b99f44e9ab257deb38e83a7ec8d75", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float16x4x2_t\n f_vld2_lane_f16 (float16_t * p, float16x4x2_t v)\n {\n   float16x4x2_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_f16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_f16 (p, v, -1);\n   return res;\n }"}, {"sha": "d1895f07fe8e877d6a87d6e75e9e4fc3ec5d4adc", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float32x2x2_t\n f_vld2_lane_f32 (float32_t * p, float32x2x2_t v)\n {\n   float32x2x2_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_f32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_f32 (p, v, -1);\n   return res;\n }"}, {"sha": "19dd5f4fdf3f36310dc8c118e64d218323fdb24c", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n float64x1x2_t\n f_vld2_lane_f64 (float64_t * p, float64x1x2_t v)\n {\n   float64x1x2_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_f64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_f64 (p, v, -1);\n   return res;\n }"}, {"sha": "df3ce8cd41e27f84e8469d56fd774f10ab625b13", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n poly8x8x2_t\n f_vld2_lane_p8 (poly8_t * p, poly8x8x2_t v)\n {\n   poly8x8x2_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_p8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_p8 (p, v, -1);\n   return res;\n }"}, {"sha": "ad56c8b97a9f93e67d099aa4529c7484e45f7bbf", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int16x4x2_t\n f_vld2_lane_s16 (int16_t * p, int16x4x2_t v)\n {\n   int16x4x2_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s16 (p, v, -1);\n   return res;\n }"}, {"sha": "8b7455df05d24993723976e079ed0be20a90b6c4", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int32x2x2_t\n f_vld2_lane_s32 (int32_t * p, int32x2x2_t v)\n {\n   int32x2x2_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s32 (p, v, -1);\n   return res;\n }"}, {"sha": "de0a2c158a5b5a53f9ca76cfa6084ccae80440a3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int64x1x2_t\n f_vld2_lane_s64 (int64_t * p, int64x1x2_t v)\n {\n   int64x1x2_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s64 (p, v, -1);\n   return res;\n }"}, {"sha": "ad414a536cc08cd8c73cdf552e3eaf5dae7b34b2", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int8x8x2_t\n f_vld2_lane_s8 (int8_t * p, int8x8x2_t v)\n {\n   int8x8x2_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_s8 (p, v, -1);\n   return res;\n }"}, {"sha": "a80b54d7915e234553e51fb8fc89e2514bf95d4d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint16x4x2_t\n f_vld2_lane_u16 (uint16_t * p, uint16x4x2_t v)\n {\n   uint16x4x2_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u16 (p, v, -1);\n   return res;\n }"}, {"sha": "76db072f2d07e3b90552509f273ec871810380f3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint32x2x2_t\n f_vld2_lane_u32 (uint32_t * p, uint32x2x2_t v)\n {\n   uint32x2x2_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u32 (p, v, -1);\n   return res;\n }"}, {"sha": "3539a3fea0a4a3a32636f6d8565caca6466625fa", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint64x1x2_t\n f_vld2_lane_u64 (uint64_t * p, uint64x1x2_t v)\n {\n   uint64x1x2_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u64 (p, v, -1);\n   return res;\n }"}, {"sha": "20e8465a30838d30f253c8ecbf1069d44406e173", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint8x8x2_t\n f_vld2_lane_u8 (uint8_t * p, uint8x8x2_t v)\n {\n   uint8x8x2_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2_lane_u8 (p, v, -1);\n   return res;\n }"}, {"sha": "f921d32ac537e2617ac4386c0bc8e85afd9087ed", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float16x8x2_t\n f_vld2q_lane_f16 (float16_t * p, float16x8x2_t v)\n {\n   float16x8x2_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_f16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_f16 (p, v, -1);\n   return res;\n }"}, {"sha": "0c3c947c2ae4d1540ce22e08143b4fbf4edc5a60", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float32x4x2_t\n f_vld2q_lane_f32 (float32_t * p, float32x4x2_t v)\n {\n   float32x4x2_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_f32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_f32 (p, v, -1);\n   return res;\n }"}, {"sha": "5d2eb2db35c9ce3aba831717d5ae0239a2ad77c4", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n float64x2x2_t\n f_vld2q_lane_f64 (float64_t * p, float64x2x2_t v)\n {\n   float64x2x2_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_f64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_f64 (p, v, -1);\n   return res;\n }"}, {"sha": "b48aca408c4dad3ed876b0d3ff7bac3b45616cab", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n poly8x16x2_t\n f_vld2q_lane_p8 (poly8_t * p, poly8x16x2_t v)\n {\n   poly8x16x2_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_p8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_p8 (p, v, -1);\n   return res;\n }"}, {"sha": "c3062c96f838c04478e9e2e64b21fafa8c081768", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int16x8x2_t\n f_vld2q_lane_s16 (int16_t * p, int16x8x2_t v)\n {\n   int16x8x2_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s16 (p, v, -1);\n   return res;\n }"}, {"sha": "bfb4f0a653b775da636d5c520415fb44ce73a692", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int32x4x2_t\n f_vld2q_lane_s32 (int32_t * p, int32x4x2_t v)\n {\n   int32x4x2_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s32 (p, v, -1);\n   return res;\n }"}, {"sha": "84d453a9678a30ebe2fdb635c32b4103f27e3d38", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int64x2x2_t\n f_vld2q_lane_s64 (int64_t * p, int64x2x2_t v)\n {\n   int64x2x2_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s64 (p, v, -1);\n   return res;\n }"}, {"sha": "ec37d1b1d21a0b34271b63a1997fdf054ba0581b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int8x16x2_t\n f_vld2q_lane_s8 (int8_t * p, int8x16x2_t v)\n {\n   int8x16x2_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_s8 (p, v, -1);\n   return res;\n }"}, {"sha": "3588131b2cafcec042b89f1279863959116e44ae", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint16x8x2_t\n f_vld2q_lane_u16 (uint16_t * p, uint16x8x2_t v)\n {\n   uint16x8x2_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u16 (p, v, -1);\n   return res;\n }"}, {"sha": "7f272149fe8180122ad6db6980b1c86343be99b1", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint32x4x2_t\n f_vld2q_lane_u32 (uint32_t * p, uint32x4x2_t v)\n {\n   uint32x4x2_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u32 (p, v, -1);\n   return res;\n }"}, {"sha": "828f7d32f09a1bda99500bc302097a500c658f91", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint64x2x2_t\n f_vld2q_lane_u64 (uint64_t * p, uint64x2x2_t v)\n {\n   uint64x2x2_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u64 (p, v, -1);\n   return res;\n }"}, {"sha": "08fe7491f0d5106412bd4980064421c0aa3ed99e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld2q_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld2q_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint8x16x2_t\n f_vld2q_lane_u8 (uint8_t * p, uint8x16x2_t v)\n {\n   uint8x16x2_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld2q_lane_u8 (p, v, -1);\n   return res;\n }"}, {"sha": "d068d7958e89b31b04e24d9a305cdb76e0530415", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float16x4x3_t\n f_vld3_lane_f16 (float16_t * p, float16x4x3_t v)\n {\n   float16x4x3_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_f16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_f16 (p, v, -1);\n   return res;\n }"}, {"sha": "6d13e2b71c5fe92d728982227be10d221042649e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float32x2x3_t\n f_vld3_lane_f32 (float32_t * p, float32x2x3_t v)\n {\n   float32x2x3_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_f32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_f32 (p, v, -1);\n   return res;\n }"}, {"sha": "63d55516059f4437efc26f1d4d0d17b1c49c1e45", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n float64x1x3_t\n f_vld3_lane_f64 (float64_t * p, float64x1x3_t v)\n {\n   float64x1x3_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_f64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_f64 (p, v, -1);\n   return res;\n }"}, {"sha": "a6a9666433cb9bab53d3067a55dfa532c12de4a9", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n poly8x8x3_t\n f_vld3_lane_p8 (poly8_t * p, poly8x8x3_t v)\n {\n   poly8x8x3_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_p8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_p8 (p, v, -1);\n   return res;\n }"}, {"sha": "69fd90da4d470c79dd8560c6ea19d552bdc5ccb4", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int16x4x3_t\n f_vld3_lane_s16 (int16_t * p, int16x4x3_t v)\n {\n   int16x4x3_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s16 (p, v, -1);\n   return res;\n }"}, {"sha": "01816e8dbb07a9c0937e6613b64ef69be8f27f71", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int32x2x3_t\n f_vld3_lane_s32 (int32_t * p, int32x2x3_t v)\n {\n   int32x2x3_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s32 (p, v, -1);\n   return res;\n }"}, {"sha": "f2a6dbd4593039888d0e730870a01169ec7dd771", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int64x1x3_t\n f_vld3_lane_s64 (int64_t * p, int64x1x3_t v)\n {\n   int64x1x3_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s64 (p, v, -1);\n   return res;\n }"}, {"sha": "5d5f8452aaeb912207e91a19a5b5220fc458e832", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int8x8x3_t\n f_vld3_lane_s8 (int8_t * p, int8x8x3_t v)\n {\n   int8x8x3_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_s8 (p, v, -1);\n   return res;\n }"}, {"sha": "8be04edccf2dc994b6df15489c53a6d8962af534", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint16x4x3_t\n f_vld3_lane_u16 (uint16_t * p, uint16x4x3_t v)\n {\n   uint16x4x3_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u16 (p, v, -1);\n   return res;\n }"}, {"sha": "bf890d3cba921c42281eff26a3df87f055a7680d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint32x2x3_t\n f_vld3_lane_u32 (uint32_t * p, uint32x2x3_t v)\n {\n   uint32x2x3_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u32 (p, v, -1);\n   return res;\n }"}, {"sha": "926718ee5733c3e9ffcade7264b816866a9be2c9", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint64x1x3_t\n f_vld3_lane_u64 (uint64_t * p, uint64x1x3_t v)\n {\n   uint64x1x3_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u64 (p, v, -1);\n   return res;\n }"}, {"sha": "d129bba78162acfa3dc1dd216b3cec530e5df75b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint8x8x3_t\n f_vld3_lane_u8 (uint8_t * p, uint8x8x3_t v)\n {\n   uint8x8x3_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3_lane_u8 (p, v, -1);\n   return res;\n }"}, {"sha": "ed4d7d579b510e822f6b42dea874437bd5c64bd3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float16x8x3_t\n f_vld3q_lane_f16 (float16_t * p, float16x8x3_t v)\n {\n   float16x8x3_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_f16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_f16 (p, v, -1);\n   return res;\n }"}, {"sha": "0c276c45a130eb9ecd6cd1eaacbbef043423b780", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float32x4x3_t\n f_vld3q_lane_f32 (float32_t * p, float32x4x3_t v)\n {\n   float32x4x3_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_f32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_f32 (p, v, -1);\n   return res;\n }"}, {"sha": "2c666c6e9374136edd02ee8f403f2fb5ebc9ebca", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n float64x2x3_t\n f_vld3q_lane_f64 (float64_t * p, float64x2x3_t v)\n {\n   float64x2x3_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_f64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_f64 (p, v, -1);\n   return res;\n }"}, {"sha": "2041472f6976e5b4c1162e8771022146fc2777ac", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n poly8x16x3_t\n f_vld3q_lane_p8 (poly8_t * p, poly8x16x3_t v)\n {\n   poly8x16x3_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_p8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_p8 (p, v, -1);\n   return res;\n }"}, {"sha": "7b7b2b6832470fe5fb2f9ca652e794c1207190a7", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int16x8x3_t\n f_vld3q_lane_s16 (int16_t * p, int16x8x3_t v)\n {\n   int16x8x3_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s16 (p, v, -1);\n   return res;\n }"}, {"sha": "c8db25675ed92222161a04ffdaf8c97a5c4f5acb", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int32x4x3_t\n f_vld3q_lane_s32 (int32_t * p, int32x4x3_t v)\n {\n   int32x4x3_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s32 (p, v, -1);\n   return res;\n }"}, {"sha": "e35097178ff98703606355533b802b7ac140e3d5", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int64x2x3_t\n f_vld3q_lane_s64 (int64_t * p, int64x2x3_t v)\n {\n   int64x2x3_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s64 (p, v, -1);\n   return res;\n }"}, {"sha": "1b1c682402b63fd78b11a54582919eeed193b683", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int8x16x3_t\n f_vld3q_lane_s8 (int8_t * p, int8x16x3_t v)\n {\n   int8x16x3_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_s8 (p, v, -1);\n   return res;\n }"}, {"sha": "adbc42f1f6f313be4f047a71cdc0a5677288c93e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint16x8x3_t\n f_vld3q_lane_u16 (uint16_t * p, uint16x8x3_t v)\n {\n   uint16x8x3_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u16 (p, v, -1);\n   return res;\n }"}, {"sha": "c79388a487ef751d5fafd98024dadeb11c370ec8", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint32x4x3_t\n f_vld3q_lane_u32 (uint32_t * p, uint32x4x3_t v)\n {\n   uint32x4x3_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u32 (p, v, -1);\n   return res;\n }"}, {"sha": "7513140c37d9b21b76ea18caf9fc503308e5caee", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint64x2x3_t\n f_vld3q_lane_u64 (uint64_t * p, uint64x2x3_t v)\n {\n   uint64x2x3_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u64 (p, v, -1);\n   return res;\n }"}, {"sha": "5fec76ec0fda01c98f54fc6544ecc21d67ce2bb6", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld3q_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld3q_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint8x16x3_t\n f_vld3q_lane_u8 (uint8_t * p, uint8x16x3_t v)\n {\n   uint8x16x3_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld3q_lane_u8 (p, v, -1);\n   return res;\n }"}, {"sha": "b5d5adf3a51b2f180e3aa717a722aa8310820987", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float16x4x4_t\n f_vld4_lane_f16 (float16_t * p, float16x4x4_t v)\n {\n   float16x4x4_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_f16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_f16 (p, v, -1);\n   return res;\n }"}, {"sha": "183036f4f5d66c9985c9498b011456caf9da2ac2", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float32x2x4_t\n f_vld4_lane_f32 (float32_t * p, float32x2x4_t v)\n {\n   float32x2x4_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_f32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_f32 (p, v, -1);\n   return res;\n }"}, {"sha": "655c27f215968658212289ada44b310845ddec69", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n float64x1x4_t\n f_vld4_lane_f64 (float64_t * p, float64x1x4_t v)\n {\n   float64x1x4_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_f64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_f64 (p, v, -1);\n   return res;\n }"}, {"sha": "7bc5140d9042b6ebf2e9132a0562bde0031c12e0", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n poly8x8x4_t\n f_vld4_lane_p8 (poly8_t * p, poly8x8x4_t v)\n {\n   poly8x8x4_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_p8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_p8 (p, v, -1);\n   return res;\n }"}, {"sha": "5881a89fd731836d9ca8f82e5f11ae79ea9eac97", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int16x4x4_t\n f_vld4_lane_s16 (int16_t * p, int16x4x4_t v)\n {\n   int16x4x4_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s16 (p, v, -1);\n   return res;\n }"}, {"sha": "02282d93f7886621755f889f2f182d4d195d795c", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int32x2x4_t\n f_vld4_lane_s32 (int32_t * p, int32x2x4_t v)\n {\n   int32x2x4_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s32 (p, v, -1);\n   return res;\n }"}, {"sha": "162b5c4c669bce8492d46d9464f4ea8f0fd41165", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int64x1x4_t\n f_vld4_lane_s64 (int64_t * p, int64x1x4_t v)\n {\n   int64x1x4_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s64 (p, v, -1);\n   return res;\n }"}, {"sha": "4949410d3671b4beb31816f375ea154dbc9b6ab6", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int8x8x4_t\n f_vld4_lane_s8 (int8_t * p, int8x8x4_t v)\n {\n   int8x8x4_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_s8 (p, v, -1);\n   return res;\n }"}, {"sha": "16d54e9c53940890f7f106ea7bb52720b39daea6", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint16x4x4_t\n f_vld4_lane_u16 (uint16_t * p, uint16x4x4_t v)\n {\n   uint16x4x4_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u16 (p, v, -1);\n   return res;\n }"}, {"sha": "c65bd30a897ac13a58cdf24cd376cf880fa373c0", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint32x2x4_t\n f_vld4_lane_u32 (uint32_t * p, uint32x2x4_t v)\n {\n   uint32x2x4_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u32 (p, v, -1);\n   return res;\n }"}, {"sha": "e8f2884307ec5e6d7857a19d02e8b2ceb216b9b8", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint64x1x4_t\n f_vld4_lane_u64 (uint64_t * p, uint64x1x4_t v)\n {\n   uint64x1x4_t res;\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u64 (p, v, -1);\n   return res;\n }"}, {"sha": "cb7f48735abfb87e21c7191a5d56ae32bce5b60d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint8x8x4_t\n f_vld4_lane_u8 (uint8_t * p, uint8x8x4_t v)\n {\n   uint8x8x4_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4_lane_u8 (p, v, -1);\n   return res;\n }"}, {"sha": "e9947d4b831d5a0fd35828048d2384e1b4779f7d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float16x8x4_t\n f_vld4q_lane_f16 (float16_t * p, float16x8x4_t v)\n {\n   float16x8x4_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_f16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_f16 (p, v, -1);\n   return res;\n }"}, {"sha": "8d7d03e5c8b616b39ad03eb5058db509b6f0c047", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n float32x4x4_t\n f_vld4q_lane_f32 (float32_t * p, float32x4x4_t v)\n {\n   float32x4x4_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_f32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_f32 (p, v, -1);\n   return res;\n }"}, {"sha": "d0ce4e59cd4f5d9f1dfc3a912bbc05b537575595", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n float64x2x4_t\n f_vld4q_lane_f64 (float64_t * p, float64x2x4_t v)\n {\n   float64x2x4_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_f64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_f64 (p, v, -1);\n   return res;\n }"}, {"sha": "bb1cb3101589ef67165f5c8bbcd5bed2930e8a39", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n poly8x16x4_t\n f_vld4q_lane_p8 (poly8_t * p, poly8x16x4_t v)\n {\n   poly8x16x4_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_p8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_p8 (p, v, -1);\n   return res;\n }"}, {"sha": "d96fe0e0fef6d0c9e3ad993651d1d1485c972ba9", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int16x8x4_t\n f_vld4q_lane_s16 (int16_t * p, int16x8x4_t v)\n {\n   int16x8x4_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s16 (p, v, -1);\n   return res;\n }"}, {"sha": "446ff43e5d2951a78dd83a7a03378f10e4ba0ce1", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n int32x4x4_t\n f_vld4q_lane_s32 (int32_t * p, int32x4x4_t v)\n {\n   int32x4x4_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s32 (p, v, -1);\n   return res;\n }"}, {"sha": "df02f397701f308b8c26be7e7e4ac9daf92c9837", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int64x2x4_t\n f_vld4q_lane_s64 (int64_t * p, int64x2x4_t v)\n {\n   int64x2x4_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s64 (p, v, -1);\n   return res;\n }"}, {"sha": "d7573c192fbae616dadb1449c3f0f8bc6cefb61a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n int8x16x4_t\n f_vld4q_lane_s8 (int8_t * p, int8x16x4_t v)\n {\n   int8x16x4_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_s8 (p, v, -1);\n   return res;\n }"}, {"sha": "05be38bb2ba97f6e041e0f034131865ae612733a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint16x8x4_t\n f_vld4q_lane_u16 (uint16_t * p, uint16x8x4_t v)\n {\n   uint16x8x4_t res;\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u16 (p, v, -1);\n   return res;\n }"}, {"sha": "572c6d055ab1d05560ed957912de0450feb1205c", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n uint32x4x4_t\n f_vld4q_lane_u32 (uint32_t * p, uint32x4x4_t v)\n {\n   uint32x4x4_t res;\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u32 (p, v, -1);\n   return res;\n }"}, {"sha": "a6828df325d0d3612de7ade5faa95e2a2d2289ba", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint64x2x4_t\n f_vld4q_lane_u64 (uint64_t * p, uint64x2x4_t v)\n {\n   uint64x2x4_t res;\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u64 (p, v, -1);\n   return res;\n }"}, {"sha": "8b5eb43412b51a86340f3d232f994bd7711888b5", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld4q_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld4q_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,16 +2,15 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n uint8x16x4_t\n f_vld4q_lane_u8 (uint8_t * p, uint8x16x4_t v)\n {\n   uint8x16x4_t res;\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   res = vld4q_lane_u8 (p, v, -1);\n   return res;\n }"}, {"sha": "93d6e5c1de2b3a8b460034c1a8e043bc0e0ea766", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_f16 (float16_t * p, float16x4x2_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2_lane_f16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2_lane_f16 (p, v, -1);\n   return;\n }"}, {"sha": "a0ea45bad0f75b7022a38c9e4d0fae7bd3ddaac6", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_f32 (float32_t * p, float32x2x2_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2_lane_f32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2_lane_f32 (p, v, -1);\n   return;\n }"}, {"sha": "2eca26f9f14c7625443085e89f92f2e045516299", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2_lane_f64 (float64_t * p, float64x1x2_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst2_lane_f64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst2_lane_f64 (p, v, -1);\n   return;\n }"}, {"sha": "3692d7d228aa3ea6356d86624da9ed15c73bb4c8", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_p8 (poly8_t * p, poly8x8x2_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2_lane_p8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2_lane_p8 (p, v, -1);\n   return;\n }"}, {"sha": "94ac769ebb658496d181092f18f7421fff2d92c1", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_s16 (int16_t * p, int16x4x2_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s16 (p, v, -1);\n   return;\n }"}, {"sha": "3ef5687444d08967396de3144ab3d695a40cd212", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_s32 (int32_t * p, int32x2x2_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s32 (p, v, -1);\n   return;\n }"}, {"sha": "1e3c20210d68d345160c4de70a88a1c0ac014afc", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2_lane_s64 (int64_t * p, int64x1x2_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s64 (p, v, -1);\n   return;\n }"}, {"sha": "a96b1b48ca920f21b7b9d74625e325c46e49a25e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_s8 (int8_t * p, int8x8x2_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2_lane_s8 (p, v, -1);\n   return;\n }"}, {"sha": "970be4a95e81b20d9c51806ef78ecd52675a1410", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_u16 (uint16_t * p, uint16x4x2_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u16 (p, v, -1);\n   return;\n }"}, {"sha": "4c8e2f166aaf7967f45f923911312ca925ecca2e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_u32 (uint32_t * p, uint32x2x2_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u32 (p, v, -1);\n   return;\n }"}, {"sha": "dfb0de2e64709ab8abdf5a1fb93aa4a0fe2062da", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2_lane_u64 (uint64_t * p, uint64x1x2_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u64 (p, v, -1);\n   return;\n }"}, {"sha": "4877ea22592e068865ada9113c89124036643d57", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2_lane_u8 (uint8_t * p, uint8x8x2_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2_lane_u8 (p, v, -1);\n   return;\n }"}, {"sha": "729314eb529a85c04ac1638dbe2b7a61f2eecb19", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2q_lane_f16 (float16_t * p, float16x8x2_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_f16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_f16 (p, v, -1);\n   return;\n }"}, {"sha": "75f7dd6c08b5c5d9de7c2214e1b4ac98859aa6a5", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2q_lane_f32 (float32_t * p, float32x4x2_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_f32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_f32 (p, v, -1);\n   return;\n }"}, {"sha": "9a230567495e46be146623b536ad7a066fac0aee", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2q_lane_f64 (float64_t * p, float64x2x2_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_f64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_f64 (p, v, -1);\n   return;\n }"}, {"sha": "c3f24337c98307607a4f0c9cfa9cc58378df5baa", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2q_lane_p8 (poly8_t * p, poly8x16x2_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_p8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_p8 (p, v, -1);\n   return;\n }"}, {"sha": "82ae1e433c16d95b87417d7675feb5c98a3c73a4", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2q_lane_s16 (int16_t * p, int16x8x2_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s16 (p, v, -1);\n   return;\n }"}, {"sha": "27208bd6a030ad12686ef71a1b8fbd0b27911021", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2q_lane_s32 (int32_t * p, int32x4x2_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s32 (p, v, -1);\n   return;\n }"}, {"sha": "a66d55b503b1d07334048697eb834dc1203cdc00", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2q_lane_s64 (int64_t * p, int64x2x2_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s64 (p, v, -1);\n   return;\n }"}, {"sha": "7a3338b327b7c2a85c9dde4afbeffb9dde6f4f1d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2q_lane_s8 (int8_t * p, int8x16x2_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_s8 (p, v, -1);\n   return;\n }"}, {"sha": "999ee7065c5b0067698eaf8345d2100e60f1a503", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2q_lane_u16 (uint16_t * p, uint16x8x2_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u16 (p, v, -1);\n   return;\n }"}, {"sha": "fd4422dbd4de20483636a4fa6ac33b568eaa9a76", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst2q_lane_u32 (uint32_t * p, uint32x4x2_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u32 (p, v, -1);\n   return;\n }"}, {"sha": "78863b58086cc939ef679474a36d616a9d8c49b0", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2q_lane_u64 (uint64_t * p, uint64x2x2_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u64 (p, v, -1);\n   return;\n }"}, {"sha": "e7463e1287d1cccae46bdb16c61ba55922e326a0", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst2q_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst2q_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst2q_lane_u8 (uint8_t * p, uint8x16x2_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst2q_lane_u8 (p, v, -1);\n   return;\n }"}, {"sha": "1f262a16187e16467cd3c909efc18f0c2f651761", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_f16 (float16_t * p, float16x4x3_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3_lane_f16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3_lane_f16 (p, v, -1);\n   return;\n }"}, {"sha": "0cec8807b6540e7414380d524d6d1b1d3afd9e81", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_f32 (float32_t * p, float32x2x3_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3_lane_f32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3_lane_f32 (p, v, -1);\n   return;\n }"}, {"sha": "d63aa1fd7ded0435f35cc97d0bd624867354d248", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3_lane_f64 (float64_t * p, float64x1x3_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst3_lane_f64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst3_lane_f64 (p, v, -1);\n   return;\n }"}, {"sha": "0122b75f3d1faf165d46e9ba9e9e1c29b83e3c8d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_p8 (poly8_t * p, poly8x8x3_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3_lane_p8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3_lane_p8 (p, v, -1);\n   return;\n }"}, {"sha": "2c57d2bcc9350be6b3e090c67934ad413467f8a2", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_s16 (int16_t * p, int16x4x3_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s16 (p, v, -1);\n   return;\n }"}, {"sha": "c0b3a5b274be6380f3714c04872367e1a30bb997", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_s32 (int32_t * p, int32x2x3_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s32 (p, v, -1);\n   return;\n }"}, {"sha": "2c2d0437e4a2a58e899c8f9244c8318ceaa6d71f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3_lane_s64 (int64_t * p, int64x1x3_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s64 (p, v, -1);\n   return;\n }"}, {"sha": "b93d69a2bab21725ab8d99d525f4b995005df363", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_s8 (int8_t * p, int8x8x3_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3_lane_s8 (p, v, -1);\n   return;\n }"}, {"sha": "ce6025d2c89827f51c0bb1596950d95a44c7bd97", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_u16 (uint16_t * p, uint16x4x3_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u16 (p, v, -1);\n   return;\n }"}, {"sha": "5696034a560a414088b98cb177ef2aece3777078", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_u32 (uint32_t * p, uint32x2x3_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u32 (p, v, -1);\n   return;\n }"}, {"sha": "9a36915294eb214c96d85e9f97b46dea611298fa", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3_lane_u64 (uint64_t * p, uint64x1x3_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u64 (p, v, -1);\n   return;\n }"}, {"sha": "9004f3d2682118040b70d1c004b06e07fbc78cd7", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3_lane_u8 (uint8_t * p, uint8x8x3_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3_lane_u8 (p, v, -1);\n   return;\n }"}, {"sha": "6c24a5ea48c4f60ecc720ef1d0c65d169f5f39d3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3q_lane_f16 (float16_t * p, float16x8x3_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_f16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_f16 (p, v, -1);\n   return;\n }"}, {"sha": "d1ffc04a452aeaf189aadd7b6870e1009496c49a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3q_lane_f32 (float32_t * p, float32x4x3_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_f32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_f32 (p, v, -1);\n   return;\n }"}, {"sha": "e165f2a64d0145b5d57fffe325f9f7e75170d45e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3q_lane_f64 (float64_t * p, float64x2x3_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_f64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_f64 (p, v, -1);\n   return;\n }"}, {"sha": "7fb3c96e355dccb92fb9fd659c398315c37e95be", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3q_lane_p8 (poly8_t * p, poly8x16x3_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_p8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_p8 (p, v, -1);\n   return;\n }"}, {"sha": "de8ae54cde83830e20d2bc614cfe6be86cc69099", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3q_lane_s16 (int16_t * p, int16x8x3_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s16 (p, v, -1);\n   return;\n }"}, {"sha": "6502bcf1c4ffda2db307504875b27bd75375314f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3q_lane_s32 (int32_t * p, int32x4x3_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s32 (p, v, -1);\n   return;\n }"}, {"sha": "c6d8236588da85fad4df6fca1e5ca94ce9f1af19", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3q_lane_s64 (int64_t * p, int64x2x3_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s64 (p, v, -1);\n   return;\n }"}, {"sha": "2b486190be1d654a068913489e5971847a3c1305", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3q_lane_s8 (int8_t * p, int8x16x3_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_s8 (p, v, -1);\n   return;\n }"}, {"sha": "6d68051ed2a3668ab8e0733717d8955bde15422a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3q_lane_u16 (uint16_t * p, uint16x8x3_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u16 (p, v, -1);\n   return;\n }"}, {"sha": "78b28a02e4118080d3fc20ff41823fe9487e5bae", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst3q_lane_u32 (uint32_t * p, uint32x4x3_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u32 (p, v, -1);\n   return;\n }"}, {"sha": "fe4f52ea829d328f2b56df5d436fcf4f815f0a01", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3q_lane_u64 (uint64_t * p, uint64x2x3_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u64 (p, v, -1);\n   return;\n }"}, {"sha": "74e49db38d4b0f11bf1aaca1d50f4b5f4b3ef712", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst3q_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst3q_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst3q_lane_u8 (uint8_t * p, uint8x16x3_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst3q_lane_u8 (p, v, -1);\n   return;\n }"}, {"sha": "6ada55ea4b32a6dd0af251aa478a2353690b7c2f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_f16 (float16_t * p, float16x4x4_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4_lane_f16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4_lane_f16 (p, v, -1);\n   return;\n }"}, {"sha": "00a8a50c4ee75f1176d6502ab37f2ad4149903a9", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_f32 (float32_t * p, float32x2x4_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4_lane_f32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4_lane_f32 (p, v, -1);\n   return;\n }"}, {"sha": "7cb45ca2fbd3aa9638b5fd5c4d2cbe73762da4ec", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4_lane_f64 (float64_t * p, float64x1x4_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst4_lane_f64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst4_lane_f64 (p, v, -1);\n   return;\n }"}, {"sha": "8b7fef3c3c2806193e8e8c8eed64ce7f25ccbb9a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_p8 (poly8_t * p, poly8x8x4_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4_lane_p8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4_lane_p8 (p, v, -1);\n   return;\n }"}, {"sha": "e62691c571b84ec7b50bd9722ecc6d1d42d7cc7c", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_s16 (int16_t * p, int16x4x4_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s16 (p, v, -1);\n   return;\n }"}, {"sha": "ced39caec46811c1bd7d845e50451684d686ae0a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_s32 (int32_t * p, int32x2x4_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s32 (p, v, -1);\n   return;\n }"}, {"sha": "fe77b4d733d67c506e93b87f060e8e819243f66b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4_lane_s64 (int64_t * p, int64x1x4_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s64 (p, v, -1);\n   return;\n }"}, {"sha": "b287a59d541b1edc174acfd6ec9234b68687bebe", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_s8 (int8_t * p, int8x8x4_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4_lane_s8 (p, v, -1);\n   return;\n }"}, {"sha": "2144dc4bfe05ecf792792cef57ba7cfc281acb58", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_u16 (uint16_t * p, uint16x4x4_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u16 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u16 (p, v, -1);\n   return;\n }"}, {"sha": "576036c8a384c6eac8b176383692a15ea41c6d20", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_u32 (uint32_t * p, uint32x2x4_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u32 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u32 (p, v, -1);\n   return;\n }"}, {"sha": "b6040b79b2bb0844d9d76c5f7aad2a4f3d0b5fe3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4_lane_u64 (uint64_t * p, uint64x1x4_t v)\n {\n-  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u64 (p, v, 1);\n-  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u64 (p, v, -1);\n   return;\n }"}, {"sha": "4ed80cf6f69a37494ed7a2431ff60400849f6614", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4_lane_u8 (uint8_t * p, uint8x8x4_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u8 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4_lane_u8 (p, v, -1);\n   return;\n }"}, {"sha": "7327c03d126d5523b8bb5f92e6622496bae9399c", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4q_lane_f16 (float16_t * p, float16x8x4_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_f16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_f16 (p, v, -1);\n   return;\n }"}, {"sha": "ca01289e2757e1b5f4a69ef3d5b01b18b9b5214e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4q_lane_f32 (float32_t * p, float32x4x4_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_f32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_f32 (p, v, -1);\n   return;\n }"}, {"sha": "e2b7fb85b5712d30924ab9583ec0cbc0ae53c58f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_f64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_f64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4q_lane_f64 (float64_t * p, float64x2x4_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_f64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_f64 (p, v, -1);\n   return;\n }"}, {"sha": "fb8f4ca300cef4e99fc930c0e5be75dc5e5c6af7", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_p8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_p8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_p8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_p8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4q_lane_p8 (poly8_t * p, poly8x16x4_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_p8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_p8 (p, v, -1);\n   return;\n }"}, {"sha": "4855b73b44d0b89ea39e19de073b57172d880803", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4q_lane_s16 (int16_t * p, int16x8x4_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s16 (p, v, -1);\n   return;\n }"}, {"sha": "29a8a696e1fff47d7372b3509ec0039366597da7", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4q_lane_s32 (int32_t * p, int32x4x4_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s32 (p, v, -1);\n   return;\n }"}, {"sha": "297cae8dac744c98706f7de997a7f06f79f24356", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4q_lane_s64 (int64_t * p, int64x2x4_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s64 (p, v, -1);\n   return;\n }"}, {"sha": "10c70cc6ed729c7282d6ced8ce9796bbbdb56db2", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_s8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_s8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4q_lane_s8 (int8_t * p, int8x16x4_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_s8 (p, v, -1);\n   return;\n }"}, {"sha": "d0063ea0a7b433bd2921499fd723a09daa1b7557", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u16_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u16_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4q_lane_u16 (uint16_t * p, uint16x8x4_t v)\n {\n-  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u16 (p, v, 8);\n-  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u16 (p, v, -1);\n   return;\n }"}, {"sha": "89b4c526f1aeca6381c087b0a5045db7780a80c5", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u32_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u32_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,14 +2,13 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n \n void\n f_vst4q_lane_u32 (uint32_t * p, uint32x4x4_t v)\n {\n-  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u32 (p, v, 4);\n-  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u32 (p, v, -1);\n   return;\n }"}, {"sha": "ba697c45b135928b0aecdfcf404fabb21b4f3ca8", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u64_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u64_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4q_lane_u64 (uint64_t * p, uint64x2x4_t v)\n {\n-  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u64 (p, v, 2);\n-  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u64 (p, v, -1);\n   return;\n }"}, {"sha": "61f8ce2cdb7116b70b2b8c979c8cc15eb6b969ed", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vst4q_lane_u8_indices_1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u8_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea150cdc6e60203ebd073f7895461c8d2002d8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u8_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvst4q_lane_u8_indices_1.c?ref=34ea150cdc6e60203ebd073f7895461c8d2002d8", "patch": "@@ -2,15 +2,14 @@\n \n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n-/* { dg-excess-errors \"\" { xfail arm*-*-* } } */\n /* { dg-skip-if \"\" { arm*-*-* } } */\n \n void\n f_vst4q_lane_u8 (uint8_t * p, uint8x16x4_t v)\n {\n-  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane 16 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u8 (p, v, 16);\n-  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { xfail arm*-*-* } 0 } */\n+  /* { dg-error \"lane -1 out of range 0 - 15\" \"\" { target *-*-* } 0 } */\n   vst4q_lane_u8 (p, v, -1);\n   return;\n }"}]}