{"sha": "7109f4f52da4ea189b04aeb29a077d140855cb52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEwOWY0ZjUyZGE0ZWExODliMDRhZWIyOWEwNzdkMTQwODU1Y2I1Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T12:58:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T12:58:26Z"}, "message": "[multiple changes]\n\n2011-09-05  Bob Duff  <duff@adacore.com>\n\n\t* sem_res.adb (Resolve_Intrinsic_Operator): Use unchecked\n\tconversions instead of normal type conversions in all cases where a\n\ttype conversion would be illegal. In particular, use unchecked\n\tconversions when the operand types are private.\n\n2011-09-05  Johannes Kanig  <kanig@adacore.com>\n\n\t* lib-xref-alfa.adb (Is_Alfa_Reference): Never declare effects on\n\tobjects of task type or protected type.\n\nFrom-SVN: r178531", "tree": {"sha": "066827c96ac7d0b966728b9e27ebe3f6ed3cef82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/066827c96ac7d0b966728b9e27ebe3f6ed3cef82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7109f4f52da4ea189b04aeb29a077d140855cb52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7109f4f52da4ea189b04aeb29a077d140855cb52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7109f4f52da4ea189b04aeb29a077d140855cb52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7109f4f52da4ea189b04aeb29a077d140855cb52/comments", "author": null, "committer": null, "parents": [{"sha": "66dc8075f33117924fc1596721708e979912e20e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66dc8075f33117924fc1596721708e979912e20e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66dc8075f33117924fc1596721708e979912e20e"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "05246c42b052ca8f9e6cdca5188dbf3bc7ab122b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7109f4f52da4ea189b04aeb29a077d140855cb52/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7109f4f52da4ea189b04aeb29a077d140855cb52/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7109f4f52da4ea189b04aeb29a077d140855cb52", "patch": "@@ -1,3 +1,15 @@\n+2011-09-05  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Intrinsic_Operator): Use unchecked\n+\tconversions instead of normal type conversions in all cases where a\n+\ttype conversion would be illegal. In particular, use unchecked\n+\tconversions when the operand types are private.\n+\n+2011-09-05  Johannes Kanig  <kanig@adacore.com>\n+\n+\t* lib-xref-alfa.adb (Is_Alfa_Reference): Never declare effects on\n+\tobjects of task type or protected type.\n+\n 2011-09-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Expression_Function): If the expression"}, {"sha": "a2ea0e6c623d8d91b0c7733dda1610969881c0c6", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7109f4f52da4ea189b04aeb29a077d140855cb52/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7109f4f52da4ea189b04aeb29a077d140855cb52/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=7109f4f52da4ea189b04aeb29a077d140855cb52", "patch": "@@ -620,7 +620,22 @@ package body Alfa is\n                   return False;\n \n                when others =>\n+\n+                  --  Objects of Task type or protected type are not Alfa\n+                  --  references.\n+\n+                  if Present (Etype (E)) then\n+                     case Ekind (Etype (E)) is\n+                        when E_Task_Type | E_Protected_Type =>\n+                           return False;\n+\n+                        when others =>\n+                           null;\n+                     end case;\n+                  end if;\n+\n                   return Typ = 'r' or else Typ = 'm';\n+\n             end case;\n          end Is_Alfa_Reference;\n "}, {"sha": "1d3c018ec5ae9e1ea5b4d1f4730166fa81e53d58", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7109f4f52da4ea189b04aeb29a077d140855cb52/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7109f4f52da4ea189b04aeb29a077d140855cb52/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7109f4f52da4ea189b04aeb29a077d140855cb52", "patch": "@@ -7145,6 +7145,8 @@ package body Sem_Res is\n          return Res;\n       end Convert_Operand;\n \n+      --  Start of processing for Resolve_Intrinsic_Operator\n+\n    begin\n       --  We must preserve the original entity in a generic setting, so that\n       --  the legality of the operation can be verified in an instance.\n@@ -7162,11 +7164,14 @@ package body Sem_Res is\n       Set_Entity (N, Op);\n       Set_Is_Overloaded (N, False);\n \n-      --  If the operand type is private, rewrite with suitable conversions on\n-      --  the operands and the result, to expose the proper underlying numeric\n-      --  type.\n+      --  If the result or operand types are private, rewrite with unchecked\n+      --  conversions on the operands and the result, to expose the proper\n+      --  underlying numeric type.\n \n-      if Is_Private_Type (Typ) then\n+      if Is_Private_Type (Typ)\n+        or else Is_Private_Type (Etype (Left_Opnd (N)))\n+        or else Is_Private_Type (Etype (Right_Opnd (N)))\n+      then\n          Arg1 := Convert_Operand (Left_Opnd (N));\n          --  Unchecked_Convert_To (Btyp, Left_Opnd  (N));\n "}]}