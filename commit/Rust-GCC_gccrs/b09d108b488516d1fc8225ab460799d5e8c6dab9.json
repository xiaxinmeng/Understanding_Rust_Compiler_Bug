{"sha": "b09d108b488516d1fc8225ab460799d5e8c6dab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA5ZDEwOGI0ODg1MTZkMWZjODIyNWFiNDYwNzk5ZDVlOGM2ZGFiOQ==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomek@matfyz.cz", "date": "2001-12-21T01:50:10Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-21T01:50:10Z"}, "message": "cfgloop.c (flow_loops_find): Use the information of the depth first search order of the CFG correctly when...\n\n        * cfgloop.c (flow_loops_find): Use the information of the depth\n        first search order of the CFG correctly when finding natural loops.\n\nFrom-SVN: r48227", "tree": {"sha": "32379513001dec81f4dca82b4d14e1161d02c07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32379513001dec81f4dca82b4d14e1161d02c07c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b09d108b488516d1fc8225ab460799d5e8c6dab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09d108b488516d1fc8225ab460799d5e8c6dab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09d108b488516d1fc8225ab460799d5e8c6dab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09d108b488516d1fc8225ab460799d5e8c6dab9/comments", "author": null, "committer": null, "parents": [{"sha": "f350566bf47f2584ccb8a7671ad6ffd4aa82a6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f350566bf47f2584ccb8a7671ad6ffd4aa82a6b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f350566bf47f2584ccb8a7671ad6ffd4aa82a6b5"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "0db4281e9891ebb742a7a9d81de3f141133c62ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09d108b488516d1fc8225ab460799d5e8c6dab9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09d108b488516d1fc8225ab460799d5e8c6dab9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b09d108b488516d1fc8225ab460799d5e8c6dab9", "patch": "@@ -1,3 +1,8 @@\n+2001-12-20  Josef Zlomek  <zlomek@matfyz.cz>\n+\n+\t* cfgloop.c (flow_loops_find): Use the information of the depth\n+\tfirst search order of the CFG correctly when finding natural loops.\n+\n 2001-12-20  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.md (prologue_mcount): Update for explicit relocs."}, {"sha": "a94cbfe79b95b17992759d18c2c1a073736dd1b9", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09d108b488516d1fc8225ab460799d5e8c6dab9/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09d108b488516d1fc8225ab460799d5e8c6dab9/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=b09d108b488516d1fc8225ab460799d5e8c6dab9", "patch": "@@ -737,26 +737,26 @@ flow_loops_find (loops, flags)\n       /* Find and record information about all the natural loops\n \t in the CFG.  */\n       num_loops = 0;\n-      for (b = 0; b < n_basic_blocks; b++)\n+      for (b = n_basic_blocks - 1; b >= 0; b--)\n \t{\n-\t  basic_block header;\n+\t  basic_block latch;\n \n \t  /* Search the nodes of the CFG in reverse completion order\n \t     so that we can find outer loops first.  */\n-\t  header = BASIC_BLOCK (rc_order[b]);\n+\t  latch = BASIC_BLOCK (rc_order[b]);\n \n-\t  /* Look for all the possible latch blocks for this header.  */\n-\t  for (e = header->pred; e; e = e->pred_next)\n+\t  /* Look for all the possible headers for this latch block.  */\n+\t  for (e = latch->succ; e; e = e->succ_next)\n \t    {\n-\t      basic_block latch = e->src;\n-\n-\t      /* Look for back edges where a predecessor is dominated\n-\t\t by this block.  A natural loop has a single entry\n-\t\t node (header) that dominates all the nodes in the\n-\t\t loop.  It also has single back edge to the header\n-\t\t from a latch node.  Note that multiple natural loops\n-\t\t may share the same header.  */\n-\t      if (latch != ENTRY_BLOCK_PTR\n+\t      basic_block header = e->dest;\n+\n+\t      /* Look for forward edges where this block is dominated by\n+\t\t a successor of this block.  A natural loop has a single\n+\t\t entry node (header) that dominates all the nodes in the\n+\t\t loop.  It also has single back edge to the header from a\n+\t\t latch node.  Note that multiple natural loops may share\n+\t\t the same header.  */\n+\t      if (header != EXIT_BLOCK_PTR\n \t\t  && TEST_BIT (dom[latch->index], header->index))\n \t\t{\n \t\t  struct loop *loop;"}]}