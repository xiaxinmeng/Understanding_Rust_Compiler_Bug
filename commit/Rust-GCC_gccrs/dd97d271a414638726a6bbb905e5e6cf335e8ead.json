{"sha": "dd97d271a414638726a6bbb905e5e6cf335e8ead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5N2QyNzFhNDE0NjM4NzI2YTZiYmI5MDVlNWU2Y2YzMzVlOGVhZA==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2005-11-23T18:05:38Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2005-11-23T18:05:38Z"}, "message": "passes.c (init_optimization_passes): Document sequencing of passes.\n\n\n\t* passes.c (init_optimization_passes): Document\n\tsequencing of passes.\n\nFrom-SVN: r107425", "tree": {"sha": "6a2a80d1d6e49de77fef8a2fdd63ede5d9d62159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a2a80d1d6e49de77fef8a2fdd63ede5d9d62159"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd97d271a414638726a6bbb905e5e6cf335e8ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd97d271a414638726a6bbb905e5e6cf335e8ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd97d271a414638726a6bbb905e5e6cf335e8ead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd97d271a414638726a6bbb905e5e6cf335e8ead/comments", "author": null, "committer": null, "parents": [{"sha": "4fbe09f9dea90b631ddd4ead35a2d98714bdfc93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fbe09f9dea90b631ddd4ead35a2d98714bdfc93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fbe09f9dea90b631ddd4ead35a2d98714bdfc93"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "a117bbc04018526055e4bc3c89e976fe29a47333", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd97d271a414638726a6bbb905e5e6cf335e8ead/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd97d271a414638726a6bbb905e5e6cf335e8ead/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd97d271a414638726a6bbb905e5e6cf335e8ead", "patch": "@@ -1,3 +1,8 @@\n+2005-11-23  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* passes.c (init_optimization_passes): Document\n+\tsequencing of passes.\n+\n 2005-11-23  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* config/m68k/predicates.md (pcrel_address, extend_operator,"}, {"sha": "7add1208069b7b0e33681642772b97e5e424efb1", "filename": "gcc/passes.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd97d271a414638726a6bbb905e5e6cf335e8ead/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd97d271a414638726a6bbb905e5e6cf335e8ead/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=dd97d271a414638726a6bbb905e5e6cf335e8ead", "patch": "@@ -420,7 +420,25 @@ next_pass_1 (struct tree_opt_pass **list, struct tree_opt_pass *pass)\n           \n }\n \n-/* Construct the pass tree.  */\n+/* Construct the pass tree.  The sequencing of passes is driven by\n+   the cgraph routines:\n+\n+   cgraph_finalize_compilation_unit ()\n+       for each node N in the cgraph\n+\t   cgraph_analyze_function (N)\n+\t       cgraph_lower_function (N) -> all_lowering_passes\n+\n+   If we are optimizing, cgraph_optimize is then invoked:\n+\n+   cgraph_optimize ()\n+       ipa_passes () \t\t\t-> all_ipa_passes\n+       cgraph_expand_all_functions ()\n+           for each node N in the cgraph\n+\t       cgraph_expand_function (N)\n+\t           cgraph_lower_function (N)\t-> Now a NOP.\n+\t\t   lang_hooks.callgraph.expand_function (DECL (N))\n+\t\t   \ttree_rest_of_compilation (DECL (N))  -> all_passes\n+*/\n \n void\n init_optimization_passes (void)\n@@ -439,9 +457,8 @@ init_optimization_passes (void)\n   NEXT_PASS (pass_ipa_type_escape);\n   *p = NULL;\n \n-  /* All passes needed to lower the function into shape optimizers can operate\n-     on.  These passes are performed before interprocedural passes, unlike rest\n-     of local passes (all_passes).  */\n+  /* All passes needed to lower the function into shape optimizers can\n+     operate on.  */\n   p = &all_lowering_passes;\n   NEXT_PASS (pass_remove_useless_stmts);\n   NEXT_PASS (pass_mudflap_1);"}]}