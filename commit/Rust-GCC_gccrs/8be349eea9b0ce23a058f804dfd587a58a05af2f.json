{"sha": "8be349eea9b0ce23a058f804dfd587a58a05af2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJlMzQ5ZWVhOWIwY2UyM2EwNThmODA0ZGZkNTg3YTU4YTA1YWYyZg==", "commit": {"author": {"name": "Caroline Tice", "email": "cmtice@google.com", "date": "2015-01-29T16:47:25Z"}, "committer": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2015-01-29T16:47:25Z"}, "message": "Committing generated configure & Makefile.in pieces of VTV Cygwin patch (from Patrick Wollgast).\n\nCommitting generated configure & Makefile.in pieces of\nVTV Cygwin patch (from Patrick Wollgast).  Forgot to \ncommit these with the rest of the patch.\n\nFrom-SVN: r220254", "tree": {"sha": "b291b238bd219c3eba51ebaf83d374c8d3201171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b291b238bd219c3eba51ebaf83d374c8d3201171"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8be349eea9b0ce23a058f804dfd587a58a05af2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be349eea9b0ce23a058f804dfd587a58a05af2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be349eea9b0ce23a058f804dfd587a58a05af2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be349eea9b0ce23a058f804dfd587a58a05af2f/comments", "author": {"login": "cmtice", "id": 5561162, "node_id": "MDQ6VXNlcjU1NjExNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5561162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmtice", "html_url": "https://github.com/cmtice", "followers_url": "https://api.github.com/users/cmtice/followers", "following_url": "https://api.github.com/users/cmtice/following{/other_user}", "gists_url": "https://api.github.com/users/cmtice/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmtice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmtice/subscriptions", "organizations_url": "https://api.github.com/users/cmtice/orgs", "repos_url": "https://api.github.com/users/cmtice/repos", "events_url": "https://api.github.com/users/cmtice/events{/privacy}", "received_events_url": "https://api.github.com/users/cmtice/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "231d020bfb040a5539937ac3ad79c93769b63c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231d020bfb040a5539937ac3ad79c93769b63c5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/231d020bfb040a5539937ac3ad79c93769b63c5b"}], "stats": {"total": 189, "additions": 156, "deletions": 33}, "files": [{"sha": "c26a48ea5f3466664e4a3570c95e5ffe6854a627", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8be349eea9b0ce23a058f804dfd587a58a05af2f", "patch": "@@ -1,3 +1,10 @@\n+2015-01-29  Caroline Tice  <cmtice@google.com>\n+\n+\tCommitting VTV Cywin/Ming patch for Patrick Wollgast\n+\t* configure: Regenerate.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Regenerate.\n+\n 2015-01-29  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/atomic_base.h: Use __always_inline__ instead of\n@@ -11,20 +18,17 @@\n \t* testsuite/17_intro/headers/c++200x/all_attributes.cc: New.\n \t* testsuite/17_intro/headers/c++2014/all_attributes.cc: New.\n \n-2015-01-27  Caroline Tice  <cmtice@google.com>\n+2015-01-28  Caroline Tice  <cmtice@google.com>\n \n \tCommitting VTV Cywin/Ming patch for Patrick Wollgast\n \t* acinclude.m4: Define VTV_CYGMIN.\n-\t* configure: Regenerate.\n \t* libsupc++/Makefile.am: Add vtv_sources only to libsupc___la_SOURCES\n \tand libsupc__convenience_la_SOURCES if VTV_CYGMIN is not set.\n-\t* libsupc++/Makefile.in: Regenerated.\n \t* libsupc++/vtv_stubs.cc: Add none weak declaration of every function\n \tfor Cygwin and MinGW.\n \t* src/Makefile.am: Add libvtv.la to toolexeclib_LTLIBRARIES, if\n \tVTV_CYGMIN is set. Define libvtv_la_SOURCES, libvtv_la_LDFLAGS,\n \tlibvtv_la_AM_CXXFLAGS and libvtv_la_LINK if VTV_CYGMIN is set.\n-\t* libstdc++-v3/src/Makefile.in: Regenerate.\n \n 2015-01-28  Jonathan Wakely  <jwakely@redhat.com>\n "}, {"sha": "07e7773ef48f409f5ec848eea2bcf4627a5b2e49", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 34, "deletions": 11, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=8be349eea9b0ce23a058f804dfd587a58a05af2f", "patch": "@@ -674,6 +674,8 @@ ENABLE_VTABLE_VERIFY_TRUE\n VTV_CXXLINKFLAGS\n VTV_PCH_CXXFLAGS\n VTV_CXXFLAGS\n+VTV_CYGMIN_FALSE\n+VTV_CYGMIN_TRUE\n ENABLE_WERROR_FALSE\n ENABLE_WERROR_TRUE\n ENABLE_PYTHONDIR_FALSE\n@@ -11537,7 +11539,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11540 \"configure\"\n+#line 11542 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11643,7 +11645,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11646 \"configure\"\n+#line 11648 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15063,7 +15065,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 15066 \"configure\"\n+#line 15068 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15415,7 +15417,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15418 \"configure\"\n+#line 15420 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15450,7 +15452,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15453 \"configure\"\n+#line 15455 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15485,7 +15487,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15488 \"configure\"\n+#line 15490 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15521,7 +15523,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15524 \"configure\"\n+#line 15526 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15600,7 +15602,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15603 \"configure\"\n+#line 15605 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15642,7 +15644,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15645 \"configure\"\n+#line 15647 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15676,7 +15678,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15679 \"configure\"\n+#line 15681 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -17458,7 +17460,24 @@ $as_echo_n \"checking for vtable verify support... \" >&6; }\n $as_echo \"$enable_vtable_verify\" >&6; }\n \n   if test $enable_vtable_verify = yes; then\n-    VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end\"\n+    case ${target_os} in\n+      cygwin*|mingw32*)\n+        VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-lvtv,-u_vtable_map_vars_start,-u_vtable_map_vars_end\"\n+        vtv_cygmin=\"yes\"\n+        ;;\n+      *)\n+        VTV_CXXFLAGS=\"-fvtable-verify=std -Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end\"\n+        vtv_cygmin=\"no\"\n+        ;;\n+    esac\n+     if test $vtv_cygmin = yes; then\n+  VTV_CYGMIN_TRUE=\n+  VTV_CYGMIN_FALSE='#'\n+else\n+  VTV_CYGMIN_TRUE='#'\n+  VTV_CYGMIN_FALSE=\n+fi\n+\n     VTV_PCH_CXXFLAGS=\"-fvtable-verify=std\"\n     VTV_CXXLINKFLAGS=\"-L${toplevel_builddir}/libvtv/.libs -Wl,--rpath -Wl,${toplevel_builddir}/libvtv/.libs\"\n   else\n@@ -79781,6 +79800,10 @@ if test -z \"${ENABLE_WERROR_TRUE}\" && test -z \"${ENABLE_WERROR_FALSE}\"; then\n   as_fn_error \"conditional \\\"ENABLE_WERROR\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${VTV_CYGMIN_TRUE}\" && test -z \"${VTV_CYGMIN_FALSE}\"; then\n+  as_fn_error \"conditional \\\"VTV_CYGMIN\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${ENABLE_VTABLE_VERIFY_TRUE}\" && test -z \"${ENABLE_VTABLE_VERIFY_FALSE}\"; then\n   as_fn_error \"conditional \\\"ENABLE_VTABLE_VERIFY\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "ae4c64ab2ae703537438a2d80550f1e08076e7c9", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=8be349eea9b0ce23a058f804dfd587a58a05af2f", "patch": "@@ -106,7 +106,8 @@ am__objects_1 = array_type_info.lo atexit_arm.lo atexit_thread.lo \\\n \tpure.lo si_class_type_info.lo tinfo.lo tinfo2.lo vec.lo \\\n \tvmi_class_type_info.lo vterminate.lo\n @GLIBCXX_HOSTED_TRUE@am__objects_2 = cp-demangle.lo\n-@ENABLE_VTABLE_VERIFY_TRUE@am__objects_3 = vtv_stubs.lo\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@am__objects_3 =  \\\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@\tvtv_stubs.lo\n am_libsupc___la_OBJECTS = $(am__objects_1) $(am__objects_2) \\\n \t$(am__objects_3)\n libsupc___la_OBJECTS = $(am_libsupc___la_OBJECTS)\n@@ -427,8 +428,8 @@ sources = \\\n \tvmi_class_type_info.cc \\\n \tvterminate.cc\n \n-@ENABLE_VTABLE_VERIFY_TRUE@vtv_sources = \\\n-@ENABLE_VTABLE_VERIFY_TRUE@\tvtv_stubs.cc\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@vtv_sources = \\\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@\tvtv_stubs.cc\n \n libsupc___la_SOURCES = $(sources) $(c_sources) $(vtv_sources)\n libsupc__convenience_la_SOURCES = $(sources) $(c_sources) $(vtv_sources)"}, {"sha": "dd9ecd163814aca97ba6245d9d9b7fd329ec6b72", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be349eea9b0ce23a058f804dfd587a58a05af2f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=8be349eea9b0ce23a058f804dfd587a58a05af2f", "patch": "@@ -97,13 +97,19 @@ am__objects_3 = compatibility-c++0x.lo compatibility-atomic-c++0x.lo \\\n \tcompatibility-condvar.lo\n am_libstdc___la_OBJECTS = $(am__objects_2) $(am__objects_3)\n libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)\n+@VTV_CYGMIN_FALSE@am_libstdc___la_rpath = -rpath $(toolexeclibdir)\n+@VTV_CYGMIN_TRUE@am_libstdc___la_rpath = -rpath $(toolexeclibdir)\n+libvtv_la_LIBADD =\n+@VTV_CYGMIN_TRUE@am_libvtv_la_OBJECTS = vtv_stubs.lo\n+libvtv_la_OBJECTS = $(am_libvtv_la_OBJECTS)\n+@VTV_CYGMIN_TRUE@am_libvtv_la_rpath = -rpath $(toolexeclibdir)\n DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n depcomp =\n am__depfiles_maybe =\n CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n \t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n CXXLD = $(CXX)\n-SOURCES = $(libstdc___la_SOURCES)\n+SOURCES = $(libstdc___la_SOURCES) $(libvtv_la_SOURCES)\n RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \thtml-recursive info-recursive install-data-recursive \\\n \tinstall-dvi-recursive install-exec-recursive \\\n@@ -341,9 +347,22 @@ WARN_CXXFLAGS = \\\n # -I/-D flags to pass when compiling.\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n SUBDIRS = c++98 c++11\n+@VTV_CYGMIN_FALSE@toolexeclib_LTLIBRARIES = libstdc++.la\n \n # Cross compiler support.\n-toolexeclib_LTLIBRARIES = libstdc++.la\n+@VTV_CYGMIN_TRUE@toolexeclib_LTLIBRARIES = libvtv.la libstdc++.la\n+@VTV_CYGMIN_TRUE@libvtv_la_SOURCES = vtv_stubs.cc\n+@VTV_CYGMIN_TRUE@libvtv_la_LDFLAGS = $(lt_host_flags)\n+@VTV_CYGMIN_TRUE@libvtv_la_AM_CXXFLAGS = \\\n+@VTV_CYGMIN_TRUE@\t$(glibcxx_compiler_pic_flag) \\\n+@VTV_CYGMIN_TRUE@\t$(XTEMPLATE_FLAGS) \\\n+@VTV_CYGMIN_TRUE@\t-Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end \\\n+@VTV_CYGMIN_TRUE@\t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)\n+\n+@VTV_CYGMIN_TRUE@libvtv_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+@VTV_CYGMIN_TRUE@\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libvtv_la_AM_CXXFLAGS) \\\n+@VTV_CYGMIN_TRUE@\t$(CXXFLAGS) $(libvtv_la_LDFLAGS) $(LDFLAGS) -o $@\n+\n @GLIBCXX_LDBL_COMPAT_FALSE@ldbl_compat_sources = \n @GLIBCXX_LDBL_COMPAT_TRUE@ldbl_compat_sources = compatibility-ldbl.cc\n parallel_compat_sources = \\\n@@ -551,7 +570,9 @@ clean-toolexeclibLTLIBRARIES:\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES) \n-\t$(libstdc___la_LINK) -rpath $(toolexeclibdir) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)\n+\t$(libstdc___la_LINK) $(am_libstdc___la_rpath) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)\n+libvtv.la: $(libvtv_la_OBJECTS) $(libvtv_la_DEPENDENCIES) \n+\t$(libvtv_la_LINK) $(am_libvtv_la_rpath) $(libvtv_la_OBJECTS) $(libvtv_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n@@ -832,6 +853,10 @@ uninstall-am: uninstall-toolexeclibLTLIBRARIES\n \tuninstall-toolexeclibLTLIBRARIES\n \n \n+@VTV_CYGMIN_TRUE@vtv_stubs.cc:\n+@VTV_CYGMIN_TRUE@\trm -f $@\n+@VTV_CYGMIN_TRUE@\t$(LN_S) $(toplevel_srcdir)/libstdc++-v3/libsupc++/vtv_stubs.cc $@\n+\n vpath % $(top_srcdir)/src/c++98\n vpath % $(top_srcdir)/src/c++11\n "}, {"sha": "7dd9f096a613383398189386d8b03ed1af5c6105", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be349eea9b0ce23a058f804dfd587a58a05af2f/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be349eea9b0ce23a058f804dfd587a58a05af2f/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=8be349eea9b0ce23a058f804dfd587a58a05af2f", "patch": "@@ -1,13 +1,17 @@\n-2015-01-27  Caroline Tice  <cmtice@google.com>\n+2015-01-29  Caroline Tice  <cmtice@google.com>\n+\n+\tCommitting VTV Cywin/Ming patch for Patrick Wollgast\n+\t* libvtv/Makefile.in : Regenerate.\n+\t* libvtv/configure : Regenerate.\n+\n+2015-01-28  Caroline Tice  <cmtice@google.com>\n \n \tCommitting VTV Cywin/Ming patch for Patrick Wollgast\n \t* libvtv/Makefile.am : Add libvtv.la to toolexeclib_LTLIBRARIES, if\n \tVTV_CYGMIN is set. Define libvtv_la_LIBADD, libvtv_la_LDFLAGS,\n \tlibvtv_stubs_la_LDFLAGS and libvtv_stubs_la_SOURCES if VTV_CYGMIN is\n \tset. Add obstac.c to libvtv_la_SOURCES if VTV_CYGMIN is set.\n-\t* libvtv/Makefile.in : Regenerate.\n \t* libvtv/aclocal.m4 : Regenerate.\n-\t* libvtv/configure : Regenerate.\n \t* libvtv/configure.ac : Add ACX_LT_HOST_FLAGS. Define VTV_CYGMIN.\n \t* libvtv/configure.tgt : (x86_64-*-cygwin*, i?86-*-cygwin*,\n \tx86_64-*-mingw*)"}, {"sha": "098ee888fc16516897db991b708b60e24ec48db7", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 48, "deletions": 7, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be349eea9b0ce23a058f804dfd587a58a05af2f/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be349eea9b0ce23a058f804dfd587a58a05af2f/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=8be349eea9b0ce23a058f804dfd587a58a05af2f", "patch": "@@ -83,11 +83,29 @@ am__base_list = \\\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n \t\"$(DESTDIR)$(libvtv_includedir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n-libvtv_la_LIBADD =\n+libvtv_la_DEPENDENCIES =\n am__objects_1 = vtv_start.lo vtv_malloc.lo vtv_rts.lo vtv_utils.lo \\\n \tvtv_end.lo\n-@ENABLE_VTABLE_VERIFY_TRUE@am_libvtv_la_OBJECTS = $(am__objects_1)\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@am_libvtv_la_OBJECTS =  \\\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@\t$(am__objects_1)\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@am_libvtv_la_OBJECTS =  \\\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@\t$(am__objects_1) \\\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@\tobstack.lo\n libvtv_la_OBJECTS = $(am_libvtv_la_OBJECTS)\n+libvtv_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libvtv_la_LDFLAGS) $(LDFLAGS) -o $@\n+@VTV_CYGMIN_FALSE@am_libvtv_la_rpath = -rpath $(toolexeclibdir)\n+@VTV_CYGMIN_TRUE@am_libvtv_la_rpath = -rpath $(toolexeclibdir)\n+libvtv_stubs_la_LIBADD =\n+am__objects_2 = vtv_start.lo vtv_stubs.lo vtv_end.lo\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@am_libvtv_stubs_la_OBJECTS =  \\\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@\t$(am__objects_2)\n+libvtv_stubs_la_OBJECTS = $(am_libvtv_stubs_la_OBJECTS)\n+libvtv_stubs_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libvtv_stubs_la_LDFLAGS) $(LDFLAGS) -o $@\n+@VTV_CYGMIN_TRUE@am_libvtv_stubs_la_rpath = -rpath $(toolexeclibdir)\n DEFAULT_INCLUDES = -I.@am__isrc@\n depcomp = $(SHELL) $(top_srcdir)/../depcomp\n am__depfiles_maybe = depfiles\n@@ -103,8 +121,7 @@ LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t$(LDFLAGS) -o $@\n CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n \t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n-CXXLD = $(CXX)\n-SOURCES = $(libvtv_la_SOURCES)\n+SOURCES = $(libvtv_la_SOURCES) $(libvtv_stubs_la_SOURCES)\n MULTISRCTOP = \n MULTIBUILDTOP = \n MULTIDIRS = \n@@ -276,7 +293,8 @@ AM_CFLAGS = $(XCFLAGS)\n AM_CCASFLAGS = $(XCFLAGS)\n AM_CXXFLAGS = $(XCFLAGS) $(LIBSTDCXX_RAW_CXX_CXXFLAGS) \\\n \t-Wl,-u_vtable_map_vars_start,-u_vtable_map_vars_end\n-toolexeclib_LTLIBRARIES = libvtv.la\n+@VTV_CYGMIN_FALSE@toolexeclib_LTLIBRARIES = libvtv.la\n+@VTV_CYGMIN_TRUE@toolexeclib_LTLIBRARIES = libvtv.la libvtv_stubs.la\n vtv_headers = \\\n \tvtv_map.h \\\n \tvtv_malloc.h \\\n@@ -292,18 +310,29 @@ vtv_sources = \\\n         vtv_utils.cc \\\n \tvtv_end.c\n \n+vtv_stubs_sources = \\\n+\tvtv_start.c \\\n+\tvtv_stubs.cc \\\n+\tvtv_end.c\n+\n libvtv_includedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include\n \n # Link in vtv_start and vtv_end. \n BUILT_SOURCES = vtv_start.c vtv_end.c\n+@VTV_CYGMIN_TRUE@libvtv_la_LIBADD = -lpsapi\n+@VTV_CYGMIN_TRUE@libvtv_la_LDFLAGS = $(lt_host_flags)\n+@VTV_CYGMIN_TRUE@libvtv_stubs_la_LDFLAGS = $(lt_host_flags)\n @ENABLE_VTABLE_VERIFY_FALSE@libvtv_la_SOURCES = \n-@ENABLE_VTABLE_VERIFY_TRUE@libvtv_la_SOURCES = $(vtv_sources)\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_FALSE@libvtv_la_SOURCES = $(vtv_sources)\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@libvtv_la_SOURCES = $(vtv_sources) obstack.c\n+@ENABLE_VTABLE_VERIFY_TRUE@@VTV_CYGMIN_TRUE@libvtv_stubs_la_SOURCES = $(vtv_stubs_sources)\n @ENABLE_VTABLE_VERIFY_FALSE@libvtv_include_HEADERS = \n @ENABLE_VTABLE_VERIFY_TRUE@libvtv_include_HEADERS = $(vtv_headers)\n \n # Least ordering for dependencies mean linking w/o libstdc++ for as\n # long as the development of libvtv does not absolutely require it.\n CXXVTV = $(CC_FOR_TARGET)\n+CXXLD = $(CC_FOR_TARGET)\n LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(CXXVTV) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n \t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n@@ -383,18 +412,22 @@ clean-toolexeclibLTLIBRARIES:\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n libvtv.la: $(libvtv_la_OBJECTS) $(libvtv_la_DEPENDENCIES) \n-\t$(CXXLINK) -rpath $(toolexeclibdir) $(libvtv_la_OBJECTS) $(libvtv_la_LIBADD) $(LIBS)\n+\t$(libvtv_la_LINK) $(am_libvtv_la_rpath) $(libvtv_la_OBJECTS) $(libvtv_la_LIBADD) $(LIBS)\n+libvtv_stubs.la: $(libvtv_stubs_la_OBJECTS) $(libvtv_stubs_la_DEPENDENCIES) \n+\t$(libvtv_stubs_la_LINK) $(am_libvtv_stubs_la_rpath) $(libvtv_stubs_la_OBJECTS) $(libvtv_stubs_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n \n distclean-compile:\n \t-rm -f *.tab.c\n \n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/obstack.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtv_end.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtv_malloc.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtv_rts.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtv_start.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtv_stubs.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtv_utils.Plo@am__quote@\n \n .c.o:\n@@ -762,6 +795,14 @@ vtv_end.c:\n \trm -f $@\n \t$(LN_S) $(toplevel_srcdir)/libgcc/vtv_end.c $@\n \n+@VTV_CYGMIN_TRUE@  obstack.c:\n+@VTV_CYGMIN_TRUE@\t  rm -f $@\n+@VTV_CYGMIN_TRUE@\t  $(LN_S) $(toplevel_srcdir)/libiberty/obstack.c $@\n+\n+@VTV_CYGMIN_TRUE@  vtv_stubs.cc:\n+@VTV_CYGMIN_TRUE@\t  rm -f $@\n+@VTV_CYGMIN_TRUE@\t  $(LN_S) $(toplevel_srcdir)/libstdc++-v3/libsupc++/vtv_stubs.cc $@\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "64b6f7595579a81871ff0f9685ac3ea1e4ff85ea", "filename": "libvtv/configure", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be349eea9b0ce23a058f804dfd587a58a05af2f/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be349eea9b0ce23a058f804dfd587a58a05af2f/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=8be349eea9b0ce23a058f804dfd587a58a05af2f", "patch": "@@ -602,6 +602,8 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+VTV_CYGMIN_FALSE\n+VTV_CYGMIN_TRUE\n XCFLAGS\n libtool_VERSION\n enable_static\n@@ -12127,7 +12129,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12130 \"configure\"\n+#line 12132 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12233,7 +12235,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12236 \"configure\"\n+#line 12238 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15486,6 +15488,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n # Only expand once:\n \n \n+ACX_LT_HOST_FLAGS\n \n \n \n@@ -15510,6 +15513,24 @@ if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n \n fi\n \n+case \"$target_os\" in\n+  cygwin*|mingw32*)\n+    vtv_cygmin=\"yes\"\n+    ;;\n+  *)\n+    vtv_cygmin=\"no\"\n+    ;;\n+esac\n+\n+ if test $vtv_cygmin = yes; then\n+  VTV_CYGMIN_TRUE=\n+  VTV_CYGMIN_FALSE='#'\n+else\n+  VTV_CYGMIN_TRUE='#'\n+  VTV_CYGMIN_FALSE=\n+fi\n+\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure\n@@ -15675,6 +15696,10 @@ if test -z \"${am__fastdepCXX_TRUE}\" && test -z \"${am__fastdepCXX_FALSE}\"; then\n   as_fn_error \"conditional \\\"am__fastdepCXX\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${VTV_CYGMIN_TRUE}\" && test -z \"${VTV_CYGMIN_FALSE}\"; then\n+  as_fn_error \"conditional \\\"VTV_CYGMIN\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_write_fail=0"}]}