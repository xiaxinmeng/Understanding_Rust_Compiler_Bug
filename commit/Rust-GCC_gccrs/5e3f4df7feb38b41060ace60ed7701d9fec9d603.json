{"sha": "5e3f4df7feb38b41060ace60ed7701d9fec9d603", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUzZjRkZjdmZWIzOGI0MTA2MGFjZTYwZWQ3NzAxZDlmZWM5ZDYwMw==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2002-02-06T21:49:42Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2002-02-06T21:49:42Z"}, "message": "PR fortran/4730 fortran/5473\n\n2002-02-06  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\tPR fortran/4730 fortran/5473\n\t* com.c (ffecom_expr_): Deal with %VAL constructs.\n\t* intrin.c (ffeintrin_check_): Handle 'N' constraints for intrinsics,\n\tto indicate \"no larger than default kind\" integers and logicals.\n\t* intrin.def: Use 'N' constraints in table of intrinsics.\n\t* intdoc.c: Document this constraint.\n\t* intdoc.texi: Regenerated.\n\nFrom-SVN: r49554", "tree": {"sha": "ca4a76fea99d96b65be4e8fd63ea48ff9d0fb1c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca4a76fea99d96b65be4e8fd63ea48ff9d0fb1c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e3f4df7feb38b41060ace60ed7701d9fec9d603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e3f4df7feb38b41060ace60ed7701d9fec9d603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e3f4df7feb38b41060ace60ed7701d9fec9d603", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e3f4df7feb38b41060ace60ed7701d9fec9d603/comments", "author": null, "committer": null, "parents": [{"sha": "e8487c0417fd77c049faa5b7d8ece5e006a5e0ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8487c0417fd77c049faa5b7d8ece5e006a5e0ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8487c0417fd77c049faa5b7d8ece5e006a5e0ab"}], "stats": {"total": 69, "additions": 57, "deletions": 12}, "files": [{"sha": "a2214e54c44a58436a4bb87c744298fc086b5b00", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=5e3f4df7feb38b41060ace60ed7701d9fec9d603", "patch": "@@ -1,3 +1,13 @@\n+2002-02-06  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\tPR fortran/4730 fortran/5473\n+\t* com.c (ffecom_expr_): Deal with %VAL constructs.\n+\t* intrin.c (ffeintrin_check_): Handle 'N' constraints for intrinsics,\n+\tto indicate \"no larger than default kind\" integers and logicals.\n+\t* intrin.def: Use 'N' constraints in table of intrinsics.\n+\t* intdoc.c: Document this constraint.\n+\t* intdoc.texi: Regenerated.\n+\t\n 2002-02-04  Philipp Thomas  <pthomas@suse.de>\n \n \t* implic.c lex.c stb.c ste.c stu.c: Update copyright dates."}, {"sha": "bdb2a4ac5e7b9a12d8e44e564e3d0d55cf5d3053", "filename": "gcc/f/com.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=5e3f4df7feb38b41060ace60ed7701d9fec9d603", "patch": "@@ -3730,6 +3730,10 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n       item = ffecom_arg_ptr_to_expr (ffebld_left (expr), &list);\n       return convert (tree_type, item);\n \n+    case FFEBLD_opPERCENT_VAL:\n+      item = ffecom_arg_expr (ffebld_left (expr), &list);\n+      return convert (tree_type, item);\n+\n     case FFEBLD_opITEM:\n     case FFEBLD_opSTAR:\n     case FFEBLD_opBOUNDS:"}, {"sha": "fb88e88cecd6f032becbb4f630d713641488be4a", "filename": "gcc/f/intdoc.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.c?ref=5e3f4df7feb38b41060ace60ed7701d9fec9d603", "patch": "@@ -709,6 +709,10 @@ types of all the arguments.\\n\\n\");\n \t\t      argument_name_string (imp, 0));\n \t      break;\n \n+\t    case 'N':\n+\t      printf (\"@code{INTEGER} not wider than the default kind\");\n+\t      break;\n+\n \t    default:\n \t      assert (\"Ia\" == NULL);\n \t      break;\n@@ -732,6 +736,10 @@ types of all the arguments.\\n\\n\");\n \t\t      argument_name_string (imp, 0));\n \t      break;\n \n+\t    case 'N':\n+\t      printf (\"@code{LOGICAL} not wider than the default kind\");\n+\t      break;\n+\n \t    default:\n \t      assert (\"La\" == NULL);\n \t      break;\n@@ -779,6 +787,10 @@ types of all the arguments.\\n\\n\");\n \t\t      argument_name_string (imp, 0));\n \t      break;\n \n+\t    case 'N':\n+\t      printf (\"@code{INTEGER} or @code{LOGICAL} not wider than the default kind\");\n+\t      break;\n+\n \t    default:\n \t      assert (\"Ba\" == NULL);\n \t      break;"}, {"sha": "e829b35706107c192b998643c3061c12b7ad2581", "filename": "gcc/f/intdoc.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintdoc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintdoc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.texi?ref=5e3f4df7feb38b41060ace60ed7701d9fec9d603", "patch": "@@ -1673,7 +1673,7 @@ BesJN(@var{N}, @var{X})\n BesJN: @code{REAL} function, the @samp{KIND=} value of the type being that of argument @var{X}.\n \n @noindent\n-@var{N}: @code{INTEGER}; scalar; INTENT(IN).\n+@var{N}: @code{INTEGER} not wider than the default kind; scalar; INTENT(IN).\n \n @noindent\n @var{X}: @code{REAL}; scalar; INTENT(IN).\n@@ -1748,7 +1748,7 @@ BesYN(@var{N}, @var{X})\n BesYN: @code{REAL} function, the @samp{KIND=} value of the type being that of argument @var{X}.\n \n @noindent\n-@var{N}: @code{INTEGER}; scalar; INTENT(IN).\n+@var{N}: @code{INTEGER} not wider than the default kind; scalar; INTENT(IN).\n \n @noindent\n @var{X}: @code{REAL}; scalar; INTENT(IN).\n@@ -3113,7 +3113,7 @@ DbesJN(@var{N}, @var{X})\n DbesJN: @code{REAL(KIND=2)} function.\n \n @noindent\n-@var{N}: @code{INTEGER}; scalar; INTENT(IN).\n+@var{N}: @code{INTEGER} not wider than the default kind; scalar; INTENT(IN).\n \n @noindent\n @var{X}: @code{REAL(KIND=2)}; scalar; INTENT(IN).\n@@ -3194,7 +3194,7 @@ DbesYN(@var{N}, @var{X})\n DbesYN: @code{REAL(KIND=2)} function.\n \n @noindent\n-@var{N}: @code{INTEGER}; scalar; INTENT(IN).\n+@var{N}: @code{INTEGER} not wider than the default kind; scalar; INTENT(IN).\n \n @noindent\n @var{X}: @code{REAL(KIND=2)}; scalar; INTENT(IN).\n@@ -4385,7 +4385,7 @@ CALL Exit(@var{Status})\n @end example\n \n @noindent\n-@var{Status}: @code{INTEGER}; OPTIONAL; scalar; INTENT(IN).\n+@var{Status}: @code{INTEGER} not wider than the default kind; OPTIONAL; scalar; INTENT(IN).\n \n @noindent\n Intrinsic groups: @code{unix}.\n@@ -5249,7 +5249,7 @@ CALL GetArg(@var{Pos}, @var{Value})\n @end example\n \n @noindent\n-@var{Pos}: @code{INTEGER}; scalar; INTENT(IN).\n+@var{Pos}: @code{INTEGER} not wider than the default kind; scalar; INTENT(IN).\n \n @noindent\n @var{Value}: @code{CHARACTER}; scalar; INTENT(OUT)."}, {"sha": "1c6c00c732108adb1b6093ee987831c14ba1b499", "filename": "gcc/f/intrin.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintrin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintrin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.c?ref=5e3f4df7feb38b41060ace60ed7701d9fec9d603", "patch": "@@ -414,6 +414,24 @@ ffeintrin_check_ (ffeintrinImp imp, ffebldOp op,\n \t\t: firstarg_kt;\n \t      break;\n \n+\t    case 'N':\n+\t      /* Accept integers and logicals not wider than the default integer/logical.  */\n+\t      if (ffeinfo_basictype (i) == FFEINFO_basictypeINTEGER)\n+\t\t{\n+\t\t  okay &= anynum || (ffeinfo_kindtype (i) == FFEINFO_kindtypeINTEGER1\n+\t\t\t\t\t|| ffeinfo_kindtype (i) == FFEINFO_kindtypeINTEGER2\n+\t\t\t\t\t|| ffeinfo_kindtype (i) == FFEINFO_kindtypeINTEGER3);\n+\t\t  akt = FFEINFO_kindtypeINTEGER1;\t/* The default.  */\n+\t\t}\n+\t      else if (ffeinfo_basictype (i) == FFEINFO_basictypeLOGICAL)\n+\t\t{\n+\t\t  okay &= anynum || (ffeinfo_kindtype (i) == FFEINFO_kindtypeLOGICAL1\n+\t\t\t\t\t|| ffeinfo_kindtype (i) == FFEINFO_kindtypeLOGICAL2\n+\t\t\t\t\t|| ffeinfo_kindtype (i) == FFEINFO_kindtypeLOGICAL3);\n+\t\t  akt = FFEINFO_kindtypeLOGICAL1;\t/* The default.  */\n+\t\t}\n+\t      break;\n+\n \t    case '*':\n \t    default:\n \t      break;"}, {"sha": "5d712ba21c0286abc85fccbf6d6d07b1ff2f05af", "filename": "gcc/f/intrin.def", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintrin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e3f4df7feb38b41060ace60ed7701d9fec9d603/gcc%2Ff%2Fintrin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.def?ref=5e3f4df7feb38b41060ace60ed7701d9fec9d603", "patch": "@@ -3102,6 +3102,7 @@ DEFSPEC (NONE,\n      4    (Twice the size of 2)\n      6    (Twice the size as 3)\n      A    Same as first argument\n+     N    Not wider than the default kind\n \n    <arg-len> is:\n \n@@ -3218,10 +3219,10 @@ DEFIMP\t(ALARM,\t\t\"ALARM\",\tALARM,,,\t\"--:-:Seconds=I*,Handler=s*,Status=?I1w\")\n DEFIMP\t(AND,\t\t\"AND\",\t\t,,,\t\t\"B=:*:I=B*,J=B*\")\n DEFIMP\t(BESJ0,\t\t\"BESJ0\",\tL_BESJ0,,,\t\"R=:0:X=R*\")\n DEFIMP\t(BESJ1,\t\t\"BESJ1\",\tL_BESJ1,,,\t\"R=:0:X=R*\")\n-DEFIMP\t(BESJN,\t\t\"BESJN\",\tL_BESJN,,,\t\"R=:1:N=I*,X=R*\")\n+DEFIMP\t(BESJN,\t\t\"BESJN\",\tL_BESJN,,,\t\"R=:1:N=IN,X=R*\")\n DEFIMP\t(BESY0,\t\t\"BESY0\",\tL_BESY0,,,\t\"R=:0:X=R*\")\n DEFIMP\t(BESY1,\t\t\"BESY1\",\tL_BESY1,,,\t\"R=:0:X=R*\")\n-DEFIMP\t(BESYN,\t\t\"BESYN\",\tL_BESYN,,,\t\"R=:1:N=I*,X=R*\")\n+DEFIMP\t(BESYN,\t\t\"BESYN\",\tL_BESYN,,,\t\"R=:1:N=IN,X=R*\")\n DEFIMP\t(BIT_SIZE,\t\"BIT_SIZE\",\t,,,\t\t\"I=:0:I=I*i\")\n DEFIMP\t(BTEST,\t\t\"BTEST\",\t,,,\t\t\"L1:*:I=I*,Pos=I*\")\n DEFIMP\t(CDABS,\t\t\"CDABS\",\t,CDABS,,\t\"R2:-:A=C2\")\n@@ -3242,10 +3243,10 @@ DEFIMPY\t(DATE,\t\t\"DATE\",\t\tDATE,,,\t\t\"--:-:Date=A1w\",\tTRUE)\n DEFIMP\t(DATE_AND_TIME,\t\"DATE_AND_TIME\", DATE_AND_TIME,,, \"--:-:Date=A1w,Time=?A1w,Zone=?A1w,Values=?I1(8)w\")\n DEFIMP\t(DBESJ0,\t\"DBESJ0\",\tL_BESJ0,,,\t\"R2:-:X=R2\")\n DEFIMP\t(DBESJ1,\t\"DBESJ1\",\tL_BESJ1,,,\t\"R2:-:X=R2\")\n-DEFIMP\t(DBESJN,\t\"DBESJN\",\tL_BESJN,,,\t\"R2:-:N=I*,X=R2\")\n+DEFIMP\t(DBESJN,\t\"DBESJN\",\tL_BESJN,,,\t\"R2:-:N=IN,X=R2\")\n DEFIMP\t(DBESY0,\t\"DBESY0\",\tL_BESY0,,,\t\"R2:-:X=R2\")\n DEFIMP\t(DBESY1,\t\"DBESY1\",\tL_BESY1,,,\t\"R2:-:X=R2\")\n-DEFIMP\t(DBESYN,\t\"DBESYN\",\tL_BESYN,,,\t\"R2:-:N=I*,X=R2\")\n+DEFIMP\t(DBESYN,\t\"DBESYN\",\tL_BESYN,,,\t\"R2:-:N=IN,X=R2\")\n DEFIMP\t(DCONJG,\t\"DCONJG\",\t,DCONJG,,\t\"C2:-:Z=C2\")\n DEFIMP\t(DERF,\t\t\"DERF\",\t\tL_ERF,DERF,,\t\"R2:-:X=R2\")\n DEFIMP\t(DERFC,\t\t\"DERFC\",\tL_ERFC,DERFC,,\t\"R2:-:X=R2\")\n@@ -3258,7 +3259,7 @@ DEFIMP\t(ERF,\t\t\"ERF\",\t\tL_ERF,ERF,,\t\"R=:0:X=R*\")\n DEFIMP\t(ERFC,\t\t\"ERFC\",\t\tL_ERFC,ERFC,,\t\"R=:0:X=R*\")\n DEFIMP\t(ETIME_func,\t\"ETIME_func\",\tETIME,,,\t\"R1:-:TArray=R1(2)w\")\n DEFIMP\t(ETIME_subr,\t\"ETIME_subr\",\tETIME,,,\t\"--:-:TArray=R1(2)w,Result=R1w\")\n-DEFIMP\t(EXIT,\t\t\"EXIT\",\t\tEXIT,,,\t\t\"--:-:Status=?I*\")\n+DEFIMP\t(EXIT,\t\t\"EXIT\",\t\tEXIT,,,\t\t\"--:-:Status=?IN\")\n DEFIMP\t(FDATE_func,\t\"FDATE_func\",\tFDATE,,,\t\"A1*:-:\")\n DEFIMP\t(FDATE_subr,\t\"FDATE_subr\",\tFDATE,,,\t\"--:-:Date=A1w\")\n DEFIMP\t(FGET_func,\t\"FGET_func\",\tFGET,,,\t\t\"I1:-:C=A1w\")\n@@ -3277,7 +3278,7 @@ DEFIMP\t(FSTAT_subr,\t\"FSTAT_subr\",\tFSTAT,,,\t\"--:-:Unit=I*,SArray=I1(13)w,Status=?\n DEFIMP\t(FTELL_func,\t\"FTELL_func\",\tFTELL,,,\t\"I1:-:Unit=I*\")\n DEFIMP\t(FTELL_subr,\t\"FTELL_subr\",\tFTELL,,,\t\"--:-:Unit=I*,Offset=I1w\")\n DEFIMP\t(GERROR,\t\"GERROR\",\tGERROR,,,\t\"--:-:Message=A1w\")\n-DEFIMP\t(GETARG,\t\"GETARG\",\tGETARG,,,\t\"--:-:Pos=I*,Value=A1w\")\n+DEFIMP\t(GETARG,\t\"GETARG\",\tGETARG,,,\t\"--:-:Pos=IN,Value=A1w\")\n DEFIMP\t(GETCWD_func,\t\"GETCWD_func\",\tGETCWD,,,\t\"I1:-:Name=A1w\")\n DEFIMP\t(GETCWD_subr,\t\"GETCWD_subr\",\tGETCWD,,,\t\"--:-:Name=A1w,Status=?I1w\")\n DEFIMP\t(GETGID,\t\"GETGID\",\tGETGID,,,\t\"I1:-:\")"}]}