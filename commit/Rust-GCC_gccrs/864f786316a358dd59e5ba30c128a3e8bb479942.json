{"sha": "864f786316a358dd59e5ba30c128a3e8bb479942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY0Zjc4NjMxNmEzNThkZDU5ZTViYTMwYzEyOGEzZThiYjQ3OTk0Mg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-08-05T08:17:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T08:17:02Z"}, "message": "exp_strm.adb (Build_Record_Or_Elementary_Input_Function): For access discriminants...\n\n2008-08-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_strm.adb (Build_Record_Or_Elementary_Input_Function): For access\n\tdiscriminants, indicate that the corresponding object declaration has\n\tno initialization, to prevent spurious warnings when the access type is\n\tnull-excluding.\n\nFrom-SVN: r138671", "tree": {"sha": "8c92330f2a89cee6944ab3774f564f21052acea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c92330f2a89cee6944ab3774f564f21052acea5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/864f786316a358dd59e5ba30c128a3e8bb479942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864f786316a358dd59e5ba30c128a3e8bb479942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/864f786316a358dd59e5ba30c128a3e8bb479942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864f786316a358dd59e5ba30c128a3e8bb479942/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1db334ed53827be855c6e573bde2af301bcf596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1db334ed53827be855c6e573bde2af301bcf596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1db334ed53827be855c6e573bde2af301bcf596"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "9c4befb5d24ccb06e48c780f94b33d39b3fabbd9", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/864f786316a358dd59e5ba30c128a3e8bb479942/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/864f786316a358dd59e5ba30c128a3e8bb479942/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=864f786316a358dd59e5ba30c128a3e8bb479942", "patch": "@@ -1113,12 +1113,22 @@ package body Exp_Strm is\n          while Present (Discr) loop\n             Cn := New_External_Name ('C', J);\n \n-            Append_To (Decls,\n+            Decl :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Make_Defining_Identifier (Loc, Cn),\n                 Object_Definition =>\n-                 New_Occurrence_Of (Etype (Discr), Loc)));\n+                  New_Occurrence_Of (Etype (Discr), Loc));\n+\n+            --  If the this  is an access discriminant, do not perform default\n+            --  initialization.  The discriminant is about to get its value\n+            --  from Read, and if the type is null excluding we do not want\n+            --  spurious warnings on an initial null.\n+\n+            if Is_Access_Type (Etype (Discr)) then\n+               Set_No_Initialization (Decl);\n+            end if;\n \n+            Append_To (Decls, Decl);\n             Append_To (Decls,\n               Make_Attribute_Reference (Loc,\n                 Prefix => New_Occurrence_Of (Etype (Discr), Loc),"}]}