{"sha": "ab77a036ff36a414ba6c54d03216d03cf0797591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI3N2EwMzZmZjM2YTQxNGJhNmM1NGQwMzIxNmQwM2NmMDc5NzU5MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-18T17:27:19Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-18T17:27:19Z"}, "message": "mips.h: Move variable declarations to end of file and enclose them all in #ifndef...\n\ngcc/\n\t* config/mips/mips.h: Move variable declarations to end of file and\n\tenclose them all in #ifndef USED_FOR_TARGET.\n\t* config/mips/mips.c: Reorder functions into more logical groups,\n\tand so that callees appear before callers.  Put the targetm\n\tinitializer at the end of the file.  Remove forward static\n\tdeclarations where possible.\n\t(mips_init_builtins): Add \"static\" to definition.\n\t(mips_expand_builtin, mips_mode_rep_extended): Likewise.\n\nFrom-SVN: r129452", "tree": {"sha": "f05aabb5b85370f32f7719356a62c20480111231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f05aabb5b85370f32f7719356a62c20480111231"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab77a036ff36a414ba6c54d03216d03cf0797591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab77a036ff36a414ba6c54d03216d03cf0797591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab77a036ff36a414ba6c54d03216d03cf0797591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab77a036ff36a414ba6c54d03216d03cf0797591/comments", "author": null, "committer": null, "parents": [{"sha": "4ec4ca36f8b0265728e15504294c8c31d1b75ac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ec4ca36f8b0265728e15504294c8c31d1b75ac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ec4ca36f8b0265728e15504294c8c31d1b75ac4"}], "stats": {"total": 13900, "additions": 6872, "deletions": 7028}, "files": [{"sha": "35724afcc1245b02c29a3d986f11430c0bd91d84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab77a036ff36a414ba6c54d03216d03cf0797591/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab77a036ff36a414ba6c54d03216d03cf0797591/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab77a036ff36a414ba6c54d03216d03cf0797591", "patch": "@@ -1,3 +1,14 @@\n+2007-10-18  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.h: Move variable declarations to end of file and\n+\tenclose them all in #ifndef USED_FOR_TARGET.\n+\t* config/mips/mips.c: Reorder functions into more logical groups,\n+\tand so that callees appear before callers.  Put the targetm\n+\tinitializer at the end of the file.  Remove forward static\n+\tdeclarations where possible.\n+\t(mips_init_builtins): Add \"static\" to definition.\n+\t(mips_expand_builtin, mips_mode_rep_extended): Likewise.\n+\n 2007-10-18  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (TARGET_MIN_ANCHOR_OFFSET): Delete."}, {"sha": "e56d0454740d327c674a9207dd0055ff0f3a648b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6834, "deletions": 6993, "changes": 13827, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab77a036ff36a414ba6c54d03216d03cf0797591/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab77a036ff36a414ba6c54d03216d03cf0797591/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ab77a036ff36a414ba6c54d03216d03cf0797591"}, {"sha": "061bac87345cec29f541c1b657594da8d66297b9", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 27, "deletions": 35, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab77a036ff36a414ba6c54d03216d03cf0797591/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab77a036ff36a414ba6c54d03216d03cf0797591/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=ab77a036ff36a414ba6c54d03216d03cf0797591", "patch": "@@ -132,32 +132,6 @@ enum mips_code_readable_setting {\n   CODE_READABLE_YES\n };\n \n-#ifndef USED_FOR_TARGET\n-extern char mips_print_operand_punct[256]; /* print_operand punctuation chars */\n-extern const char *current_function_file; /* filename current function is in */\n-extern int num_source_filenames;\t/* current .file # */\n-extern int mips_section_threshold;\t/* # bytes of data/sdata cutoff */\n-extern int sym_lineno;\t\t\t/* sgi next label # for each stmt */\n-extern int set_noreorder;\t\t/* # of nested .set noreorder's  */\n-extern int set_nomacro;\t\t\t/* # of nested .set nomacro's  */\n-extern int set_noat;\t\t\t/* # of nested .set noat's  */\n-extern int set_volatile;\t\t/* # of nested .set volatile's  */\n-extern int mips_branch_likely;\t\t/* emit 'l' after br (branch likely) */\n-extern int mips_dbx_regno[];\n-extern int mips_dwarf_regno[];\n-extern bool mips_split_p[];\n-extern GTY(()) rtx cmp_operands[2];\n-extern enum processor_type mips_arch;   /* which cpu to codegen for */\n-extern enum processor_type mips_tune;   /* which cpu to schedule for */\n-extern int mips_isa;\t\t\t/* architectural level */\n-extern int mips_abi;\t\t\t/* which ABI to use */\n-extern const struct mips_cpu_info mips_cpu_info_table[];\n-extern const struct mips_cpu_info *mips_arch_info;\n-extern const struct mips_cpu_info *mips_tune_info;\n-extern const struct mips_rtx_cost_data *mips_cost;\n-extern enum mips_code_readable_setting mips_code_readable;\n-#endif\n-\n /* Macros to silence warnings about numbers being signed in traditional\n    C and unsigned in ISO C when compiled on 32-bit hosts.  */\n \n@@ -1585,13 +1559,6 @@ extern enum mips_code_readable_setting mips_code_readable;\n \n #define HARD_REGNO_NREGS(REGNO, MODE) mips_hard_regno_nregs (REGNO, MODE)\n \n-/* To make the code simpler, HARD_REGNO_MODE_OK just references an\n-   array built in override_options.  Because machmodes.h is not yet\n-   included before this file is processed, the MODE bound can't be\n-   expressed here.  */\n-\n-extern char mips_hard_regno_mode_ok[][FIRST_PSEUDO_REGISTER];\n-\n #define HARD_REGNO_MODE_OK(REGNO, MODE)\t\t\t\t\t\\\n   mips_hard_regno_mode_ok[ (int)(MODE) ][ (REGNO) ]\n \n@@ -1804,8 +1771,6 @@ enum reg_class\n    choose a class which is \"minimal\", meaning that no smaller class\n    also contains the register.  */\n \n-extern const enum reg_class mips_regno_to_class[];\n-\n #define REGNO_REG_CLASS(REGNO) mips_regno_to_class[ (REGNO) ]\n \n /* A macro whose definition is the name of the class to which a\n@@ -3094,3 +3059,30 @@ while (0)\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n+#ifndef USED_FOR_TARGET\n+extern const enum reg_class mips_regno_to_class[];\n+extern char mips_hard_regno_mode_ok[][FIRST_PSEUDO_REGISTER];\n+extern char mips_print_operand_punct[256]; /* print_operand punctuation chars */\n+extern const char *current_function_file; /* filename current function is in */\n+extern int num_source_filenames;\t/* current .file # */\n+extern int mips_section_threshold;\t/* # bytes of data/sdata cutoff */\n+extern int sym_lineno;\t\t\t/* sgi next label # for each stmt */\n+extern int set_noreorder;\t\t/* # of nested .set noreorder's  */\n+extern int set_nomacro;\t\t\t/* # of nested .set nomacro's  */\n+extern int set_noat;\t\t\t/* # of nested .set noat's  */\n+extern int set_volatile;\t\t/* # of nested .set volatile's  */\n+extern int mips_branch_likely;\t\t/* emit 'l' after br (branch likely) */\n+extern int mips_dbx_regno[];\n+extern int mips_dwarf_regno[];\n+extern bool mips_split_p[];\n+extern GTY(()) rtx cmp_operands[2];\n+extern enum processor_type mips_arch;   /* which cpu to codegen for */\n+extern enum processor_type mips_tune;   /* which cpu to schedule for */\n+extern int mips_isa;\t\t\t/* architectural level */\n+extern int mips_abi;\t\t\t/* which ABI to use */\n+extern const struct mips_cpu_info mips_cpu_info_table[];\n+extern const struct mips_cpu_info *mips_arch_info;\n+extern const struct mips_cpu_info *mips_tune_info;\n+extern const struct mips_rtx_cost_data *mips_cost;\n+extern enum mips_code_readable_setting mips_code_readable;\n+#endif"}]}