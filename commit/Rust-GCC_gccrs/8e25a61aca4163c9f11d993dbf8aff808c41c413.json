{"sha": "8e25a61aca4163c9f11d993dbf8aff808c41c413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyNWE2MWFjYTQxNjNjOWYxMWQ5OTNkYmY4YWZmODA4YzQxYzQxMw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-12-12T20:01:18Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-12-12T20:01:18Z"}, "message": "A bit of walk_gimple_op maintenance.\n\n\t* gimple-walk.c (walk_gimple_op) <GIMPLE_OMP_FOR>: Also check\n\tintermediate walk_tree results for for_incr.\n\t<GIMPLE_OMP_TARGET>: Walk child_fn and data_arg, too.\n\t<GIMPLE_OMP_CRITICAL, GIMPLE_OMP_ATOMIC_STORE>: Pretty printing.\n\nFrom-SVN: r218686", "tree": {"sha": "864c9b62ba2938b139ec4ed6d2eb1d2d616aaabf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864c9b62ba2938b139ec4ed6d2eb1d2d616aaabf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e25a61aca4163c9f11d993dbf8aff808c41c413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e25a61aca4163c9f11d993dbf8aff808c41c413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e25a61aca4163c9f11d993dbf8aff808c41c413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e25a61aca4163c9f11d993dbf8aff808c41c413/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b6f54bd34fc824b7dcacf2a57b0b915852389d"}], "stats": {"total": 56, "additions": 38, "deletions": 18}, "files": [{"sha": "3a200321b49ad3cda860e49a5fe807c28cada7bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e25a61aca4163c9f11d993dbf8aff808c41c413/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e25a61aca4163c9f11d993dbf8aff808c41c413/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e25a61aca4163c9f11d993dbf8aff808c41c413", "patch": "@@ -1,3 +1,10 @@\n+2014-12-12  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gimple-walk.c (walk_gimple_op) <GIMPLE_OMP_FOR>: Also check\n+\tintermediate walk_tree results for for_incr.\n+\t<GIMPLE_OMP_TARGET>: Walk child_fn and data_arg, too.\n+\t<GIMPLE_OMP_CRITICAL, GIMPLE_OMP_ATOMIC_STORE>: Pretty printing.\n+\n 2014-12-12  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR middle-end/64182"}, {"sha": "959d68eca28d7e574cecbec5d57facaa38ae46a9", "filename": "gcc/gimple-walk.c", "status": "modified", "additions": 31, "deletions": 18, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e25a61aca4163c9f11d993dbf8aff808c41c413/gcc%2Fgimple-walk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e25a61aca4163c9f11d993dbf8aff808c41c413/gcc%2Fgimple-walk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-walk.c?ref=8e25a61aca4163c9f11d993dbf8aff808c41c413", "patch": "@@ -321,11 +321,13 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n       break;\n \n     case GIMPLE_OMP_CRITICAL:\n-      ret = walk_tree (gimple_omp_critical_name_ptr (\n-\t\t\t as_a <gomp_critical *> (stmt)),\n-\t\t       callback_op, wi, pset);\n-      if (ret)\n-\treturn ret;\n+      {\n+\tgomp_critical *omp_stmt = as_a <gomp_critical *> (stmt);\n+\tret = walk_tree (gimple_omp_critical_name_ptr (omp_stmt),\n+\t\t\t callback_op, wi, pset);\n+\tif (ret)\n+\t  return ret;\n+      }\n       break;\n \n     case GIMPLE_OMP_FOR:\n@@ -349,9 +351,9 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n \t    return ret;\n \t  ret = walk_tree (gimple_omp_for_incr_ptr (stmt, i), callback_op,\n \t\t\t   wi, pset);\n+\t  if (ret)\n+\t    return ret;\n \t}\n-      if (ret)\n-\treturn ret;\n       break;\n \n     case GIMPLE_OMP_PARALLEL:\n@@ -404,7 +406,6 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n \t\t       wi, pset);\n       if (ret)\n \treturn ret;\n-\n       ret = walk_tree (gimple_omp_sections_control_ptr (stmt), callback_op,\n \t\t       wi, pset);\n       if (ret)\n@@ -420,10 +421,21 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n       break;\n \n     case GIMPLE_OMP_TARGET:\n-      ret = walk_tree (gimple_omp_target_clauses_ptr (stmt), callback_op, wi,\n-\t\t       pset);\n-      if (ret)\n-\treturn ret;\n+      {\n+\tgomp_target *omp_stmt = as_a <gomp_target *> (stmt);\n+\tret = walk_tree (gimple_omp_target_clauses_ptr (omp_stmt),\n+\t\t\t callback_op, wi, pset);\n+\tif (ret)\n+\t  return ret;\n+\tret = walk_tree (gimple_omp_target_child_fn_ptr (omp_stmt),\n+\t\t\t callback_op, wi, pset);\n+\tif (ret)\n+\t  return ret;\n+\tret = walk_tree (gimple_omp_target_data_arg_ptr (omp_stmt),\n+\t\t\t callback_op, wi, pset);\n+\tif (ret)\n+\t  return ret;\n+      }\n       break;\n \n     case GIMPLE_OMP_TEAMS:\n@@ -440,7 +452,6 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n \t\t\t callback_op, wi, pset);\n \tif (ret)\n \t  return ret;\n-\n \tret = walk_tree (gimple_omp_atomic_load_rhs_ptr (omp_stmt),\n \t\t\t callback_op, wi, pset);\n \tif (ret)\n@@ -449,11 +460,13 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n       break;\n \n     case GIMPLE_OMP_ATOMIC_STORE:\n-      ret = walk_tree (gimple_omp_atomic_store_val_ptr (\n-\t\t         as_a <gomp_atomic_store *> (stmt)),\n-\t\t       callback_op, wi, pset);\n-      if (ret)\n-\treturn ret;\n+      {\n+\tgomp_atomic_store *omp_stmt = as_a <gomp_atomic_store *> (stmt);\n+\tret = walk_tree (gimple_omp_atomic_store_val_ptr (omp_stmt),\n+\t\t\t callback_op, wi, pset);\n+\tif (ret)\n+\t  return ret;\n+      }\n       break;\n \n     case GIMPLE_TRANSACTION:"}]}