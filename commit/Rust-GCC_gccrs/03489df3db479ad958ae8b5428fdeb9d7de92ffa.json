{"sha": "03489df3db479ad958ae8b5428fdeb9d7de92ffa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM0ODlkZjNkYjQ3OWFkOTU4YWU4YjU0MjhmZGViOWQ3ZGU5MmZmYQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-02T12:57:28Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-02T12:57:28Z"}, "message": "inquire.c (f_inqu): Avoid ambiguous else clauses.\n\n\t* libI77/inquire.c (f_inqu): Avoid ambiguous else clauses.\n\t* libI77/lread.c (l_C, l_L): Likewise.\n\t* libI77/open.c (f_open): Likewise.\n\t* libI77/rsne.c (x_rsne): Likewise.\n\t* libI77/wref.c (wrt_F): Likewise.\n\nFrom-SVN: r54167", "tree": {"sha": "db36fe5f88ba393f4c2f1e68fe6777b33043db92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db36fe5f88ba393f4c2f1e68fe6777b33043db92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03489df3db479ad958ae8b5428fdeb9d7de92ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03489df3db479ad958ae8b5428fdeb9d7de92ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03489df3db479ad958ae8b5428fdeb9d7de92ffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03489df3db479ad958ae8b5428fdeb9d7de92ffa/comments", "author": null, "committer": null, "parents": [{"sha": "1d7ed5d3ea85fbe4d609a1336819fa526481d944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d7ed5d3ea85fbe4d609a1336819fa526481d944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d7ed5d3ea85fbe4d609a1336819fa526481d944"}], "stats": {"total": 204, "additions": 122, "deletions": 82}, "files": [{"sha": "cab86be281b31afc72c4c92cdbc1108a3f84bc0b", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=03489df3db479ad958ae8b5428fdeb9d7de92ffa", "patch": "@@ -1,3 +1,11 @@\n+Sun Jun  2 08:55:20 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* libI77/inquire.c (f_inqu): Avoid ambiguous else clauses.\n+\t* libI77/lread.c (l_C, l_L): Likewise.\n+\t* libI77/open.c (f_open): Likewise.\n+\t* libI77/rsne.c (x_rsne): Likewise.\n+\t* libI77/wref.c (wrt_F): Likewise.\n+\n Sun Jun  2 08:53:15 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* libF77/getenv_.c (G77_getenv_0): Avoid signed/unsigned warning."}, {"sha": "5b2df3e699cf518aac4bf4317ff7174c3304bf79", "filename": "libf2c/libI77/inquire.c", "status": "modified", "additions": 68, "deletions": 46, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Finquire.c?ref=03489df3db479ad958ae8b5428fdeb9d7de92ffa", "patch": "@@ -55,67 +55,89 @@ f_inqu (inlist * a)\n \t}\n     }\n   if (a->inex != NULL)\n-    if (byfile && x != -1 || !byfile && p != NULL)\n-      *a->inex = 1;\n-    else\n-      *a->inex = 0;\n+    {\n+      if (byfile && x != -1 || !byfile && p != NULL)\n+\t*a->inex = 1;\n+      else\n+\t*a->inex = 0;\n+    }\n   if (a->inopen != NULL)\n-    if (byfile)\n-      *a->inopen = (p != NULL);\n-    else\n-      *a->inopen = (p != NULL && p->ufd != NULL);\n+    {\n+      if (byfile)\n+\t*a->inopen = (p != NULL);\n+      else\n+\t*a->inopen = (p != NULL && p->ufd != NULL);\n+    }\n   if (a->innum != NULL)\n     *a->innum = p - f__units;\n   if (a->innamed != NULL)\n-    if (byfile || p != NULL && p->ufnm != NULL)\n-      *a->innamed = 1;\n-    else\n-      *a->innamed = 0;\n+    {\n+      if (byfile || p != NULL && p->ufnm != NULL)\n+\t*a->innamed = 1;\n+      else\n+\t*a->innamed = 0;\n+    }\n   if (a->inname != NULL)\n-    if (byfile)\n-      b_char (buf, a->inname, a->innamlen);\n-    else if (p != NULL && p->ufnm != NULL)\n-      b_char (p->ufnm, a->inname, a->innamlen);\n+    {\n+      if (byfile)\n+\tb_char (buf, a->inname, a->innamlen);\n+      else if (p != NULL && p->ufnm != NULL)\n+\tb_char (p->ufnm, a->inname, a->innamlen);\n+    }\n   if (a->inacc != NULL && p != NULL && p->ufd != NULL)\n-    if (p->url)\n-      b_char (\"DIRECT\", a->inacc, a->inacclen);\n-    else\n-      b_char (\"SEQUENTIAL\", a->inacc, a->inacclen);\n+    {\n+      if (p->url)\n+\tb_char (\"DIRECT\", a->inacc, a->inacclen);\n+      else\n+\tb_char (\"SEQUENTIAL\", a->inacc, a->inacclen);\n+    }\n   if (a->inseq != NULL)\n-    if (p != NULL && p->url)\n-      b_char (\"NO\", a->inseq, a->inseqlen);\n-    else\n-      b_char (\"YES\", a->inseq, a->inseqlen);\n+    {\n+      if (p != NULL && p->url)\n+\tb_char (\"NO\", a->inseq, a->inseqlen);\n+      else\n+\tb_char (\"YES\", a->inseq, a->inseqlen);\n+    }\n   if (a->indir != NULL)\n-    if (p == NULL || p->url)\n-      b_char (\"YES\", a->indir, a->indirlen);\n-    else\n-      b_char (\"NO\", a->indir, a->indirlen);\n+    {\n+      if (p == NULL || p->url)\n+\tb_char (\"YES\", a->indir, a->indirlen);\n+      else\n+\tb_char (\"NO\", a->indir, a->indirlen);\n+    }\n   if (a->infmt != NULL)\n-    if (p != NULL && p->ufmt == 0)\n-      b_char (\"UNFORMATTED\", a->infmt, a->infmtlen);\n-    else\n-      b_char (\"FORMATTED\", a->infmt, a->infmtlen);\n+    {\n+      if (p != NULL && p->ufmt == 0)\n+\tb_char (\"UNFORMATTED\", a->infmt, a->infmtlen);\n+      else\n+\tb_char (\"FORMATTED\", a->infmt, a->infmtlen);\n+    }\n   if (a->inform != NULL)\n-    if (p != NULL && p->ufmt == 0)\n-      b_char (\"NO\", a->inform, a->informlen);\n-    else\n-      b_char (\"YES\", a->inform, a->informlen);\n+    {\n+      if (p != NULL && p->ufmt == 0)\n+\tb_char (\"NO\", a->inform, a->informlen);\n+      else\n+\tb_char (\"YES\", a->inform, a->informlen);\n+    }\n   if (a->inunf)\n-    if (p != NULL && p->ufmt == 0)\n-      b_char (\"YES\", a->inunf, a->inunflen);\n-    else if (p != NULL)\n-      b_char (\"NO\", a->inunf, a->inunflen);\n-    else\n-      b_char (\"UNKNOWN\", a->inunf, a->inunflen);\n+    {\n+      if (p != NULL && p->ufmt == 0)\n+\tb_char (\"YES\", a->inunf, a->inunflen);\n+      else if (p != NULL)\n+\tb_char (\"NO\", a->inunf, a->inunflen);\n+      else\n+\tb_char (\"UNKNOWN\", a->inunf, a->inunflen);\n+    }\n   if (a->inrecl != NULL && p != NULL)\n     *a->inrecl = p->url;\n   if (a->innrec != NULL && p != NULL && p->url > 0)\n     *a->innrec = FTELL (p->ufd) / p->url + 1;\n   if (a->inblank && p != NULL && p->ufmt)\n-    if (p->ublnk)\n-      b_char (\"ZERO\", a->inblank, a->inblanklen);\n-    else\n-      b_char (\"NULL\", a->inblank, a->inblanklen);\n+    {\n+      if (p->ublnk)\n+\tb_char (\"ZERO\", a->inblank, a->inblanklen);\n+      else\n+\tb_char (\"NULL\", a->inblank, a->inblanklen);\n+    }\n   return (0);\n }"}, {"sha": "b19c2d5e1a79d6f9f225ef8bdc857972b2830707", "filename": "libf2c/libI77/lread.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Flread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Flread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flread.c?ref=03489df3db479ad958ae8b5428fdeb9d7de92ffa", "patch": "@@ -304,10 +304,12 @@ l_C (void)\n \t  return 0;\n \t}\n       if (rd_count (ch))\n-\tif (!f__cf || !feof (f__cf))\n-\t  errfl (f__elist->cierr, 112, \"complex format\");\n-\telse\n-\t  err (f__elist->cierr, (EOF), \"lread\");\n+        {\n+\t  if (!f__cf || !feof (f__cf))\n+\t    errfl (f__elist->cierr, 112, \"complex format\");\n+\t  else\n+\t    err (f__elist->cierr, (EOF), \"lread\");\n+\t}\n       if (GETC (ch) != '*')\n \t{\n \t  if (!f__cf || !feof (f__cf))\n@@ -441,10 +443,12 @@ l_L (void)\n     {\n       rd_count (ch);\n       if (GETC (ch) != '*')\n-\tif (!f__cf || !feof (f__cf))\n-\t  errfl (f__elist->cierr, 112, \"no star\");\n-\telse\n-\t  err (f__elist->cierr, (EOF), \"lread\");\n+        {\n+\t  if (!f__cf || !feof (f__cf))\n+\t    errfl (f__elist->cierr, 112, \"no star\");\n+\t  else\n+\t    err (f__elist->cierr, (EOF), \"lread\");\n+\t}\n       GETC (ch);\n     }\n   sawdot = 0;"}, {"sha": "8a2b1630f44e9d79f781f6ced6951a3b4952efd8", "filename": "libf2c/libI77/open.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fopen.c?ref=03489df3db479ad958ae8b5428fdeb9d7de92ffa", "patch": "@@ -267,11 +267,13 @@ f_open (olist * a)\n     opnerr (a->oerr, 108, \"open\");\n #endif\n   if (b->useek)\n-    if (a->orl)\n-      FSEEK (b->ufd, 0, SEEK_SET);\n-    else if ((s = a->oacc) && (*s == 'a' || *s == 'A')\n-\t     && FSEEK (b->ufd, 0, SEEK_END))\n-      opnerr (a->oerr, 129, \"open\");\n+    {\n+      if (a->orl)\n+\tFSEEK (b->ufd, 0, SEEK_SET);\n+      else if ((s = a->oacc) && (*s == 'a' || *s == 'A')\n+\t       && FSEEK (b->ufd, 0, SEEK_END))\n+\topnerr (a->oerr, 129, \"open\");\n+    }\n   return (0);\n }\n "}, {"sha": "9838f215250c4fee0a3725ac4a2c309c612462e6", "filename": "libf2c/libI77/rsne.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Frsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Frsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsne.c?ref=03489df3db479ad958ae8b5428fdeb9d7de92ffa", "patch": "@@ -525,21 +525,23 @@ x_rsne (cilist * a)\n \tmustend:\n \t  GETC (ch);\n \t  if (readall)\n-\t    if (iva >= ivae)\n-\t      readall = 0;\n-\t    else\n-\t      for (;;)\n-\t\t{\n-\t\t  switch (ch)\n-\t\t    {\n-\t\t    case ' ':\n-\t\t    case '\\t':\n-\t\t    case '\\n':\n-\t\t      GETC (ch);\n-\t\t      continue;\n-\t\t    }\n-\t\t  break;\n-\t\t}\n+\t    {\n+\t      if (iva >= ivae)\n+\t\treadall = 0;\n+\t      else\n+\t\tfor (;;)\n+\t\t  {\n+\t\t    switch (ch)\n+\t\t      {\n+\t\t      case ' ':\n+\t\t      case '\\t':\n+\t\t      case '\\n':\n+\t\t\tGETC (ch);\n+\t\t\tcontinue;\n+\t\t      }\n+\t\t    break;\n+\t\t  }\n+\t    }\n \t  if (ch == '/' || ch == '$' || ch == '&')\n \t    {\n \t      f__lquit = 1;"}, {"sha": "4f350887d695317cba7b297a51b3fe8f52355a03", "filename": "libf2c/libI77/wref.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Fwref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03489df3db479ad958ae8b5428fdeb9d7de92ffa/libf2c%2FlibI77%2Fwref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwref.c?ref=03489df3db479ad958ae8b5428fdeb9d7de92ffa", "patch": "@@ -232,14 +232,16 @@ wrt_F (ufloat * p, int w, int d, ftnlen len)\n     }\n \n   if (n = f__scale)\n-    if (n > 0)\n-      do\n-\tx *= 10.;\n-      while (--n > 0);\n-    else\n-      do\n-\tx *= 0.1;\n-      while (++n < 0);\n+    {\n+      if (n > 0)\n+\tdo\n+\t  x *= 10.;\n+\twhile (--n > 0);\n+      else\n+\tdo\n+\t  x *= 0.1;\n+\twhile (++n < 0);\n+    }\n \n #ifdef USE_STRLEN\n   sprintf (b = buf, \"%#.*f\", d, x);"}]}