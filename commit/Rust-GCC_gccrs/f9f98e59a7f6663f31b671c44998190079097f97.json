{"sha": "f9f98e59a7f6663f31b671c44998190079097f97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlmOThlNTlhN2Y2NjYzZjMxYjY3MWM0NDk5ODE5MDA3OTA5N2Y5Nw==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-05-07T07:29:14Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-05-13T13:51:53Z"}, "message": "Fortran  : ICE in gfc_conv_array_constructor_expr PR93497\n\nInvalid expressions, such as those involving array constructors,\nused for the length of character types will cause an ICE.\n\n2020-05-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\ngcc/fortran/\n\n\tPR fortran/93497\n\t* decl.c (char_len_param_value): Check whether character\n\tlength expression is of type EXPR_OP and if so simplify it.\n\t* resolve.c (resolve_charlen): Reject length if it has a\n\trank.\n\n2020-05-13  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/93497\n\t* gfortran.dg/pr88025.f90: Change in wording of error.\n\t* gfortran.dg/pr93497.f90: New test.\n\t* gfortran.dg/pr93714_1.f90: Change in wording of errors.\n\t* gfortran.dg/pr93714_2.f90: Change in wording of errors.", "tree": {"sha": "c67bd2020046c78302df340b66465d15260407c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c67bd2020046c78302df340b66465d15260407c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9f98e59a7f6663f31b671c44998190079097f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f98e59a7f6663f31b671c44998190079097f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f98e59a7f6663f31b671c44998190079097f97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f98e59a7f6663f31b671c44998190079097f97/comments", "author": null, "committer": null, "parents": [{"sha": "6cc6b087c8cdfdf58a4bb166aa53950c4bfdef2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc6b087c8cdfdf58a4bb166aa53950c4bfdef2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc6b087c8cdfdf58a4bb166aa53950c4bfdef2d"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "becfda4c5fa684ec986d3c58d5d3d2f9e63ec3bc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -1,3 +1,11 @@\n+2020-05-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/93497\n+\t* decl.c (char_len_param_value): Check whether character\n+\tlength expression is of type EXPR_OP and if so simplify it.\n+\t* resolve.c (resolve_charlen): Reject length if it has a\n+\trank.\n+\n 2020-05-13  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/94690"}, {"sha": "9cc81361f43633c420f588ed337fa00dd7d51c0b", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -1077,6 +1077,11 @@ char_len_param_value (gfc_expr **expr, bool *deferred)\n   if (!gfc_expr_check_typed (*expr, gfc_current_ns, false))\n     return MATCH_ERROR;\n \n+  /* If gfortran gets an EXPR_OP, try to simplifiy it.  This catches things\n+     like CHARACTER(([1])).   */\n+  if ((*expr)->expr_type == EXPR_OP)\n+    gfc_simplify_expr (*expr, 1);\n+\n   if ((*expr)->expr_type == EXPR_FUNCTION)\n     {\n       if ((*expr)->ts.type == BT_INTEGER"}, {"sha": "f6e10ea379c9d7513bc2b0d6bcaf53ea48075f4d", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -12358,7 +12358,7 @@ resolve_charlen (gfc_charlen *cl)\n \t}\n \n       /* cl->length has been resolved.  It should have an integer type.  */\n-      if (cl->length->ts.type != BT_INTEGER)\n+      if (cl->length->ts.type != BT_INTEGER || cl->length->rank != 0)\n \t{\n \t  gfc_error (\"Scalar INTEGER expression expected at %L\",\n \t\t     &cl->length->where);"}, {"sha": "76b14d3c11b24d0df2294e0e6336ef6bc1e45c6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -1,3 +1,11 @@\n+2020-05-13  Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/93497\n+\t* gfortran.dg/pr88025.f90: Change in wording of error.\n+\t* gfortran.dg/pr93497.f90: New test.\n+\t* gfortran.dg/pr93714_1.f90: Change in wording of errors.\n+\t* gfortran.dg/pr93714_2.f90: Change in wording of errors.\n+\n 2020-05-13  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/70642"}, {"sha": "c51390f143479141f23393816b600e256f39be0f", "filename": "gcc/testsuite/gfortran.dg/pr88025.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88025.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88025.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88025.f90?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -2,6 +2,6 @@\n ! PR fortran/88025\n program p\n    type t\n-      character(('')) :: c = 'c'    ! { dg-error \"must be of INTEGER type\" }\n+      character(('')) :: c = 'c'  ! { dg-error \"Scalar INTEGER expression expected\" }\n    end type\n end"}, {"sha": "612b41cd8ca0007d4d39bfb3e972f0d99dc4adf2", "filename": "gcc/testsuite/gfortran.dg/pr93497.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93497.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93497.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93497.f90?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile } \n+\n+program p\n+   print *, [character(((/1/))) :: 'a','b'] ! { dg-error \"Scalar INTEGER expression expected\" }\n+   print *, [character(([1])) :: 'a','b']   ! { dg-error \"Scalar INTEGER expression expected\" }\n+   print *, [character(1+[1]) :: 'a','b']   ! { dg-error \"Scalar INTEGER expression expected\" }\n+end\n+"}, {"sha": "e55812c76de002b3d1cd73ec0e3951d3291306d1", "filename": "gcc/testsuite/gfortran.dg/pr93714_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93714_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93714_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93714_1.f90?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -7,5 +7,5 @@ program test\n    character, pointer :: b => a\n end program\n \n-! { dg-error \"must be of INTEGER type\" \" \" { target *-*-* } 6 }\n-! { dg-error \"does not have the TARGET attribute\" \" \" { target *-*-* } 7 }\n+! { dg-error \"Scalar INTEGER expression expected\" \" \" { target *-*-* } 6 }\n+! { dg-error \"Different types in pointer assignment\" \" \" { target *-*-* } 7 }"}, {"sha": "23d53508f1fce0f4ceeb5646a14db983ad09a301", "filename": "gcc/testsuite/gfortran.dg/pr93714_2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93714_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f98e59a7f6663f31b671c44998190079097f97/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93714_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93714_2.f90?ref=f9f98e59a7f6663f31b671c44998190079097f97", "patch": "@@ -7,5 +7,5 @@ program test\n    character(:), pointer :: b => a\n end program\n \n-! { dg-error \"must be of INTEGER type\" \" \" { target *-*-* } 6 }\n-! { dg-error \"does not have the TARGET attribute\" \" \" { target *-*-* } 7 }\n+! { dg-error \"Scalar INTEGER expression expected\" \" \" { target *-*-* } 6 }\n+! { dg-error \"Different types in pointer assignment\" \" \" { target *-*-* } 7 }"}]}