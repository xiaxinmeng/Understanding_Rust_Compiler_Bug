{"sha": "71d8eff176ca829b984228e522238937cb267c05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFkOGVmZjE3NmNhODI5Yjk4NDIyOGU1MjIyMzg5MzdjYjI2N2MwNQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2017-11-17T04:52:20Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2017-11-17T04:52:20Z"}, "message": "[NDS32] Reserve more register numbers for new registers in the future.\n\ngcc/\n\t* config/nds32/nds32.h (FIRST_PSEUDO_REGISTER): Modify.\n\t(FIXED_REGISTERS): Reserve more register numbers.\n\t(CALL_USED_REGISTERS): Likewise.\n\t(REG_ALLOC_ORDER): Likewise.\n\t(REG_CLASS_CONTENTS): Likewise.\n\t(REGISTER_NAMES): Likewise.\n\nCo-Authored-By: Monk Chiang <sh.chiang04@gmail.com>\n\nFrom-SVN: r254854", "tree": {"sha": "4c35d098ab457ea11b2510505cf6bf32e2c3c1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c35d098ab457ea11b2510505cf6bf32e2c3c1a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71d8eff176ca829b984228e522238937cb267c05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d8eff176ca829b984228e522238937cb267c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d8eff176ca829b984228e522238937cb267c05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d8eff176ca829b984228e522238937cb267c05/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d7f09de5a5a4e74fdc25d8f7e2756410383d149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7f09de5a5a4e74fdc25d8f7e2756410383d149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7f09de5a5a4e74fdc25d8f7e2756410383d149"}], "stats": {"total": 167, "additions": 114, "deletions": 53}, "files": [{"sha": "115a6628d1df26dc11ceb5c8988b2a300d166a86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d8eff176ca829b984228e522238937cb267c05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d8eff176ca829b984228e522238937cb267c05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71d8eff176ca829b984228e522238937cb267c05", "patch": "@@ -1,3 +1,13 @@\n+2017-11-17  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\t    Monk Chiang  <sh.chiang04@gmail.com>\n+\n+\t* config/nds32/nds32.h (FIRST_PSEUDO_REGISTER): Modify.\n+\t(FIXED_REGISTERS): Reserve more register numbers.\n+\t(CALL_USED_REGISTERS): Likewise.\n+\t(REG_ALLOC_ORDER): Likewise.\n+\t(REG_CLASS_CONTENTS): Likewise.\n+\t(REGISTER_NAMES): Likewise.\n+\n 2017-11-17  Chung-Ju Wu  <jasonwucj@gmail.com>\n \t    Kito Cheng  <kito.cheng@gmail.com>\n "}, {"sha": "9bb31c897858b1147c2f2416b4c1478896d05e2e", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 104, "deletions": 53, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d8eff176ca829b984228e522238937cb267c05/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d8eff176ca829b984228e522238937cb267c05/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=71d8eff176ca829b984228e522238937cb267c05", "patch": "@@ -530,7 +530,7 @@ enum nds32_builtins\n    from 0 to just below FIRST_PSEUDO_REGISTER.\n    All registers that the compiler knows about must be given numbers,\n    even those that are not normally considered general registers.  */\n-#define FIRST_PSEUDO_REGISTER 34\n+#define FIRST_PSEUDO_REGISTER 101\n \n /* An initializer that says which registers are used for fixed\n    purposes all throughout the compiled code and are therefore\n@@ -546,19 +546,33 @@ enum nds32_builtins\n \n    reserved for assembler : $r15\n    reserved for other use : $r24, $r25, $r26, $r27 */\n-#define FIXED_REGISTERS                 \\\n-{ /* r0  r1  r2  r3  r4  r5  r6  r7  */ \\\n-      0,  0,  0,  0,  0,  0,  0,  0,    \\\n-  /* r8  r9  r10 r11 r12 r13 r14 r15 */ \\\n-      0,  0,  0,  0,  0,  0,  0,  1,    \\\n-  /* r16 r17 r18 r19 r20 r21 r22 r23 */ \\\n-      0,  0,  0,  0,  0,  0,  0,  0,    \\\n-  /* r24 r25 r26 r27 r28 r29 r30 r31 */ \\\n-      1,  1,  1,  1,  0,  1,  0,  1,    \\\n-  /* ARG_POINTER:32 */                  \\\n-      1,                                \\\n-  /* FRAME_POINTER:33 */                \\\n-      1                                 \\\n+#define FIXED_REGISTERS \\\n+{ /* r0   r1   r2   r3   r4   r5   r6   r7   */ \\\n+      0,   0,   0,   0,   0,   0,   0,   0,     \\\n+  /* r8   r9   r10  r11  r12  r13  r14  r15  */ \\\n+      0,   0,   0,   0,   0,   0,   0,   1,     \\\n+  /* r16  r17  r18  r19  r20  r21  r22  r23  */ \\\n+      0,   0,   0,   0,   0,   0,   0,   0,     \\\n+  /* r24  r25  r26  r27  r28  r29  r30  r31  */ \\\n+      1,   1,   1,   1,   0,   1,   0,   1,     \\\n+  /* AP   FP    Reserved.................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1                     \\\n }\n \n /* Identifies the registers that are not available for\n@@ -567,33 +581,53 @@ enum nds32_builtins\n \n    0 : callee-save registers\n    1 : caller-save registers */\n-#define CALL_USED_REGISTERS             \\\n-{ /* r0  r1  r2  r3  r4  r5  r6  r7  */ \\\n-      1,  1,  1,  1,  1,  1,  0,  0,    \\\n-  /* r8  r9  r10 r11 r12 r13 r14 r15 */ \\\n-      0,  0,  0,  0,  0,  0,  0,  1,    \\\n-  /* r16 r17 r18 r19 r20 r21 r22 r23 */ \\\n-      1,  1,  1,  1,  1,  1,  1,  1,    \\\n-  /* r24 r25 r26 r27 r28 r29 r30 r31 */ \\\n-      1,  1,  1,  1,  0,  1,  0,  1,    \\\n-  /* ARG_POINTER:32 */                  \\\n-      1,                                \\\n-  /* FRAME_POINTER:33 */                \\\n-      1                                 \\\n+#define CALL_USED_REGISTERS \\\n+{ /* r0   r1   r2   r3   r4   r5   r6   r7   */ \\\n+      1,   1,   1,   1,   1,   1,   0,   0,     \\\n+  /* r8   r9   r10  r11  r12  r13  r14  r15  */ \\\n+      0,   0,   0,   0,   0,   0,   0,   1,     \\\n+  /* r16  r17  r18  r19  r20  r21  r22  r23  */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* r24  r25  r26  r27  r28  r29  r30  r31  */ \\\n+      1,   1,   1,   1,   0,   1,   0,   1,     \\\n+  /* AP   FP    Reserved.................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1,   1,   1,   1,     \\\n+  /* Reserved............................... */ \\\n+      1,   1,   1,   1,   1                     \\\n }\n \n /* In nds32 target, we have three levels of registers:\n      LOW_COST_REGS    : $r0 ~ $r7\n      MIDDLE_COST_REGS : $r8 ~ $r11, $r16 ~ $r19\n      HIGH_COST_REGS   : $r12 ~ $r14, $r20 ~ $r31 */\n-#define REG_ALLOC_ORDER           \\\n-{                                 \\\n-   0,  1,  2,  3,  4,  5,  6,  7, \\\n-   8,  9, 10, 11, 16, 17, 18, 19, \\\n-  12, 13, 14, 15, 20, 21, 22, 23, \\\n-  24, 25, 26, 27, 28, 29, 30, 31, \\\n-  32,                             \\\n-  33                              \\\n+#define REG_ALLOC_ORDER \\\n+{   0,   1,   2,   3,   4,   5,   6,   7, \\\n+   16,  17,  18,  19,   9,  10,  11,  12, \\\n+   13,  14,  8,   15,  20,  21,  22,  23, \\\n+   24,  25,  26,  27,  28,  29,  30,  31, \\\n+   32,  33,  34,  35,  36,  37,  38,  39, \\\n+   40,  41,  42,  43,  44,  45,  46,  47, \\\n+   48,  49,  50,  51,  52,  53,  54,  55, \\\n+   56,  57,  58,  59,  60,  61,  62,  63, \\\n+   64,  65,  66,  67,  68,  69,  70,  71, \\\n+   72,  73,  74,  75,  76,  77,  78,  79, \\\n+   80,  81,  82,  83,  84,  85,  86,  87, \\\n+   88,  89,  90,  91,  92,  93,  94,  95, \\\n+   96,  97,  98,  99, 100,                \\\n }\n \n /* Tell IRA to use the order we define rather than messing it up with its\n@@ -646,19 +680,30 @@ enum reg_class\n }\n \n #define REG_CLASS_CONTENTS \\\n-{                                                            \\\n-  {0x00000000, 0x00000000}, /* NO_REGS                    */ \\\n-  {0x00000020, 0x00000000}, /* R5_REG            : 5      */ \\\n-  {0x00000100, 0x00000000}, /* R8_REG            : 8      */ \\\n-  {0x00008000, 0x00000000}, /* R15_TA_REG        : 15     */ \\\n-  {0x80000000, 0x00000000}, /* STACK_REG         : 31     */ \\\n-  {0x10000000, 0x00000000}, /* FRAME_POINTER_REG : 28     */ \\\n-  {0x000000ff, 0x00000000}, /* LOW_REGS    : 0-7          */ \\\n-  {0x000f0fff, 0x00000000}, /* MIDDLE_REGS : 0-11, 16-19  */ \\\n-  {0xfff07000, 0x00000000}, /* HIGH_REGS   : 12-14, 20-31 */ \\\n-  {0xffffffff, 0x00000000}, /* GENERAL_REGS: 0-31         */ \\\n-  {0x00000000, 0x00000003}, /* FRAME_REGS  : 32, 33       */ \\\n-  {0xffffffff, 0x00000003}  /* ALL_REGS    : 0-31, 32, 33 */ \\\n+{ /* NO_REGS                                    */  \\\n+  {0x00000000, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* R5_REG              : 5                    */  \\\n+  {0x00000020, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* R8_REG              : 8                    */  \\\n+  {0x00000100, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* R15_TA_REG          : 15                   */  \\\n+  {0x00008000, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* STACK_REG           : 31                   */  \\\n+  {0x80000000, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* FRAME_POINTER_REG   : 28                   */  \\\n+  {0x10000000, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* LOW_REGS            : 0-7                  */  \\\n+  {0x000000ff, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* MIDDLE_REGS         : 0-11, 16-19          */  \\\n+  {0x000f0fff, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* HIGH_REGS           : 12-14, 20-31         */  \\\n+  {0xfff07000, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* GENERAL_REGS        : 0-31                 */  \\\n+  {0xffffffff, 0x00000000, 0x00000000, 0x00000000}, \\\n+  /* FRAME_REGS          : 32, 33               */  \\\n+  {0x00000000, 0x00000003, 0x00000000, 0x00000000}, \\\n+  /* ALL_REGS            : 0-100                */  \\\n+  {0xffffffff, 0xffffffff, 0xffffffff, 0x0000001f}  \\\n }\n \n #define REGNO_REG_CLASS(regno) nds32_regno_reg_class (regno)\n@@ -869,14 +914,20 @@ enum reg_class\n \n #define LOCAL_LABEL_PREFIX \".\"\n \n-#define REGISTER_NAMES                                            \\\n-{                                                                 \\\n-  \"$r0\",  \"$r1\",  \"$r2\",  \"$r3\",  \"$r4\",  \"$r5\",  \"$r6\",  \"$r7\",  \\\n+#define REGISTER_NAMES \\\n+{ \"$r0\",  \"$r1\",  \"$r2\",  \"$r3\",  \"$r4\",  \"$r5\",  \"$r6\",  \"$r7\",  \\\n   \"$r8\",  \"$r9\",  \"$r10\", \"$r11\", \"$r12\", \"$r13\", \"$r14\", \"$ta\",  \\\n   \"$r16\", \"$r17\", \"$r18\", \"$r19\", \"$r20\", \"$r21\", \"$r22\", \"$r23\", \\\n   \"$r24\", \"$r25\", \"$r26\", \"$r27\", \"$fp\",  \"$gp\",  \"$lp\",  \"$sp\",  \\\n-  \"$AP\",                                                          \\\n-  \"$SFP\"                                                          \\\n+  \"$AP\",  \"$SFP\", \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\",   \\\n+  \"NA\",   \"NA\",   \"NA\",   \"NA\",   \"NA\"                            \\\n }\n \n /* Output normal jump table entry.  */"}]}