{"sha": "979b1d183472367e813ccae5f9ca7c8463f6cb26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5YjFkMTgzNDcyMzY3ZTgxM2NjYWU1ZjljYTdjODQ2M2Y2Y2IyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-07-24T16:23:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-07-24T16:23:14Z"}, "message": "stop recommending -fexternal-templates\n\nFrom-SVN: r55713", "tree": {"sha": "07bf4d009a8b0f196def3d72b1f2c8b2a07818a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07bf4d009a8b0f196def3d72b1f2c8b2a07818a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/979b1d183472367e813ccae5f9ca7c8463f6cb26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979b1d183472367e813ccae5f9ca7c8463f6cb26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/979b1d183472367e813ccae5f9ca7c8463f6cb26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979b1d183472367e813ccae5f9ca7c8463f6cb26/comments", "author": null, "committer": null, "parents": [{"sha": "7e51e626abae2f44754bf4a4f1a9bec9cc5fe8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e51e626abae2f44754bf4a4f1a9bec9cc5fe8d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e51e626abae2f44754bf4a4f1a9bec9cc5fe8d1"}], "stats": {"total": 35, "additions": 0, "deletions": 35}, "files": [{"sha": "8fa3f995f93b71f8d7e52a47dd4c1c0d02feca14", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979b1d183472367e813ccae5f9ca7c8463f6cb26/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979b1d183472367e813ccae5f9ca7c8463f6cb26/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=979b1d183472367e813ccae5f9ca7c8463f6cb26", "patch": "@@ -7164,41 +7164,6 @@ each translation unit will contain instances of each of the templates it\n uses.  In a large program, this can lead to an unacceptable amount of code\n duplication.\n \n-@item\n-@opindex fexternal-templates\n-Add @samp{#pragma interface} to all files containing template\n-definitions.  For each of these files, add @samp{#pragma implementation\n-\"@var{filename}\"} to the top of some @samp{.C} file which\n-@samp{#include}s it.  Then compile everything with\n-@option{-fexternal-templates}.  The templates will then only be expanded\n-in the translation unit which implements them (i.e.@: has a @samp{#pragma\n-implementation} line for the file where they live); all other files will\n-use external references.  If you're lucky, everything should work\n-properly.  If you get undefined symbol errors, you need to make sure\n-that each template instance which is used in the program is used in the\n-file which implements that template.  If you don't have any use for a\n-particular instance in that file, you can just instantiate it\n-explicitly, using the syntax from the latest C++ working paper:\n-\n-@example\n-template class A<int>;\n-template ostream& operator << (ostream&, const A<int>&);\n-@end example\n-\n-This strategy will work with code written for either model.  If you are\n-using code written for the Cfront model, the file containing a class\n-template and the file containing its member templates should be\n-implemented in the same translation unit.\n-\n-@item\n-@opindex falt-external-templates\n-A slight variation on this approach is to use the flag\n-@option{-falt-external-templates} instead.  This flag causes template\n-instances to be emitted in the translation unit that implements the\n-header where they are first instantiated, rather than the one which\n-implements the file where the templates are defined.  This header must\n-be the same in all translation units, or things are likely to break.\n-\n @xref{C++ Interface,,Declarations and Definitions in One Header}, for\n more discussion of these pragmas.\n @end enumerate"}]}