{"sha": "0f8056066331197225c8790f7223050382ff8419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4MDU2MDY2MzMxMTk3MjI1Yzg3OTBmNzIyMzA1MDM4MmZmODQxOQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-09-19T15:33:16Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "2000-09-19T15:33:16Z"}, "message": "Some sh.md fixes (fallout from earlier changes)\n\nFrom-SVN: r36535", "tree": {"sha": "bff688c288d9277af919f019a5eb7e62581daf65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bff688c288d9277af919f019a5eb7e62581daf65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f8056066331197225c8790f7223050382ff8419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8056066331197225c8790f7223050382ff8419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8056066331197225c8790f7223050382ff8419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8056066331197225c8790f7223050382ff8419/comments", "author": null, "committer": null, "parents": [{"sha": "0d97fd9ebe4aa55afbec7e3b7899b54c00354ba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d97fd9ebe4aa55afbec7e3b7899b54c00354ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d97fd9ebe4aa55afbec7e3b7899b54c00354ba6"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "c0a425351c1c5665dbf379a1e9de4f5095dda05c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8056066331197225c8790f7223050382ff8419/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8056066331197225c8790f7223050382ff8419/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f8056066331197225c8790f7223050382ff8419", "patch": "@@ -1,3 +1,14 @@\n+2000-09-19  Bernd Schmidt  <bernds@redhat.co.uk>\n+\n+\tFix misapplied earlier patch:\n+\t* config/sh/sh.md (floatsisf_ie): Reenable.  Remove explicit reference\n+\tto fpul.\n+\t(floatsisf2): Generate floatsisf_ie by default.\n+\t(floatsisf_i4): Conditional on TARGET_SH4.\n+\n+\t(floatsisf2, floatsidf2, extendsfdf2): Also use reg_no_subreg_operand\n+\tpredicate for the expanders.\n+\n 2000-09-19  Richard Henderson  <rth@cygnus.com>\n \n \t* config/i386/i386.h (CPP_CPU_SPEC): Define i586 and i686 symbols"}, {"sha": "70510bd3f5042bea9e73d5d7a7b1147887e41ab8", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8056066331197225c8790f7223050382ff8419/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8056066331197225c8790f7223050382ff8419/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=0f8056066331197225c8790f7223050382ff8419", "patch": "@@ -4219,9 +4219,8 @@ else\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"floatsisf2\"\n-  [(parallel [(set (match_operand:SF 0 \"arith_reg_operand\" \"\")\n-\t\t   (float:SF (match_operand:SI 1 \"arith_reg_operand\" \"\")))\n-\t      (use (match_dup 2))])]\n+  [(set (match_operand:SF 0 \"arith_reg_operand\" \"\")\n+\t(float:SF (match_operand:SI 1 \"reg_no_subreg_operand\" \"\")))]\n   \"TARGET_SH3E\"\n   \"\n {\n@@ -4230,25 +4229,23 @@ else\n       emit_sf_insn (gen_floatsisf2_i4 (operands[0], operands[1], get_fpscr_rtx ()));\n       DONE;\n     }\n-  operands[2] = get_fpscr_rtx ();\n }\")\n \n (define_insn \"floatsisf2_i4\"\n   [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"reg_no_subreg_operand\" \"y\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n-  \"TARGET_SH3E\"\n+  \"TARGET_SH4\"\n   \"float\t%1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n-;; ??? This pattern is used nowhere.  floatsisf always expands to floatsisf_i4.\n-;; (define_insn \"*floatsisf2_ie\"\n-;;  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-;;\t(float:SF (reg:SI 22)))]\n-;;  \"TARGET_SH3E && ! TARGET_SH4\"\n-;;  \"float\tfpul,%0\"\n-;;  [(set_attr \"type\" \"fp\")])\n+(define_insn \"*floatsisf2_ie\"\n+  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n+\t(float:SF (match_operand:SI 1 \"reg_no_subreg_operand\" \"y\")))]\n+  \"TARGET_SH3E && ! TARGET_SH4\"\n+  \"float\t%1,%0\"\n+  [(set_attr \"type\" \"fp\")])\n \n (define_expand \"fix_truncsfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n@@ -4480,7 +4477,7 @@ else\n \n (define_expand \"floatsidf2\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SI 1 \"arith_reg_operand\" \"\")]\n+   (match_operand:SI 1 \"reg_no_subreg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"\n {\n@@ -4624,7 +4621,7 @@ else\n \n (define_expand \"extendsfdf2\"\n   [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 1 \"arith_reg_operand\" \"\")]\n+   (match_operand:SF 1 \"reg_no_subreg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"\n {"}]}