{"sha": "80f798b41ed01f18930de85751a4653359387399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBmNzk4YjQxZWQwMWYxODkzMGRlODU3NTFhNDY1MzM1OTM4NzM5OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-06-09T16:18:51Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-06-09T16:18:51Z"}, "message": "re PR classpath/23863 (mprec buffer overwrite bug)\n\n\tPR classpath/23863:\n\t* native/fdlibm/dtoa.c (_dtoa): Free contents of _Jv_reent when\n\tfinished.\n\t* native/fdlibm/mprec.c: New version from newlib.  Commented out\n\tsome includes.  Added <assert.h>.\n\t(_reent, _Bigint): New defines.\n\t(_REENT_CHECK_MP, _REENT_MP_FREELIST, _REENT_MP_P5S): Likewise.\n\t(__ULong, __Long): New types.\n\t(_calloc_r): New function.\n\t(Balloc): Dynamically add new _freelist entries as needed.\n\t* native/fdlibm/mprec.h (struct _Jv_Bigint): Don't use\n\tMAX_BIGNUMS to size _x[].\n\t(struct _Jv_reent): _freelist now a _Jv_Bigint**.  Removed\n\t_allocation_map, num.  Added _max_k.\n\nFrom-SVN: r114511", "tree": {"sha": "f374e71fb1e5c8b4fa2d9292b8b24097a564e434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f374e71fb1e5c8b4fa2d9292b8b24097a564e434"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80f798b41ed01f18930de85751a4653359387399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f798b41ed01f18930de85751a4653359387399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f798b41ed01f18930de85751a4653359387399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f798b41ed01f18930de85751a4653359387399/comments", "author": null, "committer": null, "parents": [{"sha": "02440ca432f1aa4de7aeda563d2493a20148554b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02440ca432f1aa4de7aeda563d2493a20148554b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02440ca432f1aa4de7aeda563d2493a20148554b"}], "stats": {"total": 317, "additions": 203, "deletions": 114}, "files": [{"sha": "6f0e52191d223e0308edb9712ec26e30235d994a", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=80f798b41ed01f18930de85751a4653359387399", "patch": "@@ -1,3 +1,20 @@\n+2006-06-09  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR classpath/23863:\n+\t* native/fdlibm/dtoa.c (_dtoa): Free contents of _Jv_reent when\n+\tfinished.\n+\t* native/fdlibm/mprec.c: New version from newlib.  Commented out\n+\tsome includes.  Added <assert.h>.\n+\t(_reent, _Bigint): New defines.\n+\t(_REENT_CHECK_MP, _REENT_MP_FREELIST, _REENT_MP_P5S): Likewise.\n+\t(__ULong, __Long): New types.\n+\t(_calloc_r): New function.\n+\t(Balloc): Dynamically add new _freelist entries as needed.\n+\t* native/fdlibm/mprec.h (struct _Jv_Bigint): Don't use\n+\tMAX_BIGNUMS to size _x[].\n+\t(struct _Jv_reent): _freelist now a _Jv_Bigint**.  Removed\n+\t_allocation_map, num.  Added _max_k.\n+\n 2006-05-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* native/jni/gtk-peer/Makefile.am (gcc_version): New variable."}, {"sha": "5fb6aae2c21c7e1de0f28034837d830a40a3a3e5", "filename": "libjava/classpath/native/fdlibm/dtoa.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fdtoa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fdtoa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fdtoa.c?ref=80f798b41ed01f18930de85751a4653359387399", "patch": "@@ -2,7 +2,7 @@\n  *\n  * The author of this software is David M. Gay.\n  *\n- * Copyright (c) 1991 by AT&T.\n+ * Copyright (c) 1991, 2006 by AT&T.\n  *\n  * Permission to use, copy, modify, and distribute this software for any\n  * purpose without fee is hereby granted, provided that this entire notice\n@@ -897,10 +897,23 @@ _DEFUN (_dtoa,\n {\n   struct _Jv_reent reent;\n   char *p;\n+  int i;\n+\n   memset (&reent, 0, sizeof reent);\n \n   p = _dtoa_r (&reent, _d, mode, ndigits, decpt, sign, rve, float_type);\n   strcpy (buf, p);\n \n-  return;\n+  for (i = 0; i < reent._result_k; ++i)\n+    {\n+      struct _Jv_Bigint *l = reent._freelist[i];\n+      while (l)\n+\t{\n+\t  struct _Jv_Bigint *next = l->_next;\n+\t  free (l);\n+\t  l = next;\n+\t}\n+    }\n+  if (reent._freelist)\n+    free (reent._freelist);\n }"}, {"sha": "e53722f7b951b0d215de5cadc25715b8c6a97b82", "filename": "libjava/classpath/native/fdlibm/mprec.c", "status": "modified", "additions": 168, "deletions": 107, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fmprec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fmprec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fmprec.c?ref=80f798b41ed01f18930de85751a4653359387399", "patch": "@@ -80,72 +80,112 @@\n  *\tdown depends on the machine and the number being converted.\n  */\n \n+/*#include <_ansi.h>*/\n #include <assert.h>\n #include <stdlib.h>\n #include <string.h>\n+/* #include <reent.h> */\n #include \"mprec.h\"\n \n /* reent.c knows this value */\n-#define _Kmax 15\n-#include <stdio.h>\n+/* #define _Kmax 15 */\n \n-_Jv_Bigint *\n-_DEFUN (Balloc, (ptr, k), struct _Jv_reent *ptr _AND int k)\n-{\n-  _Jv_Bigint *rv = NULL;\n+#define _reent _Jv_reent\n+#define _Bigint _Jv_Bigint\n \n-  int i = 0;\n-  int j = 1;\n+#define _REENT_CHECK_MP(x)\n+#define _REENT_MP_FREELIST(x) ((x)->_freelist)\n+#define _REENT_MP_P5S(x) ((x)->_p5s)\n \n-  /* FIXME - assert disabled because of PR classpath/23863\n-   * assert ((1 << k) < MAX_BIGNUM_WDS);\n-   */\n+typedef unsigned long __ULong;\n+typedef long __Long;\n \n-  while ((ptr->_allocation_map & j) && i < MAX_BIGNUMS)\n-    i++, j <<= 1;\n+static void *\n+_calloc_r (void *ignore, size_t x1, size_t x2)\n+{\n+  char *result = (char *) malloc (x1 * x2);\n+  memset (result, 0, x1 * x2);\n+  return result;\n+}\n \n-  assert (i < MAX_BIGNUMS);\n+_Bigint *\n+_DEFUN (Balloc, (ptr, k), struct _reent *ptr _AND int k)\n+{\n+  int x;\n+  _Bigint *rv ;\n+  int new_k = k + 1;\n+\n+  _REENT_CHECK_MP(ptr);\n+  if (_REENT_MP_FREELIST(ptr) == NULL)\n+    {\n+      /* Allocate a list of pointers to the mprec objects */\n+      _REENT_MP_FREELIST(ptr) = (struct _Bigint **) _calloc_r (ptr, \n+\t\t\t\t\t\t      sizeof (struct _Bigint *),\n+\t\t\t\t\t\t\t       new_k);\n+      if (_REENT_MP_FREELIST(ptr) == NULL)\n+\t{\n+\t  return NULL;\n+\t}\n+      ptr->_max_k = new_k;\n+    }\n+  else if (new_k > ptr->_max_k)\n+    {\n+      struct _Bigint **new_list\n+\t= (struct _Bigint **) realloc (ptr->_freelist,\n+\t\t\t\t       new_k * sizeof (struct _Bigint *));\n+      memset (&new_list[ptr->_max_k], 0,\n+\t      (new_k - ptr->_max_k) * sizeof (struct _Bigint *));\n+      ptr->_freelist = new_list;\n+      ptr->_max_k = new_k;\n \n-  if (i >= MAX_BIGNUMS) \n-    return NULL;\n+    }\n \n-  ptr->_allocation_map |= j;\n-  rv = &ptr->_freelist[i];\n-      \n-  rv->_k = k;\n-  rv->_maxwds = 32;\n+  assert (k <= ptr->_max_k);\n \n+  if ((rv = _REENT_MP_FREELIST(ptr)[k]) != 0)\n+    {\n+      _REENT_MP_FREELIST(ptr)[k] = rv->_next;\n+    }\n+  else\n+    {\n+      x = 1 << k;\n+      /* Allocate an mprec Bigint and stick in in the freelist */\n+      rv = (_Bigint *) _calloc_r (ptr,\n+\t\t\t\t  1,\n+\t\t\t\t  sizeof (_Bigint) +\n+\t\t\t\t  (x-1) * sizeof(rv->_x));\n+      if (rv == NULL) return NULL;\n+      rv->_k = k;\n+      rv->_maxwds = x;\n+    }\n+  rv->_sign = rv->_wds = 0;\n   return rv;\n }\n \n-\n void\n-_DEFUN (Bfree, (ptr, v), struct _Jv_reent *ptr _AND _Jv_Bigint * v)\n+_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)\n {\n-  long i;\n-\n-  i = v - ptr->_freelist;\n-\n-  assert (i >= 0 && i < MAX_BIGNUMS);\n-\n-  if (i >= 0 && i < MAX_BIGNUMS)\n-    ptr->_allocation_map &= ~ (1 << i);\n+  _REENT_CHECK_MP(ptr);\n+  if (v)\n+    {\n+      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];\n+      _REENT_MP_FREELIST(ptr)[v->_k] = v;\n+    }\n }\n \n-\n-_Jv_Bigint *\n+_Bigint *\n _DEFUN (multadd, (ptr, b, m, a),\n-\tstruct _Jv_reent *ptr _AND\n-\t_Jv_Bigint * b _AND\n+\tstruct _reent *ptr _AND\n+\t_Bigint * b _AND\n \tint m _AND\n \tint a)\n {\n   int i, wds;\n-  unsigned long *x, y;\n+  __ULong *x, y;\n #ifdef Pack_32\n-  unsigned long xi, z;\n+  __ULong xi, z;\n #endif\n-  _Jv_Bigint *b1;\n+  _Bigint *b1;\n \n   wds = b->_wds;\n   x = b->_x;\n@@ -180,17 +220,17 @@ _DEFUN (multadd, (ptr, b, m, a),\n   return b;\n }\n \n-_Jv_Bigint *\n+_Bigint *\n _DEFUN (s2b, (ptr, s, nd0, nd, y9),\n-\tstruct _Jv_reent * ptr _AND\n+\tstruct _reent * ptr _AND\n \t_CONST char *s _AND\n \tint nd0 _AND\n \tint nd _AND\n-\tunsigned long y9)\n+\t__ULong y9)\n {\n-  _Jv_Bigint *b;\n+  _Bigint *b;\n   int i, k;\n-  long x, y;\n+  __Long x, y;\n \n   x = (nd + 8) / 9;\n   for (k = 0, y = 1; x > y; y <<= 1, k++);\n@@ -222,7 +262,7 @@ _DEFUN (s2b, (ptr, s, nd0, nd, y9),\n \n int\n _DEFUN (hi0bits,\n-\t(x), register unsigned long x)\n+\t(x), register __ULong x)\n {\n   register int k = 0;\n \n@@ -256,10 +296,10 @@ _DEFUN (hi0bits,\n }\n \n int\n-_DEFUN (lo0bits, (y), unsigned long *y)\n+_DEFUN (lo0bits, (y), __ULong *y)\n {\n   register int k;\n-  register unsigned long x = *y;\n+  register __ULong x = *y;\n \n   if (x & 7)\n     {\n@@ -298,33 +338,33 @@ _DEFUN (lo0bits, (y), unsigned long *y)\n     {\n       k++;\n       x >>= 1;\n-      if (!(x & 1))\n+      if (!x & 1)\n \treturn 32;\n     }\n   *y = x;\n   return k;\n }\n \n-_Jv_Bigint *\n-_DEFUN (i2b, (ptr, i), struct _Jv_reent * ptr _AND int i)\n+_Bigint *\n+_DEFUN (i2b, (ptr, i), struct _reent * ptr _AND int i)\n {\n-  _Jv_Bigint *b;\n+  _Bigint *b;\n \n   b = Balloc (ptr, 1);\n   b->_x[0] = i;\n   b->_wds = 1;\n   return b;\n }\n \n-_Jv_Bigint *\n-_DEFUN (mult, (ptr, a, b), struct _Jv_reent * ptr _AND _Jv_Bigint * a _AND _Jv_Bigint * b)\n+_Bigint *\n+_DEFUN (mult, (ptr, a, b), struct _reent * ptr _AND _Bigint * a _AND _Bigint * b)\n {\n-  _Jv_Bigint *c;\n+  _Bigint *c;\n   int k, wa, wb, wc;\n-  unsigned long carry, y, z;\n-  unsigned long *x, *xa, *xae, *xb, *xbe, *xc, *xc0;\n+  __ULong carry, y, z;\n+  __ULong *x, *xa, *xae, *xb, *xbe, *xc, *xc0;\n #ifdef Pack_32\n-  unsigned long z2;\n+  __ULong z2;\n #endif\n \n   if (a->_wds < b->_wds)\n@@ -350,7 +390,7 @@ _DEFUN (mult, (ptr, a, b), struct _Jv_reent * ptr _AND _Jv_Bigint * a _AND _Jv_B\n #ifdef Pack_32\n   for (; xb < xbe; xb++, xc0++)\n     {\n-      if ((y = *xb & 0xffff))\n+      if ((y = *xb & 0xffff) != 0)\n \t{\n \t  x = xa;\n \t  xc = xc0;\n@@ -366,7 +406,7 @@ _DEFUN (mult, (ptr, a, b), struct _Jv_reent * ptr _AND _Jv_Bigint * a _AND _Jv_B\n \t  while (x < xae);\n \t  *xc = carry;\n \t}\n-      if ((y = *xb >> 16))\n+      if ((y = *xb >> 16) != 0)\n \t{\n \t  x = xa;\n \t  xc = xc0;\n@@ -387,7 +427,7 @@ _DEFUN (mult, (ptr, a, b), struct _Jv_reent * ptr _AND _Jv_Bigint * a _AND _Jv_B\n #else\n   for (; xb < xbe; xc0++)\n     {\n-      if ((y = *xb++))\n+      if (y = *xb++)\n \t{\n \t  x = xa;\n \t  xc = xc0;\n@@ -408,23 +448,24 @@ _DEFUN (mult, (ptr, a, b), struct _Jv_reent * ptr _AND _Jv_Bigint * a _AND _Jv_B\n   return c;\n }\n \n-_Jv_Bigint *\n+_Bigint *\n _DEFUN (pow5mult,\n-\t(ptr, b, k), struct _Jv_reent * ptr _AND _Jv_Bigint * b _AND int k)\n+\t(ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)\n {\n-  _Jv_Bigint *b1, *p5, *p51;\n+  _Bigint *b1, *p5, *p51;\n   int i;\n   static _CONST int p05[3] = {5, 25, 125};\n \n-  if ((i = k & 3))\n+  if ((i = k & 3) != 0)\n     b = multadd (ptr, b, p05[i - 1], 0);\n \n   if (!(k >>= 2))\n     return b;\n-  if (!(p5 = ptr->_p5s))\n+  _REENT_CHECK_MP(ptr);\n+  if (!(p5 = _REENT_MP_P5S(ptr)))\n     {\n       /* first time */\n-      p5 = ptr->_p5s = i2b (ptr, 625);\n+      p5 = _REENT_MP_P5S(ptr) = i2b (ptr, 625);\n       p5->_next = 0;\n     }\n   for (;;)\n@@ -447,12 +488,12 @@ _DEFUN (pow5mult,\n   return b;\n }\n \n-_Jv_Bigint *\n-_DEFUN (lshift, (ptr, b, k), struct _Jv_reent * ptr _AND _Jv_Bigint * b _AND int k)\n+_Bigint *\n+_DEFUN (lshift, (ptr, b, k), struct _reent * ptr _AND _Bigint * b _AND int k)\n {\n   int i, k1, n, n1;\n-  _Jv_Bigint *b1;\n-  unsigned long *x, *x1, *xe, z;\n+  _Bigint *b1;\n+  __ULong *x, *x1, *xe, z;\n \n #ifdef Pack_32\n   n = k >> 5;\n@@ -480,7 +521,7 @@ _DEFUN (lshift, (ptr, b, k), struct _Jv_reent * ptr _AND _Jv_Bigint * b _AND int\n \t  z = *x++ >> k1;\n \t}\n       while (x < xe);\n-      if ((*x1 = z))\n+      if ((*x1 = z) != 0)\n \t++n1;\n     }\n #else\n@@ -490,11 +531,11 @@ _DEFUN (lshift, (ptr, b, k), struct _Jv_reent * ptr _AND _Jv_Bigint * b _AND int\n       z = 0;\n       do\n \t{\n-\t  *x1++ = (*x << k & 0xffff) | z;\n+\t  *x1++ = *x << k & 0xffff | z;\n \t  z = *x++ >> k1;\n \t}\n       while (x < xe);\n-      if ((*x1 = z))\n+      if (*x1 = z)\n \t++n1;\n     }\n #endif\n@@ -508,9 +549,9 @@ _DEFUN (lshift, (ptr, b, k), struct _Jv_reent * ptr _AND _Jv_Bigint * b _AND int\n }\n \n int\n-_DEFUN (cmp, (a, b), _Jv_Bigint * a _AND _Jv_Bigint * b)\n+_DEFUN (cmp, (a, b), _Bigint * a _AND _Bigint * b)\n {\n-  unsigned long *xa, *xa0, *xb, *xb0;\n+  __ULong *xa, *xa0, *xb, *xb0;\n   int i, j;\n \n   i = a->_wds;\n@@ -537,16 +578,16 @@ _DEFUN (cmp, (a, b), _Jv_Bigint * a _AND _Jv_Bigint * b)\n   return 0;\n }\n \n-_Jv_Bigint *\n-_DEFUN (diff, (ptr, a, b), struct _Jv_reent * ptr _AND\n-\t_Jv_Bigint * a _AND _Jv_Bigint * b)\n+_Bigint *\n+_DEFUN (diff, (ptr, a, b), struct _reent * ptr _AND\n+\t_Bigint * a _AND _Bigint * b)\n {\n-  _Jv_Bigint *c;\n+  _Bigint *c;\n   int i, wa, wb;\n-  long borrow, y;\t\t/* We need signed shifts here. */\n-  unsigned long *xa, *xae, *xb, *xbe, *xc;\n+  __Long borrow, y;\t\t/* We need signed shifts here. */\n+  __ULong *xa, *xae, *xb, *xbe, *xc;\n #ifdef Pack_32\n-  long z;\n+  __Long z;\n #endif\n \n   i = cmp (a, b);\n@@ -625,7 +666,7 @@ double\n _DEFUN (ulp, (_x), double _x)\n {\n   union double_union x, a;\n-  register long L;\n+  register __Long L;\n \n   x.d = _x;\n \n@@ -659,7 +700,7 @@ _DEFUN (ulp, (_x), double _x)\n \t  word0 (a) = 0;\n \t  L -= Exp_shift;\n #ifndef _DOUBLE_IS_32BITS\n-\t  word1 (a) = L >= 31 ? 1 : 1 << (31 - L);\n+         word1 (a) = L >= 31 ? 1 : 1 << (31 - L);\n #endif\n \t}\n     }\n@@ -669,13 +710,13 @@ _DEFUN (ulp, (_x), double _x)\n \n double\n _DEFUN (b2d, (a, e),\n-\t_Jv_Bigint * a _AND int *e)\n+\t_Bigint * a _AND int *e)\n {\n-  unsigned long *xa, *xa0, w, y, z;\n+  __ULong *xa, *xa0, w, y, z;\n   int k;\n   union double_union d;\n #ifdef VAX\n-  unsigned long d0, d1;\n+  __ULong d0, d1;\n #else\n #define d0 word0(d)\n #define d1 word1(d)\n@@ -696,7 +737,7 @@ _DEFUN (b2d, (a, e),\n       d0 = Exp_1 | y >> (Ebits - k);\n       w = xa > xa0 ? *--xa : 0;\n #ifndef _DOUBLE_IS_32BITS\n-      d1 = y << (32 - Ebits + k) | w >> (Ebits - k);\n+      d1 = y << ((32 - Ebits) + k) | w >> (Ebits - k);\n #endif\n       goto ret_d;\n     }\n@@ -720,18 +761,18 @@ _DEFUN (b2d, (a, e),\n   if (k < Ebits + 16)\n     {\n       z = xa > xa0 ? *--xa : 0;\n-      d0 = Exp_1 | y << (k - Ebits) | z >> (Ebits + 16 - k);\n+      d0 = Exp_1 | y << k - Ebits | z >> Ebits + 16 - k;\n       w = xa > xa0 ? *--xa : 0;\n       y = xa > xa0 ? *--xa : 0;\n-      d1 = z << (k + 16 - Ebits) | w << (k - Ebits) | y >> (16 + Ebits - k);\n+      d1 = z << k + 16 - Ebits | w << k - Ebits | y >> 16 + Ebits - k;\n       goto ret_d;\n     }\n   z = xa > xa0 ? *--xa : 0;\n   w = xa > xa0 ? *--xa : 0;\n   k -= Ebits + 16;\n-  d0 = Exp_1 | y << (k + 16) | z << k | w >> (16 - k);\n+  d0 = Exp_1 | y << k + 16 | z << k | w >> 16 - k;\n   y = xa > xa0 ? *--xa : 0;\n-  d1 = w << (k + 16) | y << k;\n+  d1 = w << k + 16 | y << k;\n #endif\n ret_d:\n #ifdef VAX\n@@ -744,22 +785,24 @@ _DEFUN (b2d, (a, e),\n   return d.d;\n }\n \n-_Jv_Bigint *\n+_Bigint *\n _DEFUN (d2b,\n \t(ptr, _d, e, bits),\n-\tstruct _Jv_reent * ptr _AND\n+\tstruct _reent * ptr _AND\n \tdouble _d _AND\n \tint *e _AND\n \tint *bits)\n \n {\n   union double_union d;\n-  _Jv_Bigint *b;\n+  _Bigint *b;\n   int de, i, k;\n-  unsigned long *x, y, z;\n+  __ULong *x, y, z;\n #ifdef VAX\n-  unsigned long d0, d1;\n+  __ULong d0, d1;\n+#endif\n   d.d = _d;\n+#ifdef VAX\n   d0 = word0 (d) >> 16 | word0 (d) << 16;\n   d1 = word1 (d) >> 16 | word1 (d) << 16;\n #else\n@@ -783,16 +826,18 @@ _DEFUN (d2b,\n   z |= Exp_msk11;\n #endif\n #else\n-  if ((de = (int) (d0 >> Exp_shift)))\n+  if ((de = (int) (d0 >> Exp_shift)) != 0)\n     z |= Exp_msk1;\n #endif\n #ifdef Pack_32\n #ifndef _DOUBLE_IS_32BITS\n-  if ((y = d1))\n+  if (d1)\n     {\n-      if ((k = lo0bits (&y)))\n+      y = d1;\n+      k = lo0bits (&y);\n+      if (k)\n \t{\n-\t  x[0] = y | z << (32 - k);\n+         x[0] = y | z << (32 - k);\n \t  z >>= k;\n \t}\n       else\n@@ -814,22 +859,24 @@ _DEFUN (d2b,\n #endif\n     }\n #else\n-  if ((y = d1))\n+  if (d1)\n     {\n-      if ((k = lo0bits (&y)))\n+      y = d1;\n+      k = lo0bits (&y);\n+      if (k)\n \tif (k >= 16)\n \t  {\n-\t    x[0] = y | (z << (32 - k) & 0xffff);\n-\t    x[1] = z >> (k - 16) & 0xffff;\n+\t    x[0] = y | z << 32 - k & 0xffff;\n+\t    x[1] = z >> k - 16 & 0xffff;\n \t    x[2] = z >> k;\n \t    i = 2;\n \t  }\n \telse\n \t  {\n \t    x[0] = y & 0xffff;\n-\t    x[1] = (y >> 16 | z << (16 - k)) & 0xffff;\n+\t    x[1] = y >> 16 | z << 16 - k & 0xffff;\n \t    x[2] = z >> k & 0xffff;\n-\t    x[3] = z >> (k + 16);\n+\t    x[3] = z >> k + 16;\n \t    i = 3;\n \t  }\n       else\n@@ -894,7 +941,7 @@ _DEFUN (d2b,\n #undef d1\n \n double\n-_DEFUN (ratio, (a, b), _Jv_Bigint * a _AND _Jv_Bigint * b)\n+_DEFUN (ratio, (a, b), _Bigint * a _AND _Bigint * b)\n \n {\n   union double_union da, db;\n@@ -958,3 +1005,17 @@ _CONST double tinytens[] =\n #endif\n \n \n+double\n+_DEFUN (_mprec_log10, (dig),\n+\tint dig)\n+{\n+  double v = 1.0;\n+  if (dig < 24)\n+    return tens[dig];\n+  while (dig > 0)\n+    {\n+      v *= 10;\n+      dig--;\n+    }\n+  return v;\n+}"}, {"sha": "7c7471bc8a96c92bec2a9fc2c37556f1fb0467db", "filename": "libjava/classpath/native/fdlibm/mprec.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fmprec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80f798b41ed01f18930de85751a4653359387399/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fmprec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Ffdlibm%2Fmprec.h?ref=80f798b41ed01f18930de85751a4653359387399", "patch": "@@ -282,7 +282,7 @@ struct _Jv_Bigint\n {\n   struct _Jv_Bigint *_next;\n   int _k, _maxwds, _sign, _wds;\n-  unsigned long _x[MAX_BIGNUM_WDS];\n+  unsigned long _x[1];\n };\n \n \n@@ -310,10 +310,8 @@ struct _Jv_reent\n   int _result_k;\n   struct _Jv_Bigint *_p5s;\n \n-  struct _Jv_Bigint _freelist[MAX_BIGNUMS];\n-  int _allocation_map;\n-\n-  int num;\n+  struct _Jv_Bigint **_freelist;\n+  int _max_k;\n };\n \n "}]}