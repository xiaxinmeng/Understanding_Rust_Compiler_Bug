{"sha": "872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcyZmM3YjUzZDRiMjU0MGI1MGM5MDVmY2ZjYTc4ZGNkOWJmMmNjYg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2017-01-12T13:59:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-12T13:59:45Z"}, "message": "sem_prag.adb: Minor reformatting.\n\n2017-01-12  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_prag.adb: Minor reformatting.\n\t* sem_util.adb (Unique_Entity): fix result for\n\tbodies of entry families.\n\nFrom-SVN: r244363", "tree": {"sha": "9e945de11a9699d9821d2e8c9ab98126643ca38d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e945de11a9699d9821d2e8c9ab98126643ca38d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00420f7430267c2df25b71edcb401e4df443ac01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00420f7430267c2df25b71edcb401e4df443ac01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00420f7430267c2df25b71edcb401e4df443ac01"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "321b2e6ff77efd008e034189a47a205b8b88827a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb", "patch": "@@ -1,3 +1,9 @@\n+2017-01-12  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_prag.adb: Minor reformatting.\n+\t* sem_util.adb (Unique_Entity): fix result for\n+\tbodies of entry families.\n+\n 2017-01-12  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma): Add appropriate calls to"}, {"sha": "6bf680f3cc87135898c350fb254fc320d09fd44d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb", "patch": "@@ -3296,7 +3296,7 @@ package body Sem_Prag is\n          elsif Ekind (Item_Id) = E_Constant then\n             Error_Msg_Name_1 := Chars (Encap_Id);\n             SPARK_Msg_NE\n-              (Fix_Msg (Encap_Typ, \"consant & cannot act as constituent of \"\n+              (Fix_Msg (Encap_Typ, \"constant & cannot act as constituent of \"\n                & \"single protected type %\"), Indic, Item_Id);\n \n          --  The constituent is a package instantiation\n@@ -11831,7 +11831,7 @@ package body Sem_Prag is\n \n             procedure Resolve_Suppressible (Policy : Node_Id);\n             --  Converts the assertion policy 'Suppressible' to either Check or\n-            --  ignore based on whether checks are suppressed via -gnatp or ???\n+            --  Ignore based on whether checks are suppressed via -gnatp or ???\n \n             --------------------------\n             -- Resolve_Suppressible --"}, {"sha": "a4e733a615343c61a571ecab7e8cde05c026f899", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=872fc7b53d4b2540b50c905fcfca78dcd9bf2ccb", "patch": "@@ -20658,14 +20658,25 @@ package body Sem_Util is\n          when Entry_Kind =>\n             if Nkind (Parent (E)) = N_Entry_Body then\n                declare\n+                  Prot_Type : Entity_Id;\n                   Prot_Item : Entity_Id;\n                begin\n+                  if Ekind (E) = E_Entry then\n+                     Prot_Type := Scope (E);\n+                  else\n+                     --  Bodies of entry families are nested within an extra\n+                     --  scope that contains an entry index declaration.\n+                     Prot_Type := Scope (Scope (E));\n+                  end if;\n+\n+                  pragma Assert (Ekind (Prot_Type) = E_Protected_Type);\n+\n                   --  Traverse the entity list of the protected type and locate\n                   --  an entry declaration which matches the entry body.\n \n-                  Prot_Item := First_Entity (Scope (E));\n+                  Prot_Item := First_Entity (Prot_Type);\n                   while Present (Prot_Item) loop\n-                     if Ekind (Prot_Item) = E_Entry\n+                     if Ekind (Prot_Item) in Entry_Kind\n                        and then Corresponding_Body (Parent (Prot_Item)) = E\n                      then\n                         U := Prot_Item;"}]}