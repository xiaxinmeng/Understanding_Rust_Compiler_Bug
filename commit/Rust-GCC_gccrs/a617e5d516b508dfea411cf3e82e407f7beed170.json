{"sha": "a617e5d516b508dfea411cf3e82e407f7beed170", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYxN2U1ZDUxNmI1MDhkZmVhNDExY2YzZTgyZTQwN2Y3YmVlZDE3MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-05-27T20:23:52Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-05-27T20:25:36Z"}, "message": "i386: Remove unneeded binary operand fixup from expanders.\n\nThere is no need to call ix86_fixup_binary_operands when there are\nonly one or no memory operands allowed.\n\n2021-05-27  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\t* config/i386/mmx.md (addv2sf3): Do not call\n\tix86_fixup_binary_operands_no_copy.\n\t(subv2sf3): Ditto.\n\t(mulv2sf3): Ditto.\n\t(<smaxmin:code>v2sf3): Ditto.\n\t(<plusminus:insn><MMXMODEI:mode>3): Ditto.\n\t(<plusminus:insn><VI_32:mode>3): Remove expander.\n\t(<plusminus:insn><VI_32:mode>3): Rename from\n\t\"*<plusminus:insn><VI_32:mode>3\".\n\t(mulv4hi): Do not call ix86_fixup_binary_operands_no_copy.\n\t(mulv2hi3): Remove expander.\n\t(mulv2hi3): Rename from *mulv2hi3.\n\t(<s>mulv2hi3_highpart): Remove expander.\n\t(<s>mulv2hi3_highpart): Rename from *<s>mulv2hi3_highpart.\n\t(<smaxmin:code><MMXMODE14:mode>3): Rename from\n\t\"*mmx_<smaxmin:code><MMXMODE14:mode>3\".\n\t(<smaxmin:code><SMAXMIN_MMXMODEI:mode>3): Remove expander.\n\t(SMAXMIN_MMXMODEI): Remove mode iterator.\n\t(<smaxmin:code>v4hi3): New expander.\n\t(<smaxmin:code>v4qi3): Rename from *<smaxmin:code>v4qi3.\n\t(<smaxmin:code>v2hi3): Rename from *<smaxmin:code>v2hi3.\n\t(<smaxmin:code><SMAXMIN_VI_32:mode>3): Remove expander.\n\t(SMAXMIN_VI_32): Remove mode iterator.\n\t(<umaxmin:code><MMXMODE24:mode>3): Rename from\n\t\"*mmx_<umaxmin:code><MMXMODE24:mode>3\".\n\t(<umaxmin:code><UMAXMIN_MMXMODEI:mode>3): Remove expander.\n\t(UMAXMIN_MMXMODEI): Remove mode iterator.\n\t(<umaxmin:code>v8qi3): New expander.\n\t(<umaxmin:code>v4qi3): Rename from *<umaxmin:code>v4qi3.\n\t(<umaxmin:code>v2hi3): Rename from *<umaxmin:code>v2hi3.\n\t(<umaxmin:code><SMAXMIN_VI_32:mode>3): Remove expander.\n\t(UMAXMIN_VI_32): Remove mode iterator.\n\t(<any_shift:insn>v2hi3): Remove expander.\n\t(<any_shift:insn>v2hi3): Rename from *<any_shift:insn>v2hi3.\n\t(<any_logic:code><MMXMODEI:mode>3): Do not call\n\tix86_fixup_binary_operands_no_copy.\n\t(<any_logic:code><VI_32:mode>3): Remove expander.\n\t(<any_logic:code><VI_32:mode>3): Rename from\n\t\"*<any_logic:code><VI_32:mode>3\".\n\t(uavg<mode>3_ceil): Do not call ix86_fixup_binary_operands_no_copy.\n\t* config/i386/sse.md (div<VF2:mode>3): Do not call\n\tix86_fixup_binary_operands_no_copy.\n\t(div<VF1:mode>3): Ditto.\n\t(<maxmin:code><VI8_AVX2_AVX512F:mode>3): Ditto.\n\t(smulhrsv4hi3): Ditto.\n\t(smulhrsv2hi3): Ditto.", "tree": {"sha": "04a0adff56dba058f596d0f48869389693278137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04a0adff56dba058f596d0f48869389693278137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a617e5d516b508dfea411cf3e82e407f7beed170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a617e5d516b508dfea411cf3e82e407f7beed170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a617e5d516b508dfea411cf3e82e407f7beed170", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a617e5d516b508dfea411cf3e82e407f7beed170/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d05e83e243931c291409d4771f31747b6c04eb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d05e83e243931c291409d4771f31747b6c04eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d05e83e243931c291409d4771f31747b6c04eb0"}], "stats": {"total": 216, "additions": 56, "deletions": 160}, "files": [{"sha": "f39e062ddfc278e6f4ef6c4ccd216c463ee3b5ea", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 52, "deletions": 147, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a617e5d516b508dfea411cf3e82e407f7beed170/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a617e5d516b508dfea411cf3e82e407f7beed170/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=a617e5d516b508dfea411cf3e82e407f7beed170", "patch": "@@ -417,8 +417,7 @@\n \t(plus:V2SF\n \t  (match_operand:V2SF 1 \"register_operand\")\n \t  (match_operand:V2SF 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (PLUS, V2SFmode, operands);\")\n+  \"TARGET_MMX_WITH_SSE\")\n \n (define_insn \"*mmx_addv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y,x,v\")\n@@ -455,8 +454,7 @@\n \t(minus:V2SF\n \t  (match_operand:V2SF 1 \"register_operand\")\n \t  (match_operand:V2SF 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (MINUS, V2SFmode, operands);\")\n+  \"TARGET_MMX_WITH_SSE\")\n \n (define_insn \"*mmx_subv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y,y,x,v\")\n@@ -489,8 +487,7 @@\n \t(mult:V2SF\n \t  (match_operand:V2SF 1 \"register_operand\")\n \t  (match_operand:V2SF 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (MULT, V2SFmode, operands);\")\n+  \"TARGET_MMX_WITH_SSE\")\n \n (define_insn \"*mmx_mulv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y,x,v\")\n@@ -542,8 +539,6 @@\n \t\t (operands[0], operands[1], operands[2]));\n       DONE;\n     }\n-  else\n-    ix86_fixup_binary_operands_no_copy (<CODE>, V2SFmode, operands);\n })\n \n ;; These versions of the min/max patterns are intentionally ignorant of\n@@ -709,7 +704,7 @@\n \t  (vec_select:SF\n \t    (match_dup 1)\n \t    (parallel [(match_operand:SI 3 \"const_0_to_1_operand\")]))))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE3\n+  \"TARGET_SSE3 && TARGET_MMX_WITH_SSE\n    && INTVAL (operands[2]) != INTVAL (operands[3])\"\n   \"@\n    haddps\\t{%0, %0|%0, %0}\n@@ -747,7 +742,7 @@\n \t  (vec_select:SF\n \t    (match_dup 1)\n \t    (parallel [(const_int 1)]))))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE3\"\n+  \"TARGET_SSE3 && TARGET_MMX_WITH_SSE\"\n   \"@\n    hsubps\\t{%0, %0|%0, %0}\n    vhsubps\\t{%1, %1, %0|%0, %1, %1}\"\n@@ -1091,7 +1086,7 @@\n (define_insn \"fixuns_truncv2sfv2si2\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=v\")\n \t(unsigned_fix:V2SI (match_operand:V2SF 1 \"register_operand\" \"v\")))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_AVX512VL\"\n+  \"TARGET_AVX512VL && TARGET_MMX_WITH_SSE\"\n   \"vcvttps2udq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"evex\")\n@@ -1119,7 +1114,7 @@\n (define_insn \"floatunsv2siv2sf2\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=v\")\n \t(unsigned_float:V2SF (match_operand:V2SI 1 \"register_operand\" \"v\")))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_AVX512VL\"\n+  \"TARGET_AVX512VL && TARGET_MMX_WITH_SSE\"\n   \"vcvtudq2ps\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"evex\")\n@@ -1361,8 +1356,7 @@\n \t(plusminus:MMXMODEI\n \t  (match_operand:MMXMODEI 1 \"register_operand\")\n \t  (match_operand:MMXMODEI 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n+  \"TARGET_MMX_WITH_SSE\")\n \n (define_insn \"*mmx_<insn><mode>3\"\n   [(set (match_operand:MMXMODEI8 0 \"register_operand\" \"=y,x,<Yv_Yw>\")\n@@ -1390,21 +1384,12 @@\n   \"TARGET_SSE2\"\n   \"operands[2] = force_reg (<MODE>mode, CONST0_RTX (<MODE>mode));\")\n \n-(define_expand \"<insn><mode>3\"\n-  [(set (match_operand:VI_32 0 \"register_operand\")\n-\t(plusminus:VI_32\n-\t  (match_operand:VI_32 1 \"register_operand\")\n-\t  (match_operand:VI_32 2 \"register_operand\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n-\n-(define_insn \"*<insn><mode>3\"\n+(define_insn \"<insn><mode>3\"\n   [(set (match_operand:VI_32 0 \"register_operand\" \"=x,Yw\")\n         (plusminus:VI_32\n \t  (match_operand:VI_32 1 \"register_operand\" \"<comm>0,Yw\")\n \t  (match_operand:VI_32 2 \"register_operand\" \"x,Yw\")))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\n    vp<plusminus_mnemonic><mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n@@ -1441,8 +1426,7 @@\n         (sat_plusminus:VI_32\n \t  (match_operand:VI_32 1 \"register_operand\" \"<comm>0,Yw\")\n \t  (match_operand:VI_32 2 \"register_operand\" \"x,Yw\")))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\n    vp<plusminus_mnemonic><mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n@@ -1461,8 +1445,7 @@\n   [(set (match_operand:V4HI 0 \"register_operand\")\n         (mult:V4HI (match_operand:V4HI 1 \"register_operand\")\n \t\t   (match_operand:V4HI 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n+  \"TARGET_MMX_WITH_SSE\")\n \n (define_insn \"*mmx_mulv4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y,x,Yw\")\n@@ -1479,19 +1462,11 @@\n    (set_attr \"type\" \"mmxmul,ssemul,ssemul\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n-(define_expand \"mulv2hi3\"\n-  [(set (match_operand:V2HI 0 \"register_operand\")\n-        (mult:V2HI (match_operand:V2HI 1 \"register_operand\")\n-\t\t   (match_operand:V2HI 2 \"register_operand\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (MULT, V2HImode, operands);\")\n-\n-(define_insn \"*mulv2hi3\"\n+(define_insn \"mulv2hi3\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=x,Yw\")\n         (mult:V2HI (match_operand:V2HI 1 \"register_operand\" \"%0,Yw\")\n \t\t   (match_operand:V2HI 2 \"register_operand\" \"x,Yw\")))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (MULT, V2HImode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    pmullw\\t{%2, %0|%0, %2}\n    vpmullw\\t{%2, %1, %0|%0, %1, %2}\"\n@@ -1579,10 +1554,9 @@\n \t      (any_extend:V4SI\n \t\t(match_operand:V4HI 2 \"register_operand\")))\n \t    (const_int 16))))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n+  \"TARGET_MMX_WITH_SSE\")\n \n-(define_insn \"*<s>mulv2hi3_highpart\"\n+(define_insn \"<s>mulv2hi3_highpart\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=x,Yw\")\n \t(truncate:V2HI\n \t  (lshiftrt:V2SI\n@@ -1592,28 +1566,14 @@\n \t      (any_extend:V2SI\n \t\t(match_operand:V2HI 2 \"register_operand\" \"x,Yw\")))\n \t    (const_int 16))))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (MULT, V2HImode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    pmulh<u>w\\t{%2, %0|%0, %2}\n    vpmulh<u>w\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"ssemul\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"<s>mulv2hi3_highpart\"\n-  [(set (match_operand:V2HI 0 \"register_operand\")\n-\t(truncate:V2HI\n-\t  (lshiftrt:V2SI\n-\t    (mult:V2SI\n-\t      (any_extend:V2SI\n-\t\t(match_operand:V2HI 1 \"register_operand\"))\n-\t      (any_extend:V2SI\n-\t\t(match_operand:V2HI 2 \"register_operand\")))\n-\t    (const_int 16))))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (MULT, V2HImode, operands);\")\n-\n (define_expand \"mmx_pmaddwd\"\n   [(set (match_operand:V2SI 0 \"register_operand\")\n         (plus:V2SI\n@@ -1744,13 +1704,12 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"*mmx_<code><mode>3\"\n+(define_insn \"<code><mode>3\"\n   [(set (match_operand:MMXMODE14 0 \"register_operand\" \"=Yr,*x,Yv\")\n \t(smaxmin:MMXMODE14\n \t  (match_operand:MMXMODE14 1 \"register_operand\" \"%0,0,Yv\")\n \t  (match_operand:MMXMODE14 2 \"register_operand\" \"Yr,*x,Yv\")))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE4_1\n-   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"TARGET_SSE4_1 && TARGET_MMX_WITH_SSE\"\n   \"@\n    p<maxmin_int><mmxvecsize>\\t{%2, %0|%0, %2}\n    p<maxmin_int><mmxvecsize>\\t{%2, %0|%0, %2}\n@@ -1787,24 +1746,19 @@\n    (set_attr \"type\" \"mmxadd,sseiadd,sseiadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n-(define_mode_iterator SMAXMIN_MMXMODEI\n-  [(V8QI \"TARGET_SSE4_1\") V4HI (V2SI \"TARGET_SSE4_1\")])\n-\n-(define_expand \"<code><mode>3\"\n-  [(set (match_operand:SMAXMIN_MMXMODEI 0 \"register_operand\")\n-        (smaxmin:SMAXMIN_MMXMODEI\n-\t  (match_operand:SMAXMIN_MMXMODEI 1 \"register_operand\")\n-\t  (match_operand:SMAXMIN_MMXMODEI 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n+(define_expand \"<code>v4hi3\"\n+  [(set (match_operand:V4HI 0 \"register_operand\")\n+        (smaxmin:V4HI\n+\t  (match_operand:V4HI 1 \"register_operand\")\n+\t  (match_operand:V4HI 2 \"register_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\")\n \n-(define_insn \"*<code>v4qi3\"\n+(define_insn \"<code>v4qi3\"\n   [(set (match_operand:V4QI 0 \"register_operand\" \"=Yr,*x,Yv\")\n \t(smaxmin:V4QI\n \t  (match_operand:V4QI 1 \"register_operand\" \"%0,0,Yv\")\n \t  (match_operand:V4QI 2 \"register_operand\" \"Yr,*x,Yv\")))]\n-  \"TARGET_SSE4_1\n-   && ix86_binary_operator_ok (<CODE>, V4QImode, operands)\"\n+  \"TARGET_SSE4_1\"\n   \"@\n    p<maxmin_int>b\\t{%2, %0|%0, %2}\n    p<maxmin_int>b\\t{%2, %0|%0, %2}\n@@ -1815,37 +1769,25 @@\n    (set_attr \"prefix\" \"orig,orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*<code>v2hi3\"\n+(define_insn \"<code>v2hi3\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=x,Yw\")\n         (smaxmin:V2HI\n \t  (match_operand:V2HI 1 \"register_operand\" \"%0,Yw\")\n \t  (match_operand:V2HI 2 \"register_operand\" \"x,Yw\")))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (<CODE>, V2HImode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    p<maxmin_int>w\\t{%2, %0|%0, %2}\n    vp<maxmin_int>w\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_mode_iterator SMAXMIN_VI_32 [(V4QI \"TARGET_SSE4_1\") V2HI])\n-\n-(define_expand \"<code><mode>3\"\n-  [(set (match_operand:SMAXMIN_VI_32 0 \"register_operand\")\n-        (smaxmin:SMAXMIN_VI_32\n-\t  (match_operand:SMAXMIN_VI_32 1 \"register_operand\")\n-\t  (match_operand:SMAXMIN_VI_32 2 \"register_operand\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, V4HImode, operands);\")\n-\n-(define_insn \"*mmx_<code><mode>3\"\n+(define_insn \"<code><mode>3\"\n   [(set (match_operand:MMXMODE24 0 \"register_operand\" \"=Yr,*x,Yv\")\n \t(umaxmin:MMXMODE24\n \t  (match_operand:MMXMODE24 1 \"register_operand\" \"%0,0,Yv\")\n \t  (match_operand:MMXMODE24 2 \"register_operand\" \"Yr,*x,Yv\")))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE4_1\n-   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"TARGET_SSE4_1 && TARGET_MMX_WITH_SSE\"\n   \"@\n    p<maxmin_int><mmxvecsize>\\t{%2, %0|%0, %2}\n    p<maxmin_int><mmxvecsize>\\t{%2, %0|%0, %2}\n@@ -1882,38 +1824,32 @@\n    (set_attr \"type\" \"mmxadd,sseiadd,sseiadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n-(define_mode_iterator UMAXMIN_MMXMODEI\n-  [V8QI (V4HI \"TARGET_SSE4_1\") (V2SI \"TARGET_SSE4_1\")])\n-\n-(define_expand \"<code><mode>3\"\n-  [(set (match_operand:UMAXMIN_MMXMODEI 0 \"register_operand\")\n-        (umaxmin:UMAXMIN_MMXMODEI\n-\t  (match_operand:UMAXMIN_MMXMODEI 1 \"register_operand\")\n-\t  (match_operand:UMAXMIN_MMXMODEI 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n+(define_expand \"<code>v8qi3\"\n+  [(set (match_operand:V8QI 0 \"register_operand\")\n+        (umaxmin:V8QI\n+\t  (match_operand:V8QI 1 \"register_operand\")\n+\t  (match_operand:V8QI 2 \"register_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\")\n \n-(define_insn \"*<code>v4qi3\"\n+(define_insn \"<code>v4qi3\"\n   [(set (match_operand:V4QI 0 \"register_operand\" \"=x,Yw\")\n         (umaxmin:V4QI\n \t  (match_operand:V4QI 1 \"register_operand\" \"%0,Yw\")\n \t  (match_operand:V4QI 2 \"register_operand\" \"x,Yw\")))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (<CODE>, V4QImode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    p<maxmin_int>b\\t{%2, %0|%0, %2}\n    vp<maxmin_int>b\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*<code>v2hi3\"\n+(define_insn \"<code>v2hi3\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=Yr,*x,Yv\")\n \t(umaxmin:V2HI\n \t  (match_operand:V2HI 1 \"register_operand\" \"%0,0,Yv\")\n \t  (match_operand:V2HI 2 \"register_operand\" \"Yr,*x,Yv\")))]\n-  \"TARGET_SSE4_1\n-   && ix86_binary_operator_ok (<CODE>, V2HImode, operands)\"\n+  \"TARGET_SSE4_1\"\n   \"@\n    p<maxmin_int>w\\t{%2, %0|%0, %2}\n    p<maxmin_int>w\\t{%2, %0|%0, %2}\n@@ -1924,16 +1860,6 @@\n    (set_attr \"prefix\" \"orig,orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_mode_iterator UMAXMIN_VI_32 [V4QI (V2HI \"TARGET_SSE4_1\")])\n-\n-(define_expand \"<code><mode>3\"\n-  [(set (match_operand:UMAXMIN_VI_32 0 \"register_operand\")\n-        (umaxmin:UMAXMIN_VI_32\n-\t  (match_operand:UMAXMIN_VI_32 1 \"register_operand\")\n-\t  (match_operand:UMAXMIN_VI_32 2 \"register_operand\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, V4HImode, operands);\")\n-\n (define_insn \"ssse3_abs<mode>2\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y,Yv\")\n \t(abs:MMXMODEI\n@@ -1953,7 +1879,7 @@\n   [(set (match_operand:MMXMODEI 0 \"register_operand\")\n \t(abs:MMXMODEI\n \t  (match_operand:MMXMODEI 1 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSSE3\")\n+  \"TARGET_SSSE3 && TARGET_MMX_WITH_SSE\")\n \n (define_insn \"abs<mode>2\"\n   [(set (match_operand:VI_32 0 \"register_operand\" \"=Yv\")\n@@ -2025,7 +1951,7 @@\n \t  (match_operand:DI 2 \"nonmemory_operand\")))]\n   \"TARGET_MMX_WITH_SSE\")\n \n-(define_insn \"*<insn>v2hi3\"\n+(define_insn \"<insn>v2hi3\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=x,Yw\")\n         (any_shift:V2HI\n \t  (match_operand:V2HI 1 \"register_operand\" \"0,Yw\")\n@@ -2042,13 +1968,6 @@\n        (const_string \"0\")))\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"<insn>v2hi3\"\n-  [(set (match_operand:V2HI 0 \"register_operand\")\n-        (any_shift:V2HI\n-\t  (match_operand:V2HI 1 \"register_operand\")\n-\t  (match_operand:DI 2 \"nonmemory_operand\")))]\n-  \"TARGET_SSE2\")\n-\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel integral comparisons\n@@ -2084,8 +2003,7 @@\n         (eq:VI_32\n \t  (match_operand:VI_32 1 \"register_operand\" \"%0,x\")\n \t  (match_operand:VI_32 2 \"register_operand\" \"x,x\")))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (EQ, <MODE>mode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    pcmpeq<mmxvecsize>\\t{%2, %0|%0, %2}\n    vpcmpeq<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n@@ -2441,8 +2359,7 @@\n \t(any_logic:MMXMODEI\n \t  (match_operand:MMXMODEI 1 \"register_operand\")\n \t  (match_operand:MMXMODEI 2 \"register_operand\")))]\n-  \"TARGET_MMX_WITH_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n+  \"TARGET_MMX_WITH_SSE\")\n \n (define_insn \"*mmx_<code><mode>3\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y,x,x,v\")\n@@ -2461,21 +2378,12 @@\n    (set_attr \"type\" \"mmxadd,sselog,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI,TI\")])\n \n-(define_expand \"<code><mode>3\"\n-  [(set (match_operand:VI_32 0 \"register_operand\")\n-\t(any_logic:VI_32\n-\t  (match_operand:VI_32 1 \"register_operand\")\n-\t  (match_operand:VI_32 2 \"register_operand\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n-\n-(define_insn \"*<code><mode>3\"\n+(define_insn \"<code><mode>3\"\n   [(set (match_operand:VI_32 0 \"register_operand\" \"=x,x,v\")\n         (any_logic:VI_32\n \t  (match_operand:VI_32 1 \"register_operand\" \"%0,x,v\")\n \t  (match_operand:VI_32 2 \"register_operand\" \"x,x,v\")))]\n-  \"TARGET_SSE2\n-   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"TARGET_SSE2\"\n   \"@\n    p<logic>\\t{%2, %0|%0, %2}\n    vp<logic>\\t{%2, %1, %0|%0, %1, %2}\n@@ -2672,7 +2580,7 @@\n             (match_operand:SI 2 \"nonimmediate_operand\" \"rm,rm\"))\n \t  (match_operand:V2SI 1 \"register_operand\" \"0,Yv\")\n           (match_operand:SI 3 \"const_int_operand\")))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE4_1\n+  \"TARGET_SSE4_1 && TARGET_MMX_WITH_SSE\n    && ((unsigned) exact_log2 (INTVAL (operands[3]))\n        < GET_MODE_NUNITS (V2SImode))\"\n {\n@@ -2752,7 +2660,7 @@\n             (match_operand:QI 2 \"nonimmediate_operand\" \"rm,rm\"))\n \t  (match_operand:V8QI 1 \"register_operand\" \"0,YW\")\n           (match_operand:SI 3 \"const_int_operand\")))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE4_1\n+  \"TARGET_SSE4_1 && TARGET_MMX_WITH_SSE\n    && ((unsigned) exact_log2 (INTVAL (operands[3]))\n        < GET_MODE_NUNITS (V8QImode))\"\n {\n@@ -2822,7 +2730,7 @@\n \t(vec_select:QI\n \t  (match_operand:V8QI 1 \"register_operand\" \"YW,YW\")\n \t  (parallel [(match_operand:SI 2 \"const_0_to_7_operand\" \"n,n\")])))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE4_1\"\n+  \"TARGET_SSE4_1 && TARGET_MMX_WITH_SSE\"\n   \"@\n    %vpextrb\\t{%2, %1, %k0|%k0, %1, %2}\n    %vpextrb\\t{%2, %1, %0|%0, %1, %2}\"\n@@ -2839,7 +2747,7 @@\n \t  (vec_select:QI\n \t    (match_operand:V8QI 1 \"register_operand\" \"YW\")\n \t    (parallel [(match_operand:SI 2 \"const_0_to_7_operand\" \"n\")]))))]\n-  \"TARGET_MMX_WITH_SSE && TARGET_SSE4_1\"\n+  \"TARGET_SSE4_1 && TARGET_MMX_WITH_SSE\"\n   \"%vpextrb\\t{%2, %1, %k0|%k0, %1, %2}\"\n   [(set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_data16\" \"1\")\n@@ -3321,10 +3229,7 @@\n \t      (match_dup 3))\n \t    (const_int 1))))]\n   \"TARGET_MMX_WITH_SSE\"\n-{\n-  operands[3] = CONST1_RTX(<mmxdoublemode>mode);\n-  ix86_fixup_binary_operands_no_copy (PLUS, <MODE>mode, operands);\n-})\n+  \"operands[3] = CONST1_RTX(<mmxdoublemode>mode);\")\n \n (define_insn \"uavgv4qi3_ceil\"\n   [(set (match_operand:V4QI 0 \"register_operand\" \"=x,Yw\")"}, {"sha": "1b3df21abfef9492de09e582e446d7db73e3cf30", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a617e5d516b508dfea411cf3e82e407f7beed170/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a617e5d516b508dfea411cf3e82e407f7beed170/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=a617e5d516b508dfea411cf3e82e407f7beed170", "patch": "@@ -1999,17 +1999,14 @@\n   [(set (match_operand:VF2 0 \"register_operand\")\n \t(div:VF2 (match_operand:VF2 1 \"register_operand\")\n \t\t (match_operand:VF2 2 \"vector_operand\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (DIV, <MODE>mode, operands);\")\n+  \"TARGET_SSE2\")\n \n (define_expand \"div<mode>3\"\n   [(set (match_operand:VF1 0 \"register_operand\")\n \t(div:VF1 (match_operand:VF1 1 \"register_operand\")\n \t\t (match_operand:VF1 2 \"vector_operand\")))]\n   \"TARGET_SSE\"\n {\n-  ix86_fixup_binary_operands_no_copy (DIV, <MODE>mode, operands);\n-\n   if (TARGET_SSE_MATH\n       && TARGET_RECIP_VEC_DIV\n       && !optimize_insn_for_size_p ()\n@@ -12801,7 +12798,7 @@\n {\n   if (TARGET_AVX512F\n       && (<MODE>mode == V8DImode || TARGET_AVX512VL))\n-    ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\n+    ;\n   else \n     {\n       enum rtx_code code;\n@@ -17186,10 +17183,7 @@\n \t      (match_dup 3))\n \t    (const_int 1))))]\n   \"TARGET_MMX_WITH_SSE && TARGET_SSSE3\"\n-{\n-  operands[3] = CONST1_RTX(V4HImode);\n-  ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\n-})\n+  \"operands[3] = CONST1_RTX(V4HImode);\")\n \n (define_expand \"ssse3_pmulhrswv4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\")\n@@ -17254,10 +17248,7 @@\n \t      (match_dup 3))\n \t    (const_int 1))))]\n   \"TARGET_SSSE3\"\n-{\n-  operands[3] = CONST1_RTX(V2HImode);\n-  ix86_fixup_binary_operands_no_copy (MULT, V2HImode, operands);\n-})\n+  \"operands[3] = CONST1_RTX(V2HImode);\")\n \n (define_insn \"*smulhrsv2hi3\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=x,Yv\")"}]}