{"sha": "ffdda752b35132ab5a256db31fa3f3de2972030b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZkZGE3NTJiMzUxMzJhYjVhMjU2ZGIzMWZhM2YzZGUyOTcyMDMwYg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2004-11-05T15:27:30Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-11-05T15:27:30Z"}, "message": "s390.c (s390_fixed_condition_code_regs): New function.\n\n2004-11-05  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (s390_fixed_condition_code_regs): New function.\n\t(TARGET_FIXED_CONDITION_CODE_REGS): Macro defined.\n\nFrom-SVN: r90126", "tree": {"sha": "5e46bd7c4f30a41783eb92ef15328c7d73fcc94f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e46bd7c4f30a41783eb92ef15328c7d73fcc94f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffdda752b35132ab5a256db31fa3f3de2972030b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffdda752b35132ab5a256db31fa3f3de2972030b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffdda752b35132ab5a256db31fa3f3de2972030b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffdda752b35132ab5a256db31fa3f3de2972030b/comments", "author": null, "committer": null, "parents": [{"sha": "adf3ed3f3812861d98f00dee10b00287703d88c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adf3ed3f3812861d98f00dee10b00287703d88c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adf3ed3f3812861d98f00dee10b00287703d88c0"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "f5b3abdefd33bdffb31b49bb46732dfdb44f6af2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdda752b35132ab5a256db31fa3f3de2972030b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdda752b35132ab5a256db31fa3f3de2972030b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffdda752b35132ab5a256db31fa3f3de2972030b", "patch": "@@ -1,3 +1,8 @@\n+2004-11-05  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_fixed_condition_code_regs): New function.\n+\t(TARGET_FIXED_CONDITION_CODE_REGS): Macro defined.\n+\n 2004-11-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* bitmap.h (enum bitmap_bits): Remove."}, {"sha": "8189de09d41466fd3359fe22d1bb57efc2863486", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdda752b35132ab5a256db31fa3f3de2972030b/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdda752b35132ab5a256db31fa3f3de2972030b/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=ffdda752b35132ab5a256db31fa3f3de2972030b", "patch": "@@ -81,6 +81,7 @@ static bool s390_function_ok_for_sibcall (tree, tree);\n static bool s390_call_saved_register_used (tree);\n static bool s390_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode mode,\n \t\t\t\t    tree, bool);\n+static bool s390_fixed_condition_code_regs (unsigned int *, unsigned int *);\n \n #undef  TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.word\\t\"\n@@ -156,6 +157,9 @@ static bool s390_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode mode,\n #undef TARGET_FUNCTION_OK_FOR_SIBCALL\n #define TARGET_FUNCTION_OK_FOR_SIBCALL s390_function_ok_for_sibcall\n \n+#undef TARGET_FIXED_CONDITION_CODE_REGS\n+#define TARGET_FIXED_CONDITION_CODE_REGS s390_fixed_condition_code_regs\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n extern int reload_completed;\n@@ -8332,6 +8336,17 @@ s390_function_ok_for_sibcall (tree decl, tree exp)\n   return true;\n }\n \n+/* Return the fixed registers used for condition codes.  */\n+\n+static bool\n+s390_fixed_condition_code_regs (unsigned int *p1, unsigned int *p2)\n+{\n+  *p1 = CC_REGNUM;\n+  *p2 = INVALID_REGNUM;\n+ \n+  return true;\n+}\n+\n /* This function is used by the call expanders of the machine description.\n    It emits the call insn itself together with the necessary operations\n    to adjust the target address and returns the emitted insn."}]}