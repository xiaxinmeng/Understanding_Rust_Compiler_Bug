{"sha": "88437f39a89d08001c26e9f0390772591f980b76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0MzdmMzlhODlkMDgwMDFjMjZlOWYwMzkwNzcyNTkxZjk4MGI3Ng==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2014-09-03T08:20:49Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-09-03T08:20:49Z"}, "message": "[NDS32] Refine the implementation and consider CFA restore information for stack v3push/v3pop.\n\n\t* config/nds32/nds32.c (nds32_gen_stack_v3push): Rename to ...\n\t(nds32_emit_stack_v3push): ... this.\n\t(nds32_gen_stack_v3pop): Rename to ...\n\t(nds32_emit_stack_v3pop): ... this and consider CFA restore\n\tinformation.\n\nFrom-SVN: r214852", "tree": {"sha": "1de8e28e1c6d1d5a10bab79e48a93a18cfa2c83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1de8e28e1c6d1d5a10bab79e48a93a18cfa2c83c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88437f39a89d08001c26e9f0390772591f980b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88437f39a89d08001c26e9f0390772591f980b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88437f39a89d08001c26e9f0390772591f980b76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88437f39a89d08001c26e9f0390772591f980b76/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e9a2848eb8b607dc10c91007af7f6c9ba233978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9a2848eb8b607dc10c91007af7f6c9ba233978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e9a2848eb8b607dc10c91007af7f6c9ba233978"}], "stats": {"total": 104, "additions": 57, "deletions": 47}, "files": [{"sha": "e285da4efb6c4ec42db78a83ac5b90bc7996f088", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88437f39a89d08001c26e9f0390772591f980b76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88437f39a89d08001c26e9f0390772591f980b76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88437f39a89d08001c26e9f0390772591f980b76", "patch": "@@ -1,3 +1,11 @@\n+2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.c (nds32_gen_stack_v3push): Rename to ...\n+\t(nds32_emit_stack_v3push): ... this.\n+\t(nds32_gen_stack_v3pop): Rename to ...\n+\t(nds32_emit_stack_v3pop): ... this and consider CFA restore\n+\tinformation.\n+\n 2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.c (nds32_gen_stack_push_multiple): Rename to ..."}, {"sha": "da3087fd85a2e47facb556ddcaf28b69cc60a16b", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 49, "deletions": 47, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88437f39a89d08001c26e9f0390772591f980b76/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88437f39a89d08001c26e9f0390772591f980b76/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=88437f39a89d08001c26e9f0390772591f980b76", "patch": "@@ -648,11 +648,11 @@ nds32_emit_stack_pop_multiple (rtx Rb, rtx Re, rtx En4)\n    The overall concept are:\n      \"push registers to memory\",\n      \"adjust stack pointer\".  */\n-static rtx\n-nds32_gen_stack_v3push (rtx Rb,\n-\t\t\trtx Re,\n-\t\t\trtx En4 ATTRIBUTE_UNUSED,\n-\t\t\trtx imm8u)\n+static void\n+nds32_emit_stack_v3push (rtx Rb,\n+\t\t\t rtx Re,\n+\t\t\t rtx En4 ATTRIBUTE_UNUSED,\n+\t\t\t rtx imm8u)\n {\n   int regno;\n   int num_use_regs;\n@@ -668,8 +668,7 @@ nds32_gen_stack_v3push (rtx Rb,\n   /* We need to provide a customized rtx which contains\n      necessary information for data analysis,\n      so we create a parallel rtx like this:\n-     (parallel [\n-                (set (mem (plus (reg:SI SP_REGNUM) (const_int -32)))\n+     (parallel [(set (mem (plus (reg:SI SP_REGNUM) (const_int -32)))\n                      (reg:SI Rb))\n                 (set (mem (plus (reg:SI SP_REGNUM) (const_int -28)))\n                      (reg:SI Rb+1))\n@@ -761,19 +760,24 @@ nds32_gen_stack_v3push (rtx Rb,\n   XVECEXP (parallel_insn, 0, par_index) = adjust_sp_rtx;\n   RTX_FRAME_RELATED_P (adjust_sp_rtx) = 1;\n \n-  return parallel_insn;\n+  parallel_insn = emit_insn (parallel_insn);\n+\n+  /* The insn rtx 'parallel_insn' will change frame layout.\n+     We need to use RTX_FRAME_RELATED_P so that GCC is able to\n+     generate CFI (Call Frame Information) stuff.  */\n+  RTX_FRAME_RELATED_P (parallel_insn) = 1;\n }\n \n /* Function to create a parallel rtx pattern\n    which presents stack v3pop behavior.\n    The overall concept are:\n      \"pop registers from memory\",\n      \"adjust stack pointer\".  */\n-static rtx\n-nds32_gen_stack_v3pop (rtx Rb,\n-\t\t       rtx Re,\n-\t\t       rtx En4 ATTRIBUTE_UNUSED,\n-\t\t       rtx imm8u)\n+static void\n+nds32_emit_stack_v3pop (rtx Rb,\n+\t\t\trtx Re,\n+\t\t\trtx En4 ATTRIBUTE_UNUSED,\n+\t\t\trtx imm8u)\n {\n   int regno;\n   int num_use_regs;\n@@ -785,6 +789,7 @@ nds32_gen_stack_v3pop (rtx Rb,\n   rtx pop_rtx;\n   rtx adjust_sp_rtx;\n   rtx parallel_insn;\n+  rtx dwarf = NULL_RTX;\n \n   /* We need to provide a customized rtx which contains\n      necessary information for data analysis,\n@@ -835,6 +840,8 @@ nds32_gen_stack_v3pop (rtx Rb,\n       RTX_FRAME_RELATED_P (pop_rtx) = 1;\n       offset = offset + 4;\n       par_index++;\n+\n+      dwarf = alloc_reg_note (REG_CFA_RESTORE, reg, dwarf);\n     }\n \n   /* Create (set fp mem).  */\n@@ -847,6 +854,8 @@ nds32_gen_stack_v3pop (rtx Rb,\n   RTX_FRAME_RELATED_P (pop_rtx) = 1;\n   offset = offset + 4;\n   par_index++;\n+  dwarf = alloc_reg_note (REG_CFA_RESTORE, reg, dwarf);\n+\n   /* Create (set gp mem).  */\n   reg = gen_rtx_REG (SImode, GP_REGNUM);\n   mem = gen_frame_mem (SImode, plus_constant (Pmode,\n@@ -857,6 +866,8 @@ nds32_gen_stack_v3pop (rtx Rb,\n   RTX_FRAME_RELATED_P (pop_rtx) = 1;\n   offset = offset + 4;\n   par_index++;\n+  dwarf = alloc_reg_note (REG_CFA_RESTORE, reg, dwarf);\n+\n   /* Create (set lp mem ).  */\n   reg = gen_rtx_REG (SImode, LP_REGNUM);\n   mem = gen_frame_mem (SImode, plus_constant (Pmode,\n@@ -867,6 +878,7 @@ nds32_gen_stack_v3pop (rtx Rb,\n   RTX_FRAME_RELATED_P (pop_rtx) = 1;\n   offset = offset + 4;\n   par_index++;\n+  dwarf = alloc_reg_note (REG_CFA_RESTORE, reg, dwarf);\n \n   /* Create (set sp sp+x+imm8u).  */\n \n@@ -878,9 +890,19 @@ nds32_gen_stack_v3pop (rtx Rb,\n \t\t\t\t  stack_pointer_rtx,\n \t\t\t\t  offset + INTVAL (imm8u)));\n   XVECEXP (parallel_insn, 0, par_index) = adjust_sp_rtx;\n-  RTX_FRAME_RELATED_P (adjust_sp_rtx) = 1;\n \n-  return parallel_insn;\n+  /* Tell gcc we adjust SP in this insn.  */\n+  dwarf = alloc_reg_note (REG_CFA_ADJUST_CFA, copy_rtx (adjust_sp_rtx), dwarf);\n+\n+  parallel_insn = emit_insn (parallel_insn);\n+\n+  /* The insn rtx 'parallel_insn' will change frame layout.\n+     We need to use RTX_FRAME_RELATED_P so that GCC is able to\n+     generate CFI (Call Frame Information) stuff.  */\n+  RTX_FRAME_RELATED_P (parallel_insn) = 1;\n+\n+  /* Add CFI info by manual.  */\n+  REG_NOTES (parallel_insn) = dwarf;\n }\n \n /* Function that may creates more instructions\n@@ -2885,18 +2907,11 @@ nds32_expand_prologue_v3push (void)\n     {\n       /* We can use 'push25 Re,imm8u'.  */\n \n-      /* push_insn = gen_stack_v3push(last_regno, sp_adjust),\n+      /* nds32_emit_stack_v3push(last_regno, sp_adjust),\n          the pattern 'stack_v3push' is implemented in nds32.md.\n          The (const_int 14) means v3push always push { $fp $gp $lp }.  */\n-      push_insn = nds32_gen_stack_v3push (Rb, Re,\n-\t\t\t\t\t  GEN_INT (14), GEN_INT (sp_adjust));\n-      /* emit rtx into instructions list and receive INSN rtx form */\n-      push_insn = emit_insn (push_insn);\n-\n-      /* The insn rtx 'push_insn' will change frame layout.\n-         We need to use RTX_FRAME_RELATED_P so that GCC is able to\n-         generate CFI (Call Frame Information) stuff.  */\n-      RTX_FRAME_RELATED_P (push_insn) = 1;\n+      nds32_emit_stack_v3push (Rb, Re,\n+\t\t\t       GEN_INT (14), GEN_INT (sp_adjust));\n \n       /* Check frame_pointer_needed to see\n          if we shall emit fp adjustment instruction.  */\n@@ -2929,18 +2944,11 @@ nds32_expand_prologue_v3push (void)\n       /* We have to use 'push25 Re,0' and\n          expand one more instruction to adjust $sp later.  */\n \n-      /* push_insn = gen_stack_v3push(last_regno, sp_adjust),\n+      /* nds32_emit_stack_v3push(last_regno, sp_adjust),\n          the pattern 'stack_v3push' is implemented in nds32.md.\n          The (const_int 14) means v3push always push { $fp $gp $lp }.  */\n-      push_insn = nds32_gen_stack_v3push (Rb, Re,\n-\t\t\t\t\t  GEN_INT (14), GEN_INT (0));\n-      /* Emit rtx into instructions list and receive INSN rtx form.  */\n-      push_insn = emit_insn (push_insn);\n-\n-      /* The insn rtx 'push_insn' will change frame layout.\n-         We need to use RTX_FRAME_RELATED_P so that GCC is able to\n-         generate CFI (Call Frame Information) stuff.  */\n-      RTX_FRAME_RELATED_P (push_insn) = 1;\n+      nds32_emit_stack_v3push (Rb, Re,\n+\t\t\t       GEN_INT (14), GEN_INT (0));\n \n       /* Check frame_pointer_needed to see\n          if we shall emit fp adjustment instruction.  */\n@@ -3047,14 +3055,11 @@ nds32_expand_epilogue_v3pop (void)\n     {\n       /* We can use 'pop25 Re,imm8u'.  */\n \n-      /* pop_insn = gen_stack_v3pop(last_regno, sp_adjust),\n+      /* nds32_emit_stack_v3pop(last_regno, sp_adjust),\n          the pattern 'stack_v3pop' is implementad in nds32.md.\n          The (const_int 14) means v3pop always pop { $fp $gp $lp }.  */\n-      pop_insn = nds32_gen_stack_v3pop (Rb, Re,\n-\t\t\t\t\tGEN_INT (14), GEN_INT (sp_adjust));\n-\n-      /* Emit pop instruction.  */\n-      emit_insn (pop_insn);\n+      nds32_emit_stack_v3pop (Rb, Re,\n+\t\t\t      GEN_INT (14), GEN_INT (sp_adjust));\n     }\n   else\n     {\n@@ -3111,14 +3116,11 @@ nds32_expand_epilogue_v3pop (void)\n \t    }\n \t}\n \n-      /* pop_insn = gen_stack_v3pop(last_regno, sp_adjust),\n+      /* nds32_emit_stack_v3pop(last_regno, sp_adjust),\n          the pattern 'stack_v3pop' is implementad in nds32.md.  */\n       /* The (const_int 14) means v3pop always pop { $fp $gp $lp }.  */\n-      pop_insn = nds32_gen_stack_v3pop (Rb, Re,\n-\t\t\t\t\tGEN_INT (14), GEN_INT (0));\n-\n-      /* Emit pop instruction.  */\n-      emit_insn (pop_insn);\n+      nds32_emit_stack_v3pop (Rb, Re,\n+\t\t\t      GEN_INT (14), GEN_INT (0));\n     }\n }\n "}]}