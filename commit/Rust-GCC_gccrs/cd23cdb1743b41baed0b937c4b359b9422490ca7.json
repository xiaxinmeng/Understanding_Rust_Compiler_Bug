{"sha": "cd23cdb1743b41baed0b937c4b359b9422490ca7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyM2NkYjE3NDNiNDFiYWVkMGI5MzdjNGIzNTliOTQyMjQ5MGNhNw==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2020-02-17T16:22:38Z"}, "committer": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2020-02-17T16:24:50Z"}, "message": "Fix existing fold-vec-extract-longlong.p8.c testcase\n\n    The code generated by this test changed shortly after\n    this test was committed, and we didn't get back to\n    updating the scan-assembler statements to match.\n    Until now.\n\n[testsuite]\n    * gcc.target/powerpc/fold-vec-extract-longlong.p8.c: Correct\n    number of expected insns.", "tree": {"sha": "3f5bcdfcac72b927433cdd3c1f23dcbaed00bf77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f5bcdfcac72b927433cdd3c1f23dcbaed00bf77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd23cdb1743b41baed0b937c4b359b9422490ca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd23cdb1743b41baed0b937c4b359b9422490ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd23cdb1743b41baed0b937c4b359b9422490ca7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd23cdb1743b41baed0b937c4b359b9422490ca7/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfbc8fbb37e7b406ab2567ac35629793d4b499e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfbc8fbb37e7b406ab2567ac35629793d4b499e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfbc8fbb37e7b406ab2567ac35629793d4b499e7"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "12390746bd5d141669c2d04678fe25844ef7b38d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd23cdb1743b41baed0b937c4b359b9422490ca7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd23cdb1743b41baed0b937c4b359b9422490ca7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd23cdb1743b41baed0b937c4b359b9422490ca7", "patch": "@@ -1,3 +1,8 @@\n+2020-02-17  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-extract-longlong.p8.c: Correct\n+\tnumber of expected insns.\n+\n 2020-02-17  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/93760"}, {"sha": "2784d80dabe0c83dc2828aa4a7123a0840cb2d53", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-extract-longlong.p8.c", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd23cdb1743b41baed0b937c4b359b9422490ca7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd23cdb1743b41baed0b937c4b359b9422490ca7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p8.c?ref=cd23cdb1743b41baed0b937c4b359b9422490ca7", "patch": "@@ -5,25 +5,26 @@\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-options \"-mdejagnu-cpu=power8 -O2\" } */\n \n-// targeting P8, both LE and BE. six tests.\n+// Targeting P8LE and P8BE, six tests total.\n // P8 (LE) constants: mfvsrd\n-// P8 (LE) variables: xori, rldic, mtvsrd, xxpermdi, vslo, mfvsrd\n-// P8 (BE) constants: xxpermdi, mfvsrd\n-// P8 (BE) Variables:       rldic, mtvsrd, xxpermdi, vslo, mfvsrd\n+// P8 (LE) variables: addi,xxpermdi,mr,stxvd2x|stxvd4x,rldicl,sldi,ldx,blr\n+// P8 (BE) constants: mfvsrd\n+// P8 (BE) Variables: addi,xxpermdi,rldicl,mr,stxvd2x|stxvd4x,sldi,ldx,blr\n \n-/* results. */\n-/* { dg-final { scan-assembler-times {\\mxori\\M} 3 { target le } } } */\n-/* { dg-final { scan-assembler-times {\\mrldic\\M|\\mrlwinm\\M} 3 } } */\n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvw4x\\M} 4 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {\\maddi\\M} 6 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {\\maddi\\M} 3 { target lp64 } } } */\n /* { dg-final { scan-assembler-times {\\madd\\M} 3 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mlwz\\M} 11 { target ilp32 } } } */\n-/* { dg-final { scan-assembler-times {\\maddi\\M} 6 { target ilp32 } } } */\n-/* { dg-final { scan-assembler-times {\\mmfvsrd\\M} 6 { target lp64 } } } */\n-/* { dg-final { scan-assembler-times {\\mmtvsrd\\M} 3 { target lp64 } } } */\n /* { dg-final { scan-assembler-times {\\mxxpermdi\\M} 3 { target le } } } */\n-/* { dg-final { scan-assembler-times {\\mxxpermdi\\M} 6 { target { be && lp64 } } } } */\n /* { dg-final { scan-assembler-times {\\mxxpermdi\\M} 2 { target { be && ilp32 } } } } */\n-/* { dg-final { scan-assembler-times {\\mvslo\\M} 3 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {\\mxxpermdi\\M} 3 { target { be && lp64 } } } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvw4x\\M} 3 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvw4x\\M} 4 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {\\mrldicl\\M|\\mrldic\\M|\\mrlwinm\\M} 3 } } */\n+/* { dg-final { scan-assembler-times {\\mmfvsrd\\M} 3 { target { lp64 } } } } */\n+/* { dg-final { scan-assembler-times {\\mmfvsrd\\M} 0 { target { be && ilp32 } } } } */\n+/* { dg-final { scan-assembler-times {\\mmtvsrd\\M} 0 { target { lp64 } } } } */\n+/* { dg-final { scan-assembler-times {\\mmtvsrd\\M} 0 { target { be && ilp32 } } } } */\n \n #include <altivec.h>\n "}]}