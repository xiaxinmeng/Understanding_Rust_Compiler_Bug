{"sha": "fefac463200cf9380d830206400d41180697e123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVmYWM0NjMyMDBjZjkzODBkODMwMjA2NDAwZDQxMTgwNjk3ZTEyMw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-05-16T00:06:39Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-05-16T00:06:39Z"}, "message": "reload1.c (forget_old_reloads_1): Do not use subreg offset.\n\n2002-05-15  Aldy Hernandez  <aldyh@redhat.com>\n\n        * reload1.c (forget_old_reloads_1): Do not use subreg offset.\n\nFrom-SVN: r53496", "tree": {"sha": "45d5dbc483e2a5ae074e95d022c80a4d78351844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45d5dbc483e2a5ae074e95d022c80a4d78351844"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fefac463200cf9380d830206400d41180697e123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefac463200cf9380d830206400d41180697e123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fefac463200cf9380d830206400d41180697e123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefac463200cf9380d830206400d41180697e123/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f0043518ad447a8bdbe734d82c39f8663c93b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0043518ad447a8bdbe734d82c39f8663c93b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f0043518ad447a8bdbe734d82c39f8663c93b0d"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "0613e309b404f48d6c26ead792345254eedfbc9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefac463200cf9380d830206400d41180697e123/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefac463200cf9380d830206400d41180697e123/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fefac463200cf9380d830206400d41180697e123", "patch": "@@ -1,3 +1,7 @@\n+2002-05-15  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * reload1.c (forget_old_reloads_1): Do not use subreg offset.\n+\n 2002-05-15  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/rs6000/rs6000.md (\"altivec_mtvscr\"): Set VSCR register."}, {"sha": "1349c3c85598eb5b6178c6f9ca96c1925276132a", "filename": "gcc/reload1.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefac463200cf9380d830206400d41180697e123/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefac463200cf9380d830206400d41180697e123/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=fefac463200cf9380d830206400d41180697e123", "patch": "@@ -4098,23 +4098,21 @@ forget_old_reloads_1 (x, ignored, data)\n {\n   unsigned int regno;\n   unsigned int nr;\n-  int offset = 0;\n \n   /* note_stores does give us subregs of hard regs,\n      subreg_regno_offset will abort if it is not a hard reg.  */\n   while (GET_CODE (x) == SUBREG)\n     {\n-      offset += subreg_regno_offset (REGNO (SUBREG_REG (x)),\n-\t\t\t\t     GET_MODE (SUBREG_REG (x)),\n-\t\t\t\t     SUBREG_BYTE (x),\n-\t\t\t\t     GET_MODE (x));\n+      /* We ignore the subreg offset when calculating the regno,\n+\t because we are using the entire underlying hard register\n+\t below.  */\n       x = SUBREG_REG (x);\n     }\n \n   if (GET_CODE (x) != REG)\n     return;\n \n-  regno = REGNO (x) + offset;\n+  regno = REGNO (x);\n \n   if (regno >= FIRST_PSEUDO_REGISTER)\n     nr = 1;"}]}