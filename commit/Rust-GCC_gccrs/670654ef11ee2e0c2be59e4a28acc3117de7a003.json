{"sha": "670654ef11ee2e0c2be59e4a28acc3117de7a003", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcwNjU0ZWYxMWVlMmUwYzJiZTU5ZTRhMjhhY2MzMTE3ZGU3YTAwMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-03-04T05:00:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-03-04T05:00:49Z"}, "message": "tree-sra.c (convert_callers): Use call_for_symbol_and_aliases.\n\n\n\t* tree-sra.c (convert_callers): Use call_for_symbol_and_aliases.\n\t(struct ipa_sra_check_caller_data): Add has_thunk field.\n\t(ipa_sra_check_caller): Check for thunk.\n\t(ipa_sra_preliminary_function_checks): Give up on function with\n\tthunks.\n\t(ipa_early_sra): Use call_for_symbol_and_aliases.\n\nFrom-SVN: r221171", "tree": {"sha": "b62270518f087b2cdb66952130fefa7baf61200b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b62270518f087b2cdb66952130fefa7baf61200b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/670654ef11ee2e0c2be59e4a28acc3117de7a003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670654ef11ee2e0c2be59e4a28acc3117de7a003", "html_url": "https://github.com/Rust-GCC/gccrs/commit/670654ef11ee2e0c2be59e4a28acc3117de7a003", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670654ef11ee2e0c2be59e4a28acc3117de7a003/comments", "author": null, "committer": null, "parents": [{"sha": "e7dbcbc38bc818425329d1ea4ed33c7e98e4eb6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7dbcbc38bc818425329d1ea4ed33c7e98e4eb6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7dbcbc38bc818425329d1ea4ed33c7e98e4eb6b"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "c8c26b46471d628a0892af60c4d4c3eeda8a0181", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/670654ef11ee2e0c2be59e4a28acc3117de7a003/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/670654ef11ee2e0c2be59e4a28acc3117de7a003/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=670654ef11ee2e0c2be59e4a28acc3117de7a003", "patch": "@@ -1,3 +1,12 @@\n+2015-03-03  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-sra.c (convert_callers): Use call_for_symbol_and_aliases.\n+\t(struct ipa_sra_check_caller_data): Add has_thunk field.\n+\t(ipa_sra_check_caller): Check for thunk.\n+\t(ipa_sra_preliminary_function_checks): Give up on function with\n+\tthunks.\n+\t(ipa_early_sra): Use call_for_symbol_and_aliases.\n+\n 2015-03-03  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR target/65249"}, {"sha": "3527a47256cadb1ae4a185277f4330a25942cf26", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/670654ef11ee2e0c2be59e4a28acc3117de7a003/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/670654ef11ee2e0c2be59e4a28acc3117de7a003/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=670654ef11ee2e0c2be59e4a28acc3117de7a003", "patch": "@@ -4947,8 +4947,8 @@ convert_callers (struct cgraph_node *node, tree old_decl,\n {\n   basic_block this_block;\n \n-  node->call_for_symbol_thunks_and_aliases (convert_callers_for_node,\n-\t\t\t\t\t  &adjustments, false);\n+  node->call_for_symbol_and_aliases (convert_callers_for_node,\n+\t\t\t\t     &adjustments, false);\n \n   if (!encountered_recursive_call)\n     return;\n@@ -5016,6 +5016,7 @@ struct ipa_sra_check_caller_data\n {\n   bool has_callers;\n   bool bad_arg_alignment;\n+  bool has_thunk;\n };\n \n /* If NODE has a caller, mark that fact in DATA which is pointer to\n@@ -5035,6 +5036,11 @@ ipa_sra_check_caller (struct cgraph_node *node, void *data)\n \n   for (cgraph_edge *cs = node->callers; cs; cs = cs->next_caller)\n     {\n+      if (cs->caller->thunk.thunk_p)\n+\t{\n+\t  iscc->has_thunk = true;\n+\t  return true;\n+\t}\n       gimple call_stmt = cs->call_stmt;\n       unsigned count = gimple_call_num_args (call_stmt);\n       for (unsigned i = 0; i < count; i++)\n@@ -5131,7 +5137,7 @@ ipa_sra_preliminary_function_checks (struct cgraph_node *node)\n \n   struct ipa_sra_check_caller_data iscc;\n   memset (&iscc, 0, sizeof(iscc));\n-  node->call_for_symbol_thunks_and_aliases (ipa_sra_check_caller, &iscc, true);\n+  node->call_for_symbol_and_aliases (ipa_sra_check_caller, &iscc, true);\n   if (!iscc.has_callers)\n     {\n       if (dump_file)\n@@ -5148,6 +5154,14 @@ ipa_sra_preliminary_function_checks (struct cgraph_node *node)\n       return false;\n     }\n \n+  if (iscc.has_thunk)\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file,\n+\t\t \"A has thunk.\\n\");\n+      return false;\n+    }\n+\n   return true;\n }\n \n@@ -5173,7 +5187,7 @@ ipa_early_sra (void)\n       goto simple_out;\n     }\n \n-  if (node->call_for_symbol_thunks_and_aliases\n+  if (node->call_for_symbol_and_aliases\n        (some_callers_have_mismatched_arguments_p, NULL, true))\n     {\n       if (dump_file)\n@@ -5182,7 +5196,7 @@ ipa_early_sra (void)\n       goto simple_out;\n     }\n \n-  if (node->call_for_symbol_thunks_and_aliases\n+  if (node->call_for_symbol_and_aliases\n        (some_callers_have_no_vuse_p, NULL, true))\n     {\n       if (dump_file)"}]}