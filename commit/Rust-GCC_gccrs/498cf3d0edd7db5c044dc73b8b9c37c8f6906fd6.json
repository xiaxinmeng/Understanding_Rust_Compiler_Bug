{"sha": "498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk4Y2YzZDBlZGQ3ZGI1YzA0NGRjNzNiOGI5YzM3YzhmNjkwNmZkNg==", "commit": {"author": {"name": "Matthew Hiller", "email": "hiller@redhat.com", "date": "2001-03-29T02:32:46Z"}, "committer": {"name": "Matthew Hiller", "email": "hiller@gcc.gnu.org", "date": "2001-03-29T02:32:46Z"}, "message": "mn10300.md (cmpsi): Fix first alternative's output template.\n\n2001-03-28  Matthew Hiller  <hiller@redhat.com>\n\n\t* config/mn10300/mn10300.md (cmpsi): Fix first alternative's\n\toutput template.\n\n\t* MAINTAINERS: Added self.\n\nFrom-SVN: r40956", "tree": {"sha": "62b821db395e83b74400dea719d7f47b4f80b576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62b821db395e83b74400dea719d7f47b4f80b576"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6/comments", "author": null, "committer": null, "parents": [{"sha": "3b905056f966e7e20f93e3c059e4928723981556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b905056f966e7e20f93e3c059e4928723981556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b905056f966e7e20f93e3c059e4928723981556"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "49b1cfcabfcc74d20726546084133051e9c0a920", "filename": "MAINTAINERS", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6", "patch": "@@ -124,6 +124,7 @@ Anthony Green\t\t\t\t\tgreen@redhat.com\n Stu Grossman\t\t\t\t\tgrossman@redhat.com\n Andrew Haley\t\t\t\t\taph@redhat.com\n Aldy Hernandez\t\t\t\t\taldyh@redhat.com\n+Matthew Hiller\t\t\t\t\thiller@redhat.com\n Kazu Hirata\t\t\t\t\tkazu@hxi.com\n Manfred Hollstein\t\t\t\tmhollstein@redhat.com\n Jan Hubicka\t\t\t\t\thubicka@freesoft.cz"}, {"sha": "cc07a8b43003a12d48aeae0448d6be7b5ddc574d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6", "patch": "@@ -1,3 +1,10 @@\n+2001-03-28  Matthew Hiller  <hiller@redhat.com>\n+\n+\t* config/mn10300/mn10300.md (cmpsi): Fix first alternative's\n+\toutput template.\n+\n+\t* MAINTAINERS: Added self.\n+\t\n 2001-03-28  Richard Henderson  <rth@redhat.com>\n \n \t* Makefile.in (cs-tconfig.h): Depend on CONFIG_H, not GCONFIG_H."}, {"sha": "bf913b23b72e84ea79cbb0c41465acf1860c6106", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=498cf3d0edd7db5c044dc73b8b9c37c8f6906fd6", "patch": "@@ -709,15 +709,23 @@\n   \"* return output_tst (operands[0], insn);\"\n   [(set_attr \"cc\" \"set_znv\")])\n \n+;; Ordinarily, the cmp instruction will set the Z bit of cc0 to 1 if\n+;; its operands hold equal values, but the operands of a cmp\n+;; instruction must be distinct registers.  In the case where we'd\n+;; like to compare a register to itself, we can achieve this effect\n+;; with a btst 0,d0 instead.  (This will not alter the contents of d0\n+;; but will have the proper effect on cc0.  Using d0 is arbitrary; any\n+;; data register would work.)\n+\n (define_insn \"cmpsi\"\n   [(set (cc0)\n-\t(compare (match_operand:SI 0 \"register_operand\" \"!*d*a*x,dax\")\n-\t\t (match_operand:SI 1 \"nonmemory_operand\" \"!*0,daxi\")))]\n+\t(compare (match_operand:SI 0 \"register_operand\" \"*d*a*x,dax\")\n+\t\t (match_operand:SI 1 \"nonmemory_operand\" \"*0,daxi\")))]\n   \"\"\n   \"@\n-  add 0,%0\n+  btst 0,d0\n   cmp %1,%0\"\n-  [(set_attr \"cc\" \"invert,compare\")])\n+  [(set_attr \"cc\" \"compare,compare\")])\n \f\n ;; ----------------------------------------------------------------------\n ;; ADD INSTRUCTIONS"}]}