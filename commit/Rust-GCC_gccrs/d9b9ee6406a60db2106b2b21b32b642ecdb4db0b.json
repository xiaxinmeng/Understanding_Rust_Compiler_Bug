{"sha": "d9b9ee6406a60db2106b2b21b32b642ecdb4db0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDliOWVlNjQwNmE2MGRiMjEwNmIyYjIxYjMyYjY0MmVjZGI0ZGIwYg==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-07-26T14:35:03Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-07-26T14:35:03Z"}, "message": "Rebuilt.\n\nFrom-SVN: r21398", "tree": {"sha": "8e541a8485cee2bd7b5bf2f6cc9f6c8cc69f10ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e541a8485cee2bd7b5bf2f6cc9f6c8cc69f10ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b/comments", "author": null, "committer": null, "parents": [{"sha": "7935f0d59f439bc21eeba345bff2a319e70a1a83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7935f0d59f439bc21eeba345bff2a319e70a1a83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7935f0d59f439bc21eeba345bff2a319e70a1a83"}], "stats": {"total": 1490, "additions": 815, "deletions": 675}, "files": [{"sha": "2f1362870809ebf005aa906a9e8ed0f072f57d31", "filename": "gcc/f/BUGS", "status": "modified", "additions": 90, "deletions": 43, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b/gcc%2Ff%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b/gcc%2Ff%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FBUGS?ref=d9b9ee6406a60db2106b2b21b32b642ecdb4db0b", "patch": "@@ -15,26 +15,46 @@ separating them out.\n    For information on bugs that might afflict people who configure,\n port, build, and install `g77', *Note Problems Installing::.\n \n-   * `g77''s version of `gcc', and probably `g77' itself, cannot be\n-     reliably used with the `-O2' option (or higher) on Digital\n-     Semiconductor Alpha AXP machines.  The problem is most immediately\n-     noticed in differences discovered by `make compare' following a\n-     bootstrap build using `-O2'.  It also manifests itself as a\n-     failure to compile `DATA' statements such as `DATA R/7./'\n-     correctly; in this case, `R' might be initialized to `4.0'.\n+   * `g77' sometimes crashes when compiling code containing the\n+     construct `CMPLX(0.)' or similar.  This is a `gcc' back-end bug.\n+     It can be worked around using `-fno-emulate-complex', though that\n+     might trigger other, older bugs.  Compiling without optimization\n+     is another work-around.\n \n-     Until this bug is fixed, use only `-O1' or no optimization.\n+     Fixed in `egcs' 1.1.\n+\n+   * Automatic arrays aren't working on HP-UX systems, at least in\n+     HP-UX version 10.20.  Writing into them apparently causes\n+     over-writing of statically declared data in the main program.\n+     This probably means the arrays themselves are being\n+     under-allocated, or pointers to them being improperly handled,\n+     e.g. not passed to other procedures as they should be.\n+\n+   * Some Fortran code has been found to be miscompiled by `g77' built\n+     on `gcc' version 2.8.1 on m68k-next-nextstep3 configurations when\n+     using the `-O2' option.  Even a C function is known to miscompile\n+     on that configuration when using the `-O2 -funroll-loops' options.\n+\n+     Fixed in `egcs'.\n+\n+   * A code-generation bug afflicts Intel x86 targets when `-O2' is\n+     specified compiling, for example, an old version of the `DNRM2'\n+     routine.  The x87 coprocessor stack is being mismanaged in cases\n+     where assigned `GOTO' and `ASSIGN' are involved.\n+\n+     Fixed in `egcs' version 1.1.\n+\n+   * A compiler crash, or apparently infinite run time, can result when\n+     compiling complicated expressions involving `COMPLEX' arithmetic\n+     (especially multiplication).\n+\n+     Fixed in `egcs' version 1.1.\n \n    * Something about `g77''s straightforward handling of label\n      references and definitions sometimes prevents the GBE from\n      unrolling loops.  Until this is solved, try inserting or removing\n      `CONTINUE' statements as the terminal statement, using the `END DO'\n-     form instead, and so on.  (Probably improved, but not wholly\n-     fixed, in 0.5.21.)\n-\n-   * The `g77' command itself should more faithfully process options\n-     the way the `gcc' command does.  For example, `gcc' accepts\n-     abbreviated forms of long options, `g77' generally doesn't.\n+     form instead, and so on.\n \n    * Some confusion in diagnostics concerning failing `INCLUDE'\n      statements from within `INCLUDE''d or `#include''d files.\n@@ -117,37 +137,12 @@ port, build, and install `g77', *Note Problems Installing::.\n      information might even lead to all relevant products working\n      together properly sooner.\n \n-   * `g77' currently inserts needless padding for things like `COMMON\n-     A,IPAD' where `A' is `CHARACTER*1' and `IPAD' is `INTEGER(KIND=1)'\n-     on machines like x86, because the back end insists that `IPAD' be\n-     aligned to a 4-byte boundary, but the processor has no such\n-     requirement (though it's good for performance).\n-\n-     It is possible that this is not a real bug, and could be considered\n-     a performance feature, but it might be important to provide the\n-     ability to Fortran code to specify minimum padding for aggregate\n-     areas such as common blocks--and, certainly, there is the\n-     potential, with the current setup, for interface differences in\n-     the way such areas are laid out between `g77' and other compilers.\n-\n    * `g77' doesn't work perfectly on 64-bit configurations such as the\n-     Alpha.  This problem is expected to be largely resolved as of\n-     version 0.5.20, and further addressed by 0.5.21.  Version 0.6\n-     should solve most or all related problems (such as 64-bit machines\n-     other than Digital Semiconductor (\"DEC\") Alphas).\n+     Digital Semiconductor (\"DEC\") Alpha.\n \n-     One known bug that causes a compile-time crash occurs when\n-     compiling code such as the following with optimization:\n-\n-          SUBROUTINE CRASH (TEMP)\n-          INTEGER*2 HALF(2)\n-          REAL TEMP\n-          HALF(1) = NINT (TEMP)\n-          END\n-\n-     It is expected that a future version of `g77' will have a fix for\n-     this problem, almost certainly by the time `g77' supports the\n-     forthcoming version 2.8.0 of `gcc'.\n+     This problem is largely resolved as of version 0.5.23.  Version\n+     0.6 should solve most or all remaining problems (such as\n+     cross-compiling involving 64-bit machines).\n \n    * Maintainers of gcc report that the back end definitely has \"broken\"\n      support for `COMPLEX' types.  Based on their input, it seems many\n@@ -169,3 +164,55 @@ port, build, and install `g77', *Note Problems Installing::.\n      in the gcc back end, and it apparently occurs only when compiling\n      sufficiently complicated functions *without* the `-O' option.\n \n+     Fixed in `egcs' version 1.1.\n+\n+   * `g77' currently inserts needless padding for things like `COMMON\n+     A,IPAD' where `A' is `CHARACTER*1' and `IPAD' is `INTEGER(KIND=1)'\n+     on machines like x86, because the back end insists that `IPAD' be\n+     aligned to a 4-byte boundary, but the processor has no such\n+     requirement (though it is usually good for performance).\n+\n+     The `gcc' back end needs to provide a wider array of\n+     specifications of alignment requirements and preferences for\n+     targets, and front ends like `g77' should take advantage of this\n+     when it becomes available.\n+\n+   * The x86 target's `-malign-double' option no longer reliably aligns\n+     double-precision variables and arrays when they are placed in the\n+     stack frame.\n+\n+     This can significantly reduce the performance of some applications,\n+     even on a run-to-run basis (that is, performance measurements can\n+     vary fairly widely depending on whether frequently used variables\n+     are properly aligned, and that can change from one program run to\n+     the next, even from one procedure call to the next).\n+\n+     Versions 0.5.22 and earlier of `g77' included a patch to `gcc'\n+     that enabled this, but that patch has been deemed an improper\n+     (probably buggy) one for version 2.8 of `gcc' and for `egcs'.\n+\n+     Note that version 1.1 of `egcs' aligns double-precision variables\n+     and arrays when they are in static storage even if\n+     `-malign-double' is not specified.\n+\n+     There is ongoing investigation into how to make `-malign-double'\n+     work properly, also into how to make it unnecessary to get all\n+     double-precision variables and arrays aligned when such alignment\n+     would not violate the relevant specifications for processor and\n+     inter-procedural interfaces.\n+\n+     For a suite of programs to test double-precision alignment, see\n+     `ftp://alpha.gnu.org/gnu/g77/align/'.\n+\n+   * The `libf2c' routines that perform some run-time arithmetic on\n+     `COMPLEX' operands were modified circa version 0.5.20 of `g77' to\n+     work properly even in the presence of aliased operands.\n+\n+     While the `g77' and `netlib' versions of `libf2c' differ on how\n+     this is accomplished, the main differences are that we believe the\n+     `g77' version works properly even in the presence of *partially*\n+     aliased operands.\n+\n+     However, these modifications have reduced performance on targets\n+     such as x86, due to the extra copies of operands involved.\n+"}, {"sha": "ab0d5b43fc4332d59fc9a29ddb640244ca29742e", "filename": "gcc/f/INSTALL", "status": "modified", "additions": 553, "deletions": 630, "changes": 1183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b/gcc%2Ff%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b/gcc%2Ff%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FINSTALL?ref=d9b9ee6406a60db2106b2b21b32b642ecdb4db0b", "patch": "@@ -3,14 +3,15 @@ compiler.  Copyright (C) 1995, 1996 Free Software Foundation, Inc.  You\n may copy, distribute, and modify it freely as long as you preserve this\n copyright notice and permission notice.\n \n-Note most of this information is out of date and superceded by the EGCS\n-install procedures.  It is provided for historical reference only.\n-\n Installing GNU Fortran\n **********************\n \n    The following information describes how to install `g77'.\n \n+   Note that, for `egcs' users, much of this information is obsolete,\n+and is superceded by the `egcs' installation procedures.  Such\n+information is explicitly flagged as such.\n+\n    The information in this file generally pertains to dealing with\n *source* distributions of `g77' and `gcc'.  It is possible that some of\n this information will be applicable to some *binary* distributions of\n@@ -24,13 +25,16 @@ from source and package up as a binary distribution are ongoing.\n Prerequisites\n =============\n \n+   *Version info:* For `egcs' users, the following information is\n+superceded by the `egcs' installation instructions.\n+\n    The procedures described to unpack, configure, build, and install\n `g77' assume your system has certain programs already installed.\n \n    The following prerequisites should be met by your system before you\n follow the `g77' installation instructions:\n \n-`gzip'\n+`gzip' and `tar'\n      To unpack the `gcc' and `g77' distributions, you'll need the\n      `gunzip' utility in the `gzip' distribution.  Most UNIX systems\n      already have `gzip' installed.  If yours doesn't, you can get it\n@@ -45,24 +49,24 @@ follow the `g77' installation instructions:\n      1.2.4.  (The version of GNU `tar' used to package this release is\n      1.12.)\n \n-`gcc-2.7.2.3.tar.gz'\n+`gcc-2.8.1.tar.gz'\n      You need to have this, or some other applicable, version of `gcc'\n      on your system.  The version should be an exact copy of a\n-     distribution from the FSF.  Its size is approximately 7.1MB.\n+     distribution from the FSF.  Its size is approximately 8.4MB.\n \n-     If you've already unpacked `gcc-2.7.2.3.tar.gz' into a directory\n-     (named `gcc-2.7.2.3') called the \"source tree\" for `gcc', you can\n+     If you've already unpacked `gcc-2.8.1.tar.gz' into a directory\n+     (named `gcc-2.8.1') called the \"source tree\" for `gcc', you can\n      delete the distribution itself, but you'll need to remember to\n      skip any instructions to unpack this distribution.\n \n      Without an applicable `gcc' source tree, you cannot build `g77'.\n      You can obtain an FSF distribution of `gcc' from the FSF.\n \n-`g77-0.5.22.tar.gz'\n+`g77-0.5.24.tar.gz'\n      You probably have already unpacked this package, or you are\n      reading an advance copy of these installation instructions, which\n      are contained in this distribution.  The size of this package is\n-     approximately 1.5MB.\n+     approximately 1.4MB.\n \n      You can obtain an FSF distribution of `g77' from the FSF, the same\n      way you obtained `gcc'.\n@@ -74,46 +78,45 @@ Enough disk space\n      you install).\n \n      The sizes shown below assume all languages distributed in\n-     `gcc-2.7.2.3', plus `g77', will be built and installed.  These\n-     sizes are indicative of GNU/Linux systems on Intel x86 running\n-     COFF and on Digital Alpha (AXP) systems running ELF.  These should\n-     be fairly representative of 32-bit and 64-bit systems,\n-     respectively.\n+     `gcc-2.8.1', plus `g77', will be built and installed.  These sizes\n+     are indicative of GNU/Linux systems on Intel x86 running COFF and\n+     on Digital Alpha (AXP) systems running ELF.  These should be\n+     fairly representative of 32-bit and 64-bit systems, respectively.\n \n      Note that all sizes are approximate and subject to change without\n      notice!  They are based on preliminary releases of g77 made shortly\n      before the public beta release.\n \n-        -- `gcc' and `g77' distributions occupy 8.6MB packed, 35MB\n+        -- `gcc' and `g77' distributions occupy 10MB packed, 40MB\n           unpacked.  These consist of the source code and documentation,\n           plus some derived files (mostly documentation), for `gcc' and\n           `g77'.  Any deviations from these numbers for different kinds\n           of systems are likely to be very minor.\n \n-        -- A \"bootstrap\" build requires an additional 67.3MB for a\n-          total of 102MB on an ix86, and an additional 98MB for a total\n-          of 165MB on an Alpha.\n+        -- A \"bootstrap\" build requires an additional 91MB for a total\n+          of 132MB on an ix86, and an additional 136MB for a total of\n+          177MB on an Alpha.\n \n-        -- Removing `gcc/stage1' after the build recovers 10.7MB for a\n-          total of 91MB on an ix86, and recovers ??MB for a total of\n-          ??MB on an Alpha.\n+        -- Removing `gcc/stage1' after the build recovers 13MB for a\n+          total of 119MB on an ix86, and recovers 21MB for a total of\n+          155MB on an Alpha.\n \n           After doing this, the integrity of the build can still be\n           verified via `make compare', and the `gcc' compiler modified\n           and used to build itself for testing fairly quickly, using\n           the copy of the compiler kept in `gcc/stage2'.\n \n-        -- Removing `gcc/stage2' after the build further recovers\n-          27.3MB for a total of 64.3MB, and recovers ??MB for a total\n-          of ??MB on an Alpha.\n+        -- Removing `gcc/stage2' after the build further recovers 39MB\n+          for a total of 80MB, and recovers 57MB for a total of 98MB on\n+          an Alpha.\n \n           After doing this, the compiler can still be installed,\n           especially if GNU `make' is used to avoid gratuitous rebuilds\n           (or, the installation can be done by hand).\n \n-        -- Installing `gcc' and `g77' copies 14.9MB onto the `--prefix'\n-          disk for a total of 79.2MB on an ix86, and copies ??MB onto\n-          the `--prefix' disk for a total of ??MB on an Alpha.\n+        -- Installing `gcc' and `g77' copies 23MB onto the `--prefix'\n+          disk for a total of 103MB on an ix86, and copies 31MB onto\n+          the `--prefix' disk for a total of 130MB on an Alpha.\n \n      After installation, if no further modifications and builds of\n      `gcc' or `g77' are planned, the source and build directory may be\n@@ -139,57 +142,26 @@ Enough disk space\n      without replacing existing installed versions (assuming they have\n      different version numbers).\n \n-`patch'\n-     Although you can do everything `patch' does yourself, by hand,\n-     without much trouble, having `patch' installed makes installation\n-     of new versions of GNU utilities such as `g77' so much easier that\n-     it is worth getting.  You can obtain `patch' the same way you\n-     obtained `gcc' and `g77'.\n-\n-     In any case, you can apply patches by hand--patch files are\n-     designed for humans to read them.\n-\n-     The version of GNU `patch' used to develop this release is\n-     2.5.\n-\n `make'\n      Your system must have `make', and you will probably save yourself\n      a lot of trouble if it is GNU `make' (sometimes referred to as\n-     `gmake').\n+     `gmake').  In particular, you probably need GNU `make' to build\n+     outside the source directory (with `configure''s `--srcdir'\n+     option.)\n \n      The version of GNU `make' used to develop this release is\n      3.76.1.\n \n `cc'\n-     Your system must have a working C compiler.\n+     Your system must have a working C compiler.  If it doesn't, you\n+     might be able to obtain a prebuilt binary of some version of `gcc'\n+     from the network or on CD-ROM, perhaps from the FSF.  The best\n+     source of information about binaries is probably a system-specific\n+     Usenet news group, initially via its FAQ.\n \n      *Note Installing GNU CC: (gcc)Installation, for more information\n      on prerequisites for installing `gcc'.\n \n-`bison'\n-     If you do not have `bison' installed, you can usually work around\n-     any need for it, since `g77' itself does not use it, and `gcc'\n-     normally includes all files generated by running it in its\n-     distribution.  You can obtain `bison' the same way you obtained\n-     `gcc' and `g77'.\n-\n-     The version of GNU `bison' used to develop this release is\n-     1.25.\n-\n-     *Note Missing bison?::, for information on how to work around not\n-     having `bison'.\n-\n-`makeinfo'\n-     If you are missing `makeinfo', you can usually work around any\n-     need for it.  You can obtain `makeinfo' the same way you obtained\n-     `gcc' and `g77'.\n-\n-     The version of GNU `makeinfo' used to develop this release is\n-     1.68, from GNU `texinfo' version 3.11.\n-\n-     *Note Missing makeinfo?::, for information on getting around the\n-     lack of `makeinfo'.\n-\n `sed'\n      All UNIX systems have `sed', but some have a broken version that\n      cannot handle configuring, building, or installing `gcc' or `g77'.\n@@ -217,6 +189,61 @@ Enough disk space\n      for themselves how they want to modify the procedures described\n      below to suit the needs of their installation.\n \n+`autoconf'\n+     The version of GNU `autoconf' used to develop this release is\n+     2.12.\n+\n+     `autoconf' is not needed in the typical case of installing `gcc'\n+     and `g77'.  *Note Missing tools?::, for information on when it\n+     might be needed and how to work around not having it.\n+\n+`bison'\n+     The version of GNU `bison' used to develop this release is\n+     1.25.\n+\n+     `bison' is not needed in the typical case of installing `gcc' and\n+     `g77'.  *Note Missing tools?::, for information on when it might\n+     be needed and how to work around not having it.\n+\n+`gperf'\n+     The version of GNU `gperf' used to develop this release is\n+     2.5.\n+\n+     `gperf' is not needed in the typical case of installing `gcc' and\n+     `g77'.  *Note Missing tools?::, for information on when it might\n+     be needed and how to work around not having it.\n+\n+`makeinfo'\n+     The version of GNU `makeinfo' used to develop this release is\n+     1.68.\n+\n+     `makeinfo' is part of the GNU `texinfo' package; `makeinfo'\n+     version 1.68 is distributed as part of GNU `texinfo' version\n+     3.11.\n+\n+     `makeinfo' is not needed in the typical case of installing `gcc'\n+     and `g77'.  *Note Missing tools?::, for information on when it\n+     might be needed and how to work around not having it.\n+\n+     An up-to-date version of GNU `makeinfo' is still convenient when\n+     obtaining a new version of a GNU distribution such as `gcc' or\n+     `g77', as it allows you to obtain the `.diff.gz' file instead of\n+     the entire `.tar.gz' distribution (assuming you have installed\n+     `patch').\n+\n+`patch'\n+     The version of GNU `patch' used to develop this release is\n+     2.5.\n+\n+     Beginning with `g77' version 0.5.23, it is no longer necessary to\n+     patch the `gcc' back end to build `g77'.\n+\n+     An up-to-date version of GNU `patch' is still convenient when\n+     obtaining a new version of a GNU distribution such as `gcc' or\n+     `g77', as it allows you to obtain the `.diff.gz' file instead of\n+     the entire `.tar.gz' distribution (assuming you have installed the\n+     tools needed to rebuild derived files, such as `makeinfo').\n+\n Problems Installing\n ===================\n \n@@ -247,21 +274,12 @@ bootstrap build to automate the process of first building `gcc' using\n the working C compiler you have, then building `g77' and rebuilding\n `gcc' using that just-built `gcc', and so on.\n \n-Patching GNU CC Necessary\n-.........................\n-\n-   `g77' currently requires application of a patch file to the gcc\n-compiler tree.  The necessary patches should be folded in to the\n-mainline gcc distribution.\n+Patching GNU CC\n+...............\n \n-   Some combinations of versions of `g77' and `gcc' might actually\n-*require* no patches, but the patch files will be provided anyway as\n-long as there are more changes expected in subsequent releases.  These\n-patch files might contain unnecessary, but possibly helpful, patches.\n-As a result, it is possible this issue might never be resolved, except\n-by eliminating the need for the person configuring `g77' to apply a\n-patch by hand, by going to a more automated approach (such as\n-configure-time patching).\n+   `g77' no longer requires application of a patch file to the `gcc'\n+compiler tree.  In fact, no such patch file is distributed with `g77'.\n+This is as of version 0.5.23 and `egcs' version 1.0.\n \n Building GNU CC Necessary\n .........................\n@@ -270,31 +288,50 @@ Building GNU CC Necessary\n and other non-Fortran items, but, for now, an easy way to do that is\n not yet established.\n \n-Missing strtoul\n-...............\n+Missing strtoul or bsearch\n+..........................\n+\n+   *Version info:* The following information does not apply to the\n+`egcs' version of `g77'.\n+\n+   On SunOS4 systems, linking the `f771' program used to produce an\n+error message concerning an undefined symbol named `_strtoul', because\n+the `strtoul' library function is not provided on that system.\n+\n+   Other systems have, in the past, been reported to not provide their\n+own `strtoul' or `bsearch' function.\n+\n+   Some versions `g77' tried to default to providing bare-bones\n+versions of `bsearch' and `strtoul' automatically, but every attempt at\n+this has failed for at least one kind of system.\n+\n+   To limit the failures to those few systems actually missing the\n+required routines, the bare-bones versions are still provided, in\n+`gcc/f/proj.c', if the appropriate macros are defined.  These are\n+`NEED_BSEARCH' for `bsearch' and `NEED_STRTOUL' for `NEED_STRTOUL'.\n+\n+   Therefore, if you are sure your system is missing `bsearch' or\n+`strtoul' in its library, define the relevant macro(s) before building\n+`g77'.  This can be done by editing `gcc/f/proj.c' and inserting either\n+or both of the following `#define' statements before the comment shown:\n \n-   On SunOS4 systems, linking the `f771' program produces an error\n-message concerning an undefined symbol named `_strtoul'.\n-\n-   This is not a `g77' bug.  *Note Patching GNU Fortran::, for\n-information on a workaround provided by `g77'.\n-\n-   The proper fix is either to upgrade your system to one that provides\n-a complete ANSI C environment, or improve `gcc' so that it provides one\n-for all the languages and configurations it supports.\n-\n-   *Note:* In earlier versions of `g77', an automated workaround for\n-this problem was attempted.  It worked for systems without `_strtoul',\n-substituting the incomplete-yet-sufficient version supplied with `g77'\n-for those systems.  However, the automated workaround failed\n-mysteriously for systems that appeared to have conforming ANSI C\n-environments, and it was decided that, lacking resources to more fully\n-investigate the problem, it was better to not punish users of those\n-systems either by requiring them to work around the problem by hand or\n-by always substituting an incomplete `strtoul()' implementation when\n-their systems had a complete, working one.  Unfortunately, this meant\n-inconveniencing users of systems not having `strtoul()', but they're\n-using obsolete (and generally unsupported) systems anyway.\n+     /* Insert #define statements here.  */\n+     \n+     #define NEED_BSEARCH\n+     #define NEED_STRTOUL\n+\n+   Then, continue configuring and building `g77' as usual.\n+\n+   Or, you can define these on the `make' command line.  To build with\n+the bundled `cc' on SunOS4, for example, try:\n+     make bootstrap BOOT_CFLAGS='-O2 -g -DNEED_STRTOUL'\n+\n+   If you then encounter problems compiling `gcc/f/proj.c', it might be\n+due to a discrepancy between how `bsearch' or `strtoul' are defined by\n+that file and how they're declared by your system's header files.\n+\n+   In that case, you'll have to use some basic knowledge of C to work\n+around the problem, perhaps by editing `gcc/f/proj.c' somewhat.\n \n Cleanup Kills Stage Directories\n ...............................\n@@ -304,49 +341,37 @@ create the various `stageN' directories and their subdirectories, so\n developers and expert installers wouldn't have to reconfigure after\n cleaning up.\n \n-Missing `gperf'?\n-................\n+   That help has arrived as of version 0.5.23 of `g77' and version 1.1\n+of `egcs'.  Configuration itself no longer creates any particular\n+directories that are unique to `g77'.  The build procedures in\n+`Make-lang.in' take care of that, on demand.\n \n-   If a build aborts trying to invoke `gperf', that strongly suggests\n-an improper method was used to create the `gcc' source directory, such\n-as the UNIX `cp -r' command instead of `cp -pr', since this problem\n-very likely indicates that the date-time-modified information on the\n-`gcc' source files is incorrect.\n+LANGUAGES Macro Ignored\n+.......................\n \n-   The proper solution is to recreate the `gcc' source directory from a\n-`gcc' distribution known to be provided by the FSF.\n+   Prior to version 0.5.23 of `g77' and version 1.1 of `egcs', `g77'\n+would sometimes ignore the absence of `f77' and `F77' in the\n+`LANGUAGES' macro definition used for the `make' command being\n+processed.\n \n-   It is possible you might be able to temporarily work around the\n-problem, however, by trying these commands:\n+   As of `g77' version 0.5.23 and `egcs' version 1.1, `g77' now obeys\n+this macro in all relevant situations.\n \n-     sh# cd gcc\n-     sh# touch c-gperf.h\n-     sh#\n-\n-   These commands update the date-time-modified information for the\n-file produced by the invocation of `gperf' in the current versions of\n-`gcc', so that `make' no longer believes it needs to update it.  This\n-file should already exist in a `gcc' distribution, but mistakes made\n-when copying the `gcc' directory can leave the modification information\n-set such that the `gperf' input files look more \"recent\" than the\n-corresponding output files.\n+   However, in versions of `gcc' through 2.8.1, non-`g77' portions of\n+`gcc', such as `g++', are known to go ahead and perform various\n+language-specific activities when their respective language strings do\n+not appear in the `LANGUAGES' macro in effect during that invocation of\n+`make'.\n \n-   If the above does not work, definitely start from scratch and avoid\n-copying the `gcc' using any method that does not reliably preserve\n-date-time-modified information, such as the UNIX `cp -r' command (use\n-`cp -pr' instead).\n+   It is expected that these remaining problems will be fixed in a\n+future version of `gcc'.\n \n System-specific Problems\n ------------------------\n \n-   If your system is based on a Digital Alpha (AXP) architecture and\n-employs a 64-bit operating system (such as GNU/Linux), you might\n-consider using `egcs' instead of versions of `g77' based on versions of\n-`gcc' prior to 2.8.  `http://www.cygnus.com/egcs' for information on\n-`egcs', or obtain a copy from `ftp://egcs.cygnus.com/pub/egcs'.\n-\n-   If your system is Irix 6, to obtain a working version of `gcc',\n-`http://reality.sgi.com/knobi/gcc-2.7.2.x-on-irix-6.2-6.3'.\n+   A linker bug on some versions of AIX 4.1 might prevent building when\n+`g77' is built within `gcc'.  It might also occur when building within\n+`egcs'.  *Note LINKFAIL::.\n \n Cross-compiler Problems\n -----------------------\n@@ -382,12 +407,13 @@ reasons.\n      combinations of machines.  For example, it might not know how to\n      handle floating-point constants.\n \n-   * Improvements to the way `libf2c' is built could make building\n+   * Improvements to the way `libg2c' is built could make building\n      `g77' as a cross-compiler easier--for example, passing and using\n-     `$(LD)' and `$(AR)' in the appropriate ways.\n+     `$(LD)' and `$(AR)' in the appropriate ways.  (This is improved in\n+     the `egcs' version of `g77', especially as of version 1.1.)\n \n    * There are still some challenges putting together the right\n-     run-time libraries (needed by `libf2c') for a target system,\n+     run-time libraries (needed by `libg2c') for a target system,\n      depending on the systems involved in the configuration.  (This is\n      a general problem with cross-compilation, and with `gcc' in\n      particular.)\n@@ -453,27 +479,25 @@ reporting (immediate flagging of errors during writes) versus\n asynchronous, or, more precisely, buffered error reporting (detection\n of errors might be delayed).\n \n-   `libf2c' supports flagging write errors immediately when it is built\n-with the `ALWAYS_FLUSH' macro defined.  This results in a `libf2c' that\n+   `libg2c' supports flagging write errors immediately when it is built\n+with the `ALWAYS_FLUSH' macro defined.  This results in a `libg2c' that\n runs slower, sometimes quite a bit slower, under certain\n circumstances--for example, accessing files via the networked file\n system NFS--but the effect can be more reliable, robust file I/O.\n \n    If you know that Fortran programs requiring this level of precision\n of error reporting are to be compiled using the version of `g77' you\n are building, you might wish to modify the `g77' source tree so that\n-the version of `libf2c' is built with the `ALWAYS_FLUSH' macro defined,\n+the version of `libg2c' is built with the `ALWAYS_FLUSH' macro defined,\n enabling this behavior.\n \n-   To do this, find this line in `f/runtime/configure.in' in your `g77'\n-source tree:\n+   To do this, find this line in `f/runtime/f2c.h' in your `g77' source\n+tree:\n \n-     dnl AC_DEFINE(ALWAYS_FLUSH)\n+     /* #define ALWAYS_FLUSH */\n \n-   Remove the leading `dnl ', so the line begins with `AC_DEFINE(', and\n-run `autoconf' in that file's directory.  (Or, if you don't have\n-`autoconf', you can modify `f2c.h.in' in the same directory to include\n-the line `#define ALWAYS_FLUSH' after `#define F2C_INCLUDE'.)\n+   Remove the leading `/* ', so the line begins with `#define', and the\n+trailing ` */'.\n \n    Then build or rebuild `g77' as appropriate.\n \n@@ -558,6 +582,9 @@ support 64-bit systems.\n Quick Start\n ===========\n \n+   *Version info:* For `egcs' users, the following information is\n+superceded by the `egcs' installation instructions.\n+\n    This procedure configures, builds, and installs `g77' \"out of the\n box\" and works on most UNIX systems.  Each command is identified by a\n unique number, used in the explanatory text that follows.  For the most\n@@ -575,81 +602,51 @@ is assumed that the source distributions themselves already reside in\n `/usr/FSF', a naming convention used by the author of `g77' on his own\n system:\n \n-     /usr/FSF/gcc-2.7.2.3.tar.gz\n-     /usr/FSF/g77-0.5.22.tar.gz\n-\n-   Users of the following systems should not blindly follow these\n-quick-start instructions, because of problems their systems have coping\n-with straightforward installation of `g77':\n-\n-   * SunOS4\n-\n-   Instead, see *Note Complete Installation::, for detailed information\n-on how to configure, build, and install `g77' for your particular\n-system.  Also, see *Note Known Causes of Trouble with GNU Fortran:\n-Trouble, for information on bugs and other problems known to afflict the\n-installation process, and how to report newly discovered ones.\n+     /usr/FSF/gcc-2.8.1.tar.gz\n+     /usr/FSF/g77-0.5.24.tar.gz\n \n-   If your system is *not* on the above list, and *is* a UNIX system or\n-one of its variants, you should be able to follow the instructions\n-below.  If you vary *any* of the steps below, you might run into\n-trouble, including possibly breaking existing programs for other users\n-of your system.  Before doing so, it is wise to review the explanations\n-of some of the steps.  These explanations follow this list of steps.\n+   If you vary *any* of the steps below, you might run into trouble,\n+including possibly breaking existing programs for other users of your\n+system.  Before doing so, it is wise to review the explanations of some\n+of the steps.  These explanations follow this list of steps.\n \n      sh[ 1]# cd /usr/src\n      \n-     sh[ 2]# gunzip -c < /usr/FSF/gcc-2.7.2.3.tar.gz | tar xf -\n+     sh[ 2]# gunzip -c < /usr/FSF/gcc-2.8.1.tar.gz | tar xf -\n      [Might say \"Broken pipe\"...that is normal on some systems.]\n      \n-     sh[ 3]# gunzip -c < /usr/FSF/g77-0.5.22.tar.gz | tar xf -\n+     sh[ 3]# gunzip -c < /usr/FSF/g77-0.5.24.tar.gz | tar xf -\n      [\"Broken pipe\" again possible.]\n      \n-     sh[ 4]# ln -s gcc-2.7.2.3 gcc\n+     sh[ 4]# ln -s gcc-2.8.1 gcc\n      \n-     sh[ 5]# ln -s g77-0.5.22 g77\n+     sh[ 5]# ln -s g77-0.5.24 g77\n      \n      sh[ 6]# mv -i g77/* gcc\n      [No questions should be asked by mv here; or, you made a mistake.]\n      \n-     sh[ 7]# patch -p1 -E -V t -d gcc < gcc/f/gbe/2.7.2.3.diff\n-     [Unless patch complains about rejected patches, this step worked.]\n-     \n-     sh[ 8]# cd gcc\n-     sh[ 9]# touch f77-install-ok\n-     [Do not do the above if your system already has an f77\n-     command, unless you've checked that overwriting it\n-     is okay.]\n-     \n-     sh[10]# touch f2c-install-ok\n-     [Do not do the above if your system already has an f2c\n-     command, unless you've checked that overwriting it\n-     is okay.  Else, touch f2c-exists-ok.]\n-     \n-     sh[11]# ./configure --prefix=/usr\n+     sh[ 7]# cd gcc\n+     sh[ 8]# ./configure --prefix=/usr\n      [Do not do the above if gcc is not installed in /usr/bin.\n      You might need a different --prefix=..., as\n      described below.]\n      \n-     sh[12]# make bootstrap\n+     sh[ 9]# make bootstrap\n      [This takes a long time, and is where most problems occur.]\n      \n-     sh[13]# make compare\n-     [This verifies that the compiler is `sane'.  Only\n-     the file `f/zzz.o' (aka `tmp-foo1' and `tmp-foo2')\n-     should be in the list of object files this command\n-     prints as having different contents.  If other files\n-     are printed, you have likely found a g77 bug.]\n+     sh[10]# make compare\n+     [This verifies that the compiler is `sane'.\n+     If any files are printed, you have likely found a g77 bug.]\n      \n-     sh[14]# rm -fr stage1\n+     sh[11]# rm -fr stage1\n      \n-     sh[15]# make -k install\n+     sh[12]# make -k install\n      [The actual installation.]\n      \n-     sh[16]# g77 -v\n+     sh[13]# g77 -v\n      [Verify that g77 is installed, obtain version info.]\n      \n-     sh[17]#\n+     sh[14]#\n \n    *Note Updating Your Info Directory: Updating Documentation, for\n information on how to update your system's top-level `info' directory\n@@ -664,17 +661,17 @@ Step 1: `cd /usr/src'\n      your system knew where to look for the source code for the\n      installed version of `g77' and `gcc' in any case.\n \n-Step 3: `gunzip -d < /usr/FSF/g77-0.5.22.tar.gz | tar xf -'\n+Step 3: `gunzip -d < /usr/FSF/g77-0.5.24.tar.gz | tar xf -'\n      It is not always necessary to obtain the latest version of `g77'\n      as a complete `.tar.gz' file if you have a complete, earlier\n      distribution of `g77'.  If appropriate, you can unpack that earlier\n      version of `g77', and then apply the appropriate patches to\n      achieve the same result--a source tree containing version\n-     0.5.22 of `g77'.\n+     0.5.24 of `g77'.\n \n-Step 4: `ln -s gcc-2.7.2.3 gcc'\n+Step 4: `ln -s gcc-2.8.1 gcc'\n \n-Step 5: `ln -s g77-0.5.22 g77'\n+Step 5: `ln -s g77-0.5.24 g77'\n      These commands mainly help reduce typing, and help reduce visual\n      clutter in examples in this manual showing what to type to install\n      `g77'.\n@@ -684,102 +681,66 @@ Step 5: `ln -s g77-0.5.22 g77'\n \n Step 6: `mv -i g77/* gcc'\n      After doing this, you can, if you like, type `rm g77' and `rmdir\n-     g77-0.5.22' to remove the empty directory and the symbol link to\n+     g77-0.5.24' to remove the empty directory and the symbol link to\n      it.  But, it might be helpful to leave them around as quick\n      reminders of which version(s) of `g77' are installed on your\n      system.\n \n      *Note Unpacking::, for information on the contents of the `g77'\n      directory (as merged into the `gcc' directory).\n \n-Step 7: `patch -p1 ...'\n-     If you are using GNU `patch' version 2.5 or later, this should\n-     produce a list of files patched.  (Other versions of `patch' might\n-     not work properly.)\n-\n-     If messages about \"fuzz\", \"offset\", or especially \"reject files\"\n-     are printed, it might mean you applied the wrong patch file.  If\n-     you believe this is the case, it is best to restart the sequence\n-     after deleting (or at least renaming to unused names) the\n-     top-level directories for `g77' and `gcc' and their symbolic links.\n-\n-     After this command finishes, the `gcc' directory might have old\n-     versions of several files as saved by `patch'.  To remove these,\n-     after `cd gcc', type `rm -i *.~*~'.\n-\n-     *Note Merging Distributions::, for more information.\n-\n-     *Note:* `gcc' versions circa 2.7.2.2 and 2.7.2.3 are known to have\n-     slightly differing versions of the `gcc/ChangeLog' file, depending\n-     on how they are obtained.  You can safely ignore diagnostics\n-     `patch' reports when patching this particular file, since it is\n-     purely a documentation file for implementors.  See\n-     `gcc/f/gbe/2.7.2.3.diff' for more information.\n-\n-Step 9: `touch f77-install-ok'\n-     Don't do this if you don't want to overwrite an existing version\n-     of `f77' (such as a native compiler, or a script that invokes\n-     `f2c').  Otherwise, installation will overwrite the `f77' command\n-     and the `f77' man pages with copies of the corresponding `g77'\n-     material.\n-\n-     *Note Installing `f77': Installing f77, for more information.\n-\n-Step 10: `touch f2c-install-ok'\n-     Don't do this if you don't want to overwrite an existing\n-     installation of `libf2c' (though, chances are, you do).  Instead,\n-     `touch f2c-exists-ok' to allow the installation to continue\n-     without any error messages about `/usr/lib/libf2c.a' already\n-     existing.\n-\n-     *Note Installing `f2c': Installing f2c, for more information.\n-\n-Step 11: `./configure --prefix=/usr'\n-     This is where you specify that the `g77' executable is to be\n-     installed in `/usr/bin/', the `libf2c.a' library is to be\n-     installed in `/usr/lib/', and so on.\n+Step 8: `./configure --prefix=/usr'\n+     This is where you specify that the `g77' and `gcc' executables are\n+     to be installed in `/usr/bin/', the `g77' and `gcc' documentation\n+     is to be installed in `/usr/info/' and `/usr/man/', and so on.\n \n      You should ensure that any existing installation of the `gcc'\n-     executable is in `/usr/bin/'.  Otherwise, installing `g77' so that\n-     it does not fully replace the existing installation of `gcc' is\n-     likely to result in the inability to compile Fortran programs.\n+     executable is in `/usr/bin/'.\n+\n+     However, if that existing version of `gcc' is not 2.8.1, or if you\n+     simply wish to avoid risking overwriting it with a newly built\n+     copy of the same version, you can specify `--prefix=/usr/local'\n+     (which is the default) or some other path, and invoke the newly\n+     installed version directly from that path's `bin' directory.\n \n      *Note Where in the World Does Fortran (and GNU CC) Go?: Where to\n      Install, for more information on determining where to install\n      `g77'.  *Note Configuring gcc::, for more information on the\n      configuration process triggered by invoking the `./configure'\n      script.\n \n-Step 12: `make bootstrap'\n+Step 9: `make bootstrap'\n      *Note Installing GNU CC: (gcc)Installation, for information on the\n      kinds of diagnostics you should expect during this procedure.\n \n      *Note Building gcc::, for complete `g77'-specific information on\n      this step.\n \n-Step 13: `make compare'\n+Step 10: `make compare'\n      *Note Where to Port Bugs: Bug Lists, for information on where to\n-     report that you observed more than `f/zzz.o' having different\n-     contents during this phase.\n+     report that you observed files having different contents during\n+     this phase.\n \n      *Note How to Report Bugs: Bug Reporting, for information on *how*\n      to report bugs like this.\n \n-Step 14: `rm -fr stage1'\n+Step 11: `rm -fr stage1'\n      You don't need to do this, but it frees up disk space.\n \n-Step 15: `make -k install'\n+Step 12: `make -k install'\n      If this doesn't seem to work, try:\n \n-          make -k install install-libf77 install-f2c-all\n+          make -k install install-libf77\n+\n+     Or, make sure you're using GNU `make'.\n \n      *Note Installation of Binaries::, for more information.\n \n      *Note Updating Your Info Directory: Updating Documentation, for\n      information on entering this manual into your system's list of\n      texinfo manuals.\n \n-Step 16: `g77 -v'\n+Step 13: `g77 -v'\n      If this command prints approximately 25 lines of output, including\n      the GNU Fortran Front End version number (which should be the same\n      as the version number for the version of `g77' you just built and\n@@ -815,13 +776,23 @@ Step 16: `g77 -v'\n            Hello World # 10\n           sh#\n \n+     If invoking `g77' doesn't seem to work, the problem might be that\n+     you've installed it in a location that is not in your shell's\n+     search path.  For example, if you specified `--prefix=/gnu', and\n+     `/gnu/bin' is not in your `PATH' environment variable, you must\n+     explicitly specify the location of the compiler via `/gnu/bin/g77\n+     -o smtest smtest.f'.\n+\n      After proper installation, you don't need to keep your gcc and g77\n      source and build directories around anymore.  Removing them can\n      free up a lot of disk space.\n \n Complete Installation\n =====================\n \n+   *Version info:* For `egcs' users, the following information is\n+mostly superceded by the `egcs' installation instructions.\n+\n    Here is the complete `g77'-specific information on how to configure,\n build, and install `g77'.\n \n@@ -847,10 +818,10 @@ generally only the documentation is immediately usable.\n    A sequence of commands typically used to unpack `gcc' and `g77' is:\n \n      sh# cd /usr/src\n-     sh# gunzip -c /usr/FSF/gcc-2.7.2.3.tar.gz | tar xf -\n-     sh# gunzip -c /usr/FSF/g77-0.5.22.tar.gz | tar xf -\n-     sh# ln -s gcc-2.7.2.3 gcc\n-     sh# ln -s g77-0.5.22 g77\n+     sh# gunzip -c /usr/FSF/gcc-2.8.1.tar.gz | tar xf -\n+     sh# gunzip -c /usr/FSF/g77-0.5.24.tar.gz | tar xf -\n+     sh# ln -s gcc-2.8.1 gcc\n+     sh# ln -s g77-0.5.24 g77\n      sh# mv -i g77/* gcc\n \n    *Notes:* The commands beginning with `gunzip...' might print `Broken\n@@ -869,7 +840,7 @@ and the top level of just the `g77' source tree (prior to issuing the\n \n    All three entries should be moved (or copied) into a `gcc' source\n tree (typically named after its version number and as it appears in the\n-FSF distributions--e.g. `gcc-2.7.2.3').\n+FSF distributions--e.g. `gcc-2.8.1').\n \n    `g77/f' is the subdirectory containing all of the code,\n documentation, and other information that is specific to `g77'.  The\n@@ -881,10 +852,9 @@ from a single FSF distribution.  They also help people encountering an\n unmerged `g77' source tree for the first time.\n \n    *Note:* Please use *only* `gcc' and `g77' source trees as\n-distributed by the FSF.  Use of modified versions, such as the\n-Pentium-specific-optimization port of `gcc', is likely to result in\n-problems that appear to be in the `g77' code but, in fact, are not.  Do\n-not use such modified versions unless you understand all the\n+distributed by the FSF.  Use of modified versions is likely to result\n+in problems that appear to be in the `g77' code but, in fact, are not.\n+Do not use such modified versions unless you understand all the\n differences between them and the versions the FSF distributes--in which\n case you should be able to modify the `g77' (or `gcc') source trees\n appropriately so `g77' and `gcc' can coexist as they do in the stock\n@@ -893,22 +863,18 @@ FSF distributions.\n Merging Distributions\n ---------------------\n \n-   After merging the `g77' source tree into the `gcc' source tree, the\n-final merge step is done by applying the pertinent patches the `g77'\n-distribution provides for the `gcc' source tree.\n+   After merging the `g77' source tree into the `gcc' source tree, you\n+have put together a complete `g77' source tree.\n \n-   Read the file `gcc/f/gbe/README', and apply the appropriate patch\n-file for the version of the GNU CC compiler you have, if that exists.\n-If the directory exists but the appropriate file does not exist, you\n-are using either an old, unsupported version, or a release one that is\n-newer than the newest `gcc' version supported by the version of `g77'\n-you have.\n+   As of version 0.5.23, `g77' no longer modifies the version number of\n+`gcc', nor does it patch `gcc' itself.\n \n-   As of version 0.5.18, `g77' modifies the version number of `gcc' via\n-the pertinent patches.  This is done because the resulting version of\n-`gcc' is deemed sufficiently different from the vanilla distribution to\n-make it worthwhile to present, to the user, information signaling the\n-fact that there are some differences.\n+   `g77' still depends on being merged with an appropriate version of\n+`gcc'.  For version 0.5.24 of `g77', the specific version of `gcc'\n+supported is 2.8.1.\n+\n+   However, other versions of `gcc' might be suitable \"hosts\" for this\n+version of `g77'.\n \n    GNU version numbers make it easy to figure out whether a particular\n version of a distribution is newer or older than some other version of\n@@ -924,201 +890,37 @@ create.)\n \n    If your version of `gcc' is older than the oldest version supported\n by `g77' (as casually determined by listing the contents of\n-`gcc/f/gbe/'), you should obtain a newer, supported version of `gcc'.\n-(You could instead obtain an older version of `g77', or try and get\n-your `g77' to work with the old `gcc', but neither approach is\n+`gcc/f/INSTALL/', which contains these installation instructions in\n+plain-text format), you should obtain a newer, supported version of\n+`gcc'.  (You could instead obtain an older version of `g77', or try and\n+get your `g77' to work with the old `gcc', but neither approach is\n recommended, and you shouldn't bother reporting any bugs you find if you\n take either approach, because they're probably already fixed in the\n newer versions you're not using.)\n \n    If your version of `gcc' is newer than the newest version supported\n by `g77', it is possible that your `g77' will work with it anyway.  If\n the version number for `gcc' differs only in the PATCH field, you might\n-as well try applying the `g77' patch that is for the newest version of\n-`gcc' having the same MAJOR and MINOR fields, as this is likely to work.\n+as well try that version of `gcc'.  Since it has the same MAJOR and\n+MINOR fields, the resulting combination is likely to work.\n \n    So, for example, if a particular version of `g77' has support for\n-`gcc' versions 2.7.0 and 2.7.1, it is likely that `gcc-2.7.2' would\n-work well with `g77' by using the `2.7.1.diff' patch file provided with\n-`g77' (aside from some offsets reported by `patch', which usually are\n-harmless).\n+`gcc' versions 2.8.0 and 2.8.1, it is likely that `gcc-2.8.2' would\n+work well with `g77'.\n \n-   However, `gcc-2.8.0' would almost certainly not work with that\n-version of `g77' no matter which patch file was used, so a new version\n-of `g77' would be needed (and you should wait for it rather than\n-bothering the maintainers--*note User-Visible Changes: Changes.).\n+   However, `gcc-2.9.0' would almost certainly not work with that\n+version of `g77' without appropriate modifications, so a new version of\n+`g77' would be needed (and you should wait for it rather than bothering\n+the maintainers--*note User-Visible Changes: Changes.).\n \n    This complexity is the result of `gcc' and `g77' being separate\n distributions.  By keeping them separate, each product is able to be\n independently improved and distributed to its user base more frequently.\n \n-   However, `g77' often requires changes to contemporary versions of\n-`gcc'.  Also, the GBE interface defined by `gcc' typically undergoes\n-some incompatible changes at least every time the MINOR field of the\n-version number is incremented, and such changes require corresponding\n-changes to the `g77' front end (FFE).\n-\n-   It is hoped that the GBE interface, and the `gcc' and `g77' products\n-in general, will stabilize sufficiently for the need for hand-patching\n-to disappear.\n-\n-   If you are using GNU `patch' version 2.5 or later, this should\n-produce a list of files patched.  (Other versions of `patch' might not\n-work properly.)\n-\n-   If messages about \"fuzz\", \"offset\", or especially \"reject files\" are\n-printed, it might mean you applied the wrong patch file.  If you\n-believe this is the case, it is best to restart the sequence after\n-deleting (or at least renaming to unused names) the top-level\n-directories for `g77' and `gcc' and their symbolic links.  That is\n-because `patch' might have partially patched some `gcc' source files,\n-so reapplying the correct patch file might result in the correct\n-patches being applied incorrectly (due to the way `patch' necessarily\n-works).\n-\n-   After `patch' finishes, the `gcc' directory might have old versions\n-of several files as saved by `patch'.  To remove these, after `cd gcc',\n-type `rm -i *.~*~'.\n-\n-   *Note:* `gcc' versions circa 2.7.2.2 and 2.7.2.3 are known to have\n-slightly differing versions of the `gcc/ChangeLog' file, depending on\n-how they are obtained.  You can safely ignore diagnostics `patch'\n-reports when patching this particular file, since it is purely a\n-documentation file for implementors.  See `gcc/f/gbe/2.7.2.3.diff' for\n-more information.\n-\n-   *Note:* `g77''s configuration file `gcc/f/config-lang.in' ensures\n-that the source code for the version of `gcc' being configured has at\n-least one indication of being patched as required specifically by `g77'.\n-This configuration-time checking should catch failure to apply the\n-correct patch and, if so caught, should abort the configuration with an\n-explanation.  *Please* do not try to disable the check, otherwise `g77'\n-might well appear to build and install correctly, and even appear to\n-compile correctly, but could easily produce broken code.\n-\n-   `LC_ALL=C TZ=UTC0 diff -rcp2N' is used to create the patch files in\n-`gcc/f/gbe/'.\n-\n-Installing `f77'\n-----------------\n-\n-   You should decide whether you want installation of `g77' to also\n-install an `f77' command.  On systems with a native `f77', this is not\n-normally desired, so `g77' does not do this by default.\n-\n-   If you want `f77' installed, create the file `f77-install-ok' (e.g.\n-via the UNIX command `touch f77-install-ok') in the source or build\n-top-level directory (the same directory in which the `g77' `f'\n-directory resides, not the `f' directory itself), or edit\n-`gcc/f/Make-lang.in' and change the definition of the\n-`F77_INSTALL_FLAG' macro appropriately.\n-\n-   Usually, this means that, after typing `cd gcc', you would type\n-`touch f77-install-ok'.\n-\n-   When you enable installation of `f77', either a link to or a direct\n-copy of the `g77' command is made.  Similarly, `f77.1' is installed as\n-a man page.\n-\n-   (The `uninstall' target in the `gcc/Makefile' also tests this macro\n-and file, when invoked, to determine whether to delete the installed\n-copies of `f77' and `f77.1'.)\n-\n-   *Note:* No attempt is yet made to install a program (like a shell\n-script) that provides compatibility with any other `f77' programs.\n-Only the most rudimentary invocations of `f77' will work the same way\n-with `g77'.\n-\n-Installing `f2c'\n-----------------\n-\n-   Currently, `g77' does not include `f2c' itself in its distribution.\n-However, it does include a modified version of the `libf2c'.  This\n-version is normally compatible with `f2c', but has been modified to\n-meet the needs of `g77' in ways that might possibly be incompatible\n-with some versions or configurations of `f2c'.\n-\n-   Decide how installation of `g77' should affect any existing\n-installation of `f2c' on your system.\n-\n-   If you do not have `f2c' on your system (e.g. no `/usr/bin/f2c', no\n-`/usr/include/f2c.h', and no `/usr/lib/libf2c.a', `/usr/lib/libF77.a',\n-or `/usr/lib/libI77.a'), you don't need to be concerned with this item.\n-\n-   If you do have `f2c' on your system, you need to decide how users of\n-`f2c' will be affected by your installing `g77'.  Since `g77' is\n-currently designed to be object-code-compatible with `f2c' (with very\n-few, clear exceptions), users of `f2c' might want to combine\n-`f2c'-compiled object files with `g77'-compiled object files in a\n-single executable.\n-\n-   To do this, users of `f2c' should use the same copies of `f2c.h' and\n-`libf2c.a' that `g77' uses (and that get built as part of `g77').\n-\n-   If you do nothing here, the `g77' installation process will not\n-overwrite the `include/f2c.h' and `lib/libf2c.a' files with its own\n-versions, and in fact will not even install `libf2c.a' for use with the\n-newly installed versions of `gcc' and `g77' if it sees that\n-`lib/libf2c.a' exists--instead, it will print an explanatory message\n-and skip this part of the installation.\n-\n-   To install `g77''s versions of `f2c.h' and `libf2c.a' in the\n-appropriate places, create the file `f2c-install-ok' (e.g. via the UNIX\n-command `touch f2c-install-ok') in the source or build top-level\n-directory (the same directory in which the `g77' `f' directory resides,\n-not the `f' directory itself), or edit `gcc/f/Make-lang.in' and change\n-the definition of the `F2C_INSTALL_FLAG' macro appropriately.\n-\n-   Usually, this means that, after typing `cd gcc', you would type\n-`touch f2c-install-ok'.\n-\n-   Make sure that when you enable the overwriting of `f2c.h' and\n-`libf2c.a' as used by `f2c', you have a recent and properly configured\n-version of `bin/f2c' so that it generates code that is compatible with\n-`g77'.\n-\n-   If you don't want installation of `g77' to overwrite `f2c''s existing\n-installation, but you do want `g77' installation to proceed with\n-installation of its own versions of `f2c.h' and `libf2c.a' in places\n-where `g77' will pick them up (even when linking `f2c'-compiled object\n-files--which might lead to incompatibilities), create the file\n-`f2c-exists-ok' (e.g. via the UNIX command `touch f2c-exists-ok') in\n-the source or build top-level directory, or edit `gcc/f/Make-lang.in'\n-and change the definition of the `F2CLIBOK' macro appropriately.\n-\n-Patching GNU Fortran\n---------------------\n-\n-   If you're using a SunOS4 system, you'll need to make the following\n-change to `gcc/f/proj.h': edit the line reading\n-\n-     #define FFEPROJ_STRTOUL 1  ...\n-\n-by replacing the `1' with `0'.  Or, you can avoid editing the source by\n-adding\n-     CFLAGS='-DFFEPROJ_STRTOUL=0 -g -O'\n-   to the command line for `make' when you invoke it.  (`-g' is the\n-default for `CFLAGS'.)\n-\n-   This causes a minimal version of `strtoul()' provided as part of the\n-`g77' distribution to be compiled and linked into whatever `g77'\n-programs need it, since some systems (like SunOS4 with only the bundled\n-compiler and its runtime) do not provide this function in their system\n-libraries.\n-\n-   Similarly, a minimal version of `bsearch()' is available and can be\n-enabled by editing a line similar to the one for `strtoul()' above in\n-`gcc/f/proj.h', if your system libraries lack `bsearch()'.  The method\n-of overriding `X_CFLAGS' may also be used.\n-\n-   These are not problems with `g77', which requires an ANSI C\n-environment.  You should upgrade your system to one that provides a\n-full ANSI C environment, or encourage the maintainers of `gcc' to\n-provide one to all `gcc'-based compilers in future `gcc' distributions.\n-\n-   *Note Problems Installing::, for more information on why `strtoul()'\n-comes up missing and on approaches to dealing with this problem that\n-have already been tried.\n+   However, the GBE interface defined by `gcc' typically undergoes some\n+incompatible changes at least every time the MINOR field of the version\n+number is incremented, and such changes require corresponding changes to\n+the `g77' front end (FFE).\n \n Where in the World Does Fortran (and GNU CC) Go?\n ------------------------------------------------\n@@ -1128,8 +930,8 @@ Where in the World Does Fortran (and GNU CC) Go?\n this information is given to the configuration tool and used during the\n build itself.\n \n-   A `g77' installation necessarily requires installation of a\n-`g77'-aware version of `gcc', so that the `gcc' command recognizes\n+   A `g77' installation normally includes installation of a\n+Fortran-aware version of `gcc', so that the `gcc' command recognizes\n Fortran source files and knows how to compile them.\n \n    For this to work, the version of `gcc' that you will be building as\n@@ -1138,24 +940,27 @@ the system.\n \n    Sometimes people make the mistake of installing `gcc' as\n `/usr/local/bin/gcc', leaving an older, non-Fortran-aware version in\n-`/usr/bin/gcc'.  (Or, the opposite happens.)  This can result in `g77'\n-being unable to compile Fortran source files, because when it calls on\n-`gcc' to do the actual compilation, `gcc' complains that it does not\n-recognize the language, or the file name suffix.\n+`/usr/bin/gcc'.  (Or, the opposite happens.)  This can result in `gcc'\n+being unable to compile Fortran source files, because when the older\n+version of `gcc' is invoked, it complains that it does not recognize\n+the language, or the file name suffix.\n \n    So, determine whether `gcc' already is installed on your system,\n and, if so, *where* it is installed, and prepare to configure the new\n version of `gcc' you'll be building so that it installs over the\n existing version of `gcc'.\n \n-   You might want to back up your existing copy of `bin/gcc', and the\n-entire `lib/' directory, before you perform the actual installation (as\n-described in this manual).\n+   You might want to back up your existing copy of `/usr/bin/gcc', and\n+the entire `/usr/lib' directory, before you perform the actual\n+installation (as described in this manual).\n \n    Existing `gcc' installations typically are found in `/usr' or\n-`/usr/local'.  If you aren't certain where the currently installed\n-version of `gcc' and its related programs reside, look at the output of\n-this command:\n+`/usr/local'.  (This means the commands are installed in `/usr/bin' or\n+`/usr/local/bin', the libraries in `/usr/lib' or `/usr/local/lib', and\n+so on.)\n+\n+   If you aren't certain where the currently installed version of `gcc'\n+and its related programs reside, look at the output of this command:\n \n      gcc -v -o /tmp/delete-me -xc /dev/null -xnone\n \n@@ -1174,7 +979,8 @@ true for any package, not just `g77', though in this case it is\n intentional that `g77' overwrites `gcc' if it is already installed--it\n is unusual that the installation process for one distribution\n intentionally overwrites a program or file installed by another\n-distribution.)\n+distribution, although, in this case, `g77' is an augmentation of the\n+`gcc' distribution.)\n \n    Another reason to back up the existing version first, or make sure\n you can restore it easily, is that it might be an older version on\n@@ -1191,12 +997,12 @@ Configuring GNU CC\n    `g77' is configured automatically when you configure `gcc'.  There\n are two parts of `g77' that are configured in two different\n ways--`g77', which \"camps on\" to the `gcc' configuration mechanism, and\n-`libf2c', which uses a variation of the GNU `autoconf' configuration\n+`libg2c', which uses a variation of the GNU `autoconf' configuration\n system.\n \n    Generally, you shouldn't have to be concerned with either `g77' or\n-`libf2c' configuration, unless you're configuring `g77' as a\n-cross-compiler.  In this case, the `libf2c' configuration, and possibly\n+`libg2c' configuration, unless you're configuring `g77' as a\n+cross-compiler.  In this case, the `libg2c' configuration, and possibly\n the `g77' and `gcc' configurations as well, might need special\n attention.  (This also might be the case if you're porting `gcc' to a\n whole new system--even if it is just a new operating system on an\n@@ -1207,19 +1013,27 @@ existing, supported CPU.)\n Pay special attention to the `--prefix=' option, which you almost\n certainly will need to specify.\n \n-   (Note that `gcc' installation information is provided as a straight\n-text file in `gcc/INSTALL'.)\n+   (Note that `gcc' installation information is provided as a\n+plain-text file in `gcc/INSTALL'.)\n \n    The information printed by the invocation of `./configure' should\n show that the `f' directory (the Fortran language) has been configured.\n If it does not, there is a problem.\n \n-   *Note:* Configuring with the `--srcdir' argument is known to work\n-with GNU `make', but it is not known to work with other variants of\n-`make'.  Irix5.2 and SunOS4.1 versions of `make' definitely won't work\n-outside the source directory at present.  `g77''s portion of the\n-`configure' script issues a warning message about this when you\n-configure for building binaries outside the source directory.\n+   *Note:* Configuring with the `--srcdir' argument, or by starting in\n+an empty directory and typing a command such as `../gcc/configure' to\n+build with separate build and source directories, is known to work with\n+GNU `make', but it is known to not work with other variants of `make'.\n+Irix5.2 and SunOS4.1 versions of `make' definitely won't work outside\n+the source directory at present.\n+\n+   `g77''s portion of the `configure' script used to issue a warning\n+message about this when configuring for building binaries outside the\n+source directory, but no longer does this as of version 0.5.23.\n+\n+   Instead, `g77' simply rejects most common attempts to build it using\n+a non-GNU `make' when the build directory is not the same as the source\n+directory, issuing an explanatory diagnostic.\n \n Building GNU CC\n ---------------\n@@ -1232,14 +1046,14 @@ or `gcc/Makefile', but if you do that, you're on your own.  One change\n is almost *certainly* going to cause failures: removing `c' or `f77'\n from the definition of the `LANGUAGES' macro.\n \n-   After configuring `gcc', which configures `g77' and `libf2c'\n+   After configuring `gcc', which configures `g77' and `libg2c'\n automatically, you're ready to start the actual build by invoking\n `make'.\n \n-   *Note:* You *must* have run `./configure' before you run `make',\n-even if you're using an already existing `gcc' development directory,\n-because `./configure' does the work to recognize that you've added\n-`g77' to the configuration.\n+   *Note:* You *must* have run the `configure' script in `gcc' before\n+you run `make', even if you're using an already existing `gcc'\n+development directory, because `./configure' does the work to recognize\n+that you've added `g77' to the configuration.\n \n    There are two general approaches to building GNU CC from scratch:\n \n@@ -1285,12 +1099,6 @@ large number of object files to ensure they're identical).\n you can type `rm -fr stage1' to remove the binaries built during Stage\n 1.\n \n-   *Note:* *Note Object File Differences::, for information on expected\n-differences in object files produced during Stage 2 and Stage 3 of a\n-bootstrap build.  These differences will be encountered as a result of\n-using the `make compare' or similar command sequence recommended by the\n-GNU CC installation documentation.\n-\n    Also, *Note Installing GNU CC: (gcc)Installation, for important\n information on building `gcc' that is not described in this `g77'\n manual.  For example, explanations of diagnostic messages and whether\n@@ -1305,15 +1113,10 @@ object-compatible with the version of `gcc' you want to build as part\n of building `g77', you can save time and disk space by doing a straight\n build.\n \n-   To build just the C and Fortran compilers and the necessary run-time\n+   To build just the compilers along with the necessary run-time\n libraries, issue the following command:\n \n-     make -k CC=gcc LANGUAGES=f77 all g77\n-\n-   (The `g77' target is necessary because the `gcc' build procedures\n-apparently do not automatically build command drivers for languages in\n-subdirectories.  It's the `all' target that triggers building\n-everything except, apparently, the `g77' command itself.)\n+     make -k CC=gcc\n \n    If you run into problems using this method, you have two options:\n \n@@ -1328,7 +1131,8 @@ Fortran: Trouble.\n \n    However, understand that many problems preventing a straight build\n from working are not `g77' problems, and, in such cases, are not likely\n-to be addressed in future versions of `g77'.\n+to be addressed in future versions of `g77'.  Consider treating them as\n+`gcc' bugs instead.\n \n Pre-installation Checks\n -----------------------\n@@ -1341,52 +1145,51 @@ work.\n them when they work:\n \n      sh# cd /usr/src/gcc\n-     sh# ./g77 --driver=./xgcc -B./ -v\n-     g77 version 0.5.22\n-      ./xgcc -B./ -v -fnull-version -o /tmp/gfa18047 ...\n+     sh# ./g77 -B./ -v\n+     g77 version 0.5.24\n+     Driving: ./g77 -B./ -v -c -xf77-version /dev/null -xnone\n      Reading specs from ./specs\n-     gcc version 2.7.2.3.f.2\n-      ./cpp -lang-c -v -isystem ./include -undef ...\n-     GNU CPP version 2.7.2.3.f.2 (Linux/Alpha)\n+     gcc version 2.8.1\n+      cpp -lang-c -v -isystem ./include -undef -D__GNUC__=2 ...\n+     GNU CPP version 2.8.1 (Alpha GNU/Linux with ELF)\n      #include \"...\" search starts here:\n      #include <...> search starts here:\n-      ./include\n-      /usr/local/include\n-      /usr/alpha-unknown-linux/include\n-      /usr/lib/gcc-lib/alpha-unknown-linux/2.7.2.3.f.2/include\n+      include\n+      /usr/alpha-linux/include\n+      /usr/lib/gcc-lib/alpha-linux/2.8.1/include\n       /usr/include\n      End of search list.\n-      ./f771 /tmp/cca18048.i -fset-g77-defaults -quiet -dumpbase ...\n-     GNU F77 version 2.7.2.3.f.2 (Linux/Alpha) compiled ...\n-     GNU Fortran Front End version 0.5.22 compiled: ...\n-      as -nocpp -o /tmp/cca180481.o /tmp/cca18048.s\n-      ld -G 8 -O1 -o /tmp/gfa18047 /usr/lib/crt0.o -L. ...\n-     __G77_LIBF77_VERSION__: 0.5.22\n-     @(#)LIBF77 VERSION 19970404\n-     __G77_LIBI77_VERSION__: 0.5.22\n-     @(#) LIBI77 VERSION pjw,dmg-mods 19970816\n-     __G77_LIBU77_VERSION__: 0.5.22\n-     @(#) LIBU77 VERSION 19970609\n+      ./f771 -fnull-version -quiet -dumpbase g77-version.f -version ...\n+     GNU F77 version 2.8.1 (alpha-linux) compiled ...\n+     GNU Fortran Front End version 0.5.24\n+      as -nocpp -o /tmp/cca14485.o /tmp/cca14485.s\n+      ld -m elf64alpha -G 8 -O1 -dynamic-linker /lib/ld-linux.so.2 ...\n+      /tmp/cca14485\n+     __G77_LIBF77_VERSION__: 0.5.24\n+     @(#)LIBF77 VERSION 19970919\n+     __G77_LIBI77_VERSION__: 0.5.24\n+     @(#) LIBI77 VERSION pjw,dmg-mods 19980405\n+     __G77_LIBU77_VERSION__: 0.5.24\n+     @(#) LIBU77 VERSION 19970919\n      sh# ./xgcc -B./ -v -o /tmp/delete-me -xc /dev/null -xnone\n      Reading specs from ./specs\n-     gcc version 2.7.2.3.f.2\n+     gcc version 2.8.1\n       ./cpp -lang-c -v -isystem ./include -undef ...\n-     GNU CPP version 2.7.2.3.f.2 (Linux/Alpha)\n+     GNU CPP version 2.8.1 (Alpha GNU/Linux with ELF)\n      #include \"...\" search starts here:\n      #include <...> search starts here:\n-      ./include\n-      /usr/local/include\n-      /usr/alpha-unknown-linux/include\n-      /usr/lib/gcc-lib/alpha-unknown-linux/2.7.2.3.f.2/include\n+      include\n+      /usr/alpha-linux/include\n+      /usr/lib/gcc-lib/alpha-linux/2.8.1/include\n       /usr/include\n      End of search list.\n       ./cc1 /tmp/cca18063.i -quiet -dumpbase null.c -version ...\n-     GNU C version 2.7.2.3.f.2 (Linux/Alpha) compiled ...\n+     GNU C version 2.8.1 (alpha-linux) compiled ...\n       as -nocpp -o /tmp/cca180631.o /tmp/cca18063.s\n-      ld -G 8 -O1 -o /tmp/delete-me /usr/lib/crt0.o -L. ...\n-     /usr/lib/crt0.o: In function `__start':\n-     crt0.S:110: undefined reference to `main'\n-     /usr/lib/crt0.o(.lita+0x28): undefined reference to `main'\n+      ld -m elf64alpha -G 8 -O1 -dynamic-linker /lib/ld-linux.so.2 ...\n+     /usr/lib/crt1.o: In function `_start':\n+     ../sysdeps/alpha/elf/start.S:77: undefined reference to `main'\n+     ../sysdeps/alpha/elf/start.S:77: undefined reference to `main'\n      sh#\n \n    (Note that long lines have been truncated, and `...'  used to\n@@ -1410,7 +1213,7 @@ use the following commands to invoke them.\n \n    To invoke `g77', type:\n \n-     /usr/src/gcc/g77 --driver=/usr/src/gcc/xgcc -B/usr/src/gcc/ ...\n+     /usr/src/gcc/g77 -B/usr/src/gcc/ ...\n \n    To invoke `gcc', type:\n \n@@ -1422,7 +1225,7 @@ Installation of Binaries\n    After configuring, building, and testing `g77' and `gcc', when you\n are ready to install them on your system, type:\n \n-     make -k CC=gcc LANGUAGES=f77 install\n+     make -k CC=gcc install\n \n    As described in *Note Installing GNU CC: (gcc)Installation, the\n values for the `CC' and `LANGUAGES' macros should be the same as those\n@@ -1434,83 +1237,179 @@ might have to supply the same definitions you used when building the\n final stage) or if you deviated from the instructions for a straight\n build.\n \n-   If the above command does not install `libf2c.a' as expected, try\n+   If the above command does not install `libg2c.a' as expected, try\n this:\n \n-     make -k ... install install-libf77 install-f2c-all\n+     make -k ... install install-libf77\n \n    We don't know why some non-GNU versions of `make' sometimes require\n this alternate command, but they do.  (Remember to supply the\n-appropriate definitions for `CC' and `LANGUAGES' where you see `...' in\n-the above command.)\n+appropriate definition for `CC' where you see `...' in the above\n+command.)\n \n    Note that using the `-k' option tells `make' to continue after some\n installation problems, like not having `makeinfo' installed on your\n system.  It might not be necessary for your system.\n \n+   *Note:* `g77' no longer installs files not directly part of `g77',\n+such as `/usr/bin/f77', `/usr/lib/libf2c.a', and `/usr/include/f2c.h',\n+or their `/usr/local' equivalents.\n+\n+   *Note Distributing Binaries::, for information on how to accommodate\n+systems with no existing non-`g77' `f77' compiler and systems with\n+`f2c' installed.\n+\n Updating Your Info Directory\n ----------------------------\n \n    As part of installing `g77', you should make sure users of `info'\n-can easily access this manual on-line.  Do this by making sure a line\n-such as the following exists in `/usr/info/dir', or in whatever file is\n-the top-level file in the `info' directory on your system (perhaps\n-`/usr/local/info/dir':\n+can easily access this manual on-line.\n+\n+   `g77' does this automatically by invoking the `install-info' command\n+when you use `make install' to install `g77'.\n+\n+   If that fails, or if the `info' directory it updates is not the one\n+normally accessed by users, consider invoking it yourself.  For example:\n+\n+     install-info --info-dir=/usr/info /usr/info/g77.info\n+\n+   The above example assumes the `g77' documentation already is\n+installed in `/usr/info' and that `/usr/info/dir' is the file you wish\n+to update.  Adjust the command accordingly, if those assumptions are\n+wrong.\n+\n+Missing tools?\n+--------------\n+\n+   A build of `gcc' might fail due to one or more tools being called\n+upon by `make' (during the build or install process), when those tools\n+are not installed on your system.\n+\n+   This situation can result from any of the following actions\n+(performed by you or someone else):\n+\n+   * Changing the source code or documentation yourself (as a developer\n+     or technical writer).\n+\n+   * Applying a patch that changes the source code or documentation\n+     (including, sometimes, the official patches distributed by the\n+     FSF).\n+\n+   * Deleting the files that are created by the (missing) tools.\n+\n+     The `make maintainer-clean' command is supposed to delete these\n+     files, so invoking this command without having all the appropriate\n+     tools installed is not recommended.\n+\n+   * Creating the source directory using a method that does not\n+     preserve the date-time-modified information in the original\n+     distribution.\n+\n+     For example, the UNIX `cp -r' command copies a directory tree\n+     without preserving the date-time-modified information.  Use `cp\n+     -pr' instead.\n+\n+   The reason these activities cause `make' to try and invoke tools\n+that it probably wouldn't when building from a perfectly \"clean\" source\n+directory containing `gcc' and `g77' is that some files in the source\n+directory (and the corresponding distribution) aren't really source\n+files, but *derived* files that are produced by running tools with the\n+corresponding source files as input.  These derived files \"depend\", in\n+`make' terminology, on the corresponding source files.\n \n-     * g77: (g77).           The GNU Fortran programming language.\n+   `make' determines that a file that depends on another needs to be\n+updated if the date-time-modified information for the source file shows\n+that it is newer than the corresponding information for the derived\n+file.\n \n-   If the menu in `dir' is organized into sections, `g77' probably\n-belongs in a section with a name such as one of the following:\n+   If it makes that determination, `make' runs the appropriate commands\n+(specified in the \"Makefile\") to update the derived file, and this\n+process typically calls upon one or more installed tools to do the work.\n \n-   * Fortran Programming\n+   The \"safest\" approach to dealing with this situation is to recreate\n+the `gcc' and `g77' source directories from complete `gcc' and `g77'\n+distributions known to be provided by the FSF.\n \n-   * Writing Programs\n+   Another fairly \"safe\" approach is to simply install the tools you\n+need to complete the build process.  This is especially appropriate if\n+you've changed the source code or applied a patch to do so.\n \n-   * Programming Languages\n+   However, if you're certain that the problem is limited entirely to\n+incorrect date-time-modified information, that there are no\n+discrepancies between the contents of source files and files derived\n+from them in the source directory, you can often update the\n+date-time-modified information for the derived files to work around the\n+problem of not having the appropriate tools installed.\n \n-   * Languages Other Than C\n+   On UNIX systems, the simplest way to update the date-time-modified\n+information of a file is to use the use the `touch' command.\n \n-   * Scientific/Engineering Tools\n+   How to use `touch' to update the derived files updated by each of\n+the tools is described below.  *Note:* New versions of `g77' might\n+change the set of files it generates by invoking each of these tools.\n+If you cannot figure out for yourself how to handle such a situation,\n+try an older version of `g77' until you find someone who can (or until\n+you obtain and install the relevant tools).\n \n-   * GNU Compilers\n+Missing `autoconf'?\n+...................\n+\n+   If you cannot install `autoconf', make sure you have started with a\n+*fresh* distribution of `gcc' and `g77', do *not* do `make\n+maintainer-clean', and, to ensure that `autoconf' is not invoked by\n+`make' during the build, type these commands:\n+\n+     sh# cd gcc/f/runtime\n+     sh# touch configure libU77/configure\n+     sh# cd ../../..\n+     sh#\n \n Missing `bison'?\n-----------------\n+................\n \n    If you cannot install `bison', make sure you have started with a\n-*fresh* distribution of `gcc', do *not* do `make maintainer-clean' (in\n-other versions of `gcc', this was called `make realclean'), and, to\n-ensure that `bison' is not invoked by `make' during the build, type\n-these commands:\n+*fresh* distribution of `gcc', do *not* do `make maintainer-clean',\n+and, to ensure that `bison' is not invoked by `make' during the build,\n+type these commands:\n \n      sh# cd gcc\n-     sh# touch c-parse.c c-parse.h cexp.c\n+     sh# touch bi-parser.c bi-parser.h c-parse.c c-parse.h cexp.c\n      sh# touch cp/parse.c cp/parse.h objc-parse.c\n+     sh# cd ..\n      sh#\n \n-   These commands update the date-time-modified information for all the\n-files produced by the various invocations of `bison' in the current\n-versions of `gcc', so that `make' no longer believes it needs to update\n-them.  All of these files should already exist in a `gcc' distribution,\n-but the application of patches to upgrade to a newer version can leave\n-the modification information set such that the `bison' input files look\n-more \"recent\" than the corresponding output files.\n+Missing `gperf'?\n+................\n \n-   *Note:* New versions of `gcc' might change the set of files it\n-generates by invoking `bison'--if you cannot figure out for yourself\n-how to handle such a situation, try an older version of `gcc' until you\n-find someone who can (or until you obtain and install `bison').\n+   If you cannot install `gperf', make sure you have started with a\n+*fresh* distribution of `gcc', do *not* do `make maintainer-clean',\n+and, to ensure that `gperf' is not invoked by `make' during the build,\n+type these commands:\n+\n+     sh# cd gcc\n+     sh# touch c-gperf.h\n+     sh# cd ..\n+     sh#\n \n Missing `makeinfo'?\n--------------------\n+...................\n+\n+   If `makeinfo' is needed but unavailable when installing (via `make\n+install'), some files, like `libg2c.a', might not be installed, because\n+once `make' determines that it cannot invoke `makeinfo', it cancels any\n+further processing.\n \n-   If you cannot install `makeinfo', either use the `-k' option when\n-invoking make to specify any of the `install' or related targets, or\n-specify `MAKEINFO=echo' on the `make' command line.\n+   If you cannot install `makeinfo', an easy work-around is to specify\n+`MAKEINFO=true' on the `make' command line, or to specify the `-k'\n+option (`make -k install').\n \n-   If you fail to do one of these things, some files, like `libf2c.a',\n-might not be installed, because the failed attempt by `make' to invoke\n-`makeinfo' causes it to cancel any further processing.\n+   Another approach is to force the relevant files to be up-to-date by\n+typing these commands and then re-trying the installation step:\n+\n+     sh# cd gcc\n+     sh# touch f/g77.info f/BUGS f/INSTALL f/NEWS\n+     sh# cd ..\n+     sh#\n \n Distributing Binaries\n =====================\n@@ -1526,33 +1425,62 @@ installed.\n where `g77' could be considered the native compiler for Fortran and\n `gcc' for C, etc.), you should definitely configure `g77' for\n installation in `/usr/bin' instead of `/usr/local/bin'.  Specify the\n-`--prefix=/usr' option when running `./configure'.  You might also want\n-to set up the distribution so the `f77' command is a link to\n-`g77'--just make an empty file named `f77-install-ok' in the source or\n-build directory (the one in which the `f' directory resides, not the\n-`f' directory itself) when you specify one of the `install' or\n-`uninstall' targets in a `make' command.\n-\n-   For a system that might already have `f2c' installed, you definitely\n-will want to make another empty file (in the same directory) named\n-either `f2c-exists-ok' or `f2c-install-ok'.  Use the former if you\n-don't want your distribution to overwrite `f2c'-related files in\n-existing systems; use the latter if you want to improve the likelihood\n-that users will be able to use both `f2c' and `g77' to compile code for\n-a single program without encountering link-time or run-time\n-incompatibilities.\n-\n-   (Make sure you clearly document, in the \"advertising\" for your\n+`--prefix=/usr' option when running `./configure'.\n+\n+   You might also want to set up the distribution so the `f77' command\n+is a link to `g77', although a script that accepts \"classic\" UNIX `f77'\n+options and translates the command-line to the appropriate `g77'\n+command line would be more appropriate.  If you do this, *please* also\n+provide a \"man page\" in `man/man1/f77.1' describing the command.  (A\n+link to `man/man1/g77.1' is appropriate if `bin/f77' is a link to\n+`bin/g77'.)\n+\n+   For a system that might already have `f2c' installed, consider\n+whether inter-operation with `g77' will be important to users of `f2c'\n+on that system.  If you want to improve the likelihood that users will\n+be able to use both `f2c' and `g77' to compile code for a single program\n+without encountering link-time or run-time incompatibilities, make sure\n+that, whenever they intend to combine `f2c'-produced code with\n+`g77'-produced code in an executable, they:\n+\n+   * Use the `lib/gcc-lib/.../include/g2c.h' file generated by the\n+     `g77' build in place of the `f2c.h' file that normally comes with\n+     `f2c' (or versions of `g77' prior to 0.5.23) when compiling *all*\n+     of the `f2c'-produced C code\n+\n+   * Link to the `lib/gcc-lib/.../libg2c.a' library built by the `g77'\n+     build instead of the `libf2c.a' library that normally comes with\n+     `f2c' (or versions of `g77' prior to 0.5.23)\n+\n+   How you choose to effect the above depends on whether the existing\n+installation of `f2c' must be maintained.\n+\n+   In any case, it is important to try and ensure that the installation\n+keeps working properly even after subsequent re-installation of `f2c',\n+which probably involves overwriting `/usr/local/lib/libf2c.a' and\n+`/usr/local/include/f2c.h', or similar.\n+\n+   At least, copying `libg2c.a' and `g2c.h' into the appropriate\n+\"public\" directories allows users to more easily select the version of\n+`libf2c' they wish to use for a particular build.  The names are\n+changed by `g77' to make this coexistence easier to maintain; even if\n+`f2c' is installed later, the `g77' files normally installed by its\n+installation process aren't disturbed.  Use of symbolic links from one\n+set of files to another might result in problems after a subsequent\n+reinstallation of either `f2c' or `g77', so be sure to alert users of\n+your distribution accordingly.\n+\n+   (Make sure you clearly document, in the description of your\n distribution, how installation of your distribution will affect\n existing installations of `gcc', `f2c', `f77', `libf2c.a', and so on.\n-Similarly, you should clearly document any requirements you assume are\n-met by users of your distribution.)\n+Similarly, you should clearly document any requirements you assume will\n+be met by users of your distribution.)\n \n    For other systems with native `f77' (and `cc') compilers, configure\n `g77' as you (or most of your audience) would configure `gcc' for their\n installations.  Typically this is for installation in `/usr/local', and\n-would not include a copy of `g77' named `f77', so users could still use\n-the native `f77'.\n+would not include a new version of `/usr/bin/f77' or\n+`/usr/local/bin/f77', so users could still use the native `f77'.\n \n    In any case, for `g77' to work properly, you *must* ensure that the\n binaries you distribute include:\n@@ -1561,17 +1489,11 @@ binaries you distribute include:\n      This is the command most users use to compile Fortran.\n \n `bin/gcc'\n-     This is the command all users use to compile Fortran, either\n-     directly or indirectly via the `g77' command.  The `bin/gcc'\n-     executable file must have been built from a `gcc' source tree into\n-     which a `g77' source tree was merged and configured, or it will\n-     not know how to compile Fortran programs.\n-\n-`bin/f77'\n-     In installations with no non-GNU native Fortran compiler, this is\n-     the same as `bin/g77'.  Otherwise, it should be omitted from the\n-     distribution, so the one on already on a particular system does\n-     not get overwritten.\n+     This is the command some users use to compile Fortran, typically\n+     when compiling programs written in other languages at the same\n+     time.  The `bin/gcc' executable file must have been built from a\n+     `gcc' source tree into which a `g77' source tree was merged and\n+     configured, or it will not know how to compile Fortran programs.\n \n `info/g77.info*'\n      This is the documentation for `g77'.  If it is not included, users\n@@ -1591,35 +1513,36 @@ binaries you distribute include:\n      Documentation.\n \n `man/man1/g77.1'\n-     This is the short man page for `g77'.  It is out of date, but you\n-     might as well include it for people who really like man pages.\n+     This is the short man page for `g77'.  It is not always kept\n+     up-to-date, but you might as well include it for people who really\n+     like \"man\" pages.\n \n-`man/man1/f77.1'\n-     In installations where `f77' is the same as `g77', this is the\n-     same as `man/man1/g77.1'.  Otherwise, it should be omitted from\n-     the distribution, so the one already on a particular system does\n-     not get overwritten.\n+`lib/gcc-lib'\n+     This is the directory containing the \"private\" files installed by\n+     and for `gcc', `g77', `g++', and other GNU compilers.\n \n `lib/gcc-lib/.../f771'\n      This is the actual Fortran compiler.\n \n-`lib/gcc-lib/.../libf2c.a'\n+`lib/gcc-lib/.../libg2c.a'\n      This is the run-time library for `g77'-compiled programs.\n \n    Whether you want to include the slightly updated (and possibly\n improved) versions of `cc1', `cc1plus', and whatever other binaries get\n rebuilt with the changes the GNU Fortran distribution makes to the GNU\n back end, is up to you.  These changes are highly unlikely to break any\n-compilers, and it is possible they'll fix back-end bugs that can be\n-demonstrated using front ends other than GNU Fortran's.\n+compilers, because they involve doing things like adding to the list of\n+acceptable compiler options (so, for example, `cc1plus' accepts, and\n+ignores, options that only `f771' actually processes).\n \n    Please assure users that unless they have a specific need for their\n existing, older versions of `gcc' command, they are unlikely to\n experience any problems by overwriting it with your version--though\n they could certainly protect themselves by making backup copies first!\n-Otherwise, users might try and install your binaries in a \"safe\" place,\n-find they cannot compile Fortran programs with your distribution\n-(because, perhaps, they're picking up their old version of the `gcc'\n+\n+   Otherwise, users might try and install your binaries in a \"safe\"\n+place, find they cannot compile Fortran programs with your distribution\n+(because, perhaps, they're invoking their old version of the `gcc'\n command, which does not recognize Fortran programs), and assume that\n your binaries (or, more generally, GNU Fortran distributions in\n general) are broken, at least for their system."}, {"sha": "2cc6cbfe5a236a8a56c16db8505fc6d4d4c4557c", "filename": "gcc/f/NEWS", "status": "modified", "additions": 172, "deletions": 2, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b/gcc%2Ff%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b9ee6406a60db2106b2b21b32b642ecdb4db0b/gcc%2Ff%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FNEWS?ref=d9b9ee6406a60db2106b2b21b32b642ecdb4db0b", "patch": "@@ -11,9 +11,10 @@ with the most recent version first.\n \n    The changes are generally listed in order:\n \n-  1. Code-generation and run-time-library bugs\n+  1. Code-generation and run-time-library bug-fixes\n \n-  2. Compiler and run-time-library crashes involving valid code\n+  2. Compiler and run-time-library crashes involving valid code that\n+     have been fixed\n \n   3. New features\n \n@@ -28,6 +29,175 @@ with the most recent version first.\n    This order is not strict--for example, some items involve a\n combination of these elements.\n \n+In `egcs' 1.1:\n+==============\n+\n+   * `g77' no longer produces incorrect code and initial values for\n+     `EQUIVALENCE' and `COMMON' aggregates that, due to \"unnatural\"\n+     ordering of members vis-a-vis their types, require initial padding.\n+\n+   * `g77' no longer crashes when compiling code containing\n+     specification statements such as `INTEGER(KIND=7) PTR'.\n+\n+   * `g77' now treats `%LOC(EXPR)' and `LOC(EXPR)' as \"ordinary\"\n+     expressions when they are used as arguments in procedure calls.\n+     This change applies only to global (filewide) analysis, making it\n+     consistent with how `g77' actually generates code for these cases.\n+\n+     Previously, `g77' treated these expressions as denoting special\n+     \"pointer\" arguments for the purposes of filewide analysis.\n+\n+   * The `g77' driver now ensures that `-lg2c' is specified in the link\n+     phase prior to any occurrence of `-lm'.  This prevents\n+     accidentally linking to a routine in the SunOS4 `-lm' library when\n+     the generated code wants to link to the one in `libf2c' (`libg2c').\n+\n+   * `g77' emits more debugging information when `-g' is used.\n+\n+     This new information allows, for example, `which __g77_length_a'\n+     to be used in `gdb' to determine the type of the phantom length\n+     argument supplied with `CHARACTER' variables.\n+\n+     This information pertains to internally-generated type, variable,\n+     and other information, not to the longstanding deficiencies\n+     vis-a-vis `COMMON' and `EQUIVALENCE'.\n+\n+   * The F90 `DATE_AND_TIME' intrinsic now is supported.\n+\n+   * The F90 `SYSTEM_CLOCK' intrinsic allows the optional arguments\n+     (except for the `Count' argument) to be omitted.\n+\n+   * Upgrade to `libf2c' as of 1998-06-18.\n+\n+   * Improve documentation and indexing.\n+\n+In 0.5.23:\n+==========\n+\n+   * This release contains several regressions against version 0.5.22\n+     of `g77', due to using the \"vanilla\" `gcc' back end instead of\n+     patching it to fix a few bugs and improve performance in a few\n+     cases.\n+\n+     *Note Actual Bugs We Haven't Fixed Yet: Actual Bugs, available in\n+     plain-text format in `gcc/f/BUGS', for information on the known\n+     bugs in this version, including the regressions.\n+\n+     Features that have been dropped from this version of `g77' due to\n+     their being implemented via `g77'-specific patches to the `gcc'\n+     back end in previous releases include:\n+\n+        - Support for `__restrict__' keyword, the options\n+          `-fargument-alias', `-fargument-noalias', and\n+          `-fargument-noalias-global', and the corresponding\n+          alias-analysis code.\n+\n+          (Version 1.0.1 of `egcs' has the alias-analysis code, but not\n+          the `__restrict__' keyword.  `egcs' `g77' users benefit from\n+          the alias-analysis code despite the lack of the\n+          `__restrict__' keyword, which is a C-language construct.)\n+\n+        - Support for the GNU compiler options `-fmove-all-movables',\n+          `-freduce-all-givs', and `-frerun-loop-opt'.\n+\n+          (Version 1.0.1 of `egcs' supports these options.  `g77' users\n+          of `egcs' benefit from them even if they are not explicitly\n+          specified, because the defaults are optimized for `g77'\n+          users.)\n+\n+        - Support for the `-W' option warning about integer division by\n+          zero.\n+\n+        - The Intel x86-specific option `-malign-double' applying to\n+          stack-allocated data as well as statically-allocate data.\n+\n+     Note that the `gcc/f/gbe/' subdirectory has been removed from this\n+     distribution as a result of `g77' no longer including patches for\n+     the `gcc' back end.\n+\n+   * Fix bugs in the `libU77' intrinsic `HostNm' that wrote one byte\n+     beyond the end of its `CHARACTER' argument, and in the `libU77'\n+     intrinsics `GMTime' and `LTime' that overwrote their arguments.\n+\n+   * Support `gcc' version 2.8, and remove support for prior versions\n+     of `gcc'.\n+\n+   * Remove support for the `--driver' option, as `g77' now does all\n+     the driving, just like `gcc'.\n+\n+   * `CASE DEFAULT' no longer crashes `g77'.\n+\n+   * Valid combinations of `EXTERNAL', passing that external as a dummy\n+     argument without explicitly giving it a type, and, in a subsequent\n+     program unit, referencing that external as an external function\n+     with a different type no longer crash `g77'.\n+\n+   * `g77' no longer installs the `f77' command and `f77.1' man page in\n+     the `/usr' or `/usr/local' heirarchy, even if the `f77-install-ok'\n+     file exists in the source or build directory.  See the\n+     installation documentation for more information.\n+\n+   * `g77' no longer installs the `libf2c.a' library and `f2c.h'\n+     include file in the `/usr' or `/usr/local' heirarchy, even if the\n+     `f2c-install-ok' or `f2c-exists-ok' files exist in the source or\n+     build directory.  See the installation documentation for more\n+     information.\n+\n+   * The `libf2c.a' library produced by `g77' has been renamed to\n+     `libg2c.a'.  It is installed only in the `gcc' \"private\" directory\n+     heirarchy, `gcc-lib'.  This allows system administrators and users\n+     to choose which version of the `libf2c' library from `netlib' they\n+     wish to use on a case-by-case basis.  See the installation\n+     documentation for more information.\n+\n+   * The `f2c.h' include (header) file produced by `g77' has been\n+     renamed to `g2c.h'.  It is installed only in the `gcc' \"private\"\n+     directory heirarchy, `gcc-lib'.  This allows system administrators\n+     and users to choose which version of the include file from\n+     `netlib' they wish to use on a case-by-case basis.  See the\n+     installation documentation for more information.\n+\n+   * The `g77' command now expects the run-time library to be named\n+     `libg2c.a' instead of `libf2c.a', to ensure that a version other\n+     than the one built and installed as part of the same `g77' version\n+     is picked up.\n+\n+   * The `-Wunused' option no longer issues a spurious warning about\n+     the \"master\" procedure generated by `g77' for procedures\n+     containing `ENTRY' statements.\n+\n+   * `g77''s version of `libf2c' separates out the setting of global\n+     state (such as command-line arguments and signal handling) from\n+     `main.o' into distinct, new library archive members.\n+\n+     This should make it easier to write portable applications that\n+     have their own (non-Fortran) `main()' routine properly set up the\n+     `libf2c' environment, even when `libf2c' (now `libg2c') is a\n+     shared library.\n+\n+   * During the configuration and build process, `g77' creates\n+     subdirectories it needs only as it needs them, thus avoiding\n+     unnecessary creation of, for example, `stage1/f/runtime' when\n+     doing a non-bootstrap build.  Other cleaning up of the\n+     configuration and build process has been performed as well.\n+\n+   * `install-info' now used to update the directory of Info\n+     documentation to contain an entry for `g77' (during installation).\n+\n+   * Some diagnostics have been changed from warnings to errors, to\n+     prevent inadvertent use of the resulting, probably buggy, programs.\n+     These mostly include diagnostics about use of unsupported features\n+     in the `OPEN', `INQUIRE', `READ', and `WRITE' statements, and\n+     about truncations of various sorts of constants.\n+\n+   * Improve documentation and indexing.\n+\n+   * Upgrade to `libf2c' as of 1998-04-20.\n+\n+     This should fix a variety of problems, including those involving\n+     some uses of the `T' format specifier, and perhaps some build\n+     (porting) problems as well.\n+\n In 0.5.22:\n ==========\n "}]}