{"sha": "2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJjZDg3YTdiNWJmNzkzYTAwZTk5YTVkN2ZkZWY0Mjc3YWZhN2RjNg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-06-25T19:46:14Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-06-25T19:46:14Z"}, "message": "extend.texi (Zero-length arrays): Update and clarify.\n\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi (Zero-length arrays): Update and clarify.\n\nFrom-SVN: r262109", "tree": {"sha": "98627e3e69bb796d095ec4853d46dfafbb4f0fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98627e3e69bb796d095ec4853d46dfafbb4f0fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "214486ebe2fc001276f086add29ff30e5a49bb19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/214486ebe2fc001276f086add29ff30e5a49bb19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/214486ebe2fc001276f086add29ff30e5a49bb19"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "07db821bf571b65fa55e31c0700a896a33f48de1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6", "patch": "@@ -1,3 +1,7 @@\n+2018-06-25  Martin Sebor  <msebor@redhat.com>\n+\n+\t* doc/extend.texi (Zero-length arrays): Update and clarify.\n+\n 2018-06-25  Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config.gcc (powerpc64le*): Revert January 16th, 2018 patch that"}, {"sha": "19c2da2e5dbd4ea2bbdafecfb5a3f912a06ea6e0", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=2bcd87a7b5bf793a00e99a5d7fdef4277afa7dc6", "patch": "@@ -1537,9 +1537,9 @@ defined when these address spaces are supported.\n @cindex length-zero arrays\n @cindex flexible array members\n \n-Zero-length arrays are allowed in GNU C@.  They are very useful as the\n-last element of a structure that is really a header for a variable-length\n-object:\n+Declaring zero-length arrays is allowed in GNU C as an extension.\n+A zero-length array can be useful as the last element of a structure\n+that is really a header for a variable-length object:\n \n @smallexample\n struct line @{\n@@ -1552,11 +1552,30 @@ struct line *thisline = (struct line *)\n thisline->length = this_length;\n @end smallexample\n \n-In ISO C90, you would have to give @code{contents} a length of 1, which\n-means either you waste space or complicate the argument to @code{malloc}.\n-\n-In ISO C99, you would use a @dfn{flexible array member}, which is\n-slightly different in syntax and semantics:\n+Although the size of a zero-length array is zero, an array member of\n+this kind may increase the size of the enclosing type as a result of tail\n+padding.  The offset of a zero-length array member from the beginning\n+of the enclosing structure is the same as the offset of an array with\n+one or more elements of the same type.  The alignment of a zero-length\n+array is the same as the alignment of its elements.\n+\n+Declaring zero-length arrays in other contexts, including as interior\n+members of structure objects or as non-member objects, is discouraged.\n+Accessing elements of zero-length arrays declared in such contexts is\n+undefined and may be diagnosed.\n+\n+In the absence of the zero-length array extension, in ISO C90\n+the @code{contents} array in the example above would typically be declared\n+to have a single element.  Unlike a zero-length array which only contributes\n+to the size of the enclosing structure for the purposes of alignment,\n+a one-element array always occupies at least as much space as a single\n+object of the type.  Although using one-element arrays this way is\n+discouraged, GCC handles accesses to trailing one-element array members\n+analogously to zero-length arrays.\n+\n+The preferred mechanism to declare variable-length types like\n+@code{struct line} above is the ISO C99 @dfn{flexible array member},\n+with slightly different syntax and semantics:\n \n @itemize @bullet\n @item"}]}