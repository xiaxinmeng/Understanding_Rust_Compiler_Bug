{"sha": "4481581f34be81348f36276e290c80d59fbf49c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ4MTU4MWYzNGJlODEzNDhmMzYyNzZlMjkwYzgwZDU5ZmJmNDljNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2013-04-08T13:11:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-04-08T13:11:56Z"}, "message": "gimple.c (canonicalize_cond_expr_cond): Rewrite x ^ y into x != y.\n\n        * gimple.c (canonicalize_cond_expr_cond): Rewrite x ^ y into\n        x != y.\n\n        * gcc.dg/tree-ssa/forwprop-25.c: New test\n\nFrom-SVN: r197579", "tree": {"sha": "2cbc77ce6bebb52b13d7fbb0ce405e72e23a88c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cbc77ce6bebb52b13d7fbb0ce405e72e23a88c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4481581f34be81348f36276e290c80d59fbf49c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4481581f34be81348f36276e290c80d59fbf49c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4481581f34be81348f36276e290c80d59fbf49c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4481581f34be81348f36276e290c80d59fbf49c6/comments", "author": null, "committer": null, "parents": [{"sha": "451dabda42522372cfe55e7b6433b19b6df625d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451dabda42522372cfe55e7b6433b19b6df625d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451dabda42522372cfe55e7b6433b19b6df625d2"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "b72dd89f50dda59db27e2ce8bff7c6c94e381d82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4481581f34be81348f36276e290c80d59fbf49c6", "patch": "@@ -1,3 +1,7 @@\n+2013-04-08  Jeff Law  <law@redhat.com>\n+\n+\t* gimple.c (canonicalize_cond_expr_cond): Rewrite x ^ y into x != y.\n+\t\t        \n 2013-04-08  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-pretty-print.c (debug_gimple_stmt): Do not print"}, {"sha": "cdb6f2498a839dc33f74caefa044a066f2d57f8d", "filename": "gcc/gimple.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=4481581f34be81348f36276e290c80d59fbf49c6", "patch": "@@ -2958,7 +2958,11 @@ canonicalize_cond_expr_cond (tree t)\n       t = build2 (TREE_CODE (top0), TREE_TYPE (t),\n \t\t  TREE_OPERAND (top0, 0), TREE_OPERAND (top0, 1));\n     }\n-\n+  /* For x ^ y use x != y.  */\n+  else if (TREE_CODE (t) == BIT_XOR_EXPR)\n+    t = build2 (NE_EXPR, TREE_TYPE (t),\n+\t\tTREE_OPERAND (t, 0), TREE_OPERAND (t, 1));\n+  \n   if (is_gimple_condexpr (t))\n     return t;\n "}, {"sha": "e137b85657bf45e772b23330686a17afde0a994d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4481581f34be81348f36276e290c80d59fbf49c6", "patch": "@@ -1,3 +1,7 @@\n+2013-04-08  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/forwprop-25.c: New test\n+\n 2013-04-08  Richard Biener  <rguenther@suse.de>\n \n \t* gfortran.dg/vect/fast-math-mgrid-resid.f: Adjust."}, {"sha": "cf0c504275f01a3f7c1e878e0df3ba7cf63dfe57", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-25.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4481581f34be81348f36276e290c80d59fbf49c6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-25.c?ref=4481581f34be81348f36276e290c80d59fbf49c6", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-forwprop1\" } */\n+\n+struct rtx_def;\n+typedef struct rtx_def *rtx;\n+typedef const struct rtx_def *const_rtx;\n+enum machine_mode\n+{\n+  MAX_MACHINE_MODE,\n+  NUM_MACHINE_MODES = MAX_MACHINE_MODE\n+};\n+extern const char *const mode_name[NUM_MACHINE_MODES];\n+enum mode_class\n+{ MODE_RANDOM, MODE_CC, MODE_INT, MODE_PARTIAL_INT, MODE_FRACT, MODE_UFRACT,\n+    MODE_ACCUM, MODE_UACCUM, MODE_FLOAT, MODE_DECIMAL_FLOAT, MODE_COMPLEX_INT,\n+    MODE_COMPLEX_FLOAT, MODE_VECTOR_INT, MODE_VECTOR_FRACT,\n+    MODE_VECTOR_UFRACT, MODE_VECTOR_ACCUM, MODE_VECTOR_UACCUM,\n+    MODE_VECTOR_FLOAT, MAX_MODE_CLASS };\n+extern const unsigned char mode_class[NUM_MACHINE_MODES];\n+extern const unsigned short mode_precision[NUM_MACHINE_MODES];\n+struct rtx_def\n+{\n+  __extension__ enum machine_mode mode:8;\n+};\n+void\n+convert_move (rtx to, rtx from, int unsignedp)\n+{\n+  enum machine_mode to_mode = ((enum machine_mode) (to)->mode);\n+  enum machine_mode from_mode = ((enum machine_mode) (from)->mode);\n+  ((void)\n+   (!((mode_precision[from_mode] != mode_precision[to_mode])\n+      || ((((enum mode_class) mode_class[from_mode]) == MODE_DECIMAL_FLOAT) !=\n+\t  (((enum mode_class) mode_class[to_mode]) ==\n+\t   MODE_DECIMAL_FLOAT))) ?\n+    fancy_abort (\"/home/gcc/virgin-gcc/gcc/expr.c\", 380, __FUNCTION__),\n+    0 : 0));\n+}\n+\n+/* { dg-final { scan-tree-dump \"Replaced.*!=.*with.*!=.* \" \"forwprop1\"} } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */\n+\n+\n+"}]}