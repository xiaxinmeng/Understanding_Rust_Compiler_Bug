{"sha": "0cd653bd2559701da9cc4c9bf51f22bdd68623b5", "node_id": "C_kwDOANBUbNoAKDBjZDY1M2JkMjU1OTcwMWRhOWNjNGM5YmY1MWYyMmJkZDY4NjIzYjU", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-11-08T14:32:42Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-11-08T17:48:57Z"}, "message": "Don't calculate new values when using the private context callback.\n\nWhen using rangers private callback mechanism to provide context\nto fold_stmt calls, we are only suppose to be using the cache in read\nonly mode, never calculate new values.\n\n\tgcc/\n\tPR tree-optimization/103122\n\t* gimple-range.cc (gimple_ranger::range_of_expr): Request the cache\n\tentry with \"calulate new values\" set to false.\n\n\tgcc/testsuite/\n\t* g++.dg/pr103122.C: New.", "tree": {"sha": "b36c9cdffb096752d1755baa7f56ad6d4c00db41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b36c9cdffb096752d1755baa7f56ad6d4c00db41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cd653bd2559701da9cc4c9bf51f22bdd68623b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd653bd2559701da9cc4c9bf51f22bdd68623b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd653bd2559701da9cc4c9bf51f22bdd68623b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd653bd2559701da9cc4c9bf51f22bdd68623b5/comments", "author": null, "committer": null, "parents": [{"sha": "33a7a63275c959f97b25064cfbe3e7f0dc7f7e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a7a63275c959f97b25064cfbe3e7f0dc7f7e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a7a63275c959f97b25064cfbe3e7f0dc7f7e9c"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "87dba6e81d89c7f15745d83de485e6413367b6b9", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd653bd2559701da9cc4c9bf51f22bdd68623b5/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd653bd2559701da9cc4c9bf51f22bdd68623b5/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=0cd653bd2559701da9cc4c9bf51f22bdd68623b5", "patch": "@@ -88,8 +88,8 @@ gimple_ranger::range_of_expr (irange &r, tree expr, gimple *stmt)\n       if (!m_cache.get_global_range (r, expr))\n         r = gimple_range_global (expr);\n       // Pick up implied context information from the on-entry cache\n-      // if current_bb is set.\n-      if (current_bb && m_cache.block_range (tmp, current_bb, expr))\n+      // if current_bb is set.  Do not attempt any new calculations.\n+      if (current_bb && m_cache.block_range (tmp, current_bb, expr, false))\n \t{\n \t  r.intersect (tmp);\n \t  char str[80];"}, {"sha": "3465eade46bd20ba145617b3cc8c7c79a9ca040a", "filename": "gcc/testsuite/g++.dg/pr103122.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd653bd2559701da9cc4c9bf51f22bdd68623b5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr103122.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd653bd2559701da9cc4c9bf51f22bdd68623b5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr103122.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr103122.C?ref=0cd653bd2559701da9cc4c9bf51f22bdd68623b5", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+unsigned a;\n+int b;\n+short c;\n+void d(long) {\n+  for (bool e = (bool)c - 1; e < (bool)b - 1; e += 0)\n+    ;\n+  if (a) {\n+    for (char f = 0; f < 7; f = 7)\n+      for (int g = 0; g < c; g += 10)\n+        ;\n+    d(-!c);\n+  }\n+}"}]}