{"sha": "a3dc87600f8f874b1b684679b36a82d7da7d1653", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNkYzg3NjAwZjhmODc0YjFiNjg0Njc5YjM2YTgyZDdkYTdkMTY1Mw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2016-03-10T17:24:16Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2016-03-10T17:24:16Z"}, "message": "re PR target/7044 (vax casesi breakage)\n\n\tPR target/7044\n\t* config/aarch64/aarch64.c\n\t(aarch64_override_options_after_change_1): When forcing\n\tflag_omit_frame_pointer to be true, use a special value that can\n\tbe detected if this function is called again, thus preventing\n\tflag_omit_leaf_frame_pointer from being forced to be false.\n\n\t* gcc.target/aarch64/pr70044.c: New test.\n\nFrom-SVN: r234118", "tree": {"sha": "15b417256dc798c722215a7cbc5ae0f412221cf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15b417256dc798c722215a7cbc5ae0f412221cf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3dc87600f8f874b1b684679b36a82d7da7d1653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3dc87600f8f874b1b684679b36a82d7da7d1653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3dc87600f8f874b1b684679b36a82d7da7d1653", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3dc87600f8f874b1b684679b36a82d7da7d1653/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b87a8d7de708533d909b808a46d9fe52b7a07e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87a8d7de708533d909b808a46d9fe52b7a07e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87a8d7de708533d909b808a46d9fe52b7a07e52"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "d53c261bb8127f4895fb3498a9983d7204bc54ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3dc87600f8f874b1b684679b36a82d7da7d1653", "patch": "@@ -1,3 +1,12 @@\n+2016-03-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR target/7044\n+\t* config/aarch64/aarch64.c\n+\t(aarch64_override_options_after_change_1): When forcing\n+\tflag_omit_frame_pointer to be true, use a special value that can\n+\tbe detected if this function is called again, thus preventing\n+\tflag_omit_leaf_frame_pointer from being forced to be false.\n+\n 2016-03-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* common/config/aarch64/aarch64-common.c (aarch64_handle_option):"}, {"sha": "d536aa0f1a3d313e3219d2a545b842cf6b0c5883", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=a3dc87600f8f874b1b684679b36a82d7da7d1653", "patch": "@@ -8110,10 +8110,25 @@ aarch64_parse_override_string (const char* input_string,\n static void\n aarch64_override_options_after_change_1 (struct gcc_options *opts)\n {\n+  /* The logic here is that if we are disabling all frame pointer generation\n+     then we do not need to disable leaf frame pointer generation as a\n+     separate operation.  But if we are *only* disabling leaf frame pointer\n+     generation then we set flag_omit_frame_pointer to true, but in\n+     aarch64_frame_pointer_required we return false only for leaf functions.\n+\n+     PR 70044: We have to be careful about being called multiple times for the\n+     same function.  Once we have decided to set flag_omit_frame_pointer just\n+     so that we can omit leaf frame pointers, we must then not interpret a\n+     second call as meaning that all frame pointer generation should be\n+     omitted.  We do this by setting flag_omit_frame_pointer to a special,\n+     non-zero value.  */\n+  if (opts->x_flag_omit_frame_pointer == 2)\n+    opts->x_flag_omit_frame_pointer = 0;\n+\n   if (opts->x_flag_omit_frame_pointer)\n     opts->x_flag_omit_leaf_frame_pointer = false;\n   else if (opts->x_flag_omit_leaf_frame_pointer)\n-    opts->x_flag_omit_frame_pointer = true;\n+    opts->x_flag_omit_frame_pointer = 2;\n \n   /* If not optimizing for size, set the default\n      alignment to what the target wants.  */"}, {"sha": "be04568f5ddda5fdade8c3377ad41263c7ab858f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a3dc87600f8f874b1b684679b36a82d7da7d1653", "patch": "@@ -1,3 +1,8 @@\n+2016-03-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR target/70044\n+\t* gcc.target/aarch64/pr70044.c: New test.\n+\n 2016-03-10  Patrick Palka  <ppalka@gcc.gnu.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "1a84941dd7ea9dc366dd0ba51e0a96fcb312048f", "filename": "gcc/testsuite/gcc.target/aarch64/pr70044.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70044.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3dc87600f8f874b1b684679b36a82d7da7d1653/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70044.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70044.c?ref=a3dc87600f8f874b1b684679b36a82d7da7d1653", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do link } */\n+/* { dg-require-effective-target lto } */\n+/* { dg-options \"-flto -O --save-temps -fno-omit-frame-pointer\" } */\n+\n+extern int atoi (const char *);\n+\n+int\n+main (int argc, char **argv)\n+{\n+  return atoi (argv[0]) + 1;\n+}\n+\n+/* Check that the frame pointer really is created.  */\n+/* { dg-final { scan-lto-assembler \"add\tx29, sp,\" } } */"}]}