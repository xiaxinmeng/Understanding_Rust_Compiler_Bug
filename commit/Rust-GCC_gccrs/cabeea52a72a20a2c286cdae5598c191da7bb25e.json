{"sha": "cabeea52a72a20a2c286cdae5598c191da7bb25e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiZWVhNTJhNzJhMjBhMmMyODZjZGFlNTU5OGMxOTFkYTdiYjI1ZQ==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2013-11-10T11:47:18Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2013-11-10T11:47:18Z"}, "message": "cygming-crtbegin.c (__gcc_register_frame): Increment load-count on use of LIBGCC_SONAME DLL.\n\n2013-11-10  Kai Tietz  <ktietz@redhat.com>\n\n\t* config/i386/cygming-crtbegin.c (__gcc_register_frame):\n\tIncrement load-count on use of LIBGCC_SONAME DLL.\n\t(hmod_libgcc): New static variable to hold handle of\n\tLIBGCC_SONAME DLL.\n\t(__gcc_deregister_frame): Decrement load-count of\n\tLIBGCC_SONAME DLL.\n\nFrom-SVN: r204635", "tree": {"sha": "a54baa5ade29c6e9e4f3b9065b74451eaca5e482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a54baa5ade29c6e9e4f3b9065b74451eaca5e482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cabeea52a72a20a2c286cdae5598c191da7bb25e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cabeea52a72a20a2c286cdae5598c191da7bb25e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cabeea52a72a20a2c286cdae5598c191da7bb25e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cabeea52a72a20a2c286cdae5598c191da7bb25e/comments", "author": null, "committer": null, "parents": [{"sha": "6fbf987777752819895fc9083c5e3c1f4781399d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fbf987777752819895fc9083c5e3c1f4781399d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fbf987777752819895fc9083c5e3c1f4781399d"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "4f7d30483b7c5a97205e5f3115843e06aa5fdb31", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cabeea52a72a20a2c286cdae5598c191da7bb25e/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cabeea52a72a20a2c286cdae5598c191da7bb25e/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=cabeea52a72a20a2c286cdae5598c191da7bb25e", "patch": "@@ -1,3 +1,12 @@\n+2013-11-10  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* config/i386/cygming-crtbegin.c (__gcc_register_frame):\n+\tIncrement load-count on use of LIBGCC_SONAME DLL.\n+\t(hmod_libgcc): New static variable to hold handle of\n+\tLIBGCC_SONAME DLL.\n+\t(__gcc_deregister_frame): Decrement load-count of\n+\tLIBGCC_SONAME DLL.\n+\n 2013-11-08  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n \n \t* configure.ac (libgcc_cv_dfp): Extend check to probe fenv.h"}, {"sha": "53909d2dc145b59958193dd9486b8b5fe01e9246", "filename": "libgcc/config/i386/cygming-crtbegin.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cabeea52a72a20a2c286cdae5598c191da7bb25e/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cabeea52a72a20a2c286cdae5598c191da7bb25e/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c?ref=cabeea52a72a20a2c286cdae5598c191da7bb25e", "patch": "@@ -91,6 +91,9 @@ static EH_FRAME_SECTION_CONST char __EH_FRAME_BEGIN__[]\n   = { };\n \n static struct object obj;\n+\n+/* Handle of libgcc's DLL reference.  */\n+HANDLE hmod_libgcc;\n #endif\n \n #if TARGET_USE_JCR_SECTION\n@@ -115,9 +118,14 @@ __gcc_register_frame (void)\n \n   void (*register_frame_fn) (const void *, struct object *);\n   HANDLE h = GetModuleHandle (LIBGCC_SONAME);\n+\n   if (h)\n-    register_frame_fn = (void (*) (const void *, struct object *))\n-\t\t\tGetProcAddress (h, \"__register_frame_info\");\n+    {\n+      /* Increasing the load-count of LIBGCC_SONAME DLL.  */\n+      hmod_libgcc = LoadLibrary (LIBGCC_SONAME);\n+      register_frame_fn = (void (*) (const void *, struct object *))\n+\t\t\t  GetProcAddress (h, \"__register_frame_info\");\n+    }\n   else \n     register_frame_fn = __register_frame_info;\n   if (register_frame_fn)\n@@ -154,5 +162,7 @@ __gcc_deregister_frame (void)\n     deregister_frame_fn = __deregister_frame_info;\n   if (deregister_frame_fn)\n      deregister_frame_fn (__EH_FRAME_BEGIN__);\n+  if (hmod_libgcc)\n+    FreeLibrary (hmod_libgcc);\n #endif\n }"}]}