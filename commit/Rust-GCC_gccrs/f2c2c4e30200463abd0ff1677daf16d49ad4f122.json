{"sha": "f2c2c4e30200463abd0ff1677daf16d49ad4f122", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjMmM0ZTMwMjAwNDYzYWJkMGZmMTY3N2RhZjE2ZDQ5YWQ0ZjEyMg==", "commit": {"author": {"name": "Xiong Hu Luo", "email": "luoxhu@linux.ibm.com", "date": "2019-05-31T18:46:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-05-31T18:46:02Z"}, "message": "re PR c/43673 (Incorrect warning: use of 'D' length modifier with 'a' type character)\n\n\tPR c/43673\n\t* c-format.c (print_char_table, scanf_char_table): Replace BADLEN with\n\tTEX_D32, TEX_D64 or TEX_D128.\n\n\tPR c/43673\n\t* gcc.dg/format-dfp-printf-1.c: New test.\n\t* gcc.dg/format-dfp-scanf-1.c: Likewise.\n\nFrom-SVN: r271820", "tree": {"sha": "833d3c452cbb6a8f1a2f4c29404f0910ffbc8828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/833d3c452cbb6a8f1a2f4c29404f0910ffbc8828"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c2c4e30200463abd0ff1677daf16d49ad4f122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c2c4e30200463abd0ff1677daf16d49ad4f122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c2c4e30200463abd0ff1677daf16d49ad4f122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c2c4e30200463abd0ff1677daf16d49ad4f122/comments", "author": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a1c064a94c077d3f0b1383f825de7105a7c075d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1c064a94c077d3f0b1383f825de7105a7c075d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1c064a94c077d3f0b1383f825de7105a7c075d"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "29c8ecca5cf5c3d4c11ab4fb3a69ef1667ced48f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2c2c4e30200463abd0ff1677daf16d49ad4f122", "patch": "@@ -1,3 +1,9 @@\n+2019-05-31  Xiong Hu Luo  <luoxhu@linux.ibm.com>\n+\n+\tPR c/43673\n+\t* c-format.c (print_char_table, scanf_char_table): Replace BADLEN with\n+\tTEX_D32, TEX_D64 or TEX_D128.\n+\n 2019-05-31  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* match.pd (~(vec?cst1:cst2)): New transformation."}, {"sha": "b10599f9982cff2f3e3a46eac8d02c43b4a6de41", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=f2c2c4e30200463abd0ff1677daf16d49ad4f122", "patch": "@@ -674,7 +674,7 @@ static const format_char_info print_char_table[] =\n   { \"n\",   1, STD_C89, { T89_I,   T99_SC,  T89_S,   T89_L,   T9L_LL,  BADLEN,  T99_SST, T99_PD,  T99_IM,  BADLEN,  BADLEN,  BADLEN }, \"\",          \"W\",  NULL },\n   /* C99 conversion specifiers.  */\n   { \"F\",   0, STD_C99, { T99_D,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T99_LD,  BADLEN,  BADLEN,  BADLEN,  TEX_D32, TEX_D64, TEX_D128 }, \"-wp0 +#'I\", \"\",   NULL },\n-  { \"aA\",  0, STD_C99, { T99_D,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T99_LD,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN }, \"-wp0 +#\",   \"\",   NULL },\n+  { \"aA\",  0, STD_C99, { T99_D,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T99_LD,  BADLEN,  BADLEN,  BADLEN,  TEX_D32, TEX_D64,  TEX_D128 }, \"-wp0 +#\",   \"\",   NULL },\n   /* X/Open conversion specifiers.  */\n   { \"C\",   0, STD_EXT, { TEX_WI,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN }, \"-w\",        \"\",   NULL },\n   { \"S\",   1, STD_EXT, { TEX_W,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN }, \"-wp\",       \"R\",  NULL },\n@@ -847,7 +847,7 @@ static const format_char_info scan_char_table[] =\n   { \"n\",     1, STD_C89, { T89_I,   T99_SC,  T89_S,   T89_L,   T9L_LL,  BADLEN,  T99_SST, T99_PD,  T99_IM,  BADLEN,  BADLEN,  BADLEN }, \"\",     \"W\",   NULL },\n   /* C99 conversion specifiers.  */\n   { \"F\",   1, STD_C99, { T99_F,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T99_LD,  BADLEN,  BADLEN,  BADLEN,  TEX_D32, TEX_D64, TEX_D128 }, \"*w'\",  \"W\",   NULL },\n-  { \"aA\",   1, STD_C99, { T99_F,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T99_LD,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN }, \"*w'\",  \"W\",   NULL },\n+  { \"aA\",   1, STD_C99, { T99_F,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T99_LD,  BADLEN,  BADLEN,  BADLEN,  TEX_D32,  TEX_D64,  TEX_D128 }, \"*w'\",  \"W\",   NULL },\n   /* X/Open conversion specifiers.  */\n   { \"C\",     1, STD_EXT, { TEX_W,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN }, \"*mw\",   \"W\",   NULL },\n   { \"S\",     1, STD_EXT, { TEX_W,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN }, \"*amw\",  \"W\",   NULL },"}, {"sha": "9dc9cbc3d32db2cf1bd6f1ae0abd7ee45d7e900a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2c2c4e30200463abd0ff1677daf16d49ad4f122", "patch": "@@ -1,3 +1,9 @@\n+2019-05-31  Xiong Hu Luo  <luoxhu@linux.ibm.com>\n+\n+\tPR c/43673\n+\t* gcc.dg/format-dfp-printf-1.c: New test.\n+\t* gcc.dg/format-dfp-scanf-1.c: Likewise.\n+\n 2019-05-31  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* g++.dg/tree-ssa/cprop-vcond.C: New file."}, {"sha": "a290895c2b7212f0722da3c559deef2df3410634", "filename": "gcc/testsuite/gcc.dg/format/dfp-printf-1.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fdfp-printf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fdfp-printf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fdfp-printf-1.c?ref=f2c2c4e30200463abd0ff1677daf16d49ad4f122", "patch": "@@ -17,20 +17,26 @@ foo (_Decimal32 x, _Decimal64 y, _Decimal128 z, int i, unsigned int j,\n \n   /* Check lack of warnings for valid usage.  */\n \n+  printf (\"%Ha\\n\", x);\n+  printf (\"%HA\\n\", x);\n   printf (\"%Hf\\n\", x);\n   printf (\"%HF\\n\", x);\n   printf (\"%He\\n\", x);\n   printf (\"%HE\\n\", x);\n   printf (\"%Hg\\n\", x);\n   printf (\"%HG\\n\", x);\n \n+  printf (\"%Da\\n\", y);\n+  printf (\"%DA\\n\", y);\n   printf (\"%Df\\n\", y);\n   printf (\"%DF\\n\", y);\n   printf (\"%De\\n\", y);\n   printf (\"%DE\\n\", y);\n   printf (\"%Dg\\n\", y);\n   printf (\"%DG\\n\", y);\n \n+  printf (\"%DDa\\n\", z);\n+  printf (\"%DDA\\n\", z);\n   printf (\"%DDf\\n\", z);\n   printf (\"%DDF\\n\", z);\n   printf (\"%DDe\\n\", z);\n@@ -43,38 +49,50 @@ foo (_Decimal32 x, _Decimal64 y, _Decimal128 z, int i, unsigned int j,\n \n   /* Check warnings for type mismatches.  */\n \n+  printf (\"%Ha\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  printf (\"%HA\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%Hf\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%HF\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%He\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%HE\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%Hg\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%HG\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  printf (\"%Ha\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  printf (\"%HA\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%Hf\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%HF\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%He\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%HE\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%Hg\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%HG\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n \n+  printf (\"%Da\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n+  printf (\"%DA\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%Df\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%DF\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%De\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%DE\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%Dg\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%DG\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n+  printf (\"%Da\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n+  printf (\"%DA\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%Df\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%DF\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%De\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%DE\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%Dg\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   printf (\"%DG\\n\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n \n+  printf (\"%DDa\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n+  printf (\"%DDA\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDf\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDF\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDe\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDE\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDg\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDG\\n\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n+  printf (\"%DDa\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n+  printf (\"%DDA\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDf\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDF\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   printf (\"%DDe\\n\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n@@ -90,8 +108,8 @@ foo (_Decimal32 x, _Decimal64 y, _Decimal128 z, int i, unsigned int j,\n   printf (\"%Hu\\n\", j);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   printf (\"%Hx\\n\", j);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   printf (\"%HX\\n\", j);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n-  printf (\"%Ha\\n\", d);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n-  printf (\"%HA\\n\", d);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n+  printf (\"%Ha\\n\", d);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  printf (\"%HA\\n\", d);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   printf (\"%Hc\\n\", i);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   printf (\"%Hs\\n\", p);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   printf (\"%Hp\\n\", p);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n@@ -100,20 +118,26 @@ foo (_Decimal32 x, _Decimal64 y, _Decimal128 z, int i, unsigned int j,\n   /* Sanity checks for flags, field width, and precision in formats for\n      DFP types.  */\n \n+  printf (\"%-Ha\\n\", x);\n+  printf (\"%+HA\\n\", x);\n   printf (\"%-Hf\\n\", x);\n   printf (\"%+HF\\n\", x);\n   printf (\"% He\\n\", x);\n   printf (\"%#HE\\n\", x);\n   printf (\"%0Hg\\n\", x);\n   printf (\"%#0HG\\n\", x);\n \n+  printf (\"%0#Da\\n\", y);\n+  printf (\"%0DA\\n\", y);\n   printf (\"%0#Df\\n\", y);\n   printf (\"%0DF\\n\", y);\n   printf (\"%#De\\n\", y);\n   printf (\"%-#DE\\n\", y);\n   printf (\"%-#0Dg\\n\", y);  /* { dg-warning \"flag ignored\" \"ignore flag\" } */\n   printf (\"%0+ DG\\n\", y);  /* { dg-warning \"flag ignored\" \"ignore flag\" } */\n \n+  printf (\"%DDa\\n\", z);\n+  printf (\"%0DDA\\n\", z);\n   printf (\"%DDf\\n\", z);\n   printf (\"%0DDF\\n\", z);\n   printf (\"%#0DDe\\n\", z);"}, {"sha": "6df3bc60ea5d2719004c876d24a5c470bbe0e6fd", "filename": "gcc/testsuite/gcc.dg/format/dfp-scanf-1.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fdfp-scanf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2c4e30200463abd0ff1677daf16d49ad4f122/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fdfp-scanf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fdfp-scanf-1.c?ref=f2c2c4e30200463abd0ff1677daf16d49ad4f122", "patch": "@@ -17,20 +17,26 @@ voo (_Decimal32 *x, _Decimal64 *y, _Decimal128 *z, int *i, unsigned int *j,\n \n   /* Check lack of warnings for valid usage.  */\n \n+  scanf (\"%Ha\", x);\n+  scanf (\"%HA\", x);\n   scanf (\"%Hf\", x);\n   scanf (\"%HF\", x);\n   scanf (\"%He\", x);\n   scanf (\"%HE\", x);\n   scanf (\"%Hg\", x);\n   scanf (\"%HG\", x);\n \n+  scanf (\"%Da\", y);\n+  scanf (\"%DA\", y);\n   scanf (\"%Df\", y);\n   scanf (\"%DF\", y);\n   scanf (\"%De\", y);\n   scanf (\"%DE\", y);\n   scanf (\"%Dg\", y);\n   scanf (\"%DG\", y);\n \n+  scanf (\"%DDa\", z);\n+  scanf (\"%DDA\", z);\n   scanf (\"%DDf\", z);\n   scanf (\"%DDF\", z);\n   scanf (\"%DDe\", z);\n@@ -43,38 +49,50 @@ voo (_Decimal32 *x, _Decimal64 *y, _Decimal128 *z, int *i, unsigned int *j,\n \n   /* Check warnings for type mismatches.  */\n \n+  scanf (\"%Ha\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  scanf (\"%HA\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%Hf\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%HF\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%He\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%HE\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%Hg\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%HG\", y);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  scanf (\"%Ha\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  scanf (\"%HA\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%Hf\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%HF\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%He\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%HE\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%Hg\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%HG\", z);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n \n+  scanf (\"%Da\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n+  scanf (\"%DA\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%Df\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%DF\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%De\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%DE\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%Dg\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%DG\", x);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n+  scanf (\"%Da\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n+  scanf (\"%DA\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%Df\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%DF\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%De\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%DE\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%Dg\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n   scanf (\"%DG\", z);\t/* { dg-warning \"expects argument\" \"bad use of %D\" } */\n \n+  scanf (\"%DDa\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n+  scanf (\"%DDA\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDf\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDF\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDe\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDE\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDg\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDG\", x);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n+  scanf (\"%DDa\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n+  scanf (\"%DDA\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDf\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDF\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n   scanf (\"%DDe\", y);\t/* { dg-warning \"expects argument\" \"bad use of %DD\" } */\n@@ -90,8 +108,8 @@ voo (_Decimal32 *x, _Decimal64 *y, _Decimal128 *z, int *i, unsigned int *j,\n   scanf (\"%Hu\\n\", j);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   scanf (\"%Hx\\n\", j);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   scanf (\"%HX\\n\", j);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n-  scanf (\"%Ha\\n\", d);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n-  scanf (\"%HA\\n\", d);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n+  scanf (\"%Ha\\n\", d);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n+  scanf (\"%HA\\n\", d);\t/* { dg-warning \"expects argument\" \"bad use of %H\" } */\n   scanf (\"%Hc\\n\", i);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   scanf (\"%Hs\\n\", p);\t/* { dg-warning \"length\" \"bad use of %H\" } */\n   scanf (\"%Hp\\n\", p);\t/* { dg-warning \"length\" \"bad use of %H\" } */"}]}