{"sha": "ff06e6b1b87fcf22033349184060d92b7a948108", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYwNmU2YjFiODdmY2YyMjAzMzM0OTE4NDA2MGQ5MmI3YTk0ODEwOA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2012-01-23T11:07:55Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2012-01-23T11:07:55Z"}, "message": "lang.c (java_init_options_struct): Set frontend_set_flag_trapping_math.\n\n* lang.c (java_init_options_struct): Set\nfrontend_set_flag_trapping_math.\n\nFrom-SVN: r183425", "tree": {"sha": "47c51166e3e5c63c08e80f6debcb156c310c3924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47c51166e3e5c63c08e80f6debcb156c310c3924"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff06e6b1b87fcf22033349184060d92b7a948108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff06e6b1b87fcf22033349184060d92b7a948108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff06e6b1b87fcf22033349184060d92b7a948108", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff06e6b1b87fcf22033349184060d92b7a948108/comments", "author": null, "committer": null, "parents": [{"sha": "b2d2adc6259b00c8e432f7160c39eca325b4fe02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d2adc6259b00c8e432f7160c39eca325b4fe02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2d2adc6259b00c8e432f7160c39eca325b4fe02"}], "stats": {"total": 130, "additions": 68, "deletions": 62}, "files": [{"sha": "974b83f15ecdb0c000769450626324f686b2b798", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 66, "deletions": 61, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff06e6b1b87fcf22033349184060d92b7a948108/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff06e6b1b87fcf22033349184060d92b7a948108/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ff06e6b1b87fcf22033349184060d92b7a948108", "patch": "@@ -1,3 +1,8 @@\n+2012-01-23  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* lang.c (java_init_options_struct): Set\n+\tfrontend_set_flag_trapping_math.\n+\n 2012-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* jcf-dump.c (version): Update copyright notice dates.\n@@ -195,7 +200,7 @@\n 2011-01-07  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR bootstrap/47215\n-        * decl.c (java_init_decl_processing): Initialize unsigned_type_node.\n+\t* decl.c (java_init_decl_processing): Initialize unsigned_type_node.\n \n 2011-01-07  Kai Tietz  <kai.tietz@onevision.com>\n \n@@ -317,7 +322,7 @@\n 2010-10-04  Andi Kleen <ak@linux.intel.com>\n \n \t* Make-lang.in (xgcj, jc1, jcf-dump, jvgenmain):\n-        Add + to build rule.\n+\tAdd + to build rule.\n \n 2010-09-29  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -863,7 +868,7 @@\n 2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* class.c: Replace %J by an explicit location. Update all calls.\n-\t\n+\n 2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* jcf-parse.c: Replace %H by an explicit location. Update all calls.\n@@ -878,7 +883,7 @@\n \t(MANGLE_CXX_KEYWORDS): New macro.\n \t(append_gpp_mangled_name): Use MANGLE_CXX_KEYWORDS.\n \t(append_gpp_mangled_name): Likewise.\n-\t* mangle.c: Move code to mangle_name.c. \n+\t* mangle.c: Move code to mangle_name.c.\n \t(mangle_member_name): Don't call cxx_keyword_p.\n \n 2009-06-12  Aldy Hernandez  <aldyh@redhat.com>\n@@ -896,7 +901,7 @@\n \t* builtins.c: Same.\n \t* expr.c: Same.\n \t* java-tree.h (PUSH_FIELD): Add location field.\n-\t\n+\n 2009-06-09  Ian Lance Taylor  <iant@google.com>\n \n \t* verify.h: Remove extern \"C\".\n@@ -963,9 +968,9 @@\n \n 2009-04-09  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * builtins.c (compareAndSwapLong_builtin,\n-        compareAndSwapInt_builtin, compareAndSwapObject_builtin,\n-        VMSupportsCS8_builtin): Do not look at sync_compare_and_swap_cc.\n+\t* builtins.c (compareAndSwapLong_builtin,\n+\tcompareAndSwapInt_builtin, compareAndSwapObject_builtin,\n+\tVMSupportsCS8_builtin): Do not look at sync_compare_and_swap_cc.\n \n 2009-03-31  Richard Guenther  <rguenther@suse.de>\n \n@@ -1110,7 +1115,7 @@\n \tmixed declarations and code.\n \n \t2008-05-02  Doug Kwan  <dougkwan@google.com>\n-\t\n+\n \t* expr.c (build_java_throw_out_of_bounds_exception ): Wrap call to\n \t_Jv_ThrowBadArrayIndex with a COMPOUND_EXPR to return 0.\n \n@@ -1125,8 +1130,8 @@\n \n \t* java-gimplify.c (java_gimplify_expr): Make pre_p and post_p\n \tsequences.\n-\t(java_gimplify_self_mod_expr): Same.                                    \n-\t* java-tree.h (java_gimplify_expr): Make pre_p and post_p               \n+\t(java_gimplify_self_mod_expr): Same.\n+\t* java-tree.h (java_gimplify_expr): Make pre_p and post_p\n \tsequences.\n \n 2008-07-24  Jan Hubicka  <jh@suse.cz>\n@@ -1272,9 +1277,9 @@\n \n 2008-04-03  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * java-tree.h (insert_block): Kill.\n-        * decl.c (insert_block): Kill.\n-\t\t\n+\t* java-tree.h (insert_block): Kill.\n+\t* decl.c (insert_block): Kill.\n+\n 2008-04-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcj.texi: Include gpl_v3.texi instead of gpl.texi\n@@ -1305,10 +1310,10 @@\n \n 2008-03-11  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * jcf-parse.c (java_parse_file): Assert binding levels are\n-        left in order.\n-        * lang.c (LANG_HOOKS_CLEAR_BINDING_STACK, java_clear_binding_stack):\n-        Delete.\n+\t* jcf-parse.c (java_parse_file): Assert binding levels are\n+\tleft in order.\n+\t* lang.c (LANG_HOOKS_CLEAR_BINDING_STACK, java_clear_binding_stack):\n+\tDelete.\n \n 2008-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1637,12 +1642,12 @@\n 2007-07-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* class.c (java_treetreehash_hash, java_treetreehash_compare):\n-\tConstify. \n+\tConstify.\n \t* expr.c (type_assertion_eq): Likewise.\n \t* jcf-io.c (compare_path): Likewise.\n \t* jcf-parse.c (cmpstringp): Likewise.\n \t* verify-impl.c (get_one_type, compute_argument_types,\n-\tcompute_return_type): Likewise. \n+\tcompute_return_type): Likewise.\n \n 2007-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n@@ -1668,7 +1673,7 @@\n \n 2007-07-03  David Daney  <ddaney@avtrex.com>\n \n-\t* java/Make-lang.in (doc/gcj.info): Add $(gcc_docdir) to \n+\t* java/Make-lang.in (doc/gcj.info): Add $(gcc_docdir) to\n \tinclude path.\n \t(doc/gcj.dvi): Same.\n \t(doc/gcj.pdf): Same.\n@@ -1719,16 +1724,16 @@\n \n 2007-04-03  Andrew Haley  <aph@redhat.com>\n \n-        * jvgenmain.c (main): Change main to use class$, not class$$.\n-        (do_mangle_classname): Likewise.\n-        * class.c (hide): New function.\n-        (add_field): Hide everything that shouldn't be visible outside a\n-        DSO.\n-        (build_static_class_ref): Likewise.\n-        (build_classdollar_field): Likewise.\n-        (make_class_data): Likewise.\n-        (layout_class_method): Likewise.\n-        * expr.c (special_method_p): New function.\n+\t* jvgenmain.c (main): Change main to use class$, not class$$.\n+\t(do_mangle_classname): Likewise.\n+\t* class.c (hide): New function.\n+\t(add_field): Hide everything that shouldn't be visible outside a\n+\tDSO.\n+\t(build_static_class_ref): Likewise.\n+\t(build_classdollar_field): Likewise.\n+\t(make_class_data): Likewise.\n+\t(layout_class_method): Likewise.\n+\t* expr.c (special_method_p): New function.\n \n \t* class.c (push_class): Don't bogusly guess the source filename.\n \t* jcf-parse.c (give_name_to_class): Don't set input_location from\n@@ -2242,7 +2247,7 @@\n \n \t* expr.c (rewrite_arglist_getcaller): New.\n \t(rewrite_arglist_getclass): Fix indentation.\n-\t(rules): Add gnu.classpath.VMStackWalker.getCallingClass() and \n+\t(rules): Add gnu.classpath.VMStackWalker.getCallingClass() and\n \tgnu.classpath.VMStackWalker.getCallingClassLoader().\n \t* builtins.c (initialize_builtins): Remove duplicate def'n of\n \t__sync_synchronize.\n@@ -2307,21 +2312,21 @@\n \t* jcf-parse.c (field_offsets, bit_obstack): New variables.\n \t(jcf_parse): Write end marker to annotation_data.\n \t(java_parse_file): Create field_offsets bitmap.  Destroy it.\n-\t(annotation_grow, annotation_rewrite_byte) \n-\t(annotation_rewrite_short, annotation_rewrite_int) \n-\t(annotation_read_short, annotation_write_byte) \n-\t(annotation_write_short, annotation_write_int) \n-\t(handle_long_constant, handle_constant, handle_element_value) \n-\t(handle_annotation, handle_annotations) \n-\t(handle_annotation_attribute, rewrite_reflection_indexes) \n-\t(handle_member_annotations, handle_parameter_annotations) \n+\t(annotation_grow, annotation_rewrite_byte)\n+\t(annotation_rewrite_short, annotation_rewrite_int)\n+\t(annotation_read_short, annotation_write_byte)\n+\t(annotation_write_short, annotation_write_int)\n+\t(handle_long_constant, handle_constant, handle_element_value)\n+\t(handle_annotation, handle_annotations)\n+\t(handle_annotation_attribute, rewrite_reflection_indexes)\n+\t(handle_member_annotations, handle_parameter_annotations)\n \t(handle_default_annotation): New functions.\n-\t(HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE) \n-\t(HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE) \n-\t(HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE) \n-\t(HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE) \n+\t(HANDLE_RUNTIMEVISIBLEANNOTATIONS_ATTRIBUTE)\n+\t(HANDLE_RUNTIMEINVISIBLEANNOTATIONS_ATTRIBUTE)\n+\t(HANDLE_RUNTIMEVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE)\n+\t(HANDLE_RUNTIMEINVISIBLEPARAMETERANNOTATIONS_ATTRIBUTE)\n \t(HANDLE_ANNOTATIONDEFAULT_ATTRIBUTE): New definitions.\n-\t* java-tree.h (enum jv_attr_type, enum jv_attr_kind): New. \n+\t* java-tree.h (enum jv_attr_type, enum jv_attr_kind): New.\n \t(TYPE_REFLECTION_DATA): New.\n \t(TYPE_REFLECTION_DATASIZE): New.\n \t* jcf.h (enum cpool_tag): Convert a bunch of #define constants to\n@@ -2434,7 +2439,7 @@\n \tputVolatile_builtin, getVolatile_builtin): New builtins.\n \n 2006-06-08  Andrew Haley  <aph@redhat.com>\n- \n+\n \t* expr.c (build_field_ref): Pass NULL_TREE as SPECIAL arg to\n \tget_symbol_table_index().\n \t(maybe_rewrite_invocation): Set SPECIAL if we need to access a\n@@ -2454,7 +2459,7 @@\n \tit to build_symbol_entry().\n \t* parse.y (patch_invoke): Call maybe_rewrite_invocation() and set\n \tspecial accordingly.\n- \n+\n 2006-09-08  Andrew Haley  <aph@redhat.com>\n \n \t* class.c (layout_class_method): Use build_java_signature, not\n@@ -2491,9 +2496,9 @@\n \n 2006-07-07  Andrew Haley  <aph@redhat.com>\n \n-        * jcf-parse.c (set_source_filename): Don't check for\n+\t* jcf-parse.c (set_source_filename): Don't check for\n \tCLASS_FROM_CURRENTLY_COMPILED_P.\n-        Remove // comments.\n+\tRemove // comments.\n \n 2006-07-07  Andrew Haley  <aph@redhat.com>\n \n@@ -2699,7 +2704,7 @@\n \t* java-tree.h (update_aliases): Remove\n \t* expr.c (expand_iinc): Remove call to update_aliases().\n \t(STORE_INTERNAL): Likewise.\n-\t* decl.c (update_aliases, initialize_local_variable) \n+\t* decl.c (update_aliases, initialize_local_variable)\n \t(maybe_pushlevels): Set DECL_VALUE_EXPR for debugging decls.\n \n 2006-06-19  Andrew Haley  <aph@redhat.com>\n@@ -2999,7 +3004,7 @@\n \n \t* typeck.c (build_java_array_type): Generate TYPE_STUB_DECLs for\n \tarray types.\n-\t\n+\n 2006-02-08  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/22578:\n@@ -3238,7 +3243,7 @@\n \t* parse.y (maybe_create_class_interface_decl): Set TYPE_PACKAGE for\n \tthe newly created type. Set import lists here, not in create_class.\n \t(jdep_resolve_class): Set current_class.\n-\t(do_resolve_class): Use current_class's TYPE_PACKAGE to determine \n+\t(do_resolve_class): Use current_class's TYPE_PACKAGE to determine\n \tthe current package context, not ctxp->package.\n \t(cicp_cache): Removed.\n \t(class_in_current_package): Simplify implementation using TYPE_PACKAGE.\n@@ -3248,7 +3253,7 @@\n \n 2005-09-09  Andrew Haley  <aph@redhat.com>\n \n-\tPR libgcj/23182 \n+\tPR libgcj/23182\n \t* expr.c (pop_type_0): If the expected type is object or ptr\n \t(i.e. void*), return the type of the object we just popped from\n \tthe stack.\n@@ -3406,11 +3411,11 @@\n \tempty_statement.\n \n 2005-07-08  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* java-tree.h (LABEL_RETURN_LABELS): Use decl_non_common.\n \t(LABEL_PENDING_CHAIN): Ditto.\n \t(LABEL_PC): Ditto.\n-\t(DECL_BIT_INDEX): Ditto.\t\n+\t(DECL_BIT_INDEX): Ditto.\n \n 2005-07-07  Bryce McKinlay  <mckinlay@redhat.com>\n \n@@ -3419,7 +3424,7 @@\n \tcheck_inner_class_access.\n \t(check_inner_class_access): Use inner_class_accessible.\n \t(resolve_inner_class): Simplify arguments. Create circularity hash\n-\there. Keep looking for classes if we found one that was inaccessible. \n+\there. Keep looking for classes if we found one that was inaccessible.\n \tReturn the inaccessible class only if there is no other match.\n \t(do_resolve_class): Update for new resolve_inner_class arguments.\n \tDon't create circularity_hash here.\n@@ -3434,7 +3439,7 @@\n \t(java_complete_expand_method): Don't use purge_unchecked_exceptions\n \tor save/restore the exception list.\n \t(check_thrown_exceptions): Add uncaught exceptions in anonymous\n-\tclass initializers and constructors to the throws clause of the method.\t\n+\tclass initializers and constructors to the throws clause of the method.\n \n 2005-07-05  Bryce McKinlay  <mckinlay@redhat.com>\n \n@@ -3609,7 +3614,7 @@\n \n 2005-05-26  Bryce McKinlay  <mckinlay@redhat.com>\n \n-\t* decl.c (GCJ_BINARYCOMPAT_ADDITION, \n+\t* decl.c (GCJ_BINARYCOMPAT_ADDITION,\n \tGCJ_BOOTSTRAP_LOADER_ADDITION): Removed.\n \t(FLAG_BINARYCOMPAT_ABI, FLAG_BOOTSTRAP_LOADER,\n \tMINOR_BINARYCOMPAT_ABI_VERSION): New.\n@@ -3804,7 +3809,7 @@\n 2005-04-27  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* gcj.texi (libgcj Runtime Properties): Remove obsolete\n-\tgnu.gcj.runtime.NameFinder.* system properties. Update documentation \n+\tgnu.gcj.runtime.NameFinder.* system properties. Update documentation\n \tfor gnu.gcj.runtime.NameFinder.use_addr2line and gnu.gcj.progname.\n \n 2005-04-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n@@ -3851,7 +3856,7 @@\n \n \t* java-except.h (struct eh_range.handler): Remove unused field.\n \t(handle_nested_ranges): Remove function declaration.\n-\t(sanity_check_exception_range): Add function declaration.\t\n+\t(sanity_check_exception_range): Add function declaration.\n \t* verify.c (verify_jvm_instructions): Remove call to\n \thandle_nested_ranges.\n \t* verify-glue.c (verify_jvm_instructions_new): Call\n@@ -3950,7 +3955,7 @@\n \n \tPR java/20502\n \t* jcf-parse.c (duplicate_class_warning): New function.\n-\t(java_parse_file): Call duplicate_class_warning if \n+\t(java_parse_file): Call duplicate_class_warning if\n \tCLASS_FROM_CURRENTLY_COMPILED_P is already set.\n \t(parse_zip_file_entries): Likewise. Also set\n \tCLASS_FROM_CURRENTLY_COMPILED_P."}, {"sha": "da7dd0568ee4e20b4d6cc88589966a6a465c59e8", "filename": "gcc/java/lang.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff06e6b1b87fcf22033349184060d92b7a948108/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff06e6b1b87fcf22033349184060d92b7a948108/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=ff06e6b1b87fcf22033349184060d92b7a948108", "patch": "@@ -1,6 +1,6 @@\n /* Java(TM) language-specific utility routines.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2005, 2006, 2007, 2008, 2010 Free Software Foundation, Inc.\n+   2005, 2006, 2007, 2008, 2010, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -550,6 +550,7 @@ java_init_options_struct (struct gcc_options *opts)\n \n   /* In Java floating point operations never trap.  */\n   opts->x_flag_trapping_math = 0;\n+  opts->frontend_set_flag_trapping_math = true;\n \n   /* In Java arithmetic overflow always wraps around.  */\n   opts->x_flag_wrapv = 1;"}]}