{"sha": "2bd0a246c60fb6cf52f38e82d1750e175d258596", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkMGEyNDZjNjBmYjZjZjUyZjM4ZTgyZDE3NTBlMTc1ZDI1ODU5Ng==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-02-08T05:55:44Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-02-08T05:55:44Z"}, "message": "[libbacktrace] Handle DW_FORM_ref_addr\n\nAdd handling of the DW_FORM_ref_addr encoding to libbacktrace.\n\n2019-02-08  Tom de Vries  <tdevries@suse.de>\n\n\tPR libbacktrace/78063\n\t* dwarf.c (build_address_map): Keep all parsed units.\n\t(read_referenced_name_from_attr): Handle DW_FORM_ref_addr.\n\nFrom-SVN: r268663", "tree": {"sha": "5cb2d29e5baf28d9a9fa68dbca448c0a1677c1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cb2d29e5baf28d9a9fa68dbca448c0a1677c1e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd0a246c60fb6cf52f38e82d1750e175d258596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd0a246c60fb6cf52f38e82d1750e175d258596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd0a246c60fb6cf52f38e82d1750e175d258596", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd0a246c60fb6cf52f38e82d1750e175d258596/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0dc1a7f1dda2eb42b07e5519f758aa4ba2596b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dc1a7f1dda2eb42b07e5519f758aa4ba2596b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dc1a7f1dda2eb42b07e5519f758aa4ba2596b4c"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "06fa109a675f2544c48257a03cf98ca6c2944e7d", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd0a246c60fb6cf52f38e82d1750e175d258596/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd0a246c60fb6cf52f38e82d1750e175d258596/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=2bd0a246c60fb6cf52f38e82d1750e175d258596", "patch": "@@ -1,3 +1,9 @@\n+2019-02-08  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR libbacktrace/78063\n+\t* dwarf.c (build_address_map): Keep all parsed units.\n+\t(read_referenced_name_from_attr): Handle DW_FORM_ref_addr.\n+\n 2019-01-31  Tom de Vries  <tdevries@suse.de>\n \n \tPR libbacktrace/89136"}, {"sha": "d7dacf3ef32e23381b97db77eb2fa7475f56fa97", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd0a246c60fb6cf52f38e82d1750e175d258596/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd0a246c60fb6cf52f38e82d1750e175d258596/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=2bd0a246c60fb6cf52f38e82d1750e175d258596", "patch": "@@ -1513,14 +1513,12 @@ build_address_map (struct backtrace_state *state, uintptr_t base_address,\n   size_t units_count;\n   size_t i;\n   struct unit **pu;\n-  size_t prev_addrs_count;\n   size_t unit_offset = 0;\n \n   memset (&addrs->vec, 0, sizeof addrs->vec);\n   memset (&unit_vec->vec, 0, sizeof unit_vec->vec);\n   addrs->count = 0;\n   unit_vec->count = 0;\n-  prev_addrs_count = 0;\n \n   /* Read through the .debug_info section.  FIXME: Should we use the\n      .debug_aranges section?  gdb and addr2line don't use it, but I'm\n@@ -1620,18 +1618,6 @@ build_address_map (struct backtrace_state *state, uintptr_t base_address,\n \n       if (unit_buf.reported_underflow)\n \tgoto fail;\n-\n-      if (addrs->count > prev_addrs_count || unit_tag == DW_TAG_partial_unit)\n-\tprev_addrs_count = addrs->count;\n-      else\n-\t{\n-\t  /* Unit was not used; remove it from the vector.  */\n-\t  --units_count;\n-\t  units.size -= sizeof (u);\n-\t  units.alc += sizeof (u);\n-\t  free_abbrevs (state, &u->abbrevs, error_callback, data);\n-\t  backtrace_free (state, u, sizeof *u, error_callback, data);\n-\t}\n     }\n   if (info.reported_underflow)\n     goto fail;\n@@ -2189,13 +2175,19 @@ read_referenced_name_from_attr (struct dwarf_data *ddata, struct unit *u,\n       return NULL;\n     }\n \n-  if (attr->form == DW_FORM_ref_addr\n-      || attr->form == DW_FORM_ref_sig8)\n+  if (attr->form == DW_FORM_ref_sig8)\n+    return NULL;\n+\n+  if (val->encoding == ATTR_VAL_REF_INFO)\n     {\n-      /* This refers to an abstract origin defined in\n-\t some other compilation unit.  We can handle\n-\t this case if we must, but it's harder.  */\n-      return NULL;\n+      struct unit *unit\n+\t= find_unit (ddata->units, ddata->units_count,\n+\t\t     val->u.uint);\n+      if (unit == NULL)\n+\treturn NULL;\n+\n+      uint64_t offset = val->u.uint - unit->low_offset;\n+      return read_referenced_name (ddata, unit, offset, error_callback, data);\n     }\n \n   if (val->encoding == ATTR_VAL_UINT"}]}