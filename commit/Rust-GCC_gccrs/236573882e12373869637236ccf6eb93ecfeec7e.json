{"sha": "236573882e12373869637236ccf6eb93ecfeec7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2NTczODgyZTEyMzczODY5NjM3MjM2Y2NmNmViOTNlY2ZlZWM3ZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-08-10T17:43:02Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-08-10T17:43:02Z"}, "message": "mips.md: New reciprocal square root patterns that match sqrt(1.0/x) in addition to the...\n\n\n\t* config/mips/mips.md: New reciprocal square root patterns that\n\tmatch sqrt(1.0/x) in addition to the existing 1.0/sqrt(x) insns.\n\n\t* gcc.dg/mips-rsqrt-1.c: New test case.\n\t* gcc.dg/mips-rsqrt-2.c: New test case.\n\t* gcc.dg/mips-rsqrt-3.c: New test case.\n\nFrom-SVN: r85759", "tree": {"sha": "6c1c247cb4ccfbb4b6e56f40f779cebfd2c2b759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c1c247cb4ccfbb4b6e56f40f779cebfd2c2b759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/236573882e12373869637236ccf6eb93ecfeec7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236573882e12373869637236ccf6eb93ecfeec7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/236573882e12373869637236ccf6eb93ecfeec7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236573882e12373869637236ccf6eb93ecfeec7e/comments", "author": null, "committer": null, "parents": [{"sha": "c9ca9b88bbe5b837890e26d8b2741fd9b532ed1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ca9b88bbe5b837890e26d8b2741fd9b532ed1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ca9b88bbe5b837890e26d8b2741fd9b532ed1d"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "3a28b7c0e07af5a69e919bd4253b3053b47c9b8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=236573882e12373869637236ccf6eb93ecfeec7e", "patch": "@@ -1,3 +1,8 @@\n+2004-08-10  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* config/mips/mips.md: New reciprocal square root patterns that\n+\tmatch sqrt(1.0/x) in addition to the existing 1.0/sqrt(x) insns.\n+\n 2004-08-10  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm-protos.h (arm_set_return_address,"}, {"sha": "ac4c4b9473ec11330088a58ba201bcb3302504df", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=236573882e12373869637236ccf6eb93ecfeec7e", "patch": "@@ -2203,6 +2203,46 @@\n         (if_then_else (ne (symbol_ref \"TARGET_FIX_SB1\") (const_int 0))\n                       (const_int 8)\n                       (const_int 4)))])\n+\n+;; This pattern works around the early SB-1 rev2 core \"F1\" erratum (see\n+;; \"divdf3\" comment for details).\n+(define_insn \"\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(sqrt:DF (div:DF (match_operand:DF 1 \"const_float_1_operand\" \"\")\n+\t\t\t (match_operand:DF 2 \"register_operand\" \"f\"))))]\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && flag_unsafe_math_optimizations\"\n+{\n+  if (TARGET_FIX_SB1)\n+    return \"rsqrt.d\\t%0,%2\\;mov.d\\t%0,%0\";\n+  else\n+    return \"rsqrt.d\\t%0,%2\";\n+}\n+  [(set_attr \"type\"\t\"frsqrt\")\n+   (set_attr \"mode\"\t\"DF\")\n+   (set (attr \"length\")\n+        (if_then_else (ne (symbol_ref \"TARGET_FIX_SB1\") (const_int 0))\n+                      (const_int 8)\n+                      (const_int 4)))])\n+\n+;; This pattern works around the early SB-1 rev2 core \"F1\" erratum (see\n+;; \"divdf3\" comment for details).\n+(define_insn \"\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(sqrt:SF (div:SF (match_operand:SF 1 \"const_float_1_operand\" \"\")\n+\t\t\t (match_operand:SF 2 \"register_operand\" \"f\"))))]\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && flag_unsafe_math_optimizations\"\n+{\n+  if (TARGET_FIX_SB1)\n+    return \"rsqrt.s\\t%0,%2\\;mov.s\\t%0,%0\";\n+  else\n+    return \"rsqrt.s\\t%0,%2\";\n+}\n+  [(set_attr \"type\"\t\"frsqrt\")\n+   (set_attr \"mode\"\t\"SF\")\n+   (set (attr \"length\")\n+        (if_then_else (ne (symbol_ref \"TARGET_FIX_SB1\") (const_int 0))\n+                      (const_int 8)\n+                      (const_int 4)))])\n \f\n ;;\n ;;  ...................."}, {"sha": "2dda1e5af0a2c4ce35799c344fec6ebb333498ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=236573882e12373869637236ccf6eb93ecfeec7e", "patch": "@@ -1,3 +1,9 @@\n+2004-08-10  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.dg/mips-rsqrt-1.c: New test case.\n+\t* gcc.dg/mips-rsqrt-2.c: New test case.\n+\t* gcc.dg/mips-rsqrt-3.c: New test case.\n+\n 2004-08-10  Paul Brook  <paul@codesourcery.com>\n \n \t* gfortran.dg/der_io_1.f90: New test."}, {"sha": "1f742b2fe4bff339df01f71aabce11d948436824", "filename": "gcc/testsuite/gcc.dg/mips-rsqrt-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-1.c?ref=236573882e12373869637236ccf6eb93ecfeec7e", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target \"mips*-*-*\" } } */\n+/* { dg-options \"-O2 -ffast-math -mips4\" } */\n+/* { dg-final { scan-assembler \"rsqrt.d\" } } */\n+/* { dg-final { scan-assembler \"rsqrt.s\" } } */\n+\n+extern double sqrt(double);\n+extern float sqrtf(float);\n+\n+double foo(double x)\n+{\n+  return 1.0/sqrt(x);\n+}\n+\n+float bar(float x)\n+{\n+  return 1.0f/sqrtf(x);\n+}\n+"}, {"sha": "5c014abc180ef314b6f0d51b4702f0d7c0ee5967", "filename": "gcc/testsuite/gcc.dg/mips-rsqrt-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-2.c?ref=236573882e12373869637236ccf6eb93ecfeec7e", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target \"mips*-*-*\" } } */\n+/* { dg-options \"-O2 -ffast-math -mips4\" } */\n+/* { dg-final { scan-assembler \"rsqrt.d\" } } */\n+/* { dg-final { scan-assembler \"rsqrt.s\" } } */\n+\n+extern double sqrt(double);\n+extern float sqrtf(float);\n+\n+double foo(double x)\n+{\n+  return sqrt(1.0/x);\n+}\n+\n+float bar(float x)\n+{\n+  return sqrtf(1.0f/x);\n+}\n+"}, {"sha": "870a5c9aa6a820e6aaae2ffb6a81294f8291819e", "filename": "gcc/testsuite/gcc.dg/mips-rsqrt-3.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236573882e12373869637236ccf6eb93ecfeec7e/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmips-rsqrt-3.c?ref=236573882e12373869637236ccf6eb93ecfeec7e", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile { target \"mips*-*-*\" } } */\n+/* { dg-options \"-O2 -mips4\" } */\n+/* { dg-final { scan-assembler-not \"rsqrt.d\" } } */\n+/* { dg-final { scan-assembler-not \"rsqrt.s\" } } */\n+\n+extern double sqrt(double);\n+extern float sqrtf(float);\n+\n+double foo(double x)\n+{\n+  return 1.0/sqrt(x);\n+}\n+\n+double bar(double x)\n+{\n+  return sqrt(1.0/x);\n+}\n+\n+float foof(float x)\n+{\n+  return 1.0f/sqrtf(x);\n+}\n+\n+float barf(float x)\n+{\n+  return sqrtf(1.0f/x);\n+}\n+"}]}