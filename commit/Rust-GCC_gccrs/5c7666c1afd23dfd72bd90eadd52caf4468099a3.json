{"sha": "5c7666c1afd23dfd72bd90eadd52caf4468099a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3NjY2YzFhZmQyM2RmZDcyYmQ5MGVhZGQ1MmNhZjQ0NjgwOTlhMw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cambridge.redhat.com", "date": "2002-05-29T18:05:08Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2002-05-29T18:05:08Z"}, "message": "fr30.md: Remove previous restriction on splits.\n\n* config/fr30/fr30.md: Remove previous restriction on splits.\n  Enforce conformance through gen_lowpart and cont_int_operand.\n* config/fr30/fr30.h (BSS_SECTION_ASM_OP): Use \".section .bss\"\n  as the assembler does not support \".bss\".\n\nFrom-SVN: r54010", "tree": {"sha": "c9b36ce9e075672a8a7f7c1bb23ac82115ae6421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9b36ce9e075672a8a7f7c1bb23ac82115ae6421"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c7666c1afd23dfd72bd90eadd52caf4468099a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7666c1afd23dfd72bd90eadd52caf4468099a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7666c1afd23dfd72bd90eadd52caf4468099a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7666c1afd23dfd72bd90eadd52caf4468099a3/comments", "author": null, "committer": null, "parents": [{"sha": "45beef47f36e1b423ed6fefee2fe4397dd1e172d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45beef47f36e1b423ed6fefee2fe4397dd1e172d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45beef47f36e1b423ed6fefee2fe4397dd1e172d"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "b7134ef0e6ad1472cbb53a1eed86650fbef5a88a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7666c1afd23dfd72bd90eadd52caf4468099a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7666c1afd23dfd72bd90eadd52caf4468099a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c7666c1afd23dfd72bd90eadd52caf4468099a3", "patch": "@@ -1,3 +1,10 @@\n+2002-05-29  Nick Clifton  <nickc@cambridge.redhat.com>\n+\n+\t* config/fr30/fr30.md: Remove previous restriction on splits.\n+\tEnforce conformance through gen_lowpart and cont_int_operand.\n+        * config/fr30/fr30.h (BSS_SECTION_ASM_OP): Use \".section .bss\"\n+\tas the assembler does not support \".bss\".\n+\n 2002-05-29  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/i386/netbsd-elf.h (TARGET_OS_CPP_BUILTINS): Define."}, {"sha": "33ba6ca31acce912e503551ffca3ceb43fa97e2d", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7666c1afd23dfd72bd90eadd52caf4468099a3/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7666c1afd23dfd72bd90eadd52caf4468099a3/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=5c7666c1afd23dfd72bd90eadd52caf4468099a3", "patch": "@@ -1134,7 +1134,7 @@ do\t\t\t\t\t\t\t\t\t\t\\\n    uninitialized global data will be output in the data section if\n    `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n    used.  */\n-#define BSS_SECTION_ASM_OP \"\\t.bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.section .bss\"\n \n /*}}}*/ \f\n /*{{{  The Overall Framework of an Assembler File.  */"}, {"sha": "8557ce898d2b6efc8e14f8ddc161b284e56fa4b6", "filename": "gcc/config/fr30/fr30.md", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7666c1afd23dfd72bd90eadd52caf4468099a3/gcc%2Fconfig%2Ffr30%2Ffr30.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7666c1afd23dfd72bd90eadd52caf4468099a3/gcc%2Fconfig%2Ffr30%2Ffr30.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.md?ref=5c7666c1afd23dfd72bd90eadd52caf4468099a3", "patch": "@@ -286,13 +286,13 @@\n ;; and time by loading the positive value and then sign extending it.\n (define_split\n   [(set (match_operand:SI 0 \"register_operand\"  \"\")\n-\t(match_operand:SI 1 \"immediate_operand\" \"\"))]\n-   \"INTVAL (operands[1]) <= -1 && INTVAL (operands[1]) >= -128\n-   && GET_CODE (operands[0]) == REG\"\n-   [(set:SI (match_dup 0) (match_dup 2))\n-    (set:SI (match_dup 0) (sign_extend:SI (subreg:QI (match_dup 0) 0)))]\n+\t(match_operand:SI 1 \"const_int_operand\" \"\"))]\n+   \"INTVAL (operands[1]) <= -1 && INTVAL (operands[1]) >= -128\"\n+   [(set:SI (match_dup 0) (match_dup 1))\n+    (set:SI (match_dup 0) (sign_extend:SI (match_dup 2)))]\n    \"{\n-   operands[2] = GEN_INT (INTVAL (operands[1]) & 0xff);\n+   operands[1] = GEN_INT (INTVAL (operands[1]) & 0xff);\n+   operands[2] = gen_lowpart (QImode, operands[0]);\n    }\"\n )\n \n@@ -301,9 +301,8 @@\n ;; and space by loading the byte value and shifting it into place.\n (define_split\n   [(set (match_operand:SI 0 \"register_operand\"  \"\")\n-\t(match_operand:SI 1 \"immediate_operand\" \"\"))]\n-   \"(INTVAL (operands[1]) < 0) && ((INTVAL (operands[1]) & 0x00ffffff) == 0)\n-    && GET_CODE (operands[0]) == REG\"\n+\t(match_operand:SI 1 \"const_int_operand\" \"\"))]\n+   \"(INTVAL (operands[1]) < 0) && ((INTVAL (operands[1]) & 0x00ffffff) == 0)\"\n    [(set:SI (match_dup 0) (match_dup 2))\n     (parallel [(set:SI (match_dup 0) (ashift:SI (match_dup 0) (const_int 24)))\n \t       (clobber (reg:CC 16))])]\n@@ -319,10 +318,9 @@\n ;; and shifting it into place.\n (define_split\n   [(set (match_operand:SI 0 \"register_operand\"  \"\")\n-\t(match_operand:SI 1 \"immediate_operand\" \"\"))]\n+\t(match_operand:SI 1 \"const_int_operand\" \"\"))]\n    \"(INTVAL (operands[1]) > 0x00ffffff)\n-   && ((INTVAL (operands[1]) >> exact_log2 (INTVAL (operands[1]) & (- INTVAL (operands[1])))) < 0x100)\n-   && GET_CODE (operands[0]) == REG\"\n+   && ((INTVAL (operands[1]) >> exact_log2 (INTVAL (operands[1]) & (- INTVAL (operands[1])))) < 0x100)\"\n    [(set:SI (match_dup 0) (match_dup 2))\n     (parallel [(set:SI (match_dup 0) (ashift:SI (match_dup 0) (match_dup 3)))\n \t       (clobber (reg:CC 16))])]\n@@ -1439,6 +1437,7 @@\n   \"\"\n   [(set_attr \"length\" \"0\")]\n )\n+;;}}} \f\n   \n ;; Local Variables:\n ;; mode: md"}]}