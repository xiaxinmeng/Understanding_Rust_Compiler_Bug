{"sha": "883312dc79806f513275b72502231c751c14ff72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgzMzEyZGM3OTgwNmY1MTMyNzViNzI1MDIyMzFjNzUxYzE0ZmY3Mg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2017-06-28T09:21:16Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2017-06-28T09:21:16Z"}, "message": "Use ucontext_t not struct ucontext in linux-unwind.h files.\n\nCurrent glibc no longer gives the ucontext_t type the tag struct\nucontext, to conform with POSIX namespace rules.  This requires\nvarious linux-unwind.h files in libgcc, that were previously using\nstruct ucontext, to be fixed to use ucontext_t instead.  This is\nsimilar to the removal of the struct siginfo tag from siginfo_t some\nyears ago.\n\nThis patch changes those files to use ucontext_t instead.  As the\nstandard name that should be unconditionally safe, so this is not\nrestricted to architectures supported by glibc, or conditioned on the\nglibc version.\n\nTested compilation together with current glibc with glibc's\nbuild-many-glibcs.py.\n\n\t* config/aarch64/linux-unwind.h (aarch64_fallback_frame_state),\n\tconfig/alpha/linux-unwind.h (alpha_fallback_frame_state),\n\tconfig/bfin/linux-unwind.h (bfin_fallback_frame_state),\n\tconfig/i386/linux-unwind.h (x86_64_fallback_frame_state,\n\tx86_fallback_frame_state), config/m68k/linux-unwind.h (struct\n\tuw_ucontext), config/nios2/linux-unwind.h (struct nios2_ucontext),\n\tconfig/pa/linux-unwind.h (pa32_fallback_frame_state),\n\tconfig/riscv/linux-unwind.h (riscv_fallback_frame_state),\n\tconfig/sh/linux-unwind.h (sh_fallback_frame_state),\n\tconfig/tilepro/linux-unwind.h (tile_fallback_frame_state),\n\tconfig/xtensa/linux-unwind.h (xtensa_fallback_frame_state): Use\n\tucontext_t instead of struct ucontext.\n\nFrom-SVN: r249731", "tree": {"sha": "66fb0b08477787df13afde783070a42340bab415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66fb0b08477787df13afde783070a42340bab415"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/883312dc79806f513275b72502231c751c14ff72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883312dc79806f513275b72502231c751c14ff72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883312dc79806f513275b72502231c751c14ff72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883312dc79806f513275b72502231c751c14ff72/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "601d22f69093aa98dcf9593bc138da7ba8281e05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601d22f69093aa98dcf9593bc138da7ba8281e05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/601d22f69093aa98dcf9593bc138da7ba8281e05"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "cc88bc99077876a1ba63abfcde8e25e2137449c6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -1,3 +1,18 @@\n+2017-06-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/aarch64/linux-unwind.h (aarch64_fallback_frame_state),\n+\tconfig/alpha/linux-unwind.h (alpha_fallback_frame_state),\n+\tconfig/bfin/linux-unwind.h (bfin_fallback_frame_state),\n+\tconfig/i386/linux-unwind.h (x86_64_fallback_frame_state,\n+\tx86_fallback_frame_state), config/m68k/linux-unwind.h (struct\n+\tuw_ucontext), config/nios2/linux-unwind.h (struct nios2_ucontext),\n+\tconfig/pa/linux-unwind.h (pa32_fallback_frame_state),\n+\tconfig/riscv/linux-unwind.h (riscv_fallback_frame_state),\n+\tconfig/sh/linux-unwind.h (sh_fallback_frame_state),\n+\tconfig/tilepro/linux-unwind.h (tile_fallback_frame_state),\n+\tconfig/xtensa/linux-unwind.h (xtensa_fallback_frame_state): Use\n+\tucontext_t instead of struct ucontext.\n+\n 2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* config.host (i*86-wrs-vxworks7): Handle new acceptable triplet."}, {"sha": "d46d5f53be379ec2dbc9a5ba95d51e22c1d52c2f", "filename": "libgcc/config/aarch64/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Faarch64%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Faarch64%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Faarch64%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -55,7 +55,7 @@ aarch64_fallback_frame_state (struct _Unwind_Context *context,\n   struct rt_sigframe\n   {\n     siginfo_t info;\n-    struct ucontext uc;\n+    ucontext_t uc;\n   };\n \n   struct rt_sigframe *rt_;"}, {"sha": "7202516581d2e84e34f4ad4150a2affac484918c", "filename": "libgcc/config/alpha/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Falpha%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Falpha%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -51,7 +51,7 @@ alpha_fallback_frame_state (struct _Unwind_Context *context,\n     {\n       struct rt_sigframe {\n \tsiginfo_t info;\n-\tstruct ucontext uc;\n+\tucontext_t uc;\n       } *rt_ = context->cfa;\n       sc = &rt_->uc.uc_mcontext;\n     }"}, {"sha": "37e9feb69659af047f5c66e7be9b34173d4d6c37", "filename": "libgcc/config/bfin/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fbfin%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fbfin%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fbfin%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -52,7 +52,7 @@ bfin_fallback_frame_state (struct _Unwind_Context *context,\n \tvoid *puc;\n \tchar retcode[8];\n \tsiginfo_t info;\n-\tstruct ucontext uc;\n+\tucontext_t uc;\n       } *rt_ = context->cfa;\n \n       /* The void * cast is necessary to avoid an aliasing warning."}, {"sha": "2009ad72260df0b33fed7c42f99927e67781bb4b", "filename": "libgcc/config/i386/linux-unwind.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -58,7 +58,7 @@ x86_64_fallback_frame_state (struct _Unwind_Context *context,\n   if (*(unsigned char *)(pc+0) == 0x48\n       && *(unsigned long long *)(pc+1) == RT_SIGRETURN_SYSCALL)\n     {\n-      struct ucontext *uc_ = context->cfa;\n+      ucontext_t *uc_ = context->cfa;\n       /* The void * cast is necessary to avoid an aliasing warning.\n          The aliasing warning is correct, but should not be a problem\n          because it does not alias anything.  */\n@@ -138,7 +138,7 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n \tsiginfo_t *pinfo;\n \tvoid *puc;\n \tsiginfo_t info;\n-\tstruct ucontext uc;\n+\tucontext_t uc;\n       } *rt_ = context->cfa;\n       /* The void * cast is necessary to avoid an aliasing warning.\n          The aliasing warning is correct, but should not be a problem"}, {"sha": "9ea39d454aaa777439d9702e138bad3bf6026f27", "filename": "libgcc/config/m68k/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fm68k%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fm68k%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm68k%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -33,7 +33,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* <sys/ucontext.h> is unfortunately broken right now.  */\n struct uw_ucontext {\n \tunsigned long\t  uc_flags;\n-\tstruct ucontext  *uc_link;\n+\tucontext_t\t *uc_link;\n \tstack_t\t\t  uc_stack;\n \tmcontext_t\t  uc_mcontext;\n \tunsigned long\t  uc_filler[80];"}, {"sha": "204359d7b925e885376d8d8cb9c236c838f18382", "filename": "libgcc/config/nios2/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fnios2%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fnios2%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnios2%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -38,7 +38,7 @@ struct nios2_mcontext {\n \n struct nios2_ucontext {\n   unsigned long uc_flags;\n-  struct ucontext *uc_link;\n+  ucontext_t *uc_link;\n   stack_t uc_stack;\n   struct nios2_mcontext uc_mcontext;\n   sigset_t uc_sigmask;\t/* mask last for extensibility */"}, {"sha": "c2c3409bcc1f77187c1488d675d4f526849dfc2f", "filename": "libgcc/config/pa/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fpa%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fpa%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -80,7 +80,7 @@ pa32_fallback_frame_state (struct _Unwind_Context *context,\n   struct sigcontext *sc;\n   struct rt_sigframe {\n     siginfo_t info;\n-    struct ucontext uc;\n+    ucontext_t uc;\n   } *frame;\n \n   /* rt_sigreturn trampoline:"}, {"sha": "1c8aeff7ef09cd4a9dbb7447de13d3f431e5aa4f", "filename": "libgcc/config/riscv/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Friscv%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Friscv%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -42,7 +42,7 @@ riscv_fallback_frame_state (struct _Unwind_Context *context,\n   struct rt_sigframe\n   {\n     siginfo_t info;\n-    struct ucontext uc;\n+    ucontext_t uc;\n   };\n \n   struct rt_sigframe *rt_;"}, {"sha": "a8c98220282a575adabdf3f10456667d143424ab", "filename": "libgcc/config/sh/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fsh%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fsh%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -82,7 +82,7 @@ sh_fallback_frame_state (struct _Unwind_Context *context,\n     {\n       struct rt_sigframe {\n \tsiginfo_t info;\n-\tstruct ucontext uc;\n+\tucontext_t uc;\n       } *rt_ = context->cfa;\n       /* The void * cast is necessary to avoid an aliasing warning.\n          The aliasing warning is correct, but should not be a problem"}, {"sha": "dba3b41027966c757885a9017647e16bf9031947", "filename": "libgcc/config/tilepro/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Ftilepro%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Ftilepro%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilepro%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -61,7 +61,7 @@ tile_fallback_frame_state (struct _Unwind_Context *context,\n   struct rt_sigframe {\n     unsigned char save_area[C_ABI_SAVE_AREA_SIZE];\n     siginfo_t info;\n-    struct ucontext uc;\n+    ucontext_t uc;\n   } *rt_;\n \n   /* Return if this is not a signal handler.  */"}, {"sha": "2cb9eb1f7390fba36615534b6745ba138b26618b", "filename": "libgcc/config/xtensa/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fxtensa%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883312dc79806f513275b72502231c751c14ff72/libgcc%2Fconfig%2Fxtensa%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Flinux-unwind.h?ref=883312dc79806f513275b72502231c751c14ff72", "patch": "@@ -67,7 +67,7 @@ xtensa_fallback_frame_state (struct _Unwind_Context *context,\n \n   struct rt_sigframe {\n     siginfo_t info;\n-    struct ucontext uc;\n+    ucontext_t uc;\n   } *rt_;\n \n   /* movi a2, __NR_rt_sigreturn; syscall */"}]}