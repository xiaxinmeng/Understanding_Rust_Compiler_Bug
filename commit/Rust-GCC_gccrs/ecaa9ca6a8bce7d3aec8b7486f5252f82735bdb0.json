{"sha": "ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "node_id": "C_kwDOANBUbNoAKGVjYWE5Y2E2YThiY2U3ZDNhZWM4Yjc0ODZmNTI1MmY4MjczNWJkYjA", "commit": {"author": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-09-23T17:08:30Z"}, "committer": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-10-20T19:02:10Z"}, "message": "testsuite: Sanitize fails for SP FPU on Arm\n\nThis patch stops reporting fails for Arm targets with single\nprecision floating point unit for types wider than 32 bits (the width\nof float on arm-none-eabi).\n\nAs reported in PR102017, fenv is reported as supported in recent\nversions of newlib. At the same time, for some Arm targets, the\nimplementation in libgcc does not support exceptions and thus, the\ntest fails with a call to abort().\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/target-supports.exp\n\t(check_effective_target_fenv_exceptions_double): New.\n\t(check_effective_target_fenv_exceptions_long_double): New.\n\t* gcc.dg/c2x-float-7.c: Split into 3 tests...\n\t* gcc.dg/c2x-float-7a.c: Float part of c2x-float-7.c.\n\t* gcc.dg/c2x-float-7b.c: Double part of c2x-float-7.c.\n\t* gcc.dg/c2x-float-7c.c: Long double part of c2x-float-7.c.\n\t* gcc.dg/pr95115.c: Switch to fenv_exceptions_double.\n\t* gcc.dg/torture/float32x-nan-floath.c: Likewise.\n\t* gcc.dg/torture/float32x-nan.c: Likewise.\n\t* gcc.dg/torture/float64-nan-floath.c: Likewise.\n\t* gcc.dg/torture/float64-nan.c: Likewise.\n\t* gcc.dg/torture/inf-compare-1.c: Likewise.\n\t* gcc.dg/torture/inf-compare-2.c: Likewise.\n\t* gcc.dg/torture/inf-compare-3.c: Likewise.\n\t* gcc.dg/torture/inf-compare-4.c: Likewise.\n\t* gcc.dg/torture/inf-compare-5.c: Likewise.\n\t* gcc.dg/torture/inf-compare-6.c: Likewise.\n\t* gcc.dg/torture/inf-compare-7.c: Likewise.\n\t* gcc.dg/torture/inf-compare-8.c: Likewise.\n\t* gcc.dg/torture/pr52451.c: Likewise.\n\t* gcc.dg/torture/pr82692.c: Likewise.\n\t* gcc.dg/torture/inf-compare-1-float.c: New test.\n\t* gcc.dg/torture/inf-compare-2-float.c: New test.\n\t* gcc.dg/torture/inf-compare-3-float.c: New test.\n\t* gcc.dg/torture/inf-compare-4-float.c: New test.\n\t* gcc.dg/torture/inf-compare-5-float.c: New test.\n\t* gcc.dg/torture/inf-compare-6-float.c: New test.\n\t* gcc.dg/torture/inf-compare-7-float.c: New test.\n\t* gcc.dg/torture/inf-compare-8-float.c: New test.\n\nCo-Authored-By: Yvan ROUX <yvan.roux@foss.st.com>\nSigned-off-by: Torbj\u00f6rn SVENSSON <torbjorn.svensson@foss.st.com>", "tree": {"sha": "6ff84cd755c0a26d1591966779aaaaf78b7df29e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ff84cd755c0a26d1591966779aaaaf78b7df29e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/comments", "author": null, "committer": null, "parents": [{"sha": "14272aec22dcacbb3b937d6c5b86794faaa24620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14272aec22dcacbb3b937d6c5b86794faaa24620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14272aec22dcacbb3b937d6c5b86794faaa24620"}], "stats": {"total": 409, "additions": 345, "deletions": 64}, "files": [{"sha": "0c90ff241650d5ceaa0e9e2a0622638af415e6f0", "filename": "gcc/testsuite/gcc.dg/c2x-float-7.c", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14272aec22dcacbb3b937d6c5b86794faaa24620/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14272aec22dcacbb3b937d6c5b86794faaa24620/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7.c?ref=14272aec22dcacbb3b937d6c5b86794faaa24620", "patch": "@@ -1,49 +0,0 @@\n-/* Test SNAN macros.  Runtime exceptions test, to verify NaN is\n-   signaling.  */\n-/* { dg-do run } */\n-/* { dg-require-effective-target fenv_exceptions } */\n-/* { dg-options \"-std=c2x -pedantic-errors -fsignaling-nans\" } */\n-/* { dg-add-options ieee } */\n-\n-#include <fenv.h>\n-#include <float.h>\n-\n-/* These should be defined if and only if signaling NaNs are supported\n-   for the given types.  If the testsuite gains effective-target\n-   support for targets not supporting signaling NaNs, or not\n-   supporting them for all types, this test should be made\n-   appropriately conditional.  */\n-#ifndef FLT_SNAN\n-#error \"FLT_SNAN undefined\"\n-#endif\n-#ifndef DBL_SNAN\n-#error \"DBL_SNAN undefined\"\n-#endif\n-#ifndef LDBL_SNAN\n-#error \"LDBL_SNAN undefined\"\n-#endif\n-\n-volatile float f = FLT_SNAN;\n-volatile double d = DBL_SNAN;\n-volatile long double ld = LDBL_SNAN;\n-\n-extern void abort (void);\n-extern void exit (int);\n-\n-int\n-main (void)\n-{\n-  feclearexcept (FE_ALL_EXCEPT);\n-  f += f;\n-  if (!fetestexcept (FE_INVALID))\n-    abort ();\n-  feclearexcept (FE_ALL_EXCEPT);\n-  d += d;\n-  if (!fetestexcept (FE_INVALID))\n-    abort ();\n-  feclearexcept (FE_ALL_EXCEPT);\n-  ld += ld;\n-  if (!fetestexcept (FE_INVALID))\n-    abort ();\n-  exit (0);\n-}"}, {"sha": "129e7906adc63e59d5ddc1d7d869a7ecdfc4bb69", "filename": "gcc/testsuite/gcc.dg/c2x-float-7a.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7a.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,32 @@\n+/* Test SNAN macros.  Runtime exceptions test, to verify NaN is\n+   signaling.  */\n+/* { dg-do run } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-options \"-std=c2x -pedantic-errors -fsignaling-nans\" } */\n+/* { dg-add-options ieee } */\n+\n+#include <fenv.h>\n+#include <float.h>\n+\n+/* This should be defined if and only if signaling NaNs is supported\n+   for the given type.  If the testsuite gains effective-target\n+   support for targets not supporting signaling NaNs, this test\n+   should be made appropriately conditional.  */\n+#ifndef FLT_SNAN\n+#error \"FLT_SNAN undefined\"\n+#endif\n+\n+volatile float f = FLT_SNAN;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  feclearexcept (FE_ALL_EXCEPT);\n+  f += f;\n+  if (!fetestexcept (FE_INVALID))\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "0ae9038c1f2a2453405cc33fb7c47da383c04984", "filename": "gcc/testsuite/gcc.dg/c2x-float-7b.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7b.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,32 @@\n+/* Test SNAN macros.  Runtime exceptions test, to verify NaN is\n+   signaling.  */\n+/* { dg-do run } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n+/* { dg-options \"-std=c2x -pedantic-errors -fsignaling-nans\" } */\n+/* { dg-add-options ieee } */\n+\n+#include <fenv.h>\n+#include <float.h>\n+\n+/* This should be defined if and only if signaling NaNs is supported\n+   for the given type.  If the testsuite gains effective-target\n+   support for targets not supporting signaling NaNs, this test\n+   should be made appropriately conditional.  */\n+#ifndef DBL_SNAN\n+#error \"DBL_SNAN undefined\"\n+#endif\n+\n+volatile double d = DBL_SNAN;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  feclearexcept (FE_ALL_EXCEPT);\n+  d += d;\n+  if (!fetestexcept (FE_INVALID))\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "038fd5501b309e727f099e38853c2bd8eb6e327f", "filename": "gcc/testsuite/gcc.dg/c2x-float-7c.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-7c.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,32 @@\n+/* Test SNAN macros.  Runtime exceptions test, to verify NaN is\n+   signaling.  */\n+/* { dg-do run } */\n+/* { dg-require-effective-target fenv_exceptions_long_double } */\n+/* { dg-options \"-std=c2x -pedantic-errors -fsignaling-nans\" } */\n+/* { dg-add-options ieee } */\n+\n+#include <fenv.h>\n+#include <float.h>\n+\n+/* This should be defined if and only if signaling NaNs is supported\n+   for the given type.  If the testsuite gains effective-target\n+   support for targets not supporting signaling NaNs, this test\n+   should be made appropriately conditional.  */\n+#ifndef LDBL_SNAN\n+#error \"LDBL_SNAN undefined\"\n+#endif\n+\n+volatile long double ld = LDBL_SNAN;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  feclearexcept (FE_ALL_EXCEPT);\n+  ld += ld;\n+  if (!fetestexcept (FE_INVALID))\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "69c4f83250ca2213694337265bca5ac2cfa7ab1a", "filename": "gcc/testsuite/gcc.dg/pr95115.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr95115.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr95115.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr95115.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -ftrapping-math\" } */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #include <fenv.h>\n #include <stdlib.h>"}, {"sha": "8d58b41e0697315fac33bb34aaeedd6ffb6952c0", "filename": "gcc/testsuite/gcc.dg/torture/float32x-nan-floath.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat32x-nan-floath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat32x-nan-floath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat32x-nan-floath.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -4,7 +4,7 @@\n /* { dg-add-options float32x } */\n /* { dg-add-options ieee } */\n /* { dg-require-effective-target float32x_runtime } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #define WIDTH 32\n #define EXT 1"}, {"sha": "46f35a4ca80d5115b867a9ce28ad32476b52c7f1", "filename": "gcc/testsuite/gcc.dg/torture/float32x-nan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat32x-nan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat32x-nan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat32x-nan.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -4,7 +4,7 @@\n /* { dg-add-options float32x } */\n /* { dg-add-options ieee } */\n /* { dg-require-effective-target float32x_runtime } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #define WIDTH 32\n #define EXT 1"}, {"sha": "444f234737bfb414f37fc01efb293cfea2df7fd8", "filename": "gcc/testsuite/gcc.dg/torture/float64-nan-floath.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat64-nan-floath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat64-nan-floath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat64-nan-floath.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -4,7 +4,7 @@\n /* { dg-add-options float64 } */\n /* { dg-add-options ieee } */\n /* { dg-require-effective-target float64_runtime } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #define WIDTH 64\n #define EXT 0"}, {"sha": "11b70edea37319da7be090b41f10ef85808f85f6", "filename": "gcc/testsuite/gcc.dg/torture/float64-nan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat64-nan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat64-nan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat64-nan.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -4,7 +4,7 @@\n /* { dg-add-options float64 } */\n /* { dg-add-options ieee } */\n /* { dg-require-effective-target float64_runtime } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #define WIDTH 64\n #define EXT 0"}, {"sha": "6409878f39f038763d4e366d403ef0c3721ccc3f", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-1-float.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-1-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-1-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-1-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run { xfail { powerpc*-*-* } } } */\n+/* remove the xfail for powerpc when pr58684 is fixed */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x > __builtin_inf ();\n+  if (i != 0 || !fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "5e0a2d0c601cd93a51fb43850037963292dafd4d", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-1.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { xfail { powerpc*-*-* } } } */\n /* remove the xfail for powerpc when pr58684 is fixed */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n /* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n \n #include <fenv.h>"}, {"sha": "3cb7df8c15776d2c2d357d08ada3415104542706", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-2-float.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-2-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-2-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-2-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run { xfail { powerpc*-*-* } } } */\n+/* remove the xfail for powerpc when pr58684 is fixed */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x < -__builtin_inf ();\n+  if (i != 0 || !fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "6e396fb6c98ba8ab44ca565afcfc03c5fa45cbf0", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-2.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { xfail { powerpc*-*-* } } } */\n /* remove the xfail for powerpc when pr58684 is fixed */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n /* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n \n #include <fenv.h>"}, {"sha": "297aa0e2e0e1e20f1a7213b3108af27633e2bb32", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-3-float.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-3-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-3-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-3-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run { xfail { powerpc*-*-* } } } */\n+/* remove the xfail for powerpc when pr58684 is fixed */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x <= __builtin_inf ();\n+  if (i != 0 || !fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "cac8c68f49f84d3058f305ab110db56c852336be", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-3.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { xfail { powerpc*-*-* } } } */\n /* remove the xfail for powerpc when pr58684 is fixed */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n /* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n \n #include <fenv.h>"}, {"sha": "e719c3700e987de6a7a72521d5717151b469454c", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-4-float.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-4-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-4-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-4-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run { xfail { powerpc*-*-* } } } */\n+/* remove the xfail for powerpc when pr58684 is fixed */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x >= -__builtin_inf ();\n+  if (i != 0 || !fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "43b2b2f04ff8d8478aeb5cf7a382b7b6babdecc2", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-4.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run { xfail { powerpc*-*-* } } } */\n /* remove the xfail for powerpc when pr58684 is fixed */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n /* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n \n #include <fenv.h>"}, {"sha": "0050644ee8dbef2397a84bc37a42a197c4b2aa1d", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-5-float.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-5-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-5-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-5-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x == __builtin_inf ();\n+  if (i != 0 || fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "37289b4771f8b92e21d4bb4e1baf6ab4b87faf03", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-5.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #include <fenv.h>\n "}, {"sha": "46e8758b4aa9f348695a524ec3b12c79a2d41af1", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-6-float.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-6-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-6-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-6-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x == -__builtin_inf ();\n+  if (i != 0 || fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "7a8ff01fab26ad5ad16f8d55404f587ccf227631", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-6.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #include <fenv.h>\n "}, {"sha": "11d987a9f4dee2580a2ec15b7f96786a46cf3f25", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-7-float.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-7-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-7-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-7-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x != __builtin_inf ();\n+  if (i != 1 || fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "c0e080b40275d117e58427aa1de246e1febebcce", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-7.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #include <fenv.h>\n "}, {"sha": "5510c67401c8a2f902220d2349d872e8b4133c58", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-8-float.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-8-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-8-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-8-float.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float x = __builtin_nan (\"\");\n+volatile int i;\n+\n+int\n+main (void)\n+{\n+  i = x != -__builtin_inf ();\n+  if (i != 1 || fetestexcept (FE_INVALID))\n+    abort ();\n+}"}, {"sha": "ebc0260bfba42465c0c7d1789e70e1667418efd0", "filename": "gcc/testsuite/gcc.dg/torture/inf-compare-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finf-compare-8.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #include <fenv.h>\n "}, {"sha": "aa19c1bc39a59895cef77e67f17fc62a921770b4", "filename": "gcc/testsuite/gcc.dg/torture/pr52451.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52451.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52451.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52451.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_long_double } */\n /* { dg-skip-if \"fenv\" { powerpc-ibm-aix* } } */\n \n #include <fenv.h>"}, {"sha": "88a30b9182703844adb59ecfb2833ed31661c12d", "filename": "gcc/testsuite/gcc.dg/torture/pr82692.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82692.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82692.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82692.c?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-add-options ieee } */\n-/* { dg-require-effective-target fenv_exceptions } */\n+/* { dg-require-effective-target fenv_exceptions_double } */\n \n #include <fenv.h>\n "}, {"sha": "8b5995a2f414e6f0a2f66f2c52f289e5b53c3f4e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "patch": "@@ -10852,6 +10852,80 @@ proc check_effective_target_fenv_exceptions_dfp {} {\n     } [add_options_for_ieee \"-std=gnu99\"]]\n }\n \n+# Return 1 if <fenv.h> is available with all the standard IEEE\n+# exceptions and floating-point exceptions are raised by arithmetic\n+# operations.  (If the target requires special options for \"inexact\"\n+# exceptions, those need to be specified in the testcases.)\n+\n+proc check_effective_target_fenv_exceptions_double {} {\n+    return [check_runtime fenv_exceptions_double {\n+\t#include <fenv.h>\n+\t#include <stdlib.h>\n+\t#ifndef FE_DIVBYZERO\n+\t# error Missing FE_DIVBYZERO\n+\t#endif\n+\t#ifndef FE_INEXACT\n+\t# error Missing FE_INEXACT\n+\t#endif\n+\t#ifndef FE_INVALID\n+\t# error Missing FE_INVALID\n+\t#endif\n+\t#ifndef FE_OVERFLOW\n+\t# error Missing FE_OVERFLOW\n+\t#endif\n+\t#ifndef FE_UNDERFLOW\n+\t# error Missing FE_UNDERFLOW\n+\t#endif\n+\tvolatile double a = 0.0f, r;\n+\tint\n+\tmain (void)\n+\t{\n+\t  r = a / a;\n+\t  if (fetestexcept (FE_INVALID))\n+\t    exit (0);\n+\t  else\n+\t    abort ();\n+\t}\n+    } [add_options_for_ieee \"-std=gnu99\"]]\n+}\n+\n+# Return 1 if <fenv.h> is available with all the standard IEEE\n+# exceptions and floating-point exceptions are raised by arithmetic\n+# operations.  (If the target requires special options for \"inexact\"\n+# exceptions, those need to be specified in the testcases.)\n+\n+proc check_effective_target_fenv_exceptions_long_double {} {\n+    return [check_runtime fenv_exceptions_long_double {\n+\t#include <fenv.h>\n+\t#include <stdlib.h>\n+\t#ifndef FE_DIVBYZERO\n+\t# error Missing FE_DIVBYZERO\n+\t#endif\n+\t#ifndef FE_INEXACT\n+\t# error Missing FE_INEXACT\n+\t#endif\n+\t#ifndef FE_INVALID\n+\t# error Missing FE_INVALID\n+\t#endif\n+\t#ifndef FE_OVERFLOW\n+\t# error Missing FE_OVERFLOW\n+\t#endif\n+\t#ifndef FE_UNDERFLOW\n+\t# error Missing FE_UNDERFLOW\n+\t#endif\n+\tvolatile long double a = 0.0f, r;\n+\tint\n+\tmain (void)\n+\t{\n+\t  r = a / a;\n+\t  if (fetestexcept (FE_INVALID))\n+\t    exit (0);\n+\t  else\n+\t    abort ();\n+\t}\n+    } [add_options_for_ieee \"-std=gnu99\"]]\n+}\n+\n # Return 1 if -fexceptions is supported.\n \n proc check_effective_target_exceptions {} {"}]}