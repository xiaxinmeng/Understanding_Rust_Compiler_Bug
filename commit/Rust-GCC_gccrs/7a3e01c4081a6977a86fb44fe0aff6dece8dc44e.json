{"sha": "7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EzZTAxYzQwODFhNjk3N2E4NmZiNDRmZTBhZmY2ZGVjZThkYzQ0ZQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-02-20T23:03:41Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-02-20T23:03:41Z"}, "message": "re PR c++/12007 (Multiple inheritance float pass by value fails)\n\n        PR c++/12007\n\t* dbxout.c (dbxout_parms): Check that DECL_RTL and DECL_INCOMING_RTL\n\tare set for parameters before outputing debugging information.\n\t* cp/method.c (use_thunk): Always clone function argument tree.\n\nFrom-SVN: r78192", "tree": {"sha": "e693ed8787dca895ea28148e27aa0074435fba6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e693ed8787dca895ea28148e27aa0074435fba6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/comments", "author": null, "committer": null, "parents": [{"sha": "0fed9ec7f33237c1fc8e633e6ede8a219672d761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fed9ec7f33237c1fc8e633e6ede8a219672d761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fed9ec7f33237c1fc8e633e6ede8a219672d761"}], "stats": {"total": 47, "additions": 30, "deletions": 17}, "files": [{"sha": "9f0bf7baafbf501eac2096b8218171703b3f4207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "patch": "@@ -1,3 +1,9 @@\n+2004-02-20  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+        PR c++/12007\n+\t* dbxout.c (dbxout_parms): Check that DECL_RTL and DECL_INCOMING_RTL\n+\tare set for parameters before outputing debugging information.\n+\n 2004-02-20  Falk Hueffner  <falk@debian.org>\n \n \tPR target/14201"}, {"sha": "d8f31c3d36df901f2f7f36ddc71b2fcd5c769a4e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "patch": "@@ -1,3 +1,8 @@\n+2004-02-20  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+        PR c++/12007\n+\t* method.c (use_thunk): Always clone function argument tree.\n+\n 2004-02-20  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14199"}, {"sha": "bb34d822157778cdb44757d5f545c5eec12963ff", "filename": "gcc/cp/method.c", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "patch": "@@ -331,7 +331,7 @@ make_alias_for_thunk (tree function)\n void\n use_thunk (tree thunk_fndecl, bool emit_p)\n {\n-  tree function, alias;\n+  tree a, t, function, alias;\n   tree virtual_offset;\n   HOST_WIDE_INT fixed_offset, virtual_value;\n   bool this_adjusting = DECL_THIS_THUNK_P (thunk_fndecl);\n@@ -417,7 +417,20 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n   /* The back-end expects DECL_INITIAL to contain a BLOCK, so we\n      create one.  */\n   DECL_INITIAL (thunk_fndecl) = make_node (BLOCK);\n-  BLOCK_VARS (DECL_INITIAL (thunk_fndecl)) = DECL_ARGUMENTS (thunk_fndecl);\n+\n+  /* Set up cloned argument trees for the thunk.  */\n+  t = NULL_TREE;\n+  for (a = DECL_ARGUMENTS (function); a; a = TREE_CHAIN (a))\n+    {\n+      tree x = copy_node (a);\n+      TREE_CHAIN (x) = t;\n+      DECL_CONTEXT (x) = thunk_fndecl;\n+      SET_DECL_RTL (x, NULL_RTX);\n+      t = x;\n+    }\n+  a = nreverse (t);\n+  DECL_ARGUMENTS (thunk_fndecl) = a;\n+  BLOCK_VARS (DECL_INITIAL (thunk_fndecl)) = a;\n   \n   if (this_adjusting\n       && targetm.asm_out.can_output_mi_thunk (thunk_fndecl, fixed_offset,\n@@ -450,24 +463,10 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n \t just makes a call to the real function.  Unfortunately, this\n \t doesn't work for varargs.  */\n \n-      tree a, t;\n-\n       if (varargs_function_p (function))\n \terror (\"generic thunk code fails for method `%#D' which uses `...'\",\n \t       function);\n \n-      /* Set up cloned argument trees for the thunk.  */\n-      t = NULL_TREE;\n-      for (a = DECL_ARGUMENTS (function); a; a = TREE_CHAIN (a))\n-\t{\n-\t  tree x = copy_node (a);\n-\t  TREE_CHAIN (x) = t;\n-\t  DECL_CONTEXT (x) = thunk_fndecl;\n-\t  SET_DECL_RTL (x, NULL_RTX);\n-\t  t = x;\n-\t}\n-      a = nreverse (t);\n-      DECL_ARGUMENTS (thunk_fndecl) = a;\n       DECL_RESULT (thunk_fndecl) = NULL_TREE;\n \n       start_function (NULL_TREE, thunk_fndecl, NULL_TREE, SF_PRE_PARSED);"}, {"sha": "482470abb8beb253d9570894072af482ed87bbd9", "filename": "gcc/dbxout.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3e01c4081a6977a86fb44fe0aff6dece8dc44e/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=7a3e01c4081a6977a86fb44fe0aff6dece8dc44e", "patch": "@@ -2750,7 +2750,10 @@ dbxout_parms (tree parms)\n   emit_pending_bincls_if_required ();\n \n   for (; parms; parms = TREE_CHAIN (parms))\n-    if (DECL_NAME (parms) && TREE_TYPE (parms) != error_mark_node)\n+    if (DECL_NAME (parms)\n+\t&& TREE_TYPE (parms) != error_mark_node\n+\t&& DECL_RTL_SET_P (parms)\n+\t&& DECL_INCOMING_RTL (parms))\n       {\n \tdbxout_prepare_symbol (parms);\n "}]}