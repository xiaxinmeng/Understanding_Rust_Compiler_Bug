{"sha": "a5fbe527f475516c07fd97d45a2a2f16350c39fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmYmU1MjdmNDc1NTE2YzA3ZmQ5N2Q0NWEyYTJmMTYzNTBjMzlmZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2004-09-17T14:11:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-09-17T14:11:59Z"}, "message": "stl_algo.h (remove): Remove too restrictive concept-check.\n\n2004-09-17  Jonathan Wakely  <redi@gcc.gnu.org>\n\n\t* include/bits/stl_algo.h (remove): Remove too restrictive\n\tconcept-check.\n\nFrom-SVN: r87650", "tree": {"sha": "d2c538ad3d73c9fd0372e2d92ac2c16cc97c59f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2c538ad3d73c9fd0372e2d92ac2c16cc97c59f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5fbe527f475516c07fd97d45a2a2f16350c39fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fbe527f475516c07fd97d45a2a2f16350c39fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fbe527f475516c07fd97d45a2a2f16350c39fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fbe527f475516c07fd97d45a2a2f16350c39fd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c93af6f23d57c9199a6f8e1346c449b29efb5b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93af6f23d57c9199a6f8e1346c449b29efb5b54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c93af6f23d57c9199a6f8e1346c449b29efb5b54"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "d32dc805d698e7c978c29452e1b0f0cefb9d2479", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fbe527f475516c07fd97d45a2a2f16350c39fd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fbe527f475516c07fd97d45a2a2f16350c39fd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a5fbe527f475516c07fd97d45a2a2f16350c39fd", "patch": "@@ -1,3 +1,8 @@\n+2004-09-17  Jonathan Wakely  <redi@gcc.gnu.org>\n+\n+\t* include/bits/stl_algo.h (remove): Remove too restrictive\n+\tconcept-check.\n+\n 2004-09-17  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/fstream.tcc (xsgetn): Slightly tweak conditional,"}, {"sha": "a5118c57208032fba1d8df783f7cecd2b7adfe3a", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fbe527f475516c07fd97d45a2a2f16350c39fd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fbe527f475516c07fd97d45a2a2f16350c39fd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=a5fbe527f475516c07fd97d45a2a2f16350c39fd", "patch": "@@ -1103,8 +1103,6 @@ namespace std\n       // concept requirements\n       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<\n \t\t\t\t  _ForwardIterator>)\n-      __glibcxx_function_requires(_ConvertibleConcept<_Tp,\n-\t    typename iterator_traits<_ForwardIterator>::value_type>)\n       __glibcxx_function_requires(_EqualOpConcept<\n \t    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)\n       __glibcxx_requires_valid_range(__first, __last);"}]}