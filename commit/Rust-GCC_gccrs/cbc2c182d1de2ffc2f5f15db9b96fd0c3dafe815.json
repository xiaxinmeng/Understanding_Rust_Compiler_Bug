{"sha": "cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JjMmMxODJkMWRlMmZmYzJmNWYxNWRiOWI5NmZkMGMzZGFmZTgxNQ==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-11-15T19:23:41Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-11-15T19:23:41Z"}, "message": "_Pragma1.c: Update.\n\n        * gcc.dg/cpp/_Pragma1.c: Update.\n        * gcc.dg/cpp/_Pragma2.c: New test.\n\nFrom-SVN: r37486", "tree": {"sha": "8b147fe2b8f784946b7ccc7782cc6912ebc7b0f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b147fe2b8f784946b7ccc7782cc6912ebc7b0f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815/comments", "author": null, "committer": null, "parents": [{"sha": "6213608449b6268ae63a5a37c06ed32509b17c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6213608449b6268ae63a5a37c06ed32509b17c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6213608449b6268ae63a5a37c06ed32509b17c3a"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "1ff1fac31e79f3925a85b048001811f656ca1cba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815", "patch": "@@ -1,3 +1,8 @@\n+2000-11-15  Neil Booth  <neilb@earthling.net>\n+\n+        gcc.dg/cpp/_Pragma1.c: Update.\n+        gcc.dg/cpp/_Pragma2.c: New test.\n+\n 2000-11-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.other/anon5.C: New test."}, {"sha": "0f211a9858b48a4cda97627561d78fffd3452bd4", "filename": "gcc/testsuite/gcc.dg/cpp/_Pragma1.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma1.c?ref=cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815", "patch": "@@ -13,12 +13,10 @@ p1\t\t\t\t/* { dg-error \"poisoned\" } */\n _Pragma (\"GCC poison p2\")\n p2\t\t\t\t/* { dg-error \"poisoned\" } */\n \n-/* I can see no reason it cannot appear in a directive.  Check we\n-   enter the conditional.  Putting the _Pragma at EOL also catches\n-   nasties like not saving current lexer state properly.  Also test\n-   that wide strings are OK.  */\n-#if 1 _Pragma (L\"GCC poison p3\")\n-p3\t\t\t\t/* { dg-error \"poisoned\" } */\n+/* Don't interpret _Pragmas in directives.  The standard is not clear\n+   on this, but I think this makes most sense.  */\n+#if 1 _Pragma (L\"GCC poison p3\") /* { dg-error \"missing binary operator\" } */\n+p3\n #endif\n \n #define M1 _Pragma (\"GCC poison p4\")\n@@ -29,10 +27,10 @@ p4\t\t\t\t/* No problem; not yet poisoned.  */\n M1 p4\t\t\t\t/* { dg-error \"poisoned\" } */\n M2 (GCC poison p5) p5\t\t/* { dg-error \"poisoned\" } */\n \n-/* Look, ma!  These things even nest.  */\n+/* Not interpreting _Pragma in directives means they don't nest.  */\n _Pragma (\"_Pragma (\\\"GCC poison p6\\\") GCC poison p7\")\n-p6\t\t\t\t/* { dg-error \"poisoned\" } */\n-p7\t\t\t\t/* { dg-error \"poisoned\" } */\n+p6\n+p7\n \n /* Check we ignore them in false conditionals.  */\n #if 0"}, {"sha": "24c4457ede7ed5ec25a2ecc251574113c7b933b1", "filename": "gcc/testsuite/gcc.dg/cpp/_Pragma2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F_Pragma2.c?ref=cbc2c182d1de2ffc2f5f15db9b96fd0c3dafe815", "patch": "@@ -0,0 +1,13 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* Don't allow directives in a _Pragma string. */\n+\n+/* Contributed by Neil Booth 14 Nov 2000.  */\n+\n+_Pragma(\"#define test\")\n+\n+#ifdef test\n+#error Do not allow directives in _Pragma strings\n+#endif"}]}