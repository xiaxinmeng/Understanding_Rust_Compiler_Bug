{"sha": "8c8a9717085130efbd17e89ab68aa25bc8e8ef0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4YTk3MTcwODUxMzBlZmJkMTdlODlhYjY4YWEyNWJjOGU4ZWYwZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-11-23T20:25:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-23T20:25:50Z"}, "message": "linux.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Wrap in do...while.\n\n\t* i386/linux.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Wrap in do...while.\n\t* i386.md (prologue_get_pc): Remove unused variable.\n\nFrom-SVN: r23816", "tree": {"sha": "e48611ac6b9a59422a231359f9405211af320620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e48611ac6b9a59422a231359f9405211af320620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d/comments", "author": null, "committer": null, "parents": [{"sha": "e468780f7e68b54b162a313d1a43a46ef65b3749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e468780f7e68b54b162a313d1a43a46ef65b3749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e468780f7e68b54b162a313d1a43a46ef65b3749"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "88008971929f511f899765bc5d9661563649ca7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c8a9717085130efbd17e89ab68aa25bc8e8ef0d", "patch": "@@ -1,3 +1,8 @@\n+Mon Nov 23 20:25:03 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* i386/linux.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Wrap in do...while.\n+\t* i386.md (prologue_get_pc): Remove unused variable.\n+\n Mon Nov 23 17:05:40 1998  Geoffrey Noer  <noer@cygnus.com>\n \n \t* i386/xm-cygwin.h: Rename cygwin_ path funcs back to cygwin32_."}, {"sha": "2327fa63f9f3221c6dd5d8674ca92f4250e1f5e0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8c8a9717085130efbd17e89ab68aa25bc8e8ef0d", "patch": "@@ -6445,8 +6445,6 @@ byte_xor_operation:\n   \"\"\n   \"*\n {\n-  char buffer[64];\n-\n   output_asm_insn (AS1 (call,%X1), operands);\n   if (! TARGET_DEEP_BRANCH_PREDICTION) \n     {"}, {"sha": "bd2aeb0c9fca3938508fa8c7c84fcca4a73cc67b", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8a9717085130efbd17e89ab68aa25bc8e8ef0d/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=8c8a9717085130efbd17e89ab68aa25bc8e8ef0d", "patch": "@@ -226,8 +226,10 @@ Boston, MA 02111-1307, USA.  */\n    This is used to align code labels according to Intel recommendations.  */\n \n #ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP) \\\n-  if ((LOG)!=0) \\\n-    if ((MAX_SKIP)==0) fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG)); \\\n-    else fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP))\n+#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if ((LOG)!=0)\t\t\t\t\t\t\t\\\n+      if ((MAX_SKIP)==0) fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\\\n+      else fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n+  } while (0)\n #endif"}]}