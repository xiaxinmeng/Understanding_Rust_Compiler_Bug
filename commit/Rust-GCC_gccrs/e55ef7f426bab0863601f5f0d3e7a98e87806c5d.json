{"sha": "e55ef7f426bab0863601f5f0d3e7a98e87806c5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU1ZWY3ZjQyNmJhYjA4NjM2MDFmNWYwZDNlN2E5OGU4NzgwNmM1ZA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2005-08-19T13:17:04Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2005-08-19T13:17:04Z"}, "message": "re PR target/23473 (ICE at config/arm/arm.c:3280)\n\n\tPR target/23473\n\t* arm.md (arm_load_pic_register): Change argument to the mask of\n\tsaved registers.  Call thumb_find_work_register if we need a\n\tscratch register on Thumb.\n\t(arm_expand_prologue): Pass empty register set to\n\tarm_load_pic_register.\n\t(thumb_expand_prologue): Pass live_regs_mask directly to\n\tarm_load_pic_register.\n\t* arm-protos.h (arm_load_pic_register): Update prototype.\n\nFrom-SVN: r103277", "tree": {"sha": "6d93288ece79dc62ab28b5ac2c91b572a34ccea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d93288ece79dc62ab28b5ac2c91b572a34ccea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e55ef7f426bab0863601f5f0d3e7a98e87806c5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55ef7f426bab0863601f5f0d3e7a98e87806c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55ef7f426bab0863601f5f0d3e7a98e87806c5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55ef7f426bab0863601f5f0d3e7a98e87806c5d/comments", "author": null, "committer": null, "parents": [{"sha": "d102596bf803dd5da4c23aea81345dac84e8925a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d102596bf803dd5da4c23aea81345dac84e8925a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d102596bf803dd5da4c23aea81345dac84e8925a"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "d32500786d616d0abeb3eb612287820753589112", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ef7f426bab0863601f5f0d3e7a98e87806c5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ef7f426bab0863601f5f0d3e7a98e87806c5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e55ef7f426bab0863601f5f0d3e7a98e87806c5d", "patch": "@@ -1,3 +1,15 @@\n+2005-08-19  Richard Earnshaw  <richard.earnshaw@arm.com>\n+\n+\tPR target/23473\n+\t* arm.md (arm_load_pic_register): Change argument to the mask of\n+\tsaved registers.  Call thumb_find_work_register if we need a \n+\tscratch register on Thumb.\n+\t(arm_expand_prologue): Pass empty register set to \n+\tarm_load_pic_register.\n+\t(thumb_expand_prologue): Pass live_regs_mask directly to\n+\tarm_load_pic_register.\n+\t* arm-protos.h (arm_load_pic_register): Update prototype.\n+\n 2005-08-19  J\"orn Rennecke <joern.rennecke@st.com>\n \n \t* sh.c (find_sole_member): New function."}, {"sha": "c7ec642c72806b4363c22924890e2c81465ac5ae", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ef7f426bab0863601f5f0d3e7a98e87806c5d/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ef7f426bab0863601f5f0d3e7a98e87806c5d/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=e55ef7f426bab0863601f5f0d3e7a98e87806c5d", "patch": "@@ -27,7 +27,7 @@\n extern void arm_override_options (void);\n extern int use_return_insn (int, rtx);\n extern int arm_regno_class (int);\n-extern void arm_load_pic_register (unsigned int);\n+extern void arm_load_pic_register (unsigned long);\n extern int arm_volatile_func (void);\n extern const char *arm_output_epilogue (rtx);\n extern void arm_expand_prologue (void);"}, {"sha": "0235c53b08e8136f89d2696870bfe8aab2e8894b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ef7f426bab0863601f5f0d3e7a98e87806c5d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ef7f426bab0863601f5f0d3e7a98e87806c5d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=e55ef7f426bab0863601f5f0d3e7a98e87806c5d", "patch": "@@ -3285,7 +3285,7 @@ thumb_find_work_register (unsigned long pushed_regs_mask)\n    low register.  */\n \n void\n-arm_load_pic_register (unsigned int scratch)\n+arm_load_pic_register (unsigned long saved_regs ATTRIBUTE_UNUSED)\n {\n #ifndef AOF_ASSEMBLER\n   rtx l1, pic_tmp, pic_tmp2, pic_rtx;\n@@ -3319,9 +3319,10 @@ arm_load_pic_register (unsigned int scratch)\n     {\n       if (REGNO (pic_offset_table_rtx) > LAST_LO_REGNUM)\n \t{\n-\t  /* We will have pushed the pic register, so should always be\n+\t  /* We will have pushed the pic register, so we should always be\n \t     able to find a work register.  */\n-\t  pic_tmp = gen_rtx_REG (SImode, scratch);\n+\t  pic_tmp = gen_rtx_REG (SImode,\n+\t\t\t\t thumb_find_work_register (saved_regs));\n \t  emit_insn (gen_pic_load_addr_thumb (pic_tmp, pic_rtx));\n \t  emit_insn (gen_movsi (pic_offset_table_rtx, pic_tmp));\n \t}\n@@ -10509,7 +10510,7 @@ arm_expand_prologue (void)\n \n \n   if (flag_pic)\n-    arm_load_pic_register (INVALID_REGNUM);\n+    arm_load_pic_register (0UL);\n \n   /* If we are profiling, make sure no instructions are scheduled before\n      the call to mcount.  Similarly if the user has requested no\n@@ -13236,7 +13237,7 @@ thumb_expand_prologue (void)\n   /* Load the pic register before setting the frame pointer,\n      so we can use r7 as a temporary work register.  */\n   if (flag_pic)\n-    arm_load_pic_register (thumb_find_work_register (live_regs_mask));\n+    arm_load_pic_register (live_regs_mask);\n \n   offsets = arm_get_frame_offsets ();\n "}]}