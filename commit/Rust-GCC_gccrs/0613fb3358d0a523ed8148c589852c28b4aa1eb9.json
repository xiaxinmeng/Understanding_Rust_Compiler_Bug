{"sha": "0613fb3358d0a523ed8148c589852c28b4aa1eb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYxM2ZiMzM1OGQwYTUyM2VkODE0OGM1ODk4NTJjMjhiNGFhMWViOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T14:15:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T14:15:16Z"}, "message": "[multiple changes]\n\n2011-09-05  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch6.adb (Move_Activation_Chain): Rewritten. The routine\n\tno longer needs to search through the entities of the return\n\tstatement scope to find the _chain.\n\t* sem_ch5.adb: Add with and use clauses for Exp_Ch6 and Sem_Ch6.\n\t(Analyze_Block_Statement): Add local variable\n\tIs_BIP_Return_Statement. Add machinery to install all entities\n\tproduced by the expansion of the return object declaration.\n\t(Install_Return_Entities): New routine.\n\t* sem_ch6.ads, sem_ch6.adb (Install_Entity): Moved from body to spec.\n\n2011-09-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Analyze_Context): Apply simple fixup if context\n\tof subunit is incomplete.\n\t(Analyze_Proper_Body): If parent spec is not available, do not\n\tattempt analysis.\n\nFrom-SVN: r178549", "tree": {"sha": "bb3332d903d9e7eb4e1c17f1cef9127fabb3e2b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb3332d903d9e7eb4e1c17f1cef9127fabb3e2b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0613fb3358d0a523ed8148c589852c28b4aa1eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0613fb3358d0a523ed8148c589852c28b4aa1eb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0613fb3358d0a523ed8148c589852c28b4aa1eb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0613fb3358d0a523ed8148c589852c28b4aa1eb9/comments", "author": null, "committer": null, "parents": [{"sha": "5dcab3ca08db53487bf2a2dbdd380009ea1bc927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcab3ca08db53487bf2a2dbdd380009ea1bc927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dcab3ca08db53487bf2a2dbdd380009ea1bc927"}], "stats": {"total": 145, "additions": 115, "deletions": 30}, "files": [{"sha": "35d8af94b4a75fd88e019d9a6a03a22c5d075d09", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0613fb3358d0a523ed8148c589852c28b4aa1eb9", "patch": "@@ -1,3 +1,22 @@\n+2011-09-05  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch6.adb (Move_Activation_Chain): Rewritten. The routine\n+\tno longer needs to search through the entities of the return\n+\tstatement scope to find the _chain.\n+\t* sem_ch5.adb: Add with and use clauses for Exp_Ch6 and Sem_Ch6.\n+\t(Analyze_Block_Statement): Add local variable\n+\tIs_BIP_Return_Statement. Add machinery to install all entities\n+\tproduced by the expansion of the return object declaration.\n+\t(Install_Return_Entities): New routine.\n+\t* sem_ch6.ads, sem_ch6.adb (Install_Entity): Moved from body to spec.\n+\n+2011-09-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Context): Apply simple fixup if context\n+\tof subunit is incomplete.\n+\t(Analyze_Proper_Body): If parent spec is not available, do not\n+\tattempt analysis.\n+\n 2011-09-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_disp.adb (Find_Controlling_Arg): Add checks for"}, {"sha": "3f37ad32cebffdf251926e14cc339702ec5c6fe9", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 19, "deletions": 27, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0613fb3358d0a523ed8148c589852c28b4aa1eb9", "patch": "@@ -4645,38 +4645,29 @@ package body Exp_Ch6 is\n       ---------------------------\n \n       function Move_Activation_Chain return Node_Id is\n-         Chain_Formal  : constant Entity_Id :=\n-                           Build_In_Place_Formal\n-                            (Par_Func, BIP_Activation_Chain);\n-         To            : constant Node_Id :=\n-                           New_Reference_To (Chain_Formal, Loc);\n-         Master_Formal : constant Entity_Id :=\n-                           Build_In_Place_Formal (Par_Func, BIP_Master);\n-         New_Master    : constant Node_Id :=\n-                           New_Reference_To (Master_Formal, Loc);\n-\n-         Chain_Id : Entity_Id;\n-         From     : Node_Id;\n-\n       begin\n-         Chain_Id := First_Entity (Return_Statement_Entity (N));\n-         while Chars (Chain_Id) /= Name_uChain loop\n-            Chain_Id := Next_Entity (Chain_Id);\n-         end loop;\n-\n-         From :=\n-           Make_Attribute_Reference (Loc,\n-             Prefix =>\n-               New_Reference_To (Chain_Id, Loc),\n-             Attribute_Name => Name_Unrestricted_Access);\n-         --  ??? Not clear why \"Make_Identifier (Loc, Name_uChain)\" doesn't\n-         --  work, instead of \"New_Reference_To (Chain_Id, Loc)\" above.\n-\n          return\n            Make_Procedure_Call_Statement (Loc,\n              Name                   =>\n                New_Reference_To (RTE (RE_Move_Activation_Chain), Loc),\n-             Parameter_Associations => New_List (From, To, New_Master));\n+\n+             Parameter_Associations => New_List (\n+\n+               --  Source chain\n+\n+               Make_Attribute_Reference (Loc,\n+                 Prefix         => Make_Identifier (Loc, Name_uChain),\n+                 Attribute_Name => Name_Unrestricted_Access),\n+\n+               --  Destination chain\n+\n+               New_Reference_To\n+                 (Build_In_Place_Formal (Par_Func, BIP_Activation_Chain), Loc),\n+\n+               --  New master\n+\n+               New_Reference_To\n+                 (Build_In_Place_Formal (Par_Func, BIP_Master), Loc)));\n       end Move_Activation_Chain;\n \n    --  Start of processing for Expand_N_Extended_Return_Statement\n@@ -4708,6 +4699,7 @@ package body Exp_Ch6 is\n             --  Recover the function body\n \n             Func_Bod := Unit_Declaration_Node (Par_Func);\n+\n             if Nkind (Func_Bod) = N_Subprogram_Declaration then\n                Func_Bod := Parent (Parent (Corresponding_Body (Func_Bod)));\n             end if;"}, {"sha": "34f3ba4d9bd6c6ba3d30721f7f8bb6f2e2a3a6e2", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=0613fb3358d0a523ed8148c589852c28b4aa1eb9", "patch": "@@ -1650,6 +1650,16 @@ package body Sem_Ch10 is\n \n          if Present (Library_Unit (N)) then\n             Set_Corresponding_Stub (Unit (Library_Unit (N)), N);\n+\n+            --  If the subunit has severe errors, the spec of the enclosing\n+            --  body may not be available, in which case do not try analysis.\n+\n+            if Serious_Errors_Detected > 0\n+              and then  No (Library_Unit (Library_Unit (N)))\n+            then\n+               return;\n+            end if;\n+\n             Analyze_Subunit (Library_Unit (N));\n \n          --  Otherwise we must load the subunit and link to it\n@@ -1990,6 +2000,16 @@ package body Sem_Ch10 is\n                      null;\n \n                   else\n+                     --  If a subunits has serious syntax errors, the context\n+                     --  may not have been loaded. Add a harmless unit name to\n+                     --  attempt processing.\n+\n+                     if Serious_Errors_Detected > 0\n+                       and then  No (Entity (Name (Item)))\n+                     then\n+                        Set_Entity (Name (Item), Standard_Standard);\n+                     end if;\n+\n                      Unit_Name := Entity (Name (Item));\n                      while Is_Child_Unit (Unit_Name) loop\n                         Set_Is_Visible_Child_Unit (Unit_Name);"}, {"sha": "5b56a9dddc85da46142edfe2621047fb875f09e5", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=0613fb3358d0a523ed8148c589852c28b4aa1eb9", "patch": "@@ -29,6 +29,7 @@ with Checks;   use Checks;\n with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Expander; use Expander;\n+with Exp_Ch6;  use Exp_Ch6;\n with Exp_Util; use Exp_Util;\n with Freeze;   use Freeze;\n with Lib;      use Lib;\n@@ -44,6 +45,7 @@ with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Case; use Sem_Case;\n with Sem_Ch3;  use Sem_Ch3;\n+with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Disp; use Sem_Disp;\n with Sem_Elab; use Sem_Elab;\n@@ -836,10 +838,44 @@ package body Sem_Ch5 is\n    -----------------------------\n \n    procedure Analyze_Block_Statement (N : Node_Id) is\n+      procedure Install_Return_Entities (Scop : Entity_Id);\n+      --  Install all entities of return statement scope Scop in the visibility\n+      --  chain except for the return object since its entity is reused in a\n+      --  renaming.\n+\n+      -----------------------------\n+      -- Install_Return_Entities --\n+      -----------------------------\n+\n+      procedure Install_Return_Entities (Scop : Entity_Id) is\n+         Id : Entity_Id;\n+\n+      begin\n+         Id := First_Entity (Scop);\n+         while Present (Id) loop\n+\n+            --  Do not install the return object\n+\n+            if not Ekind_In (Id, E_Constant, E_Variable)\n+              or else not Is_Return_Object (Id)\n+            then\n+               Install_Entity (Id);\n+            end if;\n+\n+            Next_Entity (Id);\n+         end loop;\n+      end Install_Return_Entities;\n+\n+      --  Local constants and variables\n+\n       Decls : constant List_Id := Declarations (N);\n       Id    : constant Node_Id := Identifier (N);\n       HSS   : constant Node_Id := Handled_Statement_Sequence (N);\n \n+      Is_BIP_Return_Statement : Boolean;\n+\n+   --  Start of processing for Analyze_Block_Statement\n+\n    begin\n       --  In SPARK mode, we reject block statements. Note that the case of\n       --  block statements generated by the expander is fine.\n@@ -855,6 +891,16 @@ package body Sem_Ch5 is\n          return;\n       end if;\n \n+      --  Detect whether the block is actually a rewritten return statement of\n+      --  a build-in-place function.\n+\n+      Is_BIP_Return_Statement :=\n+        Present (Id)\n+          and then Present (Entity (Id))\n+          and then Ekind (Entity (Id)) = E_Return_Statement\n+          and then Is_Build_In_Place_Function\n+                     (Return_Applies_To (Entity (Id)));\n+\n       --  Normal processing with HSS present\n \n       declare\n@@ -915,6 +961,14 @@ package body Sem_Ch5 is\n          Set_Block_Node (Ent, Identifier (N));\n          Push_Scope (Ent);\n \n+         --  The block served as an extended return statement. Ensure that any\n+         --  entities created during the analysis and expansion of the return\n+         --  object declaration are once again visible.\n+\n+         if Is_BIP_Return_Statement then\n+            Install_Return_Entities (Ent);\n+         end if;\n+\n          if Present (Decls) then\n             Analyze_Declarations (Decls);\n             Check_Completion;"}, {"sha": "83652d36e5e418782e0542390baf6aff575fbff8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0613fb3358d0a523ed8148c589852c28b4aa1eb9", "patch": "@@ -181,9 +181,6 @@ package body Sem_Ch6 is\n    --  This procedure makes S, a new overloaded entity, into the first visible\n    --  entity with that name.\n \n-   procedure Install_Entity (E : Entity_Id);\n-   --  Make single entity visible (used for generic formals as well)\n-\n    function Is_Non_Overriding_Operation\n      (Prev_E : Entity_Id;\n       New_E  : Entity_Id) return Boolean;"}, {"sha": "6d5496c6ae60aaa06c652cab8098abfd78af2de1", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0613fb3358d0a523ed8148c589852c28b4aa1eb9/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=0613fb3358d0a523ed8148c589852c28b4aa1eb9", "patch": "@@ -179,6 +179,9 @@ package Sem_Ch6 is\n    --  Determines if two subtype definitions are fully conformant. Used\n    --  for entry family conformance checks (RM 6.3.1 (24)).\n \n+   procedure Install_Entity (E : Entity_Id);\n+   --  Place a single entity on the visibility chain\n+\n    procedure Install_Formals (Id : Entity_Id);\n    --  On entry to a subprogram body, make the formals visible. Note that\n    --  simply placing the subprogram on the scope stack is not sufficient:"}]}