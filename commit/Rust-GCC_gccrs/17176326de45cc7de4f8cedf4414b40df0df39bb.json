{"sha": "17176326de45cc7de4f8cedf4414b40df0df39bb", "node_id": "C_kwDOANBUbNoAKDE3MTc2MzI2ZGU0NWNjN2RlNGY4Y2VkZjQ0MTRiNDBkZjBkZjM5YmI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-28T09:16:58Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2023-01-06T12:05:26Z"}, "message": "docs: fix Var documentation for .opt files\n\nThe Var documentation was somehow wrongly split into 2 pieces.\n\n\tPR middle-end/107966\n\ngcc/ChangeLog:\n\n\t* doc/options.texi: Fix Var documentation in internal manual.", "tree": {"sha": "5e9b355072d2f5a822daa1071ddb777326b7ac7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e9b355072d2f5a822daa1071ddb777326b7ac7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17176326de45cc7de4f8cedf4414b40df0df39bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17176326de45cc7de4f8cedf4414b40df0df39bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17176326de45cc7de4f8cedf4414b40df0df39bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17176326de45cc7de4f8cedf4414b40df0df39bb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9479ddc7a28fb672ca67304a67d66524d8200a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9479ddc7a28fb672ca67304a67d66524d8200a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9479ddc7a28fb672ca67304a67d66524d8200a4"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "39a2d1a0d434dc67cfccd948ff8e405bc10df2f5", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17176326de45cc7de4f8cedf4414b40df0df39bb/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17176326de45cc7de4f8cedf4414b40df0df39bb/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=17176326de45cc7de4f8cedf4414b40df0df39bb", "patch": "@@ -340,19 +340,6 @@ The state of this option should be stored in variable @var{var}\n (actually a macro for @code{global_options.x_@var{var}}).\n The way that the state is stored depends on the type of option:\n \n-@item WarnRemoved\n-The option is removed and every usage of such option will\n-result in a warning.  We use it option backward compatibility.\n-\n-@item Var(@var{var}, @var{set})\n-The option controls an integer variable @var{var} and is active when\n-@var{var} equals @var{set}.  The option parser will set @var{var} to\n-@var{set} when the positive form of the option is used and @code{!@var{set}}\n-when the ``no-'' form is used.\n-\n-@var{var} is declared in the same way as for the single-argument form\n-described above.\n-\n @itemize @bullet\n @item\n If the option uses the @code{Mask} or @code{InverseMask} properties,\n@@ -390,11 +377,24 @@ and wasn't given.\n The option-processing script will usually zero-initialize @var{var}.\n You can modify this behavior using @code{Init}.\n \n+@item Var(@var{var}, @var{set})\n+The option controls an integer variable @var{var} and is active when\n+@var{var} equals @var{set}.  The option parser will set @var{var} to\n+@var{set} when the positive form of the option is used and @code{!@var{set}}\n+when the ``no-'' form is used.\n+\n+@var{var} is declared in the same way as for the single-argument form\n+described above.\n+\n @item Init(@var{value})\n The variable specified by the @code{Var} property should be statically\n initialized to @var{value}.  If more than one option using the same\n variable specifies @code{Init}, all must specify the same initializer.\n \n+@item WarnRemoved\n+The option is removed and every usage of such option will\n+result in a warning.  We use it option backward compatibility.\n+\n @item Mask(@var{name})\n The option is associated with a bit in the @code{target_flags}\n variable (@pxref{Run-time Target}) and is active when that bit is set."}]}