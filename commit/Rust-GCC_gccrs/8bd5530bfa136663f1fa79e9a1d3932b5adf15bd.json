{"sha": "8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJkNTUzMGJmYTEzNjY2M2YxZmE3OWU5YTFkMzkzMmI1YWRmMTViZA==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-31T02:54:13Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-09-03T02:25:50Z"}, "message": "Adjust testcase.\n\ngcc/testsuite/ChangeLog:\n\tPR target/96246\n\tPR target/96855\n\tPR target/96856\n\tPR target/96857\n\t* g++.target/i386/avx512bw-pr96246-2.C: Add runtime check for\n\tAVX512BW.\n\t* g++.target/i386/avx512vl-pr96246-2.C: Add runtime check for\n\tAVX512BW and AVX512VL\n\t* g++.target/i386/avx512f-helper.h: New header.\n\t* gcc.target/i386/pr92658-avx512f.c: Add\n\t-mprefer-vector-width=512 to avoid impact of different default\n\tmtune which gcc is built with.\n\t* gcc.target/i386/avx512bw-pr95488-1.c: Ditto.\n\t* gcc.target/i386/pr92645-4.c: Add -mno-avx512f to avoid\n\timpact of different default march which gcc is built with.", "tree": {"sha": "ae2df4ccdd5a66178593995654aec1ddf327a544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae2df4ccdd5a66178593995654aec1ddf327a544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a8f4e47c91c70707ec428e5c8b5cf01196464b2"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "30a1b95957309f339217ff49a7535c876bfdad1d", "filename": "gcc/testsuite/g++.target/i386/avx512bw-pr96246-2.C", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-2.C?ref=8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "patch": "@@ -3,6 +3,10 @@\n /* { dg-require-effective-target avx512bw } */\n /* { dg-options \"-O2 -std=c++14 -mavx512bw\" } */\n \n+#define AVX512BW\n+\n+#include \"avx512f-helper.h\"\n+\n #include \"avx512bw-pr96246-1.C\"\n \n #define RUNTIME_TEST(vtype, num)\t\t\t\\\n@@ -24,14 +28,13 @@\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-int\n-main (void)\n+void\n+test_512 (void)\n {\n   RUNTIME_TEST (v64qi, 64);\n   RUNTIME_TEST (v32hi, 32);\n   RUNTIME_TEST (v16si, 16);\n   RUNTIME_TEST (v8di, 8);\n   RUNTIME_TEST (v16sf, 16);\n   RUNTIME_TEST (v8df, 8);\n-  return 0;\n }"}, {"sha": "09b6bcbf77af4e5fbab87b6ce7adb8235ae24d8e", "filename": "gcc/testsuite/g++.target/i386/avx512f-helper.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512f-helper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512f-helper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512f-helper.h?ref=8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "patch": "@@ -0,0 +1 @@\n+#include \"../../gcc.target/i386/avx512f-helper.h\""}, {"sha": "db9dce2caefba57af0f936519fa104f14e8ba64b", "filename": "gcc/testsuite/g++.target/i386/avx512vl-pr96246-2.C", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-2.C?ref=8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "patch": "@@ -4,6 +4,11 @@\n /* { dg-require-effective-target avx512vl } */\n /* { dg-options \"-O2 -std=c++14 -mavx512bw -mavx512vl\" } */\n \n+#define AVX512VL\n+#define AVX512BW\n+\n+#include \"avx512f-helper.h\"\n+\n #include \"avx512vl-pr96246-1.C\"\n \n #define RUNTIME_TEST(vtype, num)\t\t\t\\\n@@ -25,17 +30,21 @@\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-int\n-main (void)\n+void\n+test_256 (void)\n {\n-  RUNTIME_TEST (v16qi, 16);\n   RUNTIME_TEST (v32qi, 32);\n   RUNTIME_TEST (v16hi, 16);\n-  RUNTIME_TEST (v4si, 4);\n   RUNTIME_TEST (v8si, 8);\n-  RUNTIME_TEST (v4sf, 4);\n   RUNTIME_TEST (v8sf, 8);\n   RUNTIME_TEST (v4di, 4);\n   RUNTIME_TEST (v4df, 4);\n-  return 0;\n+}\n+\n+void\n+test_128 (void)\n+{\n+  RUNTIME_TEST (v16qi, 16);\n+  RUNTIME_TEST (v4si, 4);\n+  RUNTIME_TEST (v4sf, 4);\n }"}, {"sha": "e6e0ac2fd82a034eb9fdd7aa7f90c1ff7980d9c6", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr95488-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr95488-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr95488-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr95488-1.c?ref=8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "patch": "@@ -1,6 +1,6 @@\n /* PR target/95488  */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mavx512bw\" }  */\n+/* { dg-options \"-O2 -mavx512bw -mprefer-vector-width=512\" }  */\n /* { dg-final { scan-assembler-times \"vpmovzxbw\" 4 } } */\n /* { dg-final { scan-assembler-times \"vpmullw\\[^\\n\\]*zmm\" 2 } } */\n /* { dg-final { scan-assembler-times \"vpmovwb\" 2 } } */"}, {"sha": "28a3f9a352737ad2c878591f8a1d49e7caf251c7", "filename": "gcc/testsuite/gcc.target/i386/pr92645-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr92645-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr92645-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr92645-4.c?ref=8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mavx2 -fdump-tree-optimized -Wno-psabi\" } */\n+/* { dg-options \"-O2 -mavx2 -fdump-tree-optimized -Wno-psabi -mno-avx512f\" } */\n \n typedef unsigned int u32v4 __attribute__((vector_size(16)));\n typedef unsigned short u16v16 __attribute__((vector_size(32)));"}, {"sha": "e9ee3d242325c90e61839bf9cd7575ec5dd24a10", "filename": "gcc/testsuite/gcc.target/i386/pr92658-avx512f.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr92658-avx512f.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bd5530bfa136663f1fa79e9a1d3932b5adf15bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr92658-avx512f.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr92658-avx512f.c?ref=8bd5530bfa136663f1fa79e9a1d3932b5adf15bd", "patch": "@@ -1,6 +1,6 @@\n /* PR target/92658 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -ftree-vectorize -mavx512f\" } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx512f -mprefer-vector-width=512\" } */\n \n typedef unsigned char v8qi __attribute__((vector_size (8)));\n typedef unsigned char v16qi __attribute__((vector_size (16)));"}]}