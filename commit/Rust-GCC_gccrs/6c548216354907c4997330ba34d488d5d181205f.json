{"sha": "6c548216354907c4997330ba34d488d5d181205f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM1NDgyMTYzNTQ5MDdjNDk5NzMzMGJhMzRkNDg4ZDVkMTgxMjA1Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-25T14:22:15Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-25T14:22:15Z"}, "message": "(yylex): Don't warn about floating point out of range if target\nfloating-point format is IEEE.\n\nFrom-SVN: r4213", "tree": {"sha": "c3e065d9c3413d0eeb8634dbc2e1eb776c0d4a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e065d9c3413d0eeb8634dbc2e1eb776c0d4a82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c548216354907c4997330ba34d488d5d181205f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c548216354907c4997330ba34d488d5d181205f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c548216354907c4997330ba34d488d5d181205f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c548216354907c4997330ba34d488d5d181205f/comments", "author": null, "committer": null, "parents": [{"sha": "9b553fdbd7a57e6d92dfb33abb87e49b584af412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b553fdbd7a57e6d92dfb33abb87e49b584af412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b553fdbd7a57e6d92dfb33abb87e49b584af412"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "ea6c0156aa97bf25e491d7342650ac418229c168", "filename": "gcc/c-lex.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c548216354907c4997330ba34d488d5d181205f/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c548216354907c4997330ba34d488d5d181205f/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=6c548216354907c4997330ba34d488d5d181205f", "patch": "@@ -1486,15 +1486,17 @@ yylex ()\n \t      case 'f': case 'F':\n \t\ttype = float_type_node;\n \t\tvalue = REAL_VALUE_ATOF (token_buffer, TYPE_MODE (type));\n-\t\tif (REAL_VALUE_ISINF (value) && pedantic)\n+\t\tif (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n+\t\t    && REAL_VALUE_ISINF (value) && pedantic)\n \t\t  pedwarn (\"floating point number exceeds range of `float'\");\n \t\tgarbage_chars = -1;\n \t\tbreak;\n \n \t      case 'l': case 'L':\n \t\ttype = long_double_type_node;\n \t\tvalue = REAL_VALUE_ATOF (token_buffer, TYPE_MODE (type));\n-\t\tif (REAL_VALUE_ISINF (value) && pedantic)\n+\t\tif (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n+\t\t    && REAL_VALUE_ISINF (value) && pedantic)\n \t\t  pedwarn (\n \t\t      \"floating point number exceeds range of `long double'\");\n \t\tgarbage_chars = -1;\n@@ -1509,7 +1511,8 @@ yylex ()\n \n               default:\n \t\tvalue = REAL_VALUE_ATOF (token_buffer, TYPE_MODE (type));\n-\t\tif (REAL_VALUE_ISINF (value) && pedantic)\n+\t\tif (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n+\t\t    && REAL_VALUE_ISINF (value) && pedantic)\n \t\t  pedwarn (\"floating point number exceeds range of `double'\");\n \t      }\n \t    set_float_handler (NULL_PTR);\n@@ -1519,8 +1522,9 @@ yylex ()\n \t      {\n   \t\t/* ERANGE is also reported for underflow,\n   \t\t   so test the value to distinguish overflow from that.  */\n-\t\tif (REAL_VALUES_LESS (dconst1, value)\n-\t\t    || REAL_VALUES_LESS (value, dconstm1))\n+\t\tif (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n+\t\t    && (REAL_VALUES_LESS (dconst1, value)\n+\t\t\t|| REAL_VALUES_LESS (value, dconstm1)))\n \t\t  {\n \t\t    pedwarn (\"floating point number exceeds range of `double'\");\n \t\t    exceeds_double = 1;"}]}