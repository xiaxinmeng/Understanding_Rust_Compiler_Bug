{"sha": "f34ee0b290fe3e188bcda2985c071b031381a67b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM0ZWUwYjI5MGZlM2UxODhiY2RhMjk4NWMwNzFiMDMxMzgxYTY3Yg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-26T00:19:58Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-26T00:19:58Z"}, "message": "re PR target/51244 ([SH] Inefficient conditional branch and code around T bit)\n\n\tPR target/51244\n\t* config/sh/sh.opt (mzdcbranch): New option.\n\t* doc/invoke.texi: Document it.\n\t* config/sh/sh.md (negsi_cond): Use TARGET_ZDCBRANCH as condition\n\tinstead of TARGET_HARD_SH4.\n\t* config/sh/sh.c (sh_option_override): Set TARGET_ZDCBRANCH as default\n\tfor TARGET_HARD_SH4.\n\nFrom-SVN: r189877", "tree": {"sha": "bad46d3b39d836f1907345d5b96a602cd0993faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bad46d3b39d836f1907345d5b96a602cd0993faa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f34ee0b290fe3e188bcda2985c071b031381a67b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34ee0b290fe3e188bcda2985c071b031381a67b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f34ee0b290fe3e188bcda2985c071b031381a67b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34ee0b290fe3e188bcda2985c071b031381a67b/comments", "author": null, "committer": null, "parents": [{"sha": "3b29b58c1b1cf300383506e269d6596050105b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b29b58c1b1cf300383506e269d6596050105b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b29b58c1b1cf300383506e269d6596050105b53"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "c0550c5b6e7a23571e339c03f5548938e6dec1ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f34ee0b290fe3e188bcda2985c071b031381a67b", "patch": "@@ -1,3 +1,13 @@\n+2012-07-26  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/51244\n+\t* config/sh/sh.opt (mzdcbranch): New option.\n+\t* doc/invoke.texi: Document it.\n+\t* config/sh/sh.md (negsi_cond): Use TARGET_ZDCBRANCH as condition\n+\tinstead of TARGET_HARD_SH4.\n+\t* config/sh/sh.c (sh_option_override): Set TARGET_ZDCBRANCH as default\n+\tfor TARGET_HARD_SH4.\n+\n 2012-07-25  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54089"}, {"sha": "477d59c8de1fc90c95673a5c7dc04d9ad33f1629", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=f34ee0b290fe3e188bcda2985c071b031381a67b", "patch": "@@ -741,6 +741,10 @@ sh_option_override (void)\n \tsh_branch_cost = 2;\n     }\n \n+  /* Set -mzdcbranch for SH4 / SH4A if not otherwise specified by the user.  */\n+  if (! global_options_set.x_TARGET_ZDCBRANCH && TARGET_HARD_SH4)\n+    TARGET_ZDCBRANCH = 1;\n+\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     if (! VALID_REGISTER_P (regno))\n       sh_register_names[regno][0] = '\\0';"}, {"sha": "d8be11164d38df3aab405cbf2c1dd079d08790c4", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=f34ee0b290fe3e188bcda2985c071b031381a67b", "patch": "@@ -4378,11 +4378,11 @@ label:\n \t\t\t  (match_operand:SI 3 \"const_int_operand\" \"M,N\"))\n \t (match_operand:SI 1 \"arith_reg_operand\" \"0,0\")\n \t (neg:SI (match_operand:SI 2 \"arith_reg_operand\" \"r,r\"))))]\n-  \"TARGET_HARD_SH4\"\n+  \"TARGET_SH1 && TARGET_ZDCBRANCH\"\n   \"@\n \tbt\\\\t0f\\;neg\\\\t%2,%0\\\\n0:\n \tbf\\\\t0f\\;neg\\\\t%2,%0\\\\n0:\"\n-  \"!TARGET_HARD_SH4\"\n+  \"TARGET_SH1 && ! TARGET_ZDCBRANCH\"\n   [(const_int 0)]\n {\n   rtx skip_neg_label = gen_label_rtx ();"}, {"sha": "70b7e09721fa16b6fabcaea1413cf5a1568ea3b5", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=f34ee0b290fe3e188bcda2985c071b031381a67b", "patch": "@@ -225,6 +225,10 @@ mbranch-cost=\n Target RejectNegative Joined UInteger Var(sh_branch_cost) Init(-1)\n Cost to assume for a branch insn\n \n+mzdcbranch\n+Target Var(TARGET_ZDCBRANCH)\n+Assume that zero displacement conditional branches are fast\n+\n mcbranchdi\n Target Var(TARGET_CBRANCHDI4)\n Enable cbranchdi4 pattern"}, {"sha": "429fdc8ba05ba93b1e453f54ff08558974d2284d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34ee0b290fe3e188bcda2985c071b031381a67b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f34ee0b290fe3e188bcda2985c071b031381a67b", "patch": "@@ -889,8 +889,9 @@ See RS/6000 and PowerPC Options.\n -mdivsi3_libfunc=@var{name} -mfixed-range=@var{register-range} @gol\n -mindexed-addressing -mgettrcost=@var{number} -mpt-fixed @gol\n -maccumulate-outgoing-args -minvalid-symbols -msoft-atomic -mhard-atomic @gol\n--mbranch-cost=@var{num} -mcbranchdi -mcmpeqdi -mfused-madd -mno-fused-madd @gol\n--mfsca -mno-fsca -mfsrra -mno-fsrra -mpretend-cmove -menable-tas}\n+-mbranch-cost=@var{num} -mzdcbranch -mno-zdcbranch -mcbranchdi -mcmpeqdi @gol\n+-mfused-madd -mno-fused-madd -mfsca -mno-fsca -mfsrra -mno-fsrra @gol\n+-mpretend-cmove -menable-tas}\n \n @emph{Solaris 2 Options}\n @gccoptlist{-mimpure-text  -mno-impure-text @gol\n@@ -18366,6 +18367,16 @@ make the compiler try to generate more branch-free code if possible.\n If not specified the value is selected depending on the processor type that\n is being compiled for.\n \n+@item -mzdcbranch\n+@itemx -mno-zdcbranch\n+@opindex mzdcbranch\n+@opindex mno-zdcbranch\n+Assume (do not assume) that zero displacement conditional branch instructions\n+@code{bt} and @code{bf} are fast.  If @option{-mzdcbranch} is specified, the\n+compiler will try to prefer zero displacement branch code sequences.  This is\n+enabled by default when generating code for SH4 and SH4A.  It can be explicitly\n+disabled by specifying @option{-mno-zdcbranch}.\n+\n @item -mcbranchdi\n @opindex mcbranchdi\n Enable the @code{cbranchdi4} instruction pattern."}]}