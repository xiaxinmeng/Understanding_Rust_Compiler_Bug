{"sha": "d966425468fae968bcefb19ab764486e3e2e22e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk2NjQyNTQ2OGZhZTk2OGJjZWZiMTlhYjc2NDQ4NmUzZTJlMjJlOQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-10-09T23:05:37Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-10-09T23:05:37Z"}, "message": "rs6000: Move processor_costs to header\n\nThis moves the processor_costs structure declaration to the rs6000.h\nheader file, so that things in other files can use it (not just things\nin rs6000.c).\n\n\n\t* config/rs6000/rs6000.c (processor_costs): Move to ...\n\t* config/rs6000/rs6000.h: ... here.\n\t(rs6000_cost): Declare.\n\nFrom-SVN: r253570", "tree": {"sha": "4f431ff1f36ee408f7f57a0403edd50a3d5c6276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f431ff1f36ee408f7f57a0403edd50a3d5c6276"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d966425468fae968bcefb19ab764486e3e2e22e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d966425468fae968bcefb19ab764486e3e2e22e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d966425468fae968bcefb19ab764486e3e2e22e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d966425468fae968bcefb19ab764486e3e2e22e9/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ab71f3d8707c9b292e5853050b5fbba2911fccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab71f3d8707c9b292e5853050b5fbba2911fccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab71f3d8707c9b292e5853050b5fbba2911fccb"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "202dd89b957412d50123eaf82838eb85ab343ab6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d966425468fae968bcefb19ab764486e3e2e22e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d966425468fae968bcefb19ab764486e3e2e22e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d966425468fae968bcefb19ab764486e3e2e22e9", "patch": "@@ -1,3 +1,9 @@\n+2010-10-09  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (processor_costs): Move to ...\n+\t* config/rs6000/rs6000.h: ... here.\n+\t(rs6000_cost): Declare.\n+\n 2017-10-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* except.c (setjmp_fn): New global variable."}, {"sha": "f98ef93e6d4fbc57d676f2ef2fee79c3a22cccbc", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d966425468fae968bcefb19ab764486e3e2e22e9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d966425468fae968bcefb19ab764486e3e2e22e9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d966425468fae968bcefb19ab764486e3e2e22e9", "patch": "@@ -637,31 +637,10 @@ mode_supports_vsx_dform_quad (machine_mode mode)\n }\n \n \f\n-/* Target cpu costs.  */\n-\n-struct processor_costs {\n-  const int mulsi;\t  /* cost of SImode multiplication.  */\n-  const int mulsi_const;  /* cost of SImode multiplication by constant.  */\n-  const int mulsi_const9; /* cost of SImode mult by short constant.  */\n-  const int muldi;\t  /* cost of DImode multiplication.  */\n-  const int divsi;\t  /* cost of SImode division.  */\n-  const int divdi;\t  /* cost of DImode division.  */\n-  const int fp;\t\t  /* cost of simple SFmode and DFmode insns.  */\n-  const int dmul;\t  /* cost of DFmode multiplication (and fmadd).  */\n-  const int sdiv;\t  /* cost of SFmode division (fdivs).  */\n-  const int ddiv;\t  /* cost of DFmode division (fdiv).  */\n-  const int cache_line_size;    /* cache line size in bytes. */\n-  const int l1_cache_size;\t/* size of l1 cache, in kilobytes.  */\n-  const int l2_cache_size;\t/* size of l2 cache, in kilobytes.  */\n-  const int simultaneous_prefetches; /* number of parallel prefetch\n-\t\t\t\t\toperations.  */\n-  const int sfdf_convert;\t/* cost of SF->DF conversion.  */\n-};\n+/* Processor costs (relative to an add) */\n \n const struct processor_costs *rs6000_cost;\n \n-/* Processor costs (relative to an add) */\n-\n /* Instruction size costs on 32bit processors.  */\n static const\n struct processor_costs size32_cost = {"}, {"sha": "21e536b1f957841934c1bb407cd58fe401800ba5", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d966425468fae968bcefb19ab764486e3e2e22e9/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d966425468fae968bcefb19ab764486e3e2e22e9/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=d966425468fae968bcefb19ab764486e3e2e22e9", "patch": "@@ -2064,6 +2064,29 @@ extern scalar_int_mode rs6000_pmode;\n /* Given a condition code and a mode, return the inverse condition.  */\n #define REVERSE_CONDITION(CODE, MODE) rs6000_reverse_condition (MODE, CODE)\n \n+\f\n+/* Target cpu costs.  */\n+\n+struct processor_costs {\n+  const int mulsi;\t  /* cost of SImode multiplication.  */\n+  const int mulsi_const;  /* cost of SImode multiplication by constant.  */\n+  const int mulsi_const9; /* cost of SImode mult by short constant.  */\n+  const int muldi;\t  /* cost of DImode multiplication.  */\n+  const int divsi;\t  /* cost of SImode division.  */\n+  const int divdi;\t  /* cost of DImode division.  */\n+  const int fp;\t\t  /* cost of simple SFmode and DFmode insns.  */\n+  const int dmul;\t  /* cost of DFmode multiplication (and fmadd).  */\n+  const int sdiv;\t  /* cost of SFmode division (fdivs).  */\n+  const int ddiv;\t  /* cost of DFmode division (fdiv).  */\n+  const int cache_line_size;    /* cache line size in bytes. */\n+  const int l1_cache_size;\t/* size of l1 cache, in kilobytes.  */\n+  const int l2_cache_size;\t/* size of l2 cache, in kilobytes.  */\n+  const int simultaneous_prefetches; /* number of parallel prefetch\n+\t\t\t\t\toperations.  */\n+  const int sfdf_convert;\t/* cost of SF->DF conversion.  */\n+};\n+\n+extern const struct processor_costs *rs6000_cost;\n \f\n /* Control the assembler format that we output.  */\n "}]}