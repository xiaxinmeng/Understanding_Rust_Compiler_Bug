{"sha": "703fe7a454a47a394dffd7e03c25b90bdef08876", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAzZmU3YTQ1NGE0N2EzOTRkZmZkN2UwM2MyNWI5MGJkZWYwODg3Ng==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-09-26T10:32:01Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-09-26T10:32:01Z"}, "message": "Enable vect testcases on S/390.\n\nAdd s390 platform checks where appropriate.\n\ngcc/testsuite/ChangeLog:\n\n2017-09-26  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* lib/target-supports.exp: Enable tests for S/390.\n\nFrom-SVN: r253191", "tree": {"sha": "3345385161eb65598f667aff09b4d1d9486a30c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3345385161eb65598f667aff09b4d1d9486a30c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/703fe7a454a47a394dffd7e03c25b90bdef08876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/703fe7a454a47a394dffd7e03c25b90bdef08876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/703fe7a454a47a394dffd7e03c25b90bdef08876", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/703fe7a454a47a394dffd7e03c25b90bdef08876/comments", "author": null, "committer": null, "parents": [{"sha": "59aab79a4c4cb1d443e1aad5dbced29b780a79b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59aab79a4c4cb1d443e1aad5dbced29b780a79b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59aab79a4c4cb1d443e1aad5dbced29b780a79b5"}], "stats": {"total": 135, "additions": 106, "deletions": 29}, "files": [{"sha": "72cf8c3aeef21b93ae4e4e97f698c0937edf8d18", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703fe7a454a47a394dffd7e03c25b90bdef08876/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703fe7a454a47a394dffd7e03c25b90bdef08876/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=703fe7a454a47a394dffd7e03c25b90bdef08876", "patch": "@@ -1,3 +1,7 @@\n+2017-09-26  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* lib/target-supports.exp: Enable tests for S/390.\n+\n 2017-09-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82320"}, {"sha": "8b2579798ee2504aeb78e85ba54741c5ad037528", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 102, "deletions": 29, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703fe7a454a47a394dffd7e03c25b90bdef08876/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703fe7a454a47a394dffd7e03c25b90bdef08876/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=703fe7a454a47a394dffd7e03c25b90bdef08876", "patch": "@@ -3066,7 +3066,9 @@ proc check_effective_target_vect_int { } {\n \t     || [is-effective-target arm_neon]\n \t     || ([istarget mips*-*-*]\n \t\t && ([et-is-effective-target mips_loongson]\n-\t\t     || [et-is-effective-target mips_msa])) } {\n+\t\t     || [et-is-effective-target mips_msa]))\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_int_saved($et_index) 1\n \t}\n     }\n@@ -5069,7 +5071,9 @@ proc check_effective_target_vect_shift { } {\n \t     || [is-effective-target arm_neon]\n \t     || ([istarget mips*-*-*]\n \t\t && ([et-is-effective-target mips_msa]\n-\t\t     || [et-is-effective-target mips_loongson])) } {\n+\t\t     || [et-is-effective-target mips_loongson]))\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_shift_saved($et_index) 1\n \t}\n     }\n@@ -5087,7 +5091,9 @@ proc check_effective_target_whole_vector_shift { } {\n \t || ([is-effective-target arm_neon]\n \t     && [check_effective_target_arm_little_endian])\n \t || ([istarget mips*-*-*]\n-\t     && [et-is-effective-target mips_loongson]) } {\n+\t     && [et-is-effective-target mips_loongson])\n+\t || ([istarget s390*-*-*]\n+\t     && [check_effective_target_s390_vx]) } {\n \tset answer 1\n     } else {\n \tset answer 0\n@@ -5133,7 +5139,9 @@ proc check_effective_target_vect_shift_char { } {\n              && ![istarget powerpc-*-linux*paired*])\n \t     || [is-effective-target arm_neon]\n \t     || ([istarget mips*-*-*]\n-\t\t && [et-is-effective-target mips_msa]) } {\n+\t\t && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_shift_char_saved($et_index) 1\n \t}\n     }\n@@ -5156,7 +5164,9 @@ proc check_effective_target_vect_long { } {\n \t || ([istarget sparc*-*-*] && [check_effective_target_ilp32])\n \t || [istarget aarch64*-*-*]\n \t || ([istarget mips*-*-*]\n-\t      && [et-is-effective-target mips_msa]) } {\n+\t      && [et-is-effective-target mips_msa])\n+\t || ([istarget s390*-*-*]\n+\t     && [check_effective_target_s390_vx]) } {\n \tset answer 1\n     } else {\n \tset answer 0\n@@ -5219,7 +5229,9 @@ proc check_effective_target_vect_double { } {\n \t     || [istarget spu-*-*]\n \t     || ([istarget powerpc*-*-*] && [check_vsx_hw_available])\n \t     || ([istarget mips*-*-*]\n-\t\t && [et-is-effective-target mips_msa]) } {\n+\t\t && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_double_saved($et_index) 1\n \t}\n     }\n@@ -5243,7 +5255,9 @@ proc check_effective_target_vect_long_long { } {\n \tset et_vect_long_long_saved($et_index) 0\n \tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || ([istarget mips*-*-*]\n-\t\t && [et-is-effective-target mips_msa]) } {\n+\t\t && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_long_long_saved($et_index) 1\n         }\n     }\n@@ -5343,7 +5357,9 @@ proc check_effective_target_vect_perm { } {\n \t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || ([istarget mips*-*-*]\n \t\t && ([et-is-effective-target mpaired_single]\n-\t\t     || [et-is-effective-target mips_msa])) } {\n+\t\t     || [et-is-effective-target mips_msa]))\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_perm_saved($et_index) 1\n         }\n     }\n@@ -5372,7 +5388,9 @@ proc check_effective_target_vect_perm_byte { } {\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget spu-*-*]\n \t     || ([istarget mips-*.*]\n-\t\t && [et-is-effective-target mips_msa]) } {\n+\t\t && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_perm_byte_saved($et_index) 1\n         }\n     }\n@@ -5401,7 +5419,9 @@ proc check_effective_target_vect_perm_short { } {\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget spu-*-*]\n \t     || ([istarget mips*-*-*]\n-\t\t  && [et-is-effective-target mips_msa]) } {\n+\t\t  && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_perm_short_saved($et_index) 1\n         }\n     }\n@@ -5560,7 +5580,9 @@ proc check_effective_target_vect_widen_mult_qi_to_hi { } {\n \t}\n         if { [istarget powerpc*-*-*]\n               || [istarget aarch64*-*-*]\n-              || [is-effective-target arm_neon] } {\n+              || [is-effective-target arm_neon]\n+\t      || ([istarget s390*-*-*]\n+\t\t  && [check_effective_target_s390_vx]) } {\n \t    set et_vect_widen_mult_qi_to_hi_saved($et_index) 1\n         }\n     }\n@@ -5597,7 +5619,9 @@ proc check_effective_target_vect_widen_mult_hi_to_si { } {\n \t     || [istarget ia64-*-*]\n \t     || [istarget aarch64*-*-*]\n \t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n-\t     || [is-effective-target arm_neon] } {\n+\t     || [is-effective-target arm_neon]\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_widen_mult_hi_to_si_saved($et_index) 1\n         }\n     }\n@@ -5622,7 +5646,9 @@ proc check_effective_target_vect_widen_mult_qi_to_hi_pattern { } {\n \tset et_vect_widen_mult_qi_to_hi_pattern_saved($et_index) 0\n         if { [istarget powerpc*-*-*]\n               || ([is-effective-target arm_neon]\n-\t\t  && [check_effective_target_arm_little_endian]) } {\n+\t\t  && [check_effective_target_arm_little_endian])\n+\t      || ([istarget s390*-*-*]\n+\t\t  && [check_effective_target_s390_vx]) } {\n \t    set et_vect_widen_mult_qi_to_hi_pattern_saved($et_index) 1\n         }\n     }\n@@ -5650,7 +5676,9 @@ proc check_effective_target_vect_widen_mult_hi_to_si_pattern { } {\n \t     || [istarget ia64-*-*]\n \t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || ([is-effective-target arm_neon]\n-\t\t && [check_effective_target_arm_little_endian]) } {\n+\t\t && [check_effective_target_arm_little_endian])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_widen_mult_hi_to_si_pattern_saved($et_index) 1\n         }\n     }\n@@ -5674,7 +5702,9 @@ proc check_effective_target_vect_widen_mult_si_to_di_pattern { } {\n     } else {\n \tset et_vect_widen_mult_si_to_di_pattern_saved($et_index) 0\n         if {[istarget ia64-*-*]\n-\t    || [istarget i?86-*-*] || [istarget x86_64-*-*] } {\n+\t    || [istarget i?86-*-*] || [istarget x86_64-*-*]\n+\t    || ([istarget s390*-*-*]\n+\t\t&& [check_effective_target_s390_vx]) } {\n \t    set et_vect_widen_mult_si_to_di_pattern_saved($et_index) 1\n         }\n     }\n@@ -5847,7 +5877,9 @@ proc check_effective_target_vect_pack_trunc { } {\n              || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]\n \t\t && [check_effective_target_arm_little_endian])\n \t     || ([istarget mips*-*-*]\n-\t\t && [et-is-effective-target mips_msa]) } {\n+\t\t && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_pack_trunc_saved($et_index) 1\n         }\n     }\n@@ -5877,7 +5909,9 @@ proc check_effective_target_vect_unpack { } {\n \t     || ([istarget mips*-*-*]\n \t\t && [et-is-effective-target mips_msa])\n              || ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok]\n-\t\t && [check_effective_target_arm_little_endian]) } {\n+\t\t && [check_effective_target_arm_little_endian])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_unpack_saved($et_index) 1\n         }\n     }\n@@ -5947,7 +5981,9 @@ proc check_effective_target_vect_hw_misalign { } {\n \tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || ([istarget powerpc*-*-*] && [check_p8vector_hw_available])\n \t     || [istarget aarch64*-*-*]\n-\t     || ([istarget mips*-*-*] && [et-is-effective-target mips_msa]) } {\n+\t     || ([istarget mips*-*-*] && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t  set et_vect_hw_misalign_saved($et_index) 1\n \t}\n \tif { [istarget arm*-*-*] } {\n@@ -6121,7 +6157,9 @@ proc check_effective_target_vect_condition { } {\n \t     || ([istarget mips*-*-*]\n \t\t && [et-is-effective-target mips_msa])\n \t     || ([istarget arm*-*-*]\n-\t\t && [check_effective_target_arm_neon_ok]) } {\n+\t\t && [check_effective_target_arm_neon_ok])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_cond_saved($et_index) 1\n \t}\n     }\n@@ -6146,7 +6184,9 @@ proc check_effective_target_vect_cond_mixed { } {\n \t     || [istarget aarch64*-*-*]\n \t     || [istarget powerpc*-*-*] \n \t     || ([istarget mips*-*-*]\n-\t\t && [et-is-effective-target mips_msa]) } {\n+\t\t && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_cond_mixed_saved($et_index) 1\n \t}\n     }\n@@ -6172,7 +6212,9 @@ proc check_effective_target_vect_char_mult { } {\n \t     || [check_effective_target_arm32]\n \t     || [check_effective_target_powerpc_altivec]\n \t     || ([istarget mips*-*-*]\n-\t\t && [et-is-effective-target mips_msa]) } {\n+\t\t && [et-is-effective-target mips_msa])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_char_mult_saved($et_index) 1\n \t}\n     }\n@@ -6200,7 +6242,9 @@ proc check_effective_target_vect_short_mult { } {\n \t     || [check_effective_target_arm32]\n \t     || ([istarget mips*-*-*]\n \t\t && ([et-is-effective-target mips_msa]\n-\t\t     || [et-is-effective-target mips_loongson])) } {\n+\t\t     || [et-is-effective-target mips_loongson]))\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_short_mult_saved($et_index) 1\n \t}\n     }\n@@ -6227,7 +6271,9 @@ proc check_effective_target_vect_int_mult { } {\n \t     || [istarget aarch64*-*-*]\n \t     || ([istarget mips*-*-*]\n \t\t && [et-is-effective-target mips_msa])\n-\t     || [check_effective_target_arm32] } {\n+\t     || [check_effective_target_arm32]\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_vect_int_mult_saved($et_index) 1\n \t}\n     }\n@@ -6256,7 +6302,9 @@ proc check_effective_target_vect_extract_even_odd { } {\n              || [istarget spu-*-*]\n \t     || ([istarget mips*-*-*]\n \t\t && ([et-is-effective-target mips_msa]\n-\t\t     || [et-is-effective-target mpaired_single])) } {\n+\t\t     || [et-is-effective-target mpaired_single]))\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_extract_even_odd_saved($et_index) 1\n         }\n     }\n@@ -6284,7 +6332,9 @@ proc check_effective_target_vect_interleave { } {\n              || [istarget spu-*-*]\n \t     || ([istarget mips*-*-*]\n \t\t && ([et-is-effective-target mpaired_single]\n-\t\t     || [et-is-effective-target mips_msa])) } {\n+\t\t     || [et-is-effective-target mips_msa]))\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_interleave_saved($et_index) 1\n         }\n     }\n@@ -6401,7 +6451,9 @@ proc check_effective_target_sqrt_insn { } {\n \tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget aarch64*-*-*]\n-\t     || ([istarget arm*-*-*] && [check_effective_target_arm_vfp_ok]) } {\n+\t     || ([istarget arm*-*-*] && [check_effective_target_arm_vfp_ok])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t   set et_sqrt_insn_saved 1\n \t}\n     }\n@@ -6422,7 +6474,9 @@ proc check_effective_target_vect_call_sqrtf { } {\n \tset et_vect_call_sqrtf_saved($et_index) 0\n \tif { [istarget aarch64*-*-*]\n \t     || [istarget i?86-*-*] || [istarget x86_64-*-*]\n-\t     || ([istarget powerpc*-*-*] && [check_vsx_hw_available]) } {\n+\t     || ([istarget powerpc*-*-*] && [check_vsx_hw_available])\n+\t     || ([istarget s390*-*-*]\n+\t\t && [check_effective_target_s390_vx]) } {\n \t    set et_vect_call_sqrtf_saved($et_index) 1\n \t}\n     }\n@@ -8027,6 +8081,25 @@ proc check_vect_support_and_set_flags { } {\n         }\n     } elseif [istarget \"aarch64*-*-*\"] {\n         set dg-do-what-default run\n+    } elseif [istarget s390*-*-*] {\n+\t# The S/390 backend set a default of 2 for that value.\n+\t# Override it to have the same situation as with other\n+\t# targets.\n+\tlappend DEFAULT_VECTCFLAGS \"--param\" \"min-vect-loop-bound=1\"\n+\tlappend DEFAULT_VECTCFLAGS \"--param\" \"max-unrolled-insns=200\"\n+\tlappend DEFAULT_VECTCFLAGS \"--param\" \"max-unroll-times=8\"\n+\tlappend DEFAULT_VECTCFLAGS \"--param\" \"max-completely-peeled-insns=200\"\n+\tlappend DEFAULT_VECTCFLAGS \"--param\" \"max-completely-peel-times=16\"\n+        if [check_effective_target_s390_vxe] {\n+\t    lappend DEFAULT_VECTCFLAGS \"-march=z14\" \"-mzarch\"\n+            set dg-do-what-default run\n+\t} elseif [check_effective_target_s390_vx] {\n+\t    lappend DEFAULT_VECTCFLAGS \"-march=z13\" \"-mzarch\"\n+            set dg-do-what-default run\n+        } else {\n+\t    lappend DEFAULT_VECTCFLAGS \"-march=z14\" \"-mzarch\"\n+            set dg-do-what-default compile\n+        }\n     } else {\n         return 0\n     }\n@@ -8453,7 +8526,7 @@ proc check_effective_target_s390_vx { } {\n     } \"-march=z13 -mzarch\" ]\n }\n \n-# Same as above but for the arch12 vector enhancement facility. Test\n+# Same as above but for the z14 vector enhancement facility. Test\n # is performed with the vector nand instruction.\n proc check_effective_target_s390_vxe { } {\n     if ![istarget s390*-*-*] then {\n@@ -8466,7 +8539,7 @@ proc check_effective_target_s390_vxe { } {\n \t    asm (\"vnn %%v24, %%v26, %%v28\" : : : \"v24\", \"v26\", \"v28\");\n \t    return 0;\n \t}\n-    } \"-march=arch12 -mzarch\" ]\n+    } \"-march=z14 -mzarch\" ]\n }\n \n #For versions of ARM architectures that have hardware div insn,"}]}