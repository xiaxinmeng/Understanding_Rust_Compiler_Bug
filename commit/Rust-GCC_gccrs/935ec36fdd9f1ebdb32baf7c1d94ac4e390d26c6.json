{"sha": "935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM1ZWMzNmZkZDlmMWViZGIzMmJhZjdjMWQ5NGFjNGUzOTBkMjZjNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-11-05T19:25:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-11-05T19:25:20Z"}, "message": "re PR libstdc++/55215 (Constructor seeding is broken for Mersenne twister)\n\n2012-11-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/55215\n\t* include/bits/random.tcc (mersenne_twister_engine<>::seed(_Sseq&)):\n\tAssign state_size to _M_p.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/55215.cc:\n\tNew.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/55215.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/55215.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\t55215.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/55215.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n\t55215.cc: Likewise.\n\nFrom-SVN: r193181", "tree": {"sha": "d5130a65d876b6a974441374a746f54258c347aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5130a65d876b6a974441374a746f54258c347aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/comments", "author": null, "committer": null, "parents": [{"sha": "d18090b591e73fc685822915d9e3c3988fbb6c56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d18090b591e73fc685822915d9e3c3988fbb6c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d18090b591e73fc685822915d9e3c3988fbb6c56"}], "stats": {"total": 373, "additions": 370, "deletions": 3}, "files": [{"sha": "749648a2e30d62587ec39b2514f4d481db1b3155", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -1,3 +1,21 @@\n+2012-11-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/55215\n+\t* include/bits/random.tcc (mersenne_twister_engine<>::seed(_Sseq&)):\n+\tAssign state_size to _M_p.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/55215.cc:\n+\tNew.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/55215.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/55215.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\t55215.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/55215.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n+\t55215.cc: Likewise.\n+\n 2012-11-03  Florian Weimer  <fweimer@redhat.com>\n \n \t* libsupc++/vec.cc (compute_size): New.\n@@ -23,14 +41,12 @@\n \t* doc/xml/manual/prerequisites.xml: Remove detailed reference\n \tto binutils downloads.\n \n-\n-\n 2012-11-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/55169\n \t* include/bits/random.h: Remove all uses of param().\n \t(chi_squared_distribution<>::__generate_impl(_ForwardIterator,\n-\t_ForwardIterator, _UniformRandomNumberGenerator&): Declare\n+\t_ForwardIterator, _UniformRandomNumberGenerator&)): Declare\n \t* include/bits/random.tcc: ... define.\n \t* include/ext/random: Remove all uses of param().\n "}, {"sha": "54a0c22fce11d1aac99a62467736898c03607d7c", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -385,6 +385,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  }\n         if (__zero)\n           _M_x[0] = __detail::_Shift<_UIntType, __w - 1>::__value;\n+\t_M_p = state_size;\n       }\n \n   template<typename _UIntType, size_t __w,"}, {"sha": "c655b262062668a762371a58086fd3f4ee7c3f27", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/55215.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2F55215.cc?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -0,0 +1,58 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+#include <testsuite_hooks.h>\n+\n+int f(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::ranlux24(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+int g(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::ranlux24();\n+  rnd.seed(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const int f1 = f(0);\n+  const int f2 = f(0);\n+\n+  const int g1 = g(0);\n+  const int g2 = g(0);\n+  \n+  VERIFY( f1 == f2 );\n+  VERIFY( g1 == g2 );\n+  VERIFY( f1 == g1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "4b502b7d7c057c95001b44bb47ef92546a5a89ed", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/55215.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2F55215.cc?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -0,0 +1,60 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+#include <testsuite_hooks.h>\n+\n+int f(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::independent_bits_engine<std::mt19937, 9,\n+\t\t\t\t\t  std::uint_fast32_t>(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+int g(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::independent_bits_engine<std::mt19937, 9,\n+\t\t\t\t\t  std::uint_fast32_t>();\n+  rnd.seed(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const int f1 = f(0);\n+  const int f2 = f(0);\n+\n+  const int g1 = g(0);\n+  const int g2 = g(0);\n+  \n+  VERIFY( f1 == f2 );\n+  VERIFY( g1 == g2 );\n+  VERIFY( f1 == g1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "21333fba97de76f7cf88de8e1d65a2e84fd4a6ed", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/55215.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2F55215.cc?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -0,0 +1,58 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+#include <testsuite_hooks.h>\n+\n+int f(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::minstd_rand(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+int g(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::minstd_rand();\n+  rnd.seed(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const int f1 = f(0);\n+  const int f2 = f(0);\n+\n+  const int g1 = g(0);\n+  const int g2 = g(0);\n+  \n+  VERIFY( f1 == f2 );\n+  VERIFY( g1 == g2 );\n+  VERIFY( f1 == g1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "3453d9f727a260a8035eb229df0414ac46dced5b", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/55215.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2F55215.cc?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -0,0 +1,58 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+#include <testsuite_hooks.h>\n+\n+int f(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::mt19937(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+int g(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::mt19937();\n+  rnd.seed(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const int f1 = f(0);\n+  const int f2 = f(0);\n+\n+  const int g1 = g(0);\n+  const int g2 = g(0);\n+  \n+  VERIFY( f1 == f2 );\n+  VERIFY( g1 == g2 );\n+  VERIFY( f1 == g1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d7db635d8efd740b9f56074523eeed5ccd7bac95", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/55215.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2F55215.cc?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -0,0 +1,58 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+#include <testsuite_hooks.h>\n+\n+int f(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::knuth_b(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+int g(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::knuth_b();\n+  rnd.seed(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const int f1 = f(0);\n+  const int f2 = f(0);\n+\n+  const int g1 = g(0);\n+  const int g2 = g(0);\n+  \n+  VERIFY( f1 == f2 );\n+  VERIFY( g1 == g2 );\n+  VERIFY( f1 == g1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "4927d771667b4fe8688c446498febb0861dc3c93", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/55215.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2F55215.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2F55215.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2F55215.cc?ref=935ec36fdd9f1ebdb32baf7c1d94ac4e390d26c6", "patch": "@@ -0,0 +1,58 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+#include <testsuite_hooks.h>\n+\n+int f(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::ranlux24_base(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+int g(int x)\n+{\n+  std::seed_seq sq(&x, &x + 1);\n+  auto rnd = std::ranlux24_base();\n+  rnd.seed(sq);\n+  return std::uniform_int_distribution<int>()(rnd);\n+}\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  const int f1 = f(0);\n+  const int f2 = f(0);\n+\n+  const int g1 = g(0);\n+  const int g2 = g(0);\n+  \n+  VERIFY( f1 == f2 );\n+  VERIFY( g1 == g2 );\n+  VERIFY( f1 == g1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}