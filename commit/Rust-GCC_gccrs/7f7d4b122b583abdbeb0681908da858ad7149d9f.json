{"sha": "7f7d4b122b583abdbeb0681908da858ad7149d9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y3ZDRiMTIyYjU4M2FiZGJlYjA2ODE5MDhkYTg1OGFkNzE0OWQ5Zg==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-02-18T08:47:56Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-02-18T08:47:56Z"}, "message": "re PR c++/47208 ([C++0x] ICE: in decl_constant_var_p, at cp/decl2.c:3563 with missing #include <initializer_list>)\n\nPR c++/47208\n\ngcc/cp/\n\n\tPR c++/47208\n\t* pt.c (do_auto_deduction): Do not mention error_mark_node in\n\tdiagnostics.\n\t* semantics.c (finish_id_expression): Do not pass erroneous decl\n\tto decl_constant_var_p.\n\ngcc/testsuite/\n\n\tPR c++/47208\n\t* g++.dg/cpp0x/auto21.C: New test.\n\nFrom-SVN: r170268", "tree": {"sha": "ed7a4e3154cc3931192fde65f57e04814ee2ee8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed7a4e3154cc3931192fde65f57e04814ee2ee8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f7d4b122b583abdbeb0681908da858ad7149d9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7d4b122b583abdbeb0681908da858ad7149d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7d4b122b583abdbeb0681908da858ad7149d9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7d4b122b583abdbeb0681908da858ad7149d9f/comments", "author": null, "committer": null, "parents": [{"sha": "5dcddcfeea9fa9fc1c85f839e0030d077d1d3110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcddcfeea9fa9fc1c85f839e0030d077d1d3110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dcddcfeea9fa9fc1c85f839e0030d077d1d3110"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "db9fa89e70f5b57060b5220bf762c5be67cf5b35", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7f7d4b122b583abdbeb0681908da858ad7149d9f", "patch": "@@ -1,3 +1,11 @@\n+2011-02-18  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/47208\n+\t* pt.c (do_auto_deduction): Do not mention error_mark_node in\n+    \tdiagnostics.\n+\t* semantics.c (finish_id_expression): Do not pass erroneous decl\n+    \tto decl_constant_var_p.\n+\n 2011-02-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/47783"}, {"sha": "49906361a61ea90c6f8f28b743251de3339a5531", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7f7d4b122b583abdbeb0681908da858ad7149d9f", "patch": "@@ -18926,7 +18926,11 @@ do_auto_deduction (tree type, tree init, tree auto_node)\n \t\t\t       DEDUCE_CALL, LOOKUP_NORMAL);\n   if (val > 0)\n     {\n-      error (\"unable to deduce %qT from %qE\", type, init);\n+      if (type && type != error_mark_node)\n+\t/* If type is error_mark_node a diagnostic must have been\n+\t   emitted by now.  Also, having a mention to '<type error>'\n+\t   in the diagnostic is not really useful to the user.  */\n+\terror (\"unable to deduce %qT from %qE\", type, init);\n       return error_mark_node;\n     }\n "}, {"sha": "1ad707b36fb4809762f491c941b09419f94d30cc", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=7f7d4b122b583abdbeb0681908da858ad7149d9f", "patch": "@@ -3148,7 +3148,8 @@ finish_id_expression (tree id_expression,\n       /* Only certain kinds of names are allowed in constant\n \t expression.  Enumerators and template parameters have already\n \t been handled above.  */\n-      if (integral_constant_expression_p\n+      if (! error_operand_p (decl)\n+\t  && integral_constant_expression_p\n \t  && ! decl_constant_var_p (decl)\n \t  && ! builtin_valid_in_constant_expr_p (decl))\n \t{"}, {"sha": "2b4e1fa6ac39325cb0ce98d0df7a8539ba8fa87b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f7d4b122b583abdbeb0681908da858ad7149d9f", "patch": "@@ -1,3 +1,8 @@\n+2011-02-18  Dodji Seketeli  <dodji@redhat.com>\n+\n+    \tPR c++/47208\n+\t* g++.dg/cpp0x/auto21.C: New test.\n+\n 2011-02-17  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* objc.dg/special/unclaimed-category-1.h: Updated for"}, {"sha": "1cbcac58d6a2dc18fa02591a43ad0e566cc05f95", "filename": "gcc/testsuite/g++.dg/cpp0x/auto21.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7d4b122b583abdbeb0681908da858ad7149d9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto21.C?ref=7f7d4b122b583abdbeb0681908da858ad7149d9f", "patch": "@@ -0,0 +1,5 @@\n+// Origin PR c++/47208\n+// { dg-options \"-std=c++0x\" }\n+\n+constexpr auto list = { }; // { dg-error \"deducing from brace-enclosed initializer list requires #include <initializer_list>\" }\n+static const int l = list.size();"}]}