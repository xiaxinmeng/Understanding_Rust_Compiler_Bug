{"sha": "7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YxNGJiZTY4ZjFmYWMyNzM0OWI1MTU0NzMwYWViMmUyM2U5N2RmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2003-09-08T07:23:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-09-08T07:23:34Z"}, "message": "toplev.c (rest_of_compilation): Call split_all_insns before regstack if optimizing but not scheduling after reload.\n\n\t* toplev.c (rest_of_compilation): Call split_all_insns before\n\tregstack if optimizing but not scheduling after reload.\n\n\t* gcc.c-torture/compile/20030904-1.c: New test.\n\nFrom-SVN: r71203", "tree": {"sha": "ea1321c9918c08c95bd582f59412c454272f1f8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea1321c9918c08c95bd582f59412c454272f1f8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5751a10b97f8607b89325cecdac246d9ef758592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5751a10b97f8607b89325cecdac246d9ef758592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5751a10b97f8607b89325cecdac246d9ef758592"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "5582bc20a2c95d93ac06d05029debfd029450d0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "patch": "@@ -1,3 +1,8 @@\n+2003-09-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* toplev.c (rest_of_handle_stack_regs): Call split_all_insns before\n+\tregstack if optimizing but not scheduling after reload.\n+\n 2003-09-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/sparc.c (struct machine_function): New type."}, {"sha": "032e09024d3b0f41e533f5c7737c06e05cfde452", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "patch": "@@ -1,3 +1,7 @@\n+2003-09-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20030904-1.c: New test.\n+\n 2003-09-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g++.dg/opt/longbranch2.C: New test."}, {"sha": "09fd015b115bc63e277a2c9fbd097ade37bff7db", "filename": "gcc/testsuite/gcc.c-torture/compile/20030904-1.c", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030904-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030904-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030904-1.c?ref=7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "patch": "@@ -0,0 +1,94 @@\n+struct A\n+{\n+  long a1;\n+  double *a2;\n+};\n+\n+struct B\n+{\n+  void *b1;\n+  double b2, b3;\n+  struct\n+  {\n+    int d1;\n+    double d2;\n+  } b4;\n+};\n+\n+struct C\n+{\n+  struct A *c1;\n+  void *c2;\n+};\n+\n+long fn1 (struct A *, double);\n+void fn2 (void *, const char *);\n+double fn3 (double);\n+double fn4 (double);\n+int fn5 (void *, double, double);\n+\n+int\n+foo (struct B *x)\n+{\n+  struct C *e = x->b1;\n+  struct A *f = e->c1;\n+  long g, h, i;\n+  double *j, k;\n+  g = fn1 (f, 0.5 * (x->b2 + x->b3)), h = g + 1, i = f->a1;\n+  j = f->a2, k = x->b4.d2;\n+  fn2 (x, \"something\");\n+  if (g <= 0)\n+    {\n+      double l = j[2] - j[1];\n+      if (l > 0.0 && l <= 0.02)\n+        k = (x->b4.d1 == 1\n+             ? ((1.0 / l) < 25 ? 25 : (1.0 / l))\n+             : fn3 ((1.0 / l) < 25 ? 25 : (1.0 / l)));\n+    }\n+  else\n+    {\n+      double m = j[h] - j[g], n = 0.0, l = 0.0;\n+      if (g > 1)\n+        n = j[g] - j[g - 1];\n+      if (h < i)\n+        l = j[h + 1] - j[h];\n+      if (n > 0.02)\n+        n = 0;\n+      if (m > 0.02)\n+        m = 0;\n+      if (l > 0.02)\n+        l = 0;\n+      if (m < n)\n+        {\n+          double o = m;\n+          m = n;\n+          n = o;\n+        }\n+      if (l < n)\n+        {\n+          double o = l;\n+          l = n;\n+          n = o;\n+        }\n+      if (l < m)\n+        {\n+          double o = l;\n+          l = m;\n+          m = o;\n+        }\n+      if (n != 0.0)\n+        k = (x->b4.d1 == 1\n+             ? ((1 / m) < 25 ? 25 : (1 / m))\n+             : fn3 ((1 / m) < 25 ? 25 : (1 / m)));\n+      else if (m != 0.0)\n+        k = (x->b4.d1 == 1\n+             ? ((2 / (m + l)) < 25 ? 25 : (2 / (m + l)))\n+             : fn3 ((2 / (m + l)) < 25 ? 25 : (2 / (m + l))));\n+      else if (l != 0.0)\n+        k = (x->b4.d1 == 1\n+             ? ((1 / l) < 25 ? 25 : (1 / l))\n+             : fn3 ((1 / l) < 25 ? 25 : (1 / l)));\n+    }\n+  fn5 (e->c2, 0.5 * (x->b2 + x->b3), (x->b4.d1 == 1 ? k : fn4 (k)));\n+  return 1;\n+}"}, {"sha": "bcc9c5046a99cc7428ed38d6c7019ac5efed4af5", "filename": "gcc/toplev.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f14bbe68f1fac27349b5154730aeb2e23e97dfa/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=7f14bbe68f1fac27349b5154730aeb2e23e97dfa", "patch": "@@ -2082,6 +2082,23 @@ rest_of_handle_delay_slots (tree decl, rtx insns)\n static void\n rest_of_handle_stack_regs (tree decl, rtx insns)\n {\n+#if defined (HAVE_ATTR_length)\n+  /* If flow2 creates new instructions which need splitting\n+     and scheduling after reload is not done, they might not be\n+     splitten until final which doesn't allow splitting\n+     if HAVE_ATTR_length.  */\n+#ifdef INSN_SCHEDULING\n+  if (optimize && !flag_schedule_insns_after_reload)\n+#else\n+  if (optimize)\n+#endif\n+    {\n+      timevar_push (TV_SHORTEN_BRANCH);\n+      split_all_insns (1);\n+      timevar_pop (TV_SHORTEN_BRANCH);\n+    }\n+#endif\n+\n   timevar_push (TV_REG_STACK);\n   open_dump_file (DFI_stack, decl);\n "}]}