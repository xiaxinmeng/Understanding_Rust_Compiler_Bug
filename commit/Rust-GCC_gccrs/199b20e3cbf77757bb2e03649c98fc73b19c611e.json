{"sha": "199b20e3cbf77757bb2e03649c98fc73b19c611e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk5YjIwZTNjYmY3Nzc1N2JiMmUwMzY0OWM5OGZjNzNiMTljNjExZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-04-05T18:06:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-04-05T18:06:02Z"}, "message": "Implement std::visit<R> for C++2a (P0655R1)\n\n\t* doc/xml/manual/status_cxx2020.xml: Update status.\n\t* include/std/variant (visit<R>): Define for C++2a (P0655R1).\n\t* testsuite/20_util/variant/visit_r.cc: New test.\n\nFrom-SVN: r270176", "tree": {"sha": "2e3921a368758535b84d73d091beb5fe2885cb69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e3921a368758535b84d73d091beb5fe2885cb69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/199b20e3cbf77757bb2e03649c98fc73b19c611e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199b20e3cbf77757bb2e03649c98fc73b19c611e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199b20e3cbf77757bb2e03649c98fc73b19c611e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199b20e3cbf77757bb2e03649c98fc73b19c611e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd4a309e05dc2ccde33e8e639aa063dc0c3b176f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4a309e05dc2ccde33e8e639aa063dc0c3b176f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4a309e05dc2ccde33e8e639aa063dc0c3b176f"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "ef4a79214aabe92052a4e3cf7ec7a21330f21cfc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=199b20e3cbf77757bb2e03649c98fc73b19c611e", "patch": "@@ -1,5 +1,9 @@\n 2019-04-05  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/status_cxx2020.xml: Update status.\n+\t* include/std/variant (visit<R>): Define for C++2a (P0655R1).\n+\t* testsuite/20_util/variant/visit_r.cc: New test.\n+\n \t* include/bits/fs_dir.h (directory_iterator::operator*)\n \t(directory_iterator::operator->): Add noexcept.\n \t(operator==, operator!=): Replace namespace-scope equality operators"}, {"sha": "cedb3d03066456bd525a080f615743c3e04a14ae", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2020.xml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2020.xml?ref=199b20e3cbf77757bb2e03649c98fc73b19c611e", "patch": "@@ -712,14 +712,13 @@ Feature-testing recommendations for C++</link>.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>  <code>visit&lt;R&gt;</code>: Explicit Return Type for <code>visit</code> </entry>\n       <entry>\n         <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0655r1.pdf\">\n \tP0655R1\n \t</link>\n       </entry>\n-      <entry align=\"center\"> </entry>\n+      <entry align=\"center\"> 9.1 </entry>\n       <entry />\n     </row>\n "}, {"sha": "fdf04cf624a16148bba9e0a6433684a92e8d4c4a", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=199b20e3cbf77757bb2e03649c98fc73b19c611e", "patch": "@@ -1610,6 +1610,23 @@ namespace __variant\n \t\t\tstd::forward<_Variants>(__variants)...);\n     }\n \n+#if __cplusplus > 201703L\n+  template<typename _Res, typename _Visitor, typename... _Variants>\n+    constexpr _Res\n+    visit(_Visitor&& __visitor, _Variants&&... __variants)\n+    {\n+      if ((__variants.valueless_by_exception() || ...))\n+\t__throw_bad_variant_access(\"Unexpected index\");\n+\n+      if constexpr (std::is_void_v<_Res>)\n+\t(void) __do_visit(std::forward<_Visitor>(__visitor),\n+\t\t\t  std::forward<_Variants>(__variants)...);\n+      else\n+\treturn __do_visit(std::forward<_Visitor>(__visitor),\n+\t\t\t  std::forward<_Variants>(__variants)...);\n+    }\n+#endif\n+\n   template<bool, typename... _Types>\n     struct __variant_hash_call_base_impl\n     {"}, {"sha": "5eed0cf1a49976e0d538be9ba0685502b75af29b", "filename": "libstdc++-v3/testsuite/20_util/variant/visit_r.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fvisit_r.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199b20e3cbf77757bb2e03649c98fc73b19c611e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fvisit_r.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fvisit_r.cc?ref=199b20e3cbf77757bb2e03649c98fc73b19c611e", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <variant>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  struct Visitor\n+  {\n+    int operator()(int, void*) const { return 0; }\n+    int operator()(char& c, void* p) const { return &c == p; }\n+    int operator()(int i, const char* s) const { return s[i] == '\\0'; }\n+    int operator()(char c, const char* s) const { return c == *s; }\n+  };\n+\n+  std::variant<int, char> v1{'c'};\n+  std::variant<void*, const char*> v2{\"chars\"};\n+\n+  auto res = std::visit<bool>(Visitor{}, v1, v2);\n+  static_assert(std::is_same_v<decltype(res), bool>);\n+  VERIFY( res == true );\n+\n+  static_assert(std::is_void_v<decltype(std::visit<void>(Visitor{}, v1, v2))>);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}