{"sha": "6dd74463ea50706652a42ac993ac3a2e22b86b58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRkNzQ0NjNlYTUwNzA2NjUyYTQyYWM5OTNhYzNhMmUyMmI4NmI1OA==", "commit": {"author": {"name": "Prachi Godbole", "email": "prachi.godbole@imgtec.com", "date": "2015-07-22T12:46:09Z"}, "committer": {"name": "Robert Suchanek", "email": "rts@gcc.gnu.org", "date": "2015-07-22T12:46:09Z"}, "message": "Add scheduling for M51xx core family.\n\ngcc/\n\t* config/mips/m5100.md: New file.\n\t* config/mips/mips-cpus.def (m5100, m5101): Define.\n\t* config/mips/mips-tables.opt: Regenerate.\n\t* config/mips/mips.c (mips_rtx_cost_data): Add costs for m5100.\n\t* config/mips/mips.h (MIPS_ISA_LEVEL_SPEC): Map -march=m5100 and\n\t-march=m5101 to -mips32r5.\n\t(MIPS_ARCH_FLOAT_SPEC): Map -m5101 to -msoft-float.\n\t(MIPS_ISA_NAN2008_SPEC): Map -march=m51* to -mnan=2008 if\n\t!-msoft-float.\n\t* config/mips/mips.md: Include m5100.md.\n\t(processor): Add m5100.\n\t* doc/invoke.texi (-march=@var{arch}): Add m5100, m5101.\n\nFrom-SVN: r226066", "tree": {"sha": "d13d8ad31aeb588af6e7f7f946bcb1fe56e4067d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d13d8ad31aeb588af6e7f7f946bcb1fe56e4067d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dd74463ea50706652a42ac993ac3a2e22b86b58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd74463ea50706652a42ac993ac3a2e22b86b58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd74463ea50706652a42ac993ac3a2e22b86b58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd74463ea50706652a42ac993ac3a2e22b86b58/comments", "author": null, "committer": null, "parents": [{"sha": "8ced5d2def763f1aa9142f6925836f05b825d8ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ced5d2def763f1aa9142f6925836f05b825d8ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ced5d2def763f1aa9142f6925836f05b825d8ba"}], "stats": {"total": 300, "additions": 280, "deletions": 20}, "files": [{"sha": "e6b8485f4d4e68bd78ef8a4c8aad3adef91f041f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -1,3 +1,18 @@\n+2015-07-22  Prachi Godbole  <prachi.godbole@imgtec.com>\n+\n+\t* config/mips/m5100.md: New file.\n+\t* config/mips/mips-cpus.def (m5100, m5101): Define.\n+\t* config/mips/mips-tables.opt: Regenerate.\n+\t* config/mips/mips.c (mips_rtx_cost_data): Add costs for m5100.\n+\t* config/mips/mips.h (MIPS_ISA_LEVEL_SPEC): Map -march=m5100 and\n+\t-march=m5101 to -mips32r5.\n+\t(MIPS_ARCH_FLOAT_SPEC): Map -m5101 to -msoft-float.\n+\t(MIPS_ISA_NAN2008_SPEC): Map -march=m51* to -mnan=2008 if\n+\t!-msoft-float.\n+\t* config/mips/mips.md: Include m5100.md.\n+\t(processor): Add m5100.\n+\t* doc/invoke.texi (-march=@var{arch}): Add m5100, m5101.\n+\n 2015-07-22  Robert Suchanek  <robert.suchanek@imgtec.com>\n \n \t* config/mips/mips-cpus.def (interaptiv): Define."}, {"sha": "f860eb211f87b275250badff36048f4e0ef9d332", "filename": "gcc/config/mips/m5100.md", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fm5100.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fm5100.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fm5100.md?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -0,0 +1,220 @@\n+;; DFA-based pipeline description for MIPS32 models M5100.\n+;;\n+;; Copyright (C) 2015 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_automaton \"m51_alu_pipe, m51_mdu_pipe, m51_fpu_pipe\")\n+(define_cpu_unit \"m51_mul\" \"m51_mdu_pipe\")\n+(define_cpu_unit \"m51_alu\" \"m51_alu_pipe\")\n+(define_cpu_unit \"m51_fpu\" \"m51_fpu_pipe\")\n+\n+;; --------------------------------------------------------------\n+;; ALU Instructions\n+;; --------------------------------------------------------------\n+\n+;; ALU: Logicals\n+(define_insn_reservation \"m51_int_logical\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"logical,move,signext,slt\"))\n+  \"m51_alu\")\n+\n+;; Arithmetics\n+(define_insn_reservation \"m51_int\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"arith,const,shift,clz\"))\n+  \"m51_alu\")\n+\n+(define_insn_reservation \"m51_int_nop\" 0\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"nop\"))\n+  \"nothing\")\n+\n+;; Conditional move\n+(define_insn_reservation \"m51_int_cmove\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"condmove\")\n+\t    (eq_attr \"mode\" \"SI,DI\")))\n+  \"m51_alu\")\n+\n+;; Call\n+(define_insn_reservation \"m51_int_call\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"call\"))\n+  \"m51_alu\")\n+\n+;; branch/jump\n+(define_insn_reservation \"m51_int_jump\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"branch,jump\"))\n+  \"m51_alu\")\n+\n+;; loads: lb, lbu, lh, lhu, ll, lw, lwl, lwr, lwpc, lwxs\n+;; prefetch: prefetch, prefetchx\n+(define_insn_reservation \"m51_int_load\" 3\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"load,prefetch,prefetchx\"))\n+  \"m51_alu\")\n+\n+;; stores\n+(define_insn_reservation \"m51_int_store\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"store\"))\n+  \"m51_alu\")\n+\n+;; --------------------------------------------------------------\n+;; MDU Instructions\n+;; --------------------------------------------------------------\n+\n+;; High performance fully pipelined multiplier\n+;; MULT to HI/LO\n+(define_insn_reservation \"m51_int_mult\" 2\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"imul,imadd\"))\n+  \"m51_alu+m51_mul*2\")\n+\n+;; MUL to GPR\n+(define_insn_reservation \"m51_int_mul3\" 2\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"imul3\"))\n+  \"(m51_alu*2)+(m51_mul*2)\")\n+\n+;; mfhi, mflo\n+(define_insn_reservation \"m51_int_mfhilo\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"mfhi,mflo\"))\n+  \"m51_mul\")\n+\n+;; mthi, mtlo\n+(define_insn_reservation \"m51_int_mthilo\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"mthi,mtlo\"))\n+  \"m51_mul\")\n+\n+;; div\n+(define_insn_reservation \"m51_int_div_si\" 34\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"idiv\"))\n+  \"m51_alu+m51_mul*34\")\n+\n+;; --------------------------------------------------------------\n+;; Floating Point Instructions\n+;; --------------------------------------------------------------\n+\n+;; fadd, fabs, fneg\n+(define_insn_reservation \"m51_fadd\" 4\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"fadd,fabs,fneg\"))\n+  \"m51_fpu\")\n+\n+;; fmove\n+(define_insn_reservation \"m51_fmove\" 4\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"fmove\"))\n+  \"m51_fpu\")\n+\n+;; conditional move\n+(define_insn_reservation \"m51_fp_cmove\" 4\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"condmove\")\n+\t    (eq_attr \"mode\" \"SF,DF\")))\n+  \"m51_fpu\")\n+\n+;; fload\n+(define_insn_reservation \"m51_fload\" 3\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"fpload,fpidxload\"))\n+  \"m51_fpu\")\n+\n+;; fstore\n+(define_insn_reservation \"m51_fstore\" 1\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"fpstore,fpidxstore\"))\n+  \"m51_fpu\")\n+\n+;; fmul, fmadd\n+(define_insn_reservation \"m51_fmul_sf\" 4\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"m51_fpu\")\n+\n+(define_insn_reservation \"m51_fmul_df\" 5\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"m51_fpu*2\")\n+\n+;; fdiv, fsqrt\n+(define_insn_reservation \"m51_fdiv_sf\" 17\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"fdiv,fsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"m51_fpu*14\")\n+\n+(define_insn_reservation \"m51_fdiv_df\" 32\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"fdiv,fsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"m51_fpu*29\")\n+\n+;; frsqrt\n+(define_insn_reservation \"m51_frsqrt_sf\" 17\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"frsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"m51_fpu*14\")\n+\n+(define_insn_reservation \"m51_frsqrt_df\" 35\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"frsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"m51_fpu*31\")\n+\n+;; fcmp\n+(define_insn_reservation \"m51_fcmp\" 4\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"fcmp\"))\n+  \"m51_fpu\")\n+\n+;; fcvt\n+;; cvt.s.d\n+(define_insn_reservation \"m51_fcvt_6\" 6\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"fcvt\")\n+\t    (eq_attr \"cnv_mode\" \"D2S\")))\n+  \"m51_fpu\")\n+\n+;; trunc\n+(define_insn_reservation \"m51_fcvt_5\" 5\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"fcvt\")\n+\t    (eq_attr \"cnv_mode\" \"D2I,S2I\")))\n+  \"m51_fpu\")\n+\n+;; cvt\n+(define_insn_reservation \"m51_fcvt_4\" 4\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (and (eq_attr \"type\" \"fcvt\")\n+\t    (eq_attr \"cnv_mode\" \"S2D,I2D,I2S\")))\n+  \"m51_fpu\")\n+\n+;; mtc, mfc\n+(define_insn_reservation \"m51_move_to_from_c1\" 2\n+  (and (eq_attr \"cpu\" \"m5100\")\n+       (eq_attr \"type\" \"mtc, mfc\"))\n+  \"m51_fpu\")"}, {"sha": "55c0cf6b3f75f0ffd5fec8dba0ff243e217549fb", "filename": "gcc/config/mips/mips-cpus.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-cpus.def?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -151,6 +151,8 @@ MIPS_CPU (\"interaptiv\", PROCESSOR_24KF2_1, 33, 0)\n \n /* MIPS32 Release 5 processors.  */\n MIPS_CPU (\"p5600\", PROCESSOR_P5600, 36, PTF_AVOID_BRANCHLIKELY)\n+MIPS_CPU (\"m5100\", PROCESSOR_M5100, 36, PTF_AVOID_BRANCHLIKELY)\n+MIPS_CPU (\"m5101\", PROCESSOR_M5100, 36, PTF_AVOID_BRANCHLIKELY)\n \n /* MIPS64 processors.  */\n MIPS_CPU (\"5kc\", PROCESSOR_5KC, 64, 0)"}, {"sha": "1f5daa41e948c334093156b2eef6ca5c5a2e091b", "filename": "gcc/config/mips/mips-tables.opt", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-tables.opt?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -637,53 +637,59 @@ EnumValue\n Enum(mips_arch_opt_value) String(p5600) Value(86) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(5kc) Value(87) Canonical\n+Enum(mips_arch_opt_value) String(m5100) Value(87) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(r5kc) Value(87)\n+Enum(mips_arch_opt_value) String(m5101) Value(88) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(5kf) Value(88) Canonical\n+Enum(mips_arch_opt_value) String(5kc) Value(89) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(r5kf) Value(88)\n+Enum(mips_arch_opt_value) String(r5kc) Value(89)\n \n EnumValue\n-Enum(mips_arch_opt_value) String(20kc) Value(89) Canonical\n+Enum(mips_arch_opt_value) String(5kf) Value(90) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(r20kc) Value(89)\n+Enum(mips_arch_opt_value) String(r5kf) Value(90)\n \n EnumValue\n-Enum(mips_arch_opt_value) String(sb1) Value(90) Canonical\n+Enum(mips_arch_opt_value) String(20kc) Value(91) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(sb1a) Value(91) Canonical\n+Enum(mips_arch_opt_value) String(r20kc) Value(91)\n \n EnumValue\n-Enum(mips_arch_opt_value) String(sr71000) Value(92) Canonical\n+Enum(mips_arch_opt_value) String(sb1) Value(92) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(sr71k) Value(92)\n+Enum(mips_arch_opt_value) String(sb1a) Value(93) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(xlr) Value(93) Canonical\n+Enum(mips_arch_opt_value) String(sr71000) Value(94) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(loongson3a) Value(94) Canonical\n+Enum(mips_arch_opt_value) String(sr71k) Value(94)\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon) Value(95) Canonical\n+Enum(mips_arch_opt_value) String(xlr) Value(95) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon+) Value(96) Canonical\n+Enum(mips_arch_opt_value) String(loongson3a) Value(96) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon2) Value(97) Canonical\n+Enum(mips_arch_opt_value) String(octeon) Value(97) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon3) Value(98) Canonical\n+Enum(mips_arch_opt_value) String(octeon+) Value(98) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(xlp) Value(99) Canonical\n+Enum(mips_arch_opt_value) String(octeon2) Value(99) Canonical\n+\n+EnumValue\n+Enum(mips_arch_opt_value) String(octeon3) Value(100) Canonical\n+\n+EnumValue\n+Enum(mips_arch_opt_value) String(xlp) Value(101) Canonical\n "}, {"sha": "c3cd52d20b02dd9efcb44fd45fa9aca306ea78b0", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -1280,6 +1280,19 @@ static const struct mips_rtx_cost_data\n     COSTS_N_INSNS (41),           /* int_div_di */\n \t\t     1,           /* branch_cost */\n \t\t     4            /* memory_latency */\n+  },\n+  { /* M5100 */\n+    COSTS_N_INSNS (4),            /* fp_add */\n+    COSTS_N_INSNS (4),            /* fp_mult_sf */\n+    COSTS_N_INSNS (5),            /* fp_mult_df */\n+    COSTS_N_INSNS (17),           /* fp_div_sf */\n+    COSTS_N_INSNS (32),           /* fp_div_df */\n+    COSTS_N_INSNS (5),            /* int_mult_si */\n+    COSTS_N_INSNS (5),            /* int_mult_di */\n+    COSTS_N_INSNS (34),           /* int_div_si */\n+    COSTS_N_INSNS (68),           /* int_div_di */\n+\t\t     1,           /* branch_cost */\n+\t\t     4            /* memory_latency */\n   }\n };\n \f"}, {"sha": "5bc562e9205ac6beafcf0a9055c6ddc3dfc20843", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -725,7 +725,7 @@ struct mips_cpu_info {\n        |march=34k*|march=74k*|march=m14k*|march=1004k* \\\n        |march=interaptiv: -mips32r2} \\\n      %{march=mips32r3: -mips32r3} \\\n-     %{march=mips32r5|march=p5600: -mips32r5} \\\n+     %{march=mips32r5|march=p5600|march=m5100|march=m5101: -mips32r5} \\\n      %{march=mips32r6: -mips32r6} \\\n      %{march=mips64|march=5k*|march=20k*|march=sb1*|march=sr71000 \\\n        |march=xlr: -mips64} \\\n@@ -749,7 +749,7 @@ struct mips_cpu_info {\n   \"%{mhard-float|msoft-float|mno-float|march=mips*:; \\\n      march=vr41*|march=m4k|march=4k*|march=24kc|march=24kec \\\n      |march=34kc|march=34kn|march=74kc|march=1004kc|march=5kc \\\n-     |march=m14k*|march=octeon|march=xlr: -msoft-float;\t\t  \\\n+     |march=m14k*|march=m5101|march=octeon|march=xlr: -msoft-float; \\\n      march=*: -mhard-float}\"\n \n /* A spec condition that matches 32-bit options.  It only works if\n@@ -772,7 +772,8 @@ struct mips_cpu_info {\n \n /* Infer a -mnan=2008 setting from a -mips argument.  */\n #define MIPS_ISA_NAN2008_SPEC \\\n-  \"%{mnan*:;mips32r6|mips64r6:-mnan=2008}\"\n+  \"%{mnan*:;mips32r6|mips64r6:-mnan=2008;march=m51*: \\\n+\t\t\t\t\t %{!msoft-float:-mnan=2008}}\"\n \n #if (MIPS_ABI_DEFAULT == ABI_O64 \\\n      || MIPS_ABI_DEFAULT == ABI_N32 \\"}, {"sha": "cde2b4eb9792047eacdda3cc8dc7b6d58b272d93", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -69,6 +69,7 @@\n   p5600\n   w32\n   w64\n+  m5100\n ])\n \n (define_c_enum \"unspec\" [\n@@ -1086,6 +1087,7 @@\n   \"nothing\")\n \n (include \"p5600.md\")\n+(include \"m5100.md\")\n (include \"4k.md\")\n (include \"5k.md\")\n (include \"20kc.md\")"}, {"sha": "413ac1666c8ace477adbfdb0730f9b66529cd030", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd74463ea50706652a42ac993ac3a2e22b86b58/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6dd74463ea50706652a42ac993ac3a2e22b86b58", "patch": "@@ -17045,6 +17045,7 @@ The processor names are:\n @samp{loongson2e}, @samp{loongson2f}, @samp{loongson3a},\n @samp{m4k},\n @samp{m14k}, @samp{m14kc}, @samp{m14ke}, @samp{m14kec},\n+@samp{m5100}, @samp{m5101},\n @samp{octeon}, @samp{octeon+}, @samp{octeon2}, @samp{octeon3},\n @samp{orion},\n @samp{p5600},"}]}