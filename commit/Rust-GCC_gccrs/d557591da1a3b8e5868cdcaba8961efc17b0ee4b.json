{"sha": "d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1NzU5MWRhMWEzYjhlNTg2OGNkY2FiYTg5NjFlZmMxN2IwZWU0Yg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-12-01T17:39:44Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-12-01T17:39:44Z"}, "message": "re PR tree-optimization/42237 (internal compiler error: verify_stmts failed)\n\n2009-12-01  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/42237\n\t* tree-sra.c (sra_ipa_modify_assign): Split gimple_reg_type assignments\n\tin between references into two.\n\n\t* testsuite/gcc.c-torture/compile/pr42237.c: New test.\n\nFrom-SVN: r154874", "tree": {"sha": "53d7b9d714ee4065887856ae83a6c37f3a1a9412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53d7b9d714ee4065887856ae83a6c37f3a1a9412"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee0192a223e13a84120ccecb628d2350e5c53efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0192a223e13a84120ccecb628d2350e5c53efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0192a223e13a84120ccecb628d2350e5c53efb"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "3b15962e71fa0bb1e1edb6c1906c41bd390ffdab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "patch": "@@ -1,3 +1,9 @@\n+2009-12-01  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42237\n+\t* tree-sra.c (sra_ipa_modify_assign): Split gimple_reg_type assignments\n+\tin between references into two.\n+\n 2009-12-01  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-inline.c (copy_tree_body_r): Do not set TREE_BLOCK"}, {"sha": "c691529d995a433b9080cc4134f8790110f3fc21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "patch": "@@ -1,3 +1,8 @@\n+2009-12-01  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42237\n+\t* gcc.c-torture/compile/pr42237.c: New test.\n+\n 2009-12-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/42057"}, {"sha": "58db8660ca3b33cefa0cf66986eac59d7b615a0a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42237.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42237.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42237.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42237.c?ref=d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "patch": "@@ -0,0 +1,32 @@\n+struct A\n+{\n+  int p;\n+};\n+\n+struct B\n+{\n+  struct A n;\n+  struct A m;\n+  int x;\n+  int y;\n+  int z;\n+};\n+\n+extern int g1, g2;\n+\n+static void __attribute__((noinline)) foo (struct B *b)\n+{\n+  int t;\n+\n+  t = b->n.p;\n+  g1 = t;\n+  b->n.p = t+1;\n+  g2 = b->m.p;\n+\n+  b->m = b->n;\n+}\n+\n+void bar (struct B *b)\n+{\n+  foo (b);\n+}"}, {"sha": "a6a1a90d757995a86d3328d8ec1bae752115fde6", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d557591da1a3b8e5868cdcaba8961efc17b0ee4b/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=d557591da1a3b8e5868cdcaba8961efc17b0ee4b", "patch": "@@ -3707,12 +3707,22 @@ sra_ipa_modify_assign (gimple *stmt_ptr, gimple_stmt_iterator *gsi, void *data)\n   any |= sra_ipa_modify_expr (lhs_p, gsi, true, data);\n   if (any)\n     {\n+      tree new_rhs = NULL_TREE;\n+\n       if (!useless_type_conversion_p (TREE_TYPE (*lhs_p), TREE_TYPE (*rhs_p)))\n+\tnew_rhs = fold_build1_loc (gimple_location (stmt), VIEW_CONVERT_EXPR,\n+\t\t\t\t   TREE_TYPE (*lhs_p), *rhs_p);\n+      else if (REFERENCE_CLASS_P (*rhs_p)\n+\t       && is_gimple_reg_type (TREE_TYPE (*lhs_p))\n+\t       && !is_gimple_reg (*lhs_p))\n+\t/* This can happen when an assignment in between two single field\n+\t   structures is turned into an assignment in between two pointers to\n+\t   scalars (PR 42237).  */\n+\tnew_rhs = *rhs_p;\n+\n+      if (new_rhs)\n \t{\n-\t  location_t loc = gimple_location (stmt);\n-\t  tree vce = fold_build1_loc (loc, VIEW_CONVERT_EXPR,\n-\t\t\t\t      TREE_TYPE (*lhs_p), *rhs_p);\n-\t  tree tmp = force_gimple_operand_gsi (gsi, vce, true, NULL_TREE,\n+\t  tree tmp = force_gimple_operand_gsi (gsi, new_rhs, true, NULL_TREE,\n \t\t\t\t\t       true, GSI_SAME_STMT);\n \n \t  gimple_assign_set_rhs_from_tree (gsi, tmp);"}]}