{"sha": "94279aacd061623a160b8dc1b9ea267ee435b0f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQyNzlhYWNkMDYxNjIzYTE2MGI4ZGMxYjllYTI2N2VlNDM1YjBmOA==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@orcam.me.uk", "date": "2021-04-08T15:55:49Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@orcam.me.uk", "date": "2021-04-08T15:55:49Z"}, "message": "VAX: Fix comment for `*bit<mode>' pattern's peephole\n\nThe comment for a peephole provided for the `*bit<mode>' pattern to be\nproduced in comparison elimination from a sequence involving a bitwise\ncomplement operation of one input operand followed by a bitwise AND\noperation between a bitwise complement of said intermediate result and\nthe other input operand (which corresponds to a sequence of MCOM and BIC\nmachine instructions) incorrectly refers to the first operation as MNEG\n(which is the machine instruction for arithmetic negation) rather than\nMCOM as it is supposed to.  Fix it.\n\n\tgcc/\n\t* config/vax/vax.md: Fix comment for `*bit<mode>' pattern's\n\tpeephole.", "tree": {"sha": "7818e16ea8a1e9cf4520afb3f514f3250f7089a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7818e16ea8a1e9cf4520afb3f514f3250f7089a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94279aacd061623a160b8dc1b9ea267ee435b0f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94279aacd061623a160b8dc1b9ea267ee435b0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94279aacd061623a160b8dc1b9ea267ee435b0f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94279aacd061623a160b8dc1b9ea267ee435b0f8/comments", "author": null, "committer": null, "parents": [{"sha": "559d2f1e0eafd96c19dc5324db1a466286c0e7fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/559d2f1e0eafd96c19dc5324db1a466286c0e7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/559d2f1e0eafd96c19dc5324db1a466286c0e7fc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5b1b392b867103d0617f269573da0ee48a57f729", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94279aacd061623a160b8dc1b9ea267ee435b0f8/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94279aacd061623a160b8dc1b9ea267ee435b0f8/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=94279aacd061623a160b8dc1b9ea267ee435b0f8", "patch": "@@ -1228,7 +1228,7 @@\n ;; the \"*bit<mode>\" pattern does for the purpose of the compare\n ;; elimination pass.  Try to get rid of the extra operation by hand\n ;; and where the sequence is used to set the condition codes only\n-;; convert MNEG/BIC => BIT.\n+;; convert MCOM/BIC => BIT.\n (define_peephole2\n   [(parallel\n      [(set (match_operand:VAXint 0 \"register_operand\")"}]}