{"sha": "14f583b8c3465efa654af1233e9c63365cd41cc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRmNTgzYjhjMzQ2NWVmYTY1NGFmMTIzM2U5YzYzMzY1Y2Q0MWNjOQ==", "commit": {"author": {"name": "Philip Blundell", "email": "pb@nexus.co.uk", "date": "2002-02-19T18:04:05Z"}, "committer": {"name": "Phil Blundell", "email": "pb@gcc.gnu.org", "date": "2002-02-19T18:04:05Z"}, "message": "arm.c (arm_encode_call_attribute): Operate on any decl, not just FUNCTION_DECL.\n\n2002-02-19  Philip Blundell  <pb@nexus.co.uk>\n\n\t* config/arm/arm.c (arm_encode_call_attribute): Operate on any\n\tdecl, not just FUNCTION_DECL.\n\t(legitimize_pic_address): Handle local SYMBOL_REF like LABEL_REF.\n\t(arm_assemble_integer): Likewise.\n\t* config/arm/arm.h (ARM_ENCODE_CALL_TYPE): Allow any decl to be\n\tmarked local.\n\nFrom-SVN: r49871", "tree": {"sha": "5584cd64a9c88885dad300c267774a043e3d066f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5584cd64a9c88885dad300c267774a043e3d066f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14f583b8c3465efa654af1233e9c63365cd41cc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f583b8c3465efa654af1233e9c63365cd41cc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f583b8c3465efa654af1233e9c63365cd41cc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f583b8c3465efa654af1233e9c63365cd41cc9/comments", "author": null, "committer": null, "parents": [{"sha": "4cb7482c3ae0a089a988a648c562e0c7f2ecbe98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb7482c3ae0a089a988a648c562e0c7f2ecbe98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cb7482c3ae0a089a988a648c562e0c7f2ecbe98"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "c5413d975cdbd72b745228c4a95420c4717c16e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f583b8c3465efa654af1233e9c63365cd41cc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f583b8c3465efa654af1233e9c63365cd41cc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14f583b8c3465efa654af1233e9c63365cd41cc9", "patch": "@@ -1,3 +1,12 @@\n+2002-02-19  Philip Blundell  <pb@nexus.co.uk>\n+\n+\t* config/arm/arm.c (arm_encode_call_attribute): Operate on any\n+\tdecl, not just FUNCTION_DECL.\n+\t(legitimize_pic_address): Handle local SYMBOL_REF like LABEL_REF.\n+\t(arm_assemble_integer): Likewise.\n+\t* config/arm/arm.h (ARM_ENCODE_CALL_TYPE): Allow any decl to be\n+\tmarked local.\n+\t\n 2002-02-19  matthew green  <mrg@eterna.com.au>\n \n \t* config.gcc (sparc-*-netbsdelf*): Enable target."}, {"sha": "4482c1b2331ca76d25d9f2358cf333ff56c73634", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f583b8c3465efa654af1233e9c63365cd41cc9/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f583b8c3465efa654af1233e9c63365cd41cc9/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=14f583b8c3465efa654af1233e9c63365cd41cc9", "patch": "@@ -2099,9 +2099,6 @@ arm_encode_call_attribute (decl, flag)\n   int          len = strlen (str);\n   char *       newstr;\n \n-  if (TREE_CODE (decl) != FUNCTION_DECL)\n-    return;\n-\n   /* Do not allow weak functions to be treated as short call.  */\n   if (DECL_WEAK (decl) && flag == SHORT_CALL_FLAG_CHAR)\n     return;\n@@ -2315,7 +2312,10 @@ legitimize_pic_address (orig, mode, reg)\n       else\n \temit_insn (gen_pic_load_addr_thumb (address, orig));\n \n-      if (GET_CODE (orig) == LABEL_REF && NEED_GOT_RELOC)\n+      if ((GET_CODE (orig) == LABEL_REF\n+\t   || (GET_CODE (orig) == SYMBOL_REF && \n+\t       ENCODED_SHORT_CALL_ATTR_P (XSTR (orig, 0))))\n+\t  && NEED_GOT_RELOC)\n \tpic_ref = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, address);\n       else\n \t{\n@@ -8599,7 +8599,9 @@ arm_assemble_integer (x, size, aligned_p)\n       if (NEED_GOT_RELOC && flag_pic && making_const_table &&\n \t  (GET_CODE (x) == SYMBOL_REF || GET_CODE (x) == LABEL_REF))\n \t{\n-\t  if (GET_CODE (x) == SYMBOL_REF && CONSTANT_POOL_ADDRESS_P (x))\n+\t  if (GET_CODE (x) == SYMBOL_REF \n+\t      && (CONSTANT_POOL_ADDRESS_P (x)\n+\t\t  || ENCODED_SHORT_CALL_ATTR_P (XSTR (x, 0))))\n \t    fputs (\"(GOTOFF)\", asm_out_file);\n \t  else if (GET_CODE (x) == LABEL_REF)\n \t    fputs (\"(GOTOFF)\", asm_out_file);"}, {"sha": "bd448dbe4e2be11a3fc2d36e0e1779f73e4f2657", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f583b8c3465efa654af1233e9c63365cd41cc9/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f583b8c3465efa654af1233e9c63365cd41cc9/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=14f583b8c3465efa654af1233e9c63365cd41cc9", "patch": "@@ -1891,9 +1891,9 @@ typedef struct\n    or known to be defined in this file then encode a short call flag.\n    This macro is used inside the ENCODE_SECTION macro.  */\n #define ARM_ENCODE_CALL_TYPE(decl)\t\t\t\t\t\\\n-  if (TREE_CODE (decl) == FUNCTION_DECL)\t\t\t\t\\\n+  if (TREE_CODE_CLASS (TREE_CODE (decl)) == 'd')\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      if (DECL_WEAK (decl))\t\t\t\t\t\t\\\n+      if (TREE_CODE (decl) == FUNCTION_DECL && DECL_WEAK (decl))\t\\\n         arm_encode_call_attribute (decl, LONG_CALL_FLAG_CHAR);\t\t\\\n       else if (! TREE_PUBLIC (decl))        \t\t\t\t\\\n         arm_encode_call_attribute (decl, SHORT_CALL_FLAG_CHAR);\t\t\\"}]}