{"sha": "53aabfbce906da1e583b951fd0b1ef0521e86d8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNhYWJmYmNlOTA2ZGExZTU4M2I5NTFmZDBiMWVmMDUyMWU4NmQ4Zg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-09-01T10:22:17Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-09-01T10:22:17Z"}, "message": "cppinit.c (cpp_start_read): Free the imacros list as we traverse it.\n\n\t* cppinit.c (cpp_start_read): Free the imacros list as we\n\ttraverse it.  Don't free the chains before returning.\n\t(_cpp_push_next_buffer): Only try pushing buffers if we've\n\tcompleted -imacros handling.\n\nFrom-SVN: r45349", "tree": {"sha": "c8e77bbd1648ca6f454e28a95c6b55ed3309b279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8e77bbd1648ca6f454e28a95c6b55ed3309b279"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53aabfbce906da1e583b951fd0b1ef0521e86d8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53aabfbce906da1e583b951fd0b1ef0521e86d8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53aabfbce906da1e583b951fd0b1ef0521e86d8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53aabfbce906da1e583b951fd0b1ef0521e86d8f/comments", "author": null, "committer": null, "parents": [{"sha": "058466a1a17e7d152d117faf9cec688167b76245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058466a1a17e7d152d117faf9cec688167b76245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/058466a1a17e7d152d117faf9cec688167b76245"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "824a3303c6abcc8942de1e580b474527e174d73f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53aabfbce906da1e583b951fd0b1ef0521e86d8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53aabfbce906da1e583b951fd0b1ef0521e86d8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53aabfbce906da1e583b951fd0b1ef0521e86d8f", "patch": "@@ -1,3 +1,10 @@\n+2001-09-01  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cppinit.c (cpp_start_read): Free the imacros list as we\n+\ttraverse it.  Don't free the chains before returning.\n+\t(_cpp_push_next_buffer): Only try pushing buffers if we've\n+\tcompleted -imacros handling.\n+\n 2001-08-31  Eric Christopher  <echristo@redhat.com>\n \n \t* gcc.c (handle_braces): Add explaination for abort."}, {"sha": "8b8f56979abf917837262f4a129f8c1687e222da", "filename": "gcc/cppinit.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53aabfbce906da1e583b951fd0b1ef0521e86d8f/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53aabfbce906da1e583b951fd0b1ef0521e86d8f/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=53aabfbce906da1e583b951fd0b1ef0521e86d8f", "patch": "@@ -958,18 +958,19 @@ cpp_start_read (pfile, fname)\n \n       /* Scan -imacros files after command line defines, but before\n \t files given with -include.  */\n-      for (p = CPP_OPTION (pfile, pending)->imacros_head; p; p = p->next)\n+      while ((p = CPP_OPTION (pfile, pending)->imacros_head) != NULL)\n \t{\n \t  if (push_include (pfile, p))\n \t    {\n \t      pfile->buffer->return_at_eof = true;\n \t      cpp_scan_nooutput (pfile);\n \t    }\n+\t  CPP_OPTION (pfile, pending)->imacros_head = p->next;\n+\t  free (p);\n \t}\n     }\n \n   free_chain (CPP_OPTION (pfile, pending)->directive_head);\n-  free_chain (CPP_OPTION (pfile, pending)->imacros_head);\n   _cpp_push_next_buffer (pfile);\n \n   return 1;\n@@ -984,7 +985,12 @@ _cpp_push_next_buffer (pfile)\n {\n   bool pushed = false;\n \n-  if (CPP_OPTION (pfile, pending))\n+  /* This is't pretty; we'd rather not be relying on this as a boolean\n+     for reverting the line map.  Further, we only free the chains in\n+     this conditional, so an early call to cpp_finish / cpp_destroy\n+     will leak that memory.  */\n+  if (CPP_OPTION (pfile, pending)\n+      && CPP_OPTION (pfile, pending)->imacros_head == NULL)\n     {\n       while (!pushed)\n \t{"}]}