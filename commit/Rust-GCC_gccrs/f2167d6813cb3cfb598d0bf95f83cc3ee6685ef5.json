{"sha": "f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxNjdkNjgxM2NiM2NmYjU5OGQwYmY5NWY4M2NjM2VlNjY4NWVmNQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-09-24T12:43:43Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-09-24T12:43:43Z"}, "message": "tree-ssa-forwprop.c: Include tree-ssa-propagate.h.\n\n2012-09-24  Marc Glisse  <marc.glisse@inria.fr>\n\ngcc/\n\t* tree-ssa-forwprop.c: Include tree-ssa-propagate.h.\n\t(simplify_bitfield_ref): Handle constructors.\n\t* Makefile.in (tree-ssa-forwprop.o): Depend on tree-ssa-propagate.h.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/forwprop-23.c: New testcase.\n\nFrom-SVN: r191665", "tree": {"sha": "1199cba964f76d18f232e5f2c45e54109fd0f5ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1199cba964f76d18f232e5f2c45e54109fd0f5ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e076271b0266a603d1503741d27e23223828b494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e076271b0266a603d1503741d27e23223828b494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e076271b0266a603d1503741d27e23223828b494"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "efa46766b4d326b369b180b26be4d2cb421694c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "patch": "@@ -1,3 +1,9 @@\n+2012-09-24  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* tree-ssa-forwprop.c: Include tree-ssa-propagate.h.\n+\t(simplify_bitfield_ref): Handle constructors.\n+\t* Makefile.in (tree-ssa-forwprop.o): Depend on tree-ssa-propagate.h.\n+\n 2012-09-24  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (bitmap_find_leader, create_expression_by_pieces,"}, {"sha": "7a4a6e8206c6da736a33f3d6fb82bc071a4eb4e1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "patch": "@@ -2246,7 +2246,7 @@ tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) $(CFGLOOP_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n    langhooks.h $(FLAGS_H) $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H) $(EXPR_H) \\\n-   $(OPTABS_H)\n+   $(OPTABS_H) tree-ssa-propagate.h\n tree-ssa-phiprop.o : tree-ssa-phiprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\"}, {"sha": "6d610e56909baf00aa96f5eeca3b75d0d0bed5c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "patch": "@@ -1,3 +1,7 @@\n+2012-09-24  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/tree-ssa/forwprop-23.c: New testcase.\n+\n 2012-09-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/52173"}, {"sha": "520499336338d38f023ce61cc0a6f31ed40f877a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-23.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-23.c?ref=f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-forwprop1\" } */\n+\n+typedef long vec __attribute__ ((vector_size (2 * sizeof (long))));\n+\n+long f (long d, long e)\n+{\n+  vec x = { d, e };\n+  vec m = { 1, 0 };\n+  return __builtin_shuffle (x, m) [1];\n+}\n+\n+\n+/* { dg-final { scan-tree-dump-not \"BIT_FIELD_REF\" \"forwprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "cd8f092915b9bf79af2c9d7e65f86a05b5c9a6c7", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"cfgloop.h\"\n #include \"optabs.h\"\n+#include \"tree-ssa-propagate.h\"\n \n /* This pass propagates the RHS of assignment statements into use\n    sites of the LHS of the assignment.  It's basically a specialized\n@@ -2582,25 +2583,35 @@ simplify_bitfield_ref (gimple_stmt_iterator *gsi)\n       || TREE_CODE (TREE_TYPE (op0)) != VECTOR_TYPE)\n     return false;\n \n+  def_stmt = get_prop_source_stmt (op0, false, NULL);\n+  if (!def_stmt || !can_propagate_from (def_stmt))\n+    return false;\n+\n+  op1 = TREE_OPERAND (op, 1);\n+  op2 = TREE_OPERAND (op, 2);\n+  code = gimple_assign_rhs_code (def_stmt);\n+\n+  if (code == CONSTRUCTOR)\n+    {\n+      tree tem = fold_ternary (BIT_FIELD_REF, TREE_TYPE (op),\n+\t\t\t       gimple_assign_rhs1 (def_stmt), op1, op2);\n+      if (!tem || !valid_gimple_rhs_p (tem))\n+\treturn false;\n+      gimple_assign_set_rhs_from_tree (gsi, tem);\n+      update_stmt (gsi_stmt (*gsi));\n+      return true;\n+    }\n+\n   elem_type = TREE_TYPE (TREE_TYPE (op0));\n   if (TREE_TYPE (op) != elem_type)\n     return false;\n \n   size = TREE_INT_CST_LOW (TYPE_SIZE (elem_type));\n-  op1 = TREE_OPERAND (op, 1);\n   n = TREE_INT_CST_LOW (op1) / size;\n   if (n != 1)\n     return false;\n-\n-  def_stmt = get_prop_source_stmt (op0, false, NULL);\n-  if (!def_stmt || !can_propagate_from (def_stmt))\n-    return false;\n-\n-  op2 = TREE_OPERAND (op, 2);\n   idx = TREE_INT_CST_LOW (op2) / size;\n \n-  code = gimple_assign_rhs_code (def_stmt);\n-\n   if (code == VEC_PERM_EXPR)\n     {\n       tree p, m, index, tem;"}]}