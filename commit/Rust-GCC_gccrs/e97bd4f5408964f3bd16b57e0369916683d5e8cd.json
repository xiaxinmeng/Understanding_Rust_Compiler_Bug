{"sha": "e97bd4f5408964f3bd16b57e0369916683d5e8cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3YmQ0ZjU0MDg5NjRmM2JkMTZiNTdlMDM2OTkxNjY4M2Q1ZThjZA==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2016-07-14T02:14:13Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2016-07-14T02:14:13Z"}, "message": "Add dg-final-scan-autofdo and dg-final-scan-not-autofdo\n\nAutofdo outputs to different dump files and doesn't support some\ntransformation that normal profiling. Add dg-final-scan-autofdo\nand dg-final-scan-not-autofdo statements to the test suite\nso that the test cases can hande those cases separately.\n\ngcc/testsuite/:\n\n2016-07-13  Andi Kleen  <ak@linux.intel.com>\n\n\t* lib/profopt.exp (dg-final-scan-autofdo,\n\tdg-final-scan-not-autofdo): New functions.\n\nFrom-SVN: r238322", "tree": {"sha": "641627df63d991ebe5124bea1f56d0947e7c59c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/641627df63d991ebe5124bea1f56d0947e7c59c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e97bd4f5408964f3bd16b57e0369916683d5e8cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97bd4f5408964f3bd16b57e0369916683d5e8cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97bd4f5408964f3bd16b57e0369916683d5e8cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97bd4f5408964f3bd16b57e0369916683d5e8cd/comments", "author": null, "committer": null, "parents": [{"sha": "038ec4b7b90f6278e686d61634cb046cd09d3b8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038ec4b7b90f6278e686d61634cb046cd09d3b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038ec4b7b90f6278e686d61634cb046cd09d3b8f"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "871475614c7aef9cdb21b2a64fca771bc8b8ff13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97bd4f5408964f3bd16b57e0369916683d5e8cd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97bd4f5408964f3bd16b57e0369916683d5e8cd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e97bd4f5408964f3bd16b57e0369916683d5e8cd", "patch": "@@ -1,3 +1,8 @@\n+2016-07-13  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* lib/profopt.exp (dg-final-scan-autofdo,\n+\tdg-final-scan-not-autofdo): New functions.\n+\n 2016-07-13  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/vect/vect-35-big-array.c: Refine comment and test."}, {"sha": "3cce2ee2ffb6adbb42fbde9eba1e720e568f6876", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97bd4f5408964f3bd16b57e0369916683d5e8cd/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97bd4f5408964f3bd16b57e0369916683d5e8cd/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=e97bd4f5408964f3bd16b57e0369916683d5e8cd", "patch": "@@ -170,6 +170,47 @@ proc dg-final-use { args } {\n     append use_final_code \"[lindex $args 1]\\n\"\n }\n \n+#\n+# dg-final-use-not-autofdo -- process code to run after the profile-use step\n+# but only if not running autofdo\n+# ARGS is the line number of the directive followed by the commands.\n+#\n+proc dg-final-use-not-autofdo { args } {\n+    global use_final_code\n+    global run_autofdo\n+\n+    if { [llength $args] > 2 } {\n+\terror \"[lindex $args 0]: too many arguments\"\n+\treturn\n+    }\n+\n+    if { $run_autofdo == 1 } {\n+        return\n+    }\n+    append use_final_code \"[lindex $args 1]\\n\"\n+}\n+\n+#\n+# dg-final-use-autofdo -- process code to run after the profile-use step\n+# but only if running autofdo\n+# ARGS is the line number of the directive followed by the commands.\n+#\n+\n+proc dg-final-use-autofdo { args } {\n+    global use_final_code\n+    global run_autofdo\n+\n+    if { [llength $args] > 2 } {\n+\terror \"[lindex $args 0]: too many arguments\"\n+\treturn\n+    }\n+\n+    if { $run_autofdo != 1 } {\n+        return\n+    }\n+    append use_final_code \"[lindex $args 1]\\n\"\n+}\n+\n #\n # profopt-final-code -- run final code\n #\n@@ -210,6 +251,8 @@ proc profopt-get-options { src } {\n \t     || ![string compare \"dg-skip-if\" $cmd] \\\n \t     || ![string compare \"dg-final-generate\" $cmd] \\\n \t     || ![string compare \"dg-final-use\" $cmd] \\\n+\t     || ![string compare \"dg-final-use-not-autofdo\" $cmd] \\\n+\t     || ![string compare \"dg-final-use-autofdo\" $cmd] \\\n              || ![string compare \"dg-additional-sources\" $cmd] \\\n \t     || [string match \"dg-require-*\" $cmd]  } {\n \t    set status [catch \"$op\" errmsg]"}]}