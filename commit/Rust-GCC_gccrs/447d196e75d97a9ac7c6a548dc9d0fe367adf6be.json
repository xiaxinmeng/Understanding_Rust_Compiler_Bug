{"sha": "447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ3ZDE5NmU3NWQ5N2E5YWM3YzZhNTQ4ZGM5ZDBmZTM2N2FkZjZiZQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-16T22:04:49Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-16T22:04:49Z"}, "message": "d: Fix multiple definition error when using mixins and interfaces.\n\ngcc/d/ChangeLog:\n\n\tPR d/92216\n\t* decl.cc (make_thunk): Don't set TREE_PUBLIC on thunks if the target\n\tfunction is external to the current compilation.\n\ngcc/testsuite/ChangeLog:\n\n\tPR d/92216\n\t* gdc.dg/imports/pr92216.d: New.\n\t* gdc.dg/pr92216.d: New test.", "tree": {"sha": "be27bd1aa37d7ee67d9668fc9f81e6f7553c7caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be27bd1aa37d7ee67d9668fc9f81e6f7553c7caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c015ff8ccaf3ee8e4f6393679ed790ed0df92873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c015ff8ccaf3ee8e4f6393679ed790ed0df92873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c015ff8ccaf3ee8e4f6393679ed790ed0df92873"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "d9c7657eaacab609924ebc829763796caf4c367d", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "patch": "@@ -1,3 +1,9 @@\n+2020-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/92216\n+\t* decl.cc (make_thunk): Don't set TREE_PUBLIC on thunks if the target\n+\tfunction is external to the current compilation.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "7afb1aa029239e2d7ebff4bb7b259d09339327bb", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "patch": "@@ -1803,8 +1803,11 @@ make_thunk (FuncDeclaration *decl, int offset)\n \n   DECL_CONTEXT (thunk) = d_decl_context (decl);\n \n-  /* Thunks inherit the public access of the function they are targetting.  */\n-  TREE_PUBLIC (thunk) = TREE_PUBLIC (function);\n+  /* Thunks inherit the public access of the function they are targetting.\n+     When the function is outside the current compilation unit however, then the\n+     thunk must be kept private to not conflict.  */\n+  TREE_PUBLIC (thunk) = TREE_PUBLIC (function) && !DECL_EXTERNAL (function);\n+\n   DECL_EXTERNAL (thunk) = 0;\n \n   /* Thunks are always addressable.  */"}, {"sha": "a382072677232f482a0c32f63a46025b52837249", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "patch": "@@ -1,3 +1,9 @@\n+2020-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/92216\n+\t* gdc.dg/imports/pr92216.d: New.\n+\t* gdc.dg/pr92216.d: New test.\n+\n 2020-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/94179"}, {"sha": "b8c71c03420c3b9b5dae12f44a33d908556ed45f", "filename": "gcc/testsuite/gdc.dg/imports/pr92216.d", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fpr92216.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fpr92216.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fpr92216.d?ref=447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "patch": "@@ -0,0 +1,22 @@\n+module imports.pr92216;\n+\n+class B : I\n+{\n+    protected override void getStruct(){}\n+    mixin A!();\n+\n+}\n+\n+mixin template A()\n+{\n+    public void* getS()\n+    {\n+        return null;\n+    }\n+}\n+\n+public interface I\n+{\n+    public void* getS();\n+    protected void getStruct();\n+}"}, {"sha": "330604c9c89785019a45a552529aeda881aa46e5", "filename": "gcc/testsuite/gdc.dg/pr92216.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Ftestsuite%2Fgdc.dg%2Fpr92216.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447d196e75d97a9ac7c6a548dc9d0fe367adf6be/gcc%2Ftestsuite%2Fgdc.dg%2Fpr92216.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr92216.d?ref=447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "patch": "@@ -0,0 +1,13 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=92216\n+// { dg-options \"-I $srcdir/gdc.dg\" }\n+// { dg-do compile }\n+// { dg-final { scan-assembler \"_DT16_D7imports7pr922161B8__mixin24getSMFZPv\\[: \\t\\n\\]\" } }\n+// { dg-final { scan-assembler-not \"(.globl|.global)\\[ \t\\]+_DT16_D7imports7pr922161B8__mixin24getSMFZPv\" } }\n+module pr92216;\n+\n+private import imports.pr92216;\n+\n+class C : B\n+{\n+    protected override void getStruct() {}\n+}"}]}