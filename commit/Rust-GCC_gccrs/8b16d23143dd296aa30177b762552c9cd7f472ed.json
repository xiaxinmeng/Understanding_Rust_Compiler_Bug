{"sha": "8b16d23143dd296aa30177b762552c9cd7f472ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIxNmQyMzE0M2RkMjk2YWEzMDE3N2I3NjI1NTJjOWNkN2Y0NzJlZA==", "commit": {"author": {"name": "Christopher D. Rickett", "email": "crickett@lanl.gov", "date": "2007-07-23T09:03:30Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-07-23T09:03:30Z"}, "message": "re PR fortran/32732 ([Bind C] Character scalars are passed as arrays)\n\n2007-07-23  Christopher D. Rickett  <crickett@lanl.gov>\n\n       PR fortran/32732\n       * trans-decl.c (generate_local_decl): Convert the TREE_TYPE for by\n       value character dummy args of BIND(C) procedures.\n       * trans-expr.c (gfc_conv_variable): Do not build address\n       expression for BT_CHARACTER dummy args.\n\n2007-07-23  Christopher D. Rickett  <crickett@lanl.gov>\n\n       PR fortran/32732\n       * gfortran.dg/c_char_tests.f03: New test case.\n       * gfortran.dg/c_char_driver.c: Driver for c_char_tests.f03.\n       * gfortran.dg/c_char_tests_2.f03: New test case.\n       * gfortran.dg/value_6.f03: Ditto.\n       * gfortran.dg/value_7.f03: Ditto.\n\nFrom-SVN: r126836", "tree": {"sha": "fc0679cdd58e4a8114cfe5a723e1638911994694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc0679cdd58e4a8114cfe5a723e1638911994694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b16d23143dd296aa30177b762552c9cd7f472ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b16d23143dd296aa30177b762552c9cd7f472ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b16d23143dd296aa30177b762552c9cd7f472ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b16d23143dd296aa30177b762552c9cd7f472ed/comments", "author": null, "committer": null, "parents": [{"sha": "089db47df6876c088444d51c3d2f0b33797e6579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089db47df6876c088444d51c3d2f0b33797e6579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/089db47df6876c088444d51c3d2f0b33797e6579"}], "stats": {"total": 158, "additions": 153, "deletions": 5}, "files": [{"sha": "93f52770df7231aa253f5951411299e7f9401bd8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -1,3 +1,11 @@\n+2007-07-23  Christopher D. Rickett  <crickett@lanl.gov>\n+\n+\tPR fortran/32732\n+\t* trans-decl.c (generate_local_decl): Convert the TREE_TYPE for by\n+\tvalue character dummy args of BIND(C) procedures.\n+\t* trans-expr.c (gfc_conv_variable): Do not build address\n+\texpression for BT_CHARACTER dummy args.\n+\n 2007-07-23  Christopher D. Rickett  <crickett@lanl.gov>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "0acd5f8c14fdb756b01b4d18de30f84b67975015", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -3018,6 +3018,19 @@ generate_local_decl (gfc_symbol * sym)\n \t\t     &sym->declared_at);\n     }\n \n+  if (sym->attr.dummy == 1)\n+    {\n+      /* Modify the tree type for scalar character dummy arguments of bind(c)\n+\t procedures if they are passed by value.  The tree type for them will\n+\t be promoted to INTEGER_TYPE for the middle end, which appears to be\n+\t what C would do with characters passed by-value.  The value attribute\n+         implies the dummy is a scalar.  */\n+      if (sym->attr.value == 1 && sym->backend_decl != NULL\n+\t  && sym->ts.type == BT_CHARACTER && sym->ts.is_c_interop\n+\t  && sym->ns->proc_name != NULL && sym->ns->proc_name->attr.is_bind_c)\n+\tTREE_TYPE (sym->backend_decl) = unsigned_char_type_node;\n+    }\n+\n   /* Make sure we convert the types of the derived types from iso_c_binding\n      into (void *).  */\n   if (sym->attr.flavor != FL_PROCEDURE && sym->attr.is_iso_c"}, {"sha": "898a62630bcae5d2ed0b7a5096539ae4ecd799e5", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -472,11 +472,6 @@ gfc_conv_variable (gfc_se * se, gfc_expr * expr)\n \t\t  || sym->attr.result))\n \t    se->expr = build_fold_indirect_ref (se->expr);\n \n-\t  /* A character with VALUE attribute needs an address\n-\t     expression.  */\n-\t  if (sym->attr.value)\n-\t    se->expr = build_fold_addr_expr (se->expr);\n-\n \t}\n       else if (!sym->attr.value)\n \t{"}, {"sha": "5f21f1bd03cd91789919f1476dedd50f51594e7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -1,3 +1,12 @@\n+2007-07-23  Christopher D. Rickett  <crickett@lanl.gov>\n+\n+\tPR fortran/32732\n+\t* gfortran.dg/c_char_tests.f03: New test case.\n+\t* gfortran.dg/c_char_driver.c: Driver for c_char_tests.f03.\n+\t* gfortran.dg/c_char_tests_2.f03: New test case.\n+\t* gfortran.dg/value_6.f03: Ditto.\n+\t* gfortran.dg/value_7.f03: Ditto.\n+\n 2007-07-23  Christopher D. Rickett  <crickett@lanl.gov>\n \n \tPR fortran/32600"}, {"sha": "ca41ab1ed73bb25dd1dcad960bc1bb512813a1f7", "filename": "gcc/testsuite/gfortran.dg/c_char_driver.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_driver.c?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -0,0 +1,14 @@\n+void param_test(char my_char, char my_char_2);\n+void sub0(void);\n+void sub1(char *my_char);\n+\n+int main(int argc, char **argv)\n+{\n+  char my_char = 'y';\n+  \n+  param_test('y', 'z');\n+  sub0();\n+  sub1(&my_char);\n+  \n+  return 0;\n+}"}, {"sha": "72b136e01d08e2e4a27104bc1b747d8f86b538a9", "filename": "gcc/testsuite/gfortran.dg/c_char_tests.f03", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_tests.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_tests.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_tests.f03?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do run }\n+! { dg-additional-sources c_char_driver.c }\n+! Verify that character dummy arguments for bind(c) procedures can work both \n+! by-value and by-reference when called by either C or Fortran.\n+! PR fortran/32732\n+module c_char_tests\n+  use, intrinsic :: iso_c_binding, only: c_char\n+  implicit none\n+contains\n+  subroutine param_test(my_char, my_char_2) bind(c)\n+    character(c_char), value :: my_char\n+    character(c_char), value :: my_char_2\n+    if(my_char /= c_char_'y') call abort()\n+    if(my_char_2 /= c_char_'z') call abort()\n+    \n+    call sub1(my_char)\n+  end subroutine param_test\n+\n+  subroutine sub0() bind(c)\n+    call param_test('y', 'z')\n+  end subroutine sub0\n+\n+  subroutine sub1(my_char_ref) bind(c)\n+    character(c_char) :: my_char_ref\n+    if(my_char_ref /= c_char_'y') call abort()\n+  end subroutine sub1\n+end module c_char_tests\n+\n+! { dg-final { cleanup-modules \"c_char_tests\" } }"}, {"sha": "4e5edb085d1e744009efa749c686e03341cbba49", "filename": "gcc/testsuite/gfortran.dg/c_char_tests_2.f03", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_tests_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_tests_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_char_tests_2.f03?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do run }\n+! Verify that the changes made to character dummy arguments for bind(c) \n+! procedures doesn't break non-bind(c) routines.\n+! PR fortran/32732\n+subroutine bar(a)\n+  use, intrinsic :: iso_c_binding, only: c_char\n+  character(c_char), value :: a\n+  if(a /= c_char_'a') call abort()\n+end subroutine bar\n+\n+subroutine bar2(a)\n+  use, intrinsic :: iso_c_binding, only: c_char\n+  character(c_char) :: a\n+  if(a /= c_char_'a') call abort()\n+end subroutine bar2\n+\n+use iso_c_binding\n+implicit none\n+interface\n+  subroutine bar(a)\n+    import\n+    character(c_char),value :: a\n+  end subroutine bar\n+  subroutine bar2(a)\n+    import\n+    character(c_char) :: a\n+  end subroutine bar2\n+end interface\n+ character(c_char) :: z\n+ z = 'a'\n+ call bar(z)\n+ call bar2(z)\n+end"}, {"sha": "0650d3295b4e05c4fc5a2e5b94b76defbfd8bc55", "filename": "gcc/testsuite/gfortran.dg/value_6.f03", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fvalue_6.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fvalue_6.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvalue_6.f03?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+! Verify by-value passing of character arguments w/in Fortran to a bind(c) \n+! procedure.  \n+! PR fortran/32732\n+module pr32732\n+  use, intrinsic :: iso_c_binding, only: c_char\n+  implicit none\n+contains\n+  subroutine test(a) bind(c)\n+    character(kind=c_char), value :: a\n+    call test2(a)\n+  end subroutine test\n+  subroutine test2(a) bind(c)\n+    character(kind=c_char), value :: a\n+    if(a /= c_char_'a') call abort ()\n+    print *, 'a=',a\n+  end subroutine test2\n+end module pr32732\n+\n+program main\n+  use pr32732\n+  implicit none\n+  call test('a')\n+end program main\n+! { dg-final { cleanup-modules \"pr32732\" } }"}, {"sha": "24395778ec71aeba75f255a5b271209f3e4841fd", "filename": "gcc/testsuite/gfortran.dg/value_7.f03", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fvalue_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b16d23143dd296aa30177b762552c9cd7f472ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fvalue_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvalue_7.f03?ref=8b16d23143dd296aa30177b762552c9cd7f472ed", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! Test passing character strings by-value.\n+! PR fortran/32732\n+program test\n+  implicit none\n+  character(len=13) :: chr\n+  chr =  'Fortran       '\n+  call sub1(chr)\n+  if(chr /= 'Fortran       ') call abort()\n+contains\n+  subroutine sub1(a)\n+    character(len=13), VALUE :: a\n+    a = trim(a)//\" rules\"\n+    call sub2(a)        \n+  end subroutine sub1\n+  subroutine sub2(a)\n+    character(len=13), VALUE :: a\n+    print *, a          \n+    if(a /= 'Fortran rules') call abort()\n+  end subroutine sub2\n+end program test\n+"}]}