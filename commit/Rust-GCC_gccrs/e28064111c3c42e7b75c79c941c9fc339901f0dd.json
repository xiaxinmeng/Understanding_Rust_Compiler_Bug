{"sha": "e28064111c3c42e7b75c79c941c9fc339901f0dd", "node_id": "C_kwDOANBUbNoAKGUyODA2NDExMWMzYzQyZTdiNzVjNzljOTQxYzlmYzMzOTkwMWYwZGQ", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-02-16T09:00:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-12T12:38:41Z"}, "message": "[Ada] Reuse collective subtype for comparison operators where possible\n\nReplace membership alternatives with N_Op_Compare. Code cleanup;\nsemantics is unaffected.\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Actuals): Simplify with N_Op_Compare.\n\t* sem_util.adb (Replace_Null_Operand,\n\tNull_To_Null_Address_Convert_OK): Likewise.", "tree": {"sha": "59148f94c64666c6b4fad097312570faf09c367e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59148f94c64666c6b4fad097312570faf09c367e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e28064111c3c42e7b75c79c941c9fc339901f0dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28064111c3c42e7b75c79c941c9fc339901f0dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28064111c3c42e7b75c79c941c9fc339901f0dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28064111c3c42e7b75c79c941c9fc339901f0dd/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c1ec8ae18b57131f62c31e0144dd0d8aa3a92eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1ec8ae18b57131f62c31e0144dd0d8aa3a92eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1ec8ae18b57131f62c31e0144dd0d8aa3a92eb"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "f038a33eb5553011e8bae2d01ee93133a3c7b582", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e28064111c3c42e7b75c79c941c9fc339901f0dd/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e28064111c3c42e7b75c79c941c9fc339901f0dd/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=e28064111c3c42e7b75c79c941c9fc339901f0dd", "patch": "@@ -4163,12 +4163,7 @@ package body Sem_Res is\n             --  marked with Any_Type. Since the operation has been resolved to\n             --  the user-defined operator, that is irrelevant, so reset Etype.\n \n-            if Nkind (Original_Node (N)) in N_Op_Eq\n-                                          | N_Op_Ge\n-                                          | N_Op_Gt\n-                                          | N_Op_Le\n-                                          | N_Op_Lt\n-                                          | N_Op_Ne\n+            if Nkind (Original_Node (N)) in N_Op_Compare\n               and then not Is_Boolean_Type (Etype (N))\n             then\n                Set_Etype (A, Etype (F));"}, {"sha": "2f1a5e05b950a46937f8a27d48e41aa29db42760", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e28064111c3c42e7b75c79c941c9fc339901f0dd/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e28064111c3c42e7b75c79c941c9fc339901f0dd/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e28064111c3c42e7b75c79c941c9fc339901f0dd", "patch": "@@ -14189,9 +14189,7 @@ package body Sem_Util is\n \n    begin\n       pragma Assert (Relaxed_RM_Semantics);\n-      pragma Assert\n-        (Nkind (N) in\n-           N_Null | N_Op_Eq | N_Op_Ge | N_Op_Gt | N_Op_Le | N_Op_Lt | N_Op_Ne);\n+      pragma Assert (Nkind (N) in N_Null | N_Op_Compare);\n \n       if Nkind (N) = N_Null then\n          Rewrite (N, New_Occurrence_Of (RTE (RE_Null_Address), Sloc (N)));\n@@ -26079,9 +26077,7 @@ package body Sem_Util is\n       if Nkind (N) = N_Null then\n          return Present (Typ) and then Is_Descendant_Of_Address (Typ);\n \n-      elsif Nkind (N) in\n-              N_Op_Eq | N_Op_Ge | N_Op_Gt | N_Op_Le | N_Op_Lt | N_Op_Ne\n-      then\n+      elsif Nkind (N) in N_Op_Compare then\n          declare\n             L : constant Node_Id := Left_Opnd (N);\n             R : constant Node_Id := Right_Opnd (N);"}]}