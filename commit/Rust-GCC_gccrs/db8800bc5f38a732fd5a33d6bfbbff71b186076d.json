{"sha": "db8800bc5f38a732fd5a33d6bfbbff71b186076d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI4ODAwYmM1ZjM4YTczMmZkNWEzM2Q2YmZiYmZmNzFiMTg2MDc2ZA==", "commit": {"author": {"name": "Meador Inge", "email": "meadori@codesourcery.com", "date": "2013-09-03T17:04:39Z"}, "committer": {"name": "Meador Inge", "email": "meadori@gcc.gnu.org", "date": "2013-09-03T17:04:39Z"}, "message": "revert: tree-vrp.c (check_array_ref): Bail out on zero-length arrays.\n\ngcc/\n\n2013-09-03  Meador Inge  <meadori@codesourcery.com>\n\n\tRevert:\n\n\t2013-08-30  Meador Inge  <meadori@codesourcery.com>\n\n\t* tree-vrp.c (check_array_ref): Bail out on zero-length arrays.\n\ngcc/testsuite/\n\n2013-09-03  Meador Inge  <meadori@codesourcery.com>\n\n\tRevert:\n\n\t2013-08-30  Meador Inge  <meadori@codesourcery.com>\n\n\t* gcc.dg/Warray-bounds-11.c: New testcase.\n\nFrom-SVN: r202228", "tree": {"sha": "8d99f577f74c2919f770025fedc5c5db62626d3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d99f577f74c2919f770025fedc5c5db62626d3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db8800bc5f38a732fd5a33d6bfbbff71b186076d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8800bc5f38a732fd5a33d6bfbbff71b186076d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db8800bc5f38a732fd5a33d6bfbbff71b186076d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8800bc5f38a732fd5a33d6bfbbff71b186076d/comments", "author": {"login": "meadori", "id": 296965, "node_id": "MDQ6VXNlcjI5Njk2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/296965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meadori", "html_url": "https://github.com/meadori", "followers_url": "https://api.github.com/users/meadori/followers", "following_url": "https://api.github.com/users/meadori/following{/other_user}", "gists_url": "https://api.github.com/users/meadori/gists{/gist_id}", "starred_url": "https://api.github.com/users/meadori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meadori/subscriptions", "organizations_url": "https://api.github.com/users/meadori/orgs", "repos_url": "https://api.github.com/users/meadori/repos", "events_url": "https://api.github.com/users/meadori/events{/privacy}", "received_events_url": "https://api.github.com/users/meadori/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7fd3fde96379ee946284609d3f6c14fce236f52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7fd3fde96379ee946284609d3f6c14fce236f52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7fd3fde96379ee946284609d3f6c14fce236f52"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "e146e2a86be6078015fce4e06a1e1bf280039c4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8800bc5f38a732fd5a33d6bfbbff71b186076d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8800bc5f38a732fd5a33d6bfbbff71b186076d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db8800bc5f38a732fd5a33d6bfbbff71b186076d", "patch": "@@ -1,3 +1,11 @@\n+2013-09-03  Meador Inge  <meadori@codesourcery.com>\n+\n+\tRevert:\n+\n+\t2013-08-30  Meador Inge  <meadori@codesourcery.com>\n+\n+\t* tree-vrp.c (check_array_ref): Bail out on zero-length arrays.\n+\n 2013-09-03  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/rs6000.h (ASM_OUTPUT_DEF_FROM_DECLS): Emit lglobl for"}, {"sha": "8712a19a36da4cfbc6099df36354d3567591ff22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8800bc5f38a732fd5a33d6bfbbff71b186076d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8800bc5f38a732fd5a33d6bfbbff71b186076d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=db8800bc5f38a732fd5a33d6bfbbff71b186076d", "patch": "@@ -1,3 +1,11 @@\n+2013-09-03  Meador Inge  <meadori@codesourcery.com>\n+\n+\tRevert:\n+\n+\t2013-08-30  Meador Inge  <meadori@codesourcery.com>\n+\n+\t* gcc.dg/Warray-bounds-11.c: New testcase.\n+\n 2013-09-03  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* lib/target-supports.exp (check_weak_available): Return true for AIX."}, {"sha": "130175d745f56fbb15db10d0c4763b870f76ef7a", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-11.c", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fd3fde96379ee946284609d3f6c14fce236f52/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fd3fde96379ee946284609d3f6c14fce236f52/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c?ref=d7fd3fde96379ee946284609d3f6c14fce236f52", "patch": "@@ -1,12 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -Warray-bounds -std=gnu99\" } */\n-/* Test zero-length arrays for GNU C.  */\n-\n-unsigned int a[] = { };\n-unsigned int size_a;\n-\n-int test(void)\n-{\n-  /* This should not warn.  */\n-  return size_a ? a[0] : 0;\n-}"}, {"sha": "d5548ff55eb3d8d554f02553fd2bcdf2dd7c7787", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8800bc5f38a732fd5a33d6bfbbff71b186076d/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8800bc5f38a732fd5a33d6bfbbff71b186076d/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=db8800bc5f38a732fd5a33d6bfbbff71b186076d", "patch": "@@ -6137,10 +6137,9 @@ check_array_ref (location_t location, tree ref, bool ignore_off_by_one)\n   low_sub = up_sub = TREE_OPERAND (ref, 1);\n   up_bound = array_ref_up_bound (ref);\n \n-  /* Can not check flexible arrays or zero-length arrays.  */\n+  /* Can not check flexible arrays.  */\n   if (!up_bound\n-      || TREE_CODE (up_bound) != INTEGER_CST\n-      || tree_int_cst_equal (up_bound, integer_minus_one_node))\n+      || TREE_CODE (up_bound) != INTEGER_CST)\n     return;\n \n   /* Accesses to trailing arrays via pointers may access storage"}]}