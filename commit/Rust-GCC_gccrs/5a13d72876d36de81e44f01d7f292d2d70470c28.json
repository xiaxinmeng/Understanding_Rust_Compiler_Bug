{"sha": "5a13d72876d36de81e44f01d7f292d2d70470c28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWExM2Q3Mjg3NmQzNmRlODFlNDRmMDFkN2YyOTJkMmQ3MDQ3MGMyOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-10-20T06:15:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-10-20T06:15:23Z"}, "message": "builtins-18.c: Wrap C99 tests with HAVE_C99_RUNTIME.\n\n\t* gcc.dg/builtins-18.c: Wrap C99 tests with HAVE_C99_RUNTIME.\n\tDefine HAVE_C99_RUNTIME except on Solaris.\n\t* gcc.dg/builtins-20.c: Likewise.\n\nFrom-SVN: r72693", "tree": {"sha": "b4283a43278984f5c60a44f2816bacd122737a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4283a43278984f5c60a44f2816bacd122737a7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a13d72876d36de81e44f01d7f292d2d70470c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a13d72876d36de81e44f01d7f292d2d70470c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a13d72876d36de81e44f01d7f292d2d70470c28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a13d72876d36de81e44f01d7f292d2d70470c28/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0df6970d652ffaf3333edbffd342feec09b0150d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df6970d652ffaf3333edbffd342feec09b0150d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df6970d652ffaf3333edbffd342feec09b0150d"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "7b8e888768e963c032c32d5a5528defa407ae5ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a13d72876d36de81e44f01d7f292d2d70470c28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a13d72876d36de81e44f01d7f292d2d70470c28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a13d72876d36de81e44f01d7f292d2d70470c28", "patch": "@@ -1,3 +1,9 @@\n+2003-10-20  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/builtins-18.c: Wrap C99 tests with HAVE_C99_RUNTIME.\n+\tDefine HAVE_C99_RUNTIME except on Solaris.\n+\t* gcc.dg/builtins-20.c: Likewise.\n+\n 2003-10-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* gcc.dg/old-style-asm-1.c: Use scan-assembler-times."}, {"sha": "07b94185d614b91969a24117f43f121747885e6d", "filename": "gcc/testsuite/gcc.dg/builtins-18.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a13d72876d36de81e44f01d7f292d2d70470c28/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a13d72876d36de81e44f01d7f292d2d70470c28/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-18.c?ref=5a13d72876d36de81e44f01d7f292d2d70470c28", "patch": "@@ -8,6 +8,12 @@\n /* { dg-do link } */\n /* { dg-options \"-O2 -ffast-math\" } */\n \n+\n+/* Solaris doesn't have the entire C99 runtime.  */\n+#if !defined(sun)\n+#define HAVE_C99_RUNTIME\n+#endif\n+\n extern void link_error(void);\n \n extern float cabsf (float _Complex);\n@@ -43,6 +49,7 @@ main (void)\n   if (__builtin_cabs (3.0 + 4.0i) != 5.0)\n     link_failure ();\n \n+#ifdef HAVE_C99_RUNTIME\n   /* Test long doubles.  */\n   if (cabsl (ldc) != 5.0L)\n     link_error ();\n@@ -52,6 +59,7 @@ main (void)\n     link_failure ();\n   if (__builtin_cabsl (3.0L + 4.0iL) != 5.0L)\n     link_failure ();\n+#endif\n \n   return 0;\n }"}, {"sha": "b633c55f8a37fd0607c9cfcc2e7af4cebe3f7579", "filename": "gcc/testsuite/gcc.dg/builtins-20.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a13d72876d36de81e44f01d7f292d2d70470c28/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a13d72876d36de81e44f01d7f292d2d70470c28/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c?ref=5a13d72876d36de81e44f01d7f292d2d70470c28", "patch": "@@ -8,6 +8,12 @@\n /* { dg-do link } */\n /* { dg-options \"-O2 -ffast-math\" } */\n \n+\n+/* Solaris doesn't have the entire C99 runtime.  */\n+#if !defined(sun)\n+#define HAVE_C99_RUNTIME\n+#endif\n+\n extern void link_error(void);\n \n void test1(double x)\n@@ -42,6 +48,7 @@ void test1f(float x)\n   if (cosf(x) != cosf(-x))\n     link_error ();\n \n+#ifdef HAVE_C99_RUNTIME\n   if (sinf(x)/cosf(x) != tanf(x))\n     link_error ();\n \n@@ -53,6 +60,7 @@ void test1f(float x)\n \n   if (cosf(x)*tanf(x) != sinf(x))\n     link_error ();\n+#endif\n }\n \n void test2f(float x, float y)\n@@ -70,6 +78,7 @@ void test1l(long double x)\n   if (cosl(x) != cosl(-x))\n     link_error ();\n \n+#ifdef HAVE_C99_RUNTIME\n   if (sinl(x)/cosl(x) != tanl(x))\n     link_error ();\n \n@@ -81,6 +90,7 @@ void test1l(long double x)\n \n   if (cosl(x)*tanl(x) != sinl(x))\n     link_error ();\n+#endif\n }\n \n void test2l(long double x, long double y)"}]}