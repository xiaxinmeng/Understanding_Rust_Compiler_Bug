{"sha": "b03b462f1ffdef448aa666d8079cd047bcddee77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzYjQ2MmYxZmZkZWY0NDhhYTY2NmQ4MDc5Y2QwNDdiY2RkZWU3Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-07-08T20:29:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-07-08T20:29:26Z"}, "message": "c-omp.c (c_omp_declare_simd_clauses_to_numbers): If all clauses are to be removed, return NULL rather than original clauses list.\n\n\t* c-omp.c (c_omp_declare_simd_clauses_to_numbers): If all clauses\n\tare to be removed, return NULL rather than original clauses list.\n\n\t* decl.c (grokfndecl): Handle flag_openmp_simd like flag_openmp.\n\t* pt.c (apply_late_template_attributes): Likewise.\n\n\t* g++.dg/vect/vect.exp: Run also simd* tests.\n\t* gcc.dg/vect/tree-vect.h (abort, exit): For C++ use extern \"C\".\n\t(check_vect): Fix up get_cpuid call for C++.\n\t* g++.dg/vect/simd-clone-1.cc: New test.\n\nFrom-SVN: r225583", "tree": {"sha": "c4559f09b52e8af65fdf825d118170fc012ae9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4559f09b52e8af65fdf825d118170fc012ae9c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b03b462f1ffdef448aa666d8079cd047bcddee77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03b462f1ffdef448aa666d8079cd047bcddee77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03b462f1ffdef448aa666d8079cd047bcddee77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03b462f1ffdef448aa666d8079cd047bcddee77/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b841a1252c610d817f1ea0fba140834e5443e7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b841a1252c610d817f1ea0fba140834e5443e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b841a1252c610d817f1ea0fba140834e5443e7f"}], "stats": {"total": 88, "additions": 84, "deletions": 4}, "files": [{"sha": "63d592ddc5649283414131cc1d865985c3192214", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -1,3 +1,8 @@\n+2015-07-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-omp.c (c_omp_declare_simd_clauses_to_numbers): If all clauses\n+\tare to be removed, return NULL rather than original clauses list.\n+\n 2015-07-07  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* array-notation-common.c: Adjust includes."}, {"sha": "cdd2ee83d76a67019749250b38ebb1830707d5d9", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -1040,6 +1040,8 @@ c_omp_declare_simd_clauses_to_numbers (tree parms, tree clauses)\n       for (i = 0; i < len; i++)\n \tOMP_CLAUSE_CHAIN (clvec[i]) = (i < len - 1) ? clvec[i + 1] : NULL_TREE;\n     }\n+  else\n+    clauses = NULL_TREE;\n   clvec.release ();\n   return clauses;\n }"}, {"sha": "74b746a53982576e5d1ecef6ab9f5ccfc0de7c03", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -1,3 +1,8 @@\n+2015-07-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* decl.c (grokfndecl): Handle flag_openmp_simd like flag_openmp.\n+\t* pt.c (apply_late_template_attributes): Likewise.\n+\n 2015-07-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/66748"}, {"sha": "db8b1aa17cab622d1a85ae59b845df01e57ad227", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -7910,7 +7910,7 @@ grokfndecl (tree ctype,\n   if (TYPE_NOTHROW_P (type) || nothrow_libfn_p (decl))\n     TREE_NOTHROW (decl) = 1;\n \n-  if (flag_openmp || flag_cilkplus)\n+  if (flag_openmp || flag_openmp_simd || flag_cilkplus)\n     {\n       /* Adjust \"omp declare simd\" attributes.  */\n       tree ods = lookup_attribute (\"omp declare simd\", *attrlist);"}, {"sha": "d3e9d3175b5ef8ff3c35e4fceef0d32168494478", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -9071,7 +9071,7 @@ apply_late_template_attributes (tree *decl_p, tree attributes, int attr_flags,\n \t    {\n \t      *p = TREE_CHAIN (t);\n \t      TREE_CHAIN (t) = NULL_TREE;\n-\t      if ((flag_openmp || flag_cilkplus)\n+\t      if ((flag_openmp || flag_openmp_simd || flag_cilkplus)\n \t\t  && is_attribute_p (\"omp declare simd\",\n \t\t\t\t     get_attribute_name (t))\n \t\t  && TREE_VALUE (t))"}, {"sha": "d883a7c8406e4ec1243f78819ee83b036da97817", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -1,3 +1,10 @@\n+2015-07-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/vect/vect.exp: Run also simd* tests.\n+\t* gcc.dg/vect/tree-vect.h (abort, exit): For C++ use extern \"C\".\n+\t(check_vect): Fix up get_cpuid call for C++.\n+\t* g++.dg/vect/simd-clone-1.cc: New test.\n+\n 2015-07-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/pr37870.c (dg-options): Add -mlong-double-80."}, {"sha": "f0be59aa60084477b81b93defaed3ddb5c27f832", "filename": "gcc/testsuite/g++.dg/vect/simd-clone-1.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-clone-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-clone-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fsimd-clone-1.cc?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -0,0 +1,55 @@\n+// { dg-require-effective-target vect_simd_clones }\n+// { dg-additional-options \"-fopenmp-simd -fno-inline\" }\n+// { dg-additional-options \"-mavx\" { target avx_runtime } }\n+\n+#include \"../../gcc.dg/vect/tree-vect.h\"\n+\n+struct S\n+{\n+  int s;\n+  #pragma omp declare simd notinbranch linear(x)\n+  int f (int x);\n+};\n+\n+#pragma omp declare simd notinbranch linear(x)\n+int\n+S::f (int x)\n+{\n+  return x;\n+}\n+\n+template <int N>\n+struct T\n+{\n+  int t;\n+  #pragma omp declare simd notinbranch linear(x)\n+  int f (int x);\n+};\n+\n+#pragma omp declare simd notinbranch linear(x)\n+template <int N>\n+int\n+T<N>::f (int x)\n+{\n+  return x;\n+}\n+\n+void\n+do_main ()\n+{\n+  int i, r = 0;\n+  S s;\n+  T<0> t;\n+  #pragma omp simd reduction(+:r)\n+  for (i = 0; i < 64; i++)\n+    r += s.f (i) + t.f (i);\n+  if (r != 64 * 63)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  check_vect ();\n+  do_main ();\n+}"}, {"sha": "0492cc392bdc19082a1bb1aa91eba39b052dfa69", "filename": "gcc/testsuite/g++.dg/vect/vect.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -58,7 +58,7 @@ lappend VECT_SLP_CFLAGS \"-fdump-tree-slp-details\"\n dg-init\n \n # Main loop.\n-g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/pr*.{c,cc,S} ]] \\\n+g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/{pr,simd}*.{c,cc,S} ]] \\\n         \"\" $DEFAULT_VECTCFLAGS\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/slp-pr*.{c,cc,S} ]] \\\n         \"\" $VECT_SLP_CFLAGS"}, {"sha": "0853e3f76be96090211749b1df3e897e4db5874d", "filename": "gcc/testsuite/gcc.dg/vect/tree-vect.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03b462f1ffdef448aa666d8079cd047bcddee77/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h?ref=b03b462f1ffdef448aa666d8079cd047bcddee77", "patch": "@@ -5,8 +5,14 @@\n # include \"cpuid.h\"\n #endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n extern void abort (void);\n extern void exit (int);\n+#ifdef __cplusplus\n+}\n+#endif\n \n static void\n sig_ill_handler (int sig)\n@@ -26,7 +32,7 @@ check_vect (void)\n   asm volatile (\".long 0x10000484\");\n #elif defined(__i386__) || defined(__x86_64__)\n   {\n-    int a, b, c, d, want_level, want_c, want_d;\n+    unsigned int a, b, c, d, want_level, want_c, want_d;\n \n     /* Determine what instruction set we've been compiled for, and detect\n        that we're running with it.  This allows us to at least do a compile"}]}