{"sha": "ba08ba8412fb405d32184021400e1eda7b38b9a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEwOGJhODQxMmZiNDA1ZDMyMTg0MDIxNDAwZTFlZGE3YjM4YjlhNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:19:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:19:04Z"}, "message": "[multiple changes]\n\n2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch5.adb (Expand_Loop_Entry_Attributes): When\n\tdealing with a for loop that iterates over a subtype indication\n\twith a range, use the low and high bounds of the subtype.\n\n2013-02-06  Nicolas Roche  <roche@adacore.com>\n\n\t* s-os_lib.adb (Normalize_Arguments): Arguments containing tabs should\n\tbe quoted\n\n2013-02-06  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Process_Project_And_Apply_Config): New variable\n\tConf_Project.  New recursive procedure Check_Project to find a non\n\taggregate project and put its Project_Id in Conf_Project. Fails if\n\tno such project can be found.\n\t(Get_Or_Create_Configuration_File): New parameter Conf_Project.\n\t (Do_Autoconf): Use project directory of project Conf_Project to store\n\tthe generated configuration project file.\n\t* prj-conf.ads (Get_Or_Create_Configuration_File): New parameter\n\tConf_Project.\n\n2013-02-06  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_res.adb (Resolve_Actuals): Generate a read\n\treference for out-mode parameters in the cases specified by\n\tRM 6.4.1(12).\n\n2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_attr.adb (Resolve_Attribute): Do not resolve the prefix of\n\tLoop_Entry, instead wait until the attribute has been expanded. The\n\tdelay ensures that any generated checks or temporaries are inserted\n\tbefore the relocated prefix.\n\n2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Code clean up.\n\nFrom-SVN: r195792", "tree": {"sha": "01734c0c31a488eec661db595718216b48859072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01734c0c31a488eec661db595718216b48859072"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba08ba8412fb405d32184021400e1eda7b38b9a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba08ba8412fb405d32184021400e1eda7b38b9a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba08ba8412fb405d32184021400e1eda7b38b9a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba08ba8412fb405d32184021400e1eda7b38b9a5/comments", "author": null, "committer": null, "parents": [{"sha": "d2a6bd6bb570c3ece919323e9a01fe3c2beec08d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a6bd6bb570c3ece919323e9a01fe3c2beec08d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2a6bd6bb570c3ece919323e9a01fe3c2beec08d"}], "stats": {"total": 192, "additions": 168, "deletions": 24}, "files": [{"sha": "31af157165db84a94556ffed46fd04398c664dc7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -1,3 +1,43 @@\n+2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Loop_Entry_Attributes): When\n+\tdealing with a for loop that iterates over a subtype indication\n+\twith a range, use the low and high bounds of the subtype.\n+\n+2013-02-06  Nicolas Roche  <roche@adacore.com>\n+\n+\t* s-os_lib.adb (Normalize_Arguments): Arguments containing tabs should\n+\tbe quoted\n+\n+2013-02-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Process_Project_And_Apply_Config): New variable\n+\tConf_Project.  New recursive procedure Check_Project to find a non\n+\taggregate project and put its Project_Id in Conf_Project. Fails if\n+\tno such project can be found.\n+\t(Get_Or_Create_Configuration_File): New parameter Conf_Project.\n+\t (Do_Autoconf): Use project directory of project Conf_Project to store\n+\tthe generated configuration project file.\n+\t* prj-conf.ads (Get_Or_Create_Configuration_File): New parameter\n+\tConf_Project.\n+\n+2013-02-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Actuals): Generate a read\n+\treference for out-mode parameters in the cases specified by\n+\tRM 6.4.1(12).\n+\n+2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_attr.adb (Resolve_Attribute): Do not resolve the prefix of\n+\tLoop_Entry, instead wait until the attribute has been expanded. The\n+\tdelay ensures that any generated checks or temporaries are inserted\n+\tbefore the relocated prefix.\n+\n+2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Code clean up.\n+\n 2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* checks.adb (Apply_Discriminant_Check): Look for discriminant"}, {"sha": "66a795964f676d3f6fb21445d6b3db0c49c66038", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -1754,13 +1754,18 @@ package body Exp_Ch5 is\n          declare\n             Loop_Spec : constant Node_Id :=\n                           Loop_Parameter_Specification (Scheme);\n-            Subt_Def  : constant Node_Id :=\n-                          Discrete_Subtype_Definition (Loop_Spec);\n             Cond      : Node_Id;\n+            Subt_Def  : Node_Id;\n \n          begin\n-            --  At this point in the expansion all discrete subtype definitions\n-            --  should be transformed into ranges.\n+            Subt_Def := Discrete_Subtype_Definition (Loop_Spec);\n+\n+            --  When the loop iterates over a subtype indication with a range,\n+            --  use the low and high bounds of the subtype itself.\n+\n+            if Nkind (Subt_Def) = N_Subtype_Indication then\n+               Subt_Def := Scalar_Range (Etype (Subt_Def));\n+            end if;\n \n             pragma Assert (Nkind (Subt_Def) = N_Range);\n "}, {"sha": "c5f0381f57bafc0834930a90504cdab539317732", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 55, "deletions": 4, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -599,6 +599,7 @@ package body Prj.Conf is\n \n    procedure Get_Or_Create_Configuration_File\n      (Project                    : Project_Id;\n+      Conf_Project               : Project_Id;\n       Project_Tree               : Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n       Env                        : in out Prj.Tree.Environment;\n@@ -860,7 +861,7 @@ package body Prj.Conf is\n          Obj_Dir : constant Variable_Value :=\n                      Value_Of\n                        (Name_Object_Dir,\n-                        Project.Decl.Attributes,\n+                        Conf_Project.Decl.Attributes,\n                         Shared);\n \n          Gprconfig_Path  : String_Access;\n@@ -874,10 +875,10 @@ package body Prj.Conf is\n               (\"could not locate gprconfig for auto-configuration\");\n          end if;\n \n-         --  First, find the object directory of the user's project\n+         --  First, find the object directory of the Conf_Project\n \n          if Obj_Dir = Nil_Variable_Value or else Obj_Dir.Default then\n-            Get_Name_String (Project.Directory.Display_Name);\n+            Get_Name_String (Conf_Project.Directory.Display_Name);\n \n          else\n             if Is_Absolute_Path (Get_Name_String (Obj_Dir.Value)) then\n@@ -886,7 +887,7 @@ package body Prj.Conf is\n             else\n                Name_Len := 0;\n                Add_Str_To_Name_Buffer\n-                 (Get_Name_String (Project.Directory.Display_Name));\n+                 (Get_Name_String (Conf_Project.Directory.Display_Name));\n                Add_Str_To_Name_Buffer (Get_Name_String (Obj_Dir.Value));\n             end if;\n          end if;\n@@ -1627,6 +1628,42 @@ package body Prj.Conf is\n       Main_Config_Project : Project_Id;\n       Success             : Boolean;\n \n+      Conf_Project : Project_Id := No_Project;\n+      --  The object directory of this project will be used to store the config\n+      --  project file in auto-configuration. Set by procedure Check_Project\n+      --  below.\n+\n+      procedure Check_Project (Project : Project_Id);\n+      --  Look for a non aggregate project. If one is found, put its project Id\n+      --  in Conf_Project.\n+\n+      -------------------\n+      -- Check_Project --\n+      -------------------\n+\n+      procedure Check_Project (Project : Project_Id) is\n+      begin\n+         if Project.Qualifier = Aggregate\n+           or else Project.Qualifier = Aggregate_Library\n+         then\n+            declare\n+               List : Aggregated_Project_List :=\n+                 Project.Aggregated_Projects;\n+\n+            begin\n+               --  Look for a non aggregate project until one is found\n+\n+               while Conf_Project = No_Project and then List /= null loop\n+                  Check_Project (List.Project);\n+                  List := List.Next;\n+               end loop;\n+            end;\n+\n+         else\n+            Conf_Project := Project;\n+         end if;\n+      end Check_Project;\n+\n    begin\n       Main_Project := No_Project;\n       Automatically_Generated := False;\n@@ -1682,11 +1719,25 @@ package body Prj.Conf is\n          Read_Source_Info_File (Project_Tree);\n       end if;\n \n+      --  Get the first project that is not an aggregate project or an\n+      --  aggregate library project. The object directory of this project will\n+      --  be used to store the config project file in auto-configuration.\n+\n+      Check_Project (Main_Project);\n+\n+      --  Fail if there is only aggregate projects and aggregate library\n+      --  projects in the project tree.\n+\n+      if Conf_Project = No_Project then\n+         Raise_Invalid_Config (\"there are no non-aggregate projects\");\n+      end if;\n+\n       --  Find configuration file\n \n       Get_Or_Create_Configuration_File\n         (Config                     => Main_Config_Project,\n          Project                    => Main_Project,\n+         Conf_Project               => Conf_Project,\n          Project_Tree               => Project_Tree,\n          Project_Node_Tree          => Project_Node_Tree,\n          Env                        => Env,"}, {"sha": "7154e55d23ae6040e38f4c2fc327075c2a5ed8b6", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006-2012, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2013, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,6 +119,7 @@ package Prj.Conf is\n \n    procedure Get_Or_Create_Configuration_File\n      (Project                    : Prj.Project_Id;\n+      Conf_Project               : Project_Id;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n       Env                        : in out Prj.Tree.Environment;\n@@ -134,7 +135,9 @@ package Prj.Conf is\n       On_Load_Config             : Config_File_Hook := null);\n    --  Compute the name of the configuration file that should be used. If no\n    --  default configuration file is found, a new one will be automatically\n-   --  generated if Allow_Automatic_Generation is true.\n+   --  generated if Allow_Automatic_Generation is true. This configuration\n+   --  project file will be generated in the object directory of project\n+   --  Conf_Project.\n    --\n    --  Any error in generating or parsing the config file is reported via the\n    --  Invalid_Config exception, with an appropriate message.\n@@ -160,7 +163,7 @@ package Prj.Conf is\n    --\n    --  If a project file could be found, it is automatically parsed and\n    --  processed (and Packages_To_Check is used to indicate which packages\n-   --  should be processed)\n+   --  should be processed).\n \n    procedure Add_Default_GNAT_Naming_Scheme\n      (Config_File  : in out Prj.Tree.Project_Node_Id;"}, {"sha": "f893c8acf55b5bf15456a1af0bddb7adcd4df9ba", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -1688,7 +1688,7 @@ package body System.OS_Lib is\n                   Res (J) := '\"';\n                   Quote_Needed := True;\n \n-               elsif Arg (K) = ' ' then\n+               elsif Arg (K) = ' ' or else Arg (K) = ASCII.HT then\n                   Res (J) := Arg (K);\n                   Quote_Needed := True;\n "}, {"sha": "c2a298bbdf860c1f6d0bc220389e693df552b9bb", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -9821,6 +9821,18 @@ package body Sem_Attr is\n          when Attribute_Enabled =>\n             null;\n \n+         ----------------\n+         -- Loop_Entry --\n+         ----------------\n+\n+         --  Do not resolve the prefix of Loop_Entry, instead wait until the\n+         --  attribute has been expanded (see Expand_Loop_Entry_Attributes).\n+         --  The delay ensures that any generated checks or temporaries are\n+         --  inserted before the relocated prefix.\n+\n+         when Attribute_Loop_Entry =>\n+            null;\n+\n          --------------------\n          -- Mechanism_Code --\n          --------------------"}, {"sha": "39ac6a9019296ada4c2d024cb1bd6af0129f5b3d", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -10452,7 +10452,8 @@ package body Sem_Ch12 is\n          T : constant Entity_Id := Get_Instance_Of (Gen_T);\n \n       begin\n-         return (Base_Type (T) = Base_Type (Act_T)\n+         return ((Base_Type (T) = Act_T\n+                   or else Base_Type (T) = Base_Type (Act_T))\n                   and then Subtypes_Statically_Match (T, Act_T))\n \n            or else (Is_Class_Wide_Type (Gen_T)\n@@ -10701,21 +10702,14 @@ package body Sem_Ch12 is\n          --  the test to handle this special case only after a direct check\n          --  for static matching has failed. The case where both the component\n          --  type and the array type are separate formals, and the component\n-         --  type is a private view may also require special checking.\n+         --  type is a private view may also require special checking in\n+         --  Subtypes_Match.\n \n          if Subtypes_Match\n            (Component_Type (A_Gen_T), Component_Type (Act_T))\n              or else Subtypes_Match\n                (Find_Actual_Type (Component_Type (A_Gen_T), A_Gen_T),\n                Component_Type (Act_T))\n-             or else\n-               (Is_Private_Type (Component_Type (A_Gen_T))\n-                 and then not Has_Discriminants (Component_Type (A_Gen_T))\n-                 and then\n-                  Subtypes_Match\n-                    (Base_Type\n-                      (Find_Actual_Type (Component_Type (A_Gen_T), A_Gen_T)),\n-                    Component_Type (Act_T)))\n          then\n             null;\n          else"}, {"sha": "9dd291881922e29b4904756f06526c0469410bc6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba08ba8412fb405d32184021400e1eda7b38b9a5/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ba08ba8412fb405d32184021400e1eda7b38b9a5", "patch": "@@ -3409,7 +3409,46 @@ package body Sem_Res is\n                   Generate_Reference (Orig_A, A, 'm');\n \n                elsif not Is_Overloaded (A) then\n-                  Generate_Reference (Orig_A, A);\n+                  if Ekind (F) /= E_Out_Parameter then\n+                     Generate_Reference (Orig_A, A);\n+\n+                  --  RM 6.4.1(12): For an out parameter that is passed by\n+                  --  copy, the formal parameter object is created, and:\n+\n+                  --  * For an access type, the formal parameter is initialized\n+                  --    from the value of the actual, without checking that the\n+                  --    value satisfies any constraint, any predicate, or any\n+                  --    exclusion of the null value.\n+\n+                  --  * For a scalar type that has the Default_Value aspect\n+                  --    specified, the formal parameter is initialized from the\n+                  --    value of the actual, without checking that the value\n+                  --    satisfies any constraint or any predicate;\n+\n+                  --  * For a composite type with discriminants or that has\n+                  --    implicit initial values for any subcomponents, the\n+                  --    behavior is as for an in out parameter passed by copy.\n+\n+                  --  Hence for these cases we generate the read reference now\n+                  --  (the write reference will be generated later by\n+                  --   Note_Possible_Modification).\n+\n+                  elsif Is_By_Copy_Type (Etype (F))\n+                    and then\n+                      (Is_Access_Type (Etype (F))\n+                         or else\n+                           (Is_Scalar_Type (Etype (F))\n+                              and then\n+                                Present (Default_Aspect_Value (Etype (F))))\n+                         or else\n+                           (Is_Composite_Type (Etype (F))\n+                              and then\n+                                (Has_Discriminants (Etype (F))\n+                                   or else\n+                                 Is_Partially_Initialized_Type (Etype (F)))))\n+                  then\n+                     Generate_Reference (Orig_A, A);\n+                  end if;\n                end if;\n             end if;\n          end if;"}]}