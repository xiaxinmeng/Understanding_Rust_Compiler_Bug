{"sha": "a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdiMTU5YTRkY2NhN2U0NWZkZjJiNTdhODY1ZGQyYTkxMTQ4ZWVmYg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-10-17T20:59:40Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-10-17T20:59:40Z"}, "message": "re PR rtl-optimization/54900 (write introduction incorrect wrt the C11 memory model (2))\n\n\tPR rtl-optimization/54900\n\t* ifcvt.c (noce_can_store_speculate_p): Call\n\tmemory_must_be_modified_in_insn_p.\n\t* alias.c (memory_must_be_modified_in_insn_p): New.\n\t(set_dest_equal_p): New.\n\t* rtl.h (memory_must_be_modified_in_p): Protoize.\n\nFrom-SVN: r192548", "tree": {"sha": "6246e46226dfe3ca8100baf6e693f108a7fa2483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6246e46226dfe3ca8100baf6e693f108a7fa2483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d9675496a28ef6184f2a9c3ac5e6e3ea63606c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9675496a28ef6184f2a9c3ac5e6e3ea63606c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d9675496a28ef6184f2a9c3ac5e6e3ea63606c1"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "9c6a1d96edc0de1fd290b950e5be9443e2ff7552", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "patch": "@@ -1,3 +1,12 @@\n+2012-10-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR rtl-optimization/54900\n+\t* ifcvt.c (noce_can_store_speculate_p): Call\n+\tmemory_must_be_modified_in_insn_p.\n+\t* alias.c (memory_must_be_modified_in_insn_p): New.\n+\t(set_dest_equal_p): New.\n+\t* rtl.h (memory_must_be_modified_in_p): Protoize.\n+\n 2012-10-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.opt (rs6000_isa_flags): New flag word to"}, {"sha": "c5e64176313ae990a60855d4c01cc8af17efa2f6", "filename": "gcc/alias.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "patch": "@@ -2762,6 +2762,39 @@ memory_modified_in_insn_p (const_rtx mem, const_rtx insn)\n   return memory_modified;\n }\n \n+/* Return TRUE if the destination of a set is rtx identical to\n+   ITEM.  */\n+static inline bool\n+set_dest_equal_p (const_rtx set, const_rtx item)\n+{\n+  rtx dest = SET_DEST (set);\n+  return rtx_equal_p (dest, item);\n+}\n+\n+/* Like memory_modified_in_insn_p, but return TRUE if INSN will\n+   *DEFINITELY* modify the memory contents of MEM.  */\n+bool\n+memory_must_be_modified_in_insn_p (const_rtx mem, const_rtx insn)\n+{\n+  if (!INSN_P (insn))\n+    return false;\n+  insn = PATTERN (insn);\n+  if (GET_CODE (insn) == SET)\n+    return set_dest_equal_p (insn, mem);\n+  else if (GET_CODE (insn) == PARALLEL)\n+    {\n+      int i;\n+      for (i = 0; i < XVECLEN (insn, 0); i++)\n+\t{\n+\t  rtx sub = XVECEXP (insn, 0, i);\n+\t  if (GET_CODE (sub) == SET\n+\t      &&  set_dest_equal_p (sub, mem))\n+\t    return true;\n+\t}\n+    }\n+  return false;\n+}\n+\n /* Initialize the aliasing machinery.  Initialize the REG_KNOWN_VALUE\n    array.  */\n "}, {"sha": "5654c667547dca4ef0aebc11227e6316eeeaa782", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "patch": "@@ -2415,7 +2415,7 @@ noce_can_store_speculate_p (basic_block top_bb, const_rtx mem)\n \t\t  || (CALL_P (insn) && (!RTL_CONST_CALL_P (insn)))))\n \t    return false;\n \n-\t  if (memory_modified_in_insn_p (mem, insn))\n+\t  if (memory_must_be_modified_in_insn_p (mem, insn))\n \t    return true;\n \t  if (modified_in_p (XEXP (mem, 0), insn))\n \t    return false;"}, {"sha": "09f1e773899ed52d545abc9812412147be3c2cb2", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b159a4dcca7e45fdf2b57a865dd2a91148eefb/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a7b159a4dcca7e45fdf2b57a865dd2a91148eefb", "patch": "@@ -2616,6 +2616,7 @@ extern void init_alias_analysis (void);\n extern void end_alias_analysis (void);\n extern void vt_equate_reg_base_value (const_rtx, const_rtx);\n extern bool memory_modified_in_insn_p (const_rtx, const_rtx);\n+extern bool memory_must_be_modified_in_insn_p (const_rtx, const_rtx);\n extern bool may_be_sp_based_p (rtx);\n extern rtx gen_hard_reg_clobber (enum machine_mode, unsigned int);\n extern rtx get_reg_known_value (unsigned int);"}]}