{"sha": "6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440", "node_id": "C_kwDOANBUbNoAKDZmOGY5ZDFiY2Y1NTE4N2NiODFlZjdiMGVmMWUyM2RiMWJjMGQ0NDA", "commit": {"author": {"name": "Claire Dross", "email": "dross@adacore.com", "date": "2022-04-08T14:38:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-18T08:41:08Z"}, "message": "[Ada] Fix proof of runtime unit s-valeu\n\nUpdate to provers caused some proof regressions.  Fix the proof by\nchanging ghost code.\n\ngcc/ada/\n\n\t* libgnat/s-valueu.adb (Scan_Raw_Unsigned): Add assertions.", "tree": {"sha": "75d9b79de26a1a27e49d3742285dd37d480c14d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75d9b79de26a1a27e49d3742285dd37d480c14d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440/comments", "author": {"login": "clairedross", "id": 8180017, "node_id": "MDQ6VXNlcjgxODAwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8180017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clairedross", "html_url": "https://github.com/clairedross", "followers_url": "https://api.github.com/users/clairedross/followers", "following_url": "https://api.github.com/users/clairedross/following{/other_user}", "gists_url": "https://api.github.com/users/clairedross/gists{/gist_id}", "starred_url": "https://api.github.com/users/clairedross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clairedross/subscriptions", "organizations_url": "https://api.github.com/users/clairedross/orgs", "repos_url": "https://api.github.com/users/clairedross/repos", "events_url": "https://api.github.com/users/clairedross/events{/privacy}", "received_events_url": "https://api.github.com/users/clairedross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df4451ca663e251e5524ebedb34bbe0cbfc45e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df4451ca663e251e5524ebedb34bbe0cbfc45e52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df4451ca663e251e5524ebedb34bbe0cbfc45e52"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "f5a6881dbc5624057daf172c5479ac6082dee70c", "filename": "gcc/ada/libgnat/s-valueu.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440/gcc%2Fada%2Flibgnat%2Fs-valueu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440/gcc%2Fada%2Flibgnat%2Fs-valueu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valueu.adb?ref=6f8f9d1bcf55187cb81ef7b0ef1e23db1bc0d440", "patch": "@@ -522,6 +522,9 @@ package body System.Value_U is\n                   Uval := Base;\n                   Base := 10;\n                   pragma Assert (Ptr.all = Last_Num_Init + 1);\n+                  pragma Assert\n+                    (if Starts_As_Based then P = Last_Num_Based + 1);\n+                  pragma Assert (not Is_Based);\n                   pragma Assert (if not Overflow then Uval = Init_Val.Value);\n                   exit;\n                end if;\n@@ -569,17 +572,17 @@ package body System.Value_U is\n                   end if;\n                end if;\n \n-               Lemma_Scan_Digit\n-                 (Str, P, Last_Num_Based, Digit, Base, Old_Uval, Uval,\n-                  Based_Val, Old_Overflow, Overflow);\n-\n                --  If at end of string with no base char, not a based number\n                --  but we signal Constraint_Error and set the pointer past\n                --  the end of the field, since this is what the ACVC tests\n                --  seem to require, see CE3704N, line 204.\n \n                P := P + 1;\n \n+               Lemma_Scan_Digit\n+                 (Str, P - 1, Last_Num_Based, Digit, Base, Old_Uval, Uval,\n+                  Based_Val, Old_Overflow, Overflow);\n+\n                if P > Max then\n                   Ptr.all := P;\n                   Bad_Value (Str);\n@@ -590,6 +593,7 @@ package body System.Value_U is\n                if Str (P) = Base_Char then\n                   Ptr.all := P + 1;\n                   pragma Assert (Ptr.all = Last_Num_Based + 2);\n+                  pragma Assert (Is_Based);\n                   pragma Assert\n                     (if not Overflow then\n                        Based_Val = Scan_Based_Number_Ghost"}]}