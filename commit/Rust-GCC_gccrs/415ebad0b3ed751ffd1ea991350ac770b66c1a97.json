{"sha": "415ebad0b3ed751ffd1ea991350ac770b66c1a97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE1ZWJhZDBiM2VkNzUxZmZkMWVhOTkxMzUwYWM3NzBiNjZjMWE5Nw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-24T08:06:30Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-24T08:06:30Z"}, "message": "AVX-512. Add cvtps2 insn patterns.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_insn\n\t\"<sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode><mask_name>\"):\n\tAdd masking.\n\t(define_insn \"fix_truncv8sfv8si2<mask_name>\"): Ditto.\n\t(define_insn \"fix_truncv4sfv4si2<mask_name>\"): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215545", "tree": {"sha": "9d31d9026bfa43bf8cf49df80b0346f9e324af36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d31d9026bfa43bf8cf49df80b0346f9e324af36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/415ebad0b3ed751ffd1ea991350ac770b66c1a97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415ebad0b3ed751ffd1ea991350ac770b66c1a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415ebad0b3ed751ffd1ea991350ac770b66c1a97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415ebad0b3ed751ffd1ea991350ac770b66c1a97/comments", "author": null, "committer": null, "parents": [{"sha": "41755b527cd7d08b033991cbbae2365185139e68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41755b527cd7d08b033991cbbae2365185139e68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41755b527cd7d08b033991cbbae2365185139e68"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "c227481021c2e54bf92975d3816b4414b53d36fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/415ebad0b3ed751ffd1ea991350ac770b66c1a97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/415ebad0b3ed751ffd1ea991350ac770b66c1a97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=415ebad0b3ed751ffd1ea991350ac770b66c1a97", "patch": "@@ -1,3 +1,19 @@\n+2014-09-24  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_insn\n+\t\"<sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode><mask_name>\"):\n+\tAdd masking.\n+\t(define_insn \"fix_truncv8sfv8si2<mask_name>\"): Ditto.\n+\t(define_insn \"fix_truncv4sfv4si2<mask_name>\"): Ditto.\n+\n 2014-09-24  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "287fd115e11096b0b8644458f712230511234d33", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/415ebad0b3ed751ffd1ea991350ac770b66c1a97/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/415ebad0b3ed751ffd1ea991350ac770b66c1a97/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=415ebad0b3ed751ffd1ea991350ac770b66c1a97", "patch": "@@ -3937,13 +3937,13 @@\n (define_mode_attr sf2simodelower\n   [(V16SI \"v16sf\") (V8SI \"v8sf\") (V4SI \"v4sf\")])\n \n-(define_insn \"<sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode>\"\n+(define_insn \"<sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode><mask_name>\"\n   [(set (match_operand:VI4_AVX 0 \"register_operand\" \"=v\")\n \t(unspec:VI4_AVX\n \t  [(match_operand:<ssePSmode> 1 \"nonimmediate_operand\" \"vm\")]\n \t  UNSPEC_FIX_NOTRUNC))]\n-  \"TARGET_SSE2\"\n-  \"%vcvtps2dq\\t{%1, %0|%0, %1}\"\n+  \"TARGET_SSE2 && <mask_mode512bit_condition>\"\n+  \"%vcvtps2dq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set (attr \"prefix_data16\")\n      (if_then_else\n@@ -4031,20 +4031,20 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"fix_truncv8sfv8si2\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n-\t(fix:V8SI (match_operand:V8SF 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_AVX\"\n-  \"vcvttps2dq\\t{%1, %0|%0, %1}\"\n+(define_insn \"fix_truncv8sfv8si2<mask_name>\"\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"=v\")\n+\t(fix:V8SI (match_operand:V8SF 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX && <mask_avx512vl_condition>\"\n+  \"vcvttps2dq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"<mask_prefix>\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"fix_truncv4sfv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(fix:V4SI (match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2\"\n-  \"%vcvttps2dq\\t{%1, %0|%0, %1}\"\n+(define_insn \"fix_truncv4sfv4si2<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(fix:V4SI (match_operand:V4SF 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n+  \"%vcvttps2dq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set (attr \"prefix_rep\")\n      (if_then_else\n@@ -4057,7 +4057,7 @@\n      (const_string \"*\")\n      (const_string \"0\")))\n    (set_attr \"prefix_data16\" \"0\")\n-   (set_attr \"prefix\" \"maybe_vex\")\n+   (set_attr \"prefix\" \"<mask_prefix2>\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_expand \"fixuns_trunc<mode><sseintvecmodelower>2\""}]}