{"sha": "537bf9ac0210e40fe8a67d3f4c08f451616d050b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3YmY5YWMwMjEwZTQwZmU4YTY3ZDNmNGMwOGY0NTE2MTZkMDUwYg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2017-08-06T19:04:57Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2017-08-06T19:04:57Z"}, "message": "target_attr_10.c: Add -mcpu=generic.\n\n2017-08-06  Andrew Pinski  <apinski@cavium.com>\n\n        * gcc.target/aarch64/target_attr_10.c: Add -mcpu=generic.\n        * gcc.target/aarch64/target_attr_13.c: LIkewise.\n        * gcc.target/aarch64/target_attr_15.c: LIkewise.\n        * gcc.target/aarch64/target_attr_4.c: Likewise.\n        * gcc.target/aarch64/target_attr_1.c: Add -march=armv8-a.\n        * gcc.target/aarch64/target_attr_2.c: Likewise.\n        * gcc.target/aarch64/target_attr_7.c: Likewise.\n        * gcc.target/aarch64/target_attr_crypto_ice_1.c: Likewise.\n        * gcc.target/aarch64/target_attr_crypto_ice_2.c: Likewise.\n        * gcc.target/aarch64/target_attr_3.c: Add -mcpu=generic -march=armv8-a.\n\nFrom-SVN: r250904", "tree": {"sha": "2070bb73ad46b170bf86d445d3f8a0c7a7e3e201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2070bb73ad46b170bf86d445d3f8a0c7a7e3e201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/537bf9ac0210e40fe8a67d3f4c08f451616d050b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537bf9ac0210e40fe8a67d3f4c08f451616d050b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537bf9ac0210e40fe8a67d3f4c08f451616d050b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537bf9ac0210e40fe8a67d3f4c08f451616d050b/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "905964740f674a784224620d1339676448aaada6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905964740f674a784224620d1339676448aaada6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/905964740f674a784224620d1339676448aaada6"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "7d5352b3e29a89bd764997fdd50a874fa82d8112", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,3 +1,16 @@\n+2017-08-06  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gcc.target/aarch64/target_attr_10.c: Add -mcpu=generic.\n+\t* gcc.target/aarch64/target_attr_13.c: LIkewise.\n+\t* gcc.target/aarch64/target_attr_15.c: LIkewise.\n+\t* gcc.target/aarch64/target_attr_4.c: Likewise.\n+\t* gcc.target/aarch64/target_attr_1.c: Add -march=armv8-a.\n+\t* gcc.target/aarch64/target_attr_2.c: Likewise.\n+\t* gcc.target/aarch64/target_attr_7.c: Likewise.\n+\t* gcc.target/aarch64/target_attr_crypto_ice_1.c: Likewise.\n+\t* gcc.target/aarch64/target_attr_crypto_ice_2.c: Likewise.\n+\t* gcc.target/aarch64/target_attr_3.c: Add -mcpu=generic -march=armv8-a.\n+\n 2017-08-06  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.target/aarch64/atomic_cmp_exchange_zero_reg_1.c: Pass"}, {"sha": "4a3a1ee233a0e276d114b380651c290afcd52c44", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_1.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcpu=thunderx -dA\" } */\n+/* { dg-options \"-O2 -mcpu=thunderx -march=armv8-a -dA\" } */\n \n /* Test that cpu attribute overrides the command-line -mcpu.  */\n "}, {"sha": "1849904711258fe182cfd30d616c25f650df43ed", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_10.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=armv8-a+simd\" } */\n+/* { dg-options \"-O2 -march=armv8-a+simd -mcpu=generic\" } */\n \n /* Using a SIMD intrinsic from a function tagged with nosimd should fail\n    due to inlining rules.  */"}, {"sha": "d5bee3a7b900bf9348c9cbfd67f487c381b13bf6", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_13.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-O2 -march=armv8-a+crc+crypto\" } */\n+/* { dg-options \"-O2 -march=armv8-a+crc+crypto -mcpu=generic\" } */\n \n #include \"arm_acle.h\"\n "}, {"sha": "108b372e4cc38b6e04e0fda149dd02b91d354246", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_15.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-march=armv8-a+crypto -save-temps\" } */\n+/* { dg-options \"-march=armv8-a+crypto -mcpu=generic -save-temps\" } */\n \n /* Check that \"+nothing\" clears the ISA flags.  */\n "}, {"sha": "f84342d889f60a0d0ed09dda6ee7fc147f83e8a3", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_2.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-O2 -mcpu=cortex-a57 -ftree-vectorize -fdump-tree-vect-all\" } */\n+/* { dg-options \"-O2 -mcpu=cortex-a57 -march=armv8-a -ftree-vectorize -fdump-tree-vect-all\" } */\n \n /* The various ways to turn off simd availability should\n    turn off vectorization.  */"}, {"sha": "eacec5a655298dab09901b6c235dd978bc66cdf5", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_3.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-fix-cortex-a53-835769 -save-temps\" } */\n+/* { dg-options \"-O2 -mno-fix-cortex-a53-835769 -march=armv8-a -mcpu=generic -save-temps\" } */\n \n /* Check that the attribute overrides the command line option\n    and the fix is applied once.  */"}, {"sha": "e0114084800cbb6b5abcdcd34f194fd0993ea02d", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_4.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble } */\n-/* { dg-options \"-O2 -march=armv8-a+nocrc -save-temps\" } */\n+/* { dg-options \"-O2 -march=armv8-a+nocrc -mcpu=generic -save-temps\" } */\n \n #include \"arm_acle.h\"\n "}, {"sha": "6067ffed30ec2b2a0ab28be994f42d30c9829ad8", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_7.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcpu=thunderx -dA\" } */\n+/* { dg-options \"-O2 -mcpu=thunderx -march=armv8-a -dA\" } */\n \n /* Make sure that #pragma overrides command line option and\n    target attribute overrides the pragma.  */"}, {"sha": "c74cc900f98d50bc8815784a3c9642dc2685d3a8", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_crypto_ice_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_crypto_ice_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_crypto_ice_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_crypto_ice_1.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcpu=thunderx+nofp\" } */\n+/* { dg-options \"-O2 -mcpu=thunderx+nofp -march=armv8-a\" } */\n \n #include \"arm_neon.h\"\n "}, {"sha": "d0a62b83351b671d157ec0de083d681394056d79", "filename": "gcc/testsuite/gcc.target/aarch64/target_attr_crypto_ice_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_crypto_ice_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bf9ac0210e40fe8a67d3f4c08f451616d050b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_crypto_ice_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftarget_attr_crypto_ice_2.c?ref=537bf9ac0210e40fe8a67d3f4c08f451616d050b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcpu=thunderx+nofp\" } */\n+/* { dg-options \"-O2 -mcpu=thunderx+nofp -march=armv8-a\" } */\n \n /* Make sure that we don't ICE when dealing with vector parameters\n    in a simd-tagged function within a non-simd translation unit.  */"}]}