{"sha": "785aa2a70653f35bd38f0880615e7b1d11c2e436", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg1YWEyYTcwNjUzZjM1YmQzOGYwODgwNjE1ZTdiMWQxMWMyZTQzNg==", "commit": {"author": {"name": "Razya Ladelsky", "email": "razya@gcc.gnu.org", "date": "2009-09-03T08:59:25Z"}, "committer": {"name": "Razya Ladelsky", "email": "razya@gcc.gnu.org", "date": "2009-09-03T08:59:25Z"}, "message": "re PR tree-optimization/38275 (bootstrap failure when -ftree-parallelize-loops=4 is enabled)\n\nPR tree-optimization/38275\n\t* tree-parloops.c (parallelize_loops): Replace profitability condition \n        for expected number of iterations.\n        * testsuite/gcc.dg/autopar/reduc-1char.c: Increase number  \n        of iterations. Adjust the logic accordingly.\n        * testsuite/gcc.dg/autopar/reduc-2char.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-1.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-2.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-3.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-6.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-7.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-8.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-9.c: Ditto.\n        * testsuite/gcc.dg/autopar/pr39500-1.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-1short.c: Ditto.\n        * testsuite/gcc.dg/autopar/reduc-2short.c: Ditto.\n        * testsuite/gcc.dg/autopar/parallelization-1.c: Ditto.\n\nFrom-SVN: r151372", "tree": {"sha": "2b9e7a61b5a66c1df82fcc599b1f43406ad9814d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b9e7a61b5a66c1df82fcc599b1f43406ad9814d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/785aa2a70653f35bd38f0880615e7b1d11c2e436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785aa2a70653f35bd38f0880615e7b1d11c2e436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/785aa2a70653f35bd38f0880615e7b1d11c2e436", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785aa2a70653f35bd38f0880615e7b1d11c2e436/comments", "author": null, "committer": null, "parents": [{"sha": "ee5111a4417b8e62a1d6b8d83ca729338ea1c7c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee5111a4417b8e62a1d6b8d83ca729338ea1c7c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee5111a4417b8e62a1d6b8d83ca729338ea1c7c2"}], "stats": {"total": 353, "additions": 258, "deletions": 95}, "files": [{"sha": "67a7bdd381d81068a15cc80855fb8d28192965dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -1,3 +1,30 @@\n+2009-09-03  Razya Ladelsky  <razya@il.ibm.com>\n+\n+\tPR tree-optimization/38275\n+\t\n+\t* tree-parloops.c (parallelize_loops): Replace profitability condition \n+\tfor expected number of iterations.\n+\n+2009-09-03  Alon Dayan  <alond@il.ibm.com>\n+\t\n+\tPR tree-optimization/38275\n+\t\n+\t* testsuite/gcc.dg/autopar/reduc-1char.c: Increase number \n+\tof iterations. Adjust the logic accordingly.\n+\t* testsuite/gcc.dg/autopar/reduc-2char.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-1.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-2.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-3.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-6.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-7.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-8.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-9.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/pr39500-1.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-1short.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-2short.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/parallelization-1.c: Ditto.\n+\n+\n 2009-09-03  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* doc/invoke.texi (BUILD_CONFIG): Document --with-build-config."}, {"sha": "f53be8598db12113f01a0433a4d1a9109ae55c2e", "filename": "gcc/testsuite/gcc.dg/autopar/parallelization-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fparallelization-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fparallelization-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fparallelization-1.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -6,7 +6,7 @@ void abort (void);\n void parloop (int N)\n {\n   int i;\n-  int x[10000000];\n+  int x[10000990];\n \n   for (i = 0; i < N; i++)\n     x[i] = i + 3;\n@@ -20,7 +20,7 @@ void parloop (int N)\n \n int main(void)\n {\n-  parloop(10000000);\n+  parloop(10000);\n \n   return 0;\n }"}, {"sha": "6428bd062fec9fbf98e35457b62807c9ca893b30", "filename": "gcc/testsuite/gcc.dg/autopar/pr39500-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr39500-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr39500-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr39500-1.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -8,14 +8,14 @@ void abort (void);\n int main (void)\n {\n   int i;\n-  int x[1000];\n+  int x[100000];\n \n-  for (i = 0; i < 100; i++)\n-    x[i] = x[i+100];\n+  for (i = 0; i < 10000; i++)\n+    x[i] = x[i+10000];\n \n-  for (i = 0; i < 100; i++)\n+  for (i = 0; i < 10000; i++)\n     {\n-      if (x[i] != x[i+100])\n+      if (x[i] != x[i+10000])\n        abort ();\n     }\n "}, {"sha": "8018a558c43b69ac76f19c703768cbf2195a8679", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-1.c", "status": "modified", "additions": 56, "deletions": 41, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,55 +4,70 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n-#define DIFF 242\n-\n-unsigned int ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-unsigned int uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n-\n-/* Reduction of unsigned-int.  */\n-\n-void main1 (unsigned int x, unsigned int max_result, unsigned int min_result)\n-{\n-  int i;\n-  unsigned int udiff = 2;\n-  unsigned int umax = x;\n-  unsigned int umin = x;\n-\n-  /* Summation.  */\n-  for (i = 0; i < N; i++) {\n-    udiff += (ub[i] - uc[i]);\n-  }\n-\n-  /* Maximum.  */\n-  for (i = 0; i < N; i++) {\n-    umax = umax < uc[i] ? uc[i] : umax;\n-  }\n-\n-  /* Minimum.  */\n-  for (i = 0; i < N; i++) {\n-    umin = umin > uc[i] ? uc[i] : umin;\n-  }\n-\n-  /* check results:  */\n-  if (udiff != DIFF)\n-    abort ();\n-  if (umax != max_result)\n-    abort ();\n-  if (umin != min_result)\n-    abort ();\n+ #define N 1600\n+ #define DIFF 2558402\n+\n+unsigned int ub[N];\n+unsigned int uc[N];\n+\n+ /* Reduction of unsigned-int.  */\n+\n+ void main1 (unsigned int x, unsigned int max_result, unsigned int min_result)\n+ {\n+   int i;\n+   unsigned int udiff = 2;\n+   unsigned int umax = x;\n+   unsigned int umin = x;\n+\n+   /* Summation.  */\n+   for (i = 0; i < N; i++) {\n+     udiff += (ub[i] - uc[i]);\n+   }\n+\n+   /* Maximum.  */\n+   for (i = 0; i < N; i++) {\n+     umax = umax < uc[i] ? uc[i] : umax;\n+   }\n+\n+   /* Minimum.  */\n+   for (i = 0; i < N; i++) {\n+     umin = umin > uc[i] ? uc[i] : umin;\n+   }\n+\n+   /* check results:  */\n+   if (udiff != DIFF)\n+     abort ();\n+   if (umax != max_result)\n+     abort ();\n+   if (umin != min_result)\n+     abort ();\n+ }\n+\n+ __attribute__((noinline))\n+ void init_arrays ()\n+ {\n+   int i;\n+\n+   ub[0] = 1;\n+   uc[0] = 1;\n+   for (i=1; i<N; i++)\n+     {\n+       ub[i] = i * 3;\n+       uc[i] = i;\n+     }\n }\n \n int main (void)\n { \n-  \n-  main1 (100, 100, 1);\n-  main1 (0, 15, 0);\n+  init_arrays ();\n+  main1 (2000, 2000, 1);\n+  main1 (0, 1599, 0);\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 4 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "76645c85075016690e3bd4b0d87e44e65b7d3caf", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-1char.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1char.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,7 +4,7 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n+#define N 1600\n #define DIFF 242\n \n unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n@@ -39,15 +39,29 @@ main1 (unsigned char x, unsigned char max_result, unsigned char min_result)\n     abort ();\n }\n \n+ __attribute__((noinline))\n+ void init_arrays ()\n+ {\n+   int i;\n+\n+   for (i=16; i<N; i++)\n+     {\n+       ub[i] = 1;\n+       uc[i] = 1;\n+     }\n+}\n+\n int main (void)\n-{ \n+{\n+  init_arrays();\n   main1 (100, 100, 1);\n   main1 (0, 15, 0);\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 4 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "526f170096a65e912fb8264a0249398a9a7568d7", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-1short.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-1short.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,7 +4,7 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n+#define N 1600\n #define DIFF 242\n \n unsigned short ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n@@ -39,15 +39,28 @@ main1 (unsigned short x, unsigned short max_result, unsigned short min_result)\n     abort ();\n }\n \n+ __attribute__((noinline))\n+ void init_arrays ()\n+ {\n+   int i;\n+\n+   for (i=16; i<N; i++)\n+     {\n+       ub[i] = 1;\n+       uc[i] = 1;\n+     }\n+}\n+\n int main (void)\n { \n+  init_arrays();\n   main1 (100, 100, 1);\n   main1 (0, 15, 0);\n   return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 4 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "e0abb265b5b60301a909989e752ae12a75299847", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-2.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,11 +4,11 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n-#define DIFF 240\n+#define N 1600\n+#define DIFF 2558400\n \n-int b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-int c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+int b[N];\n+int c[N];\n \n /* Reduction of signed-int.  */\n \n@@ -31,7 +31,7 @@ void main1 (int x, int max_result, int min_result)\n   for (i = 0; i < N; i++) {\n     min = min > c[i] ? c[i] : min;\n   }\n-\n+  \n   /* check results:  */\n   if (diff != DIFF)\n     abort ();\n@@ -41,15 +41,30 @@ void main1 (int x, int max_result, int min_result)\n     abort ();\n }\n \n+ __attribute__((noinline))\n+ void init_arrays ()\n+ {\n+   int i;\n+\n+   b[0] = 1;\n+   c[0] = 1;\n+   for (i=1; i<N; i++)\n+     {\n+       b[i] = i * 3;\n+       c[i] = i;\n+     }\n+}\n+\n int main (void)\n { \n-  main1 (100, 100, 1);\n-  main1 (0, 15, 0);\n+  init_arrays ();\n+  main1 (2000, 2000, 1);\n+  main1 (0, 1599, 0);\n   return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 4 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "ada1275f99d5b605f8b4f1d8441d10864393818c", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-2char.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2char.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,7 +4,7 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n+#define N 1600\n #define DIFF 121\n \n signed char b[N] = {1,2,3,6,8,10,12,14,16,18,20,22,24,26,28,30};\n@@ -39,15 +39,29 @@ void main1 (signed char x, signed char max_result, signed char min_result)\n     abort ();\n }\n \n+ __attribute__((noinline))\n+ void init_arrays ()\n+ {\n+   int i;\n+\n+   for (i=16; i<N; i++)\n+     {\n+       b[i] = 1;\n+       c[i] = 1;\n+     }\n+}\n+\n int main (void)\n { \n+  init_arrays();\n   main1 (100, 100, 1);\n   main1 (0, 15, 0);\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "3363c68f4287fc1bf435c5972a26528f96f26ec6", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-2short.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-2short.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,7 +4,7 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n+#define N 1600\n #define DIFF 242\n \n short b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n@@ -38,15 +38,29 @@ void main1 (short x, short max_result, short min_result)\n     abort ();\n }\n \n+ __attribute__((noinline))\n+ void init_arrays ()\n+ {\n+   int i;\n+\n+   for (i=16; i<N; i++)\n+     {\n+       b[i] = 1;\n+       c[i] = 1;\n+     }\n+}\n+\n int main (void)\n { \n+  init_arrays();\n   main1 (100, 100, 1);\n   main1 (0, 15, 0);\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "6bc204711e5efe35278f2f1497a0ccbbc0786d4a", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-3.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-3.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,10 +4,10 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n+#define N 1600\n \n-unsigned int ub[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-unsigned int uc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+unsigned int ub[N];\n+unsigned int uc[N];\n \n /* Reduction of unsigned-int.  */\n \n@@ -29,15 +29,29 @@ int main1 (int n, int res)\n   return 0;\n }\n \n+__attribute__((noinline))\n+void init_arrays ()\n+{\n+  int i;\n+  \n+  for (i=0; i<N; i++)\n+    {\n+      ub[i] = i * 3;\n+      uc[i] = i;\n+    }\n+}\n+\n int main (void)\n { \n-  main1 (N, 240);\n-  main1 (N-1, 210);\n+  init_arrays ();\n+  main1 (N, 2558400);\n+  main1 (N-1, 2555202);\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 1 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 1 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "fface8fed3579fed991a53576e1b9d4cb55f265d", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-6.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-6.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -4,19 +4,26 @@\n #include <stdarg.h>\n #include <stdlib.h>\n \n-#define N 16\n-#define DIFF 242\n+#define N 1600\n+#define DIFF 2558402\n+\n \n __attribute__ ((noinline))\n int main1 (float x, float max_result)\n {\n   int i;\n-  float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n-  float c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  float b[N];\n+  float c[N];\n   float diff = 2;\n   float max = x;\n   float min = 10;\n \n+  for (i=0; i<N; i++)\n+    {\n+      b[i] = i * 3;\n+      c[i] = i;\n+    }\n+  \n   for (i = 0; i < N; i++) {\n     diff += (b[i] - c[i]);\n   }\n@@ -42,14 +49,15 @@ int main1 (float x, float max_result)\n \n int main (void)\n { \n-  main1 (100 ,100);\n-  main1 (0, 15);\n+  main1 (2000, 2000);\n+  main1 (0, 1599);\n   return 0;\n }\n \n+\n /* need -ffast-math to  parallelize these loops.  */\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 0 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 0 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 1 \"parloops\" } } */\n /* { dg-final { scan-tree-dump-times \"FAILED: it is not a part of reduction\" 3 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "f66069e56ca87dbe48718d5f73f89b83f117e6ce", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-7.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-7.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -3,7 +3,7 @@\n \n #include <stdlib.h>\n \n-#define N 32\n+#define N 3200\n \n extern void abort (void);\n typedef unsigned char T;\n@@ -42,28 +42,36 @@ testmin (const T *c, T init, T result)\n \n int main (void)\n { \n-  static unsigned char const A[N] = {\n+  static unsigned char A[N] = {\n     0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n     0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n     0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f\n   };\n \n-  static unsigned char const B[N] = {\n+  static unsigned char B[N] = {\n     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n     0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,\n     0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n     0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f\n   };\n \n-  static unsigned char const C[N] = {\n+  static unsigned char C[N] = {\n     0xff, 0xfe, 0xfd, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8,\n     0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n     0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n   };\n \n-  \n+  int i;\n+\n+  for (i=32; i<N; i++)\n+    {\n+      A[i]= 0x01;\n+      B[i]= 0x70;\n+      C[i]= 0xff;\n+    }\n+\n   testmin (A, 10, 1);\n   testmin (B, 0x7f, 0x70);\n   testmin (C, 0x7f, 0x09);\n@@ -75,8 +83,9 @@ int main (void)\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n "}, {"sha": "4a416df2372fba971c3ee7cf09b63f3bbbed3250", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-8.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-8.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -3,7 +3,7 @@\n \n #include <stdlib.h>\n \n-#define N 32\n+#define N 3200\n \n extern void abort (void);\n typedef signed char T;\n@@ -42,27 +42,36 @@ testmin (const T *c, T init, T result)\n \n int main (void)\n { \n-  static signed char const A[N] = {\n+  static signed char A[N] = {\n     0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n     0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n     0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f\n   };\n \n-  static signed char const B[N] = {\n+  static signed char B[N] = {\n     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n     0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,\n     0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n     0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f\n   };\n \n-  static signed char const C[N] = {\n+  static signed char C[N] = {\n     0xff, 0xfe, 0xfd, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8,\n     0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n     0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n     0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n   };\n \n+  int i;\n+\n+  for (i=32; i<N; i++)\n+    {\n+      A[i]= 0x01;\n+      B[i]= 0x70;\n+      C[i]= 0xff;\n+    }\n+\n   testmin (A, 0, 0);\n   testmin (B, 0, 0x80);\n   testmin (C, 0, 0x80);\n@@ -74,7 +83,8 @@ int main (void)\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "2c1677ce5eec8ecd1fba933c0531cd404ef4d46a", "filename": "gcc/testsuite/gcc.dg/autopar/reduc-9.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Freduc-9.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -3,7 +3,7 @@\n \n #include <stdlib.h>\n \n-#define N 32\n+#define N 3200\n \n extern void abort (void);\n typedef unsigned short T;\n@@ -42,27 +42,36 @@ testmin (const T *c, T init, T result)\n \n int main (void)\n { \n-  static unsigned short const A[N] = {\n+  static unsigned short A[N] = {\n     0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008,\n     0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 0x0010,\n     0x7000, 0x7100, 0x7200, 0x7300, 0x7400, 0x7500, 0x7600, 0x7700,\n     0x7ff8, 0x7ff9, 0x7ffa, 0x7ffb, 0x7ffc, 0x7ffd, 0x7ffe, 0x7fff\n   };\n \n-  static unsigned short const B[N] = {\n+  static unsigned short B[N] = {\n     0x7000, 0x7100, 0x7200, 0x7300, 0x7400, 0x7500, 0x7600, 0x7700,\n     0x7ff8, 0x7ff9, 0x7ffa, 0x7ffb, 0x7ffc, 0x7ffd, 0x7ffe, 0x7fff,\n     0x8000, 0x8001, 0x8002, 0x8003, 0x8004, 0x8005, 0x8006, 0x8007,\n     0x8008, 0x8009, 0x800a, 0x800b, 0x800c, 0x800d, 0x800e, 0x800f\n   };\n \n-  static unsigned short const C[N] = {\n+  static unsigned short C[N] = {\n     0xffff, 0xfffe, 0xfffd, 0xfffc, 0xfffb, 0xfffa, 0xfff9, 0xfff8,\n     0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 0x0010,\n     0x8000, 0x8001, 0x8002, 0x8003, 0x8004, 0x8005, 0x8006, 0x8007,\n     0x7000, 0x7100, 0x7200, 0x7300, 0x7400, 0x7500, 0x7600, 0x7700,\n   };\n \n+  int i;\n+\n+  for (i=32; i<N; i++)\n+    {\n+      A[i]= 0x0001;\n+      B[i]= 0x7000;\n+      C[i]= 0xffff;\n+    }\n+\n   testmin (A, 10, 1);\n   testmin (B, 0x7fff, 0x7000);\n   testmin (C, 0x7fff, 0x0009);\n@@ -74,7 +83,8 @@ int main (void)\n   return 0;\n }\n \n+\n /* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n-/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"parloops\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "b1ef83550da6eee350bae0f6296a3974d2478b89", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785aa2a70653f35bd38f0880615e7b1d11c2e436/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=785aa2a70653f35bd38f0880615e7b1d11c2e436", "patch": "@@ -1908,7 +1908,7 @@ parallelize_loops (void)\n       /* FIXME: Bypass this check as graphite doesn't update the\n       count and frequency correctly now.  */\n       if (!flag_loop_parallelize_all\n-\t  && (expected_loop_iterations (loop) <= n_threads\n+\t  && (estimated_loop_iterations_int (loop, false)<= n_threads * MIN_PER_THREAD\n \t      /* Do not bother with loops in cold areas.  */\n \t      || optimize_loop_nest_for_size_p (loop)))\n \tcontinue;"}]}