{"sha": "5d9669fd547e91ddfacd59c2012ecd26fd6cb906", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5NjY5ZmQ1NDdlOTFkZGZhY2Q1OWMyMDEyZWNkMjZmZDZjYjkwNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-06-04T00:19:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-06-04T00:19:17Z"}, "message": "Minor whitespace edits\n\nFrom-SVN: r42840", "tree": {"sha": "b74bb3a57b32344254ae7156421418b71a87f186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b74bb3a57b32344254ae7156421418b71a87f186"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d9669fd547e91ddfacd59c2012ecd26fd6cb906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9669fd547e91ddfacd59c2012ecd26fd6cb906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d9669fd547e91ddfacd59c2012ecd26fd6cb906", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9669fd547e91ddfacd59c2012ecd26fd6cb906/comments", "author": null, "committer": null, "parents": [{"sha": "77411c845ea9c89c7d37eff59d8263c54c9a4685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77411c845ea9c89c7d37eff59d8263c54c9a4685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77411c845ea9c89c7d37eff59d8263c54c9a4685"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "505f9ab5dba77b7bf2f87e3f7a03a0e311a66f1c", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9669fd547e91ddfacd59c2012ecd26fd6cb906/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9669fd547e91ddfacd59c2012ecd26fd6cb906/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5d9669fd547e91ddfacd59c2012ecd26fd6cb906", "patch": "@@ -2869,7 +2869,8 @@ convert_filename (name, do_exe)\n       return name;\n \n   obstack_grow (&obstack, name, len);\n-  obstack_grow0 (&obstack, TARGET_EXECUTABLE_SUFFIX, strlen (TARGET_EXECUTABLE_SUFFIX));\n+  obstack_grow0 (&obstack, TARGET_EXECUTABLE_SUFFIX,\n+\t\t strlen (TARGET_EXECUTABLE_SUFFIX));\n   name = obstack_finish (&obstack);\n #endif\n "}, {"sha": "5f08444ec914a76aff3b205a5a1f29c9ff5edc18", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9669fd547e91ddfacd59c2012ecd26fd6cb906/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9669fd547e91ddfacd59c2012ecd26fd6cb906/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=5d9669fd547e91ddfacd59c2012ecd26fd6cb906", "patch": "@@ -2542,10 +2542,11 @@ eliminate_regs (x, mem_mode, insn)\n \t\t      (reg:m2 R) later, expecting all bits to be preserved.\n \t\t      So if the number of words is the same, preserve the\n \t\t      subreg so that push_reloads can see it.  */\n-\t\t   && ! ((x_size-1)/UNITS_PER_WORD == (new_size-1)/UNITS_PER_WORD)\n+\t\t   && ! ((x_size - 1) / UNITS_PER_WORD\n+\t\t\t == (new_size -1 ) / UNITS_PER_WORD)\n #endif\n \t\t   )\n-\t\t  || (x_size == new_size))\n+\t\t  || x_size == new_size)\n \t      )\n \t    {\n \t      int offset = SUBREG_BYTE (x);"}]}