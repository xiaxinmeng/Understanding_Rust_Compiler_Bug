{"sha": "8a18261afd923151b8d2a37f667e4673b27acd3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExODI2MWFmZDkyMzE1MWI4ZDJhMzdmNjY3ZTQ2NzNiMjdhY2QzZg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-01-14T20:25:27Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-01-14T20:25:27Z"}, "message": "analyzer: const fixes [PR98679]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/98679\n\t* analyzer.h (region_offset::operator==): Make const.\n\t* pending-diagnostic.h (pending_diagnostic::equal_p): Likewise.\n\t* store.h (binding_cluster::for_each_value): Likewise.\n\t(binding_cluster::for_each_binding): Likewise.", "tree": {"sha": "6f694cd7f8f819521c839f1740872fa5f4a251d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f694cd7f8f819521c839f1740872fa5f4a251d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a18261afd923151b8d2a37f667e4673b27acd3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a18261afd923151b8d2a37f667e4673b27acd3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a18261afd923151b8d2a37f667e4673b27acd3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a18261afd923151b8d2a37f667e4673b27acd3f/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6ffd449e0cc9f40943cb45f6941628d0e192ab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ffd449e0cc9f40943cb45f6941628d0e192ab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ffd449e0cc9f40943cb45f6941628d0e192ab2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6996092717c7faeb71bf8de413db13250ecef38e", "filename": "gcc/analyzer/analyzer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18261afd923151b8d2a37f667e4673b27acd3f/gcc%2Fanalyzer%2Fanalyzer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18261afd923151b8d2a37f667e4673b27acd3f/gcc%2Fanalyzer%2Fanalyzer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.h?ref=8a18261afd923151b8d2a37f667e4673b27acd3f", "patch": "@@ -169,7 +169,7 @@ class region_offset\n     return m_offset;\n   }\n \n-  bool operator== (const region_offset &other)\n+  bool operator== (const region_offset &other) const\n   {\n     return (m_base_region == other.m_base_region\n \t    && m_offset == other.m_offset"}, {"sha": "571fc1b56b9c476650b9d3d501e1306c9edcbdd0", "filename": "gcc/analyzer/pending-diagnostic.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18261afd923151b8d2a37f667e4673b27acd3f/gcc%2Fanalyzer%2Fpending-diagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18261afd923151b8d2a37f667e4673b27acd3f/gcc%2Fanalyzer%2Fpending-diagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fpending-diagnostic.h?ref=8a18261afd923151b8d2a37f667e4673b27acd3f", "patch": "@@ -157,7 +157,7 @@ class pending_diagnostic\n   /* Compare for equality with OTHER, which might be of a different\n      subclass.  */\n \n-  bool equal_p (const pending_diagnostic &other)\n+  bool equal_p (const pending_diagnostic &other) const\n   {\n     /* Check for pointer equality on the IDs from get_kind.  */\n     if (get_kind () != other.get_kind ())"}, {"sha": "2bcef6c398ae9c537a28a6323afbcf86545c6879", "filename": "gcc/analyzer/store.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18261afd923151b8d2a37f667e4673b27acd3f/gcc%2Fanalyzer%2Fstore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18261afd923151b8d2a37f667e4673b27acd3f/gcc%2Fanalyzer%2Fstore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.h?ref=8a18261afd923151b8d2a37f667e4673b27acd3f", "patch": "@@ -425,7 +425,7 @@ class binding_cluster\n \n   template <typename T>\n   void for_each_value (void (*cb) (const svalue *sval, T user_data),\n-\t\t       T user_data)\n+\t\t       T user_data) const\n   {\n     for (map_t::iterator iter = m_map.begin (); iter != m_map.end (); ++iter)\n       cb ((*iter).second, user_data);\n@@ -459,7 +459,7 @@ class binding_cluster\n   const svalue *maybe_get_simple_value (store_manager *mgr) const;\n \n   template <typename BindingVisitor>\n-  void for_each_binding (BindingVisitor &v)\n+  void for_each_binding (BindingVisitor &v) const\n   {\n     for (map_t::iterator iter = m_map.begin (); iter != m_map.end (); ++iter)\n       {"}]}