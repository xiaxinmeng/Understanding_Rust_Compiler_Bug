{"sha": "10ef8f287e92cad2f6963a9ee25d954c87567629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBlZjhmMjg3ZTkyY2FkMmY2OTYzYTllZTI1ZDk1NGM4NzU2NzYyOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-01-23T11:57:43Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-01-23T11:57:43Z"}, "message": "re PR preprocessor/60570 (expression in 'elif' directive mis-diagnosed as error when group will be skipped)\n\n\tDR#412\n\tPR preprocessor/60570\n\t* directives.c (do_elif): Don't evaluate #elif conditionals\n\twhen they don't need to be.\n\n\t* gcc.dg/cpp/pr36320.c: Turn dg-error into dg-bogus.\n\t* gcc.dg/cpp/pr60570.c: New test.\n\nFrom-SVN: r220035", "tree": {"sha": "b588bb547ecd04e5b2df8f148a1b0e9e0cdc32fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b588bb547ecd04e5b2df8f148a1b0e9e0cdc32fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10ef8f287e92cad2f6963a9ee25d954c87567629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ef8f287e92cad2f6963a9ee25d954c87567629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ef8f287e92cad2f6963a9ee25d954c87567629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ef8f287e92cad2f6963a9ee25d954c87567629/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0edd457a1b282528b98cb56b153d049ad03542a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0edd457a1b282528b98cb56b153d049ad03542a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0edd457a1b282528b98cb56b153d049ad03542a"}], "stats": {"total": 90, "additions": 72, "deletions": 18}, "files": [{"sha": "cf9b478268bd28e5c56002fdfdf17976bf631c34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ef8f287e92cad2f6963a9ee25d954c87567629/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ef8f287e92cad2f6963a9ee25d954c87567629/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10ef8f287e92cad2f6963a9ee25d954c87567629", "patch": "@@ -1,3 +1,9 @@\n+2015-01-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR preprocessor/60570\n+\t* gcc.dg/cpp/pr36320.c: Turn dg-error into dg-bogus.\n+\t* gcc.dg/cpp/pr60570.c: New test.\n+\n 2015-01-23  Richard Biener  <rguenther@suse.de>\n \n \tPR testsuite/63439"}, {"sha": "cc2baa73e1fb2f44045bc534b678db9b8522d91c", "filename": "gcc/testsuite/gcc.dg/cpp/pr36320.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ef8f287e92cad2f6963a9ee25d954c87567629/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr36320.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ef8f287e92cad2f6963a9ee25d954c87567629/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr36320.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr36320.c?ref=10ef8f287e92cad2f6963a9ee25d954c87567629", "patch": "@@ -1,8 +1,8 @@\n /* PR 36320 - #elif still requires valid expression.  */\n-\n+/* DR#412: #elif doesn't have to be valid expression (PR60570).  */\n /* { dg-do preprocess } */\n \n int z;\n #if 1\n-#elif   /* { dg-error \"with no expression\" } */\n+#elif\t/* { dg-bogus \"with no expression\" } */\n #endif"}, {"sha": "4755206c5005e52ee6e7b9621a82b90f08dc424d", "filename": "gcc/testsuite/gcc.dg/cpp/pr60570.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ef8f287e92cad2f6963a9ee25d954c87567629/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr60570.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ef8f287e92cad2f6963a9ee25d954c87567629/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr60570.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr60570.c?ref=10ef8f287e92cad2f6963a9ee25d954c87567629", "patch": "@@ -0,0 +1,48 @@\n+/* PR preprocessor/60570 */\n+/* { dg-do preprocess } */\n+\n+#if 1\n+int i;\n+#elif 1/0\n+#endif\n+\n+#if 1\n+int j;\n+#elif\n+#endif\n+\n+#if 0\n+#elif 1/0\t/* { dg-error \"division by zero\" } */\n+int k;\n+#endif\n+\n+#if 0\n+#elif\t\t/* { dg-error \"with no expression\" } */\n+int n;\n+#endif\n+\n+#if 1\n+# if 1\n+int l;\n+# elif 1/0\n+# endif\n+#endif\n+\n+#if 1\n+# if 1\n+int l;\n+# elif\n+# endif\n+#endif\n+\n+#if 1\n+# if 0\n+# elif 1/0\t/* { dg-error \"division by zero\" } */\n+# endif\n+#endif\n+\n+#if 1\n+# if 0\n+# elif\t\t/* { dg-error \"with no expression\" } */\n+# endif\n+#endif"}, {"sha": "41aa56fa9c3b506657ffbd17275b74754814dae5", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ef8f287e92cad2f6963a9ee25d954c87567629/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ef8f287e92cad2f6963a9ee25d954c87567629/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=10ef8f287e92cad2f6963a9ee25d954c87567629", "patch": "@@ -1,3 +1,10 @@\n+2015-01-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tDR#412\n+\tPR preprocessor/60570\n+\t* directives.c (do_elif): Don't evaluate #elif conditionals\n+\twhen they don't need to be.\n+\n 2015-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expr.c (cpp_classify_number): Add N_() around ?: string"}, {"sha": "37cd109ed8a249ce17e2a440303d6c8f3c88d487", "filename": "libcpp/directives.c", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ef8f287e92cad2f6963a9ee25d954c87567629/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ef8f287e92cad2f6963a9ee25d954c87567629/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=10ef8f287e92cad2f6963a9ee25d954c87567629", "patch": "@@ -2036,23 +2036,16 @@ do_elif (cpp_reader *pfile)\n \t}\n       ifs->type = T_ELIF;\n \n-      if (! ifs->was_skipping)\n+      /* See DR#412: \"Only the first group whose control condition\n+\t evaluates to true (nonzero) is processed; any following groups\n+\t are skipped and their controlling directives are processed as\n+\t if they were in a group that is skipped.\"  */\n+      if (ifs->skip_elses)\n+\tpfile->state.skipping = 1;\n+      else\n \t{\n-\t  bool value;\n-\t  /* The standard mandates that the expression be parsed even\n-\t     if we are skipping elses at this point -- the lexical\n-\t     restrictions on #elif only apply to skipped groups, but\n-\t     this group is not being skipped.  Temporarily set\n-\t     skipping to false to get lexer warnings.  */\n-\t  pfile->state.skipping = 0;\n-\t  value = _cpp_parse_expr (pfile, false);\n-\t  if (ifs->skip_elses)\n-\t    pfile->state.skipping = 1;\n-\t  else\n-\t    {\n-\t      pfile->state.skipping = ! value;\n-\t      ifs->skip_elses = value;\n-\t    }\n+\t  pfile->state.skipping = ! _cpp_parse_expr (pfile, false);\n+\t  ifs->skip_elses = ! pfile->state.skipping;\n \t}\n \n       /* Invalidate any controlling macro.  */"}]}