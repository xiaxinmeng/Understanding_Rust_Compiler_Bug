{"sha": "42ef8a5e662a765dc794a7a5c0227bcd83556e44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJlZjhhNWU2NjJhNzY1ZGM3OTRhN2E1YzAyMjdiY2Q4MzU1NmU0NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-14T07:15:23Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-14T07:15:23Z"}, "message": "i386: Add V2SFmode conversion functions [PR95046]\n\ngcc/ChangeLog:\n\n\tPR target/95046\n\t* config/i386/mmx.md (mmx_fix_truncv2sfv2si2): rename from mmx_pf2id.\n\tAdd SSE/AVX alternative.  Change operand predicates from\n\tnonimmediate_operand to register_mmxmem_operand.\n\tEnable instruction pattern for TARGET_MMX_WITH_SSE.\n\t(fix_truncv2sfv2si2): New expander.\n\t(fixuns_truncv2sfv2si2): Ditto.\n\n\t(mmx_floatv2siv2sf2): rename from mmx_floatv2si2.\n\tAdd SSE/AVX alternative.  Change operand predicates from\n\tnonimmediate_operand to register_mmxmem_operand.\n\tEnable instruction pattern for TARGET_MMX_WITH_SSE.\n\t(floatv2siv2sf2): New expander.\n\t(floatunsv2siv2sf2): Ditto.\n\n\t* config/i386/i386-builtin.def (IX86_BUILTIN_PF2ID):\n\tUpdate for rename.\n\t(IX86_BUILTIN_PI2FD): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/95046\n\t* gcc.target/i386/pr95046-5.c: New test.", "tree": {"sha": "21ff60d7d9d84f1a335f41b7392a2e2b3b4695e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21ff60d7d9d84f1a335f41b7392a2e2b3b4695e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42ef8a5e662a765dc794a7a5c0227bcd83556e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ef8a5e662a765dc794a7a5c0227bcd83556e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ef8a5e662a765dc794a7a5c0227bcd83556e44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ef8a5e662a765dc794a7a5c0227bcd83556e44/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0473885be8b2a7aa0d5064a16c004116162f473f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0473885be8b2a7aa0d5064a16c004116162f473f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0473885be8b2a7aa0d5064a16c004116162f473f"}], "stats": {"total": 153, "additions": 131, "deletions": 22}, "files": [{"sha": "ec22de0568d46c20b97c4f11929c6635743c208e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42ef8a5e662a765dc794a7a5c0227bcd83556e44", "patch": "@@ -1,3 +1,24 @@\n+2020-05-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95046\n+\t* config/i386/mmx.md (mmx_fix_truncv2sfv2si2): rename from mmx_pf2id.\n+\tAdd SSE/AVX alternative.  Change operand predicates from\n+\tnonimmediate_operand to register_mmxmem_operand.\n+\tEnable instruction pattern for TARGET_MMX_WITH_SSE.\n+\t(fix_truncv2sfv2si2): New expander.\n+\t(fixuns_truncv2sfv2si2): Ditto.\n+\n+\t(mmx_floatv2siv2sf2): rename from mmx_floatv2si2.\n+\tAdd SSE/AVX alternative.  Change operand predicates from\n+\tnonimmediate_operand to register_mmxmem_operand.\n+\tEnable instruction pattern for TARGET_MMX_WITH_SSE.\n+\t(floatv2siv2sf2): New expander.\n+\t(floatunsv2siv2sf2): Ditto.\n+\n+\t* config/i386/i386-builtin.def (IX86_BUILTIN_PF2ID):\n+\tUpdate for rename.\n+\t(IX86_BUILTIN_PI2FD): Ditto.\n+\n 2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.c (s390_emit_stack_probe): Call the probe_stack\n@@ -123,10 +144,9 @@\n 2020-05-13  Hongtao Liu  <hongtao.liu@intel.com>\n \n \tPR target/94118\n-\t * doc/extend.texi (x86Operandmodifiers): Document more x86\n-\t operand modifier.\n-\t * gcc/config/i386/i386.c: Add comment for operand modifier N\n-\t and I.\n+\t* doc/extend.texi (x86Operandmodifiers): Document more x86\n+\toperand modifier.\n+\t* gcc/config/i386/i386.c: Add comment for operand modifier N and I.\n \n 2020-05-12  Giuliano Belinassi  <giuliano.belinassi@usp.br>\n "}, {"sha": "fa123788a8e49a023ea17c69f7cd56ecd3acca47", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=42ef8a5e662a765dc794a7a5c0227bcd83556e44", "patch": "@@ -528,8 +528,8 @@ BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashrv4hi3, \"__builtin_ia32_psraw\", I\n BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashrv2si3, \"__builtin_ia32_psrad\", IX86_BUILTIN_PSRAD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI_COUNT)\n \n /* 3DNow! */\n-BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_pf2id, \"__builtin_ia32_pf2id\", IX86_BUILTIN_PF2ID, UNKNOWN, (int) V2SI_FTYPE_V2SF)\n-BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_floatv2si2, \"__builtin_ia32_pi2fd\", IX86_BUILTIN_PI2FD, UNKNOWN, (int) V2SF_FTYPE_V2SI)\n+BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_fix_truncv2sfv2si2, \"__builtin_ia32_pf2id\", IX86_BUILTIN_PF2ID, UNKNOWN, (int) V2SI_FTYPE_V2SF)\n+BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_floatv2siv2sf2, \"__builtin_ia32_pi2fd\", IX86_BUILTIN_PI2FD, UNKNOWN, (int) V2SF_FTYPE_V2SI)\n BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_rcpv2sf2, \"__builtin_ia32_pfrcp\", IX86_BUILTIN_PFRCP, UNKNOWN, (int) V2SF_FTYPE_V2SF)\n BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_rsqrtv2sf2, \"__builtin_ia32_pfrsqrt\", IX86_BUILTIN_PFRSQRT, UNKNOWN, (int) V2SF_FTYPE_V2SF)\n "}, {"sha": "2955ca2898f19ddfbb10f359f3fc69585f4155a8", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 56, "deletions": 16, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=42ef8a5e662a765dc794a7a5c0227bcd83556e44", "patch": "@@ -777,14 +777,63 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"mmx_pf2id\"\n-  [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n-\t(fix:V2SI (match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_3DNOW\"\n-  \"pf2id\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"mmxcvt\")\n+(define_insn \"mmx_fix_truncv2sfv2si2\"\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=y,Yv\")\n+\t(fix:V2SI (match_operand:V2SF 1 \"register_mmxmem_operand\" \"ym,Yv\")))]\n+  \"TARGET_3DNOW || TARGET_MMX_WITH_SSE\"\n+  \"@\n+   pf2id\\t{%1, %0|%0, %1}\n+   %vcvttps2dq\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n+   (set_attr \"type\" \"mmxcvt,ssecvt\")\n+   (set_attr \"prefix_extra\" \"1,*\")\n+   (set_attr \"prefix_rep\" \"*,1\")\n+   (set_attr \"prefix_data16\" \"*,0\")\n+   (set_attr \"prefix\" \"*,maybe_vex\")\n+   (set_attr \"mode\" \"V2SF,TI\")])\n+\n+(define_expand \"fix_truncv2sfv2si2\"\n+  [(set (match_operand:V2SI 0 \"register_operand\")\n+\t(fix:V2SI (match_operand:V2SF 1 \"register_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\")\n+\n+(define_insn \"fixuns_truncv2sfv2si2\"\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=v\")\n+\t(unsigned_fix:V2SI (match_operand:V2SF 1 \"register_operand\" \"v\")))]\n+  \"TARGET_MMX_WITH_SSE && TARGET_AVX512VL\"\n+  \"vcvttps2udq\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"mmx_floatv2siv2sf2\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=y,Yv\")\n+\t(float:V2SF (match_operand:V2SI 1 \"register_mmxmem_operand\" \"ym,Yv\")))]\n+  \"TARGET_3DNOW || TARGET_MMX_WITH_SSE\"\n+  \"@\n+   pi2fd\\t{%1, %0|%0, %1}\n+   %vcvtdq2ps\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n+   (set_attr \"type\" \"mmxcvt,ssecvt\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V2SF\")])\n+   (set_attr \"prefix\" \"*,maybe_vex\")\n+   (set_attr \"mode\" \"V2SF,V4SF\")])\n+\n+(define_expand \"floatv2siv2sf2\"\n+  [(set (match_operand:V2SF 0 \"register_operand\")\n+\t(float:V2SF (match_operand:V2SI 1 \"register_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\")\n+\n+(define_insn \"floatunsv2siv2sf2\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=v\")\n+\t(unsigned_float:V2SF (match_operand:V2SI 1 \"register_operand\" \"v\")))]\n+  \"TARGET_MMX_WITH_SSE && TARGET_AVX512VL\"\n+  \"vcvtudq2ps\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"mmx_pf2iw\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n@@ -810,15 +859,6 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"V2SF\")])\n \n-(define_insn \"mmx_floatv2si2\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n-\t(float:V2SF (match_operand:V2SI 1 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_3DNOW\"\n-  \"pi2fd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"mmxcvt\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V2SF\")])\n-\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel single-precision floating point element swizzling"}, {"sha": "2c96a2489b453b347b4c664c61e30d6e22770257", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42ef8a5e662a765dc794a7a5c0227bcd83556e44", "patch": "@@ -1,3 +1,8 @@\n+2020-05-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95046\n+\t* gcc.target/i386/pr95046-5.c: New test.\n+\n 2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/stack-clash-2.c: New test."}, {"sha": "bff55ddef3121d0badc6fcf80fb4bf2f01b375f1", "filename": "gcc/testsuite/gcc.target/i386/pr95046-5.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ef8a5e662a765dc794a7a5c0227bcd83556e44/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-5.c?ref=42ef8a5e662a765dc794a7a5c0227bcd83556e44", "patch": "@@ -0,0 +1,44 @@\n+/* PR target/95046 */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O3 -mavx512vl\" } */\n+\n+\n+float r[2];\n+int s[2];\n+unsigned int u[2];\n+\n+void\n+test_float (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    r[i] = s[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvcvtdq2ps\" } } */\n+\n+void\n+test_ufloat (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    r[i] = u[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvcvtudq2ps\" } } */\n+\n+void\n+test_fix (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    s[i] = r[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvcvttps2dq\" } } */\n+\n+void\n+test_ufix (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    u[i] = r[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvcvttps2udq\" } } */"}]}