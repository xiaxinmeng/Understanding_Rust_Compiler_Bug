{"sha": "c249f608702bff661796e3c188a848601cb4861c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0OWY2MDg3MDJiZmY2NjE3OTZlM2MxODhhODQ4NjAxY2I0ODYxYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-07-08T20:59:49Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-07-08T20:59:49Z"}, "message": "cfgexpand.c (tree_expand_cfg): Don't use FINALIZE_PIC.\n\n\t* cfgexpand.c (tree_expand_cfg): Don't use FINALIZE_PIC.\n\t* system.h: Poison FINALIZE_PIC.\n\t* doc/tm.texi (FINALIZE_PIC): Remove.\n\nFrom-SVN: r101794", "tree": {"sha": "f1b96e862791aeb641d77b37722bf16145827f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1b96e862791aeb641d77b37722bf16145827f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c249f608702bff661796e3c188a848601cb4861c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c249f608702bff661796e3c188a848601cb4861c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c249f608702bff661796e3c188a848601cb4861c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c249f608702bff661796e3c188a848601cb4861c/comments", "author": null, "committer": null, "parents": [{"sha": "52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52b27f98cf3b03e9b6b876539b00aaf8ce279a44"}], "stats": {"total": 29, "additions": 7, "deletions": 22}, "files": [{"sha": "bb0df11dcfc0d9c4c6a044a5ccd2b7b64869bbe6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c249f608702bff661796e3c188a848601cb4861c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c249f608702bff661796e3c188a848601cb4861c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c249f608702bff661796e3c188a848601cb4861c", "patch": "@@ -1,3 +1,9 @@\n+2005-07-08  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* cfgexpand.c (tree_expand_cfg): Don't use FINALIZE_PIC.\n+\t* system.h: Poison FINALIZE_PIC.\n+\t* doc/tm.texi (FINALIZE_PIC): Remove.\n+\n 2005-07-08  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/22329"}, {"sha": "87b82459c279295d4ff772f2e932a30b78583ee9", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c249f608702bff661796e3c188a848601cb4861c/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c249f608702bff661796e3c188a848601cb4861c/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=c249f608702bff661796e3c188a848601cb4861c", "patch": "@@ -1575,11 +1575,6 @@ tree_expand_cfg (void)\n     (*debug_hooks->outlining_inline_function) (current_function_decl);\n \n   TREE_ASM_WRITTEN (current_function_decl) = 1;\n-\n-#ifdef FINALIZE_PIC\n-  if (flag_pic)\n-    FINALIZE_PIC;\n-#endif\n }\n \n struct tree_opt_pass pass_expand ="}, {"sha": "4eeb15669841d04d972f27f35e32d21043210bff", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c249f608702bff661796e3c188a848601cb4861c/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c249f608702bff661796e3c188a848601cb4861c/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=c249f608702bff661796e3c188a848601cb4861c", "patch": "@@ -6121,22 +6121,6 @@ Define this macro if the register defined by\n this macro if @code{PIC_OFFSET_TABLE_REGNUM} is not defined.\n @end defmac\n \n-@defmac FINALIZE_PIC\n-By generating position-independent code, when two different programs (A\n-and B) share a common library (libC.a), the text of the library can be\n-shared whether or not the library is linked at the same address for both\n-programs.  In some of these environments, position-independent code\n-requires not only the use of different addressing modes, but also\n-special code to enable the use of these addressing modes.\n-\n-The @code{FINALIZE_PIC} macro serves as a hook to emit these special\n-codes once the function is being compiled into assembly code, but not\n-before.  (It is not done before, because in the case of compiling an\n-inline function, it would lead to multiple PIC prologues being\n-included in functions which used inline functions and were compiled to\n-assembly language.)\n-@end defmac\n-\n @defmac LEGITIMATE_PIC_OPERAND_P (@var{x})\n A C expression that is nonzero if @var{x} is a legitimate immediate\n operand on the target machine when generating position independent code."}, {"sha": "b620a4fd26ee98c6f3fb30cb478103129ec32653", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c249f608702bff661796e3c188a848601cb4861c/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c249f608702bff661796e3c188a848601cb4861c/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=c249f608702bff661796e3c188a848601cb4861c", "patch": "@@ -740,7 +740,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tCASE_DROPS_THROUGH TARGET_BELL TARGET_BS TARGET_CR TARGET_DIGIT0   \\\n         TARGET_ESC TARGET_FF TARGET_NEWLINE TARGET_TAB TARGET_VT\t   \\\n         LINK_LIBGCC_SPECIAL DONT_ACCESS_GBLS_AFTER_EPILOGUE\t\t   \\\n-\tTARGET_OPTIONS TARGET_SWITCHES EXTRA_CC_MODES\n+\tTARGET_OPTIONS TARGET_SWITCHES EXTRA_CC_MODES FINALIZE_PIC\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}