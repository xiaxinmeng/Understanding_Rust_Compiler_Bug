{"sha": "1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU5NWExY2I3YmZhYzhkNWE2MDI2ZDVkNmYzYTQ5NWJlMDM5MTUwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-08T08:52:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-08T08:52:47Z"}, "message": "match.pd: A ^ ((A ^ B) & -(C cmp D)) -> (C cmp D) ? B : A simplification [PR94786]\n\nWe already have x - ((x - y) & -(z < w)) and\nx + ((y - x) & -(z < w)) simplifications, this one adds\nx ^ ((x ^ y) & -(z < w)) (not merged using for because of the\n:c that can be present on bit_xor and can't on minus).\n\n2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94786\n\t* match.pd (A ^ ((A ^ B) & -(C cmp D)) -> (C cmp D) ? B : A): New\n\tsimplification.\n\n\t* gcc.dg/tree-ssa/pr94786.c: New test.", "tree": {"sha": "701be1abe1fbf79e878cf47ce6728b11606b8483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/701be1abe1fbf79e878cf47ce6728b11606b8483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a229f9b3737062c6e853879be6683f3f3e4a6661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a229f9b3737062c6e853879be6683f3f3e4a6661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a229f9b3737062c6e853879be6683f3f3e4a6661"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "5373046116c1b9695724335652101a640168b580", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "patch": "@@ -1,5 +1,9 @@\n 2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/94786\n+\t* match.pd (A ^ ((A ^ B) & -(C cmp D)) -> (C cmp D) ? B : A): New\n+\tsimplification.\n+\n \tPR target/94857\n \t* config/i386/i386.md (peephole2 after *add<mode>3_cc_overflow_1): New\n \tdefine_peephole2."}, {"sha": "58a4ac664149547bbd27e0b2e6410a43f141eeb7", "filename": "gcc/match.pd", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "patch": "@@ -2793,6 +2793,18 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (simplify\n   (plus:c @0 (bit_and:c (minus @1 @0)\n \t\t\t(convert? (negate@4 (convert? (cmp@5 @2 @3))))))\n+  (if (INTEGRAL_TYPE_P (type)\n+       && INTEGRAL_TYPE_P (TREE_TYPE (@4))\n+       && TREE_CODE (TREE_TYPE (@4)) != BOOLEAN_TYPE\n+       && INTEGRAL_TYPE_P (TREE_TYPE (@5))\n+       && (TYPE_PRECISION (TREE_TYPE (@4)) >= TYPE_PRECISION (type)\n+\t   || !TYPE_UNSIGNED (TREE_TYPE (@4)))\n+       && (GIMPLE || !TREE_SIDE_EFFECTS (@1)))\n+   (cond (cmp @2 @3) @1 @0)))\n+ /* Similarly with ^ instead of - though in that case with :c.  */\n+ (simplify\n+  (bit_xor:c @0 (bit_and:c (bit_xor:c @0 @1)\n+\t\t\t   (convert? (negate@4 (convert? (cmp@5 @2 @3))))))\n   (if (INTEGRAL_TYPE_P (type)\n        && INTEGRAL_TYPE_P (TREE_TYPE (@4))\n        && TREE_CODE (TREE_TYPE (@4)) != BOOLEAN_TYPE"}, {"sha": "b95696f0f19230f130916b0a013137b4675d13a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "patch": "@@ -1,5 +1,8 @@\n 2020-05-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/94786\n+\t* gcc.dg/tree-ssa/pr94786.c: New test.\n+\n \tPR target/94857\n \t* gcc.target/i386/pr94857.c: New test.\n "}, {"sha": "beb88daa65195591acb2f9da2e48bbf811ef7d33", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr94786.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94786.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1595a1cb7bfac8d5a6026d5d6f3a495be0391506/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94786.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94786.c?ref=1595a1cb7bfac8d5a6026d5d6f3a495be0391506", "patch": "@@ -0,0 +1,66 @@\n+/* PR tree-optimization/94786 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \"MIN_EXPR <\" 4 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"MAX_EXPR <\" 4 \"optimized\" } } */\n+\n+static inline unsigned\n+umax1 (unsigned a, unsigned b)\n+{\n+  return a ^ ((a ^ b) & -(a < b));\n+}\n+\n+static inline unsigned\n+umin1 (unsigned a, unsigned b)\n+{\n+  return a ^ ((a ^ b) & -(a > b));\n+}\n+\n+static inline int\n+smax1 (int a, int b)\n+{\n+  return a ^ ((a ^ b) & -(a < b));\n+}\n+\n+static inline int\n+smin1 (int a, int b)\n+{\n+  return a ^ ((a ^ b) & -(a > b));\n+}\n+\n+static inline unsigned long long\n+umax2 (unsigned long long a, unsigned long long b)\n+{\n+  return a ^ ((a ^ b) & -(a <= b));\n+}\n+\n+static inline unsigned long long\n+umin2 (unsigned long long a, unsigned long long b)\n+{\n+  return a ^ ((a ^ b) & -(a >= b));\n+}\n+\n+static inline long long\n+smax2 (long long a, long long b)\n+{\n+  return a ^ ((a ^ b) & -(a <= b));\n+}\n+\n+static inline long long\n+smin2 (long long a, long long b)\n+{\n+  return a ^ ((a ^ b) & -(a >= b));\n+}\n+\n+void\n+test (unsigned *x, int *y, unsigned long long *z, long long *w)\n+{\n+  x[2] = umax1 (x[0], x[1]);\n+  x[5] = umin1 (x[2], x[3]);\n+  y[2] = smax1 (y[0], y[1]);\n+  y[5] = smin1 (y[2], y[3]);\n+  z[2] = umax2 (z[0], z[1]);\n+  z[5] = umin2 (z[2], z[3]);\n+  w[2] = smax2 (w[0], w[1]);\n+  w[5] = smin2 (w[2], w[3]);\n+}"}]}