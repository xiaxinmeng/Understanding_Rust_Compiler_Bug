{"sha": "00c0c63c8a7da775717e12b474d865fa78653c50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjMGM2M2M4YTdkYTc3NTcxN2UxMmI0NzRkODY1ZmE3ODY1M2M1MA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-10-20T20:33:42Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-10-20T20:33:42Z"}, "message": "(loop_iterations): Move all failure exits after the computation of final_value.\n\nFrom-SVN: r8324", "tree": {"sha": "0ab55f7dd2da6c8163d4d9106bee9750cd1d27bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab55f7dd2da6c8163d4d9106bee9750cd1d27bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00c0c63c8a7da775717e12b474d865fa78653c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c0c63c8a7da775717e12b474d865fa78653c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c0c63c8a7da775717e12b474d865fa78653c50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c0c63c8a7da775717e12b474d865fa78653c50/comments", "author": null, "committer": null, "parents": [{"sha": "2c14c928e7281f5ff05d76f9331580e016d79583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c14c928e7281f5ff05d76f9331580e016d79583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c14c928e7281f5ff05d76f9331580e016d79583"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "c82266e21cc83faa225d64065f2162cdff8ddaa8", "filename": "gcc/unroll.c", "status": "modified", "additions": 22, "deletions": 23, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c0c63c8a7da775717e12b474d865fa78653c50/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c0c63c8a7da775717e12b474d865fa78653c50/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=00c0c63c8a7da775717e12b474d865fa78653c50", "patch": "@@ -3155,28 +3155,6 @@ loop_iterations (loop_start, loop_end)\n     /* iteration_info already printed a message.  */\n     return 0;\n \n-  if (increment == 0)\n-    {\n-      if (loop_dump_stream)\n-\tfprintf (loop_dump_stream,\n-\t\t \"Loop unrolling: Increment value can't be calculated.\\n\");\n-      return 0;\n-    }\n-  if (GET_CODE (increment) != CONST_INT)\n-    {\n-      if (loop_dump_stream)\n-\tfprintf (loop_dump_stream,\n-\t\t \"Loop unrolling: Increment value not constant.\\n\");\n-      return 0;\n-    }\n-  if (GET_CODE (initial_value) != CONST_INT)\n-    {\n-      if (loop_dump_stream)\n-\tfprintf (loop_dump_stream,\n-\t\t \"Loop unrolling: Initial value not constant.\\n\");\n-      return 0;\n-    }\n-\n   /* If the comparison value is an invariant register, then try to find\n      its value from the insns before the start of the loop.  */\n \n@@ -3225,7 +3203,28 @@ loop_iterations (loop_start, loop_end)\n   loop_increment = increment;\n   loop_final_value = final_value;\n \n-  if (final_value == 0)\n+  if (increment == 0)\n+    {\n+      if (loop_dump_stream)\n+\tfprintf (loop_dump_stream,\n+\t\t \"Loop unrolling: Increment value can't be calculated.\\n\");\n+      return 0;\n+    }\n+  else if (GET_CODE (increment) != CONST_INT)\n+    {\n+      if (loop_dump_stream)\n+\tfprintf (loop_dump_stream,\n+\t\t \"Loop unrolling: Increment value not constant.\\n\");\n+      return 0;\n+    }\n+  else if (GET_CODE (initial_value) != CONST_INT)\n+    {\n+      if (loop_dump_stream)\n+\tfprintf (loop_dump_stream,\n+\t\t \"Loop unrolling: Initial value not constant.\\n\");\n+      return 0;\n+    }\n+  else if (final_value == 0)\n     {\n       if (loop_dump_stream)\n \tfprintf (loop_dump_stream,"}]}