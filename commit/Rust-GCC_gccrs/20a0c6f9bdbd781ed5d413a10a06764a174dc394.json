{"sha": "20a0c6f9bdbd781ed5d413a10a06764a174dc394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBhMGM2ZjliZGJkNzgxZWQ1ZDQxM2ExMGEwNjc2NGExNzRkYzM5NA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-02-08T23:02:50Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-02-08T23:02:50Z"}, "message": "Fix PR c++/69283 (auto deduction fails when ADL is required)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/69283\n\tPR c++/67835\n\t* decl2.c (mark_used): When given a TEMPLATE_DECL, return after\n\tsetting its TREE_USED flag.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/69283\n\tPR c++/67835\n\t* g++.dg/cpp1y/auto-fn29.C: New test.\n\t* g++.dg/cpp1y/auto-fn30.C: New test.\n\nFrom-SVN: r233230", "tree": {"sha": "ab9fb3d0524e6932af991e411f086515c0ddfd64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab9fb3d0524e6932af991e411f086515c0ddfd64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20a0c6f9bdbd781ed5d413a10a06764a174dc394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20a0c6f9bdbd781ed5d413a10a06764a174dc394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20a0c6f9bdbd781ed5d413a10a06764a174dc394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20a0c6f9bdbd781ed5d413a10a06764a174dc394/comments", "author": null, "committer": null, "parents": [{"sha": "1374a761eb55be67e49bb20ae051abb495b840a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1374a761eb55be67e49bb20ae051abb495b840a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1374a761eb55be67e49bb20ae051abb495b840a2"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "0fc40477714e79427bfc7e95c016fcd9aa8317fe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=20a0c6f9bdbd781ed5d413a10a06764a174dc394", "patch": "@@ -1,3 +1,10 @@\n+2016-02-08  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/69283\n+\tPR c++/67835\n+\t* decl2.c (mark_used): When given a TEMPLATE_DECL, return after\n+\tsetting its TREE_USED flag.\n+\n 2016-02-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/69657"}, {"sha": "15d7617a4f56d94de155ff08e2a3268f4a5b6645", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=20a0c6f9bdbd781ed5d413a10a06764a174dc394", "patch": "@@ -5068,6 +5068,10 @@ mark_used (tree decl, tsubst_flags_t complain)\n \n   /* Set TREE_USED for the benefit of -Wunused.  */\n   TREE_USED (decl) = 1;\n+\n+  if (TREE_CODE (decl) == TEMPLATE_DECL)\n+    return true;\n+\n   if (DECL_CLONED_FUNCTION_P (decl))\n     TREE_USED (DECL_CLONED_FUNCTION (decl)) = 1;\n "}, {"sha": "4af81dd126fc837400c64f32a8951f119710b3d0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20a0c6f9bdbd781ed5d413a10a06764a174dc394", "patch": "@@ -1,3 +1,10 @@\n+2016-02-08  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/69283\n+\tPR c++/67835\n+\t* g++.dg/cpp1y/auto-fn29.C: New test.\n+\t* g++.dg/cpp1y/auto-fn30.C: New test.\n+\n 2016-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/69209"}, {"sha": "f9260e0ec30cb5ce731147c59db1325e72f30864", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn29.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn29.C?ref=20a0c6f9bdbd781ed5d413a10a06764a174dc394", "patch": "@@ -0,0 +1,34 @@\n+// PR c++/69283\n+// { dg-do compile { target c++14 } }\n+\n+namespace Ape {\n+   struct Type {};\n+\n+   template <typename T>\n+   auto f1(T const& v){\n+       return true;\n+   }\n+\n+   template <typename T>\n+   auto f2(T const& v){\n+       return f2(v); // { dg-error \"auto\" }\n+   }\n+}\n+\n+namespace Baboon {\n+   template <typename T>\n+   bool f3(T const& v){\n+       return f1(v);\n+   }\n+\n+   template <typename T>\n+   bool f4(T const& v){\n+       f2(v);\n+   }\n+}\n+\n+int main(){\n+   Ape::Type x;\n+   Baboon::f3(x);\n+   Baboon::f4(x);\n+}"}, {"sha": "e005e6ec69203362794d700212b927bd66ed079a", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn30.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20a0c6f9bdbd781ed5d413a10a06764a174dc394/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn30.C?ref=20a0c6f9bdbd781ed5d413a10a06764a174dc394", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/67835\n+// { dg-do compile { target c++14 } }\n+\n+template<class Tag, class T>\n+auto g(Tag tag, T x) {\n+ return f(tag, x);\n+}\n+\n+namespace abc {\n+struct tag {};\n+\n+struct A {};\n+\n+template<class T>\n+auto f(tag, T x) { return x; }\n+}\n+\n+int main() {\n+ g(abc::tag(), abc::A());\n+ return 0;\n+}"}]}