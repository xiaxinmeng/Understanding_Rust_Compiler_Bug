{"sha": "d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRmNGU3MWM4NGZjN2JjZjIxZjQ1ZTMxNWEwN2IxNDA4ZjUxNGY3NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-10T09:05:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-10T09:05:58Z"}, "message": "re PR ipa/68721 (wrong code at -Os and above on x86_64-linux-gnu)\n\n2015-12-10  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/68721\n\t* ipa-split.c (split_function): Record return value properly\n\twhen the split part doesn't set it.\n\n\t* gcc.dg/torture/pr68721.c: New testcase.\n\nFrom-SVN: r231494", "tree": {"sha": "603382ded20cccc1a98ac7e6042bf71bb95e2a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/603382ded20cccc1a98ac7e6042bf71bb95e2a78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77ad31753c0440c4141e957edee243f739570587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77ad31753c0440c4141e957edee243f739570587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77ad31753c0440c4141e957edee243f739570587"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "b5ee0be9a537db4dcd709d845c020015570a8987", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "patch": "@@ -1,3 +1,9 @@\n+2015-12-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/68721\n+\t* ipa-split.c (split_function): Record return value properly\n+\twhen the split part doesn't set it.\n+\n 2015-12-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68806"}, {"sha": "f77ab52161de9f1cae7453957549f7a99af63175", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "patch": "@@ -1281,7 +1281,7 @@ split_function (basic_block return_bb, struct split_point *split_point,\n      to return void instead of just outputting function with undefined return\n      value.  For structures this affects quality of codegen.  */\n   else if (!split_point->split_part_set_retval\n-           && find_retval (return_bb))\n+           && (retval = find_retval (return_bb)))\n     {\n       bool redirected = true;\n       basic_block new_return_bb = create_basic_block (NULL, 0, return_bb);\n@@ -1305,6 +1305,7 @@ split_function (basic_block return_bb, struct split_point *split_point,\n       e->count = new_return_bb->count;\n       add_bb_to_loop (new_return_bb, current_loops->tree_root);\n       bitmap_set_bit (split_point->split_bbs, new_return_bb->index);\n+      retbnd = find_retbnd (return_bb);\n     }\n   /* When we pass around the value, use existing return block.  */\n   else"}, {"sha": "7ac1418b9b8e0fd24a731405aed602434932c508", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "patch": "@@ -1,3 +1,8 @@\n+2015-12-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/68721\n+\t* gcc.dg/torture/pr68721.c: New testcase.\n+\n 2015-12-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68806"}, {"sha": "297adabc8ba95ade8631dd730ca44bc299e6bc76", "filename": "gcc/testsuite/gcc.dg/torture/pr68721.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68721.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4f4e71c84fc7bcf21f45e315a07b1408f514f75/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68721.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68721.c?ref=d4f4e71c84fc7bcf21f45e315a07b1408f514f75", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int a, b, c, *d, **e = &d;\n+\n+int *\n+fn1 ()\n+{\n+  for (;;)\n+    {\n+      for (; a;)\n+\tif (b)\n+\t  abort ();\n+      break;\n+    }\n+  for (; c;)\n+    ;\n+  return &a;\n+}\n+\n+int\n+main ()\n+{\n+  *e = fn1 ();\n+\n+  if (!d)\n+    abort ();\n+\n+  return 0;\n+}"}]}