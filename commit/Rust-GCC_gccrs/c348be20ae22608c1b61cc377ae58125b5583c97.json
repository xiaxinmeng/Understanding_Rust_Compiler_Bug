{"sha": "c348be20ae22608c1b61cc377ae58125b5583c97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0OGJlMjBhZTIyNjA4YzFiNjFjYzM3N2FlNTgxMjViNTU4M2M5Nw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-08-20T20:26:26Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-08-20T20:26:26Z"}, "message": "re PR libgcj/21692 (unexpected java.lang.NoClassDefFoundError)\n\n\tPR libgcj/21692\n\t* sysdep/pa/descriptor.h: New file.\n\t* configure.host: Use sysdep/pa/descriptor.h on hppa*-*.\n\nFrom-SVN: r103306", "tree": {"sha": "9f84797e3c6a84b09f4cb63db02114be51b19a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f84797e3c6a84b09f4cb63db02114be51b19a3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c348be20ae22608c1b61cc377ae58125b5583c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c348be20ae22608c1b61cc377ae58125b5583c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c348be20ae22608c1b61cc377ae58125b5583c97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c348be20ae22608c1b61cc377ae58125b5583c97/comments", "author": null, "committer": null, "parents": [{"sha": "3c0764fc1e874d271f1f79bc771fc6d8df0875e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0764fc1e874d271f1f79bc771fc6d8df0875e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0764fc1e874d271f1f79bc771fc6d8df0875e8"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "e3c9a6d1959687b036bddef53b69bd3581f6b86c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c348be20ae22608c1b61cc377ae58125b5583c97/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c348be20ae22608c1b61cc377ae58125b5583c97/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c348be20ae22608c1b61cc377ae58125b5583c97", "patch": "@@ -1,3 +1,9 @@\n+2005-08-20  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR libgcj/21692\n+\t* sysdep/pa/descriptor.h: New file.\n+\t* configure.host: Use sysdep/pa/descriptor.h on hppa*-*.\n+\n 2005-08-19  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* Makefile.am (extra_ldflags_libjava): New variable to"}, {"sha": "d84757f7928c8bd17c263767c1f4db04cad8facb", "filename": "libjava/configure.host", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c348be20ae22608c1b61cc377ae58125b5583c97/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c348be20ae22608c1b61cc377ae58125b5583c97/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=c348be20ae22608c1b61cc377ae58125b5583c97", "patch": "@@ -278,10 +278,14 @@ case \"${host}\" in\n esac\n \n case \"${host}\" in\n-  ia64-* | hppa*-*)\n+  ia64-*)\n \tdescriptor_h=sysdep/descriptor-y.h\n \t;;\n \n+  hppa*-*)\n+\tdescriptor_h=sysdep/pa/descriptor.h\n+\t;;\n+\n   rs6000-* | powerpc*-*)\n \tdescriptor_h=sysdep/powerpc/descriptor.h\n \t;;"}, {"sha": "d9888516d9c73e7f071a79848f227874aa665bca", "filename": "libjava/sysdep/pa/descriptor.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c348be20ae22608c1b61cc377ae58125b5583c97/libjava%2Fsysdep%2Fpa%2Fdescriptor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c348be20ae22608c1b61cc377ae58125b5583c97/libjava%2Fsysdep%2Fpa%2Fdescriptor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fpa%2Fdescriptor.h?ref=c348be20ae22608c1b61cc377ae58125b5583c97", "patch": "@@ -0,0 +1,7 @@\n+// Given a function pointer, return the code address.\n+// If the plabel bit is set, mask it off and return the code from the\n+// first word of the function descriptor.  Otherwise, the function\n+// pointer is the code address.\n+\n+#define UNWRAP_FUNCTION_DESCRIPTOR(X) \\\n+  (((unsigned int)(X)) & 2 ? *(void **)(((unsigned int)(X)) & ~3) : (X))"}]}