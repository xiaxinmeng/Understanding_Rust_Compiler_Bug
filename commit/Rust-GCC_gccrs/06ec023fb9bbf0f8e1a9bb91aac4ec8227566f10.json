{"sha": "06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlYzAyM2ZiOWJiZjBmOGUxYTliYjkxYWFjNGVjODIyNzU2NmYxMA==", "commit": {"author": {"name": "Rodney Brown", "email": "rbrown64@csc.com.au", "date": "2002-07-17T01:36:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-07-17T01:36:36Z"}, "message": "i386.c (ix86_expand_int_movcc): In the case where the comparison directly gives a mask suppress addition when...\n\n        * config/i386/i386.c (ix86_expand_int_movcc): In the case where\n        the comparison directly gives a mask suppress addition when cf is\n        zero by complementing the mask.\n\nFrom-SVN: r55505", "tree": {"sha": "cdd3e8b135a3b0c565f29f246081c5a44763d201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdd3e8b135a3b0c565f29f246081c5a44763d201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10/comments", "author": null, "committer": null, "parents": [{"sha": "2aa9948d9b49198538c03a79d77f0aba7d88a504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa9948d9b49198538c03a79d77f0aba7d88a504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aa9948d9b49198538c03a79d77f0aba7d88a504"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "a851ef292bef57e1ae0886fe94ac2189cbeca420", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10", "patch": "@@ -1,3 +1,9 @@\n+2002-07-16  Rodney Brown  <rbrown64@csc.com.au>\n+\n+\t* config/i386/i386.c (ix86_expand_int_movcc): In the case where\n+\tthe comparison directly gives a mask suppress addition when cf is\n+\tzero by complementing the mask.\n+\n 2002-07-16  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* Makefile.in: Delete references to enquire."}, {"sha": "6c2a2b5c77e433781a06d72efcd493d6dffa40e7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=06ec023fb9bbf0f8e1a9bb91aac4ec8227566f10", "patch": "@@ -8666,7 +8666,6 @@ ix86_expand_int_movcc (operands)\n       if ((compare_code == LTU || compare_code == GEU)\n \t  && !second_test && !bypass_test)\n \t{\n-\n \t  /* Detect overlap between destination and compare sources.  */\n \t  rtx tmp = out;\n \n@@ -8723,7 +8722,7 @@ ix86_expand_int_movcc (operands)\n \t      /*\n \t       * cmpl op0,op1\n \t       * sbbl dest,dest\n-\t       * xorl $-1, dest\n+\t       * notl dest\n \t       * [addl dest, cf]\n \t       *\n \t       * Size 8 - 11.\n@@ -8739,11 +8738,20 @@ ix86_expand_int_movcc (operands)\n \t      /*\n \t       * cmpl op0,op1\n \t       * sbbl dest,dest\n+\t       * [notl dest]\n \t       * andl cf - ct, dest\n \t       * [addl dest, ct]\n \t       *\n \t       * Size 8 - 11.\n \t       */\n+\n+\t      if (cf == 0)\n+\t\t{\n+\t\t  cf = ct;\n+\t\t  ct = 0;\n+\t\t  tmp = expand_simple_unop (mode, NOT, tmp, tmp, 1);\n+\t\t}\n+\n \t      tmp = expand_simple_binop (mode, AND,\n \t\t\t\t\t tmp,\n \t\t\t\t\t gen_int_mode (cf - ct, mode),"}]}