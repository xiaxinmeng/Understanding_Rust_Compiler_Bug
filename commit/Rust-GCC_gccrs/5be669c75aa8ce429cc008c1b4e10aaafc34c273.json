{"sha": "5be669c75aa8ce429cc008c1b4e10aaafc34c273", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJlNjY5Yzc1YWE4Y2U0MjljYzAwOGMxYjRlMTBhYWFmYzM0YzI3Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-10T15:06:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-10T15:06:28Z"}, "message": "(simplify_if_then_else): Convert \"a == b ? b : a\" to \"a\".\n\nFrom-SVN: r10698", "tree": {"sha": "ee11a9109b152f74fadec1a943ab50a2bca5d975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee11a9109b152f74fadec1a943ab50a2bca5d975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5be669c75aa8ce429cc008c1b4e10aaafc34c273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be669c75aa8ce429cc008c1b4e10aaafc34c273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be669c75aa8ce429cc008c1b4e10aaafc34c273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be669c75aa8ce429cc008c1b4e10aaafc34c273/comments", "author": null, "committer": null, "parents": [{"sha": "05019f83a3c585af22a1b275c71b3bc8239cd552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05019f83a3c585af22a1b275c71b3bc8239cd552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05019f83a3c585af22a1b275c71b3bc8239cd552"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "df8c73267eb89c97f9b9af5eceed6cf9498c3cb4", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5be669c75aa8ce429cc008c1b4e10aaafc34c273/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5be669c75aa8ce429cc008c1b4e10aaafc34c273/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=5be669c75aa8ce429cc008c1b4e10aaafc34c273", "patch": "@@ -4025,6 +4025,16 @@ simplify_if_then_else (x)\n   if (rtx_equal_p (true, false) && ! side_effects_p (cond))\n     return true;\n \n+  /* Convert a == b ? b : a to \"a\".  */\n+  if (true_code == EQ && ! side_effects_p (cond)\n+      && rtx_equal_p (XEXP (cond, 0), false)\n+      && rtx_equal_p (XEXP (cond, 1), true))\n+    return false;\n+  else if (true_code == NE && ! side_effects_p (cond)\n+\t   && rtx_equal_p (XEXP (cond, 0), true)\n+\t   && rtx_equal_p (XEXP (cond, 1), false))\n+    return true;\n+\n   /* Look for cases where we have (abs x) or (neg (abs X)).  */\n \n   if (GET_MODE_CLASS (mode) == MODE_INT"}]}