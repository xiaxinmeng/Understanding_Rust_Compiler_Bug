{"sha": "0c92f895e0b92b8057b84f8584873258760d227b", "node_id": "C_kwDOANBUbNoAKDBjOTJmODk1ZTBiOTJiODA1N2I4NGY4NTg0ODczMjU4NzYwZDIyN2I", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gmail.com", "date": "2022-08-30T14:33:51Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gmail.com", "date": "2022-08-30T14:33:51Z"}, "message": "Change get_std_name_hint to use generated hash table\n\nThe get_std_name_hint function so far uses linear search to locate\nmatching entries.  After adding more hint entries this might not be\nappropriate anymore.  Therefore this patch also replaces the linear\narray with a gperf-generated hash table.\n\ncontrib/ChangeLog\n\n\t* gcc_update (files_and_dependencies): Add rule for\n\tgcc/cp/std-name-hint.h.\n\ngcc/cp/ChangeLog\n\n\t* Make-lang.in: Add rule to rebuild std-name-hint.h from\n\tstd-name-hint.gperf.\n\t* name-lookup.cc (get_std_name_hint): Remove hints array.\n\tUse gperf-generated class std_name_hint_lookup.\n\tInclude \"std-name-hint.h\".\n\t* std-name-hint.gperf: New file.\n\t* std-name-hint.h: New file.  Generated from the .gperf file.", "tree": {"sha": "f08fb4ccea13c9a7a1dd80c0957c7ff4226da3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f08fb4ccea13c9a7a1dd80c0957c7ff4226da3cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c92f895e0b92b8057b84f8584873258760d227b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAARcAAAAHc3NoLXJzYQAAAAMBAAEAAAEBAMKfEGh5/Au2AFB/l9bACs\nRmvlVSgSQQ+EYRyT2GCQQfows1cJMsm+CSq2ZSawHN23klH/s8YQNoFm+PLxCAB+dSFrMh\nwGFK8J1wjOg8gjxyfSaSoh8nHQaqp45RDji5k36XeVnI9viCQCNsq1zZsmcmxG3bqPuW3s\nFn0CBJnwfT3teE1eroZLgx9FCmAChAwPZPTx45Scu5MEHsTxVAG18+9ih+JUEdKMVmIiG2\nxMLOcSknHOYZmD6ulwuun7zyHe4N0oCSkaLlTgtHeFRpGaYoFOUlq1BujsGgiicKFPcYnd\nLJIPZMxkmD7yzpf68hcVSpyxecBV/kqLaz+D1oRPMAAAADZ2l0AAAAAAAAAAZzaGE1MTIA\nAAEUAAAADHJzYS1zaGEyLTUxMgAAAQCsxNGZNo+IBWejFI13N2sKGAW8kF8swjgO+dXfU3\n6337co1+yPGQ0NDQg4s62g1bOR0PPLk35PhfTFSNTGC1o4Z2Q74Yb3Kn7XfruavfV601PF\n/UeleIsS7nvDmfRU0abLTq2fnrb6xlVyu6QCEXLH8U2olh12HSAhQGmsvR5CB/23VCUxT9\nDoT/x68pdq1TV3+pK0Ak0eN8HnknyVuH6A109PRmMXusdXVEGOqnTjapXxDHRNwmnw+s+n\nM6UeF63fLUfXrhLu+YkK2oTXLSGBwXWqqfv91MT7e6GTFvOqiPDHiMBrjno5hxCnXp6+Ic\nHFEcf+KNCDaImZ1yUaHoM3\n-----END SSH SIGNATURE-----", "payload": "tree f08fb4ccea13c9a7a1dd80c0957c7ff4226da3cc\nparent 1ddf31af2f3fbfba45882a95dd6eb81bae59f90a\nauthor Ulrich Drepper <drepper@gmail.com> 1661870031 +0200\ncommitter Ulrich Drepper <drepper@gmail.com> 1661870031 +0200\n\nChange get_std_name_hint to use generated hash table\n\nThe get_std_name_hint function so far uses linear search to locate\nmatching entries.  After adding more hint entries this might not be\nappropriate anymore.  Therefore this patch also replaces the linear\narray with a gperf-generated hash table.\n\ncontrib/ChangeLog\n\n\t* gcc_update (files_and_dependencies): Add rule for\n\tgcc/cp/std-name-hint.h.\n\ngcc/cp/ChangeLog\n\n\t* Make-lang.in: Add rule to rebuild std-name-hint.h from\n\tstd-name-hint.gperf.\n\t* name-lookup.cc (get_std_name_hint): Remove hints array.\n\tUse gperf-generated class std_name_hint_lookup.\n\tInclude \"std-name-hint.h\".\n\t* std-name-hint.gperf: New file.\n\t* std-name-hint.h: New file.  Generated from the .gperf file.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c92f895e0b92b8057b84f8584873258760d227b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c92f895e0b92b8057b84f8584873258760d227b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c92f895e0b92b8057b84f8584873258760d227b/comments", "author": {"login": "drepper", "id": 2918631, "node_id": "MDQ6VXNlcjI5MTg2MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2918631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drepper", "html_url": "https://github.com/drepper", "followers_url": "https://api.github.com/users/drepper/followers", "following_url": "https://api.github.com/users/drepper/following{/other_user}", "gists_url": "https://api.github.com/users/drepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/drepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drepper/subscriptions", "organizations_url": "https://api.github.com/users/drepper/orgs", "repos_url": "https://api.github.com/users/drepper/repos", "events_url": "https://api.github.com/users/drepper/events{/privacy}", "received_events_url": "https://api.github.com/users/drepper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "drepper", "id": 2918631, "node_id": "MDQ6VXNlcjI5MTg2MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2918631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drepper", "html_url": "https://github.com/drepper", "followers_url": "https://api.github.com/users/drepper/followers", "following_url": "https://api.github.com/users/drepper/following{/other_user}", "gists_url": "https://api.github.com/users/drepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/drepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drepper/subscriptions", "organizations_url": "https://api.github.com/users/drepper/orgs", "repos_url": "https://api.github.com/users/drepper/repos", "events_url": "https://api.github.com/users/drepper/events{/privacy}", "received_events_url": "https://api.github.com/users/drepper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ddf31af2f3fbfba45882a95dd6eb81bae59f90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ddf31af2f3fbfba45882a95dd6eb81bae59f90a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ddf31af2f3fbfba45882a95dd6eb81bae59f90a"}], "stats": {"total": 1203, "additions": 979, "deletions": 224}, "files": [{"sha": "dd8b6d0b6bf1c4ce89930cdd56e9850932430f6a", "filename": "contrib/gcc_update", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92f895e0b92b8057b84f8584873258760d227b/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92f895e0b92b8057b84f8584873258760d227b/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=0c92f895e0b92b8057b84f8584873258760d227b", "patch": "@@ -94,6 +94,7 @@ gcc/config/rs6000/rs6000-tables.opt: gcc/config/rs6000/rs6000-cpus.def gcc/confi\n gcc/config/rs6000/fusion.md: gcc/config/rs6000/genfusion.pl\n # And then, language-specific files\n gcc/cp/cfns.h: gcc/cp/cfns.gperf\n+gcc/cp/std-name-hint.h: gcc/cp/std-name-hint.gperf\n # testsuite\n # Without this, _Pragma3.c can have a false negative.\n gcc/testsuite/gcc.dg/cpp/_Pragma3.c: gcc/testsuite/gcc.dg/cpp/mi1c.h"}, {"sha": "38d8eeed1f0546052f61ba2f09e4b183e93033a9", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=0c92f895e0b92b8057b84f8584873258760d227b", "patch": "@@ -153,6 +153,15 @@ endif\n \tgperf -o -C -E -k '1-6,$$' -j1 -D -N 'libc_name_p' -L C++ \\\n \t\t$(srcdir)/cp/cfns.gperf --output-file $(srcdir)/cp/cfns.h\n \n+# The same procedure for the std-name-hint.gperf file.\n+ifeq ($(ENABLE_MAINTAINER_RULES), true)\n+$(srcdir)/cp/std-name-hint.h: $(srcdir)/cp/std-name-hint.gperf\n+else\n+$(srcdir)/cp/std-name-hint.h:\n+endif\n+\tgperf -o -C -E -k '1,2,7,11,$$' -D -N find -L C++ \\\n+\t\t$(srcdir)/cp/std-name-hint.gperf --output-file $(srcdir)/cp/std-name-hint.h\n+\n cc1plus.fda: ../stage1-gcc/cc1plus$(exeext) ../prev-gcc/$(PERF_DATA)\n \t$(CREATE_GCOV) -binary ../stage1-gcc/cc1plus$(exeext) -gcov cc1plus.fda -profile ../prev-gcc/$(PERF_DATA) -gcov_version 1\n "}, {"sha": "f89a1dc411182af8b1a809ed2d76d53e4111aa48", "filename": "gcc/cp/name-lookup.cc", "status": "modified", "additions": 7, "deletions": 224, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2Fname-lookup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2Fname-lookup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.cc?ref=0c92f895e0b92b8057b84f8584873258760d227b", "patch": "@@ -6691,20 +6691,14 @@ suggest_alternatives_in_other_namespaces (location_t location, tree name)\n }\n \n /* A well-known name within the C++ standard library, returned by\n-   get_std_name_hint.  */\n+   get_std_name_hint.\n \n-struct std_name_hint\n-{\n-  /* A name within \"std::\".  */\n-  const char *name;\n-\n-  /* The header name defining it within the C++ Standard Library\n-     (with '<' and '>').  */\n-  const char *header;\n+   The gperf-generated file contains the definition of the class\n+   \"std_name_hint_lookup\" with a static member function which\n+   returns the pointer to a structure \"std_name_hint\" which\n+   is also defined in that file.  */\n \n-  /* The dialect of C++ in which this was added.  */\n-  enum cxx_dialect min_dialect;\n-};\n+#include \"std-name-hint.h\"\n \n /* Subroutine of maybe_suggest_missing_header for handling unrecognized names\n    for some of the most common names within \"std::\".\n@@ -6713,218 +6707,7 @@ struct std_name_hint\n static const std_name_hint *\n get_std_name_hint (const char *name)\n {\n-  static const std_name_hint hints[] = {\n-    /* <any>.  */\n-    {\"any\", \"<any>\", cxx17},\n-    {\"any_cast\", \"<any>\", cxx17},\n-    {\"make_any\", \"<any>\", cxx17},\n-    /* <array>.  */\n-    {\"array\", \"<array>\", cxx11},\n-    {\"to_array\", \"<array>\", cxx20},\n-    /* <atomic>.  */\n-    {\"atomic\", \"<atomic>\", cxx11},\n-    {\"atomic_flag\", \"<atomic>\", cxx11},\n-    {\"atomic_ref\", \"<atomic>\", cxx20},\n-    /* <bitset>.  */\n-    {\"bitset\", \"<bitset>\", cxx11},\n-    /* <compare> */\n-    {\"weak_equality\", \"<compare>\", cxx20},\n-    {\"strong_equality\", \"<compare>\", cxx20},\n-    {\"partial_ordering\", \"<compare>\", cxx20},\n-    {\"weak_ordering\", \"<compare>\", cxx20},\n-    {\"strong_ordering\", \"<compare>\", cxx20},\n-    /* <complex>.  */\n-    {\"complex\", \"<complex>\", cxx98},\n-    {\"complex_literals\", \"<complex>\", cxx14},\n-    /* <condition_variable>. */\n-    {\"condition_variable\", \"<condition_variable>\", cxx11},\n-    {\"condition_variable_any\", \"<condition_variable>\", cxx11},\n-    /* <cstddef>.  */\n-    {\"byte\", \"<cstddef>\", cxx17},\n-    /* <deque>.  */\n-    {\"deque\", \"<deque>\", cxx98},\n-    /* <forward_list>.  */\n-    {\"forward_list\", \"<forward_list>\", cxx11},\n-    /* <fstream>.  */\n-    {\"basic_filebuf\", \"<fstream>\", cxx98},\n-    {\"basic_ifstream\", \"<fstream>\", cxx98},\n-    {\"basic_ofstream\", \"<fstream>\", cxx98},\n-    {\"basic_fstream\", \"<fstream>\", cxx98},\n-    {\"fstream\", \"<fstream>\", cxx98},\n-    {\"ifstream\", \"<fstream>\", cxx98},\n-    {\"ofstream\", \"<fstream>\", cxx98},\n-    /* <functional>.  */\n-    {\"bind\", \"<functional>\", cxx11},\n-    {\"bind_front\", \"<functional>\", cxx20},\n-    {\"function\", \"<functional>\", cxx11},\n-    {\"hash\", \"<functional>\", cxx11},\n-    {\"invoke\", \"<functional>\", cxx17},\n-    {\"mem_fn\", \"<functional>\", cxx11},\n-    {\"not_fn\", \"<functional>\", cxx17},\n-    {\"reference_wrapper\", \"<functional>\", cxx11},\n-    {\"unwrap_reference\", \"<functional>\", cxx20},\n-    {\"unwrap_reference_t\", \"<functional>\", cxx20},\n-    {\"unwrap_ref_decay\", \"<functional>\", cxx20},\n-    {\"unwrap_ref_decay_t\", \"<functional>\", cxx20},\n-    /* <future>. */\n-    {\"async\", \"<future>\", cxx11},\n-    {\"future\", \"<future>\", cxx11},\n-    {\"packaged_task\", \"<future>\", cxx11},\n-    {\"promise\", \"<future>\", cxx11},\n-    /* <iostream>.  */\n-    {\"cin\", \"<iostream>\", cxx98},\n-    {\"cout\", \"<iostream>\", cxx98},\n-    {\"cerr\", \"<iostream>\", cxx98},\n-    {\"clog\", \"<iostream>\", cxx98},\n-    {\"wcin\", \"<iostream>\", cxx98},\n-    {\"wcout\", \"<iostream>\", cxx98},\n-    {\"wclog\", \"<iostream>\", cxx98},\n-    /* <istream>.  */\n-    {\"istream\", \"<istream>\", cxx98},\n-    /* <iterator>.  */\n-    {\"advance\", \"<iterator>\", cxx98},\n-    {\"back_inserter\", \"<iterator>\", cxx98},\n-    {\"begin\", \"<iterator>\", cxx11},\n-    {\"distance\", \"<iterator>\", cxx98},\n-    {\"end\", \"<iterator>\", cxx11},\n-    {\"front_inserter\", \"<iterator>\", cxx98},\n-    {\"inserter\", \"<iterator>\", cxx98},\n-    {\"istream_iterator\", \"<iterator>\", cxx98},\n-    {\"istreambuf_iterator\", \"<iterator>\", cxx98},\n-    {\"iterator_traits\", \"<iterator>\", cxx98},\n-    {\"move_iterator\", \"<iterator>\", cxx11},\n-    {\"next\", \"<iterator>\", cxx11},\n-    {\"ostream_iterator\", \"<iterator>\", cxx98},\n-    {\"ostreambuf_iterator\", \"<iterator>\", cxx98},\n-    {\"prev\", \"<iterator>\", cxx11},\n-    {\"reverse_iterator\", \"<iterator>\", cxx98},\n-    /* <ostream>.  */\n-    {\"ostream\", \"<ostream>\", cxx98},\n-    /* <list>.  */\n-    {\"list\", \"<list>\", cxx98},\n-    /* <map>.  */\n-    {\"map\", \"<map>\", cxx98},\n-    {\"multimap\", \"<map>\", cxx98},\n-    /* <memory>.  */\n-    {\"allocate_shared\", \"<memory>\", cxx11},\n-    {\"allocator\", \"<memory>\", cxx98},\n-    {\"allocator_traits\", \"<memory>\", cxx11},\n-    {\"make_shared\", \"<memory>\", cxx11},\n-    {\"make_unique\", \"<memory>\", cxx14},\n-    {\"shared_ptr\", \"<memory>\", cxx11},\n-    {\"unique_ptr\", \"<memory>\", cxx11},\n-    {\"weak_ptr\", \"<memory>\", cxx11},\n-    /* <memory_resource>.  */\n-    {\"pmr\", \"<memory_resource>\", cxx17},\n-    /* <mutex>.  */\n-    {\"mutex\", \"<mutex>\", cxx11},\n-    {\"timed_mutex\", \"<mutex>\", cxx11},\n-    {\"recursive_mutex\", \"<mutex>\", cxx11},\n-    {\"recursive_timed_mutex\", \"<mutex>\", cxx11},\n-    {\"once_flag\", \"<mutex>\", cxx11},\n-    {\"call_once,\", \"<mutex>\", cxx11},\n-    {\"lock\", \"<mutex>\", cxx11},\n-    {\"scoped_lock\", \"<mutex>\", cxx17},\n-    {\"try_lock\", \"<mutex>\", cxx11},\n-    {\"lock_guard\", \"<mutex>\", cxx11},\n-    {\"unique_lock\", \"<mutex>\", cxx11},\n-    /* <optional>. */\n-    {\"optional\", \"<optional>\", cxx17},\n-    {\"make_optional\", \"<optional>\", cxx17},\n-    /* <ostream>.  */\n-    {\"ostream\", \"<ostream>\", cxx98},\n-    {\"wostream\", \"<ostream>\", cxx98},\n-    {\"ends\", \"<ostream>\", cxx98},\n-    {\"flush\", \"<ostream>\", cxx98},\n-    {\"endl\", \"<ostream>\", cxx98},\n-    /* <queue>.  */\n-    {\"queue\", \"<queue>\", cxx98},\n-    {\"priority_queue\", \"<queue>\", cxx98},\n-    /* <set>.  */\n-    {\"set\", \"<set>\", cxx98},\n-    {\"multiset\", \"<set>\", cxx98},\n-    /* <shared_mutex>.  */\n-    {\"shared_lock\", \"<shared_mutex>\", cxx14},\n-    {\"shared_mutex\", \"<shared_mutex>\", cxx17},\n-    {\"shared_timed_mutex\", \"<shared_mutex>\", cxx14},\n-    /* <source_location>.  */\n-    {\"source_location\", \"<source_location>\", cxx20},\n-    /* <sstream>.  */\n-    {\"basic_stringbuf\", \"<sstream>\", cxx98},\n-    {\"basic_istringstream\", \"<sstream>\", cxx98},\n-    {\"basic_ostringstream\", \"<sstream>\", cxx98},\n-    {\"basic_stringstream\", \"<sstream>\", cxx98},\n-    {\"istringstream\", \"<sstream>\", cxx98},\n-    {\"ostringstream\", \"<sstream>\", cxx98},\n-    {\"stringstream\", \"<sstream>\", cxx98},\n-    /* <stack>.  */\n-    {\"stack\", \"<stack>\", cxx98},\n-    /* <string>.  */\n-    {\"basic_string\", \"<string>\", cxx98},\n-    {\"string\", \"<string>\", cxx98},\n-    {\"wstring\", \"<string>\", cxx98},\n-    {\"u8string\", \"<string>\", cxx20},\n-    {\"u16string\", \"<string>\", cxx11},\n-    {\"u32string\", \"<string>\", cxx11},\n-    /* <string_view>.  */\n-    {\"basic_string_view\", \"<string_view>\", cxx17},\n-    {\"string_view\", \"<string_view>\", cxx17},\n-    /* <thread>.  */\n-    {\"thread\", \"<thread>\", cxx11},\n-    {\"this_thread\", \"<thread>\", cxx11},\n-    /* <tuple>.  */\n-    {\"apply\", \"<tuple>\", cxx17},\n-    {\"forward_as_tuple\", \"<tuple>\", cxx11},\n-    {\"make_from_tuple\", \"<tuple>\", cxx17},\n-    {\"make_tuple\", \"<tuple>\", cxx11},\n-    {\"tie\", \"<tuple>\", cxx11},\n-    {\"tuple\", \"<tuple>\", cxx11},\n-    {\"tuple_cat\", \"<tuple>\", cxx11},\n-    {\"tuple_element\", \"<tuple>\", cxx11},\n-    {\"tuple_element_t\", \"<tuple>\", cxx14},\n-    {\"tuple_size\", \"<tuple>\", cxx11},\n-    {\"tuple_size_v\", \"<tuple>\", cxx17},\n-    /* <type_traits>.  */\n-    {\"enable_if\", \"<type_traits>\", cxx11},\n-    {\"enable_if_t\", \"<type_traits>\", cxx14},\n-    {\"invoke_result\", \"<type_traits>\", cxx17},\n-    {\"invoke_result_t\", \"<type_traits>\", cxx17},\n-    {\"remove_cvref\", \"<type_traits>\", cxx20},\n-    {\"remove_cvref_t\", \"<type_traits>\", cxx20},\n-    {\"type_identity\", \"<type_traits>\", cxx20},\n-    {\"type_identity_t\", \"<type_traits>\", cxx20},\n-    {\"void_t\", \"<type_traits>\", cxx17},\n-    {\"conjunction\", \"<type_traits>\", cxx17},\n-    {\"conjunction_v\", \"<type_traits>\", cxx17},\n-    {\"disjunction\", \"<type_traits>\", cxx17},\n-    {\"disjunction_v\", \"<type_traits>\", cxx17},\n-    {\"negation\", \"<type_traits>\", cxx17},\n-    {\"negation_v\", \"<type_traits>\", cxx17},\n-    /* <unordered_map>.  */\n-    {\"unordered_map\", \"<unordered_map>\", cxx11},\n-    {\"unordered_multimap\", \"<unordered_map>\", cxx11},\n-    /* <unordered_set>.  */\n-    {\"unordered_set\", \"<unordered_set>\", cxx11},\n-    {\"unordered_multiset\", \"<unordered_set>\", cxx11},\n-    /* <utility>.  */\n-    {\"declval\", \"<utility>\", cxx11},\n-    {\"forward\", \"<utility>\", cxx11},\n-    {\"make_pair\", \"<utility>\", cxx98},\n-    {\"move\", \"<utility>\", cxx11},\n-    {\"pair\", \"<utility>\", cxx98},\n-    /* <variant>.  */\n-    {\"variant\", \"<variant>\", cxx17},\n-    {\"visit\", \"<variant>\", cxx17},\n-    /* <vector>.  */\n-    {\"vector\", \"<vector>\", cxx98},\n-  };\n-  const size_t num_hints = ARRAY_SIZE (hints);\n-  for (size_t i = 0; i < num_hints; i++)\n-    {\n-      if (strcmp (name, hints[i].name) == 0)\n-\treturn &hints[i];\n-    }\n-  return NULL;\n+  return std_name_hint_lookup::find(name, strlen(name));\n }\n \n /* Describe DIALECT.  */"}, {"sha": "976b90c339104d3462242282f33082170347b249", "filename": "gcc/cp/std-name-hint.gperf", "status": "added", "additions": 287, "deletions": 0, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2Fstd-name-hint.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2Fstd-name-hint.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fstd-name-hint.gperf?ref=0c92f895e0b92b8057b84f8584873258760d227b", "patch": "@@ -0,0 +1,287 @@\n+%language=C++\n+%define class-name std_name_hint_lookup\n+%struct-type\n+%{\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+%}\n+struct std_name_hint\n+{\n+  /* A name within \"std::\".  */\n+  const char *name;\n+\n+  /* The header name defining it within the C++ Standard Library\n+     (with '<' and '>').  */\n+  const char* header;\n+\n+  /* The dialect of C++ in which this was added.  */\n+  enum cxx_dialect min_dialect;\n+};\n+%%\n+# The standard-defined types, functions, and options in the std:: namespace\n+# as defined in the C++ language specification.  The result is used in the\n+# get_std_name_hint functions.\n+#   throws an exception.\n+#\n+# <any>\n+any, \"<any>\", cxx17\n+any_cast, \"<any>\", cxx17\n+make_any, \"<any>\", cxx17\n+# <array>\n+array, \"<array>\", cxx11\n+to_array, \"<array>\", cxx20\n+# <atomic>\n+atomic, \"<atomic>\", cxx11\n+atomic_flag, \"<atomic>\", cxx11\n+atomic_ref, \"<atomic>\", cxx20\n+# <bitset>\n+bitset, \"<bitset>\", cxx11\n+# <compare>\n+weak_equality, \"<compare>\", cxx20\n+strong_equality, \"<compare>\", cxx20\n+partial_ordering, \"<compare>\", cxx20\n+weak_ordering, \"<compare>\", cxx20\n+strong_ordering, \"<compare>\", cxx20\n+# <complex>\n+complex, \"<complex>\", cxx98\n+complex_literals, \"<complex>\", cxx14\n+# <condition_variable>. */\n+condition_variable, \"<condition_variable>\", cxx11\n+condition_variable_any, \"<condition_variable>\", cxx11\n+# <cstddef>\n+byte, \"<cstddef>\", cxx17\n+# <deque>\n+deque, \"<deque>\", cxx98\n+# <forward_list>\n+forward_list, \"<forward_list>\", cxx11\n+# <fstream>\n+basic_filebuf, \"<fstream>\", cxx98\n+basic_ifstream, \"<fstream>\", cxx98\n+basic_ofstream, \"<fstream>\", cxx98\n+basic_fstream, \"<fstream>\", cxx98\n+fstream, \"<fstream>\", cxx98\n+ifstream, \"<fstream>\", cxx98\n+ofstream, \"<fstream>\", cxx98\n+# <functional>\n+bind, \"<functional>\", cxx11\n+bind_front, \"<functional>\", cxx20\n+function, \"<functional>\", cxx11\n+hash, \"<functional>\", cxx11\n+invoke, \"<functional>\", cxx17\n+mem_fn, \"<functional>\", cxx11\n+not_fn, \"<functional>\", cxx17\n+reference_wrapper, \"<functional>\", cxx11\n+unwrap_reference, \"<functional>\", cxx20\n+unwrap_reference_t, \"<functional>\", cxx20\n+unwrap_ref_decay, \"<functional>\", cxx20\n+unwrap_ref_decay_t, \"<functional>\", cxx20\n+# <future>. */\n+async, \"<future>\", cxx11\n+future, \"<future>\", cxx11\n+packaged_task, \"<future>\", cxx11\n+promise, \"<future>\", cxx11\n+# <iomanip>\n+resetiosflags, \"<iomanip>\", cxx98\n+setiosflags, \"<iomanip>\", cxx98\n+setbase, \"<iomanip>\", cxx98\n+setfill, \"<iomanip>\", cxx98\n+setprecision, \"<iomanip>\", cxx98\n+setw, \"<iomanip>\", cxx98\n+get_money, \"<iomanip>\", cxx11\n+put_money, \"<iomanip>\", cxx11\n+get_time, \"<iomanip>\", cxx11\n+put_time, \"<iomanip>\", cxx11\n+quoted, \"<iomanip>\", cxx14\n+# <ios>\n+boolalpha, \"<ios>\", cxx98\n+noboolalpha, \"<ios>\", cxx98\n+showbase, \"<ios>\", cxx98\n+noshowbase, \"<ios>\", cxx98\n+showpoint, \"<ios>\", cxx98\n+noshowpoint, \"<ios>\", cxx98\n+showpos, \"<ios>\", cxx98\n+noshowpos, \"<ios>\", cxx98\n+skipws, \"<ios>\", cxx98\n+noskipws, \"<ios>\", cxx98\n+uppercase, \"<ios>\", cxx98\n+nouppercase, \"<ios>\", cxx98\n+unitbuf, \"<ios>\", cxx98\n+nounitbuf, \"<ios>\", cxx98\n+internal, \"<ios>\", cxx98\n+left, \"<ios>\", cxx98\n+right, \"<ios>\", cxx98\n+dec, \"<ios>\", cxx98\n+hex, \"<ios>\", cxx98\n+oct, \"<ios>\", cxx98\n+fixed, \"<ios>\", cxx98\n+scientific, \"<ios>\", cxx98\n+hexfloat, \"<ios>\", cxx11\n+defaultfloat, \"<ios>\", cxx11\n+# <iostream>\n+cin, \"<iostream>\", cxx98\n+cout, \"<iostream>\", cxx98\n+cerr, \"<iostream>\", cxx98\n+clog, \"<iostream>\", cxx98\n+wcin, \"<iostream>\", cxx98\n+wcout, \"<iostream>\", cxx98\n+wclog, \"<iostream>\", cxx98\n+# <istream>\n+istream, \"<istream>\", cxx98\n+ws, \"<istream>\", cxx98\n+# <iterator>\n+advance, \"<iterator>\", cxx98\n+back_inserter, \"<iterator>\", cxx98\n+begin, \"<iterator>\", cxx11\n+distance, \"<iterator>\", cxx98\n+end, \"<iterator>\", cxx11\n+front_inserter, \"<iterator>\", cxx98\n+inserter, \"<iterator>\", cxx98\n+istream_iterator, \"<iterator>\", cxx98\n+istreambuf_iterator, \"<iterator>\", cxx98\n+iterator_traits, \"<iterator>\", cxx98\n+move_iterator, \"<iterator>\", cxx11\n+next, \"<iterator>\", cxx11\n+ostream_iterator, \"<iterator>\", cxx98\n+ostreambuf_iterator, \"<iterator>\", cxx98\n+prev, \"<iterator>\", cxx11\n+reverse_iterator, \"<iterator>\", cxx98\n+# <ostream>\n+ostream, \"<ostream>\", cxx98\n+ends, \"<ostream>\", cxx98\n+flush, \"<ostream>\", cxx98\n+endl, \"<ostream>\", cxx98\n+emit_on_flush, \"<ostream>\", cxx20\n+noemit_on_flush, \"<ostream>\", cxx20\n+flush_emit, \"<ostream>\", cxx20\n+# <list>\n+list, \"<list>\", cxx98\n+# <map>\n+map, \"<map>\", cxx98\n+multimap, \"<map>\", cxx98\n+# <memory>\n+allocate_shared, \"<memory>\", cxx11\n+allocator, \"<memory>\", cxx98\n+allocator_traits, \"<memory>\", cxx11\n+make_shared, \"<memory>\", cxx11\n+make_unique, \"<memory>\", cxx14\n+shared_ptr, \"<memory>\", cxx11\n+unique_ptr, \"<memory>\", cxx11\n+weak_ptr, \"<memory>\", cxx11\n+# <memory_resource>\n+pmr, \"<memory_resource>\", cxx17\n+# <mutex>\n+mutex, \"<mutex>\", cxx11\n+timed_mutex, \"<mutex>\", cxx11\n+recursive_mutex, \"<mutex>\", cxx11\n+recursive_timed_mutex, \"<mutex>\", cxx11\n+once_flag, \"<mutex>\", cxx11\n+call_once, \"<mutex>\", cxx11\n+lock, \"<mutex>\", cxx11\n+scoped_lock, \"<mutex>\", cxx17\n+try_lock, \"<mutex>\", cxx11\n+lock_guard, \"<mutex>\", cxx11\n+unique_lock, \"<mutex>\", cxx11\n+# <optional>. */\n+optional, \"<optional>\", cxx17\n+make_optional, \"<optional>\", cxx17\n+# <ostream>\n+ostream, \"<ostream>\", cxx98\n+wostream, \"<ostream>\", cxx98\n+ends, \"<ostream>\", cxx98\n+flush, \"<ostream>\", cxx98\n+endl, \"<ostream>\", cxx98\n+# <queue>\n+queue, \"<queue>\", cxx98\n+priority_queue, \"<queue>\", cxx98\n+# <set>\n+set, \"<set>\", cxx98\n+multiset, \"<set>\", cxx98\n+# <shared_mutex>\n+shared_lock, \"<shared_mutex>\", cxx14\n+shared_mutex, \"<shared_mutex>\", cxx17\n+shared_timed_mutex, \"<shared_mutex>\", cxx14\n+# <source_location>\n+source_location, \"<source_location>\", cxx20\n+# <sstream>\n+basic_stringbuf, \"<sstream>\", cxx98\n+basic_istringstream, \"<sstream>\", cxx98\n+basic_ostringstream, \"<sstream>\", cxx98\n+basic_stringstream, \"<sstream>\", cxx98\n+istringstream, \"<sstream>\", cxx98\n+ostringstream, \"<sstream>\", cxx98\n+stringstream, \"<sstream>\", cxx98\n+# <stack>\n+stack, \"<stack>\", cxx98\n+# <string>\n+basic_string, \"<string>\", cxx98\n+string, \"<string>\", cxx98\n+wstring, \"<string>\", cxx98\n+u8string, \"<string>\", cxx20\n+u16string, \"<string>\", cxx11\n+u32string, \"<string>\", cxx11\n+# <string_view>\n+basic_string_view, \"<string_view>\", cxx17\n+string_view, \"<string_view>\", cxx17\n+# <thread>\n+thread, \"<thread>\", cxx11\n+this_thread, \"<thread>\", cxx11\n+# <tuple>\n+apply, \"<tuple>\", cxx17\n+forward_as_tuple, \"<tuple>\", cxx11\n+make_from_tuple, \"<tuple>\", cxx17\n+make_tuple, \"<tuple>\", cxx11\n+tie, \"<tuple>\", cxx11\n+tuple, \"<tuple>\", cxx11\n+tuple_cat, \"<tuple>\", cxx11\n+tuple_element, \"<tuple>\", cxx11\n+tuple_element_t, \"<tuple>\", cxx14\n+tuple_size, \"<tuple>\", cxx11\n+tuple_size_v, \"<tuple>\", cxx17\n+# <type_traits>\n+enable_if, \"<type_traits>\", cxx11\n+enable_if_t, \"<type_traits>\", cxx14\n+invoke_result, \"<type_traits>\", cxx17\n+invoke_result_t, \"<type_traits>\", cxx17\n+remove_cvref, \"<type_traits>\", cxx20\n+remove_cvref_t, \"<type_traits>\", cxx20\n+type_identity, \"<type_traits>\", cxx20\n+type_identity_t, \"<type_traits>\", cxx20\n+void_t, \"<type_traits>\", cxx17\n+conjunction, \"<type_traits>\", cxx17\n+conjunction_v, \"<type_traits>\", cxx17\n+disjunction, \"<type_traits>\", cxx17\n+disjunction_v, \"<type_traits>\", cxx17\n+negation, \"<type_traits>\", cxx17\n+negation_v, \"<type_traits>\", cxx17\n+# <unordered_map>\n+unordered_map, \"<unordered_map>\", cxx11\n+unordered_multimap, \"<unordered_map>\", cxx11\n+# <unordered_set>\n+unordered_set, \"<unordered_set>\", cxx11\n+unordered_multiset, \"<unordered_set>\", cxx11\n+# <utility>\n+declval, \"<utility>\", cxx11\n+forward, \"<utility>\", cxx11\n+make_pair, \"<utility>\", cxx98\n+move, \"<utility>\", cxx11\n+pair, \"<utility>\", cxx98\n+# <variant>\n+variant, \"<variant>\", cxx17\n+visit, \"<variant>\", cxx17\n+# <vector>\n+vector, \"<vector>\", cxx98"}, {"sha": "c48eac30f9099962525b564afbcb77175009128d", "filename": "gcc/cp/std-name-hint.h", "status": "added", "additions": 675, "deletions": 0, "changes": 675, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2Fstd-name-hint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92f895e0b92b8057b84f8584873258760d227b/gcc%2Fcp%2Fstd-name-hint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fstd-name-hint.h?ref=0c92f895e0b92b8057b84f8584873258760d227b", "patch": "@@ -0,0 +1,675 @@\n+/* C++ code produced by gperf version 3.1 */\n+/* Command-line: gperf -o -C -E -D -N find -L C++ --output-file std-name-hint.h -k'1,2,7,11,$' std-name-hint.gperf  */\n+\n+#if !((' ' == 32) && ('!' == 33) && ('\"' == 34) && ('#' == 35) \\\n+      && ('%' == 37) && ('&' == 38) && ('\\'' == 39) && ('(' == 40) \\\n+      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \\\n+      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \\\n+      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \\\n+      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \\\n+      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \\\n+      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \\\n+      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \\\n+      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \\\n+      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \\\n+      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \\\n+      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \\\n+      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \\\n+      && ('Z' == 90) && ('[' == 91) && ('\\\\' == 92) && (']' == 93) \\\n+      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \\\n+      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \\\n+      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \\\n+      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \\\n+      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \\\n+      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \\\n+      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \\\n+      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))\n+/* The character set is not based on ISO-646.  */\n+#error \"gperf generated tables don't work with this execution character set. Please report a bug to <bug-gperf@gnu.org>.\"\n+#endif\n+\n+#line 4 \"std-name-hint.gperf\"\n+\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+#line 23 \"std-name-hint.gperf\"\n+struct std_name_hint\n+{\n+  /* A name within \"std::\".  */\n+  const char *name;\n+\n+  /* The header name defining it within the C++ Standard Library\n+     (with '<' and '>').  */\n+  const char* header;\n+\n+  /* The dialect of C++ in which this was added.  */\n+  enum cxx_dialect min_dialect;\n+};\n+/* maximum key range = 626, duplicates = 4 */\n+\n+class std_name_hint_lookup\n+{\n+private:\n+  static inline unsigned int hash (const char *str, size_t len);\n+public:\n+  static const struct std_name_hint *find (const char *str, size_t len);\n+};\n+\n+inline unsigned int\n+std_name_hint_lookup::hash (const char *str, size_t len)\n+{\n+  static const unsigned short asso_values[] =\n+    {\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635,   5,\n+      635,   0, 635, 635, 635, 635,  25, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635,  45, 635,  25,  70, 165,\n+       20,   0,  35, 225, 190,  95, 635, 120, 183,  10,\n+        5,  25, 165,   5,   5,  10,   0,  55,   4, 143,\n+      115, 229, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635, 635, 635, 635, 635,\n+      635, 635, 635, 635, 635, 635\n+    };\n+  unsigned int hval = len;\n+\n+  switch (hval)\n+    {\n+      default:\n+        hval += asso_values[static_cast<unsigned char>(str[10])];\n+      /*FALLTHROUGH*/\n+      case 10:\n+      case 9:\n+      case 8:\n+      case 7:\n+        hval += asso_values[static_cast<unsigned char>(str[6])];\n+      /*FALLTHROUGH*/\n+      case 6:\n+      case 5:\n+      case 4:\n+      case 3:\n+      case 2:\n+        hval += asso_values[static_cast<unsigned char>(str[1])];\n+      /*FALLTHROUGH*/\n+      case 1:\n+        hval += asso_values[static_cast<unsigned char>(str[0])];\n+        break;\n+    }\n+  return hval + asso_values[static_cast<unsigned char>(str[len - 1])];\n+}\n+\n+const struct std_name_hint *\n+std_name_hint_lookup::find (const char *str, size_t len)\n+{\n+  enum\n+    {\n+      TOTAL_KEYWORDS = 205,\n+      MIN_WORD_LENGTH = 2,\n+      MAX_WORD_LENGTH = 22,\n+      MIN_HASH_VALUE = 9,\n+      MAX_HASH_VALUE = 634\n+    };\n+\n+  static const struct std_name_hint wordlist[] =\n+    {\n+#line 158 \"std-name-hint.gperf\"\n+      {\"next\", \"<iterator>\", cxx11},\n+#line 212 \"std-name-hint.gperf\"\n+      {\"set\", \"<set>\", cxx98},\n+#line 287 \"std-name-hint.gperf\"\n+      {\"vector\", \"<vector>\", cxx98},\n+#line 101 \"std-name-hint.gperf\"\n+      {\"setbase\", \"<iomanip>\", cxx98},\n+#line 165 \"std-name-hint.gperf\"\n+      {\"ends\", \"<ostream>\", cxx98},\n+#line 205 \"std-name-hint.gperf\"\n+      {\"ends\", \"<ostream>\", cxx98},\n+#line 86 \"std-name-hint.gperf\"\n+      {\"mem_fn\", \"<functional>\", cxx11},\n+#line 69 \"std-name-hint.gperf\"\n+      {\"deque\", \"<deque>\", cxx98},\n+#line 162 \"std-name-hint.gperf\"\n+      {\"reverse_iterator\", \"<iterator>\", cxx98},\n+#line 151 \"std-name-hint.gperf\"\n+      {\"end\", \"<iterator>\", cxx11},\n+#line 264 \"std-name-hint.gperf\"\n+      {\"void_t\", \"<type_traits>\", cxx17},\n+#line 284 \"std-name-hint.gperf\"\n+      {\"variant\", \"<variant>\", cxx17},\n+#line 281 \"std-name-hint.gperf\"\n+      {\"move\", \"<utility>\", cxx11},\n+#line 87 \"std-name-hint.gperf\"\n+      {\"not_fn\", \"<functional>\", cxx17},\n+#line 269 \"std-name-hint.gperf\"\n+      {\"negation\", \"<type_traits>\", cxx17},\n+#line 270 \"std-name-hint.gperf\"\n+      {\"negation_v\", \"<type_traits>\", cxx17},\n+#line 122 \"std-name-hint.gperf\"\n+      {\"nouppercase\", \"<ios>\", cxx98},\n+#line 43 \"std-name-hint.gperf\"\n+      {\"any_cast\", \"<any>\", cxx17},\n+#line 181 \"std-name-hint.gperf\"\n+      {\"make_unique\", \"<memory>\", cxx14},\n+#line 147 \"std-name-hint.gperf\"\n+      {\"advance\", \"<iterator>\", cxx98},\n+#line 157 \"std-name-hint.gperf\"\n+      {\"move_iterator\", \"<iterator>\", cxx11},\n+#line 246 \"std-name-hint.gperf\"\n+      {\"make_from_tuple\", \"<tuple>\", cxx17},\n+#line 134 \"std-name-hint.gperf\"\n+      {\"defaultfloat\", \"<ios>\", cxx11},\n+#line 249 \"std-name-hint.gperf\"\n+      {\"tuple\", \"<tuple>\", cxx11},\n+#line 257 \"std-name-hint.gperf\"\n+      {\"enable_if_t\", \"<type_traits>\", cxx14},\n+#line 164 \"std-name-hint.gperf\"\n+      {\"ostream\", \"<ostream>\", cxx98},\n+#line 203 \"std-name-hint.gperf\"\n+      {\"ostream\", \"<ostream>\", cxx98},\n+#line 261 \"std-name-hint.gperf\"\n+      {\"remove_cvref_t\", \"<type_traits>\", cxx20},\n+#line 209 \"std-name-hint.gperf\"\n+      {\"queue\", \"<queue>\", cxx98},\n+#line 159 \"std-name-hint.gperf\"\n+      {\"ostream_iterator\", \"<iterator>\", cxx98},\n+#line 227 \"std-name-hint.gperf\"\n+      {\"stringstream\", \"<sstream>\", cxx98},\n+#line 251 \"std-name-hint.gperf\"\n+      {\"tuple_element\", \"<tuple>\", cxx11},\n+#line 252 \"std-name-hint.gperf\"\n+      {\"tuple_element_t\", \"<tuple>\", cxx14},\n+#line 77 \"std-name-hint.gperf\"\n+      {\"fstream\", \"<fstream>\", cxx98},\n+#line 213 \"std-name-hint.gperf\"\n+      {\"multiset\", \"<set>\", cxx98},\n+#line 280 \"std-name-hint.gperf\"\n+      {\"make_pair\", \"<utility>\", cxx98},\n+#line 253 \"std-name-hint.gperf\"\n+      {\"tuple_size\", \"<tuple>\", cxx11},\n+#line 100 \"std-name-hint.gperf\"\n+      {\"setiosflags\", \"<iomanip>\", cxx98},\n+#line 99 \"std-name-hint.gperf\"\n+      {\"resetiosflags\", \"<iomanip>\", cxx98},\n+#line 149 \"std-name-hint.gperf\"\n+      {\"begin\", \"<iterator>\", cxx11},\n+#line 109 \"std-name-hint.gperf\"\n+      {\"quoted\", \"<iomanip>\", cxx14},\n+#line 275 \"std-name-hint.gperf\"\n+      {\"unordered_set\", \"<unordered_set>\", cxx11},\n+#line 276 \"std-name-hint.gperf\"\n+      {\"unordered_multiset\", \"<unordered_set>\", cxx11},\n+#line 256 \"std-name-hint.gperf\"\n+      {\"enable_if\", \"<type_traits>\", cxx11},\n+#line 95 \"std-name-hint.gperf\"\n+      {\"future\", \"<future>\", cxx11},\n+#line 260 \"std-name-hint.gperf\"\n+      {\"remove_cvref\", \"<type_traits>\", cxx20},\n+#line 248 \"std-name-hint.gperf\"\n+      {\"tie\", \"<tuple>\", cxx11},\n+#line 247 \"std-name-hint.gperf\"\n+      {\"make_tuple\", \"<tuple>\", cxx11},\n+#line 71 \"std-name-hint.gperf\"\n+      {\"forward_list\", \"<forward_list>\", cxx11},\n+#line 79 \"std-name-hint.gperf\"\n+      {\"ofstream\", \"<fstream>\", cxx98},\n+#line 285 \"std-name-hint.gperf\"\n+      {\"visit\", \"<variant>\", cxx17},\n+#line 127 \"std-name-hint.gperf\"\n+      {\"right\", \"<ios>\", cxx98},\n+#line 85 \"std-name-hint.gperf\"\n+      {\"invoke\", \"<functional>\", cxx17},\n+#line 279 \"std-name-hint.gperf\"\n+      {\"forward\", \"<utility>\", cxx11},\n+#line 114 \"std-name-hint.gperf\"\n+      {\"noshowbase\", \"<ios>\", cxx98},\n+#line 153 \"std-name-hint.gperf\"\n+      {\"inserter\", \"<iterator>\", cxx98},\n+#line 160 \"std-name-hint.gperf\"\n+      {\"ostreambuf_iterator\", \"<iterator>\", cxx98},\n+#line 51 \"std-name-hint.gperf\"\n+      {\"atomic_ref\", \"<atomic>\", cxx20},\n+#line 112 \"std-name-hint.gperf\"\n+      {\"noboolalpha\", \"<ios>\", cxx98},\n+#line 148 \"std-name-hint.gperf\"\n+      {\"back_inserter\", \"<iterator>\", cxx98},\n+#line 183 \"std-name-hint.gperf\"\n+      {\"unique_ptr\", \"<memory>\", cxx11},\n+#line 89 \"std-name-hint.gperf\"\n+      {\"unwrap_reference\", \"<functional>\", cxx20},\n+#line 90 \"std-name-hint.gperf\"\n+      {\"unwrap_reference_t\", \"<functional>\", cxx20},\n+#line 219 \"std-name-hint.gperf\"\n+      {\"source_location\", \"<source_location>\", cxx20},\n+#line 254 \"std-name-hint.gperf\"\n+      {\"tuple_size_v\", \"<tuple>\", cxx17},\n+#line 83 \"std-name-hint.gperf\"\n+      {\"function\", \"<functional>\", cxx11},\n+#line 144 \"std-name-hint.gperf\"\n+      {\"istream\", \"<istream>\", cxx98},\n+#line 229 \"std-name-hint.gperf\"\n+      {\"stack\", \"<stack>\", cxx98},\n+#line 154 \"std-name-hint.gperf\"\n+      {\"istream_iterator\", \"<iterator>\", cxx98},\n+#line 123 \"std-name-hint.gperf\"\n+      {\"unitbuf\", \"<ios>\", cxx98},\n+#line 224 \"std-name-hint.gperf\"\n+      {\"basic_stringstream\", \"<sstream>\", cxx98},\n+#line 245 \"std-name-hint.gperf\"\n+      {\"forward_as_tuple\", \"<tuple>\", cxx11},\n+#line 124 \"std-name-hint.gperf\"\n+      {\"nounitbuf\", \"<ios>\", cxx98},\n+#line 119 \"std-name-hint.gperf\"\n+      {\"skipws\", \"<ios>\", cxx98},\n+#line 75 \"std-name-hint.gperf\"\n+      {\"basic_ofstream\", \"<fstream>\", cxx98},\n+#line 156 \"std-name-hint.gperf\"\n+      {\"iterator_traits\", \"<iterator>\", cxx98},\n+#line 76 \"std-name-hint.gperf\"\n+      {\"basic_fstream\", \"<fstream>\", cxx98},\n+#line 131 \"std-name-hint.gperf\"\n+      {\"fixed\", \"<ios>\", cxx98},\n+#line 184 \"std-name-hint.gperf\"\n+      {\"weak_ptr\", \"<memory>\", cxx11},\n+#line 104 \"std-name-hint.gperf\"\n+      {\"setw\", \"<iomanip>\", cxx98},\n+#line 152 \"std-name-hint.gperf\"\n+      {\"front_inserter\", \"<iterator>\", cxx98},\n+#line 221 \"std-name-hint.gperf\"\n+      {\"basic_stringbuf\", \"<sstream>\", cxx98},\n+#line 145 \"std-name-hint.gperf\"\n+      {\"ws\", \"<istream>\", cxx98},\n+#line 92 \"std-name-hint.gperf\"\n+      {\"unwrap_ref_decay_t\", \"<functional>\", cxx20},\n+#line 53 \"std-name-hint.gperf\"\n+      {\"bitset\", \"<bitset>\", cxx11},\n+#line 78 \"std-name-hint.gperf\"\n+      {\"ifstream\", \"<fstream>\", cxx98},\n+#line 138 \"std-name-hint.gperf\"\n+      {\"cerr\", \"<iostream>\", cxx98},\n+#line 88 \"std-name-hint.gperf\"\n+      {\"reference_wrapper\", \"<functional>\", cxx11},\n+#line 97 \"std-name-hint.gperf\"\n+      {\"promise\", \"<future>\", cxx11},\n+#line 161 \"std-name-hint.gperf\"\n+      {\"prev\", \"<iterator>\", cxx11},\n+#line 82 \"std-name-hint.gperf\"\n+      {\"bind_front\", \"<functional>\", cxx20},\n+#line 186 \"std-name-hint.gperf\"\n+      {\"pmr\", \"<memory_resource>\", cxx17},\n+#line 155 \"std-name-hint.gperf\"\n+      {\"istreambuf_iterator\", \"<iterator>\", cxx98},\n+#line 188 \"std-name-hint.gperf\"\n+      {\"mutex\", \"<mutex>\", cxx11},\n+#line 126 \"std-name-hint.gperf\"\n+      {\"left\", \"<ios>\", cxx98},\n+#line 128 \"std-name-hint.gperf\"\n+      {\"dec\", \"<ios>\", cxx98},\n+#line 81 \"std-name-hint.gperf\"\n+      {\"bind\", \"<functional>\", cxx11},\n+#line 120 \"std-name-hint.gperf\"\n+      {\"noskipws\", \"<ios>\", cxx98},\n+#line 167 \"std-name-hint.gperf\"\n+      {\"endl\", \"<ostream>\", cxx98},\n+#line 207 \"std-name-hint.gperf\"\n+      {\"endl\", \"<ostream>\", cxx98},\n+#line 130 \"std-name-hint.gperf\"\n+      {\"oct\", \"<ios>\", cxx98},\n+#line 137 \"std-name-hint.gperf\"\n+      {\"cout\", \"<iostream>\", cxx98},\n+#line 49 \"std-name-hint.gperf\"\n+      {\"atomic\", \"<atomic>\", cxx11},\n+#line 282 \"std-name-hint.gperf\"\n+      {\"pair\", \"<utility>\", cxx98},\n+#line 174 \"std-name-hint.gperf\"\n+      {\"map\", \"<map>\", cxx98},\n+#line 193 \"std-name-hint.gperf\"\n+      {\"call_once\", \"<mutex>\", cxx11},\n+#line 94 \"std-name-hint.gperf\"\n+      {\"async\", \"<future>\", cxx11},\n+#line 116 \"std-name-hint.gperf\"\n+      {\"noshowpoint\", \"<ios>\", cxx98},\n+#line 204 \"std-name-hint.gperf\"\n+      {\"wostream\", \"<ostream>\", cxx98},\n+#line 258 \"std-name-hint.gperf\"\n+      {\"invoke_result\", \"<type_traits>\", cxx17},\n+#line 118 \"std-name-hint.gperf\"\n+      {\"noshowpos\", \"<ios>\", cxx98},\n+#line 259 \"std-name-hint.gperf\"\n+      {\"invoke_result_t\", \"<type_traits>\", cxx17},\n+#line 241 \"std-name-hint.gperf\"\n+      {\"thread\", \"<thread>\", cxx11},\n+#line 103 \"std-name-hint.gperf\"\n+      {\"setprecision\", \"<iomanip>\", cxx98},\n+#line 113 \"std-name-hint.gperf\"\n+      {\"showbase\", \"<ios>\", cxx98},\n+#line 74 \"std-name-hint.gperf\"\n+      {\"basic_ifstream\", \"<fstream>\", cxx98},\n+#line 178 \"std-name-hint.gperf\"\n+      {\"allocator\", \"<memory>\", cxx98},\n+#line 133 \"std-name-hint.gperf\"\n+      {\"hexfloat\", \"<ios>\", cxx11},\n+#line 117 \"std-name-hint.gperf\"\n+      {\"showpos\", \"<ios>\", cxx98},\n+#line 170 \"std-name-hint.gperf\"\n+      {\"flush_emit\", \"<ostream>\", cxx20},\n+#line 250 \"std-name-hint.gperf\"\n+      {\"tuple_cat\", \"<tuple>\", cxx11},\n+#line 179 \"std-name-hint.gperf\"\n+      {\"allocator_traits\", \"<memory>\", cxx11},\n+#line 191 \"std-name-hint.gperf\"\n+      {\"recursive_timed_mutex\", \"<mutex>\", cxx11},\n+#line 108 \"std-name-hint.gperf\"\n+      {\"put_time\", \"<iomanip>\", cxx11},\n+#line 210 \"std-name-hint.gperf\"\n+      {\"priority_queue\", \"<queue>\", cxx98},\n+#line 190 \"std-name-hint.gperf\"\n+      {\"recursive_mutex\", \"<mutex>\", cxx11},\n+#line 232 \"std-name-hint.gperf\"\n+      {\"string\", \"<string>\", cxx98},\n+#line 107 \"std-name-hint.gperf\"\n+      {\"get_time\", \"<iomanip>\", cxx11},\n+#line 223 \"std-name-hint.gperf\"\n+      {\"basic_ostringstream\", \"<sstream>\", cxx98},\n+#line 73 \"std-name-hint.gperf\"\n+      {\"basic_filebuf\", \"<fstream>\", cxx98},\n+#line 272 \"std-name-hint.gperf\"\n+      {\"unordered_map\", \"<unordered_map>\", cxx11},\n+#line 121 \"std-name-hint.gperf\"\n+      {\"uppercase\", \"<ios>\", cxx98},\n+#line 273 \"std-name-hint.gperf\"\n+      {\"unordered_multimap\", \"<unordered_map>\", cxx11},\n+#line 182 \"std-name-hint.gperf\"\n+      {\"shared_ptr\", \"<memory>\", cxx11},\n+#line 42 \"std-name-hint.gperf\"\n+      {\"any\", \"<any>\", cxx17},\n+#line 175 \"std-name-hint.gperf\"\n+      {\"multimap\", \"<map>\", cxx98},\n+#line 46 \"std-name-hint.gperf\"\n+      {\"array\", \"<array>\", cxx11},\n+#line 136 \"std-name-hint.gperf\"\n+      {\"cin\", \"<iostream>\", cxx98},\n+#line 238 \"std-name-hint.gperf\"\n+      {\"basic_string_view\", \"<string_view>\", cxx17},\n+#line 168 \"std-name-hint.gperf\"\n+      {\"emit_on_flush\", \"<ostream>\", cxx20},\n+#line 180 \"std-name-hint.gperf\"\n+      {\"make_shared\", \"<memory>\", cxx11},\n+#line 44 \"std-name-hint.gperf\"\n+      {\"make_any\", \"<any>\", cxx17},\n+#line 172 \"std-name-hint.gperf\"\n+      {\"list\", \"<list>\", cxx98},\n+#line 226 \"std-name-hint.gperf\"\n+      {\"ostringstream\", \"<sstream>\", cxx98},\n+#line 47 \"std-name-hint.gperf\"\n+      {\"to_array\", \"<array>\", cxx20},\n+#line 150 \"std-name-hint.gperf\"\n+      {\"distance\", \"<iterator>\", cxx98},\n+#line 197 \"std-name-hint.gperf\"\n+      {\"lock_guard\", \"<mutex>\", cxx11},\n+#line 111 \"std-name-hint.gperf\"\n+      {\"boolalpha\", \"<ios>\", cxx98},\n+#line 59 \"std-name-hint.gperf\"\n+      {\"strong_ordering\", \"<compare>\", cxx20},\n+#line 196 \"std-name-hint.gperf\"\n+      {\"try_lock\", \"<mutex>\", cxx11},\n+#line 267 \"std-name-hint.gperf\"\n+      {\"disjunction\", \"<type_traits>\", cxx17},\n+#line 268 \"std-name-hint.gperf\"\n+      {\"disjunction_v\", \"<type_traits>\", cxx17},\n+#line 67 \"std-name-hint.gperf\"\n+      {\"byte\", \"<cstddef>\", cxx17},\n+#line 115 \"std-name-hint.gperf\"\n+      {\"showpoint\", \"<ios>\", cxx98},\n+#line 64 \"std-name-hint.gperf\"\n+      {\"condition_variable\", \"<condition_variable>\", cxx11},\n+#line 129 \"std-name-hint.gperf\"\n+      {\"hex\", \"<ios>\", cxx98},\n+#line 141 \"std-name-hint.gperf\"\n+      {\"wcout\", \"<iostream>\", cxx98},\n+#line 222 \"std-name-hint.gperf\"\n+      {\"basic_istringstream\", \"<sstream>\", cxx98},\n+#line 169 \"std-name-hint.gperf\"\n+      {\"noemit_on_flush\", \"<ostream>\", cxx20},\n+#line 125 \"std-name-hint.gperf\"\n+      {\"internal\", \"<ios>\", cxx98},\n+#line 140 \"std-name-hint.gperf\"\n+      {\"wcin\", \"<iostream>\", cxx98},\n+#line 234 \"std-name-hint.gperf\"\n+      {\"u8string\", \"<string>\", cxx20},\n+#line 56 \"std-name-hint.gperf\"\n+      {\"strong_equality\", \"<compare>\", cxx20},\n+#line 62 \"std-name-hint.gperf\"\n+      {\"complex_literals\", \"<complex>\", cxx14},\n+#line 194 \"std-name-hint.gperf\"\n+      {\"lock\", \"<mutex>\", cxx11},\n+#line 189 \"std-name-hint.gperf\"\n+      {\"timed_mutex\", \"<mutex>\", cxx11},\n+#line 231 \"std-name-hint.gperf\"\n+      {\"basic_string\", \"<string>\", cxx98},\n+#line 96 \"std-name-hint.gperf\"\n+      {\"packaged_task\", \"<future>\", cxx11},\n+#line 239 \"std-name-hint.gperf\"\n+      {\"string_view\", \"<string_view>\", cxx17},\n+#line 225 \"std-name-hint.gperf\"\n+      {\"istringstream\", \"<sstream>\", cxx98},\n+#line 198 \"std-name-hint.gperf\"\n+      {\"unique_lock\", \"<mutex>\", cxx11},\n+#line 263 \"std-name-hint.gperf\"\n+      {\"type_identity_t\", \"<type_traits>\", cxx20},\n+#line 216 \"std-name-hint.gperf\"\n+      {\"shared_mutex\", \"<shared_mutex>\", cxx17},\n+#line 265 \"std-name-hint.gperf\"\n+      {\"conjunction\", \"<type_traits>\", cxx17},\n+#line 266 \"std-name-hint.gperf\"\n+      {\"conjunction_v\", \"<type_traits>\", cxx17},\n+#line 217 \"std-name-hint.gperf\"\n+      {\"shared_timed_mutex\", \"<shared_mutex>\", cxx14},\n+#line 102 \"std-name-hint.gperf\"\n+      {\"setfill\", \"<iomanip>\", cxx98},\n+#line 236 \"std-name-hint.gperf\"\n+      {\"u32string\", \"<string>\", cxx11},\n+#line 235 \"std-name-hint.gperf\"\n+      {\"u16string\", \"<string>\", cxx11},\n+#line 278 \"std-name-hint.gperf\"\n+      {\"declval\", \"<utility>\", cxx11},\n+#line 91 \"std-name-hint.gperf\"\n+      {\"unwrap_ref_decay\", \"<functional>\", cxx20},\n+#line 201 \"std-name-hint.gperf\"\n+      {\"make_optional\", \"<optional>\", cxx17},\n+#line 200 \"std-name-hint.gperf\"\n+      {\"optional\", \"<optional>\", cxx17},\n+#line 84 \"std-name-hint.gperf\"\n+      {\"hash\", \"<functional>\", cxx11},\n+#line 166 \"std-name-hint.gperf\"\n+      {\"flush\", \"<ostream>\", cxx98},\n+#line 206 \"std-name-hint.gperf\"\n+      {\"flush\", \"<ostream>\", cxx98},\n+#line 244 \"std-name-hint.gperf\"\n+      {\"apply\", \"<tuple>\", cxx17},\n+#line 61 \"std-name-hint.gperf\"\n+      {\"complex\", \"<complex>\", cxx98},\n+#line 242 \"std-name-hint.gperf\"\n+      {\"this_thread\", \"<thread>\", cxx11},\n+#line 177 \"std-name-hint.gperf\"\n+      {\"allocate_shared\", \"<memory>\", cxx11},\n+#line 132 \"std-name-hint.gperf\"\n+      {\"scientific\", \"<ios>\", cxx98},\n+#line 192 \"std-name-hint.gperf\"\n+      {\"once_flag\", \"<mutex>\", cxx11},\n+#line 106 \"std-name-hint.gperf\"\n+      {\"put_money\", \"<iomanip>\", cxx11},\n+#line 105 \"std-name-hint.gperf\"\n+      {\"get_money\", \"<iomanip>\", cxx11},\n+#line 195 \"std-name-hint.gperf\"\n+      {\"scoped_lock\", \"<mutex>\", cxx17},\n+#line 58 \"std-name-hint.gperf\"\n+      {\"weak_ordering\", \"<compare>\", cxx20},\n+#line 55 \"std-name-hint.gperf\"\n+      {\"weak_equality\", \"<compare>\", cxx20},\n+#line 215 \"std-name-hint.gperf\"\n+      {\"shared_lock\", \"<shared_mutex>\", cxx14},\n+#line 50 \"std-name-hint.gperf\"\n+      {\"atomic_flag\", \"<atomic>\", cxx11},\n+#line 142 \"std-name-hint.gperf\"\n+      {\"wclog\", \"<iostream>\", cxx98},\n+#line 65 \"std-name-hint.gperf\"\n+      {\"condition_variable_any\", \"<condition_variable>\", cxx11},\n+#line 139 \"std-name-hint.gperf\"\n+      {\"clog\", \"<iostream>\", cxx98},\n+#line 262 \"std-name-hint.gperf\"\n+      {\"type_identity\", \"<type_traits>\", cxx20},\n+#line 233 \"std-name-hint.gperf\"\n+      {\"wstring\", \"<string>\", cxx98},\n+#line 57 \"std-name-hint.gperf\"\n+      {\"partial_ordering\", \"<compare>\", cxx20}\n+    };\n+\n+  static const short lookup[] =\n+    {\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,    0,   -1,   -1,   -1,    1,   -1,    2,\n+        -1,    3,   -1, -228,   -1,    6, -201,   -2,\n+        -1,    7,    8,   -1,    9,   -1,   -1,   -1,\n+        -1,   -1,   -1,   10,   11,   -1,   -1,   12,\n+        -1,   13,   -1,   14,   15,   -1,   16,   -1,\n+        17,   -1,   -1,   18,   19,   20,   -1,   21,\n+        -1,   22,   -1,   -1,   23,   24, -287,   -1,\n+        27,   28,   29,   30,   31,   -1,   32,   -1,\n+        33,   34,   35,   36,   37,   -1,   38,   -1,\n+        39, -180,   -2,   -1,   -1,   -1,   40,   -1,\n+        41,   -1,   -1,   -1,   -1,   42,   43,   -1,\n+        44,   45,   46,   -1,   47,   -1,   48,   49,\n+        50,   51,   52,   53,   -1,   -1,   54,   -1,\n+        -1,   55,   56,   57,   58,   -1,   59,   -1,\n+        60,   61,   -1,   62,   -1,   63,   64,   -1,\n+        65,   -1,   -1,   -1,   66,   -1,   -1,   67,\n+        68,   69,   70,   -1,   -1,   71,   -1,   -1,\n+        72,   -1,   73,   -1,   -1,   74,   75,   -1,\n+        -1,   76,   -1,   77,   78,   79,   -1,   80,\n+        81,   -1,   -1,   -1,   -1,   82,   -1,   -1,\n+        83,   -1,   -1,   84,   -1,   85,   86,   87,\n+        -1,   88,   89,   -1,   90,   -1,   -1,   91,\n+        92,   93,   -1,   94,   95,   96,   -1,   97,\n+      -403,  100,  101,   -1,  102, -107,   -2,  103,\n+        -1,   -1,   -1,  104,  105,  106,  107,   -1,\n+        -1,   -1,   -1,  108,   -1,  109,  110,  111,\n+       112,  113,  114,  115,   -1,   -1,  116,  117,\n+        -1,   -1,   -1,  118,  119,  120,   -1,   -1,\n+        -1,   -1,  121,   -1,  122,   -1,  123,  124,\n+       125,  126,   -1,  127,  128,   -1,   -1,   -1,\n+       129,   -1,   -1,   -1,   -1,  130,  131,   -1,\n+        -1,   -1,  132,   -1,  133,   -1,  134,  135,\n+       136,   -1,   -1,   -1,  137,   -1,  138,   -1,\n+        -1,  139,   -1,   -1,  140,  141,   -1,   -1,\n+        -1,   -1,  142,  143,   -1,   -1,   -1,  144,\n+       145,   -1,   -1,   -1,   -1,  146,  147,  148,\n+        -1,   -1,  149,   -1,   -1,  150,  151,  152,\n+       153,   -1,   -1,  154,  155,   -1,   -1,   -1,\n+        -1,  156,  157,  158,  159,  160,  161,   -1,\n+        -1,   -1,   -1,   -1,  162,   -1,   -1,   -1,\n+        -1,   -1,   -1,  163,  164,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,  165,  166,  167,   -1,   -1,   -1,\n+       168,  169,   -1,   -1,  170,   -1,   -1,  171,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,  172,   -1,   -1,   -1,\n+       173,  174,  175,   -1,   -1,   -1,   -1,  176,\n+       177,   -1,   -1,   -1,   -1,  178,   -1,   -1,\n+        -1,  179,   -1,  180,   -1,   -1,   -1,   -1,\n+        -1,  181,   -1,   -1,   -1,   -1,  182,   -1,\n+        -1,  183,   -1,   -1,   -1, -620,  -21,   -2,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+       186,   -1,   -1,  187,   -1,   -1,   -1,  188,\n+        -1,  189,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,  190,   -1,  191,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,  192,\n+        -1,   -1,   -1,   -1,  193,   -1,   -1,  194,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,  195,   -1,   -1,   -1,  196,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+       197,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,  198,   -1,   -1,   -1,   -1,\n+        -1,   -1,  199,   -1,  200,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,  201,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,  202,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,  203,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,\n+        -1,   -1,  204\n+    };\n+\n+  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)\n+    {\n+      unsigned int key = hash (str, len);\n+\n+      if (key <= MAX_HASH_VALUE)\n+        {\n+          int index = lookup[key];\n+\n+          if (index >= 0)\n+            {\n+              const char *s = wordlist[index].name;\n+\n+              if (*str == *s && !strcmp (str + 1, s + 1))\n+                return &wordlist[index];\n+            }\n+          else if (index < -TOTAL_KEYWORDS)\n+            {\n+              int offset = - 1 - TOTAL_KEYWORDS - index;\n+              const struct std_name_hint *wordptr = &wordlist[TOTAL_KEYWORDS + lookup[offset]];\n+              const struct std_name_hint *wordendptr = wordptr + -lookup[offset + 1];\n+\n+              while (wordptr < wordendptr)\n+                {\n+                  const char *s = wordptr->name;\n+\n+                  if (*str == *s && !strcmp (str + 1, s + 1))\n+                    return wordptr;\n+                  wordptr++;\n+                }\n+            }\n+        }\n+    }\n+  return 0;\n+}"}]}