{"sha": "c1dfcec7c183a5805ab9a64d2faa46d5e55d9820", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFkZmNlYzdjMTgzYTU4MDVhYjlhNjRkMmZhYTQ2ZDVlNTVkOTgyMA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-11-19T09:36:01Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-11-19T09:36:01Z"}, "message": "[AArch64] Remove v8type attribute.\n\ngcc/\n\t* config/aarch64/aarch64.md: Remove v8type from all insns.\n\nFrom-SVN: r205014", "tree": {"sha": "3b3ee5e360367a813dc0f83671194511466e1d9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b3ee5e360367a813dc0f83671194511466e1d9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7906dbe42433518f7adef2ca388d7edc0a7fd246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7906dbe42433518f7adef2ca388d7edc0a7fd246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7906dbe42433518f7adef2ca388d7edc0a7fd246"}], "stats": {"total": 785, "additions": 212, "deletions": 573}, "files": [{"sha": "f9938b6479607d7c4f33eb18bf476d9baab0e2e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1dfcec7c183a5805ab9a64d2faa46d5e55d9820", "patch": "@@ -1,3 +1,7 @@\n+2013-11-19  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64.md: Remove v8type from all insns.\n+\n 2013-11-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/57517"}, {"sha": "69ac4bc9abd1ffc13d901d778a12e42b3127fac4", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 208, "deletions": 573, "changes": 781, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1dfcec7c183a5805ab9a64d2faa46d5e55d9820/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=c1dfcec7c183a5805ab9a64d2faa46d5e55d9820", "patch": "@@ -125,155 +125,6 @@\n (define_attr \"mode2\" \"unknown,none,QI,HI,SI,DI,TI,SF,DF,TF\"\n   (const_string \"unknown\"))\n \n-; The \"v8type\" attribute is used to for fine grained classification of\n-; AArch64 instructions.  This table briefly explains the meaning of each type.\n-\n-; adc              add/subtract with carry.\n-; adcs             add/subtract with carry (setting condition flags).\n-; adr              calculate address.\n-; alu              simple alu instruction (no memory or fp regs access).\n-; alu_ext          simple alu instruction (sign/zero-extended register).\n-; alu_shift        simple alu instruction, with a source operand shifted by a constant.\n-; alus             simple alu instruction (setting condition flags).\n-; alus_ext         simple alu instruction (sign/zero-extended register, setting condition flags).\n-; alus_shift       simple alu instruction, with a source operand shifted by a constant (setting condition flags).\n-; bfm              bitfield move operation.\n-; branch           branch.\n-; call             subroutine call.\n-; ccmp             conditional compare.\n-; clz              count leading zeros/sign bits.\n-; csel             conditional select.\n-; dmb              data memory barrier.\n-; extend           sign/zero-extend (specialised bitfield move).\n-; extr             extract register-sized bitfield encoding.\n-; fpsimd_load      load single floating point / simd scalar register from memory.\n-; fpsimd_load2     load pair of floating point / simd scalar registers from memory.\n-; fpsimd_store     store single floating point / simd scalar register to memory.\n-; fpsimd_store2    store pair floating point / simd scalar registers to memory.\n-; fadd             floating point add/sub.\n-; fccmp            floating point conditional compare.\n-; fcmp             floating point comparison.\n-; fconst           floating point load immediate.\n-; fcsel            floating point conditional select.\n-; fcvt             floating point convert (float to float).\n-; fcvtf2i          floating point convert (float to integer).\n-; fcvti2f          floating point convert (integer to float).\n-; fdiv             floating point division operation.\n-; ffarith          floating point abs, neg or cpy.\n-; fmadd            floating point multiply-add/sub.\n-; fminmax          floating point min/max.\n-; fmov             floating point move (float to float).\n-; fmovf2i          floating point move (float to integer).\n-; fmovi2f          floating point move (integer to float).\n-; fmul             floating point multiply.\n-; frint            floating point round to integral.\n-; fsqrt            floating point square root.\n-; load_acq         load-acquire.\n-; load             load single general register from memory\n-; load2            load pair of general registers from memory\n-; logic            logical operation (register).\n-; logic_imm        and/or/xor operation (immediate).\n-; logic_shift      logical operation with shift.\n-; logics           logical operation (register, setting condition flags).\n-; logics_imm       and/or/xor operation (immediate, setting condition flags).\n-; logics_shift     logical operation with shift (setting condition flags).\n-; madd             integer multiply-add/sub.\n-; maddl            widening integer multiply-add/sub.\n-; misc             miscellaneous - any type that doesn't fit into the rest.\n-; move             integer move operation.\n-; move2            double integer move operation.\n-; movk             move 16-bit immediate with keep.\n-; movz             move 16-bit immmediate with zero/one.\n-; mrs              system/special register move.\n-; mulh             64x64 to 128-bit multiply (high part).\n-; mull             widening multiply.\n-; mult             integer multiply instruction.\n-; prefetch         memory prefetch.\n-; rbit             reverse bits.\n-; rev              reverse bytes.\n-; sdiv             integer division operation (signed).\n-; shift            variable shift operation.\n-; shift_imm        immediate shift operation (specialised bitfield move).\n-; store_rel        store-release.\n-; store            store single general register to memory.\n-; store2           store pair of general registers to memory.\n-; udiv             integer division operation (unsigned).\n-\n-(define_attr \"v8type\"\n-   \"adc,\\\n-   adcs,\\\n-   adr,\\\n-   alu,\\\n-   alu_ext,\\\n-   alu_shift,\\\n-   alus,\\\n-   alus_ext,\\\n-   alus_shift,\\\n-   bfm,\\\n-   branch,\\\n-   call,\\\n-   ccmp,\\\n-   clz,\\\n-   csel,\\\n-   dmb,\\\n-   div,\\\n-   div64,\\\n-   extend,\\\n-   extr,\\\n-   fpsimd_load,\\\n-   fpsimd_load2,\\\n-   fpsimd_store2,\\\n-   fpsimd_store,\\\n-   fadd,\\\n-   fccmp,\\\n-   fcvt,\\\n-   fcvtf2i,\\\n-   fcvti2f,\\\n-   fcmp,\\\n-   fconst,\\\n-   fcsel,\\\n-   fdiv,\\\n-   ffarith,\\\n-   fmadd,\\\n-   fminmax,\\\n-   fmov,\\\n-   fmovf2i,\\\n-   fmovi2f,\\\n-   fmul,\\\n-   frint,\\\n-   fsqrt,\\\n-   load_acq,\\\n-   load1,\\\n-   load2,\\\n-   logic,\\\n-   logic_imm,\\\n-   logic_shift,\\\n-   logics,\\\n-   logics_imm,\\\n-   logics_shift,\\\n-   madd,\\\n-   maddl,\\\n-   misc,\\\n-   move,\\\n-   move2,\\\n-   movk,\\\n-   movz,\\\n-   mrs,\\\n-   mulh,\\\n-   mull,\\\n-   mult,\\\n-   prefetch,\\\n-   rbit,\\\n-   rev,\\\n-   sdiv,\\\n-   shift,\\\n-   shift_imm,\\\n-   store_rel,\\\n-   store1,\\\n-   store2,\\\n-   udiv\"\n-  (const_string \"alu\"))\n-\n ; The \"type\" attribute is is included here from AArch32 backend to be able\n ; to share pipeline descriptions.\n (include \"../arm/types.md\")\n@@ -328,16 +179,14 @@\n   [(set (pc) (match_operand:DI 0 \"register_operand\" \"r\"))]\n   \"\"\n   \"br\\\\t%0\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n )\n \n (define_insn \"jump\"\n   [(set (pc) (label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n   \"b\\\\t%l0\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n )\n \n (define_expand \"cbranch<mode>4\"\n@@ -375,8 +224,7 @@\n \t\t\t   (pc)))]\n   \"\"\n   \"b%m0\\\\t%l2\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n )\n \n (define_expand \"casesi\"\n@@ -440,15 +288,14 @@\n   return aarch64_output_casesi (operands);\n   \"\n   [(set_attr \"length\" \"16\")\n-   (set_attr \"v8type\" \"branch\")\n    (set_attr \"type\" \"branch\")]\n )\n \n (define_insn \"nop\"\n   [(unspec[(const_int 0)] UNSPEC_NOP)]\n   \"\"\n   \"nop\"\n-  [(set_attr \"v8type\" \"misc\")]\n+  [(set_attr \"type\" \"no_insn\")]\n )\n \n (define_expand \"prologue\"\n@@ -482,17 +329,15 @@\n   [(return)]\n   \"\"\n   \"ret\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n )\n \n (define_insn \"eh_return\"\n   [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"r\")]\n     UNSPECV_EH_RETURN)]\n   \"\"\n   \"#\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n \n )\n \n@@ -513,8 +358,7 @@\n \t\t\t   (pc)))]\n   \"\"\n   \"<cbz>\\\\t%<w>0, %l1\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n \n )\n \n@@ -533,8 +377,7 @@\n     return \\\"ubfx\\\\t%<w>3, %<w>0, %1, #1\\;<cbz>\\\\t%<w>3, %l2\\\";\n   return \\\"<tbz>\\\\t%<w>0, %1, %l2\\\";\n   \"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")\n+  [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"<MODE>\")\n    (set (attr \"length\")\n \t(if_then_else (and (ge (minus (match_dup 2) (pc)) (const_int -32768))\n@@ -555,8 +398,7 @@\n     return \\\"ubfx\\\\t%<w>2, %<w>0, <sizem1>, #1\\;<cbz>\\\\t%<w>2, %l1\\\";\n   return \\\"<tbz>\\\\t%<w>0, <sizem1>, %l1\\\";\n   \"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")\n+  [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"<MODE>\")\n    (set (attr \"length\")\n \t(if_then_else (and (ge (minus (match_dup 1) (pc)) (const_int -32768))\n@@ -601,8 +443,7 @@\n    (clobber (reg:DI LR_REGNUM))]\n   \"\"\n   \"blr\\\\t%0\"\n-  [(set_attr \"v8type\" \"call\")\n-   (set_attr \"type\" \"call\")]\n+  [(set_attr \"type\" \"call\")]\n )\n \n (define_insn \"*call_symbol\"\n@@ -613,8 +454,7 @@\n   \"GET_CODE (operands[0]) == SYMBOL_REF\n    && !aarch64_is_long_call_p (operands[0])\"\n   \"bl\\\\t%a0\"\n-  [(set_attr \"v8type\" \"call\")\n-   (set_attr \"type\" \"call\")]\n+  [(set_attr \"type\" \"call\")]\n )\n \n (define_expand \"call_value\"\n@@ -651,8 +491,7 @@\n    (clobber (reg:DI LR_REGNUM))]\n   \"\"\n   \"blr\\\\t%1\"\n-  [(set_attr \"v8type\" \"call\")\n-   (set_attr \"type\" \"call\")]\n+  [(set_attr \"type\" \"call\")]\n \n )\n \n@@ -665,8 +504,7 @@\n   \"GET_CODE (operands[1]) == SYMBOL_REF\n    && !aarch64_is_long_call_p (operands[1])\"\n   \"bl\\\\t%a1\"\n-  [(set_attr \"v8type\" \"call\")\n-   (set_attr \"type\" \"call\")]\n+  [(set_attr \"type\" \"call\")]\n )\n \n (define_expand \"sibcall\"\n@@ -701,8 +539,7 @@\n    (use (match_operand 2 \"\" \"\"))]\n   \"GET_CODE (operands[0]) == SYMBOL_REF\"\n   \"b\\\\t%a0\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n \n )\n \n@@ -714,8 +551,7 @@\n    (use (match_operand 3 \"\" \"\"))]\n   \"GET_CODE (operands[1]) == SYMBOL_REF\"\n   \"b\\\\t%a1\"\n-  [(set_attr \"v8type\" \"branch\")\n-   (set_attr \"type\" \"branch\")]\n+  [(set_attr \"type\" \"branch\")]\n )\n \n ;; Call subroutine returning any type.\n@@ -792,8 +628,7 @@\n        gcc_unreachable ();\n      }\n }\n-  [(set_attr \"v8type\" \"move,alu,alu,load1,load1,store1,store1,*,*,*\")\n-   (set_attr \"type\" \"mov_reg,mov_imm,mov_imm,load1,load1,store1,store1,\\\n+  [(set_attr \"type\" \"mov_reg,mov_imm,mov_imm,load1,load1,store1,store1,\\\n                      neon_from_gp<q>,neon_from_gp<q>, neon_dup\")\n    (set_attr \"simd\" \"*,*,yes,*,*,*,*,yes,yes,yes\")\n    (set_attr \"mode\" \"<MODE>\")]\n@@ -834,8 +669,7 @@\n    fmov\\\\t%s0, %w1\n    fmov\\\\t%w0, %s1\n    fmov\\\\t%s0, %s1\"\n-  [(set_attr \"v8type\" \"move,move,move,alu,load1,load1,store1,store1,adr,adr,fmov,fmov,fmov\")\n-   (set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,load1,load1,store1,store1,\\\n+  [(set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,load1,load1,store1,store1,\\\n                      adr,adr,fmov,fmov,fmov\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"fp\" \"*,*,*,*,*,yes,*,yes,*,*,yes,yes,yes\")]\n@@ -861,8 +695,7 @@\n    fmov\\\\t%x0, %d1\n    fmov\\\\t%d0, %d1\n    movi\\\\t%d0, %1\"\n-  [(set_attr \"v8type\" \"move,move,move,alu,load1,load1,store1,store1,adr,adr,fmov,fmov,fmov,fmov\")\n-   (set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,load1,load1,store1,store1,\\\n+  [(set_attr \"type\" \"mov_reg,mov_reg,mov_reg,mov_imm,load1,load1,store1,store1,\\\n                      adr,adr,fmov,fmov,fmov,fmov\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"fp\" \"*,*,*,*,*,yes,*,yes,*,*,yes,yes,yes,*\")\n@@ -877,8 +710,7 @@\n   \"UINTVAL (operands[1]) < GET_MODE_BITSIZE (<MODE>mode)\n    && UINTVAL (operands[1]) % 16 == 0\"\n   \"movk\\\\t%<w>0, %X2, lsl %1\"\n-  [(set_attr \"v8type\" \"movk\")\n-   (set_attr \"type\" \"mov_imm\")\n+  [(set_attr \"type\" \"mov_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -909,9 +741,7 @@\n    stp\\\\txzr, xzr, %0\n    ldr\\\\t%q0, %1\n    str\\\\t%q1, %0\"\n-  [(set_attr \"v8type\" \"move2,fmovi2f,fmovf2i,*, \\\n-\t\t       load2,store2,store2,fpsimd_load,fpsimd_store\")\n-   (set_attr \"type\" \"multiple,f_mcr,f_mrc,neon_logic_q, \\\n+  [(set_attr \"type\" \"multiple,f_mcr,f_mrc,neon_logic_q, \\\n \t\t             load2,store2,store2,f_loadd,f_stored\")\n    (set_attr \"mode\" \"DI,DI,DI,TI,DI,DI,DI,TI,TI\")\n    (set_attr \"length\" \"8,8,8,4,4,4,4,4,4\")\n@@ -963,10 +793,7 @@\n    ldr\\\\t%w0, %1\n    str\\\\t%w1, %0\n    mov\\\\t%w0, %w1\"\n-  [(set_attr \"v8type\" \"fmovi2f,fmovf2i,\\\n-\t\t       fmov,fconst,fpsimd_load,\\\n-\t\t       fpsimd_store,fpsimd_load,fpsimd_store,fmov\")\n-   (set_attr \"type\" \"f_mcr,f_mrc,fmov,fconsts,\\\n+  [(set_attr \"type\" \"f_mcr,f_mrc,fmov,fconsts,\\\n                      f_loads,f_stores,f_loads,f_stores,fmov\")\n    (set_attr \"mode\" \"SF\")]\n )\n@@ -986,10 +813,7 @@\n    ldr\\\\t%x0, %1\n    str\\\\t%x1, %0\n    mov\\\\t%x0, %x1\"\n-  [(set_attr \"v8type\" \"fmovi2f,fmovf2i,\\\n-\t\t       fmov,fconst,fpsimd_load,\\\n-\t\t       fpsimd_store,fpsimd_load,fpsimd_store,move\")\n-   (set_attr \"type\" \"f_mcr,f_mrc,fmov,fconstd,\\\n+  [(set_attr \"type\" \"f_mcr,f_mrc,fmov,fconstd,\\\n                      f_loadd,f_stored,f_loadd,f_stored,mov_reg\")\n    (set_attr \"mode\" \"DF\")]\n )\n@@ -1028,8 +852,7 @@\n    str\\\\t%q1, %0\n    ldp\\\\t%0, %H0, %1\n    stp\\\\t%1, %H1, %0\"\n-  [(set_attr \"v8type\" \"logic,move2,fmovi2f,fmovf2i,fconst,fconst,fpsimd_load,fpsimd_store,fpsimd_load2,fpsimd_store2\")\n-   (set_attr \"type\" \"logic_reg,multiple,f_mcr,f_mrc,fconstd,fconstd,\\\n+  [(set_attr \"type\" \"logic_reg,multiple,f_mcr,f_mrc,fconstd,fconstd,\\\n                      f_loadd,f_stored,neon_load1_2reg,neon_store1_2reg\")\n    (set_attr \"mode\" \"DF,DF,DF,DF,DF,DF,TF,TF,DF,DF\")\n    (set_attr \"length\" \"4,8,8,8,4,4,4,4,4,4\")\n@@ -1060,8 +883,7 @@\n \t\t\t       XEXP (operands[1], 0),\n \t\t\t       GET_MODE_SIZE (<MODE>mode)))\"\n   \"ldp\\\\t%<w>0, %<w>2, %1\"\n-  [(set_attr \"v8type\" \"load2\")\n-   (set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load2\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1077,8 +899,7 @@\n \t\t\t       XEXP (operands[0], 0),\n \t\t\t       GET_MODE_SIZE (<MODE>mode)))\"\n   \"stp\\\\t%<w>1, %<w>3, %0\"\n-  [(set_attr \"v8type\" \"store2\")\n-   (set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store2\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1094,8 +915,7 @@\n \t\t\t       XEXP (operands[1], 0),\n \t\t\t       GET_MODE_SIZE (<MODE>mode)))\"\n   \"ldp\\\\t%<w>0, %<w>2, %1\"\n-  [(set_attr \"v8type\" \"fpsimd_load2\")\n-   (set_attr \"type\" \"neon_load1_2reg<q>\")\n+  [(set_attr \"type\" \"neon_load1_2reg<q>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1111,8 +931,7 @@\n \t\t\t       XEXP (operands[0], 0),\n \t\t\t       GET_MODE_SIZE (<MODE>mode)))\"\n   \"stp\\\\t%<w>1, %<w>3, %0\"\n-  [(set_attr \"v8type\" \"fpsimd_store2\")\n-   (set_attr \"type\" \"neon_store1_2reg<q>\")\n+  [(set_attr \"type\" \"neon_store1_2reg<q>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1131,8 +950,7 @@\n                    (match_operand:P 5 \"const_int_operand\" \"n\"))))])]\n   \"INTVAL (operands[5]) == INTVAL (operands[4]) + GET_MODE_SIZE (<GPI:MODE>mode)\"\n   \"ldp\\\\t%<w>2, %<w>3, [%1], %4\"\n-  [(set_attr \"v8type\" \"load2\")\n-   (set_attr \"type\" \"load2\")\n+  [(set_attr \"type\" \"load2\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1151,8 +969,7 @@\n           (match_operand:GPI 3 \"register_operand\" \"r\"))])]\n   \"INTVAL (operands[5]) == INTVAL (operands[4]) + GET_MODE_SIZE (<GPI:MODE>mode)\"\n   \"stp\\\\t%<w>2, %<w>3, [%0, %4]!\"\n-  [(set_attr \"v8type\" \"store2\")\n-   (set_attr \"type\" \"store2\")\n+  [(set_attr \"type\" \"store2\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1173,8 +990,7 @@\n   \"@\n    sxtw\\t%0, %w1\n    ldrsw\\t%0, %1\"\n-  [(set_attr \"v8type\" \"extend,load1\")\n-   (set_attr \"type\" \"extend,load1\")\n+  [(set_attr \"type\" \"extend,load1\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -1185,8 +1001,7 @@\n   \"@\n    uxtw\\t%0, %w1\n    ldr\\t%w0, %1\"\n-  [(set_attr \"v8type\" \"extend,load1\")\n-   (set_attr \"type\" \"extend,load1\")\n+  [(set_attr \"type\" \"extend,load1\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -1203,8 +1018,7 @@\n   \"@\n    sxt<SHORT:size>\\t%<GPI:w>0, %w1\n    ldrs<SHORT:size>\\t%<GPI:w>0, %1\"\n-  [(set_attr \"v8type\" \"extend,load1\")\n-   (set_attr \"type\" \"extend,load1\")\n+  [(set_attr \"type\" \"extend,load1\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1216,8 +1030,7 @@\n    uxt<SHORT:size>\\t%<GPI:w>0, %w1\n    ldr<SHORT:size>\\t%w0, %1\n    ldr\\t%<SHORT:size>0, %1\"\n-  [(set_attr \"v8type\" \"extend,load1,load1\")\n-   (set_attr \"type\" \"extend,load1,load1\")\n+  [(set_attr \"type\" \"extend,load1,load1\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1234,8 +1047,7 @@\n   \"@\n    <su>xtb\\t%w0, %w1\n    <ldrxt>b\\t%w0, %1\"\n-  [(set_attr \"v8type\" \"extend,load1\")\n-   (set_attr \"type\" \"extend,load1\")\n+  [(set_attr \"type\" \"extend,load1\")\n    (set_attr \"mode\" \"HI\")]\n )\n \n@@ -1279,8 +1091,7 @@\n   add\\\\t%w0, %w1, %2\n   add\\\\t%w0, %w1, %w2\n   sub\\\\t%w0, %w1, #%n2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_imm,alu_reg,alu_imm\")\n+  [(set_attr \"type\" \"alu_imm,alu_reg,alu_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1296,8 +1107,7 @@\n   add\\\\t%w0, %w1, %2\n   add\\\\t%w0, %w1, %w2\n   sub\\\\t%w0, %w1, #%n2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_imm,alu_reg,alu_imm\")\n+  [(set_attr \"type\" \"alu_imm,alu_reg,alu_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1313,8 +1123,7 @@\n   add\\\\t%x0, %x1, %x2\n   sub\\\\t%x0, %x1, #%n2\n   add\\\\t%d0, %d1, %d2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_imm,alu_reg,alu_imm,alu_reg\")\n+  [(set_attr \"type\" \"alu_imm,alu_reg,alu_imm,alu_reg\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"simd\" \"*,*,*,yes\")]\n )\n@@ -1332,8 +1141,7 @@\n   adds\\\\t%<w>0, %<w>1, %<w>2\n   adds\\\\t%<w>0, %<w>1, %<w>2\n   subs\\\\t%<w>0, %<w>1, #%n2\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n+  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1351,8 +1159,7 @@\n   adds\\\\t%w0, %w1, %w2\n   adds\\\\t%w0, %w1, %w2\n   subs\\\\t%w0, %w1, #%n2\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n+  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1369,8 +1176,7 @@\n \t\t  (match_dup 3)))]\n   \"\"\n   \"adds\\\\t%<w>0, %<w>3, %<w>1, lsl %p2\"\n-  [(set_attr \"v8type\" \"alus_shift\")\n-   (set_attr \"type\" \"alus_shift_imm\")\n+  [(set_attr \"type\" \"alus_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1387,8 +1193,7 @@\n \t\t   (mult:GPI (match_dup 2) (match_dup 3))))]\n   \"\"\n   \"subs\\\\t%<w>0, %<w>1, %<w>2, lsl %p3\"\n-  [(set_attr \"v8type\" \"alus_shift\")\n-   (set_attr \"type\" \"alus_shift_imm\")\n+  [(set_attr \"type\" \"alus_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1403,8 +1208,7 @@\n \t(plus:GPI (ANY_EXTEND:GPI (match_dup 1)) (match_dup 2)))]\n   \"\"\n   \"adds\\\\t%<GPI:w>0, %<GPI:w>2, %<GPI:w>1, <su>xt<ALLX:size>\"\n-  [(set_attr \"v8type\" \"alus_ext\")\n-   (set_attr \"type\" \"alus_ext\")\n+  [(set_attr \"type\" \"alus_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1419,8 +1223,7 @@\n \t(minus:GPI (match_dup 1) (ANY_EXTEND:GPI (match_dup 2))))]\n   \"\"\n   \"subs\\\\t%<GPI:w>0, %<GPI:w>1, %<GPI:w>2, <su>xt<ALLX:size>\"\n-  [(set_attr \"v8type\" \"alus_ext\")\n-   (set_attr \"type\" \"alus_ext\")\n+  [(set_attr \"type\" \"alus_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1441,8 +1244,7 @@\n \t\t  (match_dup 4)))]\n   \"aarch64_is_extend_from_extract (<MODE>mode, operands[2], operands[3])\"\n   \"adds\\\\t%<w>0, %<w>4, %<w>1, <su>xt%e3 %p2\"\n-  [(set_attr \"v8type\" \"alus_ext\")\n-   (set_attr \"type\" \"alus_ext\")\n+  [(set_attr \"type\" \"alus_ext\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1463,8 +1265,7 @@\n \t\t\t\t  (const_int 0))))]\n   \"aarch64_is_extend_from_extract (<MODE>mode, operands[2], operands[3])\"\n   \"subs\\\\t%<w>0, %<w>4, %<w>1, <su>xt%e3 %p2\"\n-  [(set_attr \"v8type\" \"alus_ext\")\n-   (set_attr \"type\" \"alus_ext\")\n+  [(set_attr \"type\" \"alus_ext\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1479,8 +1280,7 @@\n   cmn\\\\t%<w>0, %<w>1\n   cmn\\\\t%<w>0, %<w>1\n   cmp\\\\t%<w>0, #%n1\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n+  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1491,8 +1291,7 @@\n \t (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"cmn\\\\t%<w>1, %<w>0\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg\")\n+  [(set_attr \"type\" \"alus_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1503,8 +1302,7 @@\n \t\t  (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"add\\\\t%<w>0, %<w>3, %<w>1, <shift> %2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1517,8 +1315,7 @@\n \t          (match_operand:SI 3 \"register_operand\" \"r\"))))]\n   \"\"\n   \"add\\\\t%w0, %w3, %w1, <shift> %2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1529,8 +1326,7 @@\n \t\t  (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"add\\\\t%<w>0, %<w>3, %<w>1, lsl %p2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1540,8 +1336,7 @@\n \t\t  (match_operand:GPI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"add\\\\t%<GPI:w>0, %<GPI:w>2, %<GPI:w>1, <su>xt<ALLX:size>\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1553,8 +1348,7 @@\n \t\t  (match_operand:GPI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"add\\\\t%w0, %w2, %w1, <su>xt<SHORT:size>\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1566,8 +1360,7 @@\n \t\t  (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"add\\\\t%<GPI:w>0, %<GPI:w>3, %<GPI:w>1, <su>xt<ALLX:size> %2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1581,8 +1374,7 @@\n \t\t  (match_operand:SI 3 \"register_operand\" \"r\"))))]\n   \"\"\n   \"add\\\\t%w0, %w3, %w1, <su>xt<SHORT:size> %2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1594,8 +1386,7 @@\n \t\t  (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"add\\\\t%<GPI:w>0, %<GPI:w>3, %<GPI:w>1, <su>xt<ALLX:size> %p2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1608,8 +1399,7 @@\n \t\t  (match_operand:SI 3 \"register_operand\" \"r\"))))]\n   \"\"\n   \"add\\\\t%w0, %w3, %w1, <su>xt<SHORT:size> %p2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1623,8 +1413,7 @@\n \t\t  (match_operand:GPI 4 \"register_operand\" \"r\")))]\n   \"aarch64_is_extend_from_extract (<MODE>mode, operands[2], operands[3])\"\n   \"add\\\\t%<w>0, %<w>4, %<w>1, <su>xt%e3 %p2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1640,8 +1429,7 @@\n \t\t  (match_operand:SI 4 \"register_operand\" \"r\"))))]\n   \"aarch64_is_extend_from_extract (SImode, operands[2], operands[3])\"\n   \"add\\\\t%w0, %w4, %w1, <su>xt%e3 %p2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1654,8 +1442,7 @@\n \t\t(match_operand:GPI 2 \"register_operand\" \"r\"))))]\n    \"\"\n    \"adc\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1670,8 +1457,7 @@\n \t       (match_operand:SI 2 \"register_operand\" \"r\")))))]\n    \"\"\n    \"adc\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1684,8 +1470,7 @@\n               (geu:GPI (reg:CC CC_REGNUM) (const_int 0))))]\n    \"\"\n    \"adc\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1700,8 +1485,7 @@\n               (geu:SI (reg:CC CC_REGNUM) (const_int 0)))))]\n    \"\"\n    \"adc\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1714,8 +1498,7 @@\n \t      (match_operand:GPI 2 \"register_operand\" \"r\")))]\n    \"\"\n    \"adc\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1730,8 +1513,7 @@\n \t      (match_operand:SI 2 \"register_operand\" \"r\"))))]\n    \"\"\n    \"adc\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1744,8 +1526,7 @@\n \t      (match_operand:GPI 1 \"register_operand\" \"r\")))]\n    \"\"\n    \"adc\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1760,8 +1541,7 @@\n \t      (match_operand:SI 1 \"register_operand\" \"r\"))))]\n    \"\"\n    \"adc\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1777,8 +1557,7 @@\n   operands[3] = GEN_INT (aarch64_uxt_size (exact_log2 (INTVAL (operands[2])),\n \t\t\t\t\t   INTVAL (operands[3])));\n   return \\\"add\\t%<w>0, %<w>4, %<w>1, uxt%e3 %p2\\\";\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1796,8 +1575,7 @@\n   operands[3] = GEN_INT (aarch64_uxt_size (exact_log2 (INTVAL (operands[2])),\n \t\t\t\t\t   INTVAL (operands[3])));\n   return \\\"add\\t%w0, %w4, %w1, uxt%e3 %p2\\\";\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1807,8 +1585,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1820,8 +1597,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1833,8 +1609,7 @@\n   \"@\n    sub\\\\t%x0, %x1, %x2\n    sub\\\\t%d0, %d1, %d2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_reg, neon_sub\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"simd\" \"*,yes\")]\n )\n@@ -1849,8 +1624,7 @@\n \t(minus:GPI (match_dup 1) (match_dup 2)))]\n   \"\"\n   \"subs\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg\")\n+  [(set_attr \"type\" \"alus_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1864,8 +1638,7 @@\n \t(zero_extend:DI (minus:SI (match_dup 1) (match_dup 2))))]\n   \"\"\n   \"subs\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg\")\n+  [(set_attr \"type\" \"alus_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1877,8 +1650,7 @@\n \t\t    (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\"))))]\n   \"\"\n   \"sub\\\\t%<w>0, %<w>3, %<w>1, <shift> %2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1892,8 +1664,7 @@\n \t\t    (match_operand:QI 2 \"aarch64_shift_imm_si\" \"n\")))))]\n   \"\"\n   \"sub\\\\t%w0, %w3, %w1, <shift> %2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1905,8 +1676,7 @@\n \t\t    (match_operand:QI 2 \"aarch64_pwr_2_<mode>\" \"n\"))))]\n   \"\"\n   \"sub\\\\t%<w>0, %<w>3, %<w>1, lsl %p2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -1920,8 +1690,7 @@\n \t\t    (match_operand:QI 2 \"aarch64_pwr_2_si\" \"n\")))))]\n   \"\"\n   \"sub\\\\t%w0, %w3, %w1, lsl %p2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1932,8 +1701,7 @@\n \t\t    (match_operand:ALLX 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"sub\\\\t%<GPI:w>0, %<GPI:w>1, %<GPI:w>2, <su>xt<ALLX:size>\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1946,8 +1714,7 @@\n \t\t    (match_operand:SHORT 2 \"register_operand\" \"r\")))))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2, <su>xt<SHORT:size>\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1959,8 +1726,7 @@\n \t\t\t       (match_operand 3 \"aarch64_imm3\" \"Ui3\"))))]\n   \"\"\n   \"sub\\\\t%<GPI:w>0, %<GPI:w>1, %<GPI:w>2, <su>xt<ALLX:size> %3\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -1974,8 +1740,7 @@\n \t\t\t      (match_operand 3 \"aarch64_imm3\" \"Ui3\")))))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2, <su>xt<SHORT:size> %3\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -1989,8 +1754,7 @@\n \t\t    (const_int 0))))]\n   \"aarch64_is_extend_from_extract (<MODE>mode, operands[2], operands[3])\"\n   \"sub\\\\t%<w>0, %<w>4, %<w>1, <su>xt%e3 %p2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2006,8 +1770,7 @@\n \t\t    (const_int 0)))))]\n   \"aarch64_is_extend_from_extract (SImode, operands[2], operands[3])\"\n   \"sub\\\\t%w0, %w4, %w1, <su>xt%e3 %p2\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2020,8 +1783,7 @@\n \t       (match_operand:GPI 2 \"register_operand\" \"r\")))]\n    \"\"\n    \"sbc\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2036,8 +1798,7 @@\n \t       (match_operand:SI 2 \"register_operand\" \"r\"))))]\n    \"\"\n    \"sbc\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2053,8 +1814,7 @@\n   operands[3] = GEN_INT (aarch64_uxt_size (exact_log2 (INTVAL (operands[2])),\n \t\t\t\t\t   INTVAL (operands[3])));\n   return \\\"sub\\t%<w>0, %<w>4, %<w>1, uxt%e3 %p2\\\";\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2072,8 +1832,7 @@\n   operands[3] = GEN_INT (aarch64_uxt_size (exact_log2 (INTVAL (operands[2])),\n \t\t\t\t\t   INTVAL (operands[3])));\n   return \\\"sub\\t%w0, %w4, %w1, uxt%e3 %p2\\\";\"\n-  [(set_attr \"v8type\" \"alu_ext\")\n-   (set_attr \"type\" \"alu_ext\")\n+  [(set_attr \"type\" \"alu_ext\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2105,8 +1864,7 @@\n \t\t\t\t\t\t\t     GEN_INT (63)))));\n     DONE;\n   }\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_reg\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -2117,8 +1875,7 @@\n   \"@\n    neg\\\\t%<w>0, %<w>1\n    neg\\\\t%<rtn>0<vas>, %<rtn>1<vas>\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg, neon_neg<q>\")\n+  [(set_attr \"type\" \"alu_reg, neon_neg<q>\")\n    (set_attr \"simd\" \"*,yes\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n@@ -2129,8 +1886,7 @@\n \t(zero_extend:DI (neg:SI (match_operand:SI 1 \"register_operand\" \"r\"))))]\n   \"\"\n   \"neg\\\\t%w0, %w1\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2140,8 +1896,7 @@\n \t\t   (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"ngc\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2152,8 +1907,7 @@\n \t\t   (match_operand:SI 1 \"register_operand\" \"r\"))))]\n   \"\"\n   \"ngc\\\\t%w0, %w1\"\n-  [(set_attr \"v8type\" \"adc\")\n-   (set_attr \"type\" \"adc_reg\")\n+  [(set_attr \"type\" \"adc_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2165,8 +1919,7 @@\n \t(neg:GPI (match_dup 1)))]\n   \"\"\n   \"negs\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg\")\n+  [(set_attr \"type\" \"alus_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2179,8 +1932,7 @@\n \t(zero_extend:DI (neg:SI (match_dup 1))))]\n   \"\"\n   \"negs\\\\t%w0, %w1\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg\")\n+  [(set_attr \"type\" \"alus_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2195,8 +1947,7 @@\n \t(neg:GPI (ASHIFT:GPI (match_dup 1) (match_dup 2))))]\n   \"\"\n   \"negs\\\\t%<w>0, %<w>1, <shift> %2\"\n-  [(set_attr \"v8type\" \"alus_shift\")\n-   (set_attr \"type\" \"alus_shift_imm\")\n+  [(set_attr \"type\" \"alus_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2207,8 +1958,7 @@\n \t\t  (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\"))))]\n   \"\"\n   \"neg\\\\t%<w>0, %<w>1, <shift> %2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2221,8 +1971,7 @@\n \t\t  (match_operand:QI 2 \"aarch64_shift_imm_si\" \"n\")))))]\n   \"\"\n   \"neg\\\\t%w0, %w1, <shift> %2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2233,8 +1982,7 @@\n \t\t  (match_operand:QI 2 \"aarch64_pwr_2_<mode>\" \"n\"))))]\n   \"\"\n   \"neg\\\\t%<w>0, %<w>1, lsl %p2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2247,8 +1995,7 @@\n \t\t  (match_operand:QI 2 \"aarch64_pwr_2_si\" \"n\")))))]\n   \"\"\n   \"neg\\\\t%w0, %w1, lsl %p2\"\n-  [(set_attr \"v8type\" \"alu_shift\")\n-   (set_attr \"type\" \"alu_shift_imm\")\n+  [(set_attr \"type\" \"alu_shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2258,8 +2005,7 @@\n \t\t  (match_operand:GPI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"mul\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"mult\")\n-   (set_attr \"type\" \"mul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2271,8 +2017,7 @@\n \t\t  (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"mul\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"mult\")\n-   (set_attr \"type\" \"mul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2283,8 +2028,7 @@\n \t\t  (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"madd\\\\t%<w>0, %<w>1, %<w>2, %<w>3\"\n-  [(set_attr \"v8type\" \"madd\")\n-   (set_attr \"type\" \"mla\")\n+  [(set_attr \"type\" \"mla\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2297,8 +2041,7 @@\n \t\t  (match_operand:SI 3 \"register_operand\" \"r\"))))]\n   \"\"\n   \"madd\\\\t%w0, %w1, %w2, %w3\"\n-  [(set_attr \"v8type\" \"madd\")\n-   (set_attr \"type\" \"mla\")\n+  [(set_attr \"type\" \"mla\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2310,8 +2053,7 @@\n \n   \"\"\n   \"msub\\\\t%<w>0, %<w>1, %<w>2, %<w>3\"\n-  [(set_attr \"v8type\" \"madd\")\n-   (set_attr \"type\" \"mla\")\n+  [(set_attr \"type\" \"mla\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2325,8 +2067,7 @@\n \n   \"\"\n   \"msub\\\\t%w0, %w1, %w2, %w3\"\n-  [(set_attr \"v8type\" \"madd\")\n-   (set_attr \"type\" \"mla\")\n+  [(set_attr \"type\" \"mla\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2337,8 +2078,7 @@\n \n   \"\"\n   \"mneg\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"mult\")\n-   (set_attr \"type\" \"mul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2351,8 +2091,7 @@\n \n   \"\"\n   \"mneg\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"mult\")\n-   (set_attr \"type\" \"mul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2362,8 +2101,7 @@\n \t\t (ANY_EXTEND:DI (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"<su>mull\\\\t%0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"mull\")\n-   (set_attr \"type\" \"<su>mull\")\n+  [(set_attr \"type\" \"<su>mull\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -2375,8 +2113,7 @@\n \t\t (match_operand:DI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"<su>maddl\\\\t%0, %w1, %w2, %3\"\n-  [(set_attr \"v8type\" \"maddl\")\n-   (set_attr \"type\" \"<su>mlal\")\n+  [(set_attr \"type\" \"<su>mlal\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -2389,8 +2126,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\" \"r\")))))]\n   \"\"\n   \"<su>msubl\\\\t%0, %w1, %w2, %3\"\n-  [(set_attr \"v8type\" \"maddl\")\n-   (set_attr \"type\" \"<su>mlal\")\n+  [(set_attr \"type\" \"<su>mlal\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -2401,8 +2137,7 @@\n \t\t  (ANY_EXTEND:DI (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"<su>mnegl\\\\t%0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"mull\")\n-   (set_attr \"type\" \"<su>mull\")\n+  [(set_attr \"type\" \"<su>mull\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -2416,8 +2151,7 @@\n \t  (const_int 64))))]\n   \"\"\n   \"<su>mulh\\\\t%0, %1, %2\"\n-  [(set_attr \"v8type\" \"mulh\")\n-   (set_attr \"type\" \"<su>mull\")\n+  [(set_attr \"type\" \"<su>mull\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -2427,8 +2161,7 @@\n \t\t     (match_operand:GPI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"<su>div\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"<su>div\")\n-   (set_attr \"type\" \"<su>div\")\n+  [(set_attr \"type\" \"<su>div\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2440,8 +2173,7 @@\n \t\t     (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"<su>div\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"<su>div\")\n-   (set_attr \"type\" \"<su>div\")\n+  [(set_attr \"type\" \"<su>div\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2458,8 +2190,7 @@\n    cmp\\\\t%<w>0, %<w>1\n    cmp\\\\t%<w>0, %<w>1\n    cmn\\\\t%<w>0, #%n1\"\n-  [(set_attr \"v8type\" \"alus\")\n-   (set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n+  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2471,8 +2202,7 @@\n    \"@\n     fcmp\\\\t%<s>0, #0.0\n     fcmp\\\\t%<s>0, %<s>1\"\n-  [(set_attr \"v8type\" \"fcmp\")\n-   (set_attr \"type\" \"fcmp<s>\")\n+  [(set_attr \"type\" \"fcmp<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2484,8 +2214,7 @@\n    \"@\n     fcmpe\\\\t%<s>0, #0.0\n     fcmpe\\\\t%<s>0, %<s>1\"\n-  [(set_attr \"v8type\" \"fcmp\")\n-   (set_attr \"type\" \"fcmp<s>\")\n+  [(set_attr \"type\" \"fcmp<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2497,8 +2226,7 @@\n \t\t\t(match_operand:GPI 2 \"aarch64_reg_or_zero\" \"rZ\")))]\n   \"\"\n   \"cmp\\\\t%<w>2, %<w>0, <shift> %1\"\n-  [(set_attr \"v8type\" \"alus_shift\")\n-   (set_attr \"type\" \"alus_shift_imm\")\n+  [(set_attr \"type\" \"alus_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2509,8 +2237,7 @@\n \t\t\t(match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"cmp\\\\t%<GPI:w>1, %<GPI:w>0, <su>xt<ALLX:size>\"\n-  [(set_attr \"v8type\" \"alus_ext\")\n-   (set_attr \"type\" \"alus_ext\")\n+  [(set_attr \"type\" \"alus_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -2523,8 +2250,7 @@\n \t(match_operand:GPI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"cmp\\\\t%<GPI:w>2, %<GPI:w>0, <su>xt<ALLX:size> %1\"\n-  [(set_attr \"v8type\" \"alus_ext\")\n-   (set_attr \"type\" \"alus_ext\")\n+  [(set_attr \"type\" \"alus_ext\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -2564,8 +2290,7 @@\n \t [(match_operand 2 \"cc_register\" \"\") (const_int 0)]))]\n   \"\"\n   \"cset\\\\t%<w>0, %m1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2577,8 +2302,7 @@\n \t  [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"\"\n   \"cset\\\\t%w0, %m1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2588,8 +2312,7 @@\n \t\t  [(match_operand 2 \"cc_register\" \"\") (const_int 0)])))]\n   \"\"\n   \"csetm\\\\t%<w>0, %m1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2601,8 +2324,7 @@\n \t\t  [(match_operand 2 \"cc_register\" \"\") (const_int 0)]))))]\n   \"\"\n   \"csetm\\\\t%w0, %m1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2656,8 +2378,7 @@\n    csinc\\\\t%<w>0, %<w>4, <w>zr, %M1\n    mov\\\\t%<w>0, -1\n    mov\\\\t%<w>0, 1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2681,8 +2402,7 @@\n    csinc\\\\t%w0, %w4, wzr, %M1\n    mov\\\\t%w0, -1\n    mov\\\\t%w0, 1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2695,8 +2415,7 @@\n \t (match_operand:GPF 4 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fcsel\\\\t%<s>0, %<s>3, %<s>4, %m1\"\n-  [(set_attr \"v8type\" \"fcsel\")\n-   (set_attr \"type\" \"fcsel\")\n+  [(set_attr \"type\" \"fcsel\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2745,8 +2464,7 @@\n \t\t (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"csinc\\\\t%<w>0, %<w>1, %<w>1, %M2\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"csinc3<mode>_insn\"\n@@ -2759,8 +2477,7 @@\n \t  (match_operand:GPI 4 \"aarch64_reg_or_zero\" \"rZ\")))]\n   \"\"\n   \"csinc\\\\t%<w>0, %<w>4, %<w>3, %M1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2773,8 +2490,7 @@\n \t  (match_operand:GPI 4 \"aarch64_reg_or_zero\" \"rZ\")))]\n   \"\"\n   \"csinv\\\\t%<w>0, %<w>4, %<w>3, %M1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*csneg3<mode>_insn\"\n@@ -2786,8 +2502,7 @@\n \t  (match_operand:GPI 4 \"aarch64_reg_or_zero\" \"rZ\")))]\n   \"\"\n   \"csneg\\\\t%<w>0, %<w>4, %<w>3, %M1\"\n-  [(set_attr \"v8type\" \"csel\")\n-   (set_attr \"type\" \"csel\")\n+  [(set_attr \"type\" \"csel\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; -------------------------------------------------------------------\n@@ -2800,8 +2515,7 @@\n \t\t     (match_operand:GPI 2 \"aarch64_logical_operand\" \"r,<lconst>\")))]\n   \"\"\n   \"<logical>\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"logic,logic_imm\")\n-   (set_attr \"type\" \"logic_reg,logic_imm\")\n+  [(set_attr \"type\" \"logic_reg,logic_imm\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; zero_extend version of above\n@@ -2812,8 +2526,7 @@\n \t\t     (match_operand:SI 2 \"aarch64_logical_operand\" \"r,K\"))))]\n   \"\"\n   \"<logical>\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"logic,logic_imm\")\n-   (set_attr \"type\" \"logic_reg,logic_imm\")\n+  [(set_attr \"type\" \"logic_reg,logic_imm\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*and<mode>3_compare0\"\n@@ -2826,8 +2539,7 @@\n \t(and:GPI (match_dup 1) (match_dup 2)))]\n   \"\"\n   \"ands\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"logics,logics_imm\")\n-   (set_attr \"type\" \"logics_reg,logics_imm\")\n+  [(set_attr \"type\" \"logics_reg,logics_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2842,8 +2554,7 @@\n \t(zero_extend:DI (and:SI (match_dup 1) (match_dup 2))))]\n   \"\"\n   \"ands\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"logics,logics_imm\")\n-   (set_attr \"type\" \"logics_reg,logics_imm\")\n+  [(set_attr \"type\" \"logics_reg,logics_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2859,8 +2570,7 @@\n \t(and:GPI (SHIFT:GPI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"\"\n   \"ands\\\\t%<w>0, %<w>3, %<w>1, <SHIFT:shift> %2\"\n-  [(set_attr \"v8type\" \"logics_shift\")\n-   (set_attr \"type\" \"logics_shift_imm\")\n+  [(set_attr \"type\" \"logics_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -2878,8 +2588,7 @@\n \t\t\t\t(match_dup 3))))]\n   \"\"\n   \"ands\\\\t%w0, %w3, %w1, <SHIFT:shift> %2\"\n-  [(set_attr \"v8type\" \"logics_shift\")\n-   (set_attr \"type\" \"logics_shift_imm\")\n+  [(set_attr \"type\" \"logics_shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -2891,8 +2600,7 @@\n \t\t     (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"<LOGICAL:logical>\\\\t%<w>0, %<w>3, %<w>1, <SHIFT:shift> %2\"\n-  [(set_attr \"v8type\" \"logic_shift\")\n-   (set_attr \"type\" \"logic_shift_imm\")\n+  [(set_attr \"type\" \"logic_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; zero_extend version of above\n@@ -2905,17 +2613,15 @@\n \t\t     (match_operand:SI 3 \"register_operand\" \"r\"))))]\n   \"\"\n   \"<LOGICAL:logical>\\\\t%w0, %w3, %w1, <SHIFT:shift> %2\"\n-  [(set_attr \"v8type\" \"logic_shift\")\n-   (set_attr \"type\" \"logic_shift_imm\")\n+  [(set_attr \"type\" \"logic_shift_imm\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"one_cmpl<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(not:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"mvn\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"logic\")\n-   (set_attr \"type\" \"logic_reg\")\n+  [(set_attr \"type\" \"logic_reg\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*one_cmpl_<optab><mode>2\"\n@@ -2924,8 +2630,7 @@\n \t\t\t    (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\"))))]\n   \"\"\n   \"mvn\\\\t%<w>0, %<w>1, <shift> %2\"\n-  [(set_attr \"v8type\" \"logic_shift\")\n-   (set_attr \"type\" \"logic_shift_imm\")\n+  [(set_attr \"type\" \"logic_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*<LOGICAL:optab>_one_cmpl<mode>3\"\n@@ -2935,8 +2640,7 @@\n \t\t     (match_operand:GPI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"<LOGICAL:nlogical>\\\\t%<w>0, %<w>2, %<w>1\"\n-  [(set_attr \"v8type\" \"logic\")\n-   (set_attr \"type\" \"logic_reg\")\n+  [(set_attr \"type\" \"logic_reg\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*and_one_cmpl<mode>3_compare0\"\n@@ -2950,8 +2654,7 @@\n \t(and:GPI (not:GPI (match_dup 1)) (match_dup 2)))]\n   \"\"\n   \"bics\\\\t%<w>0, %<w>2, %<w>1\"\n-  [(set_attr \"v8type\" \"logics\")\n-   (set_attr \"type\" \"logics_reg\")\n+  [(set_attr \"type\" \"logics_reg\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; zero_extend version of above\n@@ -2966,8 +2669,7 @@\n \t(zero_extend:DI (and:SI (not:SI (match_dup 1)) (match_dup 2))))]\n   \"\"\n   \"bics\\\\t%w0, %w2, %w1\"\n-  [(set_attr \"v8type\" \"logics\")\n-   (set_attr \"type\" \"logics_reg\")\n+  [(set_attr \"type\" \"logics_reg\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*<LOGICAL:optab>_one_cmpl_<SHIFT:optab><mode>3\"\n@@ -2979,8 +2681,7 @@\n \t\t     (match_operand:GPI 3 \"register_operand\" \"r\")))]\n   \"\"\n   \"<LOGICAL:nlogical>\\\\t%<w>0, %<w>3, %<w>1, <SHIFT:shift> %2\"\n-  [(set_attr \"v8type\" \"logic_shift\")\n-   (set_attr \"type\" \"logics_shift_imm\")\n+  [(set_attr \"type\" \"logics_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*and_one_cmpl_<SHIFT:optab><mode>3_compare0\"\n@@ -2998,8 +2699,7 @@\n \t\t   (match_dup 1) (match_dup 2))) (match_dup 3)))]\n   \"\"\n   \"bics\\\\t%<w>0, %<w>3, %<w>1, <SHIFT:shift> %2\"\n-  [(set_attr \"v8type\" \"logics_shift\")\n-   (set_attr \"type\" \"logics_shift_imm\")\n+  [(set_attr \"type\" \"logics_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; zero_extend version of above\n@@ -3018,17 +2718,15 @@\n \t\t\t  (SHIFT:SI (match_dup 1) (match_dup 2))) (match_dup 3))))]\n   \"\"\n   \"bics\\\\t%w0, %w3, %w1, <SHIFT:shift> %2\"\n-  [(set_attr \"v8type\" \"logics_shift\")\n-   (set_attr \"type\" \"logics_shift_imm\")\n+  [(set_attr \"type\" \"logics_shift_imm\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"clz<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(clz:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"clz\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"clz\")\n-   (set_attr \"type\" \"clz\")\n+  [(set_attr \"type\" \"clz\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_expand \"ffs<mode>2\"\n@@ -3051,17 +2749,15 @@\n \t(unspec:GPI [(match_operand:GPI 1 \"register_operand\" \"r\")] UNSPEC_CLS))]\n   \"\"\n   \"cls\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"clz\")\n-   (set_attr \"type\" \"clz\")\n+  [(set_attr \"type\" \"clz\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"rbit<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(unspec:GPI [(match_operand:GPI 1 \"register_operand\" \"r\")] UNSPEC_RBIT))]\n   \"\"\n   \"rbit\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"rbit\")\n-   (set_attr \"type\" \"rbit\")\n+  [(set_attr \"type\" \"rbit\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_expand \"ctz<mode>2\"\n@@ -3083,8 +2779,7 @@\n \t (const_int 0)))]\n   \"\"\n   \"tst\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"logics\")\n-   (set_attr \"type\" \"logics_reg\")\n+  [(set_attr \"type\" \"logics_reg\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*and_<SHIFT:optab><mode>3nr_compare0\"\n@@ -3097,8 +2792,7 @@\n \t(const_int 0)))]\n   \"\"\n   \"tst\\\\t%<w>2, %<w>0, <SHIFT:shift> %1\"\n-  [(set_attr \"v8type\" \"logics_shift\")\n-   (set_attr \"type\" \"logics_shift_imm\")\n+  [(set_attr \"type\" \"logics_shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; -------------------------------------------------------------------\n@@ -3200,7 +2894,6 @@\n    ushl\\t%<rtn>0<vas>, %<rtn>1<vas>, %<rtn>2<vas>\n    lsl\\t%<w>0, %<w>1, %<w>2\"\n   [(set_attr \"simd\" \"yes,yes,no\")\n-   (set_attr \"v8type\" \"*,*,shift\")\n    (set_attr \"type\" \"neon_shift_imm<q>, neon_shift_reg<q>,shift_reg\")\n    (set_attr \"mode\" \"*,*,<MODE>\")]\n )\n@@ -3217,7 +2910,6 @@\n    #\n    lsr\\t%<w>0, %<w>1, %<w>2\"\n   [(set_attr \"simd\" \"yes,yes,no\")\n-   (set_attr \"v8type\" \"*,*,shift\")\n    (set_attr \"type\" \"neon_shift_imm<q>,neon_shift_reg<q>,shift_reg\")\n    (set_attr \"mode\" \"*,*,<MODE>\")]\n )\n@@ -3260,7 +2952,6 @@\n    #\n    asr\\t%<w>0, %<w>1, %<w>2\"\n   [(set_attr \"simd\" \"yes,yes,no\")\n-   (set_attr \"v8type\" \"*,*,shift\")\n    (set_attr \"type\" \"neon_shift_imm<q>,neon_shift_reg<q>,shift_reg\")\n    (set_attr \"mode\" \"*,*,<MODE>\")]\n )\n@@ -3353,8 +3044,7 @@\n           (match_operand:QI 2 \"aarch64_reg_or_shift_imm_<mode>\" \"rUs<cmode>\")))]\n   \"\"\n   \"ror\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"shift\")\n-   (set_attr \"type\" \"shift_reg\")\n+  [(set_attr \"type\" \"shift_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3366,8 +3056,7 @@\n \t (match_operand:QI 2 \"aarch64_reg_or_shift_imm_si\" \"rUss\"))))]\n   \"\"\n   \"<shift>\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"v8type\" \"shift\")\n-   (set_attr \"type\" \"shift_reg\")\n+  [(set_attr \"type\" \"shift_reg\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -3377,8 +3066,7 @@\n \t\t      (match_operand:QI 2 \"aarch64_reg_or_shift_imm_si\" \"rUss\")))]\n   \"\"\n   \"lsl\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"v8type\" \"shift\")\n-   (set_attr \"type\" \"shift_reg\")\n+  [(set_attr \"type\" \"shift_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3391,8 +3079,7 @@\n   operands[3] = GEN_INT (<sizen> - UINTVAL (operands[2]));\n   return \"<bfshift>\\t%w0, %w1, %2, %3\";\n }\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3405,8 +3092,7 @@\n   \"UINTVAL (operands[3]) < GET_MODE_BITSIZE (<MODE>mode) &&\n    (UINTVAL (operands[3]) + UINTVAL (operands[4]) == GET_MODE_BITSIZE (<MODE>mode))\"\n   \"extr\\\\t%<w>0, %<w>1, %<w>2, %4\"\n-  [(set_attr \"v8type\" \"shift\")\n-   (set_attr \"type\" \"shift_imm\")\n+  [(set_attr \"type\" \"shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3421,8 +3107,7 @@\n   \"UINTVAL (operands[3]) < 32 &&\n    (UINTVAL (operands[3]) + UINTVAL (operands[4]) == 32)\"\n   \"extr\\\\t%w0, %w1, %w2, %4\"\n-  [(set_attr \"v8type\" \"shift\")\n-   (set_attr \"type\" \"shift_imm\")\n+  [(set_attr \"type\" \"shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -3435,8 +3120,7 @@\n   operands[3] = GEN_INT (<sizen> - UINTVAL (operands[2]));\n   return \"ror\\\\t%<w>0, %<w>1, %3\";\n }\n-  [(set_attr \"v8type\" \"shift\")\n-   (set_attr \"type\" \"shift_imm\")\n+  [(set_attr \"type\" \"shift_imm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3451,8 +3135,7 @@\n   operands[3] = GEN_INT (32 - UINTVAL (operands[2]));\n   return \"ror\\\\t%w0, %w1, %3\";\n }\n-  [(set_attr \"v8type\" \"shift\")\n-   (set_attr \"type\" \"shift_imm\")\n+  [(set_attr \"type\" \"shift_imm\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -3466,8 +3149,7 @@\n   operands[3] = GEN_INT (<SHORT:sizen> - UINTVAL (operands[2]));\n   return \"<su>bfiz\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -3481,8 +3163,7 @@\n   operands[3] = GEN_INT (<SHORT:sizen> - UINTVAL (operands[2]));\n   return \"ubfx\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -3496,8 +3177,7 @@\n   operands[3] = GEN_INT (<SHORT:sizen> - UINTVAL (operands[2]));\n   return \"sbfx\\\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -3521,8 +3201,7 @@\n \t\t\t (match_operand 3 \"const_int_operand\" \"n\")))]\n   \"\"\n   \"<su>bfx\\\\t%<w>0, %<w>1, %3, %2\"\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3566,8 +3245,7 @@\n      || (UINTVAL (operands[2]) + UINTVAL (operands[1])\n \t > GET_MODE_BITSIZE (<MODE>mode)))\"\n   \"bfi\\\\t%<w>0, %<w>3, %2, %1\"\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3582,8 +3260,7 @@\n      || (UINTVAL (operands[3]) + UINTVAL (operands[1])\n \t > GET_MODE_BITSIZE (<MODE>mode)))\"\n   \"bfxil\\\\t%<w>0, %<w>2, %3, %1\"\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3599,8 +3276,7 @@\n \t      : GEN_INT (<GPI:sizen> - UINTVAL (operands[2]));\n   return \"<su>bfiz\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<GPI:MODE>\")]\n )\n \n@@ -3614,8 +3290,7 @@\n   \"exact_log2 ((INTVAL (operands[3]) >> INTVAL (operands[2])) + 1) >= 0\n    && (INTVAL (operands[3]) & ((1 << INTVAL (operands[2])) - 1)) == 0\"\n   \"ubfiz\\\\t%<w>0, %<w>1, %2, %P3\"\n-  [(set_attr \"v8type\" \"bfm\")\n-   (set_attr \"type\" \"bfm\")\n+  [(set_attr \"type\" \"bfm\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3624,8 +3299,7 @@\n         (bswap:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"rev\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"v8type\" \"rev\")\n-   (set_attr \"type\" \"rev\")\n+  [(set_attr \"type\" \"rev\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3634,8 +3308,7 @@\n         (bswap:HI (match_operand:HI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"rev16\\\\t%w0, %w1\"\n-  [(set_attr \"v8type\" \"rev\")\n-   (set_attr \"type\" \"rev\")\n+  [(set_attr \"type\" \"rev\")\n    (set_attr \"mode\" \"HI\")]\n )\n \n@@ -3645,8 +3318,7 @@\n         (zero_extend:DI (bswap:SI (match_operand:SI 1 \"register_operand\" \"r\"))))]\n   \"\"\n   \"rev\\\\t%w0, %w1\"\n-  [(set_attr \"v8type\" \"rev\")\n-   (set_attr \"type\" \"rev\")\n+  [(set_attr \"type\" \"rev\")\n    (set_attr \"mode\" \"SI\")]\n )\n \n@@ -3663,8 +3335,7 @@\n \t FRINT))]\n   \"TARGET_FLOAT\"\n   \"frint<frint_suffix>\\\\t%<s>0, %<s>1\"\n-  [(set_attr \"v8type\" \"frint\")\n-   (set_attr \"type\" \"f_rint<s>\")\n+  [(set_attr \"type\" \"f_rint<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3676,8 +3347,7 @@\n \t\t      FCVT)))]\n   \"TARGET_FLOAT\"\n   \"fcvt<frint_suffix><su>\\\\t%<GPI:w>0, %<GPF:s>1\"\n-  [(set_attr \"v8type\" \"fcvtf2i\")\n-   (set_attr \"type\" \"f_cvtf2i\")\n+  [(set_attr \"type\" \"f_cvtf2i\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3691,8 +3361,7 @@\n \t\t (match_operand:GPF 3 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fmadd\\\\t%<s>0, %<s>1, %<s>2, %<s>3\"\n-  [(set_attr \"v8type\" \"fmadd\")\n-   (set_attr \"type\" \"fmac<s>\")\n+  [(set_attr \"type\" \"fmac<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3703,8 +3372,7 @@\n \t\t (match_operand:GPF 3 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fmsub\\\\t%<s>0, %<s>1, %<s>2, %<s>3\"\n-  [(set_attr \"v8type\" \"fmadd\")\n-   (set_attr \"type\" \"fmac<s>\")\n+  [(set_attr \"type\" \"fmac<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3715,8 +3383,7 @@\n \t\t (neg:GPF (match_operand:GPF 3 \"register_operand\" \"w\"))))]\n   \"TARGET_FLOAT\"\n   \"fnmsub\\\\t%<s>0, %<s>1, %<s>2, %<s>3\"\n-  [(set_attr \"v8type\" \"fmadd\")\n-   (set_attr \"type\" \"fmac<s>\")\n+  [(set_attr \"type\" \"fmac<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3727,8 +3394,7 @@\n \t\t (neg:GPF (match_operand:GPF 3 \"register_operand\" \"w\"))))]\n   \"TARGET_FLOAT\"\n   \"fnmadd\\\\t%<s>0, %<s>1, %<s>2, %<s>3\"\n-  [(set_attr \"v8type\" \"fmadd\")\n-   (set_attr \"type\" \"fmac<s>\")\n+  [(set_attr \"type\" \"fmac<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3740,8 +3406,7 @@\n \t\t\t  (match_operand:GPF 3 \"register_operand\" \"w\"))))]\n   \"!HONOR_SIGNED_ZEROS (<MODE>mode) && TARGET_FLOAT\"\n   \"fnmadd\\\\t%<s>0, %<s>1, %<s>2, %<s>3\"\n-  [(set_attr \"v8type\" \"fmadd\")\n-   (set_attr \"type\" \"fmac<s>\")\n+  [(set_attr \"type\" \"fmac<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3754,8 +3419,7 @@\n         (float_extend:DF (match_operand:SF 1 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fcvt\\\\t%d0, %s1\"\n-  [(set_attr \"v8type\" \"fcvt\")\n-   (set_attr \"type\" \"f_cvt\")\n+  [(set_attr \"type\" \"f_cvt\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"mode2\" \"SF\")]\n )\n@@ -3765,8 +3429,7 @@\n         (float_truncate:SF (match_operand:DF 1 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fcvt\\\\t%s0, %d1\"\n-  [(set_attr \"v8type\" \"fcvt\")\n-   (set_attr \"type\" \"f_cvt\")\n+  [(set_attr \"type\" \"f_cvt\")\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"mode2\" \"DF\")]\n )\n@@ -3776,8 +3439,7 @@\n         (fix:GPI (match_operand:GPF 1 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fcvtzs\\\\t%<GPI:w>0, %<GPF:s>1\"\n-  [(set_attr \"v8type\" \"fcvtf2i\")\n-   (set_attr \"type\" \"f_cvtf2i\")\n+  [(set_attr \"type\" \"f_cvtf2i\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3787,8 +3449,7 @@\n         (unsigned_fix:GPI (match_operand:GPF 1 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fcvtzu\\\\t%<GPI:w>0, %<GPF:s>1\"\n-  [(set_attr \"v8type\" \"fcvtf2i\")\n-   (set_attr \"type\" \"f_cvtf2i\")\n+  [(set_attr \"type\" \"f_cvtf2i\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3798,8 +3459,7 @@\n         (float:GPF (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"TARGET_FLOAT\"\n   \"scvtf\\\\t%<GPF:s>0, %<GPI:w>1\"\n-  [(set_attr \"v8type\" \"fcvti2f\")\n-   (set_attr \"type\" \"f_cvti2f\")\n+  [(set_attr \"type\" \"f_cvti2f\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3809,8 +3469,7 @@\n         (unsigned_float:GPF (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"TARGET_FLOAT\"\n   \"ucvtf\\\\t%<GPF:s>0, %<GPI:w>1\"\n-  [(set_attr \"v8type\" \"fcvt\")\n-   (set_attr \"type\" \"f_cvt\")\n+  [(set_attr \"type\" \"f_cvt\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3826,8 +3485,7 @@\n          (match_operand:GPF 2 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fadd\\\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"v8type\" \"fadd\")\n-   (set_attr \"type\" \"fadd<s>\")\n+  [(set_attr \"type\" \"fadd<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3838,8 +3496,7 @@\n          (match_operand:GPF 2 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fsub\\\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"v8type\" \"fadd\")\n-   (set_attr \"type\" \"fadd<s>\")\n+  [(set_attr \"type\" \"fadd<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3850,8 +3507,7 @@\n          (match_operand:GPF 2 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fmul\\\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"v8type\" \"fmul\")\n-   (set_attr \"type\" \"fmul<s>\")\n+  [(set_attr \"type\" \"fmul<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3862,8 +3518,7 @@\n \t\t (match_operand:GPF 2 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fnmul\\\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"v8type\" \"fmul\")\n-   (set_attr \"type\" \"fmul<s>\")\n+  [(set_attr \"type\" \"fmul<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3874,8 +3529,7 @@\n          (match_operand:GPF 2 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fdiv\\\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"v8type\" \"fdiv\")\n-   (set_attr \"type\" \"fdiv<s>\")\n+  [(set_attr \"type\" \"fdiv<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3884,8 +3538,7 @@\n         (neg:GPF (match_operand:GPF 1 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fneg\\\\t%<s>0, %<s>1\"\n-  [(set_attr \"v8type\" \"ffarith\")\n-   (set_attr \"type\" \"ffarith<s>\")\n+  [(set_attr \"type\" \"ffarith<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3894,8 +3547,7 @@\n         (sqrt:GPF (match_operand:GPF 1 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fsqrt\\\\t%<s>0, %<s>1\"\n-  [(set_attr \"v8type\" \"fsqrt\")\n-   (set_attr \"type\" \"fsqrt<s>\")\n+  [(set_attr \"type\" \"fsqrt<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3904,8 +3556,7 @@\n         (abs:GPF (match_operand:GPF 1 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fabs\\\\t%<s>0, %<s>1\"\n-  [(set_attr \"v8type\" \"ffarith\")\n-   (set_attr \"type\" \"ffarith<s>\")\n+  [(set_attr \"type\" \"ffarith<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3919,8 +3570,7 @@\n \t\t  (match_operand:GPF 2 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fmaxnm\\\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"v8type\" \"fminmax\")\n-   (set_attr \"type\" \"f_minmax<s>\")\n+  [(set_attr \"type\" \"f_minmax<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3930,8 +3580,7 @@\n \t\t  (match_operand:GPF 2 \"register_operand\" \"w\")))]\n   \"TARGET_FLOAT\"\n   \"fminnm\\\\t%<s>0, %<s>1, %<s>2\"\n-  [(set_attr \"v8type\" \"fminmax\")\n-   (set_attr \"type\" \"f_minmax<s>\")\n+  [(set_attr \"type\" \"f_minmax<s>\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -3964,8 +3613,7 @@\n         (truncate:DI (match_operand:TX 1 \"register_operand\" \"w\")))]\n   \"reload_completed || reload_in_progress\"\n   \"fmov\\\\t%x0, %d1\"\n-  [(set_attr \"v8type\" \"fmovf2i\")\n-   (set_attr \"type\" \"f_mrc\")\n+  [(set_attr \"type\" \"f_mrc\")\n    (set_attr \"mode\"   \"DI\")\n    (set_attr \"length\" \"4\")\n   ])\n@@ -3977,8 +3625,7 @@\n \t\t       (const_int 64))))]\n   \"reload_completed || reload_in_progress\"\n   \"fmov\\\\t%x0, %1.d[1]\"\n-  [(set_attr \"v8type\" \"fmovf2i\")\n-   (set_attr \"type\" \"f_mrc\")\n+  [(set_attr \"type\" \"f_mrc\")\n    (set_attr \"mode\"   \"DI\")\n    (set_attr \"length\" \"4\")\n   ])\n@@ -3989,8 +3636,7 @@\n         (zero_extend:TX (match_operand:DI 1 \"register_operand\" \"r\")))]\n   \"reload_completed || reload_in_progress\"\n   \"fmov\\\\t%0.d[1], %x1\"\n-  [(set_attr \"v8type\" \"fmovi2f\")\n-   (set_attr \"type\" \"f_mcr\")\n+  [(set_attr \"type\" \"f_mcr\")\n    (set_attr \"mode\"   \"DI\")\n    (set_attr \"length\" \"4\")\n   ])\n@@ -4000,8 +3646,7 @@\n         (zero_extend:TX (match_operand:DI 1 \"register_operand\" \"r\")))]\n   \"reload_completed || reload_in_progress\"\n   \"fmov\\\\t%d0, %x1\"\n-  [(set_attr \"v8type\" \"fmovi2f\")\n-   (set_attr \"type\" \"f_mcr\")\n+  [(set_attr \"type\" \"f_mcr\")\n    (set_attr \"mode\"   \"DI\")\n    (set_attr \"length\" \"4\")\n   ])\n@@ -4012,8 +3657,7 @@\n \t  (truncate:DI (match_operand:TI 1 \"register_operand\" \"w\"))))]\n   \"reload_completed || reload_in_progress\"\n   \"fmov\\\\t%d0, %d1\"\n-  [(set_attr \"v8type\" \"fmovi2f\")\n-   (set_attr \"type\" \"f_mcr\")\n+  [(set_attr \"type\" \"f_mcr\")\n    (set_attr \"mode\"   \"DI\")\n    (set_attr \"length\" \"4\")\n   ])\n@@ -4045,8 +3689,7 @@\n \t\t  (match_operand 2 \"aarch64_valid_symref\" \"S\")))]\n   \"\"\n   \"add\\\\t%<w>0, %<w>1, :lo12:%a2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_reg\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -4058,8 +3701,7 @@\n \t\t    UNSPEC_GOTSMALLPIC))]\n   \"\"\n   \"ldr\\\\t%<w>0, [%1, #:got_lo12:%a2]\"\n-  [(set_attr \"v8type\" \"load1\")\n-   (set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load1\")\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n@@ -4072,8 +3714,7 @@\n \t\t    UNSPEC_GOTSMALLPIC)))]\n   \"TARGET_ILP32\"\n   \"ldr\\\\t%w0, [%1, #:got_lo12:%a2]\"\n-  [(set_attr \"v8type\" \"load1\")\n-   (set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load1\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -4083,8 +3724,7 @@\n \t\t   UNSPEC_GOTTINYPIC))]\n   \"\"\n   \"ldr\\\\t%0, %L1\"\n-  [(set_attr \"v8type\" \"load1\")\n-   (set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load1\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -4093,8 +3733,7 @@\n \t(unspec:DI [(const_int 0)] UNSPEC_TLS))]\n   \"\"\n   \"mrs\\\\t%0, tpidr_el0\"\n-  [(set_attr \"v8type\" \"mrs\")\n-   (set_attr \"type\" \"mrs\")\n+  [(set_attr \"type\" \"mrs\")\n    (set_attr \"mode\" \"DI\")]\n )\n \n@@ -4119,8 +3758,7 @@\n   ]\n   \"\"\n   \"adrp\\\\tx0, %A1\\;add\\\\tx0, x0, %L1\\;bl\\\\t%2\\;nop\"\n-  [(set_attr \"v8type\" \"call\")\n-   (set_attr \"type\" \"call\")\n+  [(set_attr \"type\" \"call\")\n    (set_attr \"length\" \"16\")])\n \n (define_insn \"tlsie_small\"\n@@ -4129,8 +3767,7 @@\n \t\t   UNSPEC_GOTSMALLTLS))]\n   \"\"\n   \"adrp\\\\t%0, %A1\\;ldr\\\\t%0, [%0, #%L1]\"\n-  [(set_attr \"v8type\" \"load1\")\n-   (set_attr \"type\" \"load1\")\n+  [(set_attr \"type\" \"load1\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"length\" \"8\")]\n )\n@@ -4142,8 +3779,7 @@\n \t\t   UNSPEC_GOTSMALLTLS))]\n   \"\"\n   \"add\\\\t%0, %1, #%G2\\;add\\\\t%0, %0, #%L2\"\n-  [(set_attr \"v8type\" \"alu\")\n-   (set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_reg\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"length\" \"8\")]\n )\n@@ -4156,8 +3792,7 @@\n    (clobber (match_scratch:DI 1 \"=r\"))]\n   \"TARGET_TLS_DESC\"\n   \"adrp\\\\tx0, %A0\\;ldr\\\\t%1, [x0, #%L0]\\;add\\\\tx0, x0, %L0\\;.tlsdesccall\\\\t%0\\;blr\\\\t%1\"\n-  [(set_attr \"v8type\" \"call\")\n-   (set_attr \"type\" \"call\")\n+  [(set_attr \"type\" \"call\")\n    (set_attr \"length\" \"16\")])\n \n (define_insn \"stack_tie\""}]}