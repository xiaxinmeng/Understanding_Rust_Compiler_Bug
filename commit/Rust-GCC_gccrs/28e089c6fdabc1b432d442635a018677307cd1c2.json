{"sha": "28e089c6fdabc1b432d442635a018677307cd1c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlMDg5YzZmZGFiYzFiNDMyZDQ0MjYzNWEwMTg2NzczMDdjZDFjMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-06-13T03:39:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-06-13T03:39:47Z"}, "message": "* gcc.c-torture/execute/20030611-1.c: New test.\n\nFrom-SVN: r67871", "tree": {"sha": "3fc658d9fcdfadedb37625073226a59b01569c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fc658d9fcdfadedb37625073226a59b01569c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28e089c6fdabc1b432d442635a018677307cd1c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e089c6fdabc1b432d442635a018677307cd1c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e089c6fdabc1b432d442635a018677307cd1c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e089c6fdabc1b432d442635a018677307cd1c2/comments", "author": null, "committer": null, "parents": [{"sha": "5adf448c3bf4ba52122ae94ee632d9cbf13510a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adf448c3bf4ba52122ae94ee632d9cbf13510a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5adf448c3bf4ba52122ae94ee632d9cbf13510a8"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "cb1623d9617ad2c213ffbd63b6cadee20bb846b7", "filename": "gcc/testsuite/gcc.c-torture/execute/20030613-1.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e089c6fdabc1b432d442635a018677307cd1c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030613-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e089c6fdabc1b432d442635a018677307cd1c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030613-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030613-1.c?ref=28e089c6fdabc1b432d442635a018677307cd1c2", "patch": "@@ -0,0 +1,62 @@\n+/* PR optimization/10955 */\n+/* Originator: <heinrich.brand@fujitsu-siemens.com> */\n+\n+/* This used to fail on SPARC32 at -O3 because the loop unroller\n+   wrongly thought it could eliminate a pseudo in a loop, while\n+   the pseudo was used outside the loop.  */\n+\n+extern void abort(void);\n+\n+#define COMPLEX struct CS\n+\n+COMPLEX {\n+  long x;\n+  long y;\n+};\n+\n+\n+static COMPLEX CCID (COMPLEX x)\n+{\n+  COMPLEX a;\n+\n+  a.x = x.x;\n+  a.y = x.y;\n+\n+  return a;\n+}\n+\n+\n+static COMPLEX CPOW (COMPLEX x, int y)\n+{\n+  COMPLEX a;\n+  a = x;\n+\n+  while (--y > 0)\n+    a=CCID(a);\n+\n+  return a;\n+}\n+\n+\n+static int c5p (COMPLEX x)\n+{\n+  COMPLEX a,b;\n+  a = CPOW (x, 2);\n+  b = CCID( CPOW(a,2) );\n+    \n+  return (b.x == b.y); \n+}\n+\n+\n+int main (void)\n+{\n+  COMPLEX  x;  \n+\n+  x.x = -7;\n+  x.y = -7;\n+\n+  if (!c5p(x))\n+    abort();\n+\n+  return 0;\n+}"}]}