{"sha": "7391b66c6a042a6b510baed4ceb65c26c73cc810", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM5MWI2NmM2YTA0MmE2YjUxMGJhZWQ0Y2ViNjVjMjZjNzNjYzgxMA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-06-03T21:13:59Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-06-03T21:13:59Z"}, "message": "configure.ac: Check declaration for asprintf, needed by libiberty.h.\n\n        * configure.ac: Check declaration for asprintf, needed by\n        libiberty.h.\n        * configure: Regenerate.\n        * config.in: Likewise.\n\nFrom-SVN: r100555", "tree": {"sha": "f0c0ee75438793828bd84d46498deff3b1bd7482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0c0ee75438793828bd84d46498deff3b1bd7482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7391b66c6a042a6b510baed4ceb65c26c73cc810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7391b66c6a042a6b510baed4ceb65c26c73cc810", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7391b66c6a042a6b510baed4ceb65c26c73cc810", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7391b66c6a042a6b510baed4ceb65c26c73cc810/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "441e96b5bc6736abb50a7f7927b77e4ab5b57daf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441e96b5bc6736abb50a7f7927b77e4ab5b57daf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441e96b5bc6736abb50a7f7927b77e4ab5b57daf"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "372e308d491136ba668bb69a6b17ce7b0e712d95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7391b66c6a042a6b510baed4ceb65c26c73cc810", "patch": "@@ -1,3 +1,10 @@\n+2005-06-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* configure.ac: Check declaration for asprintf, needed by\n+\tlibiberty.h. \n+\t* configure: Regenerate.\n+\t* config.in: Likewise.\n+\n 2005-06-03  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-ssa-dom.c (record_edge_info): Use last_basic_block to"}, {"sha": "2d12fd040429d278edd27bb46c5e1d654d03fca4", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=7391b66c6a042a6b510baed4ceb65c26c73cc810", "patch": "@@ -308,6 +308,13 @@\n #endif\n \n \n+/* Define to 1 if we found a declaration for 'asprintf', otherwise define to\n+   0. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_ASPRINTF\n+#endif\n+\n+\n /* Define to 1 if we found a declaration for 'atof', otherwise define to 0. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_DECL_ATOF"}, {"sha": "d258e444d30a6a181a86aa07434822f11e6c170e", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7391b66c6a042a6b510baed4ceb65c26c73cc810", "patch": "@@ -11206,7 +11206,8 @@ CFLAGS=\"$CFLAGS -I${srcdir} -I${srcdir}/../include\"\n \n \n \n-for ac_func in getenv atol sbrk abort atof getcwd getwd strsignal \\\n+\n+for ac_func in getenv atol asprintf sbrk abort atof getcwd getwd strsignal \\\n \tstrstr errno snprintf vsnprintf vasprintf malloc realloc calloc \\\n \tfree basename getopt clock getpagesize clearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked\n do"}, {"sha": "f5ac726501ba6bf5e1af7a84db2b0cadb886d30b", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7391b66c6a042a6b510baed4ceb65c26c73cc810/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=7391b66c6a042a6b510baed4ceb65c26c73cc810", "patch": "@@ -1047,7 +1047,7 @@ AM_LANGINFO_CODESET\n # We will need to find libiberty.h and ansidecl.h\n saved_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"$CFLAGS -I${srcdir} -I${srcdir}/../include\"\n-gcc_AC_CHECK_DECLS(getenv atol sbrk abort atof getcwd getwd strsignal \\\n+gcc_AC_CHECK_DECLS(getenv atol asprintf sbrk abort atof getcwd getwd strsignal \\\n \tstrstr errno snprintf vsnprintf vasprintf malloc realloc calloc \\\n \tfree basename getopt clock getpagesize gcc_UNLOCKED_FUNCS, , ,[\n #include \"ansidecl.h\""}]}