{"sha": "3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmMzhmMzNlNjY2ZGMxZWFkZDVkYWViYTNjMWM2MGI2YzA2ZjUwOA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2009-07-29T10:34:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-29T10:34:29Z"}, "message": "sem_ch3.ads, [...] (Add_Internal_Interface_Entities): Routine moved from the expander to the semantic analyzer to allow the...\n\n2009-07-29  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.ads, sem_ch3.adb (Add_Internal_Interface_Entities): Routine\n\tmoved from the expander to the semantic analyzer to allow the\n\tgeneration of these internal entities when compiling with no code\n\tgeneration. Required by ASIS.\n\t* sem.adb (Analyze): Add processing for N_Freeze_Entity nodes.\n\t* sem_ch13.ads, sem_ch13.adb (Analyze_Freeze_Entity): New subprogram.\n\t* exp_ch3.adb (Add_Internal_Interface_Entities): Moved to sem_ch3\n\t(Expand_Freeze_Record_Type): Remove call to\n\tAdd_Internal_Interface_Entities because this routine is now called at\n\tearly stage --when the freezing node is analyzed.\n\nFrom-SVN: r150205", "tree": {"sha": "9d0ac95590f47c7fb4b5ba48333c08bb09d39e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d0ac95590f47c7fb4b5ba48333c08bb09d39e30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a73734f5f5f049c80fcac8ea7f3f8e7423532eab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73734f5f5f049c80fcac8ea7f3f8e7423532eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73734f5f5f049c80fcac8ea7f3f8e7423532eab"}], "stats": {"total": 252, "additions": 140, "deletions": 112}, "files": [{"sha": "90120e89d55d36623df9a22939e9631b5fece741", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "patch": "@@ -1,3 +1,16 @@\n+2009-07-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.ads, sem_ch3.adb (Add_Internal_Interface_Entities): Routine\n+\tmoved from the expander to the semantic analyzer to allow the\n+\tgeneration of these internal entities when compiling with no code\n+\tgeneration. Required by ASIS.\n+\t* sem.adb (Analyze): Add processing for N_Freeze_Entity nodes.\n+\t* sem_ch13.ads, sem_ch13.adb (Analyze_Freeze_Entity): New subprogram.\n+\t* exp_ch3.adb (Add_Internal_Interface_Entities): Moved to sem_ch3\n+\t(Expand_Freeze_Record_Type): Remove call to\n+\tAdd_Internal_Interface_Entities because this routine is now called at\n+\tearly stage --when the freezing node is analyzed.\n+\n 2009-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_atag.ads, exp_atag.adb, s-tasini.adb, s-soflin.ads,"}, {"sha": "c0861e30890899356d9b8d08747d73a885e51bd8", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "patch": "@@ -5617,105 +5617,6 @@ package body Exp_Ch3 is\n    -------------------------------\n \n    procedure Expand_Freeze_Record_Type (N : Node_Id) is\n-\n-      procedure Add_Internal_Interface_Entities (Tagged_Type : Entity_Id);\n-      --  Add to the list of primitives of Tagged_Types the internal entities\n-      --  associated with interface primitives that are located in secondary\n-      --  dispatch tables.\n-\n-      -------------------------------------\n-      -- Add_Internal_Interface_Entities --\n-      -------------------------------------\n-\n-      procedure Add_Internal_Interface_Entities (Tagged_Type : Entity_Id) is\n-         Elmt        : Elmt_Id;\n-         Iface       : Entity_Id;\n-         Iface_Elmt  : Elmt_Id;\n-         Iface_Prim  : Entity_Id;\n-         Ifaces_List : Elist_Id;\n-         New_Subp    : Entity_Id := Empty;\n-         Prim        : Entity_Id;\n-\n-      begin\n-         pragma Assert (Ada_Version >= Ada_05\n-           and then Is_Record_Type (Tagged_Type)\n-           and then Is_Tagged_Type (Tagged_Type)\n-           and then Has_Interfaces (Tagged_Type)\n-           and then not Is_Interface (Tagged_Type));\n-\n-         Collect_Interfaces (Tagged_Type, Ifaces_List);\n-\n-         Iface_Elmt := First_Elmt (Ifaces_List);\n-         while Present (Iface_Elmt) loop\n-            Iface := Node (Iface_Elmt);\n-\n-            --  Exclude from this processing interfaces that are parents\n-            --  of Tagged_Type because their primitives are located in the\n-            --  primary dispatch table (and hence no auxiliary internal\n-            --  entities are required to handle secondary dispatch tables\n-            --  in such case).\n-\n-            if not Is_Ancestor (Iface, Tagged_Type) then\n-               Elmt := First_Elmt (Primitive_Operations (Iface));\n-               while Present (Elmt) loop\n-                  Iface_Prim := Node (Elmt);\n-\n-                  if not Is_Predefined_Dispatching_Operation (Iface_Prim) then\n-                     Prim :=\n-                       Find_Primitive_Covering_Interface\n-                         (Tagged_Type => Tagged_Type,\n-                          Iface_Prim  => Iface_Prim);\n-\n-                     pragma Assert (Present (Prim));\n-\n-                     Derive_Subprogram\n-                       (New_Subp     => New_Subp,\n-                        Parent_Subp  => Iface_Prim,\n-                        Derived_Type => Tagged_Type,\n-                        Parent_Type  => Iface);\n-\n-                     --  Ada 2005 (AI-251): Decorate internal entity Iface_Subp\n-                     --  associated with interface types. These entities are\n-                     --  only registered in the list of primitives of its\n-                     --  corresponding tagged type because they are only used\n-                     --  to fill the contents of the secondary dispatch tables.\n-                     --  Therefore they are removed from the homonym chains.\n-\n-                     Set_Is_Hidden (New_Subp);\n-                     Set_Is_Internal (New_Subp);\n-                     Set_Alias (New_Subp, Prim);\n-                     Set_Is_Abstract_Subprogram (New_Subp,\n-                       Is_Abstract_Subprogram (Prim));\n-                     Set_Interface_Alias (New_Subp, Iface_Prim);\n-\n-                     --  Internal entities associated with interface types are\n-                     --  only registered in the list of primitives of the\n-                     --  tagged type. They are only used to fill the contents\n-                     --  of the secondary dispatch tables. Therefore they are\n-                     --  not needed in the homonym chains.\n-\n-                     Remove_Homonym (New_Subp);\n-\n-                     --  Hidden entities associated with interfaces must have\n-                     --  set the Has_Delay_Freeze attribute to ensure that, in\n-                     --  case of locally defined tagged types (or compiling\n-                     --  with static dispatch tables generation disabled) the\n-                     --  corresponding entry of the secondary dispatch table is\n-                     --  filled when such entity is frozen.\n-\n-                     Set_Has_Delayed_Freeze (New_Subp);\n-                  end if;\n-\n-                  Next_Elmt (Elmt);\n-               end loop;\n-            end if;\n-\n-            Next_Elmt (Iface_Elmt);\n-         end loop;\n-      end Add_Internal_Interface_Entities;\n-\n-      --  Local variables\n-\n       Def_Id        : constant Node_Id := Entity (N);\n       Type_Decl     : constant Node_Id := Parent (Def_Id);\n       Comp          : Entity_Id;\n@@ -5948,17 +5849,6 @@ package body Exp_Ch3 is\n                Insert_Actions (N, Null_Proc_Decl_List);\n             end if;\n \n-            --  Ada 2005 (AI-251): Add internal entities associated with\n-            --  secondary dispatch tables to the list of primitives of tagged\n-            --  types that are not interfaces\n-\n-            if Ada_Version >= Ada_05\n-              and then not Is_Interface (Def_Id)\n-              and then Has_Interfaces (Def_Id)\n-            then\n-               Add_Internal_Interface_Entities (Def_Id);\n-            end if;\n-\n             Set_Is_Frozen (Def_Id);\n             Set_All_DT_Position (Def_Id);\n "}, {"sha": "bac147c96b99c0b8ecac9c859f279d19fc21e16f", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "patch": "@@ -243,7 +243,7 @@ package body Sem is\n             Analyze_Free_Statement (N);\n \n          when N_Freeze_Entity =>\n-            null;  -- no semantic processing required\n+            Analyze_Freeze_Entity (N);\n \n          when N_Full_Type_Declaration =>\n             Analyze_Type_Declaration (N);"}, {"sha": "6542dd28174d52cc520fd3435095a6a9d0571b56", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "patch": "@@ -40,6 +40,7 @@ with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n+with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n@@ -2197,6 +2198,33 @@ package body Sem_Ch13 is\n       Analyze (Expression (N));\n    end Analyze_Free_Statement;\n \n+   ---------------------------\n+   -- Analyze_Freeze_Entity --\n+   ---------------------------\n+\n+   procedure Analyze_Freeze_Entity (N : Node_Id) is\n+      E : constant Entity_Id := Entity (N);\n+\n+   begin\n+      --  For tagged types covering interfaces add internal entities that link\n+      --  the primitives of the interfaces with the primitives that cover them.\n+\n+      --  Note: These entities were originally generated only when generating\n+      --  code because their main purpose was to provide support to initialize\n+      --  the secondary dispatch tables. They are now generated also when\n+      --  compiling with no code generation to provide ASIS the relationship\n+      --  between interface primitives and tagged type primitives.\n+\n+      if Ada_Version >= Ada_05\n+        and then Ekind (E) = E_Record_Type\n+        and then Is_Tagged_Type (E)\n+        and then not Is_Interface (E)\n+        and then Has_Interfaces (E)\n+      then\n+         Add_Internal_Interface_Entities (E);\n+      end if;\n+   end Analyze_Freeze_Entity;\n+\n    ------------------------------------------\n    -- Analyze_Record_Representation_Clause --\n    ------------------------------------------"}, {"sha": "93587fd38d2e920c60784e55fa9e355db76b01d0", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,7 @@ package Sem_Ch13 is\n    procedure Analyze_Attribute_Definition_Clause        (N : Node_Id);\n    procedure Analyze_Enumeration_Representation_Clause  (N : Node_Id);\n    procedure Analyze_Free_Statement                     (N : Node_Id);\n+   procedure Analyze_Freeze_Entity                      (N : Node_Id);\n    procedure Analyze_Record_Representation_Clause       (N : Node_Id);\n    procedure Analyze_Code_Statement                     (N : Node_Id);\n "}, {"sha": "d8f1e1dd36b04596e7b766d3b22e61f31615a327", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "patch": "@@ -1506,6 +1506,97 @@ package body Sem_Ch3 is\n       end if;\n    end Add_Interface_Tag_Components;\n \n+   -------------------------------------\n+   -- Add_Internal_Interface_Entities --\n+   -------------------------------------\n+\n+   procedure Add_Internal_Interface_Entities (Tagged_Type : Entity_Id) is\n+      Elmt        : Elmt_Id;\n+      Iface       : Entity_Id;\n+      Iface_Elmt  : Elmt_Id;\n+      Iface_Prim  : Entity_Id;\n+      Ifaces_List : Elist_Id;\n+      New_Subp    : Entity_Id := Empty;\n+      Prim        : Entity_Id;\n+\n+   begin\n+      pragma Assert (Ada_Version >= Ada_05\n+        and then Is_Record_Type (Tagged_Type)\n+        and then Is_Tagged_Type (Tagged_Type)\n+        and then Has_Interfaces (Tagged_Type)\n+        and then not Is_Interface (Tagged_Type));\n+\n+      Collect_Interfaces (Tagged_Type, Ifaces_List);\n+\n+      Iface_Elmt := First_Elmt (Ifaces_List);\n+      while Present (Iface_Elmt) loop\n+         Iface := Node (Iface_Elmt);\n+\n+         --  Exclude from this processing interfaces that are parents\n+         --  of Tagged_Type because their primitives are located in the\n+         --  primary dispatch table (and hence no auxiliary internal\n+         --  entities are required to handle secondary dispatch tables\n+         --  in such case).\n+\n+         if not Is_Ancestor (Iface, Tagged_Type) then\n+            Elmt := First_Elmt (Primitive_Operations (Iface));\n+            while Present (Elmt) loop\n+               Iface_Prim := Node (Elmt);\n+\n+               if not Is_Predefined_Dispatching_Operation (Iface_Prim) then\n+                  Prim :=\n+                    Find_Primitive_Covering_Interface\n+                      (Tagged_Type => Tagged_Type,\n+                       Iface_Prim  => Iface_Prim);\n+\n+                  pragma Assert (Present (Prim));\n+\n+                  Derive_Subprogram\n+                    (New_Subp     => New_Subp,\n+                     Parent_Subp  => Iface_Prim,\n+                     Derived_Type => Tagged_Type,\n+                     Parent_Type  => Iface);\n+\n+                  --  Ada 2005 (AI-251): Decorate internal entity Iface_Subp\n+                  --  associated with interface types. These entities are\n+                  --  only registered in the list of primitives of its\n+                  --  corresponding tagged type because they are only used\n+                  --  to fill the contents of the secondary dispatch tables.\n+                  --  Therefore they are removed from the homonym chains.\n+\n+                  Set_Is_Hidden (New_Subp);\n+                  Set_Is_Internal (New_Subp);\n+                  Set_Alias (New_Subp, Prim);\n+                  Set_Is_Abstract_Subprogram (New_Subp,\n+                    Is_Abstract_Subprogram (Prim));\n+                  Set_Interface_Alias (New_Subp, Iface_Prim);\n+\n+                  --  Internal entities associated with interface types are\n+                  --  only registered in the list of primitives of the\n+                  --  tagged type. They are only used to fill the contents\n+                  --  of the secondary dispatch tables. Therefore they are\n+                  --  not needed in the homonym chains.\n+\n+                  Remove_Homonym (New_Subp);\n+\n+                  --  Hidden entities associated with interfaces must have\n+                  --  set the Has_Delay_Freeze attribute to ensure that, in\n+                  --  case of locally defined tagged types (or compiling\n+                  --  with static dispatch tables generation disabled) the\n+                  --  corresponding entry of the secondary dispatch table is\n+                  --  filled when such entity is frozen.\n+\n+                  Set_Has_Delayed_Freeze (New_Subp);\n+               end if;\n+\n+               Next_Elmt (Elmt);\n+            end loop;\n+         end if;\n+\n+         Next_Elmt (Iface_Elmt);\n+      end loop;\n+   end Add_Internal_Interface_Entities;\n+\n    -----------------------------------\n    -- Analyze_Component_Declaration --\n    -----------------------------------"}, {"sha": "477f0205f38d80d309a32903ecde26092079edf9", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff38f33e666dc1eadd5daeba3c1c60b6c06f508/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=3ff38f33e666dc1eadd5daeba3c1c60b6c06f508", "patch": "@@ -64,6 +64,11 @@ package Sem_Ch3 is\n    --  the signature of the implicit type works like the profile of a regular\n    --  subprogram.\n \n+   procedure Add_Internal_Interface_Entities (Tagged_Type : Entity_Id);\n+   --  Add to the list of primitives of Tagged_Type the internal entities\n+   --  associated with covered interface primitives. These entities link the\n+   --  interface primitives with the tagged type primitives that cover them.\n+\n    procedure Analyze_Declarations (L : List_Id);\n    --  Called to analyze a list of declarations (in what context ???). Also\n    --  performs necessary freezing actions (more description needed ???)"}]}