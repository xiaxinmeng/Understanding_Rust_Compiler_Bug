{"sha": "ff5066d40b3d80ecc7ab688b3936d09019c42e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY1MDY2ZDQwYjNkODBlY2M3YWI2ODhiMzkzNmQwOTAxOWM0MmUwMg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-04-06T09:23:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:23:52Z"}, "message": "lib-writ.adb (Write_With_Lines): Factor duplicated code between the cases where a given dependency has a body or not.\n\n2007-04-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* lib-writ.adb (Write_With_Lines): Factor duplicated code between the\n\tcases where a given dependency has a body or not.\n\t(Write_With_File_Names): New subprogram, common code for the two cases\n\tabove.\n\nFrom-SVN: r123582", "tree": {"sha": "4c921244cce9321f7d6378b3cb0d49cdcadc99e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c921244cce9321f7d6378b3cb0d49cdcadc99e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff5066d40b3d80ecc7ab688b3936d09019c42e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5066d40b3d80ecc7ab688b3936d09019c42e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff5066d40b3d80ecc7ab688b3936d09019c42e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5066d40b3d80ecc7ab688b3936d09019c42e02/comments", "author": null, "committer": null, "parents": [{"sha": "2491bb7d8eff1dbc3d0639a05b8583c7e9e28d55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2491bb7d8eff1dbc3d0639a05b8583c7e9e28d55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2491bb7d8eff1dbc3d0639a05b8583c7e9e28d55"}], "stats": {"total": 56, "additions": 30, "deletions": 26}, "files": [{"sha": "14c62f0f49f45a019812008777cca816eed33c83", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff5066d40b3d80ecc7ab688b3936d09019c42e02/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff5066d40b3d80ecc7ab688b3936d09019c42e02/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=ff5066d40b3d80ecc7ab688b3936d09019c42e02", "patch": "@@ -629,6 +629,34 @@ package body Lib.Writ is\n          Body_Fname : File_Name_Type;\n          Body_Index : Nat;\n \n+         procedure Write_With_File_Names\n+           (Nam : in out File_Name_Type;\n+            Idx : Nat);\n+         --  Write source file name Nam and ALI file name for unit index Idx.\n+         --  Possibly change Nam to lowercase (generating a new file name).\n+\n+         --------------------------\n+         -- Write_With_File_Name --\n+         --------------------------\n+\n+         procedure Write_With_File_Names\n+           (Nam : in out File_Name_Type;\n+            Idx : Nat)\n+         is\n+         begin\n+            if not File_Names_Case_Sensitive then\n+               Get_Name_String (Nam);\n+               To_Lower (Name_Buffer (1 .. Name_Len));\n+               Nam := Name_Find;\n+            end if;\n+\n+            Write_Info_Name (Nam);\n+            Write_Info_Tab (49);\n+            Write_Info_Name (Lib_File_Name (Nam, Idx));\n+         end Write_With_File_Names;\n+\n+      --  Start of processing for Write_With_Lines\n+\n       begin\n          --  Loop to build the with table. A with on the main unit itself\n          --  is ignored (AARM 10.2(14a)). Such a with-clause can occur if\n@@ -705,33 +733,9 @@ package body Lib.Writ is\n                  or else (Ada_Version = Ada_83\n                            and then Full_Source_Name (Body_Fname) /= No_File)\n                then\n-                  --  Ensure that on platforms where the file names are not\n-                  --  case sensitive, the recorded file name is in lower case.\n-\n-                  if not File_Names_Case_Sensitive then\n-                     Get_Name_String (Body_Fname);\n-                     To_Lower (Name_Buffer (1 .. Name_Len));\n-                     Body_Fname := Name_Find;\n-                  end if;\n-\n-                  Write_Info_Name (Body_Fname);\n-                  Write_Info_Tab (49);\n-                  Write_Info_Name\n-                    (Lib_File_Name (Body_Fname, Body_Index));\n+                  Write_With_File_Names (Body_Fname, Body_Index);\n                else\n-                  --  Ensure that on platforms where the file names are not\n-                  --  case sensitive, the recorded file name is in lower case.\n-\n-                  if not File_Names_Case_Sensitive then\n-                     Get_Name_String (Fname);\n-                     To_Lower (Name_Buffer (1 .. Name_Len));\n-                     Fname := Name_Find;\n-                  end if;\n-\n-                  Write_Info_Name (Fname);\n-                  Write_Info_Tab (49);\n-                  Write_Info_Name\n-                    (Lib_File_Name (Fname, Munit_Index (Unum)));\n+                  Write_With_File_Names (Fname, Munit_Index (Unum));\n                end if;\n \n                if Elab_Flags (Unum) then"}]}