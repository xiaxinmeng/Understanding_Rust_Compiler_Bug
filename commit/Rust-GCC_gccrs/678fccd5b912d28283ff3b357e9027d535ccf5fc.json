{"sha": "678fccd5b912d28283ff3b357e9027d535ccf5fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc4ZmNjZDViOTEyZDI4MjgzZmYzYjM1N2U5MDI3ZDUzNWNjZjVmYw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-03-20T00:06:43Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-03-20T00:06:43Z"}, "message": "* gcj.texi (Code Generation):  Document new flags and assert defaults.\n\nFrom-SVN: r79715", "tree": {"sha": "81b26bedb428becef6997360d2987ec56967efc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81b26bedb428becef6997360d2987ec56967efc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/678fccd5b912d28283ff3b357e9027d535ccf5fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678fccd5b912d28283ff3b357e9027d535ccf5fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/678fccd5b912d28283ff3b357e9027d535ccf5fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678fccd5b912d28283ff3b357e9027d535ccf5fc/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0aa5f10b39e7e75365dab4bc2ae4388f3c1c43e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0aa5f10b39e7e75365dab4bc2ae4388f3c1c43e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0aa5f10b39e7e75365dab4bc2ae4388f3c1c43e"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "81fa8a52d55678626a768c2e334d36c847e78421", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/678fccd5b912d28283ff3b357e9027d535ccf5fc/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/678fccd5b912d28283ff3b357e9027d535ccf5fc/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=678fccd5b912d28283ff3b357e9027d535ccf5fc", "patch": "@@ -1,5 +1,7 @@\n 2004-03-19  Per Bothner  <per@bothner.com>\n \n+\t* gcj.texi (Code Generation):  Document new flags and assert defaults.\n+\n \t* class.c (assume_compiled_node_struct):  Rename type to\n \tclass_flag_node_struct, as it is now also used for enable_assertions.\n \tRename assume_compiled_node typedef.  Rename excludep field to value."}, {"sha": "26edf6909cc506d6ee619b56f73b1537e44f2512", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/678fccd5b912d28283ff3b357e9027d535ccf5fc/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/678fccd5b912d28283ff3b357e9027d535ccf5fc/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=678fccd5b912d28283ff3b357e9027d535ccf5fc", "patch": "@@ -431,6 +431,27 @@ to initialize static classes upon their first use (this optimization\n isn't carried out if @code{-C} was specified.) When compiling to native\n code, @code{-fno-optimize-static-class-initialization} will turn this\n optimization off, regardless of the optimization level in use.\n+\n+@item --disable-assertions[=@var{class-or-package}]\n+Don't include code for checking assertions in the compiled code.\n+If @code{=@var{class-or-package}} is missing disables assertion code\n+generation for all classes, unless overrideen by a more\n+specific @code{--enable-assertions} flag.\n+If @var{class-or-package} is a class name, only disables generating\n+assertion checks within the named class or its inner classes.\n+If @var{class-or-package} is a package name, disables generating\n+assertion checks within the named package or a subpackage.\n+\n+By default, assertions are enabled when generating class files\n+or when not optimizaing, and disabled when generating optimized binaries.\n+\n+@item --enable-assertions[=@var{class-or-package}]\n+Generates code to check assertions.  The option is perhaps misnamed,\n+as you still need to turn on assertion checking at run-time,\n+and we don't support any easy way to do that.\n+So this flag isn't very useful yet, except to partially override\n+@code{--disable-assertions}.\n+\n @end table\n \n "}]}