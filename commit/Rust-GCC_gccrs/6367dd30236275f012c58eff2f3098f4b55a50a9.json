{"sha": "6367dd30236275f012c58eff2f3098f4b55a50a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2N2RkMzAyMzYyNzVmMDEyYzU4ZWZmMmYzMDk4ZjRiNTVhNTBhOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:14:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:14:06Z"}, "message": "[multiple changes]\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* make.adb, makeutl.adb, makeutl.ads (Make): major refactoring.\n\tCreate several new subprograms to move code out of Make. This makes the\n\tcode more readable, removes code duplication, and is a preparation work\n\tfor adding support for aggregate projects.\n\n2011-08-04  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-po32gl.ads, s-po32gl.adb: New files.\n\t* exp_ch7.ads (Get_Global_Pool_For_Access_Type): New function.\n\t* exp_ch7.adb (Get_Global_Pool_For_Access_Type): New function.\n\t(Build_Finalization_Collection): Use it.\n\t* exp_ch4.adb (Complete_Controlled_Allocation): Ditto.\n\t* rtsfind.ads: System_Pool_32_Global, Re_Global_Pool_32_Object: New\n\tliterals.\n\t* gcc-interface/Makefile.in: Use s-po32gl.o on VMS.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r177364", "tree": {"sha": "10ec105d84ccb141fe1d95def01ab424d615b6a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10ec105d84ccb141fe1d95def01ab424d615b6a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6367dd30236275f012c58eff2f3098f4b55a50a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6367dd30236275f012c58eff2f3098f4b55a50a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6367dd30236275f012c58eff2f3098f4b55a50a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6367dd30236275f012c58eff2f3098f4b55a50a9/comments", "author": null, "committer": null, "parents": [{"sha": "cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8bfe35548ebe03b6c628d2ae6fdd5ab960ed74"}], "stats": {"total": 3915, "additions": 2116, "deletions": 1799}, "files": [{"sha": "542f4a684d9d8a4322a6cb0d89cd1390a5498ff9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -1,3 +1,22 @@\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* make.adb, makeutl.adb, makeutl.ads (Make): major refactoring.\n+\tCreate several new subprograms to move code out of Make. This makes the\n+\tcode more readable, removes code duplication, and is a preparation work\n+\tfor adding support for aggregate projects.\n+\n+2011-08-04  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-po32gl.ads, s-po32gl.adb: New files.\n+\t* exp_ch7.ads (Get_Global_Pool_For_Access_Type): New function.\n+\t* exp_ch7.adb (Get_Global_Pool_For_Access_Type): New function.\n+\t(Build_Finalization_Collection): Use it.\n+\t* exp_ch4.adb (Complete_Controlled_Allocation): Ditto.\n+\t* rtsfind.ads: System_Pool_32_Global, Re_Global_Pool_32_Object: New\n+\tliterals.\n+\t* gcc-interface/Makefile.in: Use s-po32gl.o on VMS.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2011-08-04  Emmanuel Briot  <briot@adacore.com>\n \n \t* makeutl.adb (Complete_Mains): add support for specs with no suffix on"}, {"sha": "5377960a3e45d5b2725de80bb398635dcdc11486", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -455,7 +455,8 @@ package body Exp_Ch4 is\n              or else Is_Library_Level_Entity (Ptr_Typ))\n       then\n          declare\n-            Pool_Id : constant Entity_Id := RTE (RE_Global_Pool_Object);\n+            Pool_Id : constant Entity_Id :=\n+              Get_Global_Pool_For_Access_Type (Ptr_Typ);\n             Scop    : Node_Id := Cunit_Entity (Current_Sem_Unit);\n \n          begin"}, {"sha": "5ecf752a98d56638b335aaa94ba5944050a57bc7", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -949,7 +949,7 @@ package body Exp_Ch7 is\n \n                begin\n                   if No (Associated_Storage_Pool (Base_Typ)) then\n-                     Pool_Id := RTE (RE_Global_Pool_Object);\n+                     Pool_Id := Get_Global_Pool_For_Access_Type (Base_Typ);\n                      Set_Associated_Storage_Pool (Base_Typ, Pool_Id);\n                   else\n                      Pool_Id := Associated_Storage_Pool (Base_Typ);\n@@ -959,7 +959,7 @@ package body Exp_Ch7 is\n             --  The default choice is the global pool\n \n             else\n-               Pool_Id := RTE (RE_Global_Pool_Object);\n+               Pool_Id := Get_Global_Pool_For_Access_Type (Typ);\n                Set_Associated_Storage_Pool (Typ, Pool_Id);\n             end if;\n \n@@ -4072,6 +4072,21 @@ package body Exp_Ch7 is\n       end loop;\n    end Find_Node_To_Be_Wrapped;\n \n+   -------------------------------------\n+   -- Get_Global_Pool_For_Access_Type --\n+   -------------------------------------\n+\n+   function Get_Global_Pool_For_Access_Type (T : Entity_Id) return Entity_Id is\n+   begin\n+      if Opt.True_VMS_Target\n+        and then Esize (T) = 32\n+      then\n+         return RTE (RE_Global_Pool_32_Object);\n+      else\n+         return RTE (RE_Global_Pool_Object);\n+      end if;\n+   end Get_Global_Pool_For_Access_Type;\n+\n    ----------------------------------\n    -- Has_New_Controlled_Component --\n    ----------------------------------"}, {"sha": "7a7f87467012ebfaa31f8b72608c1cbfed5dfa7b", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -98,6 +98,11 @@ package Exp_Ch7 is\n    --  applies, in which case we know that class-wide objects do not contain\n    --  controlled parts.\n \n+   function Get_Global_Pool_For_Access_Type (T : Entity_Id) return Entity_Id;\n+   --  Return the pool id for access type T.  This is generally the node\n+   --  corresponding to System.Global_Pool.Global_Pool_Object except on\n+   --  VMS if the access size is 32.\n+\n    function Has_New_Controlled_Component (E : Entity_Id) return Boolean;\n    --  E is a type entity. Give the same result as Has_Controlled_Component\n    --  except for tagged extensions where the result is True only if the"}, {"sha": "f7273a048fb51c51e794514bb408d61ec6c2273b", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -1301,17 +1301,16 @@ ada/alfa.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/aspects.ads ada/atree.ads ada/atree.adb ada/casing.ads \\\n    ada/debug.ads ada/einfo.ads ada/gnat.ads ada/g-htable.ads \\\n    ada/g-table.ads ada/g-table.adb ada/hostparm.ads ada/interfac.ads \\\n-   ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb \\\n-   ada/nmake.ads ada/opt.ads ada/output.ads ada/output.adb \\\n-   ada/put_alfa.ads ada/put_alfa.adb ada/sem_util.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n-   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n+   ada/opt.ads ada/output.ads ada/output.adb ada/put_alfa.ads \\\n+   ada/put_alfa.adb ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/system.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/ali-util.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/ali.ads ada/ali.adb ada/ali-util.ads \\\n@@ -2753,13 +2752,14 @@ ada/get_alfa.o : ada/ada.ads ada/a-except.ads ada/a-ioexce.ads \\\n    ada/a-unccon.ads ada/a-uncdea.ads ada/alfa.ads ada/alfa.adb \\\n    ada/alloc.ads ada/atree.ads ada/debug.ads ada/einfo.ads \\\n    ada/get_alfa.ads ada/get_alfa.adb ada/gnat.ads ada/g-table.ads \\\n-   ada/g-table.adb ada/hostparm.ads ada/namet.ads ada/opt.ads \\\n-   ada/output.ads ada/put_alfa.ads ada/sinfo.ads ada/snames.ads \\\n-   ada/system.ads ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/tree_io.ads ada/types.ads ada/uintp.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads \n+   ada/g-table.adb ada/hostparm.ads ada/namet.ads ada/nlists.ads \\\n+   ada/nmake.ads ada/opt.ads ada/output.ads ada/put_alfa.ads \\\n+   ada/sem_util.ads ada/sinfo.ads ada/snames.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n+   ada/types.ads ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads \n \n ada/get_scos.o : ada/ada.ads ada/a-ioexce.ads ada/a-unccon.ads \\\n    ada/get_scos.ads ada/get_scos.adb ada/gnat.ads ada/g-table.ads \\\n@@ -3314,13 +3314,14 @@ ada/prepcomp.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n ada/put_alfa.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alfa.ads ada/alfa.adb ada/alloc.ads ada/atree.ads \\\n    ada/debug.ads ada/einfo.ads ada/gnat.ads ada/g-table.ads \\\n-   ada/g-table.adb ada/hostparm.ads ada/namet.ads ada/opt.ads \\\n-   ada/output.ads ada/put_alfa.ads ada/put_alfa.adb ada/sinfo.ads \\\n-   ada/snames.ads ada/system.ads ada/s-exctab.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n+   ada/g-table.adb ada/hostparm.ads ada/namet.ads ada/nlists.ads \\\n+   ada/nmake.ads ada/opt.ads ada/output.ads ada/put_alfa.ads \\\n+   ada/put_alfa.adb ada/sem_util.ads ada/sinfo.ads ada/snames.ads \\\n+   ada/system.ads ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/tree_io.ads ada/types.ads ada/uintp.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads \n \n ada/put_scos.o : ada/ada.ads ada/a-unccon.ads ada/gnat.ads ada/g-table.ads \\\n    ada/g-table.adb ada/par_sco.ads ada/put_scos.ads ada/put_scos.adb \\\n@@ -3951,23 +3952,22 @@ ada/sem_ch13.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n ada/sem_ch2.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/csets.ads ada/debug.ads ada/einfo.ads \\\n-   ada/einfo.adb ada/err_vars.ads ada/errout.ads ada/errout.adb \\\n-   ada/erroutc.ads ada/erroutc.adb ada/fname.ads ada/fname-uf.ads \\\n-   ada/gnat.ads ada/g-htable.ads ada/gnatvsn.ads ada/hostparm.ads \\\n-   ada/interfac.ads ada/lib.ads ada/namet.ads ada/namet.adb ada/nlists.ads \\\n-   ada/nlists.adb ada/nmake.ads ada/opt.ads ada/output.ads \\\n-   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/scans.ads \\\n-   ada/sem_aux.ads ada/sem_ch2.ads ada/sem_ch2.adb ada/sem_ch8.ads \\\n-   ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/stand.ads ada/stylesw.ads ada/system.ads \\\n-   ada/s-carun8.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tree_io.ads ada/types.ads ada/types.adb \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/err_vars.ads ada/errout.ads ada/errout.adb ada/erroutc.ads \\\n+   ada/erroutc.adb ada/fname.ads ada/fname-uf.ads ada/gnat.ads \\\n+   ada/g-htable.ads ada/gnatvsn.ads ada/hostparm.ads ada/interfac.ads \\\n+   ada/lib.ads ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb \\\n+   ada/opt.ads ada/output.ads ada/restrict.ads ada/restrict.adb \\\n+   ada/rident.ads ada/scans.ads ada/sem_aux.ads ada/sem_ch2.ads \\\n+   ada/sem_ch2.adb ada/sem_ch8.ads ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stylesw.ads \\\n+   ada/system.ads ada/s-carun8.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tree_io.ads ada/types.ads \\\n+   ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/sem_ch3.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "2ceb3a011e81cedb13dedfc77a42ad6e4c7e11f4", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -1574,6 +1574,7 @@ adamsg.o: adamsg.msg\n   GNATLIB_SHARED=gnatlib-shared-vms\n   EXTRA_LIBGNAT_SRCS+=adamsg.msg\n   EXTRA_LIBGNAT_OBJS+=adamsg.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS+-s-po32gl.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-tpopde.o\n   EXTRA_GNATTOOLS = \\\n      ../../gnatsym$(exeext)"}, {"sha": "7372996c4641f69daa7c19c2758b0f1b55326323", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1814, "deletions": 1753, "changes": 3567, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=6367dd30236275f012c58eff2f3098f4b55a50a9"}, {"sha": "76156d9c3db449d09519d2c08cf86798aa07cf74", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -1696,6 +1696,38 @@ package body Makeutl is\n             return No_Main_Info;\n          else\n             Current := Current + 1;\n+\n+            --  If not using projects, and in the gnatmake case, the main file\n+            --  may have not have the extension. Try \".adb\" first then \".ads\"\n+\n+            if Names.Table (Current).Project = No_Project then\n+               declare\n+                  Orig_Main : constant File_Name_Type :=\n+                    Names.Table (Current).File;\n+                  Current_Main : File_Name_Type;\n+\n+               begin\n+                  if Strip_Suffix (Orig_Main) = Orig_Main then\n+                     Get_Name_String (Orig_Main);\n+                     Add_Str_To_Name_Buffer (\".adb\");\n+                     Current_Main := Name_Find;\n+\n+                     if Full_Source_Name (Current_Main) = No_File then\n+                        Get_Name_String (Orig_Main);\n+                        Add_Str_To_Name_Buffer (\".ads\");\n+                        Current_Main := Name_Find;\n+\n+                        if Full_Source_Name (Current_Main) /= No_File then\n+                           Names.Table (Current).File := Current_Main;\n+                        end if;\n+\n+                     else\n+                        Names.Table (Current).File := Current_Main;\n+                     end if;\n+                  end if;\n+               end;\n+            end if;\n+\n             return Names.Table (Current);\n          end if;\n       end Next_Main;"}, {"sha": "91e0769d4fc289af3a288f75890ad2a2c0874013", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -352,7 +352,7 @@ package Makeutl is\n       function Next_Main return String;\n       function Next_Main return Main_Info;\n       --  Moves the cursor forward and returns the new current entry. Returns\n-      --  No_File_And_Loc if there are no more mains in the table.\n+      --  No_Main_Info there are no more mains in the table.\n \n       function Number_Of_Mains (Tree : Project_Tree_Ref) return Natural;\n       --  Returns the number of mains in this project tree (if Tree is null, it"}, {"sha": "9ccb5d36d89302a980f9558df77ea70145031f2b", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -324,6 +324,7 @@ package Rtsfind is\n       System_Pack_63,\n       System_Parameters,\n       System_Partition_Interface,\n+      System_Pool_32_Global,\n       System_Pool_Global,\n       System_Pool_Empty,\n       System_Pool_Local,\n@@ -1154,6 +1155,8 @@ package Rtsfind is\n \n      RE_Global_Pool_Object,              -- System.Pool_Global\n \n+     RE_Global_Pool_32_Object,           -- System.Pool_32_Global\n+\n      RE_Stack_Bounded_Pool,              -- System.Pool_Size\n \n      RE_Do_Apc,                          -- System.RPC\n@@ -2452,6 +2455,8 @@ package Rtsfind is\n \n      RE_Global_Pool_Object               => System_Pool_Global,\n \n+     RE_Global_Pool_32_Object            => System_Pool_32_Global,\n+\n      RE_Stack_Bounded_Pool               => System_Pool_Size,\n \n      RE_Do_Apc                           => System_RPC,"}, {"sha": "54acf26bc65a85a8429e47f76333e8ad41a84743", "filename": "gcc/ada/s-po32gl.adb", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fs-po32gl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fs-po32gl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-po32gl.adb?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -0,0 +1,98 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                 S Y S T E M . P O O L _ 3 2 _ G L O B A L                --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with System.Storage_Pools; use System.Storage_Pools;\n+with System.Memory;\n+\n+package body System.Pool_32_Global is\n+\n+   package SSE renames System.Storage_Elements;\n+\n+   --------------\n+   -- Allocate --\n+   --------------\n+\n+   overriding procedure Allocate\n+     (Pool         : in out Unbounded_No_Reclaim_Pool_32;\n+      Address      : out System.Address;\n+      Storage_Size : SSE.Storage_Count;\n+      Alignment    : SSE.Storage_Count)\n+   is\n+      pragma Warnings (Off, Pool);\n+      pragma Warnings (Off, Alignment);\n+\n+   begin\n+      Address := Memory.Alloc32 (Memory.size_t (Storage_Size));\n+\n+      --  The call to Alloc returns an address whose alignment is compatible\n+      --  with the worst case alignment requirement for the machine; thus the\n+      --  Alignment argument can be safely ignored.\n+\n+      if Address = Null_Address then\n+         raise Storage_Error;\n+      end if;\n+   end Allocate;\n+\n+   ----------------\n+   -- Deallocate --\n+   ----------------\n+\n+   overriding procedure Deallocate\n+     (Pool         : in out Unbounded_No_Reclaim_Pool_32;\n+      Address      : System.Address;\n+      Storage_Size : SSE.Storage_Count;\n+      Alignment    : SSE.Storage_Count)\n+   is\n+      pragma Warnings (Off, Pool);\n+      pragma Warnings (Off, Storage_Size);\n+      pragma Warnings (Off, Alignment);\n+\n+   begin\n+      Memory.Free (Address);\n+   end Deallocate;\n+\n+   ------------------\n+   -- Storage_Size --\n+   ------------------\n+\n+   overriding function Storage_Size\n+     (Pool  : Unbounded_No_Reclaim_Pool_32)\n+      return  SSE.Storage_Count\n+   is\n+      pragma Warnings (Off, Pool);\n+\n+   begin\n+      --  The 32 bit heap is limited to 2 GB of memory\n+\n+      return SSE.Storage_Count (2 ** 31);\n+   end Storage_Size;\n+\n+end System.Pool_32_Global;"}, {"sha": "578fbec8942c7d07fd6cc9dc9160135992522006", "filename": "gcc/ada/s-po32gl.ads", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fs-po32gl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6367dd30236275f012c58eff2f3098f4b55a50a9/gcc%2Fada%2Fs-po32gl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-po32gl.ads?ref=6367dd30236275f012c58eff2f3098f4b55a50a9", "patch": "@@ -0,0 +1,80 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                 S Y S T E M . P O O L _ 3 2 _ G L O B A L                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Storage pool corresponding to default global storage pool used for types\n+--  designated by a 32 bits access type for which no storage pool is specified.\n+--  This is specific to VMS.\n+\n+with System;\n+with System.Storage_Pools;\n+with System.Storage_Elements;\n+\n+package System.Pool_32_Global is\n+   pragma Elaborate_Body;\n+   --  Needed to ensure that library routines can execute allocators\n+\n+   --  Allocation strategy:\n+\n+   --    Call to malloc/free for each Allocate/Deallocate\n+   --    No user specifiable size\n+   --    No automatic reclaim\n+   --    Minimal overhead\n+\n+   --  Pool simulating the allocation/deallocation strategy used by the\n+   --  compiler for access types globally declared.\n+\n+   type Unbounded_No_Reclaim_Pool_32 is new\n+     System.Storage_Pools.Root_Storage_Pool with null record;\n+\n+   overriding function Storage_Size\n+     (Pool : Unbounded_No_Reclaim_Pool_32)\n+      return System.Storage_Elements.Storage_Count;\n+\n+   overriding procedure Allocate\n+     (Pool         : in out Unbounded_No_Reclaim_Pool_32;\n+      Address      : out System.Address;\n+      Storage_Size : System.Storage_Elements.Storage_Count;\n+      Alignment    : System.Storage_Elements.Storage_Count);\n+\n+   overriding procedure Deallocate\n+     (Pool         : in out Unbounded_No_Reclaim_Pool_32;\n+      Address      : System.Address;\n+      Storage_Size : System.Storage_Elements.Storage_Count;\n+      Alignment    : System.Storage_Elements.Storage_Count);\n+\n+   --  Pool object used by the compiler when implicit Storage Pool objects are\n+   --  explicitly referred to. For instance when writing something like:\n+   --     for T'Storage_Pool use Q'Storage_Pool;\n+   --  and Q'Storage_Pool hasn't been defined explicitly.\n+\n+   Global_Pool_32_Object : Unbounded_No_Reclaim_Pool_32;\n+\n+end System.Pool_32_Global;"}]}