{"sha": "e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA1YTFjZTcxMTNiYTg3YjQ1YmI2Yzk1MGE4YWUwYmY1NmM1MzZlMw==", "commit": {"author": {"name": "Nicolas Roche", "email": "roche@adacore.com", "date": "2018-07-16T14:08:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:08:27Z"}, "message": "[Ada] Adjust growth factor from 1/32 to 1/2 for Unbounded_String\n\nThis will reduce significantly the number of allocations done when\ndoing consecutive append operations.\n\n2018-07-16  Nicolas Roche  <roche@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-strunb.adb, libgnat/a-strunb__shared.adb: Adjust growth\n\tfactor from 1/32 to 1/2 for Unbounded_String.\n\nFrom-SVN: r262697", "tree": {"sha": "9e64765503469eb32e3d386b0858566f4c462e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e64765503469eb32e3d386b0858566f4c462e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3/comments", "author": {"login": "Nikokrock", "id": 7796165, "node_id": "MDQ6VXNlcjc3OTYxNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7796165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nikokrock", "html_url": "https://github.com/Nikokrock", "followers_url": "https://api.github.com/users/Nikokrock/followers", "following_url": "https://api.github.com/users/Nikokrock/following{/other_user}", "gists_url": "https://api.github.com/users/Nikokrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nikokrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nikokrock/subscriptions", "organizations_url": "https://api.github.com/users/Nikokrock/orgs", "repos_url": "https://api.github.com/users/Nikokrock/repos", "events_url": "https://api.github.com/users/Nikokrock/events{/privacy}", "received_events_url": "https://api.github.com/users/Nikokrock/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0150d9a1cd06feebd2e8efa56e364c8f377fb633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0150d9a1cd06feebd2e8efa56e364c8f377fb633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0150d9a1cd06feebd2e8efa56e364c8f377fb633"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "d7063ae88a289df313a1925acda53744a1caa652", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3", "patch": "@@ -1,3 +1,8 @@\n+2018-07-16  Nicolas Roche  <roche@adacore.com>\n+\n+\t* libgnat/a-strunb.adb, libgnat/a-strunb__shared.adb: Adjust growth\n+\tfactor from 1/32 to 1/2 for Unbounded_String.\n+\n 2018-07-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/lang.opt (funsigned-char): New option."}, {"sha": "da5e2b5c60493de490fe213b35c142bdd553e881", "filename": "gcc/ada/libgnat/a-strunb.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3/gcc%2Fada%2Flibgnat%2Fa-strunb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3/gcc%2Fada%2Flibgnat%2Fa-strunb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strunb.adb?ref=e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3", "patch": "@@ -763,13 +763,13 @@ package body Ada.Strings.Unbounded is\n      (Source     : in out Unbounded_String;\n       Chunk_Size : Natural)\n    is\n-      Growth_Factor : constant := 32;\n+      Growth_Factor : constant := 2;\n       --  The growth factor controls how much extra space is allocated when\n       --  we have to increase the size of an allocated unbounded string. By\n       --  allocating extra space, we avoid the need to reallocate on every\n       --  append, particularly important when a string is built up by repeated\n       --  append operations of small pieces. This is expressed as a factor so\n-      --  32 means add 1/32 of the length of the string as growth space.\n+      --  2 means add 1/2 of the length of the string as growth space.\n \n       Min_Mul_Alloc : constant := Standard'Maximum_Alignment;\n       --  Allocation will be done by a multiple of Min_Mul_Alloc This causes"}, {"sha": "0e060e3436e01f5c08181a0006e96886d133aecd", "filename": "gcc/ada/libgnat/a-strunb__shared.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3/gcc%2Fada%2Flibgnat%2Fa-strunb__shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3/gcc%2Fada%2Flibgnat%2Fa-strunb__shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strunb__shared.adb?ref=e05a1ce7113ba87b45bb6c950a8ae0bf56c536e3", "patch": "@@ -36,13 +36,13 @@ package body Ada.Strings.Unbounded is\n \n    use Ada.Strings.Maps;\n \n-   Growth_Factor : constant := 32;\n+   Growth_Factor : constant := 2;\n    --  The growth factor controls how much extra space is allocated when\n    --  we have to increase the size of an allocated unbounded string. By\n    --  allocating extra space, we avoid the need to reallocate on every\n    --  append, particularly important when a string is built up by repeated\n    --  append operations of small pieces. This is expressed as a factor so\n-   --  32 means add 1/32 of the length of the string as growth space.\n+   --  2 means add 1/2 of the length of the string as growth space.\n \n    Min_Mul_Alloc : constant := Standard'Maximum_Alignment;\n    --  Allocation will be done by a multiple of Min_Mul_Alloc. This causes"}]}