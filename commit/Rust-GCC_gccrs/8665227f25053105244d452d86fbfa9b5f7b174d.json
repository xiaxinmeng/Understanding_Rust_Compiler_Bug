{"sha": "8665227f25053105244d452d86fbfa9b5f7b174d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY2NTIyN2YyNTA1MzEwNTI0NGQ0NTJkODZmYmZhOWI1ZjdiMTc0ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-02-12T21:29:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-02-12T21:29:39Z"}, "message": "re PR tree-optimization/35171 (ICE in vect_recog_dot_prod_pattern)\n\n2008-02-12  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/35171\n\t* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Deal with\n\tdefault defs.\n\n\t* gcc.c-torture/compile/pr35171.c: New testcase.\n\nFrom-SVN: r132270", "tree": {"sha": "0f95564f0bc325d0f52fc5b75d1db05e8b55ba23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f95564f0bc325d0f52fc5b75d1db05e8b55ba23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8665227f25053105244d452d86fbfa9b5f7b174d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8665227f25053105244d452d86fbfa9b5f7b174d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8665227f25053105244d452d86fbfa9b5f7b174d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8665227f25053105244d452d86fbfa9b5f7b174d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f768a5a18a47ce412c6455a6e802d4b703fcf26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f768a5a18a47ce412c6455a6e802d4b703fcf26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f768a5a18a47ce412c6455a6e802d4b703fcf26"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "9369e6da4db0beef20d96b96b9e6b45e5b2dd06c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8665227f25053105244d452d86fbfa9b5f7b174d", "patch": "@@ -1,3 +1,9 @@\n+2008-02-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35171\n+\t* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Deal with\n+\tdefault defs.\n+\n 2008-02-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/35163"}, {"sha": "cf0c85455f62931d5302cb0bd90c24bf0fc70bde", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8665227f25053105244d452d86fbfa9b5f7b174d", "patch": "@@ -1,3 +1,8 @@\n+2008-02-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35171\n+\t* gcc.c-torture/compile/pr35171.c: New testcase.\n+\n 2008-02-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/35163"}, {"sha": "3f7ef2ccacb095b3c9a999fdef28506496048e26", "filename": "gcc/testsuite/gcc.c-torture/compile/pr35171.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35171.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35171.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35171.c?ref=8665227f25053105244d452d86fbfa9b5f7b174d", "patch": "@@ -0,0 +1,10 @@\n+int f(int a, int b, short c, int d, short e)\r\n+{\r\n+  int i;\r\n+  for (i = 1; i <= 2 ; i++) {\r\n+    c -= 4;\r\n+    a = c;\r\n+    d = d + (b?b:e);\r\n+  }\r\n+  return a + d;\r\n+}\r"}, {"sha": "c1ce14c4bbb91b1aacf84d1b1a6fde43ff0fe11a", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8665227f25053105244d452d86fbfa9b5f7b174d/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=8665227f25053105244d452d86fbfa9b5f7b174d", "patch": "@@ -246,15 +246,14 @@ vect_recog_dot_prod_pattern (tree last_stmt, tree *type_in, tree *type_out)\n \n   prod_type = half_type;\n   stmt = SSA_NAME_DEF_STMT (oprnd0);\n-  gcc_assert (stmt);\n+  /* FORNOW.  Can continue analyzing the def-use chain when this stmt in a phi \n+     inside the loop (in case we are analyzing an outer-loop).  */\n+  if (TREE_CODE (stmt) != GIMPLE_MODIFY_STMT)\n+    return NULL; \n   stmt_vinfo = vinfo_for_stmt (stmt);\n   gcc_assert (stmt_vinfo);\n   if (STMT_VINFO_DEF_TYPE (stmt_vinfo) != vect_loop_def)\n     return NULL;\n-  /* FORNOW. Can continue analyzing the def-use chain when this stmt in a phi \n-     inside the loop (in case we are analyzing an outer-loop).  */\n-  if (TREE_CODE (stmt) != GIMPLE_MODIFY_STMT)\n-    return NULL; \n   expr = GIMPLE_STMT_OPERAND (stmt, 1);\n   if (TREE_CODE (expr) != MULT_EXPR)\n     return NULL;"}]}