{"sha": "331b4f168a06cd85fe40fd03b48b128cc8af399c", "node_id": "C_kwDOANBUbNoAKDMzMWI0ZjE2OGEwNmNkODVmZTQwZmQwM2I0OGIxMjhjYzhhZjM5OWM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-31T22:32:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-02T16:57:27Z"}, "message": "libstdc++: Define std::basic_stringbuf::view() for old std::string ABI\n\nUnlike the new str()&& members in <sstream>, there is no real difficulty\nin supporting the new view() members for the old std::string ABI.\nEnabling it fixes errors in <chrono> where std::ostringstream::view() is\nused by ostream insertion operators for calendar types.\n\nWe just need to use [[gnu::always_inline]] on the view() members for the\nold ABI, because the library doesn't contain instantiations of them for\nthe old ABI. Making them always inline avoids needing to add those\ninstantiations and export them.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/sstream  (basic_stringbuf::view): Define for old\n\tstd::string ABI.\n\t(basic_istringstream::view, basic_0stringstream::view)\n\t(basic_stringstream::view): Likewise.\n\t* testsuite/27_io/basic_istringstream/view/char/1.cc: Remove\n\t{ dg-require-effective-target cxx11_abi }.\n\t* testsuite/27_io/basic_istringstream/view/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_ostringstream/view/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_ostringstream/view/wchar_t/1.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_stringbuf/view/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/view/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringstream/view/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringstream/view/wchar_t/1.cc:\n\tLikewise.", "tree": {"sha": "39eb6d6ff508e4d9acc74c3aa7f8d941fc13713c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39eb6d6ff508e4d9acc74c3aa7f8d941fc13713c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/331b4f168a06cd85fe40fd03b48b128cc8af399c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331b4f168a06cd85fe40fd03b48b128cc8af399c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/331b4f168a06cd85fe40fd03b48b128cc8af399c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331b4f168a06cd85fe40fd03b48b128cc8af399c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "6b3139714c7333b63e6c1bdb118802a2cb56ef84", "filename": "libstdc++-v3/include/std/sstream", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -43,10 +43,15 @@\n \n #if __cplusplus > 201703L && _GLIBCXX_USE_CXX11_ABI\n # define _GLIBCXX_LVAL_REF_QUAL &\n+# define _GLIBCXX_SSTREAM_ALWAYS_INLINE\n #else\n # define _GLIBCXX_LVAL_REF_QUAL\n+// For symbols that are not exported from libstdc++.so for the COW string ABI.\n+# define _GLIBCXX_SSTREAM_ALWAYS_INLINE [[__gnu__::__always_inline__]]\n #endif\n \n+\n+\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -251,7 +256,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \treturn __ret;\n       }\n \n-#if __cplusplus > 201703L && _GLIBCXX_USE_CXX11_ABI\n+#if __cplusplus > 201703L\n+#if _GLIBCXX_USE_CXX11_ABI\n #if __cpp_concepts\n       template<__allocator_like _SAlloc>\n \tbasic_string<_CharT, _Traits, _SAlloc>\n@@ -275,7 +281,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \t_M_sync(_M_string.data(), 0, 0);\n \treturn __str;\n       }\n+#endif // cxx11 ABI\n \n+      _GLIBCXX_SSTREAM_ALWAYS_INLINE\n       basic_string_view<char_type, traits_type>\n       view() const noexcept\n       {\n@@ -698,7 +706,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       str() const _GLIBCXX_LVAL_REF_QUAL\n       { return _M_stringbuf.str(); }\n \n-#if __cplusplus > 201703L && _GLIBCXX_USE_CXX11_ABI\n+#if __cplusplus > 201703L\n+#if _GLIBCXX_USE_CXX11_ABI\n #if __cpp_concepts\n       template<__allocator_like _SAlloc>\n \tbasic_string<_CharT, _Traits, _SAlloc>\n@@ -709,11 +718,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       __string_type\n       str() &&\n       { return std::move(_M_stringbuf).str(); }\n+#endif // cxx11 ABI\n \n+      _GLIBCXX_SSTREAM_ALWAYS_INLINE\n       basic_string_view<char_type, traits_type>\n       view() const noexcept\n       { return _M_stringbuf.view(); }\n-#endif\n+#endif // C++20\n \n       /**\n        *  @brief  Setting a new buffer.\n@@ -919,7 +930,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       str() const _GLIBCXX_LVAL_REF_QUAL\n       { return _M_stringbuf.str(); }\n \n-#if __cplusplus > 201703L && _GLIBCXX_USE_CXX11_ABI\n+#if __cplusplus > 201703L\n+#if _GLIBCXX_USE_CXX11_ABI\n #if __cpp_concepts\n       template<__allocator_like _SAlloc>\n \tbasic_string<_CharT, _Traits, _SAlloc>\n@@ -930,11 +942,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       __string_type\n       str() &&\n       { return std::move(_M_stringbuf).str(); }\n+#endif // cxx11 ABI\n \n+      _GLIBCXX_SSTREAM_ALWAYS_INLINE\n       basic_string_view<char_type, traits_type>\n       view() const noexcept\n       { return _M_stringbuf.view(); }\n-#endif\n+#endif // C++20\n \n       /**\n        *  @brief  Setting a new buffer.\n@@ -1138,7 +1152,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       str() const _GLIBCXX_LVAL_REF_QUAL\n       { return _M_stringbuf.str(); }\n \n-#if __cplusplus > 201703L && _GLIBCXX_USE_CXX11_ABI\n+#if __cplusplus > 201703L\n+#if _GLIBCXX_USE_CXX11_ABI\n #if __cpp_concepts\n       template<__allocator_like _SAlloc>\n \tbasic_string<_CharT, _Traits, _SAlloc>\n@@ -1149,11 +1164,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       __string_type\n       str() &&\n       { return std::move(_M_stringbuf).str(); }\n+#endif // cxx11 ABI\n \n+      _GLIBCXX_SSTREAM_ALWAYS_INLINE\n       basic_string_view<char_type, traits_type>\n       view() const noexcept\n       { return _M_stringbuf.view(); }\n-#endif\n+#endif // C++20\n \n       /**\n        *  @brief  Setting a new buffer.\n@@ -1215,6 +1232,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n \n+#undef _GLIBCXX_SSTREAM_ALWAYS_INLINE\n #undef _GLIBCXX_LVAL_REF_QUAL\n \n #include <bits/sstream.tcc>"}, {"sha": "04aae8175692612e7b56f0dd3f3a923ee6f597cd", "filename": "libstdc++-v3/testsuite/27_io/basic_istringstream/view/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istringstream%2Fview%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istringstream%2Fview%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istringstream%2Fview%2Fchar%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}, {"sha": "06b04b3c6b97b77a86953a7ea5cadee47e9dc4c0", "filename": "libstdc++-v3/testsuite/27_io/basic_istringstream/view/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istringstream%2Fview%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istringstream%2Fview%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istringstream%2Fview%2Fwchar_t%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}, {"sha": "41279083a06f15eb446ee2d42f4e63ac46820fe0", "filename": "libstdc++-v3/testsuite/27_io/basic_ostringstream/view/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fview%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fview%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fview%2Fchar%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}, {"sha": "2f177d45d7064be5079d36dcc1391e6991422c6d", "filename": "libstdc++-v3/testsuite/27_io/basic_ostringstream/view/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fview%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fview%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fview%2Fwchar_t%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}, {"sha": "138f4b124e555fc64eb6d82cc4d0aa69c0fb5a0d", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/view/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fview%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fview%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fview%2Fchar%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}, {"sha": "30b8f0549f40df4cc57ad4a3567f80d1553c1a87", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/view/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fview%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fview%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fview%2Fwchar_t%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}, {"sha": "91d329dfa86cbdc331c9501489ce58c4caf098ae", "filename": "libstdc++-v3/testsuite/27_io/basic_stringstream/view/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringstream%2Fview%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringstream%2Fview%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringstream%2Fview%2Fchar%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}, {"sha": "7af53dcd16f172ca69fb6446f11ef7caacc629f0", "filename": "libstdc++-v3/testsuite/27_io/basic_stringstream/view/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringstream%2Fview%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331b4f168a06cd85fe40fd03b48b128cc8af399c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringstream%2Fview%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringstream%2Fview%2Fwchar_t%2F1.cc?ref=331b4f168a06cd85fe40fd03b48b128cc8af399c", "patch": "@@ -19,7 +19,6 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target cxx11_abi }\n \n #include <sstream>\n #include <string_view>"}]}