{"sha": "9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "node_id": "C_kwDOANBUbNoAKDlkZGQ0NGI1ODY0OWQxZDFlOTMyYzFlOTVkYzAwZDY1NDczM2MxZmM", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@embecosm.com", "date": "2022-05-10T14:02:31Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@embecosm.com", "date": "2022-05-10T14:02:31Z"}, "message": "RISC-V: Provide `fmin'/`fmax' RTL patterns\n\nAs at r2.2 of the RISC-V ISA specification[1] (equivalent to version 2.0\nof the \"F\" and \"D\" standard architecture extensions for single-precision\nand double-precision floating-point respectively) the FMIN and FMAX\nmachine instructions fully match our requirement for the `fminM3' and\n`fmaxM3' standard RTL patterns:\n\n\"For FMIN and FMAX, if at least one input is a signaling NaN, or if both\ninputs are quiet NaNs, the result is the canonical NaN.  If one operand\nis a quiet NaN and the other is not a NaN, the result is the non-NaN\noperand.\"\n\nsuitably for the IEEE 754-2008 `minNum' and `maxNum' operations.\n\nHowever we only define `sminM3' and `smaxM3' standard RTL patterns to\nproduce the FMIN and FMAX machine instructions, which in turn causes the\n`__builtin_fmin' and `__builtin_fmax' family of intrinsics to emit the\ncorresponding libcalls rather than the relevant machine instructions.\nThis is according to earlier revisions of the RISC-V ISA specification,\nwhich we however do not support anymore, as from commit 4b81528241ca\n(\"RISC-V: Support version controling for ISA standard extensions\").\n\nAs from r20190608 of the RISC-V ISA specification (equivalent to version\n2.2 of the \"F\" and \"D\" standard ISA extensions for single-precision and\ndouble-precision floating-point respectively) the definition of the FMIN\nand FMAX machine instructions has been updated[2]:\n\n\"Defined the signed-zero behavior of FMIN.fmt and FMAX.fmt, and changed\ntheir behavior on signaling-NaN inputs to conform to the minimumNumber\nand maximumNumber operations in the proposed IEEE 754-201x\nspecification.\"\n\nand specifically[3]:\n\n\"Floating-point minimum-number and maximum-number instructions FMIN.S\nand FMAX.S write, respectively, the smaller or larger of rs1 and rs2 to\nrd.  For the purposes of these instructions only, the value -0.0 is\nconsidered to be less than the value +0.0.  If both inputs are NaNs, the\nresult is the canonical NaN.  If only one operand is a NaN, the result\nis the non-NaN operand.  Signaling NaN inputs set the invalid operation\nexception flag, even when the result is not NaN.\"\n\nConsequently for forwards compatibility with r20190608+ hardware we\ncannot use the FMIN and FMAX machine instructions unconditionally even\nwhere the ISA level of r2.2 has been specified with the `-misa-spec=2.2'\noption where operation would be different between ISA revisions, that\nis the handling of signaling NaN inputs.\n\nTherefore provide new `fmin<mode>3' and `fmax<mode>3' patterns removing\nthe need to emit libcalls with the `__builtin_fmin' and `__builtin_fmax'\nfamily of intrinsics, however limit them to where `-fno-signaling-nans'\nis in effect, deferring to other code generation strategies otherwise as\napplicable.  Use newly-defined UNSPECs as the operation codes so that\nthe patterns are only ever used if referred to by their names, as there\nis no RTL expression defined for the IEEE 754-2008 `minNum' and `maxNum'\noperations.\n\nReferences:\n\n[1] \"The RISC-V Instruction Set Manual, Volume I: User-Level ISA\",\n    Document Version 2.2, May 7, 2017, Section 8.3 \"NaN Generation and\n    Propagation\", p. 48\n\n[1] \"The RISC-V Instruction Set Manual, Volume I: Unprivileged ISA\",\n    Document Version 20190608-Base-Ratified, June 8, 2019, \"Preface\",\n    p. ii\n\n[2] same, Section 11.6 \"Single-Precision Floating-Point Computational\n    Instructions\", p. 66\n\n\tgcc/\n\t* config/riscv/riscv.md (UNSPEC_FMIN, UNSPEC_FMAX): New\n\tconstants.\n\t(fmin<mode>3, fmax<mode>3): New insns.\n\n\tgcc/testsuite/\n\t* gcc.target/riscv/fmax-snan.c: New test.\n\t* gcc.target/riscv/fmax.c: New test.\n\t* gcc.target/riscv/fmaxf-snan.c: New test.\n\t* gcc.target/riscv/fmaxf.c: New test.\n\t* gcc.target/riscv/fmin-snan.c: New test.\n\t* gcc.target/riscv/fmin.c: New test.\n\t* gcc.target/riscv/fminf-snan.c: New test.\n\t* gcc.target/riscv/fminf.c: New test.\n\t* gcc.target/riscv/smax-ieee.c: New test.\n\t* gcc.target/riscv/smax.c: New test.\n\t* gcc.target/riscv/smaxf-ieee.c: New test.\n\t* gcc.target/riscv/smaxf.c: New test.\n\t* gcc.target/riscv/smin-ieee.c: New test.\n\t* gcc.target/riscv/smin.c: New test.\n\t* gcc.target/riscv/sminf-ieee.c: New test.\n\t* gcc.target/riscv/sminf.c: New test.", "tree": {"sha": "ef40c7f9de344d5a07f4c49aa9e216e91563e43b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef40c7f9de344d5a07f4c49aa9e216e91563e43b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/comments", "author": {"login": "maciej-w-rozycki", "id": 117297942, "node_id": "U_kgDOBv3TFg", "avatar_url": "https://avatars.githubusercontent.com/u/117297942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciej-w-rozycki", "html_url": "https://github.com/maciej-w-rozycki", "followers_url": "https://api.github.com/users/maciej-w-rozycki/followers", "following_url": "https://api.github.com/users/maciej-w-rozycki/following{/other_user}", "gists_url": "https://api.github.com/users/maciej-w-rozycki/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciej-w-rozycki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciej-w-rozycki/subscriptions", "organizations_url": "https://api.github.com/users/maciej-w-rozycki/orgs", "repos_url": "https://api.github.com/users/maciej-w-rozycki/repos", "events_url": "https://api.github.com/users/maciej-w-rozycki/events{/privacy}", "received_events_url": "https://api.github.com/users/maciej-w-rozycki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "maciej-w-rozycki", "id": 117297942, "node_id": "U_kgDOBv3TFg", "avatar_url": "https://avatars.githubusercontent.com/u/117297942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciej-w-rozycki", "html_url": "https://github.com/maciej-w-rozycki", "followers_url": "https://api.github.com/users/maciej-w-rozycki/followers", "following_url": "https://api.github.com/users/maciej-w-rozycki/following{/other_user}", "gists_url": "https://api.github.com/users/maciej-w-rozycki/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciej-w-rozycki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciej-w-rozycki/subscriptions", "organizations_url": "https://api.github.com/users/maciej-w-rozycki/orgs", "repos_url": "https://api.github.com/users/maciej-w-rozycki/repos", "events_url": "https://api.github.com/users/maciej-w-rozycki/events{/privacy}", "received_events_url": "https://api.github.com/users/maciej-w-rozycki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9801ca737b1dcbf51c0d07db59dd204a047dd3f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9801ca737b1dcbf51c0d07db59dd204a047dd3f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9801ca737b1dcbf51c0d07db59dd204a047dd3f7"}], "stats": {"total": 214, "additions": 214, "deletions": 0}, "files": [{"sha": "d9b451be0b44cdf07c1d380bdad3248ead5ef713", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -42,6 +42,8 @@\n   UNSPEC_COPYSIGN\n   UNSPEC_LRINT\n   UNSPEC_LROUND\n+  UNSPEC_FMIN\n+  UNSPEC_FMAX\n \n   ;; Stack tie\n   UNSPEC_TIE\n@@ -1216,6 +1218,26 @@\n ;;\n ;;  ....................\n \n+(define_insn \"fmin<mode>3\"\n+  [(set (match_operand:ANYF                    0 \"register_operand\" \"=f\")\n+\t(unspec:ANYF [(use (match_operand:ANYF 1 \"register_operand\" \" f\"))\n+\t\t      (use (match_operand:ANYF 2 \"register_operand\" \" f\"))]\n+\t\t     UNSPEC_FMIN))]\n+  \"TARGET_HARD_FLOAT && !HONOR_SNANS (<MODE>mode)\"\n+  \"fmin.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmove\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"fmax<mode>3\"\n+  [(set (match_operand:ANYF                    0 \"register_operand\" \"=f\")\n+\t(unspec:ANYF [(use (match_operand:ANYF 1 \"register_operand\" \" f\"))\n+\t\t      (use (match_operand:ANYF 2 \"register_operand\" \" f\"))]\n+\t\t     UNSPEC_FMAX))]\n+  \"TARGET_HARD_FLOAT && !HONOR_SNANS (<MODE>mode)\"\n+  \"fmax.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmove\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n (define_insn \"smin<mode>3\"\n   [(set (match_operand:ANYF            0 \"register_operand\" \"=f\")\n \t(smin:ANYF (match_operand:ANYF 1 \"register_operand\" \" f\")"}, {"sha": "ba4823a18b3f9dc3f49c7c96f6159621dc8a5e18", "filename": "gcc/testsuite/gcc.target/riscv/fmax-snan.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmax-snan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmax-snan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmax-snan.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fsignaling-nans -dp\" } */\n+\n+double\n+fmax (double x, double y)\n+{\n+  return __builtin_fmax (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tfmax\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfge\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\t(call|tail)\\tfmax\\t\" } } */"}, {"sha": "c71d35c9f9dca83823aefe2fc12d8db44074ff36", "filename": "gcc/testsuite/gcc.target/riscv/fmax.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmax.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fno-signaling-nans -dp\" } */\n+\n+double\n+fmax (double x, double y)\n+{\n+  return __builtin_fmax (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfmax\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfge\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmax\\\\.d\\t\\[^\\n\\]* fmaxdf3\\n\" } } */"}, {"sha": "faada3a57236dc0b8a5fbe766b554b45763c29cc", "filename": "gcc/testsuite/gcc.target/riscv/fmaxf-snan.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmaxf-snan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmaxf-snan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmaxf-snan.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fsignaling-nans -dp\" } */\n+\n+float\n+fmaxf (float x, float y)\n+{\n+  return __builtin_fmaxf (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tfmax\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfge\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\t(call|tail)\\tfmaxf\\t\" } } */"}, {"sha": "f9980166887ad48cd6675fcf641321541933ebc0", "filename": "gcc/testsuite/gcc.target/riscv/fmaxf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmaxf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmaxf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmaxf.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fno-signaling-nans -dp\" } */\n+\n+float\n+fmaxf (float x, float y)\n+{\n+  return __builtin_fmaxf (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfmaxf\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfge\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmax\\\\.s\\t\\[^\\n\\]* fmaxsf3\\n\" } } */"}, {"sha": "b511380c2d166759903ac30eedabb4f15d631874", "filename": "gcc/testsuite/gcc.target/riscv/fmin-snan.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmin-snan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmin-snan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmin-snan.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fsignaling-nans -dp\" } */\n+\n+double\n+fmin (double x, double y)\n+{\n+  return __builtin_fmin (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tfmin\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfle\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\t(call|tail)\\tfmin\\t\" } } */"}, {"sha": "9634abd19af88a0696323e32add5f662756d2b45", "filename": "gcc/testsuite/gcc.target/riscv/fmin.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffmin.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fno-signaling-nans -dp\" } */\n+\n+double\n+fmin (double x, double y)\n+{\n+  return __builtin_fmin (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfmin\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfle\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmin\\\\.d\\t\\[^\\n\\]* fmindf3\\n\" } } */"}, {"sha": "39dd8fee278f9cc04bdfdd223a6cd805fd54330e", "filename": "gcc/testsuite/gcc.target/riscv/fminf-snan.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffminf-snan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffminf-snan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffminf-snan.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fsignaling-nans -dp\" } */\n+\n+float\n+fminf (float x, float y)\n+{\n+  return __builtin_fminf (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tfmin\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfle\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\t(call|tail)\\tfminf\\t\" } } */"}, {"sha": "9a3687be309257fc40d3c960cab2c194890f49d8", "filename": "gcc/testsuite/gcc.target/riscv/fminf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffminf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffminf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Ffminf.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-finite-math-only -fsigned-zeros -fno-signaling-nans -dp\" } */\n+\n+float\n+fminf (float x, float y)\n+{\n+  return __builtin_fminf (x, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfminf\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfle\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmin\\\\.s\\t\\[^\\n\\]* fminsf3\\n\" } } */"}, {"sha": "3a98aeb45add622c93a8a3b67efb93b60a7085a1", "filename": "gcc/testsuite/gcc.target/riscv/smax-ieee.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmax-ieee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmax-ieee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmax-ieee.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fsigned-zeros -dp\" } */\n+\n+double\n+smax (double x, double y)\n+{\n+  return x >= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\t(call|tail)\\tfmax\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfmax\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfge\\\\.d\\t\" } } */"}, {"sha": "d806c632faed43cef0e22639f8a92d04228760a7", "filename": "gcc/testsuite/gcc.target/riscv/smax.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmax.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fno-signed-zeros -dp\" } */\n+\n+double\n+smax (double x, double y)\n+{\n+  return x >= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfmax\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfge\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmax\\\\.d\\t\\[^\\n\\]* smaxdf3\\n\" } } */"}, {"sha": "6cf23d789b6e7f6881133dcce2e65bb7c96b52e6", "filename": "gcc/testsuite/gcc.target/riscv/smaxf-ieee.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmaxf-ieee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmaxf-ieee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmaxf-ieee.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fsigned-zeros -dp\" } */\n+\n+float\n+smaxf (float x, float y)\n+{\n+  return x >= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\t(call|tail)\\tfmaxf\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfmax\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfge\\\\.s\\t\" } } */"}, {"sha": "d6a7a7f84cf73fe82e4cc51be8baa6943f6e08a3", "filename": "gcc/testsuite/gcc.target/riscv/smaxf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmaxf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmaxf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmaxf.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fno-signed-zeros -dp\" } */\n+\n+float\n+smaxf (float x, float y)\n+{\n+  return x >= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfmaxf\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfge\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmax\\\\.s\\t\\[^\\n\\]* smaxsf3\\n\" } } */"}, {"sha": "c0a148c37cf1a8b1612d0c45dd11c1c1558933c7", "filename": "gcc/testsuite/gcc.target/riscv/smin-ieee.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmin-ieee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmin-ieee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmin-ieee.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fsigned-zeros -dp\" } */\n+\n+double\n+smin (double x, double y)\n+{\n+  return x <= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\t(call|tail)\\tfmin\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfmin\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfle\\\\.d\\t\" } } */"}, {"sha": "e325e9a1c7cc10978210e233f21e01cbd0ae9655", "filename": "gcc/testsuite/gcc.target/riscv/smin.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsmin.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fno-signed-zeros -dp\" } */\n+\n+double\n+smin (double x, double y)\n+{\n+  return x <= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfmin\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfle\\\\.d\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmin\\\\.d\\t\\[^\\n\\]* smindf3\\n\" } } */"}, {"sha": "353e7a18704afe7bbbd86760180cdf816d4f9a8e", "filename": "gcc/testsuite/gcc.target/riscv/sminf-ieee.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsminf-ieee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsminf-ieee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsminf-ieee.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fsigned-zeros -dp\" } */\n+\n+float\n+sminf (float x, float y)\n+{\n+  return x <= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\t(call|tail)\\tfminf\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfmin\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfle\\\\.s\\t\" } } */"}, {"sha": "f0ba7b43bdf9586d4b8ee80bb34727459f281daa", "filename": "gcc/testsuite/gcc.target/riscv/sminf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsminf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ddd44b58649d1d1e932c1e95dc00d654733c1fc/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsminf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsminf.c?ref=9ddd44b58649d1d1e932c1e95dc00d654733c1fc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fno-signed-zeros -dp\" } */\n+\n+float\n+sminf (float x, float y)\n+{\n+  return x <= y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\ttail\\tfminf\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tfle\\\\.s\\t\" } } */\n+/* { dg-final { scan-assembler \"\\tfmin\\\\.s\\t\\[^\\n\\]* sminsf3\\n\" } } */"}]}