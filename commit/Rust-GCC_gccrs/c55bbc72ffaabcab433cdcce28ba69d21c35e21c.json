{"sha": "c55bbc72ffaabcab433cdcce28ba69d21c35e21c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU1YmJjNzJmZmFhYmNhYjQzM2NkY2NlMjhiYTY5ZDIxYzM1ZTIxYw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-05-16T17:44:15Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-05-16T17:44:15Z"}, "message": "re PR fortran/65903 (Line continuation followed by comment character in string fails to compile)\n\n2015-05-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/65903\n\t* io.c (format_lex): Change to NONSTRING when checking for\n\tpossible doubled quote.\n\t* scanner.c (gfc_next_char_literal): Revert change from 64506\n\tand add a check for quotes and return.\n\nFrom-SVN: r223248", "tree": {"sha": "089860d1f3693f3bf8a29396280847bd59157cb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/089860d1f3693f3bf8a29396280847bd59157cb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c55bbc72ffaabcab433cdcce28ba69d21c35e21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55bbc72ffaabcab433cdcce28ba69d21c35e21c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c55bbc72ffaabcab433cdcce28ba69d21c35e21c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55bbc72ffaabcab433cdcce28ba69d21c35e21c/comments", "author": null, "committer": null, "parents": [{"sha": "7e8655412c7e9438f76e417f055db2505133a949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8655412c7e9438f76e417f055db2505133a949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e8655412c7e9438f76e417f055db2505133a949"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "dcdf95e36c341020a2c125d797a8d5459f19dd4b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55bbc72ffaabcab433cdcce28ba69d21c35e21c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55bbc72ffaabcab433cdcce28ba69d21c35e21c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c55bbc72ffaabcab433cdcce28ba69d21c35e21c", "patch": "@@ -1,3 +1,11 @@\n+2015-05-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/65903\n+\t* io.c (format_lex): Change to NONSTRING when checking for\n+\tpossible doubled quote.\n+\t* scanner.c (gfc_next_char_literal): Revert change from 64506\n+\tand add a check for quotes and return.\n+\n 2015-05-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/66113"}, {"sha": "82a0a871fd31ae074d4f2374936369a89fc5cdc2", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55bbc72ffaabcab433cdcce28ba69d21c35e21c/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55bbc72ffaabcab433cdcce28ba69d21c35e21c/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=c55bbc72ffaabcab433cdcce28ba69d21c35e21c", "patch": "@@ -385,7 +385,7 @@ format_lex (void)\n \n \t  if (c == delim)\n \t    {\n-\t      c = next_char (INSTRING_NOWARN);\n+\t      c = next_char (NONSTRING);\n \n \t      if (c == '\\0')\n \t\t{"}, {"sha": "e5243457ad008faed7ac8f8be195db23c5f58dac", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55bbc72ffaabcab433cdcce28ba69d21c35e21c/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55bbc72ffaabcab433cdcce28ba69d21c35e21c/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=c55bbc72ffaabcab433cdcce28ba69d21c35e21c", "patch": "@@ -1272,21 +1272,11 @@ gfc_next_char_literal (gfc_instring in_string)\n \t are still in a string and we are looking for a possible\n \t doubled quote and we end up here. See PR64506.  */\n \n-      if (in_string)\n+      if (in_string && c != '\\n')\n \t{\n \t  gfc_current_locus = old_loc;\n-\n-\t  if (c == '!')\n-\t    {\n-\t      skip_comment_line ();\n-\t      goto restart;\n-\t    }\n-\n-\t  if (c != '\\n')\n-\t    {\n-\t      c = '&';\n-\t      goto done;\n-\t    }\n+\t  c = '&';\n+\t  goto done;\n \t}\n \n       if (c != '!' && c != '\\n')\n@@ -1392,6 +1382,8 @@ gfc_next_char_literal (gfc_instring in_string)\n \t\t\t     \"Missing %<&%> in continued character \"\n \t\t\t     \"constant at %C\");\n \t    }\n+\t  else if (!in_string && (c == '\\'' || c == '\"'))\n+\t      goto done;\n \t  /* Both !$omp and !$ -fopenmp continuation lines have & on the\n \t     continuation line only optionally.  */\n \t  else if (openmp_flag || openacc_flag || openmp_cond_flag)"}]}