{"sha": "d86b600d897573373606f052fc76cf9102d4be34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg2YjYwMGQ4OTc1NzMzNzM2MDZmMDUyZmM3NmNmOTEwMmQ0YmUzNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-11-19T10:53:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-11-19T10:53:59Z"}, "message": "PR libstdc++/88084 - Implement LWG 2777\n\n\t* include/std/string_view (basic_string_view::copy): Use traits to\n\tcopy.\n\t* testsuite/21_strings/basic_string_view/operations/copy/char/2.cc:\n\tNew test.\n\t* testsuite/21_strings/basic_string_view/operations/copy/wchar_t/2.cc:\n\tNew test.\n\nFrom-SVN: r266269", "tree": {"sha": "a51963a8a153c034bccdbdc54355cc5bcf0d1c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a51963a8a153c034bccdbdc54355cc5bcf0d1c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d86b600d897573373606f052fc76cf9102d4be34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86b600d897573373606f052fc76cf9102d4be34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d86b600d897573373606f052fc76cf9102d4be34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86b600d897573373606f052fc76cf9102d4be34/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ea52812a8a6c60c580529d1d3dbe144f8e6fc2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea52812a8a6c60c580529d1d3dbe144f8e6fc2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea52812a8a6c60c580529d1d3dbe144f8e6fc2f"}], "stats": {"total": 128, "additions": 125, "deletions": 3}, "files": [{"sha": "7e8df9db11dacfef69c7a973baaa49f3a02ca15b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d86b600d897573373606f052fc76cf9102d4be34", "patch": "@@ -1,3 +1,13 @@\n+2018-11-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/88084 - Implement LWG 2777\n+\t* include/std/string_view (basic_string_view::copy): Use traits to\n+\tcopy.\n+\t* testsuite/21_strings/basic_string_view/operations/copy/char/2.cc:\n+\tNew test.\n+\t* testsuite/21_strings/basic_string_view/operations/copy/wchar_t/2.cc:\n+\tNew test.\n+\n 2018-11-18  Michele Pezzutti <mpezz@tiscali.it>\n \t    Edward Smith-Rowland  <3dw4rd@verizon.net>\n "}, {"sha": "dc2478d8d0ee451661cd032d404171d190f2284a", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=d86b600d897573373606f052fc76cf9102d4be34", "patch": "@@ -236,9 +236,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__glibcxx_requires_string_len(__str, __n);\n \t__pos = _M_check(__pos, \"basic_string_view::copy\");\n \tconst size_type __rlen = std::min(__n, _M_len - __pos);\n-\tfor (auto __begin = this->_M_str + __pos,\n-\t     __end = __begin + __rlen; __begin != __end;)\n-\t  *__str++ = *__begin++;\n+\t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t// 2777. basic_string_view::copy should use char_traits::copy\n+\ttraits_type::copy(__str, data() + __pos, __rlen);\n \treturn __rlen;\n       }\n "}, {"sha": "b03edf77a4fdaada6e106a7fce9b85bd19ca7d79", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/copy/char/2.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fchar%2F2.cc?ref=d86b600d897573373606f052fc76cf9102d4be34", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+#include <string_view>\n+#include <testsuite_hooks.h>\n+\n+using char_type = char;\n+\n+// PR libstdc++/88084\n+// LWG 2777. basic_string_view::copy should use char_traits::copy\n+\n+struct traits : std::char_traits<char_type>\n+{\n+  static char_type*\n+  copy(char_type* s, const char_type* p, std::size_t n)\n+  {\n+    while (n--)\n+      *s++ = 'X';\n+    return s;\n+  }\n+};\n+\n+void\n+test01()\n+{\n+  std::basic_string_view<char_type, traits> s = \"abc\";\n+  char_type buf[3] = { '1', '2', '3' };\n+  auto len = s.copy(buf, 3, 1);\n+  VERIFY( len == 2 );\n+  VERIFY( buf[0] == 'X' );\n+  VERIFY( buf[1] == 'X' );\n+  VERIFY( buf[2] == '3' );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "bf192aa8870941b3206c535d095f6e780d02efed", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/copy/wchar_t/2.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86b600d897573373606f052fc76cf9102d4be34/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fwchar_t%2F2.cc?ref=d86b600d897573373606f052fc76cf9102d4be34", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+#include <string_view>\n+#include <testsuite_hooks.h>\n+\n+using char_type = wchar_t;\n+\n+// PR libstdc++/88084\n+// LWG 2777. basic_string_view::copy should use char_traits::copy\n+\n+struct traits : std::char_traits<char_type>\n+{\n+  static char_type*\n+  copy(char_type* s, const char_type* p, std::size_t n)\n+  {\n+    while (n--)\n+      *s++ = 'X';\n+    return s;\n+  }\n+};\n+\n+void\n+test01()\n+{\n+  std::basic_string_view<char_type, traits> s = L\"abc\";\n+  char_type buf[3] = { L'1', L'2', L'3' };\n+  auto len = s.copy(buf, 3, 1);\n+  VERIFY( len == 2 );\n+  VERIFY( buf[0] == L'X' );\n+  VERIFY( buf[1] == L'X' );\n+  VERIFY( buf[2] == L'3' );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}