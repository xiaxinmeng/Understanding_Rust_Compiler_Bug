{"sha": "d48e9ceac992612378241b3917d48cf434412a04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4ZTljZWFjOTkyNjEyMzc4MjQxYjM5MTdkNDhjZjQzNDQxMmEwNA==", "commit": {"author": {"name": "Olatunji Ruwase", "email": "tjruwase@google.com", "date": "2009-07-20T19:35:25Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-07-20T19:35:25Z"}, "message": "cgraph.h (constant_pool_htab): New function.\n\n\t* cgraph.h (constant_pool_htab): New function.\n\t(constant_descriptor_tree): Move from varasm.c.\n\t* varasm.c (constant_pool_htab): New function.\n\t(constant_descriptor_tree): Move to cgraph.h.\n\nFrom-SVN: r149834", "tree": {"sha": "f498012ed27ad5899f4f7b0a7afd40e9e4874bf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f498012ed27ad5899f4f7b0a7afd40e9e4874bf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d48e9ceac992612378241b3917d48cf434412a04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48e9ceac992612378241b3917d48cf434412a04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48e9ceac992612378241b3917d48cf434412a04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48e9ceac992612378241b3917d48cf434412a04/comments", "author": null, "committer": null, "parents": [{"sha": "9c8e65c30f22cfa6556f9431c35ec326a8088854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8e65c30f22cfa6556f9431c35ec326a8088854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8e65c30f22cfa6556f9431c35ec326a8088854"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "da82beb98ab798aef6cc64b947da04cb006eee44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48e9ceac992612378241b3917d48cf434412a04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48e9ceac992612378241b3917d48cf434412a04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d48e9ceac992612378241b3917d48cf434412a04", "patch": "@@ -1,3 +1,10 @@\n+2009-07-20  Olatunji Ruwase <tjruwase@google.com>\n+\n+\t* cgraph.h (constant_pool_htab): New function.\n+\t(constant_descriptor_tree): Move from varasm.c.\n+\t* varasm.c (constant_pool_htab): New function.\n+\t(constant_descriptor_tree): Move to cgraph.h.\n+\n 2009-07-20  Olatunji Ruwase  <tjruwase@google.com>\n \n \t* toplev.c: Invoke FINISH_UNIT callbacks before call to"}, {"sha": "3e1952088058e72d83bc4bf91eef61996cc76800", "filename": "gcc/cgraph.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48e9ceac992612378241b3917d48cf434412a04/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48e9ceac992612378241b3917d48cf434412a04/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=d48e9ceac992612378241b3917d48cf434412a04", "patch": "@@ -606,5 +606,24 @@ cgraph_node_set_size (cgraph_node_set set)\n   return htab_elements (set->hashtab);\n }\n \n+/* Uniquize all constants that appear in memory.\n+   Each constant in memory thus far output is recorded\n+   in `const_desc_table'.  */\n+\n+struct GTY(()) constant_descriptor_tree {\n+  /* A MEM for the constant.  */\n+  rtx rtl;\n+  \n+  /* The value of the constant.  */\n+  tree value;\n+\n+  /* Hash of value.  Computing the hash from value each time\n+     hashfn is called can't work properly, as that means recursive\n+     use of the hash table during hash table expansion.  */\n+  hashval_t hash;\n+};\n+\n+/* Constant pool accessor function.  */\n+htab_t constant_pool_htab (void);\n \n #endif  /* GCC_CGRAPH_H  */"}, {"sha": "2a8fb1182bfc6e0a381ef01c2efc6453471b7d32", "filename": "gcc/varasm.c", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48e9ceac992612378241b3917d48cf434412a04/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48e9ceac992612378241b3917d48cf434412a04/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d48e9ceac992612378241b3917d48cf434412a04", "patch": "@@ -2782,29 +2782,21 @@ decode_addr_const (tree exp, struct addr_const *value)\n   value->offset = offset;\n }\n \f\n-/* Uniquize all constants that appear in memory.\n-   Each constant in memory thus far output is recorded\n-   in `const_desc_table'.  */\n-\n-struct GTY(()) constant_descriptor_tree {\n-  /* A MEM for the constant.  */\n-  rtx rtl;\n-\n-  /* The value of the constant.  */\n-  tree value;\n-\n-  /* Hash of value.  Computing the hash from value each time\n-     hashfn is called can't work properly, as that means recursive\n-     use of the hash table during hash table expansion.  */\n-  hashval_t hash;\n-};\n \n static GTY((param_is (struct constant_descriptor_tree)))\n      htab_t const_desc_htab;\n \n static struct constant_descriptor_tree * build_constant_desc (tree);\n static void maybe_output_constant_def_contents (struct constant_descriptor_tree *, int);\n \n+/* Constant pool accessor function.  */\n+\n+htab_t \n+constant_pool_htab (void)\n+{\n+  return const_desc_htab;\n+}\n+\n /* Compute a hash code for a constant expression.  */\n \n static hashval_t"}]}