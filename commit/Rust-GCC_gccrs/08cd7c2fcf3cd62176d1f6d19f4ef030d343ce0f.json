{"sha": "08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjZDdjMmZjZjNjZDYyMTc2ZDFmNmQxOWY0ZWYwMzBkMzQzY2UwZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T14:27:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T14:27:22Z"}, "message": "[multiple changes]\n\n2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute, case 'Update): Analyze\n\texpressions in each component association, and for records note\n\tthe entity in each association choice, for subsequent resolution.\n\t(Resolve_Attribute, case 'Update): Complete resolution of\n\texpressions in each component association.\n\n2014-01-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sem.adb (Sem): Avoid premature reference to Current_Sem_Unit\n\t(this was causing Is_Main_Unit_Or_Main_Unit_Spec to be set wrong,\n\tleading to wrong handling of SPARK_Mode for library units).\n\n2014-01-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Set SPARK_Mode\n\ton generic instances (do not consider them to be internally\n\tgenerated)\n\n2014-01-24  Doug Rupp  <rupp@adacore.com>\n\n\t* s-osinte-android.ads (pthread_sigmask): Import sigprocmask\n\tvice pthread_sigmask.\n\n2014-01-24  Vincent Celier  <celier@adacore.com>\n\n\t* prj.adb (Debug_Output (Str, Str2)): Output if verbosity is\n\tnot default.\n\n2014-01-24  Vincent Celier  <celier@adacore.com>\n\n\t* prj-ext.adb (Add): Do not output anything when Silent is True,\n\twhatever the verbosity. When Source is From_External_Attribute,\n\tset the corresponding environment variable if it is not already set.\n\t* prj-ext.ads (Add): New Boolean parameter Silent, defaulted\n\tto False\n\t* prj-proc.adb (Process_Expression_For_Associative_Array):\n\tFor attribute External, call Prj.Ext.Add with Silent set to\n\tTrue for the child environment, to avoid useless output in non\n\tdefault verbosity.\n\n2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Set_Slice_Subtype): Handle properly a discrete\n\trange given by a subtype indication, and force evaluation of\n\tthe bounds, as for a simple range.\n\t* exp_util.adb (Evaluate_Slice_Bounds): Utility to force evaluation\n\tof bounds of slice for various kinds of discrete ranges.\n\t(Evaluate_Name, Evaluate_Subtype_From_Expr): use\n\tEvaluate_Slice_Bounds.\n\n2014-01-24  Bob Duff  <duff@adacore.com>\n\n\t* s-taskin.ads (Activator): Make this Atomic, because\n\tActivation_Is_Complete reads it, and that can be called\n\tfrom any task. Previously, this component was only\n\tmodified by the activator before activation, and by\n\tSelf after activation.\n\t* a-taside.ads, a-taside.adb (Environment_Task,\n\tActivation_Is_Complete): Implement these missing functions.\n\nFrom-SVN: r207034", "tree": {"sha": "799e4e44b9400cc1fb303ec146c507d289d8bd3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/799e4e44b9400cc1fb303ec146c507d289d8bd3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/comments", "author": null, "committer": null, "parents": [{"sha": "7610fee82af0217dd376ce0213d195209f72b606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7610fee82af0217dd376ce0213d195209f72b606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7610fee82af0217dd376ce0213d195209f72b606"}], "stats": {"total": 315, "additions": 258, "deletions": 57}, "files": [{"sha": "03c982d08cd46c7e6e2b6a488436daa5b8dfc086", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -1,3 +1,65 @@\n+2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, case 'Update): Analyze\n+\texpressions in each component association, and for records note\n+\tthe entity in each association choice, for subsequent resolution.\n+\t(Resolve_Attribute, case 'Update): Complete resolution of\n+\texpressions in each component association.\n+\n+2014-01-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem.adb (Sem): Avoid premature reference to Current_Sem_Unit\n+\t(this was causing Is_Main_Unit_Or_Main_Unit_Spec to be set wrong,\n+\tleading to wrong handling of SPARK_Mode for library units).\n+\n+2014-01-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Set SPARK_Mode\n+\ton generic instances (do not consider them to be internally\n+\tgenerated)\n+\n+2014-01-24  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-osinte-android.ads (pthread_sigmask): Import sigprocmask\n+\tvice pthread_sigmask.\n+\n+2014-01-24  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.adb (Debug_Output (Str, Str2)): Output if verbosity is\n+\tnot default.\n+\n+2014-01-24  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-ext.adb (Add): Do not output anything when Silent is True,\n+\twhatever the verbosity. When Source is From_External_Attribute,\n+\tset the corresponding environment variable if it is not already set.\n+\t* prj-ext.ads (Add): New Boolean parameter Silent, defaulted\n+\tto False\n+\t* prj-proc.adb (Process_Expression_For_Associative_Array):\n+\tFor attribute External, call Prj.Ext.Add with Silent set to\n+\tTrue for the child environment, to avoid useless output in non\n+\tdefault verbosity.\n+\n+2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Set_Slice_Subtype): Handle properly a discrete\n+\trange given by a subtype indication, and force evaluation of\n+\tthe bounds, as for a simple range.\n+\t* exp_util.adb (Evaluate_Slice_Bounds): Utility to force evaluation\n+\tof bounds of slice for various kinds of discrete ranges.\n+\t(Evaluate_Name, Evaluate_Subtype_From_Expr): use\n+\tEvaluate_Slice_Bounds.\n+\n+2014-01-24  Bob Duff  <duff@adacore.com>\n+\n+\t* s-taskin.ads (Activator): Make this Atomic, because\n+\tActivation_Is_Complete reads it, and that can be called\n+\tfrom any task. Previously, this component was only\n+\tmodified by the activator before activation, and by\n+\tSelf after activation.\n+\t* a-taside.ads, a-taside.adb (Environment_Task,\n+\tActivation_Is_Complete): Implement these missing functions.\n+\n 2014-01-24  Doug Rupp  <rupp@adacore.com>\n \n \t* init.c: Add a handler section for Android."}, {"sha": "520a7dfc1c992e2739978bf6b8dd912795b0c632", "filename": "gcc/ada/a-taside.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fa-taside.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fa-taside.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,6 +83,16 @@ package body Ada.Task_Identification is\n       end if;\n    end Abort_Task;\n \n+   ----------------------------\n+   -- Activation_Is_Complete --\n+   ----------------------------\n+\n+   function Activation_Is_Complete (T : Task_Id) return Boolean is\n+      use type System.Tasking.Task_Id;\n+   begin\n+      return Convert_Ids (T).Common.Activator = null;\n+   end Activation_Is_Complete;\n+\n    -----------------\n    -- Convert_Ids --\n    -----------------\n@@ -106,6 +116,15 @@ package body Ada.Task_Identification is\n       return Convert_Ids (System.Task_Primitives.Operations.Self);\n    end Current_Task;\n \n+   ----------------------\n+   -- Environment_Task --\n+   ----------------------\n+\n+   function Environment_Task return Task_Id is\n+   begin\n+      return Convert_Ids (System.Task_Primitives.Operations.Environment_Task);\n+   end Environment_Task;\n+\n    -----------\n    -- Image --\n    -----------"}, {"sha": "e53ff04ac2809b9b96486988eceb7b66bb9389a8", "filename": "gcc/ada/a-taside.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fa-taside.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fa-taside.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.ads?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -53,6 +53,9 @@ package Ada.Task_Identification is\n    function Current_Task return Task_Id;\n    pragma Inline (Current_Task);\n \n+   function Environment_Task return Task_Id;\n+   pragma Inline (Environment_Task);\n+\n    procedure Abort_Task (T : Task_Id);\n    pragma Inline (Abort_Task);\n    --  Note: parameter is mode IN, not IN OUT, per AI-00101\n@@ -63,6 +66,8 @@ package Ada.Task_Identification is\n    function Is_Callable (T : Task_Id) return Boolean;\n    pragma Inline (Is_Callable);\n \n+   function Activation_Is_Complete (T : Task_Id) return Boolean;\n+\n private\n \n    type Task_Id is new System.Tasking.Task_Id;"}, {"sha": "52626277cb4c485bea5c5de2e8ce5d350c935055", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 32, "deletions": 24, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -106,6 +106,10 @@ package body Exp_Util is\n    --  record with task components, or for a dynamically created task that is\n    --  assigned to a selected component.\n \n+   procedure Evaluate_Slice_Bounds (Slice : Node_Id);\n+   --  Force evaluation of bounds of a slice, which may be given by a range\n+   --  or by a subtype indication with or without a constraint.\n+\n    function Make_CW_Equivalent_Type\n      (T : Entity_Id;\n       E : Node_Id) return Entity_Id;\n@@ -1835,28 +1839,7 @@ package body Exp_Util is\n \n       elsif K = N_Slice then\n          Evaluate_Name (Prefix (Nam));\n-\n-         declare\n-            DR     : constant Node_Id := Discrete_Range (Nam);\n-            Constr : Node_Id;\n-            Rexpr  : Node_Id;\n-\n-         begin\n-            if Nkind (DR) = N_Range then\n-               Force_Evaluation (Low_Bound (DR));\n-               Force_Evaluation (High_Bound (DR));\n-\n-            elsif Nkind (DR) = N_Subtype_Indication then\n-               Constr := Constraint (DR);\n-\n-               if Nkind (Constr) = N_Range_Constraint then\n-                  Rexpr := Range_Expression (Constr);\n-\n-                  Force_Evaluation (Low_Bound (Rexpr));\n-                  Force_Evaluation (High_Bound (Rexpr));\n-               end if;\n-            end if;\n-         end;\n+         Evaluate_Slice_Bounds (Nam);\n \n       --  For a type conversion, the expression of the conversion must be the\n       --  name of an object, and we simply need to evaluate this name.\n@@ -1878,6 +1861,32 @@ package body Exp_Util is\n       end if;\n    end Evaluate_Name;\n \n+   ---------------------------\n+   -- Evaluate_Slice_Bounds --\n+   ---------------------------\n+\n+   procedure Evaluate_Slice_Bounds (Slice : Node_Id) is\n+      DR     : constant Node_Id := Discrete_Range (Slice);\n+      Constr : Node_Id;\n+      Rexpr  : Node_Id;\n+\n+   begin\n+      if Nkind (DR) = N_Range then\n+         Force_Evaluation (Low_Bound (DR));\n+         Force_Evaluation (High_Bound (DR));\n+\n+      elsif Nkind (DR) = N_Subtype_Indication then\n+         Constr := Constraint (DR);\n+\n+         if Nkind (Constr) = N_Range_Constraint then\n+            Rexpr := Range_Expression (Constr);\n+\n+            Force_Evaluation (Low_Bound (Rexpr));\n+            Force_Evaluation (High_Bound (Rexpr));\n+         end if;\n+      end if;\n+   end Evaluate_Slice_Bounds;\n+\n    ---------------------\n    -- Evolve_And_Then --\n    ---------------------\n@@ -2067,8 +2076,7 @@ package body Exp_Util is\n             --  we better make sure that if a variable was used as a bound of\n             --  of the original slice, its value is frozen.\n \n-            Force_Evaluation (Low_Bound (Scalar_Range (Slice_Type)));\n-            Force_Evaluation (High_Bound (Scalar_Range (Slice_Type)));\n+            Evaluate_Slice_Bounds (Exp);\n          end;\n \n       elsif Ekind (Exp_Typ) = E_String_Literal_Subtype then"}, {"sha": "5f134008b1cec0d496edbe15f03022aa05a78eb9", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,12 +66,39 @@ package body Prj.Ext is\n      (Self          : External_References;\n       External_Name : String;\n       Value         : String;\n-      Source        : External_Source := External_Source'First)\n+      Source        : External_Source := External_Source'First;\n+      Silent        : Boolean := False)\n    is\n       Key : Name_Id;\n       N   : Name_To_Name_Ptr;\n \n    begin\n+      --  For external attribute, set the environment variable\n+\n+      if Source = From_External_Attribute and then External_Name /= \"\" then\n+         declare\n+            Env_Var : String_Access := Getenv (External_Name);\n+\n+         begin\n+            if Env_Var = null or else Env_Var.all = \"\" then\n+               Setenv (Name => External_Name, Value => Value);\n+\n+               if not Silent then\n+                  Debug_Output\n+                    (\"Environment variable \"\"\" & External_Name\n+                     & \"\"\" = \"\"\" & Value & '\"');\n+               end if;\n+\n+            elsif not Silent then\n+               Debug_Output\n+                 (\"Not overriding existing environment variable \"\"\"\n+                  & External_Name & \"\"\", value is \"\"\" & Env_Var.all & '\"');\n+            end if;\n+\n+            Free (Env_Var);\n+         end;\n+      end if;\n+\n       Name_Len := External_Name'Length;\n       Name_Buffer (1 .. Name_Len) := External_Name;\n       Canonical_Case_Env_Var_Name (Name_Buffer (1 .. Name_Len));\n@@ -87,11 +114,13 @@ package body Prj.Ext is\n             if External_Source'Pos (N.Source) <\n                External_Source'Pos (Source)\n             then\n-               if Current_Verbosity = High then\n+               if not Silent then\n                   Debug_Output\n-                    (\"Not overridding existing variable '\" & External_Name\n-                     & \"', value was defined in \" & N.Source'Img);\n+                    (\"Not overridding existing external reference '\"\n+                     & External_Name & \"', value was defined in \"\n+                     & N.Source'Img);\n                end if;\n+\n                return;\n             end if;\n          end if;\n@@ -105,7 +134,7 @@ package body Prj.Ext is\n                   Value  => Name_Find,\n                   Next   => null);\n \n-      if Current_Verbosity = High then\n+      if not Silent then\n          Debug_Output (\"Add external (\" & External_Name & \") is\", N.Value);\n       end if;\n "}, {"sha": "ca01959789ecbc9465e28908d08b227070be3a7c", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,11 +68,13 @@ package Prj.Ext is\n      (Self          : External_References;\n       External_Name : String;\n       Value         : String;\n-      Source        : External_Source := External_Source'First);\n+      Source        : External_Source := External_Source'First;\n+      Silent        : Boolean := False);\n    --  Add an external reference (or modify an existing one). No overriding is\n    --  done if the Source's priority is less than the one used to previously\n    --  set the value of the variable. The default for Source is such that\n-   --  overriding always occurs.\n+   --  overriding always occurs. When Silent is True, nothing is output even\n+   --  with non default verbosity.\n \n    function Value_Of\n      (Self          : External_References;"}, {"sha": "43a0f87571b8ca67d8880cb434c66cb72b9632b9", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -1969,7 +1969,8 @@ package body Prj.Proc is\n                Add (Env.External,\n                     External_Name => Get_Name_String (Index_Name),\n                     Value         => Get_Name_String (New_Value.Value),\n-                    Source        => From_External_Attribute);\n+                    Source        => From_External_Attribute,\n+                    Silent        => True);\n             else\n                if Current_Verbosity = High then\n                   Debug_Output"}, {"sha": "29798a1002bed258cf1d937423784a397b1cd1d4", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -1838,7 +1838,7 @@ package body Prj is\n \n    procedure Debug_Output (Str : String; Str2 : Name_Id) is\n    begin\n-      if Current_Verbosity = High then\n+      if Current_Verbosity > Default then\n          Debug_Indent;\n          Set_Standard_Error;\n          Write_Str (Str);"}, {"sha": "2b94f3f05a12e8ab092e71b2c58ac99cb5a43fcb", "filename": "gcc/ada/s-osinte-android.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fs-osinte-android.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fs-osinte-android.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-android.ads?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1995-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -354,7 +354,10 @@ package System.OS_Interface is\n      (how  : int;\n       set  : access sigset_t;\n       oset : access sigset_t) return int;\n-   pragma Import (C, pthread_sigmask, \"pthread_sigmask\");\n+   pragma Import (C, pthread_sigmask, \"sigprocmask\");\n+   --  pthread_sigmask maybe be broken due to mismatch between sigset_t and\n+   --  kernel_sigset_t, substitute sigprocmask temporarily.  ???\n+   --  pragma Import (C, pthread_sigmask, \"pthread_sigmask\");\n \n    --------------------------\n    -- POSIX.1c  Section 11 --"}, {"sha": "ab9e89edb8bcbdbedbd2ae91274fb60f3e8b6252", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -615,12 +615,14 @@ package System.Tasking is\n       --  Protection: Only used by Activator\n \n       Activator : Task_Id;\n+      pragma Atomic (Activator);\n       --  The task that created this task, either by declaring it as a task\n       --  object or by executing a task allocator. The value is null iff Self\n       --  has completed activation.\n       --\n-      --  Protection: Set by Activator before Self is activated, and only read\n-      --  and modified by Self after that.\n+      --  Protection: Set by Activator before Self is activated, and\n+      --  only modified by Self after that. Can be read by any task via\n+      --  Ada.Task_Identification.Activation_Is_Complete; hence Atomic.\n \n       Wait_Count : Natural;\n       --  This count is used by a task that is waiting for other tasks. At all"}, {"sha": "94ee841b7dcbda6183742fa6a9029485eb08701b", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -1312,18 +1312,19 @@ package body Sem is\n       S_Outer_Gen_Scope   : constant Entity_Id        := Outer_Generic_Scope;\n       S_Style_Check       : constant Boolean          := Style_Check;\n \n+      Curunit : constant Unit_Number_Type := Get_Cunit_Unit_Number (Comp_Unit);\n+      --  New value of Current_Sem_Unit\n+\n       Generic_Main : constant Boolean :=\n-                       Nkind (Unit (Cunit (Main_Unit)))\n-                         in N_Generic_Declaration;\n+        Nkind (Unit (Cunit (Main_Unit))) in N_Generic_Declaration;\n       --  If the main unit is generic, every compiled unit, including its\n       --  context, is compiled with expansion disabled.\n \n       Is_Main_Unit_Or_Main_Unit_Spec : constant Boolean :=\n-         Current_Sem_Unit = Main_Unit\n+         Curunit = Main_Unit\n            or else\n              (Nkind (Unit (Cunit (Main_Unit))) = N_Package_Body\n-               and then Library_Unit (Cunit (Main_Unit)) =\n-                  Cunit (Current_Sem_Unit));\n+               and then Library_Unit (Cunit (Main_Unit)) = Cunit (Curunit));\n       --  Configuration flags have special settings when compiling a predefined\n       --  file as a main unit. This applies to its spec as well.\n \n@@ -1393,7 +1394,7 @@ package body Sem is\n       end if;\n \n       Compiler_State   := Analyzing;\n-      Current_Sem_Unit := Get_Cunit_Unit_Number (Comp_Unit);\n+      Current_Sem_Unit := Curunit;\n \n       --  Compile predefined units with GNAT_Mode set to True, to properly\n       --  process the categorization stuff. However, do not set GNAT_Mode"}, {"sha": "b73749390bcac66be69e7285e0b6f6ecc081a308", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 58, "deletions": 5, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -6013,6 +6013,11 @@ package body Sem_Attr is\n             Comp_Or_Discr := First_Entity (Typ);\n             while Present (Comp_Or_Discr) loop\n                if Chars (Comp_Or_Discr) = Comp_Name then\n+\n+                  --  Record component entity in the given aggregate choice,\n+                  --  for subsequent resolution.\n+\n+                  Set_Entity (Comp, Comp_Or_Discr);\n                   exit;\n                end if;\n \n@@ -6086,6 +6091,7 @@ package body Sem_Attr is\n          Assoc := First (Component_Associations (E1));\n          while Present (Assoc) loop\n             Comp := First (Choices (Assoc));\n+            Analyze (Expression (Assoc));\n             while Present (Comp) loop\n                if Nkind (Comp) = N_Others_Choice then\n                   Error_Attr\n@@ -8826,12 +8832,8 @@ package body Sem_Attr is\n \n       --  Attribute Update is never static\n \n-      ------------\n-      -- Update --\n-      ------------\n-\n       when Attribute_Update =>\n-         null;\n+         return;\n \n       ---------------\n       -- VADS_Size --\n@@ -10409,6 +10411,57 @@ package body Sem_Attr is\n \n          --  Processing is shared with Access\n \n+         ------------\n+         -- Update --\n+         ------------\n+\n+         --  Resolve aggregate components in component associations\n+\n+         when Attribute_Update =>\n+            declare\n+               Aggr  : constant Node_Id   := First (Expressions (N));\n+               Typ   : constant Entity_Id := Etype (Prefix (N));\n+               Assoc : Node_Id;\n+               Comp  : Node_Id;\n+\n+            begin\n+               --  Set the Etype of the aggregate to that of the prefix, even\n+               --  though the aggregate may not be a proper representation of a\n+               --  value of the type (missing or duplicated associations, etc.)\n+\n+               Set_Etype (Aggr, Typ);\n+\n+               --  For an array type, resolve expressions with the component\n+               --  type of the array.\n+\n+               if Is_Array_Type (Typ) then\n+                  Assoc := First (Component_Associations (Aggr));\n+                  while Present (Assoc) loop\n+                     Resolve (Expression (Assoc), Component_Type (Typ));\n+                     Next (Assoc);\n+                  end loop;\n+\n+               --  For a record type, use type of each component, which is\n+               --  recorded during analysis.\n+\n+               else\n+                  Assoc := First (Component_Associations (Aggr));\n+                  while Present (Assoc) loop\n+                     Comp := First (Choices (Assoc));\n+                     if Nkind (Comp) /= N_Others_Choice\n+                       and then not Error_Posted (Comp)\n+                     then\n+                        Resolve (Expression (Assoc), Etype (Entity (Comp)));\n+                     end if;\n+                     Next (Assoc);\n+                  end loop;\n+               end if;\n+            end;\n+\n+            --  Premature return requires comment ???\n+\n+            return;\n+\n          ---------\n          -- Val --\n          ---------"}, {"sha": "edfaff2b392b5b020fd202a4532d421c0d398a9a", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -2997,9 +2997,13 @@ package body Sem_Ch6 is\n \n             --  Set SPARK_Mode\n \n-            --  For internally generated subprogram, always off\n+            --  For internally generated subprogram, always off. But generic\n+            --  instances are not generated implicitly, so are never considered\n+            --  as internal, even though Comes_From_Source is false.\n \n-            if not Comes_From_Source (Spec_Id) then\n+            if not Comes_From_Source (Spec_Id)\n+              and then not Is_Generic_Instance (Spec_Id)\n+            then\n                SPARK_Mode := Off;\n                SPARK_Mode_Pragma := Empty;\n "}, {"sha": "989e3f115755d53c26c6b050017cadb1a11bb228", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=08cd7c2fcf3cd62176d1f6d19f4ef030d343ce0f", "patch": "@@ -10518,6 +10518,8 @@ package body Sem_Res is\n       Drange        : constant Node_Id := Discrete_Range (N);\n \n    begin\n+      Index_Type := Base_Type (Etype (Drange));\n+\n       if Is_Entity_Name (Drange) then\n          Index_Subtype := Entity (Drange);\n \n@@ -10531,9 +10533,19 @@ package body Sem_Res is\n          if Nkind (Drange) = N_Range then\n             Force_Evaluation (Low_Bound (Drange));\n             Force_Evaluation (High_Bound (Drange));\n-         end if;\n \n-         Index_Type := Base_Type (Etype (Drange));\n+         --  If the discrete range is given by a subtype indication, the\n+         --  type of the slice is the base of the subtype mark.\n+\n+         elsif Nkind (Drange) = N_Subtype_Indication then\n+            declare\n+               R : constant Node_Id := Range_Expression (Constraint (Drange));\n+            begin\n+               Index_Type := Base_Type (Entity (Subtype_Mark (Drange)));\n+               Force_Evaluation (Low_Bound  (R));\n+               Force_Evaluation (High_Bound (R));\n+            end;\n+         end if;\n \n          Index_Subtype := Create_Itype (Subtype_Kind (Ekind (Index_Type)), N);\n "}]}