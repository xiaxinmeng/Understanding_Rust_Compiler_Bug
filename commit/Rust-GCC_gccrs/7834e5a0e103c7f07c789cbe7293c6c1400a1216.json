{"sha": "7834e5a0e103c7f07c789cbe7293c6c1400a1216", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzNGU1YTBlMTAzYzdmMDdjNzg5Y2JlNzI5M2M2YzE0MDBhMTIxNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-03-18T19:37:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-03-18T19:37:00Z"}, "message": "PR c++/89630 - ICE with dependent using-decl as template arg.\n\nEven though these two using-declarations have the same effect, they are not\nthe same declaration, and we don't need to work to treat them as the same\nlike we do for typedefs.  If we did need to, we would need to handle them\nspecially in iterative_hash_template_arg as well as here.\n\n\t* tree.c (cp_tree_equal): Always return false for USING_DECL.\n\nFrom-SVN: r269777", "tree": {"sha": "97886d9c91f2fe477e6119e6ecaa89f7b04eaf30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97886d9c91f2fe477e6119e6ecaa89f7b04eaf30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7834e5a0e103c7f07c789cbe7293c6c1400a1216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7834e5a0e103c7f07c789cbe7293c6c1400a1216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7834e5a0e103c7f07c789cbe7293c6c1400a1216", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7834e5a0e103c7f07c789cbe7293c6c1400a1216/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d849cfaeeaf15a30170b0fb10b4f62075a1ee58b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d849cfaeeaf15a30170b0fb10b4f62075a1ee58b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d849cfaeeaf15a30170b0fb10b4f62075a1ee58b"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "76bc8ffaa6852bbe9992551c894b3551cf0c5728", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7834e5a0e103c7f07c789cbe7293c6c1400a1216/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7834e5a0e103c7f07c789cbe7293c6c1400a1216/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7834e5a0e103c7f07c789cbe7293c6c1400a1216", "patch": "@@ -1,5 +1,8 @@\n 2019-03-18  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/89630 - ICE with dependent using-decl as template arg.\n+\t* tree.c (cp_tree_equal): Always return false for USING_DECL.\n+\n \tPR c++/89761 - ICE with sizeof... in pack expansion.\n \t* pt.c (argument_pack_element_is_expansion_p): Handle\n \tARGUMENT_PACK_SELECT."}, {"sha": "718eed349c65f7eb78972dade3ebf7467ecb8719", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7834e5a0e103c7f07c789cbe7293c6c1400a1216/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7834e5a0e103c7f07c789cbe7293c6c1400a1216/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=7834e5a0e103c7f07c789cbe7293c6c1400a1216", "patch": "@@ -3661,6 +3661,7 @@ cp_tree_equal (tree t1, tree t2)\n     case TEMPLATE_DECL:\n     case IDENTIFIER_NODE:\n     case SSA_NAME:\n+    case USING_DECL:\n       return false;\n \n     case BASELINK:\n@@ -3787,14 +3788,6 @@ cp_tree_equal (tree t1, tree t2)\n \t\t\t\t     DEFERRED_NOEXCEPT_ARGS (t2)));\n       break;\n \n-    case USING_DECL:\n-      if (DECL_DEPENDENT_P (t1) && DECL_DEPENDENT_P (t2))\n-\treturn (cp_tree_equal (USING_DECL_SCOPE (t1),\n-\t\t\t       USING_DECL_SCOPE (t2))\n-\t\t&& cp_tree_equal (DECL_NAME (t1),\n-\t\t\t\t  DECL_NAME (t2)));\n-      return false;\n-\n     case LAMBDA_EXPR:\n       /* Two lambda-expressions are never considered equivalent.  */\n       return false;"}]}