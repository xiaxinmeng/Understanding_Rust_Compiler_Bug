{"sha": "106fcf8f5f49d7a7319381248a33a5fa59eca687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA2ZmNmOGY1ZjQ5ZDdhNzMxOTM4MTI0OGEzM2E1ZmE1OWVjYTY4Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-06-10T19:31:00Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-06-10T19:31:00Z"}, "message": "re PR c++/41769 (Parameter names not restricted to identifiers)\n\n/cp\n2011-06-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/41769\n\t* decl.c (grokdeclarator): Reject operator names in parameters.\n\n/testsuite\n2011-06-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/41769\n\t* g++.dg/parse/error39.C: New.\n\nFrom-SVN: r174927", "tree": {"sha": "4feceff719742084a54fed6f369b3655e167f98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4feceff719742084a54fed6f369b3655e167f98d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/106fcf8f5f49d7a7319381248a33a5fa59eca687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106fcf8f5f49d7a7319381248a33a5fa59eca687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/106fcf8f5f49d7a7319381248a33a5fa59eca687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106fcf8f5f49d7a7319381248a33a5fa59eca687/comments", "author": null, "committer": null, "parents": [{"sha": "418173945d315abc08d2980ed53521fb1892d94b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/418173945d315abc08d2980ed53521fb1892d94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/418173945d315abc08d2980ed53521fb1892d94b"}], "stats": {"total": 99, "additions": 65, "deletions": 34}, "files": [{"sha": "9f429b51c58f6926e8a9e65e1669abf5efe28298", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=106fcf8f5f49d7a7319381248a33a5fa59eca687", "patch": "@@ -1,3 +1,8 @@\n+2011-06-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/41769\n+\t* decl.c (grokdeclarator): Reject operator names in parameters.\n+\n 2011-06-10  Jan Hubicka  <jh@suse.cz>\n \n \t* decl2.c (clear_decl_external): New functoin."}, {"sha": "f4988f910de68dedec042af9b119527f74ae8c96", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=106fcf8f5f49d7a7319381248a33a5fa59eca687", "patch": "@@ -8441,11 +8441,18 @@ grokdeclarator (const cp_declarator *declarator,\n       return error_mark_node;\n     }\n \n-  if (dname && IDENTIFIER_OPNAME_P (dname)\n-      && declspecs->specs[(int)ds_typedef])\n+  if (dname && IDENTIFIER_OPNAME_P (dname))\n     {\n-      error (\"declaration of %qD as %<typedef%>\", dname);\n-      return error_mark_node;\n+      if (declspecs->specs[(int)ds_typedef])\n+\t{\n+\t  error (\"declaration of %qD as %<typedef%>\", dname);\n+\t  return error_mark_node;\n+\t}\n+      else if (decl_context == PARM || decl_context == CATCHPARM)\n+\t{\n+\t  error (\"declaration of %qD as parameter\", dname);\n+\t  return error_mark_node;\n+\t}\n     }\n \n   /* Anything declared one level down from the top level"}, {"sha": "4b061b36ec7ae1c288d8eb04b550e429a5f4229f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 30, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=106fcf8f5f49d7a7319381248a33a5fa59eca687", "patch": "@@ -1,3 +1,8 @@\n+2011-06-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/41769\n+\t* g++.dg/parse/error39.C: New.\n+\n 2011-06-10  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* gcc/testsuite/gcc.target/arm/20090811-1.c: Skip for incompatible\n@@ -86,7 +91,7 @@\n \n \t* objc-obj-c++-shared/objc-test-suite-next-encode-assist.h\n \t(PMETH, arglist_t): Removed.\n-\t(method_get_number_of_arguments): Removed.\t\n+\t(method_get_number_of_arguments): Removed.\n \t(method_get_nth_argument): Removed.\n \t(method_get_first_argument): Removed.\n \t(method_get_next_argument): Removed.\n@@ -97,9 +102,9 @@\n \t(method_get_nth_argument): Removed.\n \t(method_get_first_argument): Removed.\n \t(method_get_next_argument): Removed.\n-\t(method_get_sizeof_arguments): Removed.\t\n+\t(method_get_sizeof_arguments): Removed.\n \t* objc-obj-c++-shared/objc-test-suite-types.h (PMETH): Removed.\n-\t\n+\n 2011-06-09  David Li  <davidxl@google.com>\n \n \t* testsuite/gcc.dg/dump-pass.c: New test.\n@@ -286,7 +291,7 @@\n \t* objc-obj-c++-shared/TestsuiteObject.h ([-free]): Return 'id'.\n \t* objc-obj-c++-shared/TestsuiteObject.m ([-free]): Return 'id'.\n \tAdded cast.\n-\t\n+\n 2011-06-07  Xinliang David Li  <davidxl@google.com>\n \n \t* testsuite/gcc.dg/inline_2.c: New test.\n@@ -366,8 +371,8 @@\n \t* objc-obj-c++-shared/runtime.h: New.\n \t* objc-obj-c++-shared/TestsuiteObject.h: New.\n \t* objc-obj-c++-shared/TestsuiteObject.m: New.\n-\t\n-\t* objc/compile/trivial.m: Use TestsuiteObject instead of Object.\t\n+\n+\t* objc/compile/trivial.m: Use TestsuiteObject instead of Object.\n \t* objc/execute/IMP.m: Include ../../objc-obj-c++-shared/runtime.h.\n \tUse the Modern Objective-C runtime API. ([TestClass -next:]): Made\n \tit a class method.\n@@ -433,7 +438,7 @@\n \t* objc/execute/exceptions/catchall-1.m: Likewise.\n \t* objc/execute/exceptions/finally-1.m: Likewise.\n \t* objc/execute/exceptions/foward-1.m: Likewise.\n-\t* objc/execute/exceptions/local-variables-1.m: Likewise.\t\n+\t* objc/execute/exceptions/local-variables-1.m: Likewise.\n \t* objc/execute/exceptions/throw-nil.m: Likewise.\n \t* objc/execute/exceptions/trivial.m: Likewise.\n \t* objc/execute/exceptions/handler-1.m: Use TestsuiteObject instead\n@@ -499,15 +504,15 @@\n \truntime as well.\n \t* objc.dg/attributes/categ-attribute-1.m: Use TestsuiteObject\n \tinstead of Object.\n-\t* obj-c++.dg/attributes/categ-attribute-1.mm: Likewise.\t\n+\t* obj-c++.dg/attributes/categ-attribute-1.mm: Likewise.\n \t* objc.dg/attributes/categ-attributes-2.m: Likewise.\n \t* obj-c++.dg/attributes/categ-attributes-2.mm: Likewise.\n \t* objc.dg/attributes/method-attribute-1.m: Likewise.\n-\t* obj-c++.dg/attributes/method-attribute-1.mm: Likewise.\t\n+\t* obj-c++.dg/attributes/method-attribute-1.mm: Likewise.\n \t* objc.dg/attributes/method-attribute-2.m: Likewise.\n-\t* obj-c++.dg/attributes/method-attribute-2.mm: Likewise.\t\n+\t* obj-c++.dg/attributes/method-attribute-2.mm: Likewise.\n \t* objc.dg/attributes/method-attribute-3.m: Likewise.\n-\t* obj-c++.dg/attributes/method-attribute-3.mm: Likewise.\t\n+\t* obj-c++.dg/attributes/method-attribute-3.mm: Likewise.\n \t* obj-c++.dg/basic.mm: Use TestsuiteObject instead of Object.\n \t* objc.dg/bitfield-1.m: Use TestsuiteObject instead of Object.\n \t* obj-c++.dg/bitfield-1.mm: Likewise.\n@@ -522,10 +527,10 @@\n \t../objc-obj-c++-shared/runtime.h.\n \t* objc.dg/call-super-3.m: Use TestsuiteObject instead of Object.\n \t* objc.dg/category-1.m: Use TestsuiteObject instead of Object.\n-\tUse the Modern Objective-C runtime API.\t\n+\tUse the Modern Objective-C runtime API.\n \t* objc.dg/class-protocol-1.m: Include\n \t../objc-obj-c++-shared/runtime.h instead of objc/objc-api.h.\n-\t* obj-c++.dg/class-protocol-1.mm: Likewise.\t\n+\t* obj-c++.dg/class-protocol-1.mm: Likewise.\n \t* objc.dg/comp-types-8.m: Use TestsuiteObject instead of Object.\n \t* objc.dg/comp-types-10.m: Likewise.\n \t* objc.dg/comp-types-11.m: Likewise.\n@@ -555,7 +560,7 @@\n \t* objc.dg/encode-5.m: Use TestsuiteObject instead of Object.  Use\n \tthe Modern Objective-C runtime API.\n \t* objc.dg/encode-7.m: Include objc/runtime.h instead of\n-\tobjc/encoding.h.\t\n+\tobjc/encoding.h.\n \t* objc.dg/encode-7-next.m: Use TestsuiteObject instead of Object.\n \t* objc.dg/encode-7-next-64bit.m: Updated include.\n \t* objc.dg/encode-8.m: Include objc/runtime.h instead of\n@@ -569,7 +574,7 @@\n \tthe Modern Objective-C runtime API except when using an older NeXT\n \truntime.\n \t* obj-c++.dg/encode-7.mm:  Use TestsuiteObject instead of Object.  Use\n-\tthe Modern Objective-C runtime API.\t\n+\tthe Modern Objective-C runtime API.\n \t* objc.dg/fix-and-continue-1.m: Use TestsuiteObject instead of\n \tObject.\n \t* obj-c++.dg/fix-and-continue-2.mm: Likewise.\n@@ -587,8 +592,8 @@\n \t* objc.dg/fsf-package-0.m: Use TestsuiteObject instead of Object.\n \tDo not include objc/objc-api.h.\n \t* obj-c++.dg/fsf-package-0.mm: Likewise.\n-\t* objc.dg/gnu-encoding/struct-layout-encoding-1_generate.c (switchfiles):\n-\tInclude objc/runtime.h instead of objc/encoding.h.\t\n+\t* objc.dg/gnu-encoding/struct-layout-encoding-1_generate.c\n+\t(switchfiles): Include objc/runtime.h instead of objc/encoding.h.\n \t* objc.dg/gnu-runtime-1.m: Updated to use TestsuiteObject instead\n \tof Object.\n \t* obj-c++.dg/gnu-runtime-1.mm: Likewise.\n@@ -660,7 +665,7 @@\n \t* obj-c++.dg/proto-lossage-3.mm: Likewise.\n \t* objc.dg/proto-qual-1.m: Updated includes.  Use the Modern\n \tObjective-C runtime API.\n-\t* obj-c++.dg/proto-qual-1.mm: Likewise.\t\n+\t* obj-c++.dg/proto-qual-1.mm: Likewise.\n \t* objc.dg/property/property-1.m: Use TestsuiteObject instead of\n \tObject.\n \t* obj-c++.dg/property/property-1.mm: Likewise.\n@@ -718,7 +723,7 @@\n \tObject.  Use Modern Objective-C runtime API.  Do not use\n \tperformv::.\n \t* objc.dg/torture/trivial.m: Use TestsuiteObject intead of Object.\n-\t* obj-c++.dg/torture/trivial.mm: Likewise.\t\n+\t* obj-c++.dg/torture/trivial.mm: Likewise.\n \t* objc.dg/torture/strings/const-str-10.m: Include objc/Object.h\n \tinstead of ../objc-obj-c++-shared/Object1.h.  Include\n \t../objc-obj-c++-shared/runtime.h.\n@@ -742,16 +747,16 @@\n \t* obj-c++.dg/va-meth-1.mm: Likewise.\n \t* objc.dg/zero-link-1.m: Include objc/Object.h instead of\n \t../objc-obj-c++-shared/Object1.h.\n-\t* objc.dg/zero-link-3.m: Likewise.\t\n-\t\n+\t* objc.dg/zero-link-3.m: Likewise.\n+\n 2011-06-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* obj-c++.dg/try-catch-2.mm: Fixed unterminated comment.\n-\t\n+\n 2011-06-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc-++/48275\n-\t* obj-c++.dg/property/cxx-property-1.mm: New.\t\n+\t* obj-c++.dg/property/cxx-property-1.mm: New.\n \t* obj-c++.dg/property/cxx-property-2.mm: New.\n \n 2011-06-06  Jason Merrill  <jason@redhat.com>\n@@ -817,14 +822,14 @@\n \t* objc.dg/gnu-api-2-objc.m: Likewise.\n \t* obj-c++.dg/gnu-api-2-class.mm: Likewise\n \t* obj-c++.dg/gnu-api-2-objc.mm: Likewise.\n-\t\n+\n 2011-06-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/gnu-api-2-objc.m: Fixed testcase.  Use log2 of the\n \talignment, not the alignment, when calling class_addIvar().  Add\n \tan 'isa' instance variable to the test root class.\n \t* obj-c++.dg/gnu-api-2-objc.mm: Likewise.\n-\t\n+\n 2011-06-04  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/48893\n@@ -883,7 +888,7 @@\n \n \t* objc.dg/type-stream-1.m: Test removed.\n \t* objc.dg/headers.m: Do not include typedstream.h.\n-\t\n+\n 2011-06-02  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/torture/forward-1.m (main): Updated testcase.\n@@ -906,12 +911,12 @@\n 2011-06-02  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/48539\n-\t* objc.dg/method-5.m: Updated.\t\n+\t* objc.dg/method-5.m: Updated.\n \t* objc.dg/method-19.m: Updated.\n-\t* objc.dg/method-lookup-1.m: New.\t\n+\t* objc.dg/method-lookup-1.m: New.\n \t* obj-c++.dg/method-6.mm: Updated.\n \t* obj-c++.dg/method-7.mm: Updated.\n-\t* obj-c++.dg/method-lookup-1.mm: New.\t\n+\t* obj-c++.dg/method-lookup-1.mm: New.\n \n 2011-06-02  DJ Delorie  <dj@redhat.com>\n \n@@ -985,7 +990,7 @@\n 2011-06-01  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/attributes/method-nonnull-1.m: New test.\n-\t* obj-c++.dg/attributes/method-nonnull-1.mm: New test.\t\n+\t* obj-c++.dg/attributes/method-nonnull-1.mm: New test.\n \n 2011-05-31  Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "431571c12e38b53e28a1712f128c8f61691f2c84", "filename": "gcc/testsuite/g++.dg/parse/error39.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/106fcf8f5f49d7a7319381248a33a5fa59eca687/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror39.C?ref=106fcf8f5f49d7a7319381248a33a5fa59eca687", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/41769\n+\n+void f(void operator+()); // { dg-error \"declaration\" }\n+\n+void g()\n+{\n+  try\n+    {\n+\n+    }\n+  catch(void operator+()) // { dg-error \"declaration\" }\n+    {\n+    }\n+}"}]}