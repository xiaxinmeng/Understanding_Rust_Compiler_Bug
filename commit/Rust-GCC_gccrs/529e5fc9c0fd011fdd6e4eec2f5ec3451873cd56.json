{"sha": "529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5ZTVmYzljMGZkMDExZmRkNmU0ZWVjMmY1ZWMzNDUxODczY2Q1Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-06-21T16:33:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-06-21T16:33:49Z"}, "message": "re PR target/44575 (__builtin_va_arg overwrites into adjacent stack location)\n\n\tPR target/44575\n\t* config/i386/i386.c (ix86_gimplify_va_arg): When copying\n\tva_arg from a set of register save slots into a temporary,\n\tif the container is bigger than type size, do the copying\n\tusing smaller mode or using memcpy.\n\n\t* gcc.c-torture/execute/pr44575.c: New test.\n\nFrom-SVN: r161097", "tree": {"sha": "3cacca416abef2d034b3c0f4fa0556c0b6a8e812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cacca416abef2d034b3c0f4fa0556c0b6a8e812"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ec96609560006b0b7787892766fa1936c30a2b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec96609560006b0b7787892766fa1936c30a2b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec96609560006b0b7787892766fa1936c30a2b2"}], "stats": {"total": 104, "additions": 96, "deletions": 8}, "files": [{"sha": "140b9406f27469bb42417cc348b6377bd6b98dbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "patch": "@@ -47,6 +47,12 @@\n \t* stmt.c (resolve_asm_operand_names): Fix handling\n \tof %%.\n \n+\tPR target/44575\n+\t* config/i386/i386.c (ix86_gimplify_va_arg): When copying\n+\tva_arg from a set of register save slots into a temporary,\n+\tif the container is bigger than type size, do the copying\n+\tusing smaller mode or using memcpy.\n+\n \tPR bootstrap/44426\n \t* sel-sched-dump.h (sel_prepare_string_for_dot_label): Remove\n \tprototype."}, {"sha": "7d97a6a0061e51ee40768d827cb920ea77f7c953", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "patch": "@@ -7267,7 +7267,7 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \t}\n       if (need_temp)\n \t{\n-\t  int i;\n+\t  int i, prev_size = 0;\n \t  tree temp = create_tmp_var (type, \"va_arg_tmp\");\n \n \t  /* addr = &temp; */\n@@ -7279,13 +7279,29 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \t      rtx slot = XVECEXP (container, 0, i);\n \t      rtx reg = XEXP (slot, 0);\n \t      enum machine_mode mode = GET_MODE (reg);\n-\t      tree piece_type = lang_hooks.types.type_for_mode (mode, 1);\n-\t      tree addr_type = build_pointer_type (piece_type);\n-\t      tree daddr_type = build_pointer_type_for_mode (piece_type,\n-\t\t\t\t\t\t\t     ptr_mode, true);\n+\t      tree piece_type;\n+\t      tree addr_type;\n+\t      tree daddr_type;\n \t      tree src_addr, src;\n \t      int src_offset;\n \t      tree dest_addr, dest;\n+\t      int cur_size = GET_MODE_SIZE (mode);\n+\n+\t      if (prev_size + cur_size > size)\n+\t\t{\n+\t\t  cur_size = size - prev_size;\n+\t\t  mode = mode_for_size (cur_size * BITS_PER_UNIT, MODE_INT, 1);\n+\t\t  if (mode == BLKmode)\n+\t\t    mode = QImode;\n+\t\t}\n+\t      piece_type = lang_hooks.types.type_for_mode (mode, 1);\n+\t      if (mode == GET_MODE (reg))\n+\t\taddr_type = build_pointer_type (piece_type);\n+\t      else\n+\t\taddr_type = build_pointer_type_for_mode (piece_type, ptr_mode,\n+\t\t\t\t\t\t\t true);\n+\t      daddr_type = build_pointer_type_for_mode (piece_type, ptr_mode,\n+\t\t\t\t\t\t\ttrue);\n \n \t      if (SSE_REGNO_P (REGNO (reg)))\n \t\t{\n@@ -7300,14 +7316,26 @@ ix86_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \t      src_addr = fold_convert (addr_type, src_addr);\n \t      src_addr = fold_build2 (POINTER_PLUS_EXPR, addr_type, src_addr,\n \t\t\t\t      size_int (src_offset));\n-\t      src = build_va_arg_indirect_ref (src_addr);\n \n \t      dest_addr = fold_convert (daddr_type, addr);\n \t      dest_addr = fold_build2 (POINTER_PLUS_EXPR, daddr_type, dest_addr,\n \t\t\t\t       size_int (INTVAL (XEXP (slot, 1))));\n-\t      dest = build_va_arg_indirect_ref (dest_addr);\n+\t      if (cur_size == GET_MODE_SIZE (mode))\n+\t\t{\n+\t\t  src = build_va_arg_indirect_ref (src_addr);\n+\t\t  dest = build_va_arg_indirect_ref (dest_addr);\n \n-\t      gimplify_assign (dest, src, pre_p);\n+\t\t  gimplify_assign (dest, src, pre_p);\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  tree copy\n+\t\t    = build_call_expr (implicit_built_in_decls[BUILT_IN_MEMCPY],\n+\t\t\t\t       3, dest_addr, src_addr,\n+\t\t\t\t       size_int (cur_size));\n+\t\t  gimplify_and_add (copy, pre_p);\n+\t\t}\n+\t      prev_size += cur_size;\n \t    }\n \t}\n "}, {"sha": "b61001c1e3572b1ef82008dab287e4a2cc4df5bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "patch": "@@ -1,3 +1,8 @@\n+2010-06-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/44575\n+\t* gcc.c-torture/execute/pr44575.c: New test.\n+\n 2010-06-21  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40632"}, {"sha": "62a7d7800b0f85f2be8451116c5dda76286f16b9", "filename": "gcc/testsuite/gcc.c-torture/execute/pr44575.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44575.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44575.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44575.c?ref=529e5fc9c0fd011fdd6e4eec2f5ec3451873cd56", "patch": "@@ -0,0 +1,49 @@\n+/* PR target/44575 */\n+\n+#include <stdarg.h>\n+\n+int fails = 0;\n+struct S { float a[3]; };\n+struct S a[5];\n+\n+void\n+check (int z, ...)\n+{\n+  struct S arg, *p;\n+  va_list ap;\n+  int j = 0, k = 0;\n+  int i;\n+  va_start (ap, z);\n+  for (i = 2; i < 4; ++i)\n+    {\n+      p = 0;\n+      j++;\n+      k += 2;\n+      switch ((z << 4) | i)\n+\t{\n+\tcase 0x12:\n+\tcase 0x13:\n+\t  p = &a[2];\n+\t  arg = va_arg (ap, struct S);\n+\t  break;\n+\tdefault:\n+\t  ++fails;\n+\t  break;\n+\t}\n+      if (p && p->a[2] != arg.a[2])\n+\t++fails;\n+      if (fails)\n+\tbreak;\n+    }\n+  va_end (ap);\n+}\n+\n+int\n+main ()\n+{\n+  a[2].a[2] = -49026;\n+  check (1, a[2], a[2]);\n+  if (fails)\n+    abort ();\n+  return 0;\n+}"}]}