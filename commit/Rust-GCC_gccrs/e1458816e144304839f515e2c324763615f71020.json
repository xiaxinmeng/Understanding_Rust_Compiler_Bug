{"sha": "e1458816e144304839f515e2c324763615f71020", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE0NTg4MTZlMTQ0MzA0ODM5ZjUxNWUyYzMyNDc2MzYxNWY3MTAyMA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2006-02-15T09:34:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:34:21Z"}, "message": "a-tiboio.adb, [...]: New files.\n\n2006-02-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-tiboio.adb, a-tiboio.ads, a-wwboio.adb,\n\ta-wwboio.ads, a-zzboio.adb, a-zzboio.ads:  New files.\n\n\t* impunit.adb, Makefile.rtl: Added new Ada 2005 units.\n\nFrom-SVN: r111041", "tree": {"sha": "07fea6d78eec6306b0ae738e2edc259ec50a550b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07fea6d78eec6306b0ae738e2edc259ec50a550b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1458816e144304839f515e2c324763615f71020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1458816e144304839f515e2c324763615f71020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1458816e144304839f515e2c324763615f71020", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1458816e144304839f515e2c324763615f71020/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31d7a8bd3d322870543d960e7f8e7b909d7e4950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d7a8bd3d322870543d960e7f8e7b909d7e4950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d7a8bd3d322870543d960e7f8e7b909d7e4950"}], "stats": {"total": 732, "additions": 731, "deletions": 1}, "files": [{"sha": "063fb1e1a5dbec0deb7c9335511a30396a5b3d5d", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -32,6 +32,7 @@ GNATRTL_TASKING_OBJS= \\\n   a-intnam$(objext) \\\n   a-reatim$(objext) \\\n   a-retide$(objext) \\\n+  a-rttiev$(objext) \\\n   a-sytaco$(objext) \\\n   a-tasatt$(objext) \\\n   a-taside$(objext) \\\n@@ -108,6 +109,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-coormu$(objext) \\\n   a-coorse$(objext) \\\n   a-coprnu$(objext) \\\n+  a-coteio$(objext) \\\n   a-crbltr$(objext) \\\n   a-crbtgk$(objext) \\\n   a-crbtgo$(objext) \\\n@@ -120,6 +122,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-dirval$(objext) \\\n   a-einuoc$(objext) \\\n   a-elchha$(objext) \\\n+  a-envvar$(objext) \\\n   a-except$(objext) \\\n   a-exctra$(objext) \\\n   a-filico$(objext) \\\n@@ -129,7 +132,9 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-inteio$(objext) \\\n   a-ioexce$(objext) \\\n   a-iwteio$(objext) \\\n+  a-lcteio$(objext) \\\n   a-lfteio$(objext) \\\n+  a-llctio$(objext) \\\n   a-lfwtio$(objext) \\\n   a-lfztio$(objext) \\\n   a-liteio$(objext) \\\n@@ -161,6 +166,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-numaux$(objext) \\\n   a-numeri$(objext) \\\n   a-rbtgso$(objext) \\\n+  a-scteio$(objext) \\\n   a-secain$(objext) \\\n   a-sequio$(objext) \\\n   a-sfteio$(objext) \\\n@@ -176,6 +182,8 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-ssitio$(objext) \\\n   a-ssiwti$(objext) \\\n   a-ssizti$(objext) \\\n+  a-stboha$(objext) \\\n+  a-stfiha$(objext) \\\n   a-stmaco$(objext) \\\n   a-storio$(objext) \\\n   a-strbou$(objext) \\\n@@ -205,10 +213,14 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-stzsup$(objext) \\\n   a-stzunb$(objext) \\\n   a-suteio$(objext) \\\n+  a-swbwha$(objext) \\\n+  a-swfwha$(objext) \\\n   a-swmwco$(objext) \\\n   a-swunau$(objext) \\\n   a-swuwha$(objext) \\\n   a-swuwti$(objext) \\\n+  a-szbzha$(objext) \\\n+  a-szfzha$(objext) \\\n   a-szmzco$(objext) \\\n   a-szunau$(objext) \\\n   a-szuzha$(objext) \\\n@@ -217,6 +229,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-tgdico$(objext) \\\n   a-teioed$(objext) \\\n   a-textio$(objext) \\\n+  a-tiboio$(objext) \\\n   a-ticoau$(objext) \\\n   a-ticoio$(objext) \\\n   a-tideau$(objext) \\\n@@ -256,6 +269,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-wtmoau$(objext) \\\n   a-wtmoio$(objext) \\\n   a-wttest$(objext) \\\n+  a-wwboio$(objext) \\\n   a-wwunio$(objext) \\\n   a-zchara$(objext) \\\n   a-zchuni$(objext) \\\n@@ -277,6 +291,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-ztmoau$(objext) \\\n   a-ztmoio$(objext) \\\n   a-zttest$(objext) \\\n+  a-zzboio$(objext) \\\n   a-zzunio$(objext) \\\n   ada$(objext) \\\n   calendar$(objext) \\"}, {"sha": "a7b91be91484c49a79c11297013ab96565821b9b", "filename": "gcc/ada/a-tiboio.adb", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-tiboio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-tiboio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiboio.adb?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -0,0 +1,181 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--               A D A . T E X T _ I O . B O U N D E D _ I O                --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Text_IO; use Ada.Text_IO;\n+with Ada.Unchecked_Deallocation;\n+\n+package body Ada.Text_IO.Bounded_IO is\n+\n+   type String_Access is access all String;\n+\n+   procedure Free (SA : in out String_Access);\n+   --  Perform an unchecked deallocation of a non-null string\n+\n+   ----------\n+   -- Free --\n+   ----------\n+\n+   procedure Free (SA : in out String_Access) is\n+      Null_String : constant String := \"\";\n+\n+      procedure Deallocate is\n+        new Ada.Unchecked_Deallocation (String, String_Access);\n+\n+   begin\n+      --  Do not try to free statically allocated null string\n+\n+      if SA.all /= Null_String then\n+         Deallocate (SA);\n+      end if;\n+   end Free;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   function Get_Line return Bounded.Bounded_String is\n+   begin\n+      return Bounded.To_Bounded_String (Get_Line);\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   function Get_Line\n+     (File : File_Type) return Bounded.Bounded_String\n+   is\n+   begin\n+      return Bounded.To_Bounded_String (Get_Line (File));\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   procedure Get_Line\n+     (Item : out Bounded.Bounded_String)\n+   is\n+      Buffer : String (1 .. 1000);\n+      Last   : Natural;\n+      Str1   : String_Access;\n+      Str2   : String_Access;\n+\n+   begin\n+      Get_Line (Buffer, Last);\n+      Str1 := new String'(Buffer (1 .. Last));\n+\n+      while Last = Buffer'Last loop\n+         Get_Line (Buffer, Last);\n+         Str2 := new String'(Str1.all & Buffer (1 .. Last));\n+         Free (Str1);\n+         Str1 := Str2;\n+      end loop;\n+\n+      Item := Bounded.To_Bounded_String (Str1.all);\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   procedure Get_Line\n+     (File : File_Type;\n+      Item : out Bounded.Bounded_String)\n+   is\n+      Buffer : String (1 .. 1000);\n+      Last   : Natural;\n+      Str1   : String_Access;\n+      Str2   : String_Access;\n+\n+   begin\n+      Get_Line (File, Buffer, Last);\n+      Str1 := new String'(Buffer (1 .. Last));\n+\n+      while Last = Buffer'Last loop\n+         Get_Line (File, Buffer, Last);\n+         Str2 := new String'(Str1.all & Buffer (1 .. Last));\n+         Free (Str1);\n+         Str1 := Str2;\n+      end loop;\n+\n+      Item := Bounded.To_Bounded_String (Str1.all);\n+   end Get_Line;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put\n+     (Item : Bounded.Bounded_String)\n+   is\n+   begin\n+      Put (Bounded.To_String (Item));\n+   end Put;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put\n+     (File : File_Type;\n+      Item : Bounded.Bounded_String)\n+   is\n+   begin\n+      Put (File, Bounded.To_String (Item));\n+   end Put;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line\n+     (Item : Bounded.Bounded_String)\n+   is\n+   begin\n+      Put_Line (Bounded.To_String (Item));\n+   end Put_Line;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line\n+     (File : File_Type;\n+      Item : Bounded.Bounded_String)\n+   is\n+   begin\n+      Put_Line (File, Bounded.To_String (Item));\n+   end Put_Line;\n+\n+end Ada.Text_IO.Bounded_IO;"}, {"sha": "4f23c7ed92cee433fa35d169e06c13cfb7a6954b", "filename": "gcc/ada/a-tiboio.ads", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-tiboio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-tiboio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiboio.ads?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -0,0 +1,52 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--               A D A . T E X T _ I O . B O U N D E D _ I O                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is adapted from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Strings.Bounded;\n+\n+generic\n+   with package Bounded is\n+     new Ada.Strings.Bounded.Generic_Bounded_Length (<>);\n+\n+package Ada.Text_IO.Bounded_IO is\n+\n+   function Get_Line return Bounded.Bounded_String;\n+\n+   function Get_Line\n+     (File : File_Type) return Bounded.Bounded_String;\n+\n+   procedure Get_Line\n+     (Item : out Bounded.Bounded_String);\n+\n+   procedure Get_Line\n+     (File : File_Type;\n+      Item : out Bounded.Bounded_String);\n+\n+   procedure Put\n+     (Item : Bounded.Bounded_String);\n+\n+   procedure Put\n+     (File : File_Type;\n+      Item : Bounded.Bounded_String);\n+\n+   procedure Put_Line\n+     (Item : Bounded.Bounded_String);\n+\n+   procedure Put_Line\n+     (File : File_Type;\n+      Item : Bounded.Bounded_String);\n+\n+end Ada.Text_IO.Bounded_IO;"}, {"sha": "2d3e20f5e89323692a7228f636629def4fa284a4", "filename": "gcc/ada/a-wwboio.adb", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-wwboio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-wwboio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wwboio.adb?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -0,0 +1,181 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--     A D A . W I D E _ T E X T _ I O . W I D E _ B O U N D E D _ I O      --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Wide_Text_IO; use Ada.Wide_Text_IO;\n+with Ada.Unchecked_Deallocation;\n+\n+package body Ada.Wide_Text_IO.Wide_Bounded_IO is\n+\n+   type Wide_String_Access is access all Wide_String;\n+\n+   procedure Free (WSA : in out Wide_String_Access);\n+   --  Perform an unchecked deallocation of a non-null string\n+\n+   ----------\n+   -- Free --\n+   ----------\n+\n+   procedure Free (WSA : in out Wide_String_Access) is\n+      Null_Wide_String : constant Wide_String := \"\";\n+\n+      procedure Deallocate is\n+        new Ada.Unchecked_Deallocation (Wide_String, Wide_String_Access);\n+\n+   begin\n+      --  Do not try to free statically allocated null string\n+\n+      if WSA.all /= Null_Wide_String then\n+         Deallocate (WSA);\n+      end if;\n+   end Free;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   function Get_Line return Wide_Bounded.Bounded_Wide_String is\n+   begin\n+      return Wide_Bounded.To_Bounded_Wide_String (Get_Line);\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   function Get_Line\n+     (File : File_Type) return Wide_Bounded.Bounded_Wide_String\n+   is\n+   begin\n+      return Wide_Bounded.To_Bounded_Wide_String (Get_Line (File));\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   procedure Get_Line\n+     (Item : out Wide_Bounded.Bounded_Wide_String)\n+   is\n+      Buffer : Wide_String (1 .. 1000);\n+      Last   : Natural;\n+      Str1   : Wide_String_Access;\n+      Str2   : Wide_String_Access;\n+\n+   begin\n+      Get_Line (Buffer, Last);\n+      Str1 := new Wide_String'(Buffer (1 .. Last));\n+\n+      while Last = Buffer'Last loop\n+         Get_Line (Buffer, Last);\n+         Str2 := new Wide_String'(Str1.all & Buffer (1 .. Last));\n+         Free (Str1);\n+         Str1 := Str2;\n+      end loop;\n+\n+      Item := Wide_Bounded.To_Bounded_Wide_String (Str1.all);\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   procedure Get_Line\n+     (File : File_Type;\n+      Item : out Wide_Bounded.Bounded_Wide_String)\n+   is\n+      Buffer : Wide_String (1 .. 1000);\n+      Last   : Natural;\n+      Str1   : Wide_String_Access;\n+      Str2   : Wide_String_Access;\n+\n+   begin\n+      Get_Line (File, Buffer, Last);\n+      Str1 := new Wide_String'(Buffer (1 .. Last));\n+\n+      while Last = Buffer'Last loop\n+         Get_Line (File, Buffer, Last);\n+         Str2 := new Wide_String'(Str1.all & Buffer (1 .. Last));\n+         Free (Str1);\n+         Str1 := Str2;\n+      end loop;\n+\n+      Item := Wide_Bounded.To_Bounded_Wide_String (Str1.all);\n+   end Get_Line;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put\n+     (Item : Wide_Bounded.Bounded_Wide_String)\n+   is\n+   begin\n+      Put (Wide_Bounded.To_Wide_String (Item));\n+   end Put;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put\n+     (File : File_Type;\n+      Item : Wide_Bounded.Bounded_Wide_String)\n+   is\n+   begin\n+      Put (File, Wide_Bounded.To_Wide_String (Item));\n+   end Put;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line\n+     (Item : Wide_Bounded.Bounded_Wide_String)\n+   is\n+   begin\n+      Put_Line (Wide_Bounded.To_Wide_String (Item));\n+   end Put_Line;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line\n+     (File : File_Type;\n+      Item : Wide_Bounded.Bounded_Wide_String)\n+   is\n+   begin\n+      Put_Line (File, Wide_Bounded.To_Wide_String (Item));\n+   end Put_Line;\n+\n+end Ada.Wide_Text_IO.Wide_Bounded_IO;"}, {"sha": "634a265facf724cc191ee1f87561e047260a69c8", "filename": "gcc/ada/a-wwboio.ads", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-wwboio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-wwboio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wwboio.ads?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -0,0 +1,52 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--     A D A . W I D E _ T E X T _ I O . W I D E _ B O U N D E D _ I O      --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is adapted from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Strings.Wide_Bounded;\n+\n+generic\n+   with package Wide_Bounded is\n+     new Ada.Strings.Wide_Bounded.Generic_Bounded_Length (<>);\n+\n+package Ada.Wide_Text_IO.Wide_Bounded_IO is\n+\n+   function Get_Line return Wide_Bounded.Bounded_Wide_String;\n+\n+   function Get_Line\n+     (File : File_Type) return Wide_Bounded.Bounded_Wide_String;\n+\n+   procedure Get_Line\n+     (Item : out Wide_Bounded.Bounded_Wide_String);\n+\n+   procedure Get_Line\n+     (File : File_Type;\n+      Item : out Wide_Bounded.Bounded_Wide_String);\n+\n+   procedure Put\n+     (Item : Wide_Bounded.Bounded_Wide_String);\n+\n+   procedure Put\n+     (File : File_Type;\n+      Item : Wide_Bounded.Bounded_Wide_String);\n+\n+   procedure Put_Line\n+     (Item : Wide_Bounded.Bounded_Wide_String);\n+\n+   procedure Put_Line\n+     (File : File_Type;\n+      Item : Wide_Bounded.Bounded_Wide_String);\n+\n+end Ada.Wide_Text_IO.Wide_Bounded_IO;"}, {"sha": "e10fda6d90207bab29a407ee9f6fd53966494368", "filename": "gcc/ada/a-zzboio.adb", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-zzboio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-zzboio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zzboio.adb?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -0,0 +1,182 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                 ADA.WIDE_WIDE_TEXT_IO.WIDE_WIDE_BOUNDED_IO               --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Wide_Wide_Text_IO; use Ada.Wide_Wide_Text_IO;\n+with Ada.Unchecked_Deallocation;\n+\n+package body Ada.Wide_Wide_Text_IO.Wide_Wide_Bounded_IO is\n+\n+   type Wide_Wide_String_Access is access all Wide_Wide_String;\n+\n+   procedure Free (WWSA : in out Wide_Wide_String_Access);\n+   --  Perform an unchecked deallocation of a non-null string\n+\n+   ----------\n+   -- Free --\n+   ----------\n+\n+   procedure Free (WWSA : in out Wide_Wide_String_Access) is\n+      Null_Wide_Wide_String : constant Wide_Wide_String := \"\";\n+\n+      procedure Deallocate is\n+        new Ada.Unchecked_Deallocation (\n+          Wide_Wide_String, Wide_Wide_String_Access);\n+\n+   begin\n+      --  Do not try to free statically allocated null string\n+\n+      if WWSA.all /= Null_Wide_Wide_String then\n+         Deallocate (WWSA);\n+      end if;\n+   end Free;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   function Get_Line return Wide_Wide_Bounded.Bounded_Wide_Wide_String is\n+   begin\n+      return Wide_Wide_Bounded.To_Bounded_Wide_Wide_String (Get_Line);\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   function Get_Line\n+     (File : File_Type) return Wide_Wide_Bounded.Bounded_Wide_Wide_String\n+   is\n+   begin\n+      return Wide_Wide_Bounded.To_Bounded_Wide_Wide_String (Get_Line (File));\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   procedure Get_Line\n+     (Item : out Wide_Wide_Bounded.Bounded_Wide_Wide_String)\n+   is\n+      Buffer : Wide_Wide_String (1 .. 1000);\n+      Last   : Natural;\n+      Str1   : Wide_Wide_String_Access;\n+      Str2   : Wide_Wide_String_Access;\n+\n+   begin\n+      Get_Line (Buffer, Last);\n+      Str1 := new Wide_Wide_String'(Buffer (1 .. Last));\n+\n+      while Last = Buffer'Last loop\n+         Get_Line (Buffer, Last);\n+         Str2 := new Wide_Wide_String'(Str1.all & Buffer (1 .. Last));\n+         Free (Str1);\n+         Str1 := Str2;\n+      end loop;\n+\n+      Item := Wide_Wide_Bounded.To_Bounded_Wide_Wide_String (Str1.all);\n+   end Get_Line;\n+\n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n+   procedure Get_Line\n+     (File : File_Type;\n+      Item : out Wide_Wide_Bounded.Bounded_Wide_Wide_String)\n+   is\n+      Buffer : Wide_Wide_String (1 .. 1000);\n+      Last   : Natural;\n+      Str1   : Wide_Wide_String_Access;\n+      Str2   : Wide_Wide_String_Access;\n+\n+   begin\n+      Get_Line (File, Buffer, Last);\n+      Str1 := new Wide_Wide_String'(Buffer (1 .. Last));\n+\n+      while Last = Buffer'Last loop\n+         Get_Line (File, Buffer, Last);\n+         Str2 := new Wide_Wide_String'(Str1.all & Buffer (1 .. Last));\n+         Free (Str1);\n+         Str1 := Str2;\n+      end loop;\n+\n+      Item := Wide_Wide_Bounded.To_Bounded_Wide_Wide_String (Str1.all);\n+   end Get_Line;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put\n+     (Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String)\n+   is\n+   begin\n+      Put (Wide_Wide_Bounded.To_Wide_Wide_String (Item));\n+   end Put;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put\n+     (File : File_Type;\n+      Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String)\n+   is\n+   begin\n+      Put (File, Wide_Wide_Bounded.To_Wide_Wide_String (Item));\n+   end Put;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line\n+     (Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String)\n+   is\n+   begin\n+      Put_Line (Wide_Wide_Bounded.To_Wide_Wide_String (Item));\n+   end Put_Line;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line\n+     (File : File_Type;\n+      Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String)\n+   is\n+   begin\n+      Put_Line (File, Wide_Wide_Bounded.To_Wide_Wide_String (Item));\n+   end Put_Line;\n+\n+end Ada.Wide_Wide_Text_IO.Wide_Wide_Bounded_IO;"}, {"sha": "83b4ed9f10fdb3a9a38329b1fb061f18527ef6b7", "filename": "gcc/ada/a-zzboio.ads", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-zzboio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fa-zzboio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zzboio.ads?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -0,0 +1,52 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                 ADA.WIDE_WIDE_TEXT_IO.WIDE_WIDE_BOUNDED_IO               --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is adapted from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Strings.Wide_Wide_Bounded;\n+\n+generic\n+   with package Wide_Wide_Bounded is\n+     new Ada.Strings.Wide_Wide_Bounded.Generic_Bounded_Length (<>);\n+\n+package Ada.Wide_Wide_Text_IO.Wide_Wide_Bounded_IO is\n+\n+   function Get_Line return Wide_Wide_Bounded.Bounded_Wide_Wide_String;\n+\n+   function Get_Line\n+     (File : File_Type) return Wide_Wide_Bounded.Bounded_Wide_Wide_String;\n+\n+   procedure Get_Line\n+     (Item : out Wide_Wide_Bounded.Bounded_Wide_Wide_String);\n+\n+   procedure Get_Line\n+     (File : File_Type;\n+      Item : out Wide_Wide_Bounded.Bounded_Wide_Wide_String);\n+\n+   procedure Put\n+     (Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String);\n+\n+   procedure Put\n+     (File : File_Type;\n+      Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String);\n+\n+   procedure Put_Line\n+     (Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String);\n+\n+   procedure Put_Line\n+     (File : File_Type;\n+      Item : Wide_Wide_Bounded.Bounded_Wide_Wide_String);\n+\n+end Ada.Wide_Wide_Text_IO.Wide_Wide_Bounded_IO;"}, {"sha": "a720a2866f198037a0340db2705e7fb511e0eb43", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1458816e144304839f515e2c324763615f71020/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=e1458816e144304839f515e2c324763615f71020", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2000-2005, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2000-2006, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -351,10 +351,15 @@ package body Impunit is\n      \"a-convec\",    -- Ada.Containers.Vectors\n      \"a-coorma\",    -- Ada.Containers.Ordered_Maps\n      \"a-coorse\",    -- Ada.Containers.Ordered_Sets\n+     \"a-coteio\",    -- Ada.Complex_Text_IO\n      \"a-direct\",    -- Ada.Directories\n+     \"a-envvar\",    -- Ada.Environment_Variables\n+     \"a-rttiev\",    -- Ada.Real_Time.Timing_Events\n      \"a-secain\",    -- Ada.Strings.Equal_Case_Insensitive\n      \"a-shcain\",    -- Ada.Strings.Hash_Case_Insensitive\n      \"a-slcain\",    -- Ada.Strings.Less_Case_Insensitive\n+     \"a-stboha\",    -- Ada.Strings.Bounded.Hash\n+     \"a-stfiha\",    -- Ada.Strings.Fixed.Hash\n      \"a-strhas\",    -- Ada.Strings.Hash\n      \"a-stunha\",    -- Ada.Strings.Unbounded.Hash\n      \"a-stwiha\",    -- Ada.Strings.Wide_Hash\n@@ -363,27 +368,37 @@ package body Impunit is\n      \"a-stzhas\",    -- Ada.Strings.Wide_Wide_Hash\n      \"a-stzmap\",    -- Ada.Strings.Wide_Wide_Maps\n      \"a-stzunb\",    -- Ada.Strings.Wide_Wide_Unbounded\n+     \"a-swbwha\",    -- Ada.Strings.Wide_Bounded.Wide_Hash\n+     \"a-swfwha\",    -- Ada.Strings.Wide_Fixed.Wide_Hash\n      \"a-swuwha\",    -- Ada.Strings.Wide_Unbounded.Wide_Hash\n+     \"a-szbzha\",    -- Ada.Strings.Wide_Wide_Bounded.Wide_Wide_Hash\n+     \"a-szfzha\",    -- Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash\n      \"a-szmzco\",    -- Ada.Strings.Wide_Wide_Maps.Wide_Wide_Constants\n      \"a-szuzha\",    -- Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Hash\n      \"a-taster\",    -- Ada.Task_Termination\n      \"a-tgdico\",    -- Ada.Tags.Generic_Dispatching_Constructor\n+     \"a-tiboio\",    -- Ada.Text_IO.Bounded_IO\n      \"a-tiunio\",    -- Ada.Text_IO.Unbounded_IO\n      \"a-wichun\",    -- Ada.Wide_Characters.Unicode\n+     \"a-wwboio\",    -- Ada.Wide_Text_IO.Wide_Bounded_IO\n      \"a-wwunio\",    -- Ada.Wide_Text_IO.Wide_Unbounded_IO\n      \"a-zchara\",    -- Ada.Wide_Wide_Characters\n      \"a-zttest\",    -- Ada.Wide_Wide_Text_IO.Text_Streams\n      \"a-ztexio\",    -- Ada.Wide_Wide_Text_IO\n+     \"a-zzboio\",    -- Ada.Wide_Wide_Text_IO.Wide_Wide_Bounded_IO\n      \"a-zzunio\",    -- Ada.Wide_Wide_Text_IO.Wide_Wide_Unbounded_IO\n \n    ------------------------------------------------------\n    -- RM Required Additions to Ada 2005 for GNAT Types --\n    ------------------------------------------------------\n \n+     \"a-lcteio\",    -- Ada.Long_Complex_Text_IO\n      \"a-lfztio\",    -- Ada.Long_Float_Wide_Wide_Text_IO\n      \"a-liztio\",    -- Ada.Long_Integer_Wide_Wide_Text_IO\n+     \"a-llctio\",    -- Ada.Long_Long_Complex_Text_IO\n      \"a-llfzti\",    -- Ada.Long_Long_Float_Wide_Wide_Text_IO\n      \"a-llizti\",    -- Ada.Long_Long_Integer_Wide_Wide_Text_IO\n+     \"a-scteio\",    -- Ada.Short_Complex_Text_IO\n      \"a-sfztio\",    -- Ada.Short_Float_Wide_Wide_Text_IO\n      \"a-siztio\",    -- Ada.Short_Integer_Wide_Wide_Text_IO\n      \"a-ssizti\",    -- Ada.Short_Short_Integer_Wide_Wide_Text_IO"}]}