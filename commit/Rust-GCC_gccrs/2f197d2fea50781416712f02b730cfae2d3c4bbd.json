{"sha": "2f197d2fea50781416712f02b730cfae2d3c4bbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxOTdkMmZlYTUwNzgxNDE2NzEyZjAyYjczMGNmYWUyZDNjNGJiZA==", "commit": {"author": {"name": "Mark Elbrecht", "email": "snowball3@usa.net", "date": "1999-01-06T02:25:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-06T02:25:57Z"}, "message": "configure.in (pc-msdosdjgpp): Set x_make to x-go32.\n\n        * configure.in (pc-msdosdjgpp): Set x_make to x-go32.\n        * configure: Rebuilt.\n        * i386/xm-go32.h: Define LIBSTDCXX.\n        * i386/x-go32: New.\n        * i386/go32.h (MD_EXEC_PREFIX): Define.\n        (FILE_NAME_ABSOLUTE_P): Define.\n        (LINK_COMMAND_SPEC): Define.\n\nFrom-SVN: r24510", "tree": {"sha": "1b051f16c7e6c0269a3cc9bbfcbf45a8d3747b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b051f16c7e6c0269a3cc9bbfcbf45a8d3747b41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f197d2fea50781416712f02b730cfae2d3c4bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f197d2fea50781416712f02b730cfae2d3c4bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f197d2fea50781416712f02b730cfae2d3c4bbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f197d2fea50781416712f02b730cfae2d3c4bbd/comments", "author": null, "committer": null, "parents": [{"sha": "18cd4dedd4a40d06a28b4358e9a6087930274c2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18cd4dedd4a40d06a28b4358e9a6087930274c2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18cd4dedd4a40d06a28b4358e9a6087930274c2d"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "4f38848c0da2d13a2c4bc97e5a0ad2d1b6be18e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f197d2fea50781416712f02b730cfae2d3c4bbd", "patch": "@@ -1,3 +1,13 @@\n+Wed Jan  6 03:18:53 1999  Mark Elbrecht  <snowball3@usa.net.\n+\n+\t* configure.in (pc-msdosdjgpp): Set x_make to x-go32.\n+\t* configure: Rebuilt.\n+\t* i386/xm-go32.h: Define LIBSTDCXX.\n+\t* i386/x-go32: New.\n+\t* i386/go32.h (MD_EXEC_PREFIX): Define.\n+\t(FILE_NAME_ABSOLUTE_P): Define.\n+\t(LINK_COMMAND_SPEC): Define.\n+\n Wed Jan  6 02:23:36 1999  \"Charles M. Hannum\" <root@ihack.net>\n \n \t* expr.c (store_expr): If the lhs is a memory location pointed"}, {"sha": "1bca1b255f9cf3940117005a386019f8e3b27ea4", "filename": "gcc/config/i386/go32.h", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfig%2Fi386%2Fgo32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfig%2Fi386%2Fgo32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgo32.h?ref=2f197d2fea50781416712f02b730cfae2d3c4bbd", "patch": "@@ -14,12 +14,43 @@\n \n #include \"i386/gas.h\"\n \n+/* Search for as.exe and ld.exe in DJGPP's binary directory. */ \n+#define MD_EXEC_PREFIX \"$DJDIR/bin/\"\n+\n+/* Correctly handle absolute filename detection in cp/xref.c */\n+#define FILE_NAME_ABSOLUTE_P(NAME) \\\n+        (((NAME)[0] == '/') || ((NAME)[0] == '\\\\') || \\\n+        (((NAME)[0] >= 'A') && ((NAME)[0] <= 'z') && ((NAME)[1] == ':')))\n+\n #ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n #endif\n #define CPP_PREDEFINES \"-Dunix -Di386 -DGO32 -DMSDOS \\\n   -Asystem(unix) -Asystem(msdos) -Acpu(i386) -Amachine(i386)\"\n \n+/* We need to override link_command_spec in gcc.c so support -Tdjgpp.djl.\n+   This cannot be done in LINK_SPECS as that LINK_SPECS is processed\n+   before library search directories are known by the linker.\n+   This avoids problems when specs file is not available. An alternate way,\n+   suggested by Robert Hoehne, is to use SUBTARGET_EXTRA_SPECS instead.\n+*/ \n+\n+#undef LINK_COMMAND_SPEC\n+#define LINK_COMMAND_SPEC \\\n+\"%{!fsyntax-only: \\\n+%{!c:%{!M:%{!MM:%{!E:%{!S:%(linker) %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n+\\t%{r} %{s} %{t} %{u*} %{x} %{z} %{Z}\\\n+\\t%{!A:%{!nostdlib:%{!nostartfiles:%S}}}\\\n+\\t%{static:} %{L*} %D %o\\\n+\\t%{!nostdlib:%{!nodefaultlibs:%G %L %G}}\\\n+\\t%{!A:%{!nostdlib:%{!nostartfiles:%E}}}\\\n+\\t-Tdjgpp.djl %{T*}}}}}}}\\n\\\n+%{!c:%{!M:%{!MM:%{!E:%{!S:stubify %{v} %{o*:%*} %{!o*:a.out} }}}}}\"\n+ \n+/* Make sure that gcc will not look for .h files in /usr/local/include \n+   unless user explicitly requests it.  */\n+#undef LOCAL_INCLUDE_DIR\n+\n #undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_ctor, in_dtor\n "}, {"sha": "89f31ff5008282f2ac060193730ecadbeb7137a8", "filename": "gcc/config/i386/x-go32", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfig%2Fi386%2Fx-go32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfig%2Fi386%2Fx-go32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-go32?ref=2f197d2fea50781416712f02b730cfae2d3c4bbd", "patch": "@@ -0,0 +1,24 @@\n+# translate the version string, so it can be used on DJGPP, where only\n+# one dot in filename is allowed\n+\n+# to avoid recursion when redefining $(version)\n+_version:=$(version)\n+__version=$(subst ., ,$(_version))\n+version=$(word 1,$(__version))$(word 2,$(__version)).$(word 3,$(__version))\n+\n+SYSTEM_HEADER_DIR=$(DJDIR)/include\n+X_CPPFLAGS=-DSTANDARD_INCLUDE_DIR=\\\"\\$$DJDIR/include\\\" \\\n+\t   -DSTANDARD_INCLUDE_COMPONENT=\\\"\\\"\n+\n+# when building a native compiler for DJGPP, make the target_alias\n+# a shorter name, since otherwise it will produce some problems, when\n+# using the same gcc once with long filenames and once with short (8+3)\n+# filenames\n+ifeq ($(findstring -pc-msdosdjgpp,$(target_alias)),-pc-msdosdjgpp)\n+target_alias=djgpp\n+endif\n+\n+# on DJGPP the 'ln -s' does not work correctly\n+LN = cp -p\n+LN_S = cp -p\n+"}, {"sha": "f171a757821ce79bb492c040f3969126dfe130f2", "filename": "gcc/config/i386/xm-go32.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfig%2Fi386%2Fxm-go32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfig%2Fi386%2Fxm-go32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-go32.h?ref=2f197d2fea50781416712f02b730cfae2d3c4bbd", "patch": "@@ -31,3 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #define DIR_SEPARATOR '\\\\'\n \n #define NO_SYS_SIGLIST 1\n+\n+#define LIBSTDCXX \"-lstdcxx\"\n+"}, {"sha": "508af5e7aeafeb00bad6dceae9e788debc68f9dd", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f197d2fea50781416712f02b730cfae2d3c4bbd/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=2f197d2fea50781416712f02b730cfae2d3c4bbd", "patch": "@@ -1208,6 +1208,7 @@ changequote([,])dnl\n \t\txm_file=i386/xm-go32.h\n \t\ttm_file=i386/go32.h\n \t\ttmake_file=i386/t-go32\n+                xmake_file=i386/x-go32\n \t\tgnu_ld=yes\n \t\tgas=yes\n \t\texeext=.exe"}]}