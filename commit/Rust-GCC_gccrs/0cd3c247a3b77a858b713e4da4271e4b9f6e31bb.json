{"sha": "0cd3c247a3b77a858b713e4da4271e4b9f6e31bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNkM2MyNDdhM2I3N2E4NThiNzEzZTRkYTQyNzFlNGI5ZjZlMzFiYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-30T23:06:23Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-30T23:06:23Z"}, "message": "(va_end): #undef before the declaration.\n\n(va_arg): Alternative definition for big-endian machines.\n\nFrom-SVN: r2820", "tree": {"sha": "d8113c200c0c3ea1ea5d2b1d7ab462febfaabc2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8113c200c0c3ea1ea5d2b1d7ab462febfaabc2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb/comments", "author": null, "committer": null, "parents": [{"sha": "355b20971a5726593583574c6f17596f30182087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355b20971a5726593583574c6f17596f30182087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355b20971a5726593583574c6f17596f30182087"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "2b36068555976abd07bf50ef1b735c4a12ad4410", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=0cd3c247a3b77a858b713e4da4271e4b9f6e31bb", "patch": "@@ -62,14 +62,26 @@ typedef void *__gnuc_va_list;\n #define va_start(AP, LASTARG) \t\t\t\t\t\t\\\n  (AP = ((__gnuc_va_list) __builtin_next_arg ()))\n \n+#undef va_end\n void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n #define va_end(AP)\n \n /* We cast to void * and then to TYPE * because this avoids\n    a warning about increasing the alignment requirement.  */\n+\n+#if defined (__arm__) || defined (__i386__) || defined (__ns32000__) || defined (__vax__)\n+/* This is for little-endian machines; small args are padded upward.  */\n #define va_arg(AP, TYPE)\t\t\t\t\t\t\\\n  (AP = (__gnuc_va_list) ((char *) (AP) + __va_rounded_size (TYPE)),\t\\\n   *((TYPE *) (void *) ((char *) (AP) - __va_rounded_size (TYPE))))\n+#else /* big-endian */\n+/* This is for big-endian machines; small args are padded downward.  */\n+#define va_arg(AP, TYPE)\t\t\t\t\t\t\\\n+ (AP = (__gnuc_va_list) ((char *) (AP) + __va_rounded_size (TYPE)),\t\\\n+  *((TYPE *) (void *) ((char *) (AP) - ((sizeof (TYPE) < 4\t\t\\\n+\t\t\t\t\t ? sizeof (TYPE)\t\t\\\n+\t\t\t\t\t : __va_rounded_size (TYPE))))))\n+#endif /* big-endian */\n #endif /* _STDARG_H */\n \n #endif /* not alpha */"}]}