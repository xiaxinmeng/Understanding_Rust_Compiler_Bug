{"sha": "2e48874fee767eb93625681f09067852a41540c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU0ODg3NGZlZTc2N2ViOTM2MjU2ODFmMDkwNjc4NTJhNDE1NDBjOQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2005-07-21T11:53:00Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-07-21T11:53:00Z"}, "message": "reg-stack.c: Fix comment typo(s).\n\n\t* reg-stack.c: Fix comment typo(s).\n\t* tree-ssa-operands.c: Likewise.\n\t* tree-vectorizer: Likewise.\n\nFrom-SVN: r102232", "tree": {"sha": "d58c27b9153f5e65b9e113382a81cd3bce6eac2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d58c27b9153f5e65b9e113382a81cd3bce6eac2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e48874fee767eb93625681f09067852a41540c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e48874fee767eb93625681f09067852a41540c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e48874fee767eb93625681f09067852a41540c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e48874fee767eb93625681f09067852a41540c9/comments", "author": null, "committer": null, "parents": [{"sha": "c72a1a86739dc493dceec289da603b8517b46b12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72a1a86739dc493dceec289da603b8517b46b12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c72a1a86739dc493dceec289da603b8517b46b12"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "cda85f3ecb2a48a9f6c31116e532a2f80377ba5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e48874fee767eb93625681f09067852a41540c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e48874fee767eb93625681f09067852a41540c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e48874fee767eb93625681f09067852a41540c9", "patch": "@@ -1,3 +1,9 @@\n+2005-07-21  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* reg-stack.c: Fix comment typo(s).\n+\t* tree-ssa-operands.c: Likewise.\n+\t* tree-vectorizer: Likewise.\n+\n 2005-07-21  Nick Clifton  <nickc@redhat.com>\n \n \t* config/sh/symbian.c: Replace C++ style line comments with C"}, {"sha": "aedd4a5cf3a258160e9a8328614faa937b493875", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e48874fee767eb93625681f09067852a41540c9/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e48874fee767eb93625681f09067852a41540c9/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=2e48874fee767eb93625681f09067852a41540c9", "patch": "@@ -228,7 +228,7 @@ enum emit_where\n static basic_block current_block;\n \n /* In the current_block, whether we're processing the first register\n-   stack or call instruction, i.e. the the regstack is currently the\n+   stack or call instruction, i.e. the regstack is currently the\n    same as BLOCK_INFO(current_block)->stack_in.  */\n static bool starting_stack_p;\n "}, {"sha": "c80ec5d4b6e50e8eab0d329c2cfad1eb170b0222", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e48874fee767eb93625681f09067852a41540c9/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e48874fee767eb93625681f09067852a41540c9/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=2e48874fee767eb93625681f09067852a41540c9", "patch": "@@ -459,10 +459,10 @@ ssa_operand_alloc (unsigned size)\n }\n \n \n-/* Make sure PTR is inn the correct immediate use list.  Since uses are simply\n+/* Make sure PTR is in the correct immediate use list.  Since uses are simply\n    pointers into the stmt TREE, there is no way of telling if anyone has\n    changed what this pointer points to via TREE_OPERANDS (exp, 0) = <...>.\n-   THe contents are different, but the the pointer is still the same.  This\n+   The contents are different, but the pointer is still the same.  This\n    routine will check to make sure PTR is in the correct list, and if it isn't\n    put it in the correct list.  We cannot simply check the previous node \n    because all nodes in the same stmt might have be changed.  */\n@@ -482,7 +482,7 @@ correct_use_link (use_operand_p ptr, tree stmt)\n     {\n       bool stmt_mod = true;\n       /* Find the first element which isn't a SAFE iterator, is in a different\n-\t stmt, and is not a a modified stmt,  That node is in the correct list,\n+\t stmt, and is not a modified stmt.  That node is in the correct list,\n \t see if we are too.  */\n \n       while (stmt_mod)"}, {"sha": "886a8c211369aac34fa353333212ab795e900365", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e48874fee767eb93625681f09067852a41540c9/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e48874fee767eb93625681f09067852a41540c9/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=2e48874fee767eb93625681f09067852a41540c9", "patch": "@@ -1792,7 +1792,7 @@ reduction_code_for_scalar_code (enum tree_code code,\n   \n    such that:\n    1. operation is commutative and associative and it is safe to \n-      change the the order of the computation.\n+      change the order of the computation.\n    2. no uses for a2 in the loop (a2 is used out of the loop)\n    3. no uses of a1 in the loop besides the reduction operation.\n "}]}