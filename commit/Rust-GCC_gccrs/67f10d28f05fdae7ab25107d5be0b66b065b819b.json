{"sha": "67f10d28f05fdae7ab25107d5be0b66b065b819b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmMTBkMjhmMDVmZGFlN2FiMjUxMDdkNWJlMGI2NmIwNjViODE5Yg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-05T00:16:21Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-05T00:16:21Z"}, "message": "Daily bump.", "tree": {"sha": "53e2cddd36e7992df3f1dc02c7bf8d077cd240fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53e2cddd36e7992df3f1dc02c7bf8d077cd240fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67f10d28f05fdae7ab25107d5be0b66b065b819b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f10d28f05fdae7ab25107d5be0b66b065b819b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f10d28f05fdae7ab25107d5be0b66b065b819b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f10d28f05fdae7ab25107d5be0b66b065b819b/comments", "author": null, "committer": null, "parents": [{"sha": "0d737ed2171165ba39ab5647f8a94c588fc9a898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d737ed2171165ba39ab5647f8a94c588fc9a898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d737ed2171165ba39ab5647f8a94c588fc9a898"}], "stats": {"total": 248, "additions": 247, "deletions": 1}, "files": [{"sha": "bb876ca1a221e79bbb240e446e965a7829d24aad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,42 @@\n+2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/93235\n+\t* expmed.c (store_bit_field_using_insv): Return false of xop0 is a\n+\tSUBREG and a SUBREG to op_mode can't be created.\n+\n+2021-03-04  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/99381\n+\t* config/aarch64/aarch64-sve-builtins.cc\n+\t(function_resolver::require_vector_type): Handle error_mark_node.\n+\n+2021-03-04  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* cfgexpand.c (expand_asm_loc): Pass new parameter.\n+\t(expand_asm_stmt): Likewise.\n+\t* config/arm/aarch-common-protos.h (arm_md_asm_adjust): Add new\n+\tparameter.\n+\t* config/arm/aarch-common.c (arm_md_asm_adjust): Likewise.\n+\t* config/arm/arm.c (thumb1_md_asm_adjust): Likewise.\n+\t* config/cris/cris.c (cris_md_asm_adjust): Likewise.\n+\t* config/i386/i386.c (ix86_md_asm_adjust): Likewise.\n+\t* config/mn10300/mn10300.c (mn10300_md_asm_adjust): Likewise.\n+\t* config/nds32/nds32.c (nds32_md_asm_adjust): Likewise.\n+\t* config/pdp11/pdp11.c (pdp11_md_asm_adjust): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_md_asm_adjust): Likewise.\n+\t* config/vax/vax.c (vax_md_asm_adjust): Likewise.\n+\t* config/visium/visium.c (visium_md_asm_adjust): Likewise.\n+\t* doc/tm.texi (md_asm_adjust): Likewise.\n+\t* target.def (md_asm_adjust): Likewise.\n+\n+2021-03-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/97855\n+\t* tree-pretty-print.c: Poison pp_printf.\n+\t(dump_decl_name): Avoid use of pp_printf.\n+\t(dump_block_node): Likewise.\n+\t(dump_generic_node): Likewise.\n+\n 2021-03-04  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/96963"}, {"sha": "36dfe28d7f350990d23be0f89fbcafbe70135bb0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1 +1 @@\n-20210304\n+20210305"}, {"sha": "3c4c00bcfd38f3228ef9fbc3b44d1c4701855b5f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,16 @@\n+2021-03-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* c-pretty-print.c (c_pretty_printer::direct_abstract_declarator):\n+\tHandle ERROR_MARK.\n+\n+2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/99325\n+\t* c-ppoutput.c (print): Change src_line type from int to unsigned.\n+\t(token_streamer::stream) Likewise.\n+\t(maybe_print_line_1): Likewise.  Don't strcmp src_file if src_loc is\n+\tUNKNOWN_LOCATION.\n+\n 2021-03-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/99324"}, {"sha": "1e2f543de23129477dfa8f21b9c68f3ad708482d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,64 @@\n+2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88146\n+\tPR c++/99362\n+\t* cvt.c (convert_to_void): Revert 2019-10-17 changes.  Clarify\n+\tcomment.\n+\n+2021-03-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99170\n+\t* module.cc (class uintset): Delete.\n+\t(typedef attached_map_t): A hash map.\n+\t(attached_table): Use attached_map_t.  Adjust uses ...\n+\t(trees_out::decl_value, trees_in::decl_value): ... here ...\n+\t(trees_out::key_mergeable): ... here ...\n+\t(trees_in::key_mergeable): ... here ...\n+\t(maybe_attach_decl): ... here ...\n+\t(direct_import): ... and here.\n+\n+2021-03-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99170\n+\t* cp-tree.h\n+\t* lex.c (cxx_dup_lang_specific_decl): Adjust for module_attached_p\n+\trename.\n+\t* module.cc (class pending_key): New.\n+\t(default_hash_traits<pending_key>): New specialization.\n+\t(pending_map_t): New typedef.\n+\t(pending_table): Replace old table.\n+\t(trees_out::lang_decl_bools): Adjust.\n+\t(trees_in::lang_decl_bools): Adjust.\n+\t(trees_in::install_entity): Drop pending member and specialization\n+\thandling.\n+\t(find_pending_key): New.\n+\t(depset::hash::fiund_dependencies): Use it.\n+\t(pendset_lazy_load): Delete.\n+\t(module_state::write_cluster): Don't count pendings here.  Bye\n+\tDuff's device-like thing.\n+\t(module_state::write_pendings): Reimplement.\n+\t(module_state::read_pendings): Reimplement.\n+\t(lazy_specializations_p): Delete.\n+\t(module_state::write): Adjust write_pendings call.\n+\t(lazy_load_pendings): New.\n+\t(lazy_load_specializations): Delete.\n+\t(lazy_load_members): Delete.\n+\t(init_modules):\tAdjust.\n+\t* name-lookup.c (maybe_lazily_declare):\tCall lazy_load_pendings\n+\tnot lazy_load_members.\n+\t(note_pending_specializations): Delete.\n+\t(load_pending_specializations): Delete.\n+\t* name-lookup.h\t(BINDING_VECTR_PENDING_SPECIALIZATIONS_P): Delete.\n+\t(BINDING_VECTOR_PENDING_MEMBERS_P): Delete.\n+\t(BINDING_VECTR_PENDING_MEMBERS_P): Delete.\n+\t(note_pending_specializations): Delete.\n+\t(load_pending_specializations): Delete.\n+\t* pt.c (lookup_template_class_1): Call lazy_load_pendings not\n+\tlazy_load_specializations.\n+\t(instantiate_template_class_1): Likewise.\n+\t(instantiate_decl): Call lazy_load_pendings.\n+\t* typeck.c (complete_type): Likewise.\n+\n 2021-03-03  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/99170"}, {"sha": "c5a8fe6a99a2b0e7b82ea245b66c62a320f303a4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,10 @@\n+2021-03-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99355\n+\t* decl.c (gfc_match_old_kind_spec, gfc_match_kind_spec): Avoid\n+\tredoing kind conversions.\n+\t* primary.c (match_real_constant): Likewise.\n+\n 2021-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/99303"}, {"sha": "79daf9ebfaa7a455598ebbe82887a16eab5c5bfb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,97 @@\n+2021-03-04  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* lib/prune.exp: Prune useless output caused by a linker bug.\n+\n+2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/93235\n+\t* gcc.target/aarch64/pr93235.c: New test.\n+\n+2021-03-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/99105\n+\t* gcc.dg/tree-prof/indir-call-prof-malloc.c: Use profile\n+\tcorrection as the wrapped malloc is called one more time\n+\tfrom libgcov.\n+\t* gcc.dg/tree-prof/pr97461.c: Likewise.\n+\n+2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88146\n+\tPR c++/99362\n+\t* g++.dg/cpp2a/nodiscard-constructor.c: Renamed to ...\n+\t* g++.dg/cpp2a/nodiscard-constructor1.C: ... this.  Remove\n+\t-ftrack-macro-expansion=0 from dg-options.  Don't use (?n) in\n+\tdg-warning regexps, instead replace .* with \\[^\\n\\r]*.\n+\t* g++.dg/cpp2a/nodiscard-constructor2.C: New test.\n+\t* g++.dg/cpp2a/nodiscard-reason-only-one.C: Remove\n+\t-ftrack-macro-expansion=0 from dg-options.\n+\t* g++.dg/cpp2a/nodiscard-reason-nonstring.C: Likewise.\n+\t* g++.dg/cpp2a/nodiscard-once.C: Likewise.\n+\n+2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/99325\n+\t* gcc.dg/cpp/line11.c: New test.\n+\t* gcc.dg/cpp/line12.c: New test.\n+\n+2021-03-04  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/99381\n+\t* gcc.target/aarch64/pr99381.c: New test.\n+\n+2021-03-04  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* gcc.target/s390/mul-signed-overflow-1.c: Compile on old\n+\tmachines.\n+\t* gcc.target/s390/mul-signed-overflow-2.c: Likewise.\n+\n+2021-03-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99170\n+\t* g++.dg/modules/pr99170-1_a.H: New.\n+\t* g++.dg/modules/pr99170-1_b.C: New.\n+\t* g++.dg/modules/pr99170-2.h: New.\n+\t* g++.dg/modules/pr99170-2_a.C: New.\n+\t* g++.dg/modules/pr99170-2_b.C: New.\n+\t* g++.dg/modules/pr99170-3_a.H: New.\n+\t* g++.dg/modules/pr99170-3_b.C: New.\n+\t* g++.dg/modules/inst-2_b.C: Adjust scan.\n+\t* g++.dg/modules/inst-4_a.C: Adjust scan.\n+\t* g++.dg/modules/inst-4_b.C: Adjust scan.\n+\t* g++.dg/modules/member-def-1_b.C: Adjust scan.\n+\t* g++.dg/modules/member-def-1_c.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-1_a.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-1_b.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-2_b.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-2_c.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-2_d.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-3_a.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-3_b.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-4_a.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-4_b.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-5_a.C: Adjust scan.\n+\t* g++.dg/modules/tpl-spec-5_b.C: Adjust scan.\n+\n+2021-03-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99355\n+\t* gfortran.dg/real4-10-real8-10.f90: New test.\n+\t* gfortran.dg/real4-10-real8-16.f90: New test.\n+\t* gfortran.dg/real4-10-real8-4.f90: New test.\n+\t* gfortran.dg/real4-10.f90: New test.\n+\t* gfortran.dg/real4-16-real8-10.f90: New test.\n+\t* gfortran.dg/real4-16-real8-16.f90: New test.\n+\t* gfortran.dg/real4-16-real8-4.f90: New test.\n+\t* gfortran.dg/real4-16.f90: New test.\n+\t* gfortran.dg/real4-8-real8-10.f90: New test.\n+\t* gfortran.dg/real4-8-real8-16.f90: New test.\n+\t* gfortran.dg/real4-8-real8-4.f90: New test.\n+\t* gfortran.dg/real4-8.f90: New test.\n+\t* gfortran.dg/real8-10.f90: New test.\n+\t* gfortran.dg/real8-16.f90: New test.\n+\t* gfortran.dg/real8-4.f90: New test.\n+\n 2021-03-04  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.misc-tests/outputs.exp: Enumerate tests."}, {"sha": "79b6b6945e2d1082e7aec15ff24f2665992b27d3", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,18 @@\n+2021-03-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/99105\n+\t* libgcov-driver.c (write_top_counters): Rename to ...\n+\t(write_topn_counters): ... this.\n+\t(write_one_data): Pre-allocate buffer for number of items\n+\tin the corresponding linked lists.\n+\t* libgcov.h (malloc_mmap): New function.\n+\t(allocate_gcov_kvp): Use it.\n+\n+2021-03-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/99385\n+\t* libgcov.h (allocate_gcov_kvp): Call mmap with fd equal to -1.\n+\n 2021-03-03  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/97461"}, {"sha": "e4a51977d94f1c348adcf998b327e5422b27daed", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,11 @@\n+2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Add AC_CHECK_SIZEOF([void *]).\n+\t* plugin/configfrag.ac: Check $ac_cv_sizeof_void_p value instead of\n+\tchecking of -m32 or -mx32 options on the command line.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2021-02-27  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* testsuite/libgomp.c-c++-common/pr96390.c: Require alias"}, {"sha": "de227bac9efa1fb9a16c154804198ab0d1a3c340", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f10d28f05fdae7ab25107d5be0b66b065b819b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f10d28f05fdae7ab25107d5be0b66b065b819b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=67f10d28f05fdae7ab25107d5be0b66b065b819b", "patch": "@@ -1,3 +1,12 @@\n+2021-03-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99382\n+\t* testsuite/20_util/specialized_algorithms/uninitialized_default_n/sizes.cc:\n+\tMake storage larger than required. Verify no write to the last\n+\telement.\n+\t* testsuite/20_util/specialized_algorithms/uninitialized_value_construct_n/sizes.cc:\n+\tLikewise.\n+\n 2021-03-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/abi/post/i386-solaris/baseline_symbols.txt: Regenerate."}]}