{"sha": "2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI0YjNlNWYyMTk5ZjVhYzUzZDgxZTRkZmNhNDI0MmI2ZjU4ZWEyOQ==", "commit": {"author": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1999-03-25T12:04:19Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1999-03-25T12:04:19Z"}, "message": "rtl.texi (RTX_FRAME_RELATED_P): Add documentation.\n\n \nThu Mar 25 14:04:54 EST 1999  Andrew MacLeod  <amacleod@cygnus.com>\n\t* rtl.texi (RTX_FRAME_RELATED_P): Add documentation.\n\t* rtl.h (struct rtx_def): Update comment for frame_related field.\n\t(set_unique_reg_note): Declare prototype.\n\t* dwarf2out.c (dwarf2out_frame_debug_expr): Split out from\n\t'dwarf2out_frame_debug' to handle only expressions, and process\n\tcomponent parts of a PARALLEL expression.\n\t(dwarf2out_frame_debug): Process insns only, and call\n\tnew function 'dwarf2out_frame_debug_expr' for patterns.\n\t* emit-rtl.c (set_unique_reg_note): New function to add a reg note,\n\tbut if there is an existingone, deletes it first.\n\t* expmed.c (expand_mult, expand_divmod): Use set_unique_reg_note.\n\t* optabs.c (add_equal_note, expand_binop): Use set_unique_reg_note.\n\t(emit_no_conflict_block, emit_libcall_block): Use set_unique_reg_note.\n\t(expand_fix):  Use set_unique_reg_note.\n\nFrom-SVN: r25976", "tree": {"sha": "80c14256e85eb7baefb9f2fd2e5234b71c2a42e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80c14256e85eb7baefb9f2fd2e5234b71c2a42e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29/comments", "author": null, "committer": null, "parents": [{"sha": "0a4b90568df24e9e567ab9d1c04c454ae6ab2321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a4b90568df24e9e567ab9d1c04c454ae6ab2321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a4b90568df24e9e567ab9d1c04c454ae6ab2321"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "1b214653b089381353822253beccdc164a782ffc", "filename": "gcc/rtl.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29/gcc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29/gcc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.texi?ref=2b4b3e5f2199f5ac53d81e4dfca4242b6f58ea29", "patch": "@@ -405,6 +405,13 @@ other functions or by aliasing.)  Stored in the\n Nonzero in an insn if it resulted from an in-line function call.\n Stored in the @code{integrated} field and printed as @samp{/i}.\n \n+@findex RTX_FRAME_RELATED_P\n+@item RTX_FRAME_RELATED_P (@var{x})\n+Nonzero in an insn or expression which is part of a function\n+prologue and sets the stack pointer, sets the frame pointer, or saves a \n+register. This flag is required for exception handling support\n+on targets with RTL prologues.\n+\n @findex SYMBOL_REF_USED\n @cindex @code{used}, in @code{symbol_ref}\n @item SYMBOL_REF_USED (@var{x})"}]}