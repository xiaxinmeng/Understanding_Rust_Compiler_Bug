{"sha": "6a07489267e55084c3d5e88b4e9591be25bf2bf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEwNzQ4OTI2N2U1NTA4NGMzZDVlODhiNGU5NTkxYmUyNWJmMmJmNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-08-27T12:37:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-08-27T12:37:30Z"}, "message": "re PR c++/91415 (Invalid warning for C++17 sequencing of shift operator E1<<E2.)\n\n\tPR c++/91415\n\t* c-common.c (verify_tree): For LSHIFT_EXPR, RSHIFT_EXPR,\n\tCOMPONENT_REF and ARRAY_REF in cxx_dialect >= cxx17 mode handle it\n\tlike COMPOUND_EXPR rather than normal expression.\n\n\t* g++.dg/warn/sequence-pt-4.C: New test.\n\nFrom-SVN: r274952", "tree": {"sha": "5232756c208bd045ce9f230aee7a9030453bd2e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5232756c208bd045ce9f230aee7a9030453bd2e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a07489267e55084c3d5e88b4e9591be25bf2bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a07489267e55084c3d5e88b4e9591be25bf2bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a07489267e55084c3d5e88b4e9591be25bf2bf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a07489267e55084c3d5e88b4e9591be25bf2bf6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c14d008122fcee4157be79a60f8d6685869ad19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c14d008122fcee4157be79a60f8d6685869ad19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c14d008122fcee4157be79a60f8d6685869ad19"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "0376a7b977debc721d1a37ac94a1fe585ee3faaa", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6a07489267e55084c3d5e88b4e9591be25bf2bf6", "patch": "@@ -1,3 +1,10 @@\n+2019-08-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/91415\n+\t* c-common.c (verify_tree): For LSHIFT_EXPR, RSHIFT_EXPR,\n+\tCOMPONENT_REF and ARRAY_REF in cxx_dialect >= cxx17 mode handle it\n+\tlike COMPOUND_EXPR rather than normal expression.\n+\n 2019-08-23  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR pch/61250"}, {"sha": "61ee7543dacc447484b2b1955f8366a5f5e1bdc4", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=6a07489267e55084c3d5e88b4e9591be25bf2bf6", "patch": "@@ -1889,6 +1889,7 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n     case COMPOUND_EXPR:\n     case TRUTH_ANDIF_EXPR:\n     case TRUTH_ORIF_EXPR:\n+    sequenced_binary:\n       tmp_before = tmp_nosp = tmp_list2 = tmp_list3 = 0;\n       verify_tree (TREE_OPERAND (x, 0), &tmp_before, &tmp_nosp, NULL_TREE);\n       warn_for_collisions (tmp_nosp);\n@@ -2031,8 +2032,18 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n \t  x = TREE_OPERAND (x, 0);\n \t  goto restart;\n \t}\n-      gcc_fallthrough ();\n+      goto do_default;\n+\n+    case LSHIFT_EXPR:\n+    case RSHIFT_EXPR:\n+    case COMPONENT_REF:\n+    case ARRAY_REF:\n+      if (cxx_dialect >= cxx17)\n+\tgoto sequenced_binary;\n+      goto do_default;\n+\n     default:\n+    do_default:\n       /* For other expressions, simply recurse on their operands.\n \t Manual tail recursion for unary expressions.\n \t Other non-expressions need not be processed.  */"}, {"sha": "64970b28f14f887e5e93f1faf7995dd7512d81f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a07489267e55084c3d5e88b4e9591be25bf2bf6", "patch": "@@ -1,3 +1,8 @@\n+2019-08-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/91415\n+\t* g++.dg/warn/sequence-pt-4.C: New test.\n+\n 2019-08-27  Robin Dapp  <rdapp@linux.ibm.com>\n \n \tPR testsuite/91549"}, {"sha": "e8b1e2cba8c096ea801c61f72751946e5e2815c5", "filename": "gcc/testsuite/g++.dg/warn/sequence-pt-4.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fsequence-pt-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a07489267e55084c3d5e88b4e9591be25bf2bf6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fsequence-pt-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fsequence-pt-4.C?ref=6a07489267e55084c3d5e88b4e9591be25bf2bf6", "patch": "@@ -0,0 +1,21 @@\n+/* More sequence point warning tests  */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wsequence-point\" } */\n+\n+struct S { int a[10]; };\n+void bar (int, int, int, int, int, int, int, int);\n+\n+int\n+foo (int i, int x[10][10], int y[10], struct S z[10], struct S *w[10])\n+{\n+  int b = x[i++][i++];\t/* { dg-warning \"undefined\" \"sequence point warning\" { target c++14_down } } */\n+  int c = i++ << i++;\t/* { dg-warning \"undefined\" \"sequence point warning\" { target c++14_down } } */\n+  int d = i++ >> i++;\t/* { dg-warning \"undefined\" \"sequence point warning\" { target c++14_down } } */\n+  int e = i++ && i++;\n+  int f = i++ ? i++ : i++;\n+  int g = (i++, i++);\n+  int h = z[i++].a[i++];\t/* { dg-warning \"undefined\" \"sequence point warning\" { target c++14_down } } */\n+  int j = w[i++]->a[i++];\t/* { dg-warning \"undefined\" \"sequence point warning\" { target c++14_down } } */\n+  bar (b, c, d, e, f,g, h, j);\n+  return i;\n+}"}]}