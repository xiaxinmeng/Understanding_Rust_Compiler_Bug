{"sha": "c74559df76560e75fd3adc58cccaab99ece47eeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc0NTU5ZGY3NjU2MGU3NWZkM2FkYzU4Y2NjYWFiOTllY2U0N2VlYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-08T09:10:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-08T09:10:14Z"}, "message": "re PR c/59984 (OpenMP pragma makes loop incorrect)\n\n\tPR c/59984\n\t* gimplify.c (gimplify_bind_expr): In ORT_SIMD region\n\tmark local addressable non-static vars as GOVD_PRIVATE\n\tinstead of GOVD_LOCAL.\n\t* omp-low.c (lower_omp_for): Move gimple_bind_vars\n\tand BLOCK_VARS of gimple_bind_block to new_stmt rather\n\tthan copying them.\n\n\t* gcc.dg/vect/pr59984.c: New test.\n\nFrom-SVN: r207629", "tree": {"sha": "2c1956599725175921f6bf53545ec3831264dff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c1956599725175921f6bf53545ec3831264dff4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c74559df76560e75fd3adc58cccaab99ece47eeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74559df76560e75fd3adc58cccaab99ece47eeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74559df76560e75fd3adc58cccaab99ece47eeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74559df76560e75fd3adc58cccaab99ece47eeb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8fcbce729d0ccd6881e479af9eec694abec61ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fcbce729d0ccd6881e479af9eec694abec61ee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fcbce729d0ccd6881e479af9eec694abec61ee5"}], "stats": {"total": 92, "additions": 90, "deletions": 2}, "files": [{"sha": "1c745247e1779d6c7384b5c2258ef378343cc9ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c74559df76560e75fd3adc58cccaab99ece47eeb", "patch": "@@ -1,5 +1,13 @@\n 2014-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/59984\n+\t* gimplify.c (gimplify_bind_expr): In ORT_SIMD region\n+\tmark local addressable non-static vars as GOVD_PRIVATE\n+\tinstead of GOVD_LOCAL.\n+\t* omp-low.c (lower_omp_for): Move gimple_bind_vars\n+\tand BLOCK_VARS of gimple_bind_block to new_stmt rather\n+\tthan copying them.\n+\n \tPR middle-end/60092\n \t* tree-ssa-ccp.c (surely_varying_stmt_p): Don't return true\n \tif TYPE_ATTRIBUTES (gimple_call_fntype ()) contain"}, {"sha": "957a82f107afd23d475209ccffeac7a72c85bfe8", "filename": "gcc/gimplify.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=c74559df76560e75fd3adc58cccaab99ece47eeb", "patch": "@@ -1042,7 +1042,14 @@ gimplify_bind_expr (tree *expr_p, gimple_seq *pre_p)\n \t      && (! DECL_SEEN_IN_BIND_EXPR_P (t)\n \t\t  || splay_tree_lookup (ctx->variables,\n \t\t\t\t\t(splay_tree_key) t) == NULL))\n-\t    omp_add_variable (gimplify_omp_ctxp, t, GOVD_LOCAL | GOVD_SEEN);\n+\t    {\n+\t      if (ctx->region_type == ORT_SIMD\n+\t\t  && TREE_ADDRESSABLE (t)\n+\t\t  && !TREE_STATIC (t))\n+\t\tomp_add_variable (ctx, t, GOVD_PRIVATE | GOVD_SEEN);\n+\t      else\n+\t\tomp_add_variable (ctx, t, GOVD_LOCAL | GOVD_SEEN);\n+\t    }\n \n \t  DECL_SEEN_IN_BIND_EXPR_P (t) = 1;\n "}, {"sha": "f99b2a62264e92c77a77e9ec1555f13f220e1b5f", "filename": "gcc/omp-low.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=c74559df76560e75fd3adc58cccaab99ece47eeb", "patch": "@@ -8946,8 +8946,14 @@ lower_omp_for (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n   if (!gimple_seq_empty_p (omp_for_body)\n       && gimple_code (gimple_seq_first_stmt (omp_for_body)) == GIMPLE_BIND)\n     {\n-      tree vars = gimple_bind_vars (gimple_seq_first_stmt (omp_for_body));\n+      gimple inner_bind = gimple_seq_first_stmt (omp_for_body);\n+      tree vars = gimple_bind_vars (inner_bind);\n       gimple_bind_append_vars (new_stmt, vars);\n+      /* bind_vars/BLOCK_VARS are being moved to new_stmt/block, don't\n+\t keep them on the inner_bind and it's block.  */\n+      gimple_bind_set_vars (inner_bind, NULL_TREE);\n+      if (gimple_bind_block (inner_bind))\n+\tBLOCK_VARS (gimple_bind_block (inner_bind)) = NULL_TREE;\n     }\n \n   if (gimple_omp_for_combined_into_p (stmt))"}, {"sha": "053acd0b3d8b985770804e844c25c443fe13009a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c74559df76560e75fd3adc58cccaab99ece47eeb", "patch": "@@ -1,5 +1,8 @@\n 2014-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/59984\n+\t* gcc.dg/vect/pr59984.c: New test.\n+\n \tPR middle-end/60092\n \t* gcc.dg/attr-alloc_align-1.c: New test.\n \t* gcc.dg/attr-alloc_align-2.c: New test."}, {"sha": "c772d82f6bba70baea0d445c12371b207caf6622", "filename": "gcc/testsuite/gcc.dg/vect/pr59984.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr59984.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74559df76560e75fd3adc58cccaab99ece47eeb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr59984.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr59984.c?ref=c74559df76560e75fd3adc58cccaab99ece47eeb", "patch": "@@ -0,0 +1,64 @@\n+/* PR c/59984 */\n+/* { dg-additional-options \"-fopenmp-simd\" } */\n+\n+#include \"tree-vect.h\"\n+\n+#define N 128\n+\n+int a[N];\n+\n+#pragma omp declare simd\n+__attribute__((noinline)) void\n+foo (int in, int *out1, int *out2)\n+{\n+  *out1 = in * in - 1;\n+  *out2 = in * in + 1;\n+}\n+\n+#pragma omp declare simd linear (out1, out2)\n+__attribute__((noinline)) void\n+bar (int in, int *out1, int *out2)\n+{\n+  *out1 = in * in - 1;\n+  *out2 = in * in + 1;\n+}\n+\n+__attribute__((noinline)) void\n+test (void)\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    a[i] = i;\n+#pragma omp simd\n+  for (i = 0; i < N; i++)\n+    {\n+      int v1, v2;\n+      foo (a[i], &v1, &v2);\n+      a[i] = v1 * v2;\n+    }\n+  for (i = 0; i < N; i++)\n+    if (a[i] != i * i * i * i - 1)\n+      __builtin_abort ();\n+  for (i = 0; i < N; i++)\n+    a[i] = i;\n+#pragma omp simd\n+  for (i = 0; i < N; i++)\n+    {\n+      int v1, v2;\n+      bar (a[i], &v1, &v2);\n+      a[i] = v1 * v2;\n+    }\n+  for (i = 0; i < N; i++)\n+    if (a[i] != i * i * i * i - 1)\n+      __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  check_vect ();\n+  test ();\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}