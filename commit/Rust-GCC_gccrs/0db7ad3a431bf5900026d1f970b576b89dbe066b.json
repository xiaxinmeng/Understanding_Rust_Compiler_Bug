{"sha": "0db7ad3a431bf5900026d1f970b576b89dbe066b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiN2FkM2E0MzFiZjU5MDAwMjZkMWY5NzBiNTc2Yjg5ZGJlMDY2Yg==", "commit": {"author": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2000-05-05T04:00:51Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2000-05-05T04:00:51Z"}, "message": "avr.c (out_shift_with_cnt): Genetare a more optimal shift cycle for unknown shift count.\n\n\t* config/avr/avr.c (out_shift_with_cnt): Genetare a more optimal\n\tshift cycle for unknown shift count. Also generates dec + brpl.\n\t(ashlqi3_out): Don't generate dec + brpl which now generates by\n\t`out_shift_with_cnt'.\n\t(ashlhi3_out): Likewise.\n\t(ashlsi3_out): Likewise.\n\t(ashrqi3_out): Likewise.\n\t(ashrhi3_out): Likewise.\n\t(ashrsi3_out): Likewise.\n\t(lshrqi3_out): Likewise.\n\t(lshrhi3_out): Likewise.\n\t(lshrsi3_out): Likewise.\n\nFrom-SVN: r33700", "tree": {"sha": "90ca6336ae4777ee330fe6c086b17f1050fd3b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90ca6336ae4777ee330fe6c086b17f1050fd3b52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0db7ad3a431bf5900026d1f970b576b89dbe066b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db7ad3a431bf5900026d1f970b576b89dbe066b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db7ad3a431bf5900026d1f970b576b89dbe066b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db7ad3a431bf5900026d1f970b576b89dbe066b/comments", "author": null, "committer": null, "parents": [{"sha": "6462c441e1ae91377025ca105d91263086bc1577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6462c441e1ae91377025ca105d91263086bc1577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6462c441e1ae91377025ca105d91263086bc1577"}], "stats": {"total": 91, "additions": 43, "deletions": 48}, "files": [{"sha": "27ba7f06f426b5d62356d1826900e85c5b1e00e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db7ad3a431bf5900026d1f970b576b89dbe066b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db7ad3a431bf5900026d1f970b576b89dbe066b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0db7ad3a431bf5900026d1f970b576b89dbe066b", "patch": "@@ -1,3 +1,18 @@\n+ Fri May  5 07:43:50 2000  Denis Chertykov  <denisc@overta.ru>\n+\n+\t* config/avr/avr.c (out_shift_with_cnt): Genetare a more optimal\n+\tshift cycle for unknown shift count. Also generates dec + brpl.\n+\t(ashlqi3_out): Don't generate dec + brpl which now generates by\n+\t`out_shift_with_cnt'.\n+\t(ashlhi3_out): Likewise.\n+\t(ashlsi3_out): Likewise.\n+\t(ashrqi3_out): Likewise.\n+\t(ashrhi3_out): Likewise.\n+\t(ashrsi3_out): Likewise.\n+\t(lshrqi3_out): Likewise.\n+\t(lshrhi3_out): Likewise.\n+\t(lshrsi3_out): Likewise.\n+\n 2000-05-04 Mark Elbrecht <snowball3@bigfoot.com>\n \n \t* gcc.c (free_split_directories): Correct typo in explanation"}, {"sha": "19a57abcfce071a8989bf3ac190bf01ca6cd13c3", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 28, "deletions": 48, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db7ad3a431bf5900026d1f970b576b89dbe066b/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db7ad3a431bf5900026d1f970b576b89dbe066b/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=0db7ad3a431bf5900026d1f970b576b89dbe066b", "patch": "@@ -2028,8 +2028,9 @@ out_shift_with_cnt (template,insn,operands,len)\n      int *len;\n {\n   rtx op[10];\n-  int l_hi=0;\n   char str[300];\n+  int second_label = 1;\n+  \n   op[0] = operands[0];\n   op[1] = operands[1];\n   op[2] = operands[2];\n@@ -2042,57 +2043,54 @@ out_shift_with_cnt (template,insn,operands,len)\n \t++*len;\n       else\n \tstrcat (str, \"ldi %3,lo8(%2)\");\n+      second_label = 0;\n     }\n   else if (GET_CODE (operands[2]) == MEM)\n     {\n       int mov_len;\n       rtx op_mov[10];\n-      l_hi = 1;\n-      if (len)\n-\t*len = 2;\n+      \n       op[3] = op_mov[0] = tmp_reg_rtx;\n       op_mov[1] = op[2];\n       \n       if (!len)\n \t{\n \t  output_asm_insn (out_movqi_r_mr (insn, op_mov, NULL), op_mov);\n-\t  strcat (str,(AS2 (or,%3,%3)    CR_TAB\n-\t\t       AS1 (breq,L_hi%=)));\n+\t  strcat (str, AS1 (rjmp,2f));\n \t}\n       else\n \t{\n \t  out_movqi_r_mr (insn, op_mov, &mov_len);\n-\t  *len += mov_len;\n+\t  *len = mov_len + 1;\n \t}\n     }\n   else if (register_operand (operands[2],QImode))\n     {\n-      l_hi = 1;\n-      if (len)\n-\t*len += 2;\n-      else\n-\tstrcat (str, (AS2 (or,%2,%2) CR_TAB\n-\t\t      AS1 (breq,L_hi%=)));\n-      \n       if (reg_unused_after (insn, operands[2]))\n-\t{\n-\t  op[3] = op[2];\n-\t}\n+\top[3] = op[2];\n       else\n \t{\n \t  op[3] = tmp_reg_rtx;\n \t  if (len)\n \t    ++*len;\n \t  else\n-\t    strcat (str, CR_TAB \"mov %3,%2\");\n+\t    strcat (str, \"mov %3,%2\" CR_TAB);\n \t}\n+      \n+      if (len)\n+\t++*len;\n+      else\n+\tstrcat (str, AS1 (rjmp,2f));\n+      \n     }\n   if (!len)\n     {\n-      strcat (str,\"\\n\\t\");\n+      strcat (str,\"\\n1:\\t\");\n       strcat (str, template);\n-      if (l_hi)\n-\tstrcat (str, \"\\nL_hi%=:\");\n+      strcat (str, second_label ? \"\\n2:\\t\" : \"\\n\\t\");\n+      strcat (str,\n+\t      AS1 (dec,%3) CR_TAB\n+\t      AS1 (brpl,1b));\n       output_asm_insn (str, op);\n     }\n }\n@@ -2178,9 +2176,7 @@ ashlqi3_out (insn,operands,len)\n     }\n   if (len)\n     *len = 3;\n-  out_shift_with_cnt (AS1 (lsl,%0)      CR_TAB\n-\t\t      AS1 (dec,%3)      CR_TAB\n-\t\t      AS1 (brne,_PC_-6),\n+  out_shift_with_cnt (AS1 (lsl,%0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2224,9 +2220,7 @@ ashlhi3_out (insn,operands,len)\n   if (len)\n     *len = 4;\n   out_shift_with_cnt (AS1 (lsl,%0)  CR_TAB\n-\t\t      AS1 (rol,%B0) CR_TAB\n-\t\t      AS1 (dec,%3)  CR_TAB\n-\t\t      AS1 (brne,_PC_-8),\n+\t\t      AS1 (rol,%B0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2310,9 +2304,7 @@ ashlsi3_out (insn,operands,len)\n   out_shift_with_cnt (AS1 (lsl,%0)  CR_TAB\n \t\t      AS1 (rol,%B0) CR_TAB\n \t\t      AS1 (rol,%C0) CR_TAB\n-\t\t      AS1 (rol,%D0) CR_TAB\n-\t\t      AS1 (dec,%3)  CR_TAB\n-\t\t      AS1 (brne,_PC_-12),\n+\t\t      AS1 (rol,%D0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2356,9 +2348,7 @@ ashrqi3_out (insn,operands,len)\n     }\n   if (len)\n     *len = 3;\n-  out_shift_with_cnt (AS1 (asr,%0) CR_TAB\n-\t\t      AS1 (dec,%3) CR_TAB\n-\t\t      AS1 (brne,_PC_-6),\n+  out_shift_with_cnt (AS1 (asr,%0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2410,9 +2400,7 @@ ashrhi3_out (insn,operands,len)\n   if (len)\n     *len = 4;\n   out_shift_with_cnt (AS1 (asr,%B0) CR_TAB\n-\t\t      AS1 (ror,%A0) CR_TAB\n-\t\t      AS1 (dec,%3) CR_TAB\n-\t\t      AS1 (brne,_PC_-8),\n+\t\t      AS1 (ror,%A0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2511,9 +2499,7 @@ ashrsi3_out (insn,operands,len)\n   out_shift_with_cnt (AS1 (asr,%D0) CR_TAB\n \t\t      AS1 (ror,%C0) CR_TAB\n \t\t      AS1 (ror,%B0) CR_TAB\n-\t\t      AS1 (ror,%A0) CR_TAB\n-\t\t      AS1 (dec,%3) CR_TAB\n-\t\t      AS1 (brne,_PC_-12),\n+\t\t      AS1 (ror,%A0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2598,9 +2584,7 @@ lshrqi3_out (insn,operands,len)\n     }\n   if (len)\n     *len = 3;\n-  out_shift_with_cnt (AS1 (lsr,%0) CR_TAB\n-\t\t      AS1 (dec,%3) CR_TAB\n-\t\t      AS1 (brne,_PC_-6),\n+  out_shift_with_cnt (AS1 (lsr,%0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2649,9 +2633,7 @@ lshrhi3_out (insn,operands,len)\n   if (len)\n     *len = 4;\n   out_shift_with_cnt (AS1 (lsr,%B0) CR_TAB\n-\t\t      AS1 (ror,%A0) CR_TAB\n-\t\t      AS1 (dec,%3) CR_TAB\n-\t\t      AS1 (brne,_PC_-8),\n+\t\t      AS1 (ror,%A0),\n \t\t      insn, operands, len);\n   return \"\";\n }\n@@ -2733,9 +2715,7 @@ lshrsi3_out (insn,operands,len)\n   out_shift_with_cnt (AS1 (lsr,%D0) CR_TAB\n \t\t      AS1 (ror,%C0) CR_TAB\n \t\t      AS1 (ror,%B0) CR_TAB\n-\t\t      AS1 (ror,%A0) CR_TAB\n-\t\t      AS1 (dec,%3) CR_TAB\n-\t\t      AS1 (brne,_PC_-12),\n+\t\t      AS1 (ror,%A0),\n \t\t      insn, operands, len);\n   return \"\";\n }"}]}