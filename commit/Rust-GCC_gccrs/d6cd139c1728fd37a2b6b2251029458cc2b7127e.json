{"sha": "d6cd139c1728fd37a2b6b2251029458cc2b7127e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZjZDEzOWMxNzI4ZmQzN2EyYjZiMjI1MTAyOTQ1OGNjMmI3MTI3ZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-29T13:09:55Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-29T13:09:55Z"}, "message": "OpenMP: Permit in Fortran omp target data without map\n\ngcc/fortran/ChangeLog:\n\n\t* openmp.c (resolve_omp_clauses): Permit 'omp target data' without\n\tmap if use_device_{addr,ptr} is present.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/map-3.f90: New test.\n\t* gfortran.dg/gomp/map-4.f90: New test.", "tree": {"sha": "0dd250e4a3c85bd87037a5b323cd3a3bca472a13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dd250e4a3c85bd87037a5b323cd3a3bca472a13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6cd139c1728fd37a2b6b2251029458cc2b7127e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6cd139c1728fd37a2b6b2251029458cc2b7127e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6cd139c1728fd37a2b6b2251029458cc2b7127e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6cd139c1728fd37a2b6b2251029458cc2b7127e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f6abd2db90151c8966d2d2718ab8c299abf1105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6abd2db90151c8966d2d2718ab8c299abf1105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f6abd2db90151c8966d2d2718ab8c299abf1105"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "16f39a4e08606e99ef341344e8a4c1be9d3a8885", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cd139c1728fd37a2b6b2251029458cc2b7127e/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cd139c1728fd37a2b6b2251029458cc2b7127e/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=d6cd139c1728fd37a2b6b2251029458cc2b7127e", "patch": "@@ -5330,17 +5330,23 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n   if (omp_clauses->depend_source && code->op != EXEC_OMP_ORDERED)\n     gfc_error (\"SOURCE dependence type only allowed \"\n \t       \"on ORDERED directive at %L\", &code->loc);\n-  if (!openacc && code && omp_clauses->lists[OMP_LIST_MAP] == NULL)\n+  if (!openacc\n+      && code\n+      && omp_clauses->lists[OMP_LIST_MAP] == NULL\n+      && omp_clauses->lists[OMP_LIST_USE_DEVICE_PTR] == NULL\n+      && omp_clauses->lists[OMP_LIST_USE_DEVICE_ADDR] == NULL)\n     {\n       const char *p = NULL;\n       switch (code->op)\n \t{\n-\tcase EXEC_OMP_TARGET_DATA: p = \"TARGET DATA\"; break;\n \tcase EXEC_OMP_TARGET_ENTER_DATA: p = \"TARGET ENTER DATA\"; break;\n \tcase EXEC_OMP_TARGET_EXIT_DATA: p = \"TARGET EXIT DATA\"; break;\n \tdefault: break;\n \t}\n-      if (p)\n+      if (code->op == EXEC_OMP_TARGET_DATA)\n+\tgfc_error (\"TARGET DATA must contain at least one MAP, USE_DEVICE_PTR, \"\n+\t\t   \"or USE_DEVICE_ADDR clause at %L\", &code->loc);\n+      else if (p)\n \tgfc_error (\"%s must contain at least one MAP clause at %L\",\n \t\t   p, &code->loc);\n     }"}, {"sha": "13f63647bda8d5198756947805254b0e21dc7257", "filename": "gcc/testsuite/gfortran.dg/gomp/map-3.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cd139c1728fd37a2b6b2251029458cc2b7127e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fmap-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cd139c1728fd37a2b6b2251029458cc2b7127e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fmap-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fmap-3.f90?ref=d6cd139c1728fd37a2b6b2251029458cc2b7127e", "patch": "@@ -0,0 +1,38 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+\n+subroutine bar\n+integer, target :: x\n+integer, allocatable, target :: y(:,:), z(:,:)\n+x = 7\n+!$omp target enter data map(to:x)\n+\n+x = 8\n+!$omp target data map(always, to: x)\n+call foo(x)\n+!$omp end target data\n+\n+!$omp target data use_device_ptr(x)\n+call foo2(x)\n+!$omp end target data\n+\n+!$omp target data use_device_addr(x)\n+call foo2(x)\n+!$omp end target data\n+!$omp target exit data map(release:x)\n+\n+!$omp target data map(y) use_device_addr(y)\n+call foo3(y)\n+!$omp end target data\n+\n+!$omp target data map(z) use_device_ptr(z)\n+call foo3(z)\n+!$omp end target data\n+end \n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target enter data map\\\\(to:x\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(always,to:x\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data use_device_ptr\\\\(x\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data use_device_addr\\\\(x\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target exit data map\\\\(release:x\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:\\\\*\\\\(c_char \\\\*\\\\) y.data \\\\\\[len: .*\\\\) map\\\\(to:y \\\\\\[pointer set, len: .*\\\\) map\\\\(alloc:.*y.data \\\\\\[pointer assign, bias: 0\\\\\\]\\\\) use_device_addr\\\\(y\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:\\\\*\\\\(c_char \\\\*\\\\) z.data \\\\\\[len: .*\\\\) map\\\\(to:z \\\\\\[pointer set, len: .*\\\\) map\\\\(alloc:.*z.data \\\\\\[pointer assign, bias: 0\\\\\\]\\\\) use_device_ptr\\\\(z\\\\)\" 1 \"original\" } }"}, {"sha": "3aa1c8096d78e8248954d8ff303c08f26e96e794", "filename": "gcc/testsuite/gfortran.dg/gomp/map-4.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cd139c1728fd37a2b6b2251029458cc2b7127e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fmap-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cd139c1728fd37a2b6b2251029458cc2b7127e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fmap-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fmap-4.f90?ref=d6cd139c1728fd37a2b6b2251029458cc2b7127e", "patch": "@@ -0,0 +1,7 @@\n+!$omp target enter data device(1) if (.true.) nowait ! { dg-error \"TARGET ENTER DATA must contain at least one MAP clause\" }\n+\n+!$omp target data device(1)  ! { dg-error \"TARGET DATA must contain at least one MAP, USE_DEVICE_PTR, or USE_DEVICE_ADDR clause\" }\n+!$omp endtarget data\n+\n+!$omp target exit data device(1) if (.true.) nowait ! { dg-error \"TARGET EXIT DATA must contain at least one MAP clause\" }\n+end"}]}