{"sha": "de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1ZjFhNWE3NzBmNDRmZjY3MjExZDVhOWMwYzAyYTIyZDVjMjJkYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-23T23:56:08Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-23T23:56:08Z"}, "message": "(change_newlines): Renamed from delete_newlines.\n\nInsert a space in place of a newline.  Caller changed.\n\nFrom-SVN: r3314", "tree": {"sha": "cb983e63538458fd5c1335d831d0ee1f1db0bfde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb983e63538458fd5c1335d831d0ee1f1db0bfde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc/comments", "author": null, "committer": null, "parents": [{"sha": "028aaf1aadc443d0718100c8a8e751754255d3ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/028aaf1aadc443d0718100c8a8e751754255d3ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/028aaf1aadc443d0718100c8a8e751754255d3ad"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "51223a813776782c851d9126ba66d2322d383b09", "filename": "gcc/cccp.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=de5f1a5a770f44ff67211d5a9c0c02a22d5c22dc", "patch": "@@ -263,7 +263,7 @@ static int compare_defs ();\n static int compare_token_lists ();\n static int eval_if_expression ();\n static int discard_comments ();\n-static int delete_newlines ();\n+static int change_newlines ();\n static int line_for_error ();\n static int hashf ();\n static int file_size_and_mode ();\n@@ -7260,11 +7260,11 @@ macroexpand (hp, op)\n \t     lines which don't correspond to any input line, which confuses\n \t     gdb and gcov.  */\n \t  if (arg->use_count > 1 && arg->newlines > 0) {\n-\t    /* Don't bother doing delete_newlines for subsequent\n+\t    /* Don't bother doing change_newlines for subsequent\n \t       uses of arg.  */\n \t    arg->use_count = 1;\n \t    arg->expand_length\n-\t      = delete_newlines (arg->expanded, arg->expand_length);\n+\t      = change_newlines (arg->expanded, arg->expand_length);\n \t  }\n \t}\n \n@@ -7659,12 +7659,12 @@ discard_comments (start, length, newlines)\n   return obp - start;\n }\n \f\n-/* Delete newlines in the string of length LENGTH at START, except inside\n-   of string constants.  The string is copied into itself with its beginning\n-   staying fixed.  */\n+/* Turn newlines to spaces in the string of length LENGTH at START,\n+   except inside of string constants.\n+   The string is copied into itself with its beginning staying fixed.  */\n \n static int\n-delete_newlines (start, length)\n+change_newlines (start, length)\n      U_CHAR *start;\n      int length;\n {\n@@ -7682,11 +7682,13 @@ delete_newlines (start, length)\n     switch (c) {\n     case '\\n':\n       /* If this is a NEWLINE NEWLINE, then this is a real newline in the\n-\t output.  Skip past the newline and its duplicate.  */\n+\t string.  Skip past the newline and its duplicate.\n+\t Put a space in the output.  */\n       if (*ibp == '\\n')\n \t{\n \t  ibp++;\n \t  obp--;\n+\t  *obp++ = ' ';\n \t}\n       break;\n "}]}