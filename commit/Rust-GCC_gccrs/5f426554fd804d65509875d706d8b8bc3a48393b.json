{"sha": "5f426554fd804d65509875d706d8b8bc3a48393b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY0MjY1NTRmZDgwNGQ2NTUwOTg3NWQ3MDZkOGI4YmMzYTQ4MzkzYg==", "commit": {"author": {"name": "Andre Simoes Dias Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-06-23T14:20:17Z"}, "committer": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-06-23T14:23:45Z"}, "message": "arm: PR target/95646: Do not clobber callee saved registers with CMSE\n\nAs reported in bugzilla when the -mcmse option is used while compiling for size\n(-Os) with a thumb-1 target the generated code will clear the registers r7-r10.\nThese however are callee saved and should be preserved accross ABI boundaries.\nThe reason this happens is because these registers are made \"fixed\" when\noptimising for size with Thumb-1 in a way to make sure they are not used, as\npushing and popping hi-registers requires extra moves to and from LO_REGS.\n\nTo fix this, this patch uses 'callee_saved_reg_p', which accounts for this\noptimisation, instead of 'call_used_or_fixed_reg_p'. Be aware of\n'callee_saved_reg_p''s definition, as it does still take call used registers\ninto account, which aren't callee_saved in my opinion, so it is a rather\nmisnoemer, works in our advantage here though as it does exactly what we need.\n\nRegression tested on arm-none-eabi.\n\nIs this OK for trunk? (Will eventually backport to previous versions if stable.)\n\ngcc/ChangeLog:\n2020-06-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR target/95646\n\t* config/arm/arm.c: (cmse_nonsecure_entry_clear_before_return): Use\n\t'callee_saved_reg_p' instead of 'calL_used_or_fixed_reg_p'.\n\ngcc/testsuite/ChangeLog:\n2020-06-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR target/95646\n\t* gcc.target/arm/pr95646.c: New test.", "tree": {"sha": "e2330b45686cc4b2100d1ad9df6cd9e4ae34f813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2330b45686cc4b2100d1ad9df6cd9e4ae34f813"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f426554fd804d65509875d706d8b8bc3a48393b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f426554fd804d65509875d706d8b8bc3a48393b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f426554fd804d65509875d706d8b8bc3a48393b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f426554fd804d65509875d706d8b8bc3a48393b/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81d4f1e3d6a519afa20d84304f12ee639fde944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81d4f1e3d6a519afa20d84304f12ee639fde944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b81d4f1e3d6a519afa20d84304f12ee639fde944"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "dac9a6fb5c41ce42cd7a278b417eab25239a043c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f426554fd804d65509875d706d8b8bc3a48393b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f426554fd804d65509875d706d8b8bc3a48393b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=5f426554fd804d65509875d706d8b8bc3a48393b", "patch": "@@ -26960,7 +26960,7 @@ cmse_nonsecure_entry_clear_before_return (void)\n \tcontinue;\n       if (IN_RANGE (regno, IP_REGNUM, PC_REGNUM))\n \tcontinue;\n-      if (call_used_or_fixed_reg_p (regno)\n+      if (!callee_saved_reg_p (regno)\n \t  && (!IN_RANGE (regno, FIRST_VFP_REGNUM, LAST_VFP_REGNUM)\n \t      || TARGET_HARD_FLOAT))\n \tbitmap_set_bit (to_clear_bitmap, regno);"}, {"sha": "12d06a0c8c1ed7de1f8d4d15130432259e613a32", "filename": "gcc/testsuite/gcc.target/arm/pr95646.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f426554fd804d65509875d706d8b8bc3a48393b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr95646.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f426554fd804d65509875d706d8b8bc3a48393b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr95646.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr95646.c?ref=5f426554fd804d65509875d706d8b8bc3a48393b", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv8-m.base\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m23\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mfpu=*\" } { } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=soft\" } } */\n+/* { dg-options \"-mcpu=cortex-m23 -mcmse\" } */\n+/* { dg-additional-options \"-Os\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n+\n+int __attribute__ ((cmse_nonsecure_entry))\n+foo (void)\n+{\n+  return 1;\n+}\n+/* { { dg-final { scan-assembler-not \"mov\\tr9, r0\" } } */\n+\n+/*\n+** __acle_se_bar:\n+**\tmov\t(r[0-3]), r9\n+**\tpush\t{\\1}\n+** ...\n+**\tpop\t{(r[0-3])}\n+**\tmov\tr9, \\2\n+** ...\n+**\tbxns\tlr\n+*/\n+int __attribute__ ((cmse_nonsecure_entry))\n+bar (void)\n+{\n+  asm (\"\": : : \"r9\");\n+  return 1;\n+}"}]}