{"sha": "3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzMmM4N2Y2MDlhNDdlMTI2MDQ0Y2UyZDNmMjk3MDFmYTJjNGRjYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2007-02-16T01:27:42Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-02-16T01:27:42Z"}, "message": "re PR middle-end/30433 (no longer folding __complex__(0.0, 1.0) == __complex__(1.0, 0.0))\n\n2007-02-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR middle-end/30433\n        * fold-const.c (fold_comparison): Add back the\n        folding of constant complex comparisions.\n2007-02-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR middle-end/30433\n        * gcc.c-torture/compile/pr30433.c: New testcase to check\n        that complex constants comparisions are foldded.\n\nFrom-SVN: r122029", "tree": {"sha": "7b02a8f486f877aa1281bc0e4df1b4251217bc42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b02a8f486f877aa1281bc0e4df1b4251217bc42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/comments", "author": null, "committer": null, "parents": [{"sha": "76b9a2a1cd4c0777039da22ae087268ab282c123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b9a2a1cd4c0777039da22ae087268ab282c123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76b9a2a1cd4c0777039da22ae087268ab282c123"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "aac9a3e3610ddbe9f5b31d642a59d0446801f2fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "patch": "@@ -1,3 +1,9 @@\n+2007-02-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/30433\n+\t* fold-const.c (fold_comparison): Add back the\n+\tfolding of constant complex comparisions.\n+\n 2007-02-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR middle-end/30729"}, {"sha": "3c8636e8fc3a6e35003577dcd67a8d0bfd29143b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "patch": "@@ -8852,6 +8852,29 @@ fold_comparison (enum tree_code code, tree type, tree op0, tree op1)\n \t}\n     }\n \n+  /* If this is a comparison of complex values and both sides\n+     are COMPLEX_CST, do the comparision by parts to fold the\n+     comparision.  */\n+  if ((code == EQ_EXPR || code == NE_EXPR)\n+      && TREE_CODE (TREE_TYPE (arg0)) == COMPLEX_TYPE\n+      && TREE_CODE (arg0) == COMPLEX_CST\n+      && TREE_CODE (arg1) == COMPLEX_CST)\n+    {\n+      tree real0, imag0, real1, imag1;\n+      enum tree_code outercode;\n+\n+      real0 = TREE_REALPART (arg0);\n+      imag0 = TREE_IMAGPART (arg0);\n+      real1 = TREE_REALPART (arg1);\n+      imag1 = TREE_IMAGPART (arg1);\n+      outercode = code == EQ_EXPR ? TRUTH_ANDIF_EXPR : TRUTH_ORIF_EXPR;\n+\n+      return fold_build2 (outercode, type,\n+\t\t\t  fold_build2 (code, type, real0, real1),\n+\t\t\t  fold_build2 (code, type, imag0, imag1));\n+    }\n+\n+\n   /* Fold a comparison of the address of COMPONENT_REFs with the same\n      type and component to a comparison of the address of the base\n      object.  In short, &x->a OP &y->a to x OP y and"}, {"sha": "e05d167bfe9184b860f504868604bdcaa88e87e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "patch": "@@ -1,3 +1,9 @@\n+2007-02-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/30433\n+\t* gcc.c-torture/compile/pr30433.c: New testcase to check\n+\tthat complex constants comparisions are foldded.\n+\n 2007-02-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR C++/30158"}, {"sha": "1f0edd0794d8b12db3f50c111afa537f4de38e0d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr30433.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30433.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c32c87f609a47e126044ce2d3f29701fa2c4dcc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30433.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30433.c?ref=3c32c87f609a47e126044ce2d3f29701fa2c4dcc", "patch": "@@ -0,0 +1,2 @@\n+int f = (_Complex float)(0.5) == 0.5;\n+"}]}