{"sha": "7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YzZjhkM2ZlNTNiMTM1NmU2ZjVjOTAxN2FjMjFhY2Y0Y2E1ODE5Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-08-17T10:49:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-08-17T10:49:30Z"}, "message": "bitmap.h (struct bitmap_element_def): GTY annotate next/prev.\n\n2012-08-17  Richard Guenther  <rguenther@suse.de>\n\n\t* bitmap.h (struct bitmap_element_def): GTY annotate next/prev.\n\t(struct bitmap_head_def): GTY skip current field.\n\nFrom-SVN: r190479", "tree": {"sha": "2065dbc6e7f7a4efd27d10c6511c44fe1ecdb5fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2065dbc6e7f7a4efd27d10c6511c44fe1ecdb5fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "baecdd1e97b8a9882c2eca16b32283ef97ed98d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baecdd1e97b8a9882c2eca16b32283ef97ed98d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baecdd1e97b8a9882c2eca16b32283ef97ed98d1"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "c9a81d14b73d3c1d45ca697e9836bb3d96f4b9ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192", "patch": "@@ -1,3 +1,8 @@\n+2012-08-17  Richard Guenther  <rguenther@suse.de>\n+\n+\t* bitmap.h (struct bitmap_element_def): GTY annotate next/prev.\n+\t(struct bitmap_head_def): GTY skip current field.\n+\n 2012-08-17  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR middle-end/54146"}, {"sha": "1c39cd49efd40f0bd57fb8525b2df92533135bd0", "filename": "gcc/bitmap.h", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=7f3f8d3fe53b1356e6f5c9017ac21acf4ca58192", "patch": "@@ -167,25 +167,27 @@ typedef struct GTY (()) bitmap_obstack {\n    bitmap_elt_clear_from to be implemented in unit time rather than\n    linear in the number of elements to be freed.  */\n \n-typedef struct GTY(()) bitmap_element_def {\n-  struct bitmap_element_def *next;\t\t/* Next element.  */\n-  struct bitmap_element_def *prev;\t\t/* Previous element.  */\n+typedef struct GTY((chain_next (\"%h.next\"), chain_prev (\"%h.prev\"))) bitmap_element_def {\n+  struct bitmap_element_def *next;\t/* Next element.  */\n+  struct bitmap_element_def *prev;\t/* Previous element.  */\n   unsigned int indx;\t\t\t/* regno/BITMAP_ELEMENT_ALL_BITS.  */\n   BITMAP_WORD bits[BITMAP_ELEMENT_WORDS]; /* Bits that are set.  */\n } bitmap_element;\n \n struct bitmap_descriptor;\n /* Head of bitmap linked list.  gengtype ignores ifdefs, but for\n    statistics we need to add a bitmap descriptor pointer.  As it is\n-   not collected, we can just GTY((skip)) it.   */\n+   not collected, we can just GTY((skip(\"\"))) it.  Likewise current\n+   points to something already pointed to by the chain started by first,\n+   no need to walk it again.  */\n \n typedef struct GTY(()) bitmap_head_def {\n-  bitmap_element *first;\t/* First element in linked list.  */\n-  bitmap_element *current;\t/* Last element looked at.  */\n-  unsigned int indx;\t\t/* Index of last element looked at.  */\n-  bitmap_obstack *obstack;\t/* Obstack to allocate elements from.\n-\t\t\t\t   If NULL, then use GGC allocation.  */\n-  struct bitmap_descriptor GTY((skip)) *desc;\n+  bitmap_element *first;\t\t/* First element in linked list.  */\n+  bitmap_element * GTY((skip(\"\"))) current; /* Last element looked at.  */\n+  unsigned int indx;\t\t\t/* Index of last element looked at.  */\n+  bitmap_obstack *obstack;\t\t/* Obstack to allocate elements from.\n+\t\t\t\t\t   If NULL, then use GGC allocation.  */\n+  struct bitmap_descriptor GTY((skip(\"\"))) *desc;\n } bitmap_head;\n \n /* Global data */"}]}