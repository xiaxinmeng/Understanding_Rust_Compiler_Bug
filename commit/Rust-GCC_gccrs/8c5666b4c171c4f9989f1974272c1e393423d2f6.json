{"sha": "8c5666b4c171c4f9989f1974272c1e393423d2f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM1NjY2YjRjMTcxYzRmOTk4OWYxOTc0MjcyYzFlMzkzNDIzZDJmNg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "crux@pool.informatik.rwth-aachen.de", "date": "1999-09-04T02:16:58Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-04T02:16:58Z"}, "message": "function.h (struct function): Add new element LANGUAGE.\n\n \t* function.h (struct function): Add new element LANGUAGE.\n \t(save_lang_status): Declare new variable.\n\t(restore_lang_status): Likewise.\n\t* function.c (save_lang_status): Define.\n\t(restore_lang_status): Likewise.\n\t(push_function_context_to): Call language-specific save function.\n\t(pop_function_context_from): Call language-specific restore function.\n\nFrom-SVN: r29095", "tree": {"sha": "783bd7815837b76ff7e04a13fc3b23ec80d17008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783bd7815837b76ff7e04a13fc3b23ec80d17008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c5666b4c171c4f9989f1974272c1e393423d2f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5666b4c171c4f9989f1974272c1e393423d2f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c5666b4c171c4f9989f1974272c1e393423d2f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5666b4c171c4f9989f1974272c1e393423d2f6/comments", "author": null, "committer": null, "parents": [{"sha": "0c174a684cad337fd76cbb177b852983d247a5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c174a684cad337fd76cbb177b852983d247a5bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c174a684cad337fd76cbb177b852983d247a5bd"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "4e7eb169c5bbd25ce227fd4f5084a7fa67fa9f0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5666b4c171c4f9989f1974272c1e393423d2f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5666b4c171c4f9989f1974272c1e393423d2f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c5666b4c171c4f9989f1974272c1e393423d2f6", "patch": "@@ -1,3 +1,13 @@\n+Fri Sep  3 19:02:38 1999  Bernd Schmidt <crux@pool.informatik.rwth-aachen.de>\n+\n+ \t* function.h (struct function): Add new element LANGUAGE.\n+ \t(save_lang_status): Declare new variable.\n+\t(restore_lang_status): Likewise.\n+\t* function.c (save_lang_status): Define.\n+\t(restore_lang_status): Likewise.\n+\t(push_function_context_to): Call language-specific save function.\n+\t(pop_function_context_from): Call language-specific restore function.\n+\t\n Fri Sep  3 01:16:18 1999  Alasdair Baird  <alasdair@wildcat.demon.co.uk>\n \n \t* i386.md (movsf_1): Check REG_P before use of REGNO."}, {"sha": "c86792164eba5919718a47f7efe9e07083ef6277", "filename": "gcc/function.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5666b4c171c4f9989f1974272c1e393423d2f6/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5666b4c171c4f9989f1974272c1e393423d2f6/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=8c5666b4c171c4f9989f1974272c1e393423d2f6", "patch": "@@ -120,6 +120,10 @@ static int virtuals_instantiated;\n void (*save_machine_status) PROTO((struct function *));\n void (*restore_machine_status) PROTO((struct function *));\n \n+/* Likewise, but for language-specific data.  */\n+void (*save_lang_status) PROTO((struct function *));\n+void (*restore_lang_status) PROTO((struct function *));\n+\n /* The FUNCTION_DECL for an inline function currently being expanded.  */\n tree inline_function_decl;\n \n@@ -287,9 +291,10 @@ find_function_data (decl)\n }\n \n /* Save the current context for compilation of a nested function.\n-   This is called from language-specific code.\n-   The caller is responsible for saving any language-specific status,\n-   since this function knows only about language-independent variables.  */\n+   This is called from language-specific code.  The caller should use\n+   the save_lang_status callback to save any language-specific state,\n+   since this function knows only about language-independent\n+   variables.  */\n \n void\n push_function_context_to (context)\n@@ -308,6 +313,8 @@ push_function_context_to (context)\n \n   save_tree_status (p, context);\n   save_varasm_status (p, context);\n+  if (save_lang_status)\n+    (*save_lang_status) (p);\n   if (save_machine_status)\n     (*save_machine_status) (p);\n \n@@ -344,6 +351,8 @@ pop_function_context_from (context)\n \n   if (restore_machine_status)\n     (*restore_machine_status) (p);\n+  if (restore_lang_status)\n+    (*restore_lang_status) (p);\n \n   /* Finish doing put_var_into_stack for any of our variables\n      which became addressable during the nested function.  */"}, {"sha": "9a9156ae2a86a0551fa1339cfc77e79ff335bbcf", "filename": "gcc/function.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5666b4c171c4f9989f1974272c1e393423d2f6/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5666b4c171c4f9989f1974272c1e393423d2f6/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=8c5666b4c171c4f9989f1974272c1e393423d2f6", "patch": "@@ -440,6 +440,9 @@ struct function\n   /* tm.h can use this to store whatever it likes.  */\n   struct machine_function *machine;\n \n+  /* Language-specific code can use this to store whatever it likes.  */\n+  struct language_function *language;\n+\n   /* For reorg.  */\n \n   /* If some insns can be deferred to the delay slots of the epilogue, the\n@@ -541,6 +544,10 @@ extern HOST_WIDE_INT get_func_frame_size PROTO((struct function *));\n extern void (*save_machine_status) PROTO((struct function *));\n extern void (*restore_machine_status) PROTO((struct function *));\n \n+/* Likewise, but for language-specific data.  */\n+extern void (*save_lang_status)\t\tPROTO((struct function *));\n+extern void (*restore_lang_status)\tPROTO((struct function *));\n+\n /* Save and restore status information for a nested function.  */\n extern void save_tree_status\t\tPROTO((struct function *, tree));\n extern void restore_tree_status\t\tPROTO((struct function *, tree));"}]}