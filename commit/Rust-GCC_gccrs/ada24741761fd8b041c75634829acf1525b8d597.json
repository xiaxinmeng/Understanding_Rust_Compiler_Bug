{"sha": "ada24741761fd8b041c75634829acf1525b8d597", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRhMjQ3NDE3NjFmZDhiMDQxYzc1NjM0ODI5YWNmMTUyNWI4ZDU5Nw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-16T19:28:51Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-16T19:28:51Z"}, "message": "compiler: Don't record interface types with blank type names.\n\nFixes issue 8079.\n\nFrom-SVN: r216343", "tree": {"sha": "5892f9f195d7f6a61ac0decb83a70534a65387bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5892f9f195d7f6a61ac0decb83a70534a65387bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ada24741761fd8b041c75634829acf1525b8d597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada24741761fd8b041c75634829acf1525b8d597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ada24741761fd8b041c75634829acf1525b8d597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada24741761fd8b041c75634829acf1525b8d597/comments", "author": null, "committer": null, "parents": [{"sha": "f6e31dffc122fc91ca33a9b43ab8b5051585b979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e31dffc122fc91ca33a9b43ab8b5051585b979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e31dffc122fc91ca33a9b43ab8b5051585b979"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "09369e020f64b0f8b540b0dc52de1007a0d873ac", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada24741761fd8b041c75634829acf1525b8d597/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada24741761fd8b041c75634829acf1525b8d597/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=ada24741761fd8b041c75634829acf1525b8d597", "patch": "@@ -245,7 +245,7 @@ Parse::type()\n \t   || token->is_op(OPERATOR_CHANOP))\n     return this->channel_type();\n   else if (token->is_keyword(KEYWORD_INTERFACE))\n-    return this->interface_type();\n+    return this->interface_type(true);\n   else if (token->is_keyword(KEYWORD_FUNC))\n     {\n       Location location = token->location();\n@@ -1179,7 +1179,7 @@ Parse::block()\n // MethodSpecList     = MethodSpec { \";\" MethodSpec } [ \";\" ] .\n \n Type*\n-Parse::interface_type()\n+Parse::interface_type(bool record)\n {\n   go_assert(this->peek_token()->is_keyword(KEYWORD_INTERFACE));\n   Location location = this->location();\n@@ -1227,7 +1227,8 @@ Parse::interface_type()\n     }\n \n   Interface_type* ret = Type::make_interface_type(methods, location);\n-  this->gogo_->record_interface_type(ret);\n+  if (record)\n+    this->gogo_->record_interface_type(ret);\n   return ret;\n }\n \n@@ -1526,7 +1527,13 @@ Parse::type_spec(void*)\n     }\n \n   Type* type;\n-  if (!this->peek_token()->is_op(OPERATOR_SEMICOLON))\n+  if (name == \"_\" && this->peek_token()->is_keyword(KEYWORD_INTERFACE))\n+    {\n+      // We call Parse::interface_type explicity here because we do not want\n+      // to record an interface with a blank type name.\n+      type = this->interface_type(false);\n+    }\n+  else if (!this->peek_token()->is_op(OPERATOR_SEMICOLON))\n     type = this->type();\n   else\n     {"}, {"sha": "3749645ebb3dbc433fdcfd9d87d2e7de11c05826", "filename": "gcc/go/gofrontend/parse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada24741761fd8b041c75634829acf1525b8d597/gcc%2Fgo%2Fgofrontend%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada24741761fd8b041c75634829acf1525b8d597/gcc%2Fgo%2Fgofrontend%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.h?ref=ada24741761fd8b041c75634829acf1525b8d597", "patch": "@@ -182,7 +182,7 @@ class Parse\n   void parameter_decl(bool, Typed_identifier_list*, bool*, bool*, bool*);\n   bool result(Typed_identifier_list**);\n   Location block();\n-  Type* interface_type();\n+  Type* interface_type(bool record);\n   void method_spec(Typed_identifier_list*);\n   void declaration();\n   bool declaration_may_start_here();"}]}