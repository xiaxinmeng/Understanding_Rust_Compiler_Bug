{"sha": "2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIzZGVkNDJlMjFhOTdmN2Q0YTA0ZjEzMjgwY2MzZWViOThmNjBjYQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-09-17T18:00:40Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-09-17T18:00:40Z"}, "message": "Make sure that all variable sized adjustments are multiple of preferred\nstack boundary after stack alignment.\n\ngcc/\n\n2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/45234\n\t* calls.c (expand_call): Make sure that all variable sized\n\tadjustments are multiple of preferred stack boundary after\n\tstack alignment.\n\ngcc/testsuite/\n\n2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/45234\n\t* gcc.dg/torture/stackalign/alloca-5.c: New.\n\nFrom-SVN: r164377", "tree": {"sha": "889306a9ce992c2efd49c6bf57d4cea16247242e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/889306a9ce992c2efd49c6bf57d4cea16247242e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf9afb7d953d7f77c6305fed27c5fcd1a485686b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf9afb7d953d7f77c6305fed27c5fcd1a485686b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf9afb7d953d7f77c6305fed27c5fcd1a485686b"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "5301e8d043854b871504684f038fd550e99f55d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "patch": "@@ -1,3 +1,10 @@\n+2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/45234\n+\t* calls.c (expand_call): Make sure that all variable sized\n+\tadjustments are multiple of preferred stack boundary after\n+\tstack alignment.\n+\n 2010-09-17  DJ Delorie  <dj@redhat.com>\n \n \t* config/rx/rx.c (rx_print_operand): If __builtin_rx_setpsw() is"}, {"sha": "b3109cee8d2b344110428b77f9a337ba84a19c99", "filename": "gcc/calls.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "patch": "@@ -2385,6 +2385,19 @@ expand_call (tree exp, rtx target, int ignore)\n \n   preferred_unit_stack_boundary = preferred_stack_boundary / BITS_PER_UNIT;\n \n+  if (SUPPORTS_STACK_ALIGNMENT)\n+    {\n+      /* All variable sized adjustments must be multiple of preferred\n+\t stack boundary.  Stack alignment may change preferred stack\n+\t boundary after variable sized adjustments have been made.  We\n+\t need to compensate it here.  */\n+      unsigned HOST_WIDE_INT delta\n+\t= ((stack_pointer_delta - pending_stack_adjust)\n+\t   % preferred_unit_stack_boundary);\n+      if (delta)\n+\tanti_adjust_stack (GEN_INT (preferred_unit_stack_boundary - delta));\n+    }\n+\n   /* We want to make two insn chains; one for a sibling call, the other\n      for a normal call.  We will select one of the two chains after\n      initial RTL generation is complete.  */"}, {"sha": "6bec743e8321fb19bece3cb4cc6e28b08796f485", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "patch": "@@ -1,3 +1,8 @@\n+2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/45234\n+\t* gcc.dg/torture/stackalign/alloca-5.c: New.\n+\n 2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/45678"}, {"sha": "a91d3fc1a9883a2331226a85a6e94013d6242018", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/alloca-5.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-5.c?ref=2b3ded42e21a97f7d4a04f13280cc3eeb98f60ca", "patch": "@@ -0,0 +1,32 @@\n+/* PR middle-end/45234 */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-m32 -mincoming-stack-boundary=2 -mpreferred-stack-boundary=2\" } */\n+\n+#include \"check.h\"\n+\n+void\n+__attribute__ ((noinline))\n+bar (__float128 f)\n+{\n+  check (&f, __alignof__(f));\n+}\n+\n+int\n+main (void)\n+{\n+  char *p = __builtin_alloca (6);\n+\n+  bar (0);\n+\n+  __builtin_strncpy (p, \"good\", 5);\n+  if (__builtin_strncmp (p, \"good\", 5) != 0)\n+    {\n+#ifdef DEBUG\n+      p[size] = '\\0';\n+      printf (\"Failed: %s != good\\n\", p);\n+#endif\n+     abort ();\n+    }\n+\n+  return 0;\n+}"}]}