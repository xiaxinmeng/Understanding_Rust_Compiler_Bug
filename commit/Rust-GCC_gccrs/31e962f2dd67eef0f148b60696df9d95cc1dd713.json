{"sha": "31e962f2dd67eef0f148b60696df9d95cc1dd713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFlOTYyZjJkZDY3ZWVmMGYxNDhiNjA2OTZkZjlkOTVjYzFkZDcxMw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2018-08-01T08:16:38Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2018-08-01T08:16:38Z"}, "message": "x86 - add speculation_barrier pattern\n\nThis patch adds a speculation barrier for x86, based on my\nunderstanding of the required mitigation for that CPU, which is to use\nan lfence instruction.\n\nThis patch needs some review by an x86 expert and if adjustments are\nneeded, I'd appreciate it if they could be picked up by the port\nmaintainer.  This is supposed to serve as an example of how to deploy\nthe new __builtin_speculation_safe_value() intrinsic on this\narchitecture.\n\n\t* config/i386/i386.md (unspecv): Add UNSPECV_SPECULATION_BARRIER.\n\t(speculation_barrier): New insn.\n\nFrom-SVN: r263196", "tree": {"sha": "f062402e6442ac356e0f274656bcad1c4f5e332e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f062402e6442ac356e0f274656bcad1c4f5e332e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31e962f2dd67eef0f148b60696df9d95cc1dd713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e962f2dd67eef0f148b60696df9d95cc1dd713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e962f2dd67eef0f148b60696df9d95cc1dd713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e962f2dd67eef0f148b60696df9d95cc1dd713/comments", "author": null, "committer": null, "parents": [{"sha": "71f10c42d09badbc3a847bdc0755b6d320eb6bc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f10c42d09badbc3a847bdc0755b6d320eb6bc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71f10c42d09badbc3a847bdc0755b6d320eb6bc2"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "6b2e93bb48a381b0bfded20e92d0d1e8b5f61984", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e962f2dd67eef0f148b60696df9d95cc1dd713/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e962f2dd67eef0f148b60696df9d95cc1dd713/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31e962f2dd67eef0f148b60696df9d95cc1dd713", "patch": "@@ -1,3 +1,8 @@\n+2018-08-01  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/i386/i386.md (unspecv): Add UNSPECV_SPECULATION_BARRIER.\n+\t(speculation_barrier): New insn.\n+\n 2018-08-01  Richard Biener  <rguenther@suse.de>\n \n \tPR bootstrap/86724"}, {"sha": "73948c12618df2c06846574d63775b5d2a79412a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e962f2dd67eef0f148b60696df9d95cc1dd713/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e962f2dd67eef0f148b60696df9d95cc1dd713/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=31e962f2dd67eef0f148b60696df9d95cc1dd713", "patch": "@@ -301,6 +301,9 @@\n \n   ;; For CLDEMOTE support\n   UNSPECV_CLDEMOTE\n+\n+  ;; For Speculation Barrier support\n+  UNSPECV_SPECULATION_BARRIER\n ])\n \n ;; Constants to represent rounding modes in the ROUND instruction\n@@ -20979,6 +20982,13 @@\n   [(set_attr \"type\" \"other\")\n    (set_attr \"memory\" \"unknown\")])\n \n+(define_insn \"speculation_barrier\"\n+  [(unspec_volatile [(const_int 0)] UNSPECV_SPECULATION_BARRIER)]\n+  \"\"\n+  \"lfence\"\n+  [(set_attr \"type\" \"other\")\n+   (set_attr \"length\" \"3\")])\n+\n (include \"mmx.md\")\n (include \"sse.md\")\n (include \"sync.md\")"}]}