{"sha": "da69cc9160391a75d646caf33d0c6a4074277646", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2OWNjOTE2MDM5MWE3NWQ2NDZjYWYzM2QwYzZhNDA3NDI3NzY0Ng==", "commit": {"author": {"name": "George Helffrich", "email": "george@gcc.gnu.org", "date": "2008-04-26T09:46:01Z"}, "committer": {"name": "George Helffrich", "email": "george@gcc.gnu.org", "date": "2008-04-26T09:46:01Z"}, "message": "re PR fortran/35892 (gfortran lost memory blocks)\n\n2008-04-26  George Helffrich <george@gcc.gnu.org>\n\n\tPR fortran/35892\n\tPR fortran/35154\n\t* fortran/trans-common.c (create_common):  Add decl to function\n\tchain (if inside one) to preserve identifier scope in debug output.\n\n        * testsuite/gfortran.dg/debug/pr35154-stabs.f:  New test case for\n        .stabs functionality.\n        * testsuite/gfortran.dg/debug/pr35154-dwarf2.f:  New test case for\n        DWARF functionality.\n\nFrom-SVN: r134696", "tree": {"sha": "41a41127f1938338b6b87dd1bde0414e40bfc07f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41a41127f1938338b6b87dd1bde0414e40bfc07f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da69cc9160391a75d646caf33d0c6a4074277646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da69cc9160391a75d646caf33d0c6a4074277646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da69cc9160391a75d646caf33d0c6a4074277646", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da69cc9160391a75d646caf33d0c6a4074277646/comments", "author": null, "committer": null, "parents": [{"sha": "49bce30a21d7cec8632fba32fd83abe7db1acad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49bce30a21d7cec8632fba32fd83abe7db1acad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49bce30a21d7cec8632fba32fd83abe7db1acad5"}], "stats": {"total": 95, "additions": 93, "deletions": 2}, "files": [{"sha": "dbe52c3ff1a854f94e7923c5d11fa7cddc97ba61", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=da69cc9160391a75d646caf33d0c6a4074277646", "patch": "@@ -1,3 +1,10 @@\n+2008-04-26  George Helffrich <george@gcc.gnu.org>\n+\n+\tPR fortran/35892\n+\tPR fortran/35154\n+\t* trans-common.c (create_common):  Add decl to function\n+\tchain (if inside one) to preserve identifier scope in debug output.\n+\n 2008-04-25  Jan Hubicka  <jh@suse.cz>\n \n \t* trans-decl.c (trans_function_start): Update."}, {"sha": "5c91bf57946deade368b3f9297e074841790a4c7", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=da69cc9160391a75d646caf33d0c6a4074277646", "patch": "@@ -685,10 +685,14 @@ create_common (gfc_common_head *com, segment_info *head, bool saw_equiv)\n       /* This is a fake variable just for debugging purposes.  */\n       TREE_ASM_WRITTEN (var_decl) = 1;\n       \n-      if (com)\n+      /* To preserve identifier names in COMMON, chain to procedure\n+         scope unless at top level in a module definition.  */\n+      if (com\n+          && s->sym->ns->proc_name\n+          && s->sym->ns->proc_name->attr.flavor == FL_MODULE)\n \tvar_decl = pushdecl_top_level (var_decl);\n       else\n-\tgfc_add_decl_to_function (var_decl);\t\n+\tgfc_add_decl_to_function (var_decl);\n \n       SET_DECL_VALUE_EXPR (var_decl,\n \t\t\t   fold_build3 (COMPONENT_REF, TREE_TYPE (s->field),"}, {"sha": "3f4c66b5f2fc66ae709d4880529a7ba4c5cac253", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da69cc9160391a75d646caf33d0c6a4074277646", "patch": "@@ -1,3 +1,11 @@\n+2008-04-26  George Helffrich  <george@gcc.gnu.org>\n+\n+\tPRs fortran/PR35154, fortran/PR23057\n+        * gfortran.dg/debug/pr35154-stabs.f:  New test case for\n+        .stabs functionality.\n+        * gfortran.dg/debug/pr35154-dwarf2.f:  New test case for\n+        DWARF functionality.\n+  \n 2008-04-26  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* gcc.target/mips/gcc-have-sync-compare-and-swap-1.c: Expect"}, {"sha": "0203d134a629981187f49e616c0ececd5451f3ec", "filename": "gcc/testsuite/gfortran.dg/debug/pr35154-dwarf2.f", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-dwarf2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-dwarf2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-dwarf2.f?ref=da69cc9160391a75d646caf33d0c6a4074277646", "patch": "@@ -0,0 +1,37 @@\n+C     Test program for common block debugging.  G. Helffrich 11 July 2004.\n+C { dg-do compile }\n+C { dg-skip-if \"DWARF-2 only\" { \"*-*-*\" } { \"*\" } { \"-gdwarf-2\" } }\n+C { dg-options \"-dA\" }\n+      common i,j\n+      common /label/l,m\n+      i = 1\n+      j = 2\n+      k = 3\n+      l = 4\n+      m = 5\n+      call sub\n+      end\n+      subroutine sub\n+      common /label/l,m\n+      logical first\n+      save n\n+      data first /.true./\n+      if (first) then\n+         n = 0\n+\t first = .false.\n+      endif\n+      n = n + 1\n+      l = l + 1\n+      return\n+      end\n+\n+C { dg-final { scan-assembler \"(DIE.*DW_TAG_common_block)\" } }\n+C { dg-final { scan-assembler \"DW_AT_name: \\\"__BLNK__\\\"\" } }\n+C { dg-final { scan-assembler \"(DIE.*DW_TAG_member)\" } }\n+C { dg-final { scan-assembler \"\\\"i.*\\\".*DW_AT_name\" } }\n+C { dg-final { scan-assembler \"\\\"j.*\\\".*DW_AT_name\" } }\n+C { dg-final { scan-assembler \"(DIE.*DW_TAG_common_block)\" } }\n+C { dg-final { scan-assembler \"DW_AT_name: \\\"label\\\"\" } }\n+C { dg-final { scan-assembler \"(DIE.*DW_TAG_member)\" } }\n+C { dg-final { scan-assembler \"\\\"l.*\\\".*DW_AT_name\" } }\n+C { dg-final { scan-assembler \"\\\"m.*\\\".*DW_AT_name\" } }"}, {"sha": "7294771bd3ecde3be1c18780c537a34b6cfda732", "filename": "gcc/testsuite/gfortran.dg/debug/pr35154-stabs.f", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-stabs.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da69cc9160391a75d646caf33d0c6a4074277646/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-stabs.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-stabs.f?ref=da69cc9160391a75d646caf33d0c6a4074277646", "patch": "@@ -0,0 +1,35 @@\n+C     Test program for common block debugging.  G. Helffrich 11 July 2004.\n+C { dg-do compile }\n+C { dg-skip-if \"No stabs\" { mmix-*-* *-*-netware* alpha*-*-* hppa*64*-*-* ia64-*-* *-*-sysv5* *-*-vxworks* } { \"*\" } { \"\" } }\n+C { dg-skip-if \"No stabs\" {*-*-* } { \"*\" } { \"-gstabs\" } }\n+      common i,j\n+      common /label/l,m\n+      i = 1\n+      j = 2\n+      k = 3\n+      l = 4\n+      m = 5\n+      call sub\n+      end\n+      subroutine sub\n+      common /label/l,m\n+      logical first\n+      save n\n+      data first /.true./\n+      if (first) then\n+         n = 0\n+\t first = .false.\n+      endif\n+      n = n + 1\n+      l = l + 1\n+      return\n+      end\n+\n+C { dg-final { scan-assembler \".stabs.*\\\"__BLNK__\\\",226\" } }\n+C { dg-final { scan-assembler \".stabs.*\\\"i:V.*\\\",.*,0\" } }\n+C { dg-final { scan-assembler \".stabs.*\\\"j:V.*\\\",.*,4\" } }\n+C { dg-final { scan-assembler \".stabs.*\\\"__BLNK__\\\",228\" } }\n+C { dg-final { scan-assembler \".stabs.*\\\"label_\\\",226\" } }\n+C { dg-final { scan-assembler \".stabs.*\\\"l:V.*\\\",.*,0\" } }\n+C { dg-final { scan-assembler \".stabs.*\\\"m:V.*\\\",.*,4\" } }\n+C { dg-final { scan-assembler \".stabs.*\\\"label_\\\",228\" } }"}]}