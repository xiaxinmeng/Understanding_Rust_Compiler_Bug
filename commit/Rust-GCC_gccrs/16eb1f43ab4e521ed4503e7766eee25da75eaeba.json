{"sha": "16eb1f43ab4e521ed4503e7766eee25da75eaeba", "node_id": "C_kwDOANBUbNoAKDE2ZWIxZjQzYWI0ZTUyMWVkNDUwM2U3NzY2ZWVlMjVkYTc1ZWFlYmE", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2022-12-23T03:33:06Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-12-23T05:42:04Z"}, "message": "RISC-V: Fix vle constraints\n\ngcc/ChangeLog:\n\n\t* config/riscv/vector.md: Fix contraints.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vle-constraint-1.c: New test.", "tree": {"sha": "578ffb9a59bb8601cd2df6a0dd457daa707ec502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/578ffb9a59bb8601cd2df6a0dd457daa707ec502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16eb1f43ab4e521ed4503e7766eee25da75eaeba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16eb1f43ab4e521ed4503e7766eee25da75eaeba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16eb1f43ab4e521ed4503e7766eee25da75eaeba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16eb1f43ab4e521ed4503e7766eee25da75eaeba/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a143c3f7a61c61bb5a5e099fdb59f3adbf99b6b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a143c3f7a61c61bb5a5e099fdb59f3adbf99b6b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a143c3f7a61c61bb5a5e099fdb59f3adbf99b6b3"}], "stats": {"total": 125, "additions": 117, "deletions": 8}, "files": [{"sha": "6455aeeacf1df6c08aa01fcc176b29cc3601a0ba", "filename": "gcc/config/riscv/vector.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16eb1f43ab4e521ed4503e7766eee25da75eaeba/gcc%2Fconfig%2Friscv%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16eb1f43ab4e521ed4503e7766eee25da75eaeba/gcc%2Fconfig%2Friscv%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector.md?ref=16eb1f43ab4e521ed4503e7766eee25da75eaeba", "patch": "@@ -656,18 +656,18 @@\n ;;    2. (const_vector:VNx1SF repeat [\n ;;                (const_double:SF 0.0 [0x0.0p+0])]).\n (define_insn_and_split \"@pred_mov<mode>\"\n-  [(set (match_operand:V 0 \"nonimmediate_operand\"        \"=vd,  vr,     m,    vr,    vr\")\n+  [(set (match_operand:V 0 \"nonimmediate_operand\"          \"=vd,    vr,     m,    vr,    vr\")\n \t(if_then_else:V\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm, Wc1, vmWc1,   Wc1,   Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"    \" rK,  rK,    rK,    rK,    rK\")\n-\t     (match_operand 5 \"const_int_operand\"        \"  i,   i,     i,     i,     i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"  i,   i,     i,     i,     i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"  i,   i,     i,     i,     i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"vmWc1, vmWc1, vmWc1,   Wc1,   Wc1\")\n+\t     (match_operand 4 \"vector_length_operand\"    \"   rK,    rK,    rK,    rK,    rK\")\n+\t     (match_operand 5 \"const_int_operand\"        \"    i,     i,     i,     i,     i\")\n+\t     (match_operand 6 \"const_int_operand\"        \"    i,     i,     i,     i,     i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"    i,     i,     i,     i,     i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t  (match_operand:V 3 \"vector_move_operand\"       \"  m,   m,    vr,    vr, viWc0\")\n-\t  (match_operand:V 2 \"vector_merge_operand\"      \"  0,  vu,   vu0,   vu0,   vu0\")))]\n+\t  (match_operand:V 3 \"vector_move_operand\"       \"    m,     m,    vr,    vr, viWc0\")\n+\t  (match_operand:V 2 \"vector_merge_operand\"      \"    0,    vu,   vu0,   vu0,   vu0\")))]\n   \"TARGET_VECTOR\"\n   \"@\n    vle<sew>.v\\t%0,%3%p1"}, {"sha": "b7cf98bfd9fb7e4ed75a37789a431590cd560ee4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vle-constraint-1.c", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16eb1f43ab4e521ed4503e7766eee25da75eaeba/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvle-constraint-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16eb1f43ab4e521ed4503e7766eee25da75eaeba/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvle-constraint-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvle-constraint-1.c?ref=16eb1f43ab4e521ed4503e7766eee25da75eaeba", "patch": "@@ -0,0 +1,109 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n+\n+#include \"riscv_vector.h\"\n+\n+/*\n+** f1:\n+**\tvsetvli\\tzero,4,e32,m1,tu,ma\n+**\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvse32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f1 (float * in, float *out)\n+{\n+    vfloat32m1_t v = __riscv_vle32_v_f32m1 (in, 4);\n+    vfloat32m1_t v2 = __riscv_vle32_v_f32m1_tu (v, in, 4);\n+    __riscv_vse32_v_f32m1 (out, v2, 4);\n+}\n+\n+/*\n+** f2:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf4,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetvli\\tzero,4,e32,m1,ta,ma\n+**\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n+**\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f2 (float * in, float *out)\n+{\n+    vbool32_t mask = *(vbool32_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vfloat32m1_t v = __riscv_vle32_v_f32m1 (in, 4);\n+    vfloat32m1_t v2 = __riscv_vle32_v_f32m1_m (mask, in, 4);\n+    __riscv_vse32_v_f32m1 (out, v2, 4);\n+}\n+\n+/*\n+** f3:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf4,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetvli\\tzero,4,e32,m1,tu,mu\n+**\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n+**\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f3 (float * in, float *out)\n+{\n+    vbool32_t mask = *(vbool32_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vfloat32m1_t v = __riscv_vle32_v_f32m1 (in, 4);\n+    vfloat32m1_t v2 = __riscv_vle32_v_f32m1_tumu (mask, v, in, 4);\n+    __riscv_vse32_v_f32m1 (out, v2, 4);\n+}\n+\n+/*\n+** f4:\n+**\tvsetvli\\tzero,4,e8,mf8,tu,ma\n+**\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvse8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f4 (int8_t * in, int8_t *out)\n+{\n+    vint8mf8_t v = __riscv_vle8_v_i8mf8 (in, 4);\n+    vint8mf8_t v2 = __riscv_vle8_v_i8mf8_tu (v, in, 4);\n+    __riscv_vse8_v_i8mf8 (out, v2, 4);\n+}\n+\n+/*\n+** f5:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf8,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetvli\\tzero,4,e8,mf8,ta,ma\n+**\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n+**\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f5 (int8_t * in, int8_t *out)\n+{\n+    vbool64_t mask = *(vbool64_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vint8mf8_t v = __riscv_vle8_v_i8mf8 (in, 4);\n+    vint8mf8_t v2 = __riscv_vle8_v_i8mf8_m (mask, in, 4);\n+    __riscv_vse8_v_i8mf8 (out, v2, 4);\n+}\n+\n+/*\n+** f6:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf8,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetvli\\tzero,4,e8,mf8,tu,mu\n+**\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n+**\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f6 (int8_t * in, int8_t *out)\n+{\n+    vbool64_t mask = *(vbool64_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vint8mf8_t v = __riscv_vle8_v_i8mf8 (in, 4);\n+    vint8mf8_t v2 = __riscv_vle8_v_i8mf8_tumu (mask, v, in, 4);\n+    __riscv_vse8_v_i8mf8 (out, v2, 4);\n+}"}]}