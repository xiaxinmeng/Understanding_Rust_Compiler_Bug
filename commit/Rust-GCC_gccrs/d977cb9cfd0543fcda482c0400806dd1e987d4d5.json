{"sha": "d977cb9cfd0543fcda482c0400806dd1e987d4d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk3N2NiOWNmZDA1NDNmY2RhNDgyYzA0MDA4MDZkZDFlOTg3ZDRkNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-10T11:54:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-10T11:54:14Z"}, "message": "re PR c/43007 (No longer folds (unsigned int) ((long long unsigned int) spi_bias / 1008))\n\n2010-02-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR c/43007\n\t* tree.c (get_unwidened): Handle constants.\n\t* convert.c (convert_to_integer): Handle TRUNC_DIV_EXPR.\n\n\t* gcc.c-torture/execute/20100209-1.c: New testcase.\n\t* gcc.dg/fold-div-3.c: Likewise.\n\nFrom-SVN: r156653", "tree": {"sha": "6113ddc6064eef820caaf65171d7e8681efc3368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6113ddc6064eef820caaf65171d7e8681efc3368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d977cb9cfd0543fcda482c0400806dd1e987d4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d977cb9cfd0543fcda482c0400806dd1e987d4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d977cb9cfd0543fcda482c0400806dd1e987d4d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d977cb9cfd0543fcda482c0400806dd1e987d4d5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "563cb662c833b2233b5682bcc55e99cf584de1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563cb662c833b2233b5682bcc55e99cf584de1a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/563cb662c833b2233b5682bcc55e99cf584de1a4"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "ce3d0868de0f3c9a6733a5a14e87a48e83ba2ad5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d977cb9cfd0543fcda482c0400806dd1e987d4d5", "patch": "@@ -1,3 +1,9 @@\n+2010-02-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c/43007\n+\t* tree.c (get_unwidened): Handle constants.\n+\t* convert.c (convert_to_integer): Handle TRUNC_DIV_EXPR.\n+\n 2010-02-10  Martin Jambor  <mjambor@suse.cz>\n \n \tPR lto/42985"}, {"sha": "39fbd4d4fa5c34ff32f6f8c1e8a55e7aab806c49", "filename": "gcc/convert.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=d977cb9cfd0543fcda482c0400806dd1e987d4d5", "patch": "@@ -673,6 +673,31 @@ convert_to_integer (tree type, tree expr)\n \t    }\n \t  break;\n \n+\tcase TRUNC_DIV_EXPR:\n+\t  {\n+\t    tree arg0 = get_unwidened (TREE_OPERAND (expr, 0), type);\n+\t    tree arg1 = get_unwidened (TREE_OPERAND (expr, 1), type);\n+\n+\t    /* Don't distribute unless the output precision is at least as big\n+\t       as the actual inputs and it has the same signedness.  */\n+\t    if (outprec >= TYPE_PRECISION (TREE_TYPE (arg0))\n+\t\t&& outprec >= TYPE_PRECISION (TREE_TYPE (arg1))\n+\t\t/* If signedness of arg0 and arg1 don't match,\n+\t\t   we can't necessarily find a type to compare them in.  */\n+\t\t&& (TYPE_UNSIGNED (TREE_TYPE (arg0))\n+\t\t    == TYPE_UNSIGNED (TREE_TYPE (arg1)))\n+\t\t/* Do not change the sign of the division.  */\n+\t\t&& (TYPE_UNSIGNED (TREE_TYPE (expr))\n+\t\t    == TYPE_UNSIGNED (TREE_TYPE (arg0)))\n+\t\t/* Either require unsigned division or a division by\n+\t\t   a constant that is not -1.  */\n+\t\t&& (TYPE_UNSIGNED (TREE_TYPE (arg0))\n+\t\t    || (TREE_CODE (arg1) == INTEGER_CST\n+\t\t\t&& !integer_all_onesp (arg1))))\n+\t      goto trunc1;\n+\t    break;\n+\t  }\n+\n \tcase MAX_EXPR:\n \tcase MIN_EXPR:\n \tcase MULT_EXPR:"}, {"sha": "273636cf297143dedbfd7f3aa8ea90aebaee2159", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d977cb9cfd0543fcda482c0400806dd1e987d4d5", "patch": "@@ -1,3 +1,9 @@\n+2010-02-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c/43007\n+\t* gcc.c-torture/execute/20100209-1.c: New testcase.\n+\t* gcc.dg/fold-div-3.c: Likewise.\n+\n 2010-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/builtin-ffs-1.c: New test."}, {"sha": "bf0597b2d4720b48e35c8ce44c1083f51fef911f", "filename": "gcc/testsuite/gcc.c-torture/execute/20100209-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20100209-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20100209-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20100209-1.c?ref=d977cb9cfd0543fcda482c0400806dd1e987d4d5", "patch": "@@ -0,0 +1,12 @@\n+int bar(int foo)\n+{\n+  return (int)(((unsigned long long)(long long)foo) / 8);\n+}\n+extern void abort (void);\n+int main()\n+{\n+  if (sizeof (long long) > sizeof (int)\n+      && bar(-1) != -1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "2e78757fa725c15386556796a1790ec137d1ddf5", "filename": "gcc/testsuite/gcc.dg/fold-div-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-div-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-div-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-div-3.c?ref=d977cb9cfd0543fcda482c0400806dd1e987d4d5", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-original\" } */\n+\n+unsigned int\n+apply_frontend_param (unsigned int spi_bias)\n+{\n+  static const int ppm = 8000;\n+  spi_bias /= 1000ULL + ppm/1000;\n+  return spi_bias;\n+}\n+\n+/* Make sure we perform the division in the narrower type.  */\n+\n+/* { dg-final { scan-tree-dump \"spi_bias = spi_bias / 1008;\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "c51cca7d6f76dcb0e7f08357838e4c006c716103", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d977cb9cfd0543fcda482c0400806dd1e987d4d5/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=d977cb9cfd0543fcda482c0400806dd1e987d4d5", "patch": "@@ -7623,6 +7623,14 @@ get_unwidened (tree op, tree for_type)\n \t}\n     }\n \n+  /* If we finally reach a constant see if it fits in for_type and\n+     in that case convert it.  */\n+  if (for_type\n+      && TREE_CODE (win) == INTEGER_CST\n+      && TREE_TYPE (win) != for_type\n+      && int_fits_type_p (win, for_type))\n+    win = fold_convert (for_type, win);\n+\n   return win;\n }\n \f"}]}