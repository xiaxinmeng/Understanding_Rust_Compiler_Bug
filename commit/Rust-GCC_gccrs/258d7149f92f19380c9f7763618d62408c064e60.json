{"sha": "258d7149f92f19380c9f7763618d62408c064e60", "node_id": "C_kwDOANBUbNoAKDI1OGQ3MTQ5ZjkyZjE5MzgwYzlmNzc2MzYxOGQ2MjQwOGMwNjRlNjA", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-23T01:46:46Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-23T01:47:49Z"}, "message": "configure: Implement --enable-host-bind-now\n\nAs promised in the --enable-host-pie patch, this patch adds another\nconfigure option, --enable-host-bind-now, which adds -z now when linking\nthe compiler executables in order to extend hardening.  BIND_NOW with RELRO\nallows the GOT to be marked RO; this prevents GOT modification attacks.\n\nThis option does not affect linking of target libraries; you can use\nLDFLAGS_FOR_TARGET=-Wl,-z,relro,-z,now to enable RELRO/BIND_NOW.\n\nc++tools/ChangeLog:\n\n\t* configure.ac (--enable-host-bind-now): New check.\n\t* configure: Regenerate.\n\ngcc/ChangeLog:\n\n\t* configure.ac (--enable-host-bind-now): New check.  Add\n\t-Wl,-z,now to LD_PICFLAG if --enable-host-bind-now.\n\t* configure: Regenerate.\n\t* doc/install.texi: Document --enable-host-bind-now.\n\nlto-plugin/ChangeLog:\n\n\t* configure.ac (--enable-host-bind-now): New check.  Link with\n\t-z,now.\n\t* configure: Regenerate.", "tree": {"sha": "9549da576a7db4013d5352370daa4d3ab39269f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9549da576a7db4013d5352370daa4d3ab39269f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/258d7149f92f19380c9f7763618d62408c064e60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258d7149f92f19380c9f7763618d62408c064e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258d7149f92f19380c9f7763618d62408c064e60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258d7149f92f19380c9f7763618d62408c064e60/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "251c72a68af3a8b0638705b73ef120ffdf0053eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251c72a68af3a8b0638705b73ef120ffdf0053eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251c72a68af3a8b0638705b73ef120ffdf0053eb"}], "stats": {"total": 88, "additions": 83, "deletions": 5}, "files": [{"sha": "006efe07b35432c67479ccc253dbc1f8cdd52120", "filename": "c++tools/configure", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258d7149f92f19380c9f7763618d62408c064e60/c%2B%2Btools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258d7149f92f19380c9f7763618d62408c064e60/c%2B%2Btools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure?ref=258d7149f92f19380c9f7763618d62408c064e60", "patch": "@@ -628,6 +628,7 @@ EGREP\n GREP\n CXXCPP\n LD_PICFLAG\n+enable_host_bind_now\n PICFLAG\n MAINTAINER\n CXX_AUX_TOOLS\n@@ -702,6 +703,7 @@ enable_maintainer_mode\n enable_checking\n enable_default_pie\n enable_host_pie\n+enable_host_bind_now\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1336,6 +1338,7 @@ Optional Features:\n                           yes,no,all,none,release.\n   --enable-default-pie    enable Position Independent Executable as default\n   --enable-host-pie       build host code as PIE\n+  --enable-host-bind-now  link host code as BIND_NOW\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -3007,6 +3010,14 @@ fi\n \n \n \n+# Enable --enable-host-bind-now\n+# Check whether --enable-host-bind-now was given.\n+if test \"${enable_host_bind_now+set}\" = set; then :\n+  enableval=$enable_host_bind_now; LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"\n+fi\n+\n+\n+\n \n # Check if O_CLOEXEC is defined by fcntl\n "}, {"sha": "d3f23f66f00b84eb1ed908414bb72c102050a03e", "filename": "c++tools/configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258d7149f92f19380c9f7763618d62408c064e60/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258d7149f92f19380c9f7763618d62408c064e60/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=258d7149f92f19380c9f7763618d62408c064e60", "patch": "@@ -110,6 +110,13 @@ AC_ARG_ENABLE(host-pie,\n \t\t[build host code as PIE])],\n [PICFLAG=-fPIE; LD_PICFLAG=-pie], [])\n AC_SUBST(PICFLAG)\n+\n+# Enable --enable-host-bind-now\n+AC_ARG_ENABLE(host-bind-now,\n+[AS_HELP_STRING([--enable-host-bind-now],\n+       [link host code as BIND_NOW])],\n+[LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"], [])\n+AC_SUBST(enable_host_bind_now)\n AC_SUBST(LD_PICFLAG)\n \n # Check if O_CLOEXEC is defined by fcntl"}, {"sha": "c45f5367d197c39de2a30f8697c22468b5f26525", "filename": "gcc/configure", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258d7149f92f19380c9f7763618d62408c064e60/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258d7149f92f19380c9f7763618d62408c064e60/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=258d7149f92f19380c9f7763618d62408c064e60", "patch": "@@ -635,6 +635,7 @@ CET_HOST_FLAGS\n LD_PICFLAG\n PICFLAG\n enable_default_pie\n+enable_host_bind_now\n enable_host_pie\n enable_host_shared\n enable_plugin\n@@ -1026,6 +1027,7 @@ enable_version_specific_runtime_libs\n enable_plugin\n enable_host_shared\n enable_host_pie\n+enable_host_bind_now\n enable_libquadmath_support\n with_linker_hash_style\n with_diagnostics_color\n@@ -1789,6 +1791,7 @@ Optional Features:\n   --enable-plugin         enable plugin support\n   --enable-host-shared    build host code as shared libraries\n   --enable-host-pie       build host code as PIE\n+  --enable-host-bind-now  link host code as BIND_NOW\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n   --enable-default-pie    enable Position Independent Executable as default\n@@ -19712,7 +19715,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19727 \"configure\"\n+#line 19730 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19818,7 +19821,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19833 \"configure\"\n+#line 19836 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -31960,6 +31963,14 @@ fi\n \n \n \n+# Enable --enable-host-bind-now\n+# Check whether --enable-host-bind-now was given.\n+if test \"${enable_host_bind_now+set}\" = set; then :\n+  enableval=$enable_host_bind_now;\n+fi\n+\n+\n+\n # Check whether --enable-libquadmath-support was given.\n if test \"${enable_libquadmath_support+set}\" = set; then :\n   enableval=$enable_libquadmath_support; ENABLE_LIBQUADMATH_SUPPORT=$enableval\n@@ -32146,6 +32157,8 @@ else\n   PICFLAG=\n fi\n \n+\n+\n if test x$enable_host_pie = xyes; then\n   LD_PICFLAG=-pie\n elif test x$gcc_cv_no_pie = xyes; then\n@@ -32154,6 +32167,9 @@ else\n   LD_PICFLAG=\n fi\n \n+if test x$enable_host_bind_now = xyes; then\n+  LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"\n+fi\n \n \n "}, {"sha": "da95b611c6643af20e76fff37860362e14fb9e94", "filename": "gcc/configure.ac", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258d7149f92f19380c9f7763618d62408c064e60/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258d7149f92f19380c9f7763618d62408c064e60/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=258d7149f92f19380c9f7763618d62408c064e60", "patch": "@@ -7373,6 +7373,12 @@ AC_ARG_ENABLE(host-pie,\n \t\t[build host code as PIE])])\n AC_SUBST(enable_host_pie)\n \n+# Enable --enable-host-bind-now\n+AC_ARG_ENABLE(host-bind-now,\n+[AS_HELP_STRING([--enable-host-bind-now],\n+\t\t[link host code as BIND_NOW])])\n+AC_SUBST(enable_host_bind_now)\n+\n AC_ARG_ENABLE(libquadmath-support,\n [AS_HELP_STRING([--disable-libquadmath-support],\n   [disable libquadmath support for Fortran])],\n@@ -7514,6 +7520,8 @@ else\n   PICFLAG=\n fi\n \n+AC_SUBST([PICFLAG])\n+\n if test x$enable_host_pie = xyes; then\n   LD_PICFLAG=-pie\n elif test x$gcc_cv_no_pie = xyes; then\n@@ -7522,7 +7530,10 @@ else\n   LD_PICFLAG=\n fi\n \n-AC_SUBST([PICFLAG])\n+if test x$enable_host_bind_now = xyes; then\n+  LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"\n+fi\n+\n AC_SUBST([LD_PICFLAG])\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled."}, {"sha": "ac36e9aff4c1a80b8d43ee275e17cfee99053de4", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258d7149f92f19380c9f7763618d62408c064e60/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258d7149f92f19380c9f7763618d62408c064e60/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=258d7149f92f19380c9f7763618d62408c064e60", "patch": "@@ -1046,6 +1046,12 @@ protection against Return Oriented Programming (ROP) attacks.\n in which case @option{-fPIC} is used when compiling, and @option{-pie} when\n linking.\n \n+@item --enable-host-bind-now\n+Specify that the @emph{host} executables should be linked with the option\n+@option{-Wl,-z,now}, which means that the dynamic linker will resolve all\n+symbols when the executables are started, and that in turn allows RELRO to\n+mark the GOT read-only, resulting in better security.\n+\n @item @anchor{with-gnu-as}--with-gnu-as\n Specify that the compiler should assume that the\n assembler it finds is the GNU assembler.  However, this does not modify"}, {"sha": "3467defd416451613f86fda288755fc7cb94e054", "filename": "lto-plugin/configure", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258d7149f92f19380c9f7763618d62408c064e60/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258d7149f92f19380c9f7763618d62408c064e60/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=258d7149f92f19380c9f7763618d62408c064e60", "patch": "@@ -663,6 +663,7 @@ accel_dir_suffix\n gcc_build_dir\n CET_HOST_FLAGS\n ac_lto_plugin_ldflags\n+enable_host_bind_now\n ac_lto_plugin_warn_cflags\n EGREP\n GREP\n@@ -778,6 +779,7 @@ enable_maintainer_mode\n with_libiberty\n enable_dependency_tracking\n enable_largefile\n+enable_host_bind_now\n enable_cet\n with_gcc_major_version_only\n enable_shared\n@@ -1425,6 +1427,7 @@ Optional Features:\n   --disable-dependency-tracking\n                           speeds up one-time build\n   --disable-largefile     omit support for large files\n+  --enable-host-bind-now  link host code as BIND_NOW\n   --enable-cet            enable Intel CET in host libraries [default=auto]\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n@@ -5669,6 +5672,19 @@ if test \"x$have_static_libgcc\" = xyes; then\n    ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"\n fi\n \n+# Enable --enable-host-bind-now\n+# Check whether --enable-host-bind-now was given.\n+if test \"${enable_host_bind_now+set}\" = set; then :\n+  enableval=$enable_host_bind_now;\n+fi\n+\n+\n+\n+if test x$enable_host_bind_now = xyes; then\n+  ac_lto_plugin_ldflags=\"$ac_lto_plugin_ldflags -Wl,-z,now\"\n+fi\n+\n+\n \n  # Check whether --enable-cet was given.\n if test \"${enable_cet+set}\" = set; then :\n@@ -12134,7 +12150,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12137 \"configure\"\n+#line 12165 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12240,7 +12256,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12243 \"configure\"\n+#line 12271 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "84f2a60b4800c4c45c37f958bc3113dbaa173306", "filename": "lto-plugin/configure.ac", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258d7149f92f19380c9f7763618d62408c064e60/lto-plugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258d7149f92f19380c9f7763618d62408c064e60/lto-plugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure.ac?ref=258d7149f92f19380c9f7763618d62408c064e60", "patch": "@@ -25,6 +25,17 @@ LDFLAGS=\"$saved_LDFLAGS\"\n if test \"x$have_static_libgcc\" = xyes; then\n    ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"\n fi\n+\n+# Enable --enable-host-bind-now\n+AC_ARG_ENABLE(host-bind-now,\n+[AS_HELP_STRING([--enable-host-bind-now],\n+       [link host code as BIND_NOW])])\n+AC_SUBST(enable_host_bind_now)\n+\n+if test x$enable_host_bind_now = xyes; then\n+  ac_lto_plugin_ldflags=\"$ac_lto_plugin_ldflags -Wl,-z,now\"\n+fi\n+\n AC_SUBST(ac_lto_plugin_ldflags)\n \n GCC_CET_HOST_FLAGS(CET_HOST_FLAGS)"}]}