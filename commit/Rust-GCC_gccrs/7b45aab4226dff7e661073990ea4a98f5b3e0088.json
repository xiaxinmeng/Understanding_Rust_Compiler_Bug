{"sha": "7b45aab4226dff7e661073990ea4a98f5b3e0088", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I0NWFhYjQyMjZkZmY3ZTY2MTA3Mzk5MGVhNGE5OGY1YjNlMDA4OA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2005-02-12T06:12:40Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2005-02-12T06:12:40Z"}, "message": "re PR java/15543 (\"jv-scan --complexity\" segfaults)\n\n\n\tPR java/15543\n\t* parse-scan.y (input_location): Remove variable.\n\t(main_input_filename): New - replaces input_filename, which isn't\n\tsettable if USE_MAPPED_LOCATION.\n\t* lex.c (java_init_lex): Wrap some more places in #ifndef JC1-LITE,\n\tso we don't reference input_location or wfl_operator in that case.\n\t* jv-scan.c (expand_location): Remove - no longer used.\n\t(main): Set main_input_filename rather than input_filename.\n\nFrom-SVN: r94928", "tree": {"sha": "8d7d8e61dc84237fee9ab7693129f6afe61f17c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d7d8e61dc84237fee9ab7693129f6afe61f17c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b45aab4226dff7e661073990ea4a98f5b3e0088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b45aab4226dff7e661073990ea4a98f5b3e0088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b45aab4226dff7e661073990ea4a98f5b3e0088", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b45aab4226dff7e661073990ea4a98f5b3e0088/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c"}], "stats": {"total": 58, "additions": 23, "deletions": 35}, "files": [{"sha": "a1002f15b31167896e287b18985fb9baf70ad5c4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7b45aab4226dff7e661073990ea4a98f5b3e0088", "patch": "@@ -1,3 +1,14 @@\n+2005-02-11  Per Bothner  <per@bothner.com>\n+\n+\tPR java/15543\n+\t* parse-scan.y (input_location): Remove variable.\n+\t(main_input_filename): New - replaces input_filename, which isn't\n+\tsettable if USE_MAPPED_LOCATION.\n+\t* lex.c (java_init_lex): Wrap some more places in #ifndef JC1-LITE,\n+\tso we don't reference input_location or wfl_operator in that case.\n+\t* jv-scan.c (expand_location): Remove - no longer used.\n+\t(main): Set main_input_filename rather than input_filename.\n+\n 2005-02-09  Richard Henderson  <rth@redhat.com>\n \n \t* builtins.c (initialize_builtins): Call build_common_builtin_nodes."}, {"sha": "b7b8809b1172940fa3cfb22ed3fb51c5f734d47f", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=7b45aab4226dff7e661073990ea4a98f5b3e0088", "patch": "@@ -131,29 +131,6 @@ version (void)\n   exit (0);\n }\n \n-#ifdef USE_MAPPED_LOCATION\n-/* FIXME - this is the same as the function in tree.c, which is awkward.\n-   Probably the cleanest solution is to move the function to line-map.c.\n-   This is difficult as long as we still support --disable-mapped-location,\n-   since whether expanded_location has a column fields depends on\n-   USE_MAPPED_LOCATION. */\n-\n-expanded_location\n-expand_location (source_location loc)\n-{\n-  expanded_location xloc;\n-  if (loc == 0) { xloc.file = NULL; xloc.line = 0;  xloc.column = 0; }\n-  else\n-    {\n-      const struct line_map *map = linemap_lookup (&line_table, loc);\n-      xloc.file = map->to_file;\n-      xloc.line = SOURCE_LINE (map, loc);\n-      xloc.column = SOURCE_COLUMN (map, loc);\n-    };\n-  return xloc;\n-}\n-#endif\n-\n /* jc1-lite main entry point */\n int\n main (int argc, char **argv)\n@@ -237,8 +214,7 @@ main (int argc, char **argv)\n \t    if (encoding == NULL || *encoding == '\\0')\n \t      encoding = DEFAULT_ENCODING;\n \n-            input_filename = filename;\n-            input_line = 0;\n+            main_input_filename = filename;\n \t    java_init_lex (finput, encoding);\n \t    ctxp->filename = filename;\n \t    yyparse ();"}, {"sha": "d0a8f93e49501783270174fe2577d9217648bbf4", "filename": "gcc/java/lex.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=7b45aab4226dff7e661073990ea4a98f5b3e0088", "patch": "@@ -108,10 +108,12 @@ java_init_lex (FILE *finput, const char *encoding)\n \n   if (!wfl_operator)\n     {\n+#ifndef JC1_LITE\n #ifdef USE_MAPPED_LOCATION\n       wfl_operator = build_expr_wfl (NULL_TREE, input_location);\n #else\n       wfl_operator = build_expr_wfl (NULL_TREE, ctxp->filename, 0, 0);\n+#endif\n #endif\n     }\n   if (!label_id)\n@@ -134,7 +136,9 @@ java_init_lex (FILE *finput, const char *encoding)\n   ctxp->package = NULL_TREE;\n #endif\n \n+#ifndef JC1_LITE\n   ctxp->save_location = input_location;\n+#endif\n   ctxp->java_error_flag = 0;\n   ctxp->lexer = java_new_lexer (finput, encoding);\n }\n@@ -1471,28 +1475,28 @@ do_java_lex (YYSTYPE *java_lval)\n #ifndef JC1_LITE\n       java_lval->operator.token = OCB_TK;\n       java_lval->operator.location = BUILD_LOCATION();\n-#endif\n #ifdef USE_MAPPED_LOCATION\n       if (ctxp->ccb_indent == 1)\n \tctxp->first_ccb_indent1 = input_location;\n #else\n       if (ctxp->ccb_indent == 1)\n \tctxp->first_ccb_indent1 = input_line;\n+#endif\n #endif\n       ctxp->ccb_indent++;\n       return OCB_TK;\n     case '}':\n+      ctxp->ccb_indent--;\n #ifndef JC1_LITE\n       java_lval->operator.token = CCB_TK;\n       java_lval->operator.location = BUILD_LOCATION();\n-#endif\n-      ctxp->ccb_indent--;\n #ifdef USE_MAPPED_LOCATION\n       if (ctxp->ccb_indent == 1)\n         ctxp->last_ccb_indent1 = input_location;\n #else\n       if (ctxp->ccb_indent == 1)\n         ctxp->last_ccb_indent1 = input_line;\n+#endif\n #endif\n       return CCB_TK;\n     case '[':"}, {"sha": "2e020c800e1f0b155615f10be562ef04cf1b2ac6", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b45aab4226dff7e661073990ea4a98f5b3e0088/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=7b45aab4226dff7e661073990ea4a98f5b3e0088", "patch": "@@ -42,15 +42,12 @@ definitions and other extensions.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"input.h\"\n #include \"obstack.h\"\n #include \"toplev.h\"\n \n extern FILE *finput, *out;\n  \n-/* Current position in real source file.  */\n-\n-location_t input_location;\n+ const char *main_input_filename;\n \n /* Obstack for the lexer.  */\n struct obstack temporary_obstack;\n@@ -1295,7 +1292,7 @@ report_class_declaration (const char * name)\n       if (!previous_output)\n \t{\n \t  if (flag_list_filename)\n-\t    fprintf (out, \"%s: \", input_filename);\n+\t    fprintf (out, \"%s: \", main_input_filename);\n \t  previous_output = 1;\n \t}\n \n@@ -1340,7 +1337,7 @@ report (void)\n {\n   extern int flag_complexity;\n   if (flag_complexity)\n-    fprintf (out, \"%s %d\\n\", input_filename, complexity);\n+    fprintf (out, \"%s %d\\n\", main_input_filename, complexity);\n }\n \n /* Reset global status used by the report functions.  */\n@@ -1357,7 +1354,7 @@ reset_report (void)\n void\n yyerror (const char *msg ATTRIBUTE_UNUSED)\n {\n-  fprintf (stderr, \"%s: %d: %s\\n\", input_filename, input_line, msg);\n+  fprintf (stderr, \"%s: %s\\n\", main_input_filename, msg);\n   exit (1);\n }\n "}]}