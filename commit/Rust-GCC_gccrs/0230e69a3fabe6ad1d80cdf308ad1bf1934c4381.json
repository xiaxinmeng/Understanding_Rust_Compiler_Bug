{"sha": "0230e69a3fabe6ad1d80cdf308ad1bf1934c4381", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIzMGU2OWEzZmFiZTZhZDFkODBjZGYzMDhhZDFiZjE5MzRjNDM4MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-23T13:37:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-23T14:30:16Z"}, "message": "ipa/97565 - fix IPA PTA body availability check\n\nLooks like the existing check using has_gimple_body_p isn't enough\nat LTRANS time but I need to check in_other_partition as well.\n\n2021-08-23  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/97565\n\t* tree-ssa-structalias.c (ipa_pta_execute): Check in_other_partition\n\tin addition to has_gimple_body.\n\n\t* g++.dg/lto/pr97565_0.C: New testcase.\n\t* g++.dg/lto/pr97565_1.C: Likewise.", "tree": {"sha": "53aa9d1fdd3cfee992fced8f713f9ea227ae998f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53aa9d1fdd3cfee992fced8f713f9ea227ae998f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39baa886bcfa95c06d30a0978aa83f33fcd49745", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39baa886bcfa95c06d30a0978aa83f33fcd49745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39baa886bcfa95c06d30a0978aa83f33fcd49745"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "f4572e17bf538261348f9459ca9e411276bcb2e1", "filename": "gcc/testsuite/g++.dg/lto/pr97565_0.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr97565_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr97565_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr97565_0.C?ref=0230e69a3fabe6ad1d80cdf308ad1bf1934c4381", "patch": "@@ -0,0 +1,7 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { \"-O -flto -fipa-pta\" } }\n+\n+extern \"C\" void abort(void)\n+{\n+  abort();\n+}"}, {"sha": "ff7b638e9c56a4371c9e860dde798f55eff8cd16", "filename": "gcc/testsuite/g++.dg/lto/pr97565_1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr97565_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr97565_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr97565_1.C?ref=0230e69a3fabe6ad1d80cdf308ad1bf1934c4381", "patch": "@@ -0,0 +1,6 @@\n+extern \"C\" void abort(void);\n+\n+int main(int argc, char * argv[])\n+{\n+  abort();\n+}"}, {"sha": "c4308551d1bff5bf7f5e434860d4bbfe4da8a525", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0230e69a3fabe6ad1d80cdf308ad1bf1934c4381/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=0230e69a3fabe6ad1d80cdf308ad1bf1934c4381", "patch": "@@ -8220,10 +8220,12 @@ ipa_pta_execute (void)\n   FOR_EACH_DEFINED_FUNCTION (node)\n     {\n       varinfo_t vi;\n-      /* Nodes without a body are not interesting.  Especially do not\n-         visit clones at this point for now - we get duplicate decls\n-\t there for inline clones at least.  */\n-      if (!node->has_gimple_body_p () || node->inlined_to)\n+      /* Nodes without a body in this partition are not interesting.\n+\t Especially do not visit clones at this point for now - we\n+\t get duplicate decls there for inline clones at least.  */\n+      if (!node->has_gimple_body_p ()\n+\t  || node->in_other_partition\n+\t  || node->inlined_to)\n \tcontinue;\n       node->get_body ();\n \n@@ -8301,8 +8303,10 @@ ipa_pta_execute (void)\n       struct function *func;\n       basic_block bb;\n \n-      /* Nodes without a body are not interesting.  */\n-      if (!node->has_gimple_body_p () || node->clone_of)\n+      /* Nodes without a body in this partition are not interesting.  */\n+      if (!node->has_gimple_body_p ()\n+\t  || node->in_other_partition\n+\t  || node->clone_of)\n \tcontinue;\n \n       if (dump_file)\n@@ -8431,8 +8435,10 @@ ipa_pta_execute (void)\n       unsigned i;\n       basic_block bb;\n \n-      /* Nodes without a body are not interesting.  */\n-      if (!node->has_gimple_body_p () || node->clone_of)\n+      /* Nodes without a body in this partition are not interesting.  */\n+      if (!node->has_gimple_body_p ()\n+\t  || node->in_other_partition\n+\t  || node->clone_of)\n \tcontinue;\n \n       fn = DECL_STRUCT_FUNCTION (node->decl);"}]}