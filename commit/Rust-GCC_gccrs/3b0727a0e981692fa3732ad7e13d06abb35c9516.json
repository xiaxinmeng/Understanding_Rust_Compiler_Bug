{"sha": "3b0727a0e981692fa3732ad7e13d06abb35c9516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IwNzI3YTBlOTgxNjkyZmEzNzMyYWQ3ZTEzZDA2YWJiMzVjOTUxNg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2004-08-03T20:33:23Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-08-03T20:33:23Z"}, "message": "aclocal.m4 (gcc_AC_FUNC_MMAP_BLACKLIST): Check for <sys/mman.h> and mmap() explicitly instead of relying on preset...\n\n2004-07-30  Maciej W. Rozycki  <macro@linux-mips.org>\n\n\t* aclocal.m4 (gcc_AC_FUNC_MMAP_BLACKLIST): Check for <sys/mman.h>\n\tand mmap() explicitly instead of relying on preset autoconf cache\n\tvariables.\n\t* configure: Regenerate.\n\nFrom-SVN: r85498", "tree": {"sha": "5d0b79312956dbb5c464f4a1d69e27b0ec2f6ebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d0b79312956dbb5c464f4a1d69e27b0ec2f6ebe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b0727a0e981692fa3732ad7e13d06abb35c9516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0727a0e981692fa3732ad7e13d06abb35c9516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b0727a0e981692fa3732ad7e13d06abb35c9516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0727a0e981692fa3732ad7e13d06abb35c9516/comments", "author": null, "committer": null, "parents": [{"sha": "f6bc51cbc49e3a9dd714a5291dcb29e928a6af74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bc51cbc49e3a9dd714a5291dcb29e928a6af74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6bc51cbc49e3a9dd714a5291dcb29e928a6af74"}], "stats": {"total": 164, "additions": 160, "deletions": 4}, "files": [{"sha": "4c306f4e356ebb5d957d793df3e57f87ab836fd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0727a0e981692fa3732ad7e13d06abb35c9516/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0727a0e981692fa3732ad7e13d06abb35c9516/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b0727a0e981692fa3732ad7e13d06abb35c9516", "patch": "@@ -1,3 +1,10 @@\n+2004-07-30  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* aclocal.m4 (gcc_AC_FUNC_MMAP_BLACKLIST): Check for <sys/mman.h> \n+\tand mmap() explicitly instead of relying on preset autoconf cache \n+\tvariables.\n+\t* configure: Regenerate.\n+\n 2004-08-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/16570\n@@ -21,6 +28,7 @@\n \n \t* config/i386/gmm_malloc.h: New file.\n \n+>>>>>>> 2.4781\n 2004-08-03  Dale Johannesen  <dalej@apple.com>\n \n \t* config/rs6000/rs6000.c (machopic_output_stub):  Align Darwin stubs."}, {"sha": "6f1679e009a53f6b925784d4091cbc1d1023d805", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0727a0e981692fa3732ad7e13d06abb35c9516/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0727a0e981692fa3732ad7e13d06abb35c9516/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=3b0727a0e981692fa3732ad7e13d06abb35c9516", "patch": "@@ -269,8 +269,12 @@ AC_SUBST($1)dnl\n # mmap(2) blacklisting.  Some platforms provide the mmap library routine\n # but don't support all of the features we need from it.\n AC_DEFUN([gcc_AC_FUNC_MMAP_BLACKLIST],\n-[if test $ac_cv_header_sys_mman_h != yes \\\n- || test $ac_cv_func_mmap != yes; then\n+[\n+AC_CHECK_HEADER([sys/mman.h],\n+\t\t[gcc_header_sys_mman_h=yes], [gcc_header_sys_mman_h=no])\n+AC_CHECK_FUNC([mmap], [gcc_func_mmap=yes], [gcc_func_mmap=no])\n+if test \"$gcc_header_sys_mman_h\" != yes \\\n+ || test \"$gcc_func_mmap\" != yes; then\n    gcc_cv_func_mmap_file=no\n    gcc_cv_func_mmap_dev_zero=no\n    gcc_cv_func_mmap_anon=no"}, {"sha": "af7056d9528d6e84c8d5efb5b1a271d37248fe01", "filename": "gcc/configure", "status": "modified", "additions": 146, "deletions": 2, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b0727a0e981692fa3732ad7e13d06abb35c9516/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b0727a0e981692fa3732ad7e13d06abb35c9516/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=3b0727a0e981692fa3732ad7e13d06abb35c9516", "patch": "@@ -7265,8 +7265,152 @@ _ACEOF\n \n fi\n \n-if test $ac_cv_header_sys_mman_h != yes \\\n- || test $ac_cv_func_mmap != yes; then\n+\n+echo \"$as_me:$LINENO: checking for sys/mman.h\" >&5\n+echo $ECHO_N \"checking for sys/mman.h... $ECHO_C\" >&6\n+if test \"${ac_cv_header_sys_mman_h+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <sys/mman.h>\n+_ACEOF\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n+  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } >/dev/null; then\n+  if test -s conftest.err; then\n+    ac_cpp_err=$ac_c_preproc_warn_flag\n+    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag\n+  else\n+    ac_cpp_err=\n+  fi\n+else\n+  ac_cpp_err=yes\n+fi\n+if test -z \"$ac_cpp_err\"; then\n+  ac_cv_header_sys_mman_h=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+  ac_cv_header_sys_mman_h=no\n+fi\n+rm -f conftest.err conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_header_sys_mman_h\" >&5\n+echo \"${ECHO_T}$ac_cv_header_sys_mman_h\" >&6\n+if test $ac_cv_header_sys_mman_h = yes; then\n+  gcc_header_sys_mman_h=yes\n+else\n+  gcc_header_sys_mman_h=no\n+fi\n+\n+echo \"$as_me:$LINENO: checking for mmap\" >&5\n+echo $ECHO_N \"checking for mmap... $ECHO_C\" >&6\n+if test \"${ac_cv_func_mmap+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+/* Define mmap to an innocuous variant, in case <limits.h> declares mmap.\n+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n+#define mmap innocuous_mmap\n+\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char mmap (); below.\n+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n+    <limits.h> exists even on freestanding compilers.  */\n+\n+#ifdef __STDC__\n+# include <limits.h>\n+#else\n+# include <assert.h>\n+#endif\n+\n+#undef mmap\n+\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+{\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char mmap ();\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_mmap) || defined (__stub___mmap)\n+choke me\n+#else\n+char (*f) () = mmap;\n+#endif\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+return f != mmap;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_func_mmap=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_func_mmap=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_func_mmap\" >&5\n+echo \"${ECHO_T}$ac_cv_func_mmap\" >&6\n+if test $ac_cv_func_mmap = yes; then\n+  gcc_func_mmap=yes\n+else\n+  gcc_func_mmap=no\n+fi\n+\n+if test \"$gcc_header_sys_mman_h\" != yes \\\n+ || test \"$gcc_func_mmap\" != yes; then\n    gcc_cv_func_mmap_file=no\n    gcc_cv_func_mmap_dev_zero=no\n    gcc_cv_func_mmap_anon=no"}]}