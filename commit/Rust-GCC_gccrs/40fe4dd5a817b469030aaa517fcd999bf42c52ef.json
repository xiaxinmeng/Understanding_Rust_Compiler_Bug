{"sha": "40fe4dd5a817b469030aaa517fcd999bf42c52ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBmZTRkZDVhODE3YjQ2OTAzMGFhYTUxN2ZjZDk5OWJmNDJjNTJlZg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-28T01:05:12Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-28T01:05:12Z"}, "message": "* c-decl.c (pushdecl): Clarify comment.\n\nFrom-SVN: r72998", "tree": {"sha": "e2e7c968d673c29bb4eddd6154f27b01f32110d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2e7c968d673c29bb4eddd6154f27b01f32110d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40fe4dd5a817b469030aaa517fcd999bf42c52ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40fe4dd5a817b469030aaa517fcd999bf42c52ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40fe4dd5a817b469030aaa517fcd999bf42c52ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40fe4dd5a817b469030aaa517fcd999bf42c52ef/comments", "author": null, "committer": null, "parents": [{"sha": "f4d0b3d4fdd117b33d8172082f799631aa729310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d0b3d4fdd117b33d8172082f799631aa729310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d0b3d4fdd117b33d8172082f799631aa729310"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "72d392c967fd258e787baed9be4082d690722e0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40fe4dd5a817b469030aaa517fcd999bf42c52ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40fe4dd5a817b469030aaa517fcd999bf42c52ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40fe4dd5a817b469030aaa517fcd999bf42c52ef", "patch": "@@ -1,3 +1,7 @@\n+2003-10-27  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* c-decl.c (pushdecl): Clarify comment.\n+\n 2003-10-27  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* doc/install.texi: Update instructions for Ada cross builds\n@@ -84,7 +88,7 @@\n 2003-10-26  Bernardo Innocenti  <bernie@develer.com>\n \n \t* config/m68k/m68k.c (m68k_output_function_prologue): Eliminate\n-\tnum_saved_regs, use current_frame.reg_no instead. \n+\tnum_saved_regs, use current_frame.reg_no instead.\n \n 2003-10-26  Bernardo Innocenti  <bernie@develer.com>\n \t    Paul Dale  <pauli@snapgear.com>\n@@ -171,9 +175,9 @@\n \n 2003-10-25  Richard Henderson  <rth@redhat.com>\n \n-        * config/i386/i386.c (ix86_eax_live_at_start_p): New.\n-        (ix86_expand_prologue): Save and restore eax around stack probe\n-        if it's live.\n+\t* config/i386/i386.c (ix86_eax_live_at_start_p): New.\n+\t(ix86_expand_prologue): Save and restore eax around stack probe\n+\tif it's live.\n \n 2003-10-25  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "96fb4bb2af8f531c18d45aa0cb2ed041f86e57ea", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40fe4dd5a817b469030aaa517fcd999bf42c52ef/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40fe4dd5a817b469030aaa517fcd999bf42c52ef/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=40fe4dd5a817b469030aaa517fcd999bf42c52ef", "patch": "@@ -1712,10 +1712,10 @@ pushdecl (tree x)\n       if (DECL_EXTERNAL (x) || scope == global_scope)\n \t{\n \t  /* Find and check against a previous, not-in-scope, external\n-\t     decl for this identifier.  (C99 s???: If two declarations\n-\t     with external linkage, referring to the same object, have\n-\t     incompatible types, the behavior is undefined).  */\n-\t  tree ext = any_external_decl (name);\n+\t     decl for this identifier.  (C99 6.2.7p2: All declarations\n+\t     that refer to the same object or function shall have\n+\t     compatible type; otherwise, the behavior is undefined.)  */\n+ \t  tree ext = any_external_decl (name);\n \t  if (ext)\n \t    {\n \t      if (duplicate_decls (x, ext, scope != global_scope, "}]}