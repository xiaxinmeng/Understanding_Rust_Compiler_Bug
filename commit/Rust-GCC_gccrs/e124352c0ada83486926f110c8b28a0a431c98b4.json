{"sha": "e124352c0ada83486926f110c8b28a0a431c98b4", "node_id": "C_kwDOANBUbNoAKGUxMjQzNTJjMGFkYTgzNDg2OTI2ZjExMGM4YjI4YTBhNDMxYzk4YjQ", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-06-24T18:25:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-12T12:24:12Z"}, "message": "[Ada] Refine heuristics for unreachable-code warnings\n\nThis patch refines the heuristics for when we warn about unreachable\ncode, to avoid common false alarms.\n\ngcc/ada/\n\n\t* sem_ch5.adb (Check_Unreachable_Code): Refine heuristics.\n\t* sem_util.ads, sem_util.adb (Is_Static_Constant_Name): Remove\n\tthis; instead we have a new function Is_Simple_Case in\n\tSem_Ch5.Check_Unreachable_Code.", "tree": {"sha": "39b9113a69497e0d183cb28e60625ccb37ccfec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39b9113a69497e0d183cb28e60625ccb37ccfec8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e124352c0ada83486926f110c8b28a0a431c98b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e124352c0ada83486926f110c8b28a0a431c98b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e124352c0ada83486926f110c8b28a0a431c98b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e124352c0ada83486926f110c8b28a0a431c98b4/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a64ee3903166dcb1a7803fbf49c31d0f89875a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a64ee3903166dcb1a7803fbf49c31d0f89875a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a64ee3903166dcb1a7803fbf49c31d0f89875a8"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "e1b572222883bc091c2593bb84e87ba7993a054a", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e124352c0ada83486926f110c8b28a0a431c98b4/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e124352c0ada83486926f110c8b28a0a431c98b4/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=e124352c0ada83486926f110c8b28a0a431c98b4", "patch": "@@ -4393,6 +4393,31 @@ package body Sem_Ch5 is\n    ----------------------------\n \n    procedure Check_Unreachable_Code (N : Node_Id) is\n+\n+      function Is_Simple_Case (N : Node_Id) return Boolean;\n+      --  N is the condition of an if statement. True if N is simple enough\n+      --  that we should not set Unblocked_Exit_Count in the special case\n+      --  below.\n+\n+      --------------------\n+      -- Is_Simple_Case --\n+      --------------------\n+\n+      function Is_Simple_Case (N : Node_Id) return Boolean is\n+      begin\n+         return\n+            Is_Trivial_Boolean (N)\n+           or else\n+            (Comes_From_Source (N)\n+               and then Is_Static_Expression (N)\n+               and then Nkind (N) in N_Identifier | N_Expanded_Name\n+               and then Ekind (Entity (N)) = E_Constant)\n+           or else\n+            (not In_Instance\n+               and then Nkind (Original_Node (N)) = N_Op_Not\n+               and then Is_Simple_Case (Right_Opnd (Original_Node (N))));\n+      end Is_Simple_Case;\n+\n       Error_Node : Node_Id;\n       Nxt        : Node_Id;\n       P          : Node_Id;\n@@ -4574,8 +4599,7 @@ package body Sem_Ch5 is\n               and then No (Else_Statements (P))\n               and then Is_OK_Static_Expression (Condition (P))\n               and then Is_True (Expr_Value (Condition (P)))\n-              and then not Is_Trivial_Boolean (Condition (P))\n-              and then not Is_Static_Constant_Name (Condition (P))\n+              and then not Is_Simple_Case (Condition (P))\n             then\n                pragma Assert (Unblocked_Exit_Count = 2);\n                Unblocked_Exit_Count := 0;"}, {"sha": "0e65cbf4fb71606c7f249eaf19bb7316b85f4281", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e124352c0ada83486926f110c8b28a0a431c98b4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e124352c0ada83486926f110c8b28a0a431c98b4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e124352c0ada83486926f110c8b28a0a431c98b4", "patch": "@@ -21532,18 +21532,6 @@ package body Sem_Util is\n         and then Entity (N) in Standard_True | Standard_False;\n    end Is_Trivial_Boolean;\n \n-   -----------------------------\n-   -- Is_Static_Constant_Name --\n-   -----------------------------\n-\n-   function Is_Static_Constant_Name (N : Node_Id) return Boolean is\n-   begin\n-      return Comes_From_Source (N)\n-        and then Is_Static_Expression (N)\n-        and then Nkind (N) in N_Identifier | N_Expanded_Name\n-        and then Ekind (Entity (N)) = E_Constant;\n-   end Is_Static_Constant_Name;\n-\n    --------------------------------------\n    -- Is_Unchecked_Conversion_Instance --\n    --------------------------------------"}, {"sha": "64cf5d041dd74db06815c8e50f3300379739e858", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e124352c0ada83486926f110c8b28a0a431c98b4/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e124352c0ada83486926f110c8b28a0a431c98b4/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=e124352c0ada83486926f110c8b28a0a431c98b4", "patch": "@@ -2485,9 +2485,6 @@ package Sem_Util is\n    --  Determine whether source node N denotes \"True\" or \"False\". Note that\n    --  this is not true for expressions that got folded to True or False.\n \n-   function Is_Static_Constant_Name (N : Node_Id) return Boolean;\n-   --  True if N is a name that statically denotes a static constant.\n-\n    function Is_Unchecked_Conversion_Instance (Id : Entity_Id) return Boolean;\n    --  Determine whether an arbitrary entity denotes an instance of function\n    --  Ada.Unchecked_Conversion."}]}