{"sha": "8e72571637a1f148628617d7eaa3b45809af247d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3MjU3MTYzN2ExZjE0ODYyODYxN2Q3ZWFhM2I0NTgwOWFmMjQ3ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-05-19T22:24:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-19T22:24:50Z"}, "message": "stl_list.h (_M_resize_pos(size_type&)): Declare.\n\n\t* include/bits/stl_list.h (_M_resize_pos(size_type&)): Declare.\n\t(operator==(const list&, const list&)): If size() is O(1) compare\n\tsizes before comparing each element.\n\t* include/bits/list.tcc (list::_M_resize_pos(size_type&)): Define.\n\t(list::resize): Use _M_resize_pos.\n\nFrom-SVN: r223416", "tree": {"sha": "8cb0574eb9d23b26434446f7842b4712e5539ded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cb0574eb9d23b26434446f7842b4712e5539ded"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e72571637a1f148628617d7eaa3b45809af247d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e72571637a1f148628617d7eaa3b45809af247d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e72571637a1f148628617d7eaa3b45809af247d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e72571637a1f148628617d7eaa3b45809af247d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d6eb35a6dbe6c9808779ca446667f8a8374a11b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6eb35a6dbe6c9808779ca446667f8a8374a11b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6eb35a6dbe6c9808779ca446667f8a8374a11b"}], "stats": {"total": 98, "additions": 76, "deletions": 22}, "files": [{"sha": "6c5964af75ad88cdb6c4d89d330642424c3fc9c1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e72571637a1f148628617d7eaa3b45809af247d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e72571637a1f148628617d7eaa3b45809af247d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8e72571637a1f148628617d7eaa3b45809af247d", "patch": "@@ -1,3 +1,11 @@\n+2015-05-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_list.h (_M_resize_pos(size_type&)): Declare.\n+\t(operator==(const list&, const list&)): If size() is O(1) compare\n+\tsizes before comparing each element.\n+\t* include/bits/list.tcc (list::_M_resize_pos(size_type&)): Define.\n+\t(list::resize): Use _M_resize_pos.\n+\n 2015-05-19  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* testsuite/23_containers/unordered_map/cons/66055.cc: Add constructor"}, {"sha": "c5d2ab4e9d1f174fcc1d2f077d645c5a5d49994b", "filename": "libstdc++-v3/include/bits/list.tcc", "status": "modified", "additions": 59, "deletions": 22, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e72571637a1f148628617d7eaa3b45809af247d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e72571637a1f148628617d7eaa3b45809af247d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc?ref=8e72571637a1f148628617d7eaa3b45809af247d", "patch": "@@ -157,6 +157,52 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       return __ret;\n     }\n \n+  // Return a const_iterator indicating the position to start inserting or\n+  // erasing elements (depending whether the list is growing or shrinking),\n+  // and set __new_size to the number of new elements that must be appended.\n+  // Equivalent to the following, but performed optimally:\n+  // if (__new_size < size()) {\n+  //   __new_size = 0;\n+  //   return std::next(begin(), __new_size);\n+  // } else {\n+  //   __newsize -= size();\n+  //   return end();\n+  // }\n+  template<typename _Tp, typename _Alloc>\n+    typename list<_Tp, _Alloc>::const_iterator\n+    list<_Tp, _Alloc>::\n+    _M_resize_pos(size_type& __new_size) const\n+    {\n+      const_iterator __i;\n+#if _GLIBCXX_USE_CXX11_ABI\n+      const size_type __len = size();\n+      if (__new_size < __len)\n+\t{\n+\t  if (__new_size <= __len / 2)\n+\t    {\n+\t      __i = begin();\n+\t      std::advance(__i, __new_size);\n+\t    }\n+\t  else\n+\t    {\n+\t      __i = end();\n+\t      ptrdiff_t __num_erase = __len - __new_size;\n+\t      std::advance(__i, -__num_erase);\n+\t    }\n+\t  __new_size = 0;\n+\t  return __i;\n+\t}\n+      else\n+\t__i = end();\n+#else\n+      size_type __len = 0;\n+      for (__i = begin(); __i != end() && __len < __new_size; ++__i, ++__len)\n+        ;\n+#endif\n+      __new_size -= __len;\n+      return __i;\n+    }\n+\n #if __cplusplus >= 201103L\n   template<typename _Tp, typename _Alloc>\n     void\n@@ -182,44 +228,35 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     list<_Tp, _Alloc>::\n     resize(size_type __new_size)\n     {\n-      iterator __i = begin();\n-      size_type __len = 0;\n-      for (; __i != end() && __len < __new_size; ++__i, ++__len)\n-        ;\n-      if (__len == __new_size)\n+      const_iterator __i = _M_resize_pos(__new_size);\n+      if (__new_size)\n+\t_M_default_append(__new_size);\n+      else\n         erase(__i, end());\n-      else                          // __i == end()\n-\t_M_default_append(__new_size - __len);\n     }\n \n   template<typename _Tp, typename _Alloc>\n     void\n     list<_Tp, _Alloc>::\n     resize(size_type __new_size, const value_type& __x)\n     {\n-      iterator __i = begin();\n-      size_type __len = 0;\n-      for (; __i != end() && __len < __new_size; ++__i, ++__len)\n-        ;\n-      if (__len == __new_size)\n+      const_iterator __i = _M_resize_pos(__new_size);\n+      if (__new_size)\n+        insert(end(), __new_size, __x);\n+      else\n         erase(__i, end());\n-      else                          // __i == end()\n-        insert(end(), __new_size - __len, __x);\n     }\n #else\n   template<typename _Tp, typename _Alloc>\n     void\n     list<_Tp, _Alloc>::\n     resize(size_type __new_size, value_type __x)\n     {\n-      iterator __i = begin();\n-      size_type __len = 0;\n-      for (; __i != end() && __len < __new_size; ++__i, ++__len)\n-        ;\n-      if (__len == __new_size)\n-        erase(__i, end());\n-      else                          // __i == end()\n-        insert(end(), __new_size - __len, __x);\n+      const_iterator __i = _M_resize_pos(__new_size);\n+      if (__new_size)\n+        insert(end(), __new_size, __x);\n+      else\n+        erase(__i._M_const_cast(), end());\n     }\n #endif\n "}, {"sha": "a26859ec7faaaed00ec8679346e1a1895d531d21", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e72571637a1f148628617d7eaa3b45809af247d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e72571637a1f148628617d7eaa3b45809af247d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=8e72571637a1f148628617d7eaa3b45809af247d", "patch": "@@ -1789,6 +1789,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \t    _S_do_it(_M_get_Node_allocator(), __x._M_get_Node_allocator()))\n \t  __builtin_abort();\n       }\n+\n+      // Used to implement resize.\n+      const_iterator\n+      _M_resize_pos(size_type& __new_size) const;\n     };\n _GLIBCXX_END_NAMESPACE_CXX11\n \n@@ -1806,6 +1810,11 @@ _GLIBCXX_END_NAMESPACE_CXX11\n     inline bool\n     operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)\n     {\n+#if _GLIBCXX_USE_CXX11_ABI\n+      if (__x.size() != __y.size())\n+\treturn false;\n+#endif\n+\n       typedef typename list<_Tp, _Alloc>::const_iterator const_iterator;\n       const_iterator __end1 = __x.end();\n       const_iterator __end2 = __y.end();"}]}