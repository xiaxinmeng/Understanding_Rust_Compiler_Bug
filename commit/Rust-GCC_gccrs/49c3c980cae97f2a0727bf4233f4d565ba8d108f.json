{"sha": "49c3c980cae97f2a0727bf4233f4d565ba8d108f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDljM2M5ODBjYWU5N2YyYTA3MjdiZjQyMzNmNGQ1NjViYThkMTA4Zg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2002-08-27T17:47:27Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2002-08-27T17:47:27Z"}, "message": "BindException.java, [...]: add/update of some @since/@deprecated\n\n2002-08-27  Michael Koch <konqueror@gmx.de>\n\n\t* java/net/BindException.java,\n\tjava/net/JarURLConnection.java,\n\tjava/net/FileNameMap.java,\n\tjava/net/HttpURLConnection.java,\n\tjava/net/InetSocketAddress.java,\n\tjava/net/DatagramPacket.java,\n\tjava/net/DatagramSocket.java,\n\tjava/net/DatagramSocketImpl.java,\n\tjava/net/MulticastSocket.java,\n\tjava/net/PasswordAuthentication.java,\n\tjava/net/ServerSocket.java,\n\tjava/net/Socket.java,\n\tjava/net/URLClassLoader.java,\n\tjava/net/URLConnection.java: add/update of some @since/@deprecated\n\nFrom-SVN: r56608", "tree": {"sha": "404883e561a35a05f3cb301c603969af9af1f56d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/404883e561a35a05f3cb301c603969af9af1f56d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49c3c980cae97f2a0727bf4233f4d565ba8d108f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c3c980cae97f2a0727bf4233f4d565ba8d108f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c3c980cae97f2a0727bf4233f4d565ba8d108f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c3c980cae97f2a0727bf4233f4d565ba8d108f/comments", "author": null, "committer": null, "parents": [{"sha": "1985ef9094cbb54814280a9d194c3c33c6747322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1985ef9094cbb54814280a9d194c3c33c6747322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1985ef9094cbb54814280a9d194c3c33c6747322"}], "stats": {"total": 78, "additions": 68, "deletions": 10}, "files": [{"sha": "f4001489d427e7e4c38cbdeccc1bb4562a564105", "filename": "libjava/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -1,3 +1,20 @@\n+2002-08-27  Michael Koch <konqueror@gmx.de>\n+\n+\t* java/net/BindException.java,\n+\tjava/net/JarURLConnection.java,\n+\tjava/net/FileNameMap.java,\n+\tjava/net/HttpURLConnection.java,\n+\tjava/net/InetSocketAddress.java,\n+\tjava/net/DatagramPacket.java,\n+\tjava/net/DatagramSocket.java,\n+\tjava/net/DatagramSocketImpl.java,\n+\tjava/net/MulticastSocket.java,\n+\tjava/net/PasswordAuthentication.java,\n+\tjava/net/ServerSocket.java,\n+\tjava/net/Socket.java,\n+\tjava/net/URLClassLoader.java,\n+\tjava/net/URLConnection.java: add/update of some @since/@deprecated\n+\t\n 2002-08-27  Tony Kimball <alk@pobox.com>\n             Tom Tromey  <tromey@redhat.com>\n "}, {"sha": "cfc36b312f6eb6f3dfc02e2221501f513897ca95", "filename": "libjava/java/net/BindException.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FBindException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FBindException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FBindException.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -43,6 +43,7 @@\n  *\n  * @author Aaron M. Renn <arenn@urbanophile.com>\n  * @author Warren Levy <warrenl@cygnus.com>\n+ * @since 1.1\n  * @status updated to 1.4\n  */\n public class BindException extends SocketException"}, {"sha": "2140f454f435ad8cafd1a5146763d92a2bfecc5d", "filename": "libjava/java/net/DatagramPacket.java", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FDatagramPacket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FDatagramPacket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramPacket.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -103,7 +103,7 @@\n   * @param offset The offset into the buffer to start writing.\n   * @param length The maximum number of bytes to read.\n   *\n-  * @since Java 1.2\n+  * @since 1.2\n   */\n   public DatagramPacket(byte[] buf, int offset, int length)\n   {\n@@ -146,7 +146,7 @@ public DatagramPacket(byte[] buf, int length)\n   * @param addr The address to send to\n   * @param port The port to send to\n   *\n-  * @since Java 1.2\n+  * @since 1.2\n   */\n   public DatagramPacket(byte[] buf, int offset, int length,\n \tInetAddress address, int port)\n@@ -230,7 +230,7 @@ public synchronized byte[] getData()\n   *\n   * @return The buffer offset.\n   *\n-  * @since Java 1.2\n+  * @since 1.2\n   */\n   public synchronized int getOffset()\n   {\n@@ -251,6 +251,8 @@ public synchronized int getLength()\n   * This sets the address to which the data packet will be transmitted.\n   *\n   * @param addr The destination address\n+  *\n+  * @since 1.1\n   */\n   public synchronized void setAddress(InetAddress iaddr)\n   {\n@@ -264,6 +266,8 @@ public synchronized void setAddress(InetAddress iaddr)\n   * This sets the port to which the data packet will be transmitted.\n   *\n   * @param port The destination port\n+  *\n+  * @since 1.1\n   */\n   public synchronized void setPort(int iport)\n   {\n@@ -277,6 +281,8 @@ public synchronized void setPort(int iport)\n   * Sets the data buffer for this packet.\n   *\n   * @param buf The new buffer for this packet\n+  *\n+  * @since 1.1\n   */\n   public synchronized void setData(byte[] buf)\n   {\n@@ -295,7 +301,7 @@ public synchronized void setData(byte[] buf)\n   * @param offset The offset into the buffer to start reading data from.\n   * @param length The number of bytes of data in the buffer.\n   *\n-  * @since Java 1.2\n+  * @since 1.2\n   */\n   public synchronized void setData(byte[] buf, int offset, int length)\n   {\n@@ -320,6 +326,8 @@ public synchronized void setData(byte[] buf, int offset, int length)\n   * Sets the length of the data in the buffer. \n   *\n   * @param length The new length.  (Where len <= buf.length)\n+  *\n+  * @since 1.1\n   */\n   public synchronized void setLength(int length)\n   {"}, {"sha": "7fc21ff73f4d1ffd47cc61c6cfa4f453a9c58f0b", "filename": "libjava/java/net/DatagramSocket.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramSocket.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -117,6 +117,9 @@ public int getLocalPort()\n     return impl.getLocalPort();\n   }\n \n+  /**\n+   * @since 1.1\n+   */\n   public synchronized int getSoTimeout() throws SocketException\n   {\n     Object timeout = impl.getOption(SocketOptions.SO_TIMEOUT);\n@@ -152,6 +155,9 @@ public void send(DatagramPacket p) throws IOException\n     impl.send(p);\n   }\n \n+  /**\n+   * @since 1.1\n+   */\n   public synchronized void setSoTimeout(int timeout) throws SocketException\n   {\n     if (timeout < 0)"}, {"sha": "260088dfe058ee8efd4261fdf1e37a7d40f033ec", "filename": "libjava/java/net/DatagramSocketImpl.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FDatagramSocketImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FDatagramSocketImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramSocketImpl.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -53,6 +53,7 @@\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @author Warren Levy <warrenl@cygnus.com>\n+ * @since 1.1\n  */\n public abstract class DatagramSocketImpl implements SocketOptions\n {"}, {"sha": "538dbe8e19a80a2d78d1abd0c8fdf9da2fc29e62", "filename": "libjava/java/net/FileNameMap.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FFileNameMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FFileNameMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FFileNameMap.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -50,6 +50,7 @@\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   * @author Warren Levy <warrenl@cygnus.com>\n+  * @since 1.1\n   */\n public interface FileNameMap\n {"}, {"sha": "c106ed26fc246ff305299e5cddcf5cd76058b956", "filename": "libjava/java/net/HttpURLConnection.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FHttpURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FHttpURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FHttpURLConnection.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -15,6 +15,7 @@\n \n /**\n  * @author Warren Levy <warrenl@cygnus.com>\n+ * @since 1.1\n  * @date March 29, 1999.\n  */\n "}, {"sha": "6db6baff9dd0c08494908f5e6c700ccd681080a6", "filename": "libjava/java/net/InetSocketAddress.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FInetSocketAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FInetSocketAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetSocketAddress.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -41,6 +41,8 @@\n  * InetSocketAddress instances represent socket addresses\n  * in the java.nio package. They encapsulate a InetAddress and\n  * a port number.\n+ *\n+ * @since 1.4\n  */\n \n public class InetSocketAddress extends SocketAddress"}, {"sha": "f0b3b5df34390336b7e608116f5ed9e6d4501bea", "filename": "libjava/java/net/JarURLConnection.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FJarURLConnection.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -18,6 +18,7 @@\n \n /**\n  * @author Kresten Krab Thorup <krab@gnu.org>\n+ * @since 1.2\n  * @date Aug 10, 1999.\n  */\n "}, {"sha": "7381a866d557906790da30c0e32931a1117a23ef", "filename": "libjava/java/net/MulticastSocket.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FMulticastSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FMulticastSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FMulticastSocket.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -60,6 +60,7 @@\n   *\n   * @author Warren Levy <warrenl@cygnus.com>\n   * @author Aaron M. Renn (arenn@urbanophile.com) (Documentation comments)\n+  * @since 1.1\n   * @date May 18, 1999.\n   */\n public class MulticastSocket extends DatagramSocket"}, {"sha": "0c4faa543986a58d70de954bcd3b375a602c5eb9", "filename": "libjava/java/net/PasswordAuthentication.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FPasswordAuthentication.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FPasswordAuthentication.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FPasswordAuthentication.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -41,6 +41,7 @@\n   * This class serves a container for username/password pairs.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @since 1.2\n   */\n public final class PasswordAuthentication\n {"}, {"sha": "788057d13848612ec91df6b5e863d3103d561cfb", "filename": "libjava/java/net/ServerSocket.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FServerSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FServerSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FServerSocket.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -129,6 +129,8 @@ public ServerSocket (int port, int backlog)\n    * @param bindAddr The address to bind to, or null to bind to all addresses\n    *\n    * @exception IOException If an error occurs\n+   *\n+   * @since 1.1\n    */\n   public ServerSocket (int port, int backlog, InetAddress bindAddr)\n     throws java.io.IOException\n@@ -192,6 +194,8 @@ public Socket accept ()  throws IOException\n    * @param socket The socket that is used for the accepted connection\n    *\n    * @exception IOException If an error occurs\n+   *\n+   * @since 1.1\n    */\n   protected final void implAccept (Socket s)  throws IOException\n   {\n@@ -217,6 +221,8 @@ public void close () throws IOException\n    * @param timeout The new SO_TIMEOUT value\n    *\n    * @exception IOException If an error occurs\n+   *\n+   * @since 1.1\n    */\n   public void setSoTimeout (int timeout) throws SocketException\n   {\n@@ -235,6 +241,8 @@ public void setSoTimeout (int timeout) throws SocketException\n    * @return The value of SO_TIMEOUT\n    *\n    * @exception IOException If an error occurs\n+   *\n+   * @since 1.1\n    */\n   public int getSoTimeout () throws IOException\n   {"}, {"sha": "6c0df5402b4ff3bb39999b14eaa5cf9e8c53470b", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -534,7 +534,7 @@ public synchronized int getSoTimeout () throws SocketException\n    *\n    * @exception SocketException If an error occurs or Socket not connected\n    *\n-   * @since Java 1.2\n+   * @since 1.2\n    */\n   public void setSendBufferSize (int size) throws SocketException\n   {\n@@ -556,7 +556,7 @@ public void setSendBufferSize (int size) throws SocketException\n    *\n    * @exception SocketException If an error occurs or socket not connected\n    *\n-   * @since Java 1.2\n+   * @since 1.2\n    */\n   public int getSendBufferSize () throws SocketException\n   {\n@@ -580,7 +580,7 @@ public int getSendBufferSize () throws SocketException\n    *\n    * @exception SocketException If an error occurs or Socket is not connected\n    *\n-   * @since Java 1.2\n+   * @since 1.2\n    */\n   public void setReceiveBufferSize (int size) throws SocketException\n   {\n@@ -602,7 +602,7 @@ public void setReceiveBufferSize (int size) throws SocketException\n    *\n    * @exception SocketException If an error occurs or Socket is not connected\n    *\n-   * @since Java 1.2\n+   * @since 1.2\n    */\n   public int getReceiveBufferSize () throws SocketException\n   {"}, {"sha": "4fce6250e4afae8f2afdf2309ec002ee2bfe63e3", "filename": "libjava/java/net/URLClassLoader.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLClassLoader.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -13,6 +13,9 @@\n import java.util.Enumeration;\n import java.util.Vector;\n \n+/**\n+ * @since 1.2\n+ */\n public class URLClassLoader extends ClassLoader \n {\n   // The URLStreamHandlerFactory"}, {"sha": "b3bebba00f20ded4ce2f2031f6be941a39968ff1", "filename": "libjava/java/net/URLConnection.java", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c3c980cae97f2a0727bf4233f4d565ba8d108f/libjava%2Fjava%2Fnet%2FURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLConnection.java?ref=49c3c980cae97f2a0727bf4233f4d565ba8d108f", "patch": "@@ -300,6 +300,9 @@ public static void setDefaultRequestProperty(String key, String value)\n     // default request properties.\n   }\n \n+  /**\n+   * @deprecated 1.3\n+   */\n   public static String getDefaultRequestProperty(String key)\n   {\n     // Overridden by subclasses that support default request properties.\n@@ -346,13 +349,17 @@ protected static String guessContentTypeFromName(String fname)\n \n // TODO12:  protected void parseURL(URL u, String spec, int start, int limit)\n \n-  // JDK1.2\n+  /**\n+   * @since 1.2\n+   */\n   public static FileNameMap getFileNameMap()\n   {\n     return fileNameMap;\n   }\n \n-  // JDK1.2\n+  /**\n+   * @since 1.2\n+   */\n   public static void setFileNameMap(FileNameMap map)\n   {\n     // Throw an exception if an extant security mgr precludes"}]}