{"sha": "14bce2578e2916b66d7ae7a42a83c510d8d7f804", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRiY2UyNTc4ZTI5MTZiNjZkN2FlN2E0MmE4M2M1MTBkOGQ3ZjgwNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-13T08:45:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-13T08:45:36Z"}, "message": "re PR middle-end/77475 (unnecessary or misleading context in reporting command line problems)\n\n\tPR middle-end/77475\n\t* opts.h (candidates_list_and_hint): Declare.\n\t* opts-common.c (candidates_list_and_hint): New function.\n\t(cmdline_handle_error): Use it.\n\nCo-Authored-By: Manuel L\u00f3pez-Ib\u00e1\u00f1ez <manu@gcc.gnu.org>\n\nFrom-SVN: r240107", "tree": {"sha": "def6aaa9d1bd83c15209ac04451e50f69e4e3f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/def6aaa9d1bd83c15209ac04451e50f69e4e3f6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14bce2578e2916b66d7ae7a42a83c510d8d7f804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14bce2578e2916b66d7ae7a42a83c510d8d7f804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14bce2578e2916b66d7ae7a42a83c510d8d7f804", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14bce2578e2916b66d7ae7a42a83c510d8d7f804/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e262faf259794cee5f147203570dfee56defe0d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e262faf259794cee5f147203570dfee56defe0d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e262faf259794cee5f147203570dfee56defe0d5"}], "stats": {"total": 60, "additions": 46, "deletions": 14}, "files": [{"sha": "ad74cc17bfb4225eebbd091423feda2ca8b207c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bce2578e2916b66d7ae7a42a83c510d8d7f804/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bce2578e2916b66d7ae7a42a83c510d8d7f804/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14bce2578e2916b66d7ae7a42a83c510d8d7f804", "patch": "@@ -1,3 +1,11 @@\n+2016-09-13  Jakub Jelinek  <jakub@redhat.com>\n+\t    Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/77475\n+\t* opts.h (candidates_list_and_hint): Declare.\n+\t* opts-common.c (candidates_list_and_hint): New function.\n+\t(cmdline_handle_error): Use it.\n+\n 2016-09-12  David Malcolm  <dmalcolm@redhat.com>\n \n \t* edit-context.c (edited_line::get_len): New accessor."}, {"sha": "e9d1c20a1f391a75fa84badfe0f9a05dabd84529", "filename": "gcc/opts-common.c", "status": "modified", "additions": 35, "deletions": 14, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bce2578e2916b66d7ae7a42a83c510d8d7f804/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bce2578e2916b66d7ae7a42a83c510d8d7f804/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=14bce2578e2916b66d7ae7a42a83c510d8d7f804", "patch": "@@ -1069,6 +1069,38 @@ generate_option_input_file (const char *file,\n   decoded->errors = 0;\n }\n \n+/* Helper function for listing valid choices and hint for misspelled\n+   value.  CANDIDATES is a vector containing all valid strings,\n+   STR is set to a heap allocated string that contains all those\n+   strings concatenated, separated by spaces, and the return value\n+   is the closest string from those to ARG, or NULL if nothing is\n+   close enough.  Callers should XDELETEVEC (STR) after using it\n+   to avoid memory leaks.  */\n+\n+const char *\n+candidates_list_and_hint (const char *arg, char *&str,\n+\t\t\t  const auto_vec <const char *> &candidates)\n+{\n+  size_t len = 0;\n+  int i;\n+  const char *candidate;\n+  char *p;\n+\n+  FOR_EACH_VEC_ELT (candidates, i, candidate)\n+    len += strlen (candidate) + 1;\n+\n+  str = p = XNEWVEC (char, len);\n+  FOR_EACH_VEC_ELT (candidates, i, candidate)\n+    {\n+      len = strlen (candidate);\n+      memcpy (p, candidate, len);\n+      p[len] = ' ';\n+      p += len + 1;\n+    }\n+  p[-1] = '\\0';\n+  return find_closest_string (arg, &candidates);\n+}\n+\n /* Perform diagnostics for read_cmdline_option and control_warning_option\n    functions.  Returns true if an error has been diagnosed.\n    LOC and LANG_MASK arguments like in read_cmdline_option.\n@@ -1108,38 +1140,27 @@ cmdline_handle_error (location_t loc, const struct cl_option *option,\n     {\n       const struct cl_enum *e = &cl_enums[option->var_enum];\n       unsigned int i;\n-      size_t len;\n-      char *s, *p;\n+      char *s;\n \n       if (e->unknown_error)\n \terror_at (loc, e->unknown_error, arg);\n       else\n \terror_at (loc, \"unrecognized argument in option %qs\", opt);\n \n-      len = 0;\n-      for (i = 0; e->values[i].arg != NULL; i++)\n-\tlen += strlen (e->values[i].arg) + 1;\n-\n       auto_vec <const char *> candidates;\n-      s = XALLOCAVEC (char, len);\n-      p = s;\n       for (i = 0; e->values[i].arg != NULL; i++)\n \t{\n \t  if (!enum_arg_ok_for_language (&e->values[i], lang_mask))\n \t    continue;\n-\t  size_t arglen = strlen (e->values[i].arg);\n-\t  memcpy (p, e->values[i].arg, arglen);\n-\t  p[arglen] = ' ';\n-\t  p += arglen + 1;\n \t  candidates.safe_push (e->values[i].arg);\n \t}\n-      p[-1] = 0;\n-      const char *hint = find_closest_string (arg, &candidates);\n+      const char *hint = candidates_list_and_hint (arg, s, candidates);\n       if (hint)\n \tinform (loc, \"valid arguments to %qs are: %s; did you mean %qs?\",\n \t\toption->opt_text, s, hint);\n       else\n \tinform (loc, \"valid arguments to %qs are: %s\", option->opt_text, s);\n+      XDELETEVEC (s);\n \n       return true;\n     }"}, {"sha": "4132432bd7c6791c18794dc96bf6eabad9b27eea", "filename": "gcc/opts.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14bce2578e2916b66d7ae7a42a83c510d8d7f804/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14bce2578e2916b66d7ae7a42a83c510d8d7f804/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=14bce2578e2916b66d7ae7a42a83c510d8d7f804", "patch": "@@ -419,5 +419,8 @@ extern const struct sanitizer_opts_s\n extern void add_misspelling_candidates (auto_vec<char *> *candidates,\n \t\t\t\t\tconst struct cl_option *option,\n \t\t\t\t\tconst char *base_option);\n+extern const char *candidates_list_and_hint (const char *arg, char *&str,\n+\t\t\t\t\t     const auto_vec <const char *> &\n+\t\t\t\t\t     candidates);\n \n #endif"}]}