{"sha": "b24ca895d7a5e5d18782a230f133cd8346f00c11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI0Y2E4OTVkN2E1ZTVkMTg3ODJhMjMwZjEzM2NkODM0NmYwMGMxMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-03-12T09:15:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-03-12T09:15:08Z"}, "message": "re PR middle-end/60482 (Loop optimization regression)\n\n\tPR middle-end/60482\n\t* tree-vrp.c (register_edge_assert_for_1): Don't add assert\n\tif there are multiple uses, but op doesn't live on E edge.\n\t* tree-cfg.c (assert_unreachable_fallthru_edge_p): Also ignore\n\tclobber stmts before __builtin_unreachable.\n\n\t* gcc.dg/vect/pr60482.c: New test.\n\nFrom-SVN: r208506", "tree": {"sha": "9056a4619bab3ad694d7046b82cc4f590bf3bb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9056a4619bab3ad694d7046b82cc4f590bf3bb48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b24ca895d7a5e5d18782a230f133cd8346f00c11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24ca895d7a5e5d18782a230f133cd8346f00c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24ca895d7a5e5d18782a230f133cd8346f00c11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24ca895d7a5e5d18782a230f133cd8346f00c11/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33a9145bb7229ba592e9a4f7ee9c68399ac5d070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a9145bb7229ba592e9a4f7ee9c68399ac5d070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a9145bb7229ba592e9a4f7ee9c68399ac5d070"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "c2bc1e3a1b5cd5c4ef3dfaa2a24fd1f098a47eab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b24ca895d7a5e5d18782a230f133cd8346f00c11", "patch": "@@ -1,3 +1,11 @@\n+2014-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/60482\n+\t* tree-vrp.c (register_edge_assert_for_1): Don't add assert\n+\tif there are multiple uses, but op doesn't live on E edge.\n+\t* tree-cfg.c (assert_unreachable_fallthru_edge_p): Also ignore\n+\tclobber stmts before __builtin_unreachable.\n+\n 2014-03-11  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* builtins.c (expand_builtin_setjmp_receiver): Use and clobber"}, {"sha": "fe99d64cdd1b0fa5b2f4da91610332ef025355ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b24ca895d7a5e5d18782a230f133cd8346f00c11", "patch": "@@ -1,3 +1,8 @@\n+2014-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/60482\n+\t* gcc.dg/vect/pr60482.c: New test.\n+\n 2014-03-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60389"}, {"sha": "78821183c6889840cd915c1422e977ba174a0753", "filename": "gcc/testsuite/gcc.dg/vect/pr60482.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60482.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60482.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60482.c?ref=b24ca895d7a5e5d18782a230f133cd8346f00c11", "patch": "@@ -0,0 +1,20 @@\n+/* PR middle-end/60482 */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Ofast\" } */\n+/* { dg-require-effective-target vect_int } */\n+\n+double\n+foo (double *x, int n)\n+{\n+  double p = 0.0;\n+  int i;\n+  x = __builtin_assume_aligned (x, 128);\n+  if (n % 128)\n+    __builtin_unreachable ();\n+  for (i = 0; i < n; i++)\n+    p += x[i];\n+  return p;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"epilog loop required\" \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "56b6c3595b864d9c04ba46849947305b3cf8f7b8", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=b24ca895d7a5e5d18782a230f133cd8346f00c11", "patch": "@@ -410,9 +410,9 @@ assert_unreachable_fallthru_edge_p (edge e)\n \t  if (gsi_end_p (gsi))\n \t    return false;\n \t  stmt = gsi_stmt (gsi);\n-\t  if (is_gimple_debug (stmt))\n+\t  while (is_gimple_debug (stmt) || gimple_clobber_p (stmt))\n \t    {\n-\t      gsi_next_nondebug (&gsi);\n+\t      gsi_next (&gsi);\n \t      if (gsi_end_p (gsi))\n \t\treturn false;\n \t      stmt = gsi_stmt (gsi);"}, {"sha": "306021062115bea7fde975e6c0fd3ed3cb2faef6", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24ca895d7a5e5d18782a230f133cd8346f00c11/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=b24ca895d7a5e5d18782a230f133cd8346f00c11", "patch": "@@ -5423,12 +5423,9 @@ register_edge_assert_for_1 (tree op, enum tree_code code,\n     return false;\n \n   /* We know that OP will have a zero or nonzero value.  If OP is used\n-     more than once go ahead and register an assert for OP.\n-\n-     The FOUND_IN_SUBGRAPH support is not helpful in this situation as\n-     it will always be set for OP (because OP is used in a COND_EXPR in\n-     the subgraph).  */\n-  if (!has_single_use (op))\n+     more than once go ahead and register an assert for OP.  */\n+  if (live_on_edge (e, op)\n+      && !has_single_use (op))\n     {\n       val = build_int_cst (TREE_TYPE (op), 0);\n       register_new_assert_for (op, op, code, val, NULL, e, bsi);"}]}