{"sha": "631cfe30838acc834c38a7ce89339e144f49000f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMxY2ZlMzA4MzhhY2M4MzRjMzhhN2NlODkzMzllMTQ0ZjQ5MDAwZg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-04-06T18:31:11Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-04-06T18:31:11Z"}, "message": "re PR fortran/52668 (Incorrect unused warning for USE associating variable in common block)\n\n2012-04-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/52668\n\t* module.c:  Only mark symbols as use_only if they have been\n\timported via an only list.\n\n2012-04-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/52668\n\t* gfortran.dg/use_only_6.f90: New test.\n\nFrom-SVN: r186199", "tree": {"sha": "e9fae2ca038d08d08fb64a68e8ee0475e0814346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9fae2ca038d08d08fb64a68e8ee0475e0814346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/631cfe30838acc834c38a7ce89339e144f49000f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/631cfe30838acc834c38a7ce89339e144f49000f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/631cfe30838acc834c38a7ce89339e144f49000f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/631cfe30838acc834c38a7ce89339e144f49000f/comments", "author": null, "committer": null, "parents": [{"sha": "5f250b068e74cb7b6170ae033f725a9e4ce3af1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f250b068e74cb7b6170ae033f725a9e4ce3af1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f250b068e74cb7b6170ae033f725a9e4ce3af1c"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "050f25e15fd7d4ff64e6a2197622a6c33b65e4a9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=631cfe30838acc834c38a7ce89339e144f49000f", "patch": "@@ -1,11 +1,17 @@\n+2012-04-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52668\n+\t* module.c:  Only mark symbols as use_only if they have been\n+\timported via an only list.\n+\n 2012-03-28  Paul Thomas  <pault@gcc.gnu.org>\n \tTobias Burnus  <burnus@gcc.gnu.org>\n \n \tPR fortran/52652\n \t* match.c (gfc_match_allocate, gfc_match_deallocate): Change\n \t\"not.. or\" to \"neither.. nor\".\n \t* parse.c (decode_specification_statement): Correct error in\n-\tchpice of matching function for \"allocatable\". \n+\tchpice of matching function for \"allocatable\".\n \n 2012-03-23  Janne Blomqvist  <jb@gcc.gnu.org>\n "}, {"sha": "60a74cacca43277f1d308d7cab6bde9371bff03d", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=631cfe30838acc834c38a7ce89339e144f49000f", "patch": "@@ -4389,9 +4389,24 @@ load_needed (pointer_info *p)\n \n   /* Mark as only or rename for later diagnosis for explicitly imported\n      but not used warnings; don't mark internal symbols such as __vtab,\n-     __def_init etc.  */\n+     __def_init etc. Only mark them if they have been explicitly loaded.  */\n+\n   if (only_flag && sym->name[0] != '_' && sym->name[1] != '_')\n-    sym->attr.use_only = 1;\n+    {\n+      gfc_use_rename *u;\n+\n+      /* Search the use/rename list for the variable; if the variable is\n+\t found, mark it.  */\n+      for (u = gfc_rename_list; u; u = u->next)\n+\t{\n+\t  if (strcmp (u->use_name, sym->name) == 0)\n+\t    {\n+\t      sym->attr.use_only = 1;\n+\t      break;\n+\t    }\n+\t}\n+    }\n+\n   if (p->u.rsym.renamed)\n     sym->attr.use_rename = 1;\n "}, {"sha": "3d6756089f54fbc67c03fd8c74eed2b5a76da184", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=631cfe30838acc834c38a7ce89339e144f49000f", "patch": "@@ -1,3 +1,12 @@\n+2012-04-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52668\n+\t* gfortran.dg/use_only_6.f90: New test.\n+\n+2012-04-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52668\n+\t* gfortran.dg/use_only_6.f90: New test.\n 2012-04-06  Mike Stump  <mikestump@comcast.net>\n \n \tPR testsuite/50722"}, {"sha": "bc15fdb065a82668bbad5f7e618251f0eef33f58", "filename": "gcc/testsuite/gfortran.dg/use_only_6.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/631cfe30838acc834c38a7ce89339e144f49000f/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_6.f90?ref=631cfe30838acc834c38a7ce89339e144f49000f", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! PR 52668 - there used to be a bogus warning about not using b.\n+! Original test case by Arnaud Desitter.\n+module mm\n+  integer :: a, b\n+  common /mm1/ a, b\n+end module mm\n+\n+subroutine aa()\n+  use mm, only: a\n+  implicit none\n+  a = 1\n+end subroutine aa"}]}