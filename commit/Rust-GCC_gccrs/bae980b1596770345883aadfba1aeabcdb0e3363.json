{"sha": "bae980b1596770345883aadfba1aeabcdb0e3363", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlOTgwYjE1OTY3NzAzNDU4ODNhYWRmYmExYWVhYmNkYjBlMzM2Mw==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-02-27T19:18:23Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-02-27T19:18:23Z"}, "message": "pr46939.c (long): Fix LP64 vs LLP64 issue.\n\n\t* gcc.target/i386/pr46939.c (long): Fix LP64 vs LLP64\n\tissue.\n\t* gcc.target/i386/pr45352-2.c: Likewise.\n\t* gcc.target/i386/bitfield3.c: Add -mno-ms-bitfields for\n\tmingw targets.\n\t* gcc.target/i386/xop-vshift-1.c(random): Use on mingw\n\ttargets instead rand.\n\t* gcc.target/i386/sse4_1-blendps-2.c: Likewise.\n\t* gcc.target/i386/sse2-mul-1.c: Likewise.\n\t* gcc.target/i386/sse4_1-blendps.c: Likewise.\n\t* gcc.target/i386/pad-6b.c: Adjust test for x64 mingw\n\ttarget.\n\t* gcc.target/i386/pad-1.c: Likewise.\n\t* gcc.target/i386/pad-9.c: Likewise.\n\t* gcc.target/i386/pad-2.c: Likewise.\n\t* gcc.target/i386/pad-5b.c: Likewise.\n\t* gcc.target/i386/pad-8.c: Likewise.\n\t* gcc.target/i386/pr46470.c: Skip for x64 mingw target.\n\t* gcc.target/i386/pr44130.c: Likewise.\n\t* gcc.target/i386/align-main-1.c: Likewise.\n\t* gcc.target/i386/align-main-2.c: Likewise.\n\t* gcc.target/i386/sw-1.c: Likewise.\n\t* gcc.target/i386/avx-vzeroupper-5.c: Add -mabi=sysv\n\ton x64 mingw target.\n\t* gcc.target/i386/avx-vzeroupper-4.c: Likewise.\n\t* gcc.target/i386/pr46295.c: Likewise.\n\t* gcc.target/i386/amd64-abi-1.c: Likewise.\n\t* gcc.target/i386/amd64-abi-2.c: Likewise.\n\t* gcc.target/i386/pr39082-1.c: Likewise.\n\t* gcc.target/i386/pr39162.c: Likewise.\n\t* gcc.target/i386/pr22152.c: Likewise.\n\t* gcc.target/i386/wrgsbase-2.c: Adjust dg-final rule.\n\t* gcc.target/i386/wrfsbase-2.c: Likewise.\n\t* gcc.target/i386/local.c: Likewise\n\t* gcc.target/i386/wrgsbase-1.c: Likewise.\n\t* gcc.target/i386/wrfsbase-1.c: Likewise.\n\t* gcc.target/i386/pr39315-3.c: Likewise.\n\t* gcc.target/i386/pr35767-4.c: Likewise.\n\t* gcc.target/i386/pr45336-3.c (pextrd): Don't check for\n\tx64 mingw target.\n\t* gcc.target/i386/pr45336-2.c: Likewise.\n\t* gcc.target/i386/pr45336-1.c: Likewise.\n\t* gcc.target/i386/pr45336-4.c: Likewise.\n\nFrom-SVN: r184607", "tree": {"sha": "d1abacc3c16c1573a1c36264ada84f601a5fa1a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1abacc3c16c1573a1c36264ada84f601a5fa1a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bae980b1596770345883aadfba1aeabcdb0e3363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae980b1596770345883aadfba1aeabcdb0e3363", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae980b1596770345883aadfba1aeabcdb0e3363", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae980b1596770345883aadfba1aeabcdb0e3363/comments", "author": null, "committer": null, "parents": [{"sha": "d80c632e19b6ad51973f32b6befd14fb06ef6712", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80c632e19b6ad51973f32b6befd14fb06ef6712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d80c632e19b6ad51973f32b6befd14fb06ef6712"}], "stats": {"total": 141, "additions": 116, "deletions": 25}, "files": [{"sha": "fab88d9e33d81b69deacdc37ce3e737dfc1b45b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,3 +1,49 @@\n+2012-02-28  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* gcc.target/i386/pr46939.c (long): Fix LP64 vs LLP64\n+\tissue.\n+\t* gcc.target/i386/pr45352-2.c: Likewise.\n+\t* gcc.target/i386/bitfield3.c: Add -mno-ms-bitfields for\n+\tmingw targets.\n+\t* gcc.target/i386/xop-vshift-1.c(random): Use on mingw\n+\ttargets instead rand.\n+\t* gcc.target/i386/sse4_1-blendps-2.c: Likewise.\n+\t* gcc.target/i386/sse2-mul-1.c: Likewise.\n+\t* gcc.target/i386/sse4_1-blendps.c: Likewise.\n+\t* gcc.target/i386/pad-6b.c: Adjust test for x64 mingw\n+\ttarget.\n+\t* gcc.target/i386/pad-1.c: Likewise.\n+\t* gcc.target/i386/pad-9.c: Likewise.\n+\t* gcc.target/i386/pad-2.c: Likewise.\n+\t* gcc.target/i386/pad-5b.c: Likewise.\n+\t* gcc.target/i386/pad-8.c: Likewise.\n+\t* gcc.target/i386/pr46470.c: Skip for x64 mingw target.\n+\t* gcc.target/i386/pr44130.c: Likewise.\n+\t* gcc.target/i386/align-main-1.c: Likewise.\n+\t* gcc.target/i386/align-main-2.c: Likewise.\n+\t* gcc.target/i386/sw-1.c: Likewise.\n+\t* gcc.target/i386/avx-vzeroupper-5.c: Add -mabi=sysv\n+\ton x64 mingw target.\n+\t* gcc.target/i386/avx-vzeroupper-4.c: Likewise.\n+\t* gcc.target/i386/pr46295.c: Likewise.\n+\t* gcc.target/i386/amd64-abi-1.c: Likewise.\n+\t* gcc.target/i386/amd64-abi-2.c: Likewise.\n+\t* gcc.target/i386/pr39082-1.c: Likewise.\n+\t* gcc.target/i386/pr39162.c: Likewise.\n+\t* gcc.target/i386/pr22152.c: Likewise.\n+\t* gcc.target/i386/wrgsbase-2.c: Adjust dg-final rule.\n+\t* gcc.target/i386/wrfsbase-2.c: Likewise.\n+\t* gcc.target/i386/local.c: Likewise\n+\t* gcc.target/i386/wrgsbase-1.c: Likewise.\n+\t* gcc.target/i386/wrfsbase-1.c: Likewise.\n+\t* gcc.target/i386/pr39315-3.c: Likewise.\n+\t* gcc.target/i386/pr35767-4.c: Likewise.\n+\t* gcc.target/i386/pr45336-3.c (pextrd): Don't check for\n+\tx64 mingw target.\n+\t* gcc.target/i386/pr45336-2.c: Likewise.\n+\t* gcc.target/i386/pr45336-1.c: Likewise.\n+\t* gcc.target/i386/pr45336-4.c: Likewise.\n+\n 2012-02-27  Tristan Gingold  <gingold@adacore.com>\n \n \t* gnat.dg/array20.ad[sb]: New test."}, {"sha": "f62284f4379c02d3c1f138156861b8947b909e5b", "filename": "gcc/testsuite/gcc.target/i386/align-main-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -4,10 +4,12 @@\n /* { dg-options \"-O2 -mpreferred-stack-boundary=6 -mincoming-stack-boundary=6\" } */\n /* { dg-final { scan-assembler \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-128,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n /* { dg-final { scan-assembler-not \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-64,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n+/* { dg-skip-if \"Options about stack-boundary aren't support\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n #include <stddef.h>\n \n #define ALIGNMENT 128\n+\n typedef int aligned __attribute__((aligned(ALIGNMENT)));\n extern void abort(void);\n "}, {"sha": "b81758918329410ee62802cd97babd5ac0990164", "filename": "gcc/testsuite/gcc.target/i386/align-main-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -4,7 +4,7 @@\n /* { dg-options \"-O2 -mpreferred-stack-boundary=6 -mincoming-stack-boundary=6\" } */\n /* { dg-final { scan-assembler \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-64,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n /* { dg-final { scan-assembler-not \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-128,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n-\n+/* { dg-skip-if \"Options about stack-boundary aren't support\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n #include <stddef.h>\n \n #define ALIGNMENT 32"}, {"sha": "8988f79c73d4f0e11b2ab444c4f3c32ae14e5b14", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-mno-sse\" } */\n+/* { dg-additional-options \"-mabi=sysv\" { target *-*-mingw* } } */\n \n double foo(void) { return 0; }\t/* { dg-error \"SSE disabled\" } */\n void bar(double x) { }"}, {"sha": "6146e8efa29af665edf3376a86da1bf2ec965525", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,8 @@\n /* PR target/26223 */\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-mno-80387\" } */\n+/* { dg-additional-options \"-mabi=sysv\" { target *-*-mingw* } } */\n+\n long double foo(long double x) { return x; } /* { dg-error \"x87 disabled\" } */\n long double bar(long double x) { return x; }\n "}, {"sha": "4676617607e20c9cad6a4673e316ed049e0ae169", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-4.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -mavx -mvzeroupper -dp\" } */\n+/* { dg-additional-options \"-mabi=sysv\" { target x86_64-*-mingw* } } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "0f54602b8c87952f64d9824afea1f60bf8a149b1", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-5.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -mavx -mvzeroupper -dp\" } */\n+/* { dg-additional-options \"-mabi=sysv\" { target x86_64-*-mingw* } } */\n \n #include <immintrin.h>\n "}, {"sha": "1a161597cfeb36377cb6c8ab3afaf0bd39b4bebd", "filename": "gcc/testsuite/gcc.target/i386/bitfield3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield3.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,7 +1,8 @@\n // Test for bitfield alignment in structs on IA-32\n // { dg-do run }\n // { dg-options \"-O2\" }\n-// { dg-options \"-mno-align-double -mno-ms-bitfields\" { target *-*-interix* } }\n+// { dg-additional-options \"-mno-align-double -mno-ms-bitfields\" { target *-*-interix* } }\n+// { dg-additional-options \"-mno-ms-bitfields\" { target *-*-mingw* } }\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "4423001f664f6a280719e8d513642c5972ccd145", "filename": "gcc/testsuite/gcc.target/i386/local.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -funit-at-a-time\" } */\n /* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*eax\" { target ia32 } } } */\n-/* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*edi\" { target { ! { ia32 } } } } } */\n+/* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*(edi|ecx)\" { target { ! { ia32 } } } } } */\n \n /* Verify that local calling convention is used.  */\n static t(int) __attribute__ ((noinline));"}, {"sha": "c2e27c9e6417b4a702b0526146cc096eb8fc8aff", "filename": "gcc/testsuite/gcc.target/i386/pad-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fomit-frame-pointer -mtune=generic\" } */\n-/* { dg-final { scan-assembler \"rep\" } } */\n+/* { dg-final { scan-assembler \"rep\" { target { ! x86_64-*-mingw* } } } } */\n /* { dg-final { scan-assembler-not \"nop\" } } */\n \n void"}, {"sha": "fe45c19d1433e0eefba090f505b6bfec1018c983", "filename": "gcc/testsuite/gcc.target/i386/pad-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=atom\" } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n-/* { dg-final { scan-assembler-times \"nop\" 8 } } */\n+/* { dg-final { scan-assembler-times \"nop\" 8 { target { ! x86_64-*-mingw* } } } } */\n+/* { dg-final { scan-assembler-times \"nop\" 6 { target { x86_64-*-mingw* } } } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */\n \n void"}, {"sha": "4cd03409233a13b3a907a04e0f7c752f0056d8db", "filename": "gcc/testsuite/gcc.target/i386/pad-5b.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5b.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=atom\" } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n-/* { dg-final { scan-assembler-times \"nop\" 4 } } */\n+/* { dg-final { scan-assembler-times \"nop\" 4 { target { ! x86_64-*-mingw* } } } } */\n+/* { dg-final { scan-assembler-times \"nop\" 2 { target { x86_64-*-mingw* } } } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */\n \n int"}, {"sha": "82a3d331c465eab35ff0f05df50003c967eb9c76", "filename": "gcc/testsuite/gcc.target/i386/pad-6b.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6b.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=atom\" } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n-/* { dg-final { scan-assembler-times \"nop\" 6 } } */\n+/* { dg-final { scan-assembler-times \"nop\" 6 { target { ! x86_64-*-mingw* } } } } */\n+/* { dg-final { scan-assembler-times \"nop\" 4 { target { x86_64-*-mingw* } } } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */\n \n int"}, {"sha": "634cd7417ce42acec86d28cde5450fbbcecd597e", "filename": "gcc/testsuite/gcc.target/i386/pad-8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-8.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=atom\" } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n-/* { dg-final { scan-assembler-times \"nop\" 6 } } */\n+/* { dg-final { scan-assembler-times \"nop\" 6 { target { ! x86_64-*-mingw* } } } } */\n+/* { dg-final { scan-assembler-times \"nop\" 4 { target { x86_64-*-mingw* } } } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */\n \n int"}, {"sha": "226a0932bf1f0a364f21bc3b9453af369cc7c22c", "filename": "gcc/testsuite/gcc.target/i386/pad-9.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-9.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=atom\" } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n-/* { dg-final { scan-assembler-times \"nop\" 4 } } */\n+/* { dg-final { scan-assembler-times \"nop\" 4 { target { ! x86_64-*-mingw* } } } } */\n+/* { dg-final { scan-assembler-times \"nop\" 2 { target { x86_64-*-mingw* } } } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */\n \n extern void bar (void);"}, {"sha": "6d24432cfb3da2c0b0d08e8cfccd67b5ad113f07", "filename": "gcc/testsuite/gcc.target/i386/pr22152.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22152.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -msse2\" } */\n /* { dg-options \"-O2 -msse2 -mno-vect8-ret-in-mem\" { target i?86-*-solaris2.[89] *-*-vxworks* } } */\n+/* { dg-additional-options \"-mabi=sysv\" { target x86_64-*-mingw* } } */\n \n #include <mmintrin.h>\n "}, {"sha": "1b58cfd4af6a08443f77a0467bea3c36255c0b9a", "filename": "gcc/testsuite/gcc.target/i386/pr35767-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35767-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35767-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35767-4.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -3,7 +3,7 @@\n /* { dg-require-effective-target dfp } */\n /* { dg-options \"-O -march=x86-64 -mtune=generic -std=gnu99\" } */\n /* { dg-final { scan-assembler-not \"movdqu\" } } */\n-/* { dg-final { scan-assembler \"movdqa\" } } */\n+/* { dg-final { scan-assembler \"movdqa\" { target { ! x86_64-*-mingw* } } } } */\n \n extern _Decimal128 foo (_Decimal128, _Decimal128, _Decimal128);\n "}, {"sha": "1d8be2a7d98622cce6e42339e101b1be4a6511cd", "filename": "gcc/testsuite/gcc.target/i386/pr39082-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39082-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39082-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39082-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,7 @@\n /* PR target/39082 */\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2\" } */\n+/* { dg-additional-options \"-mabi=sysv\" { target x86_64-*-mingw* } } */\n \n union un\n {"}, {"sha": "c549106adbb7ef97689e0d033a876b2271a50a01", "filename": "gcc/testsuite/gcc.target/i386/pr39162.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Wno-psabi -msse2 -mno-avx\" } */\n+/* { dg-additional-options \"-mabi=sysv\" { target x86_64-*-mingw* } } */\n \n typedef long long __m256i __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "3b61ad0253ba5d46b0728ade1d7abd551c2d31f7", "filename": "gcc/testsuite/gcc.target/i386/pr39315-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-3.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -4,7 +4,7 @@\n /* { dg-final { scan-assembler-not \"movups\" } } */\n /* { dg-final { scan-assembler-not \"movlps\" } } */\n /* { dg-final { scan-assembler-not \"movhps\" } } */\n-/* { dg-final { scan-assembler \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-128,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n+/* { dg-final { scan-assembler \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-128,\\[\\\\t \\]*%\\[re\\]?sp\" { target { ! x86_64-*-mingw* } } } } */\n /* { dg-final { scan-assembler \"movaps\" } } */\n \n typedef float __m128 __attribute__ ((__vector_size__ (16)));"}, {"sha": "3e50c7b15355ed524331ef4ebd4fd56c0fa25637", "filename": "gcc/testsuite/gcc.target/i386/pr44130.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44130.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44130.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44130.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ftree-vectorize -mavx -mtune=generic\" } */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n /* { dg-final { scan-assembler \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-32,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n /* { dg-final { scan-assembler \"vmovaps\\[\\\\t \\]*%ymm\" } } */\n "}, {"sha": "db6c9400d3b3e6777391526ca19d8f452b48b39b", "filename": "gcc/testsuite/gcc.target/i386/pr45336-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -8,7 +8,7 @@\n /* { dg-final { scan-assembler-not \"cwtl\" } } */\n /* { dg-final { scan-assembler \"pextrb\" } } */\n /* { dg-final { scan-assembler \"pextrw\" } } */\n-/* { dg-final { scan-assembler \"pextrd\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" { target { ! x86_64-*-mingw* } } } } */\n \n #include <smmintrin.h>\n unsigned int foo8(__m128i x) { return _mm_extract_epi8(x, 4); }"}, {"sha": "3e51591fc45d0b6b90fc89137c7f2f5d29bbf737", "filename": "gcc/testsuite/gcc.target/i386/pr45336-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -9,7 +9,7 @@\n /* { dg-final { scan-assembler-not \"cltq\" } } */\n /* { dg-final { scan-assembler \"pextrb\" } } */\n /* { dg-final { scan-assembler \"pextrw\" } } */\n-/* { dg-final { scan-assembler \"pextrd\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" { target { ! x86_64-*-mingw* } } } } */\n \n #include <smmintrin.h>\n unsigned long long int foo8(__m128i x) { return _mm_extract_epi8(x, 4); }"}, {"sha": "b2168c006c50556721563e37e02a3977e4baba16", "filename": "gcc/testsuite/gcc.target/i386/pr45336-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-3.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -5,7 +5,7 @@\n /* { dg-final { scan-assembler \"(movswl|cwtl)\" } } */\n /* { dg-final { scan-assembler \"pextrb\" } } */\n /* { dg-final { scan-assembler \"pextrw\" } } */\n-/* { dg-final { scan-assembler \"pextrd\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" { target { ! x86_64-*-mingw* } } } } */\n \n #include <smmintrin.h>\n int foo8(__m128i x) { return (char) _mm_extract_epi8(x, 4); }"}, {"sha": "8b66a6a1da5fe283d2acb7584d28af5c8424b0b8", "filename": "gcc/testsuite/gcc.target/i386/pr45336-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-4.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -6,7 +6,7 @@\n /* { dg-final { scan-assembler \"(cltq|movslq)\" } } */\n /* { dg-final { scan-assembler \"pextrb\" } } */\n /* { dg-final { scan-assembler \"pextrw\" } } */\n-/* { dg-final { scan-assembler \"pextrd\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" { target { ! x86_64-*-mingw* } } } } */\n \n #include <smmintrin.h>\n long long int foo8(__m128i x) { return (char) _mm_extract_epi8(x, 4); }"}, {"sha": "52e5522a879d90f4d0f909f415c33520ded5f7ae", "filename": "gcc/testsuite/gcc.target/i386/pr45352-2.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45352-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45352-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45352-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -4,6 +4,8 @@\n typedef char uint8_t;\n typedef uint32_t;\n typedef vo_frame_t;\n+__extension__ typedef __SIZE_TYPE__ size_t;\n+\n struct vo_frame_s\n {\n     uint8_t base[3];\n@@ -43,7 +45,7 @@ mpeg2dec_accel_t;\n static int bitstream_init (picture_t * picture, void *start)\n {\n   picture->bitstream_ptr = start;\n-  return (int) (long) start;\n+  return (int) (size_t) start;\n }\n static slice_xvmc_init (picture_t * picture, int code)\n {\n@@ -56,7 +58,7 @@ static slice_xvmc_init (picture_t * picture, int code)\n     picture->f_motion.ref\n       [0]\n       [0]\n-      = (char) (long) (forward_reference_frame->base + (offset ? picture->pitches[0] : 0));\n+      = (char) (size_t) (forward_reference_frame->base + (offset ? picture->pitches[0] : 0));\n   picture->f_motion.ref[0][1] = (offset);\n   if (picture->picture_structure)\n       picture->pitches[0] <<= picture->pitches[1] <<= 1;\n@@ -91,7 +93,7 @@ void\n mpeg2_xvmc_slice\n   (mpeg2dec_accel_t * accel, picture_t * picture, int code, uint8_t buffer,int mba_inc)\n {\n-  xine_xvmc_t * xvmc = (xine_xvmc_t *) (long) bitstream_init (picture, (void *) (long) buffer);\n+  xine_xvmc_t * xvmc = (xine_xvmc_t *) (size_t) bitstream_init (picture, (void *) (size_t) buffer);\n   slice_xvmc_init (picture, code);\n     while (1)\n       {"}, {"sha": "b7fccb7fb34d2e296b6cc52b5e208030d96e86b7", "filename": "gcc/testsuite/gcc.target/i386/pr46295.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46295.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46295.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46295.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -mavx -mtune=generic -dp\" } */\n+/* { dg-additional-options \"-mabi=sysv\" { target x86_64-*-mingw* } } */\n \n typedef double EXPRESS[5];\n void Parse_Rel_Factor (EXPRESS Express,int *Terms);"}, {"sha": "11eb51a039404c69aba1f4c02844eb1c02ec3c22", "filename": "gcc/testsuite/gcc.target/i386/pr46470.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46470.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46470.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46470.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -6,7 +6,8 @@\n    transformed to push+pop.  We also want to force unwind info updates.  */\n /* { dg-options \"-Os -fomit-frame-pointer -fasynchronous-unwind-tables\" } */\n /* { dg-options \"-Os -fomit-frame-pointer -mpreferred-stack-boundary=3 -fasynchronous-unwind-tables\" { target ia32 } } */\n-\n+/* ms_abi has reserved stack-region.  */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n void f();\n void g() { f(); f(); }\n "}, {"sha": "0fd8607bbddefb71b91cdd002c431c650e295a0a", "filename": "gcc/testsuite/gcc.target/i386/pr46939.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46939.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46939.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46939.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n+\n+__extension__ typedef __SIZE_TYPE__ size_t;\n+\n int\n php_filter_parse_int (char const *str, unsigned int str_len, long *ret)\n {\n@@ -23,7 +26,7 @@ php_filter_parse_int (char const *str, unsigned int str_len, long *ret)\n     default:;\n       break;\n     }\n-  if ((unsigned long) str < (unsigned long) end)\n+  if ((size_t) str < (size_t) end)\n     {\n       if ((int const) *str >= 49)\n \t{\n@@ -59,7 +62,7 @@ php_filter_parse_int (char const *str, unsigned int str_len, long *ret)\n     {\n       return (-1);\n     }\n-  while ((unsigned long) str < (unsigned long) end)\n+  while ((size_t) str < (size_t) end)\n     {\n       if ((int const) *str >= 48)\n \t{"}, {"sha": "9cdc12763b0b97cdcff6aacba82d4f5f3095d29b", "filename": "gcc/testsuite/gcc.target/i386/sse2-mul-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mul-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -14,6 +14,11 @@\n \n #include <stdlib.h>\n \n+/* mingw runtime don't provide random().  */\n+#ifdef __MINGW32__\n+#define random rand\n+#endif\n+\n #define N 512\n static short a1[N], a2[N], a3[N];\n static unsigned short b1[N], b2[N], b3[N];"}, {"sha": "8fe71b71c576a7feff16e1147b7a89e1bbf00fb2", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-blendps-2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -8,6 +8,11 @@\n #include <string.h>\n #include <stdlib.h>\n \n+/* mingw runtime don't provide random().  */\n+#ifdef __MINGW32__\n+#define random rand\n+#endif\n+\n #define NUM 20\n \n #undef MASK"}, {"sha": "3f4b335aca6ae205ad4d3c857eaf8f3eb72afba4", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-blendps.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -16,6 +16,11 @@\n #include <string.h>\n #include <stdlib.h>\n \n+/* mingw runtime don't provide random().  */\n+#ifdef __MINGW32__\n+#define random rand\n+#endif\n+\n #define NUM 20\n \n #ifndef MASK"}, {"sha": "fcb1bbd80bac8fd882cc11ebfb221fc04c6bb8fc", "filename": "gcc/testsuite/gcc.target/i386/sw-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsw-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fshrink-wrap -fdump-rtl-pro_and_epilogue\" } */\n+/* { dg-skip-if \"No shrink-wrapping preformed\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n #include <string.h>\n "}, {"sha": "dc1503817b8da79d82b08848faeb615cb0fa0810", "filename": "gcc/testsuite/gcc.target/i386/wrfsbase-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrfsbase-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrfsbase-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrfsbase-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfsgsbase\" } */\n-/* { dg-final { scan-assembler \"wrfsbase\\[ \\t]+(%|)edi\" } } */\n+/* { dg-final { scan-assembler \"wrfsbase\\[ \\t]+(%|)(edi|ecx)\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "fc4a7b5fff7886a4f2fbb8047b0d0bb08b3be65d", "filename": "gcc/testsuite/gcc.target/i386/wrfsbase-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrfsbase-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrfsbase-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrfsbase-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfsgsbase\" } */\n-/* { dg-final { scan-assembler \"wrfsbase\\[ \\t]+(%|)rdi\" } } */\n+/* { dg-final { scan-assembler \"wrfsbase\\[ \\t]+(%|)(rdi|rcx)\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "5474288be0c07eeb900c1c52a571807a81849859", "filename": "gcc/testsuite/gcc.target/i386/wrgsbase-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrgsbase-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrgsbase-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrgsbase-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfsgsbase\" } */\n-/* { dg-final { scan-assembler \"wrgsbase\\[ \\t]+(%|)edi\" } } */\n+/* { dg-final { scan-assembler \"wrgsbase\\[ \\t]+(%|)(edi|ecx)\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "cf94750842360616851cccd6e5ae029080bdc5b1", "filename": "gcc/testsuite/gcc.target/i386/wrgsbase-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrgsbase-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrgsbase-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwrgsbase-2.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfsgsbase\" } */\n-/* { dg-final { scan-assembler \"wrgsbase\\[ \\t]+(%|)rdi\" } } */\n+/* { dg-final { scan-assembler \"wrgsbase\\[ \\t]+(%|)(rdi|rcx)\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "ee3d2990390ab8ef354b9ef3f0769e2418e46e49", "filename": "gcc/testsuite/gcc.target/i386/xop-vshift-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vshift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae980b1596770345883aadfba1aeabcdb0e3363/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vshift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vshift-1.c?ref=bae980b1596770345883aadfba1aeabcdb0e3363", "patch": "@@ -19,6 +19,11 @@\n #define TYPE2 long long\n #endif\n \n+/* mingw runtime don't provide random().  */\n+#ifdef __MINGW32__\n+#define random rand\n+#endif\n+\n signed TYPE1 a[N], b[N], g[N];\n unsigned TYPE1 c[N], h[N];\n signed TYPE2 d[N], e[N], j[N];"}]}