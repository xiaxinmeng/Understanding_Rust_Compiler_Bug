{"sha": "e42ac3dede382243e5ded0b994ec2656d991f6a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyYWMzZGVkZTM4MjI0M2U1ZGVkMGI5OTRlYzI2NTZkOTkxZjZhOQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-02-08T00:25:06Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-02-08T00:25:06Z"}, "message": "rs6000.md (ctz<mode>2, [...]): Remove constraints from define_expand's match_operands.\n\n\n\t* config/rs6000/rs6000.md (ctz<mode>2, ffs<mode>2, popcount<mode>2,\n\tparity<mode>2, smulsi3_highpart, abstf2_internal, allocate_stack,\n\ttablejumpdi, movsi_to_cr_one): Remove constraints from\n\tdefine_expand's match_operands.\n\nFrom-SVN: r121706", "tree": {"sha": "e1658659ec1f96d997049638cc50cbc3c10c6d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1658659ec1f96d997049638cc50cbc3c10c6d2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e42ac3dede382243e5ded0b994ec2656d991f6a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42ac3dede382243e5ded0b994ec2656d991f6a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42ac3dede382243e5ded0b994ec2656d991f6a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42ac3dede382243e5ded0b994ec2656d991f6a9/comments", "author": null, "committer": null, "parents": [{"sha": "6339e6b1871d770f00fc71a180fe739ee7c1bb65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6339e6b1871d770f00fc71a180fe739ee7c1bb65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6339e6b1871d770f00fc71a180fe739ee7c1bb65"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "da613e789fba0025bc66ee6043384d8c666294a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42ac3dede382243e5ded0b994ec2656d991f6a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42ac3dede382243e5ded0b994ec2656d991f6a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e42ac3dede382243e5ded0b994ec2656d991f6a9", "patch": "@@ -1,3 +1,10 @@\n+2007-02-07  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* config/rs6000/rs6000.md (ctz<mode>2, ffs<mode>2, popcount<mode>2,\n+\tparity<mode>2, smulsi3_highpart, abstf2_internal, allocate_stack,\n+\ttablejumpdi, movsi_to_cr_one): Remove constraints from\n+\tdefine_expand's match_operands.\n+\n 2007-02-07  Roger Sayle  <roger@eyesopen.com>\n \n \t* global.c (compute_regsets): Move declatation of \"i\" inside of"}, {"sha": "21959a53f0fe118b456a9ba1dcfbdaf3f5efa1df", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42ac3dede382243e5ded0b994ec2656d991f6a9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42ac3dede382243e5ded0b994ec2656d991f6a9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e42ac3dede382243e5ded0b994ec2656d991f6a9", "patch": "@@ -2129,12 +2129,12 @@\n \n (define_expand \"ctz<mode>2\"\n   [(set (match_dup 2)\n-\t(neg:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")))\n+\t(neg:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"\")))\n    (parallel [(set (match_dup 3) (and:GPR (match_dup 1)\n \t\t\t\t\t  (match_dup 2)))\n \t      (clobber (scratch:CC))])\n    (set (match_dup 4) (clz:GPR (match_dup 3)))\n-   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"\")\n \t(minus:GPR (match_dup 5) (match_dup 4)))]\n   \"\"\n   {\n@@ -2146,12 +2146,12 @@\n \n (define_expand \"ffs<mode>2\"\n   [(set (match_dup 2)\n-\t(neg:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")))\n+\t(neg:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"\")))\n    (parallel [(set (match_dup 3) (and:GPR (match_dup 1)\n \t\t\t\t\t  (match_dup 2)))\n \t      (clobber (scratch:CC))])\n    (set (match_dup 4) (clz:GPR (match_dup 3)))\n-   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"\")\n \t(minus:GPR (match_dup 5) (match_dup 4)))]\n   \"\"\n   {\n@@ -2169,17 +2169,17 @@\n   \"popcntb %0,%1\")\n \n (define_expand \"popcount<mode>2\"\n-  [(use (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\"))\n-   (use (match_operand:GPR 1 \"gpc_reg_operand\" \"r\"))]\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"\")\n+\t(popcount:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"\")))]\n   \"TARGET_POPCNTB\"\n   {\n     rs6000_emit_popcount (operands[0], operands[1]);\n     DONE;\n   })\n \n (define_expand \"parity<mode>2\"\n-  [(use (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\"))\n-   (use (match_operand:GPR 1 \"gpc_reg_operand\" \"r\"))]\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"\")\n+\t(parity:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"\")))]\n   \"TARGET_POPCNTB\"\n   {\n     rs6000_emit_parity (operands[0], operands[1]);\n@@ -6354,9 +6354,9 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (sign_extend:DI\n-\t\t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n+\t\t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n \t\t\t       (sign_extend:DI\n-\t\t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n+\t\t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"\")))\n \t\t      (const_int 32))))]\n   \"\"\n   \"\n@@ -8805,8 +8805,8 @@\n }\")\n \n (define_expand \"abstf2_internal\"\n-  [(set (match_operand:TF 0 \"gpc_reg_operand\" \"=f\")\n-\t(match_operand:TF 1 \"gpc_reg_operand\" \"f\"))\n+  [(set (match_operand:TF 0 \"gpc_reg_operand\" \"\")\n+\t(match_operand:TF 1 \"gpc_reg_operand\" \"\"))\n    (set (match_dup 3) (match_dup 5))\n    (set (match_dup 5) (abs:DF (match_dup 5)))\n    (set (match_dup 4) (compare:CCFP (match_dup 3) (match_dup 5)))\n@@ -10288,7 +10288,7 @@\n ;; We move the back-chain and decrement the stack pointer.\n \n (define_expand \"allocate_stack\"\n-  [(set (match_operand 0 \"gpc_reg_operand\" \"=r\")\n+  [(set (match_operand 0 \"gpc_reg_operand\" \"\")\n \t(minus (reg 1) (match_operand 1 \"reg_or_short_operand\" \"\")))\n    (set (reg 1)\n \t(minus (reg 1) (match_dup 1)))]\n@@ -14047,7 +14047,7 @@\n \n (define_expand \"tablejumpdi\"\n   [(set (match_dup 4)\n-        (sign_extend:DI (match_operand:SI 0 \"lwa_operand\" \"rm\")))\n+        (sign_extend:DI (match_operand:SI 0 \"lwa_operand\" \"\")))\n    (set (match_dup 3)\n \t(plus:DI (match_dup 4)\n \t\t (match_dup 2)))\n@@ -14387,8 +14387,8 @@\n ; faster; for instance, on the 601 and 750.\n \n (define_expand \"movsi_to_cr_one\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=y\")\n-        (unspec:CC [(match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"\")\n+        (unspec:CC [(match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t    (match_dup 2)] UNSPEC_MOVESI_TO_CR))]\n   \"\"\n   \"operands[2] = GEN_INT (1 << (75 - REGNO (operands[0])));\")"}]}