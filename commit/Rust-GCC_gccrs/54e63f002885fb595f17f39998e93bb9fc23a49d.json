{"sha": "54e63f002885fb595f17f39998e93bb9fc23a49d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlNjNmMDAyODg1ZmI1OTVmMTdmMzk5OThlOTNiYjlmYzIzYTQ5ZA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2016-11-17T14:22:17Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-11-17T14:22:17Z"}, "message": "re PR tree-optimization/77848 (Gimple if-conversion results in redundant comparisons)\n\n[gcc]\n\n2016-11-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n            Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77848\n\t* tree-if-conv.c (tree_if_conversion): Always version loops unless\n\tthe user specified -ftree-loop-if-convert.\n\n[gcc/testsuite]\n\n2016-11-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n            Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77848\n\t* gfortran.dg/vect/pr77848.f: New test.\n\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r242550", "tree": {"sha": "08a821e036a22a2795343954aab882f7c8e78e47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08a821e036a22a2795343954aab882f7c8e78e47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e63f002885fb595f17f39998e93bb9fc23a49d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e63f002885fb595f17f39998e93bb9fc23a49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e63f002885fb595f17f39998e93bb9fc23a49d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e63f002885fb595f17f39998e93bb9fc23a49d/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2fe3721128b991538b5a416ca1d8671901d0a1f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe3721128b991538b5a416ca1d8671901d0a1f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe3721128b991538b5a416ca1d8671901d0a1f1"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "b9b3b8a8e736ebd3f4242ec3d478aad7eceb48ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54e63f002885fb595f17f39998e93bb9fc23a49d", "patch": "@@ -1,3 +1,10 @@\n+2016-11-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+            Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77848\n+\t* tree-if-conv.c (tree_if_conversion): Always version loops unless\n+\tthe user specified -ftree-loop-if-convert.\n+\n 2016-11-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR target/77308\n@@ -116,6 +123,7 @@\n \t* rtl.h: Declare gt_ggc_mx and gt_pch_nx.\n \n 2016-11-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77848\n \t* tree-if-conv.c (version_loop_for_if_conversion): When versioning"}, {"sha": "bd76620915013842fd4c8890740bbd4b0d6dc942", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54e63f002885fb595f17f39998e93bb9fc23a49d", "patch": "@@ -1,3 +1,9 @@\n+2016-11-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+            Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77848\n+\t* gfortran.dg/vect/pr77848.f: New test.\n+\n 2016-11-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR target/77308"}, {"sha": "d54676eee2d95225039e3a2dfd659d7e9cec8d52", "filename": "gcc/testsuite/gfortran.dg/vect/pr77848.f", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr77848.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr77848.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr77848.f?ref=54e63f002885fb595f17f39998e93bb9fc23a49d", "patch": "@@ -0,0 +1,24 @@\n+! PR 77848: Verify versioning is on when vectorization fails\n+! { dg-do compile }\n+! { dg-options \"-O3 -ffast-math -fdump-tree-ifcvt -fdump-tree-vect-details\" }\n+\n+      subroutine sub(x,a,n,m)\n+      implicit none\n+      real*8 x(*),a(*),atemp\n+      integer i,j,k,m,n\n+      real*8 s,t,u,v\n+      do j=1,m\n+         atemp=0.d0\n+         do i=1,n\n+            if (abs(a(i)).gt.atemp) then\n+               atemp=a(i)\n+               k = i\n+            end if\n+         enddo\n+         call dummy(atemp,k)\n+      enddo\n+      return\n+      end\n+\n+! { dg-final { scan-tree-dump \"LOOP_VECTORIZED\" \"ifcvt\" } }\n+! { dg-final { scan-tree-dump \"vectorized 0 loops in function\" \"vect\" } }"}, {"sha": "1235faf81b6308127f29f9b81c3228e91b9f5ac3", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e63f002885fb595f17f39998e93bb9fc23a49d/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=54e63f002885fb595f17f39998e93bb9fc23a49d", "patch": "@@ -2803,10 +2803,12 @@ tree_if_conversion (struct loop *loop)\n \t  || loop->dont_vectorize))\n     goto cleanup;\n \n-  /* Either version this loop, or if the pattern is right for outer-loop\n-     vectorization, version the outer loop.  In the latter case we will\n-     still if-convert the original inner loop.  */\n-  if ((any_pred_load_store || any_complicated_phi)\n+  /* Since we have no cost model, always version loops unless the user\n+     specified -ftree-loop-if-convert.  Either version this loop, or if\n+     the pattern is right for outer-loop vectorization, version the\n+     outer loop.  In the latter case we will still if-convert the\n+     original inner loop.  */\n+  if (flag_tree_loop_if_convert != 1\n       && !version_loop_for_if_conversion\n       (versionable_outer_loop_p (loop_outer (loop))\n        ? loop_outer (loop) : loop))"}]}