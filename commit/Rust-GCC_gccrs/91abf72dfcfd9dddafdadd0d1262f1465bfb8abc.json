{"sha": "91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFhYmY3MmRmY2ZkOWRkZGFmZGFkZDBkMTI2MmYxNDY1YmZiOGFiYw==", "commit": {"author": {"name": "Hartmut Penner", "email": "hpenner@de.ibm.com", "date": "2001-07-31T06:38:29Z"}, "committer": {"name": "Hartmut Penner", "email": "hpenner@gcc.gnu.org", "date": "2001-07-31T06:38:29Z"}, "message": "install.texi: Add s390 s390x as new targets.\n\n\t*doc/install.texi: Add s390 s390x as new targets.\n\t*doc/invoke.texi: Add documantation of S/390 and zSeries\n\ttarget options.\n\t* doc/md.texi: Add documantation of S/390 and zSeries constraints.\n\nFrom-SVN: r44501", "tree": {"sha": "da02ff9d39838e3308ab44a7d98cf78b2f493483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da02ff9d39838e3308ab44a7d98cf78b2f493483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/comments", "author": null, "committer": null, "parents": [{"sha": "8406d02387c509bd230d1907d2a9b780801757c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8406d02387c509bd230d1907d2a9b780801757c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8406d02387c509bd230d1907d2a9b780801757c2"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "85b915b75e37fc3427a08c527a26bab660563f34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "patch": "@@ -1,3 +1,10 @@\n+2001-07-31 Hartmut Penner <hpenner@de.ibm.com>\n+\n+        * doc/install.texi: Add s390 and s390x as new targets.\n+        * doc/invoke.texi: Add documantation of S/390 and zSeries\n+        target options.\n+        * doc/md.texi: Add documantation of S/390 and zSeries constraints.\n+\n 2001-07-30  Roman Zippel  <zippel@linux-m68k.org>\n \n \t* config/m68k/m68k.md: Replace all general_operand with"}, {"sha": "1e61127af31352eddbaa764a347c3f3645ecf959", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "patch": "@@ -1375,6 +1375,10 @@ GNU Compiler Collection on your machine.\n @item\n @uref{#romp-*-aos,,romp-*-aos, romp-*-mach}\n @item\n+@uref{#s390-*-linux*}\n+@item\n+@uref{#s390x-*-linux*}\n+@item\n @uref{#*-*-solaris*,,*-*-solaris*}\n @item\n @uref{#sparc-sun-solaris*,,sparc-sun-solaris*}\n@@ -2926,6 +2930,20 @@ mismatches between the stage 2 and stage 3 compilers in various files.\n These errors are minor differences in some floating-point constants and\n can be safely ignored; the stage 3 compiler is correct.\n \n+@html\n+</p>\n+<hr>\n+@end html\n+@heading @anchor{s390-*-linux*}s390-*-linux*\n+S/390 system running Linux for S/390@. \n+\n+@html\n+</p>\n+<hr>\n+@end html\n+@heading @anchor{s390x-*-linux*}s390x-*-linux*\n+zSeries system (64 Bit) running Linux for zSeries@. \n+\n @html\n </p>\n <hr>"}, {"sha": "4ac18346b69a8205c0977853936a47a316586da1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "patch": "@@ -577,6 +577,12 @@ in the following sections.\n -minline-divide-max-throughput  -mno-dwarf2-asm @gol\n -mfixed-range=@var{register-range}}\n \n+@emph{S/390 and zSeries Options}\n+@gccoptlist{\n+-mhard-float  -msoft-float  -mbackchain  -mno-backchain @gol\n+-msmall-exec  -mno-small-exec  -mmvcle -mno-mvcle @gol\n+-m64 -m31 -mdebug -mno-debug}\n+\n @item Code Generation Options\n @xref{Code Gen Options,,Options for Code Generation Conventions}.\n @gccoptlist{\n@@ -5083,6 +5089,7 @@ that macro, which enables you to change the defaults.\n * MCore Options::\n * IA-64 Options::\n * D30V Options::\n+* S/390 and zSeries Options::\n @end menu\n \n @node M680x0 Options\n@@ -8976,6 +8983,71 @@ Specify the maximum number of conditionally executed instructions that\n replace a branch.  The default is 4.\n @end table\n \n+@node S/390 and zSeries Options\n+@subsection S/390 and zSeries Options\n+@cindex S/390 and zSeries Options\n+\n+These are the @samp{-m} options defined for the S/390 and zSeries architecture.\n+\n+@table @gcctabopt\n+@item -mhard-float\n+@itemx -msoft-float\n+@opindex mhard-float\n+@opindex msoft-float\n+Use (do not use) the hardware floating-point instructions and registers\n+for floating-point operations.  When @option{-msoft-float} is specified,\n+functions in @file{libgcc.a} will be used to perform floating-point\n+operations.  When @option{-mhard-float} is specified, the compiler\n+generates IEEE floating-point instructions.  This is the default.\n+\n+@item -mbackchain\n+@itemx -mno-backchain\n+@opindex mbackchain\n+@opindex mno-backchain\n+Generate (or do not generate) code which maintains an explicit \n+backchain within the stack frame that points to the caller's frame.\n+This is currently needed to allow debugging.  The default is to\n+generate the backchain.\n+\n+@item -msmall-exec\n+@itemx -mno-small-exec\n+@opindex msmall-exec\n+@opindex mno-small-exec\n+Generate (or do not generate) code using the @code{bras} instruction \n+to do subroutine calls. \n+This only works reliably if the total executable size does not\n+exceed 64k.  The default is to use the @code{basr} instruction instead,\n+which does not have this limitation.\n+\n+@item -m64\n+@itemx -m31\n+@opindex m64\n+@opindex m31\n+When @option{-m31} is specified, generate code compliant to the\n+Linux for S/390 ABI@.  When @option{-m64} is specified, generate\n+code compliant to the Linux for zSeries ABI@.  This allows GCC in\n+particular to generate 64-bit instructions.  For the @samp{s390}\n+targets, the default is @option{-m31}, while the @samp{s390x} \n+targets default to @option{-m64}.\n+\n+@item -mmvcle\n+@itemx -mno-mvcle\n+@opindex mmvcle\n+@opindex mno-mvcle\n+Generate (or do not generate) code using the @code{mvcle} instruction \n+to perform block moves.  When @option{-mno-mvcle} is specifed,\n+use a @code{mvc} loop instead.  This is the default.\n+\n+@item -mdebug\n+@itemx -mno-debug\n+@opindex mdebug\n+@opindex mno-debug\n+Print (or do not print) additional debug information when compiling.\n+The default is to not print debug information.\n+\n+@end table\n+\n+\n @node Code Gen Options\n @section Options for Code Generation Conventions\n @cindex code generation conventions"}, {"sha": "e546706e7059789e95792f499e73eebf79b459e9", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91abf72dfcfd9dddafdadd0d1262f1465bfb8abc/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=91abf72dfcfd9dddafdadd0d1262f1465bfb8abc", "patch": "@@ -1963,6 +1963,38 @@ Direct memory reference\n Symbolic address\n \n @end table\n+\n+@item S/390 and zSeries---@file{s390.h}\n+@table @code\n+@item a\n+Address register (general purpose register except r0)\n+\n+@item d\n+Data register (arbitrary general purpose register)\n+\n+@item f\n+Floating-point register\n+\n+@item I\n+Unsigned 8-bit constant (0--255)\n+\n+@item J\n+Unsigned 12-bit constant (0--4095)\n+\n+@item K\n+Signed 16-bit constant (@minus{}32768--32767)\n+\n+@item L\n+Unsigned 16-bit constant (0--65535)\n+\n+@item Q\n+Memory reference without index register\n+\n+@item S\n+Symbolic constant suitable for use with the @code{larl} instruction\n+\n+@end table\n+\n @end table\n \n @ifset INTERNALS"}]}