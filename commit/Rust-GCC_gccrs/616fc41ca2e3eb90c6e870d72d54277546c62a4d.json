{"sha": "616fc41ca2e3eb90c6e870d72d54277546c62a4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2ZmM0MWNhMmUzZWI5MGM2ZTg3MGQ3MmQ1NDI3NzU0NmM2MmE0ZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-01T16:03:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-01T16:03:13Z"}, "message": "[AArch64] Update expected output for sve/var_stride_[24].c\n\nAfter Segher's recent combine change, these tests now use a single\ninstruction to do the \"and\" and \"lsl 10\".  This is a good thing,\nso the patch updates the expected output accordingly.\n\n2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/var_stride_2.c: Update expected form\n\tof range check.\n\t* gcc.target/aarch64/sve/var_stride_4.c: Likewise.\n\nFrom-SVN: r263228", "tree": {"sha": "4179f0c4cbdd38c937a9280d494396fbeedb40d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4179f0c4cbdd38c937a9280d494396fbeedb40d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/616fc41ca2e3eb90c6e870d72d54277546c62a4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616fc41ca2e3eb90c6e870d72d54277546c62a4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616fc41ca2e3eb90c6e870d72d54277546c62a4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616fc41ca2e3eb90c6e870d72d54277546c62a4d/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "93fc807f5ff30bf7b9a106d833588ae6c1a97f2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616fc41ca2e3eb90c6e870d72d54277546c62a4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616fc41ca2e3eb90c6e870d72d54277546c62a4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=616fc41ca2e3eb90c6e870d72d54277546c62a4d", "patch": "@@ -1,3 +1,9 @@\n+2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/var_stride_2.c: Update expected form\n+\tof range check.\n+\t* gcc.target/aarch64/sve/var_stride_4.c: Likewise.\n+\n 2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR target/86753"}, {"sha": "30f6d2691b8552eab8f38cf8e8a6bdd0576395aa", "filename": "gcc/testsuite/gcc.target/aarch64/sve/var_stride_2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616fc41ca2e3eb90c6e870d72d54277546c62a4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvar_stride_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616fc41ca2e3eb90c6e870d72d54277546c62a4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvar_stride_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvar_stride_2.c?ref=616fc41ca2e3eb90c6e870d72d54277546c62a4d", "patch": "@@ -16,7 +16,8 @@ f (TYPE *x, TYPE *y, unsigned short n, unsigned short m)\n /* { dg-final { scan-assembler {\\tldr\\tw[0-9]+} } } */\n /* { dg-final { scan-assembler {\\tstr\\tw[0-9]+} } } */\n /* Should multiply by (257-1)*4 rather than (VF-1)*4.  */\n-/* { dg-final { scan-assembler-times {\\tadd\\tx[0-9]+, x[0-9]+, x[0-9]+, lsl 10\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tubfiz\\tx[0-9]+, x2, 10, 16\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tubfiz\\tx[0-9]+, x3, 10, 16\\n} 1 } } */\n /* { dg-final { scan-assembler-not {\\tcmp\\tx[0-9]+, 0} } } */\n /* { dg-final { scan-assembler-not {\\tcmp\\tw[0-9]+, 0} } } */\n /* { dg-final { scan-assembler-not {\\tcsel\\tx[0-9]+} } } */"}, {"sha": "d2e74f9d41751235e89f7732833b31bd5d8367e3", "filename": "gcc/testsuite/gcc.target/aarch64/sve/var_stride_4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616fc41ca2e3eb90c6e870d72d54277546c62a4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvar_stride_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616fc41ca2e3eb90c6e870d72d54277546c62a4d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvar_stride_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvar_stride_4.c?ref=616fc41ca2e3eb90c6e870d72d54277546c62a4d", "patch": "@@ -16,7 +16,8 @@ f (TYPE *x, TYPE *y, int n, int m)\n /* { dg-final { scan-assembler {\\tldr\\tw[0-9]+} } } */\n /* { dg-final { scan-assembler {\\tstr\\tw[0-9]+} } } */\n /* Should multiply by (257-1)*4 rather than (VF-1)*4.  */\n-/* { dg-final { scan-assembler-times {\\tlsl\\tx[0-9]+, x[0-9]+, 10\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tsbfiz\\tx[0-9]+, x2, 10, 32\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tsbfiz\\tx[0-9]+, x3, 10, 32\\n} 1 } } */\n /* { dg-final { scan-assembler {\\tcmp\\tw2, 0} } } */\n /* { dg-final { scan-assembler {\\tcmp\\tw3, 0} } } */\n /* { dg-final { scan-assembler-times {\\tcsel\\tx[0-9]+} 4 } } */"}]}