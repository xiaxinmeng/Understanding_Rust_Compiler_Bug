{"sha": "1afc355025f984fb0b26d68a7337f987890e6042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFmYzM1NTAyNWY5ODRmYjBiMjZkNjhhNzMzN2Y5ODc4OTBlNjA0Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-11T06:38:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-11T06:38:34Z"}, "message": "new tests\n\nFrom-SVN: r16426", "tree": {"sha": "6bcf817e082ef03d76898ab88cd6dda4a0cf2b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bcf817e082ef03d76898ab88cd6dda4a0cf2b3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1afc355025f984fb0b26d68a7337f987890e6042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1afc355025f984fb0b26d68a7337f987890e6042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1afc355025f984fb0b26d68a7337f987890e6042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1afc355025f984fb0b26d68a7337f987890e6042/comments", "author": null, "committer": null, "parents": [{"sha": "343fdf03d406d874d1a6fe90d94a16949a2d9f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343fdf03d406d874d1a6fe90d94a16949a2d9f4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343fdf03d406d874d1a6fe90d94a16949a2d9f4b"}], "stats": {"total": 871, "additions": 871, "deletions": 0}, "files": [{"sha": "ef4dcb4f19db132291b1dbef238f69547943ad47", "filename": "gcc/testsuite/g++.old-deja/g++.eh/rethrow1.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow1.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,45 @@\n+// Testcase for proper handling of rethrow.\n+\n+#include <stdio.h>\n+\n+int c, d;\n+\n+struct A\n+{\n+  int i;\n+  A () { i = ++c; printf (\"A() %d\\n\", i); }\n+  A (const A&) { i = ++c; printf (\"A(const A&) %d\\n\", i); }\n+  ~A() { printf (\"~A() %d\\n\", i); ++d; }\n+};\n+\n+int\n+main ()\n+{\n+  try\n+    {\n+      try\n+\t{\n+\t  printf (\"Throwing 1...\\n\");\n+\t  throw A();\n+\t}\n+      catch (A)\n+\t{\n+\t  try\n+\t    {\n+\t      printf (\"Throwing 2...\\n\");\n+\t      throw A();\n+\t    }\n+\t  catch (A)\n+\t    {\n+\t      printf (\"Throwing 3...\\n\");\n+\t      throw;\n+\t    }\n+\t}\n+    }\n+  catch (A)\n+    {\n+      printf (\"Caught.\\n\");\n+    }\n+  printf (\"c == %d, d == %d\\n\", c, d);\n+  return c != d;\n+}"}, {"sha": "2d2583b72193308ae92ee6f388502763e8ac6df3", "filename": "gcc/testsuite/g++.old-deja/g++.eh/rethrow2.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow2.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,45 @@\n+// Testcase for proper handling of rethrow.\n+\n+#include <stdio.h>\n+\n+int c, d;\n+\n+struct A\n+{\n+  int i;\n+  A () { i = ++c; printf (\"A() %d\\n\", i); }\n+  A (const A&) { i = ++c; printf (\"A(const A&) %d\\n\", i); }\n+  ~A() { printf (\"~A() %d\\n\", i); ++d; }\n+};\n+\n+int\n+main ()\n+{\n+  try\n+    {\n+      try\n+\t{\n+\t  printf (\"Throwing 1...\\n\");\n+\t  throw A();\n+\t}\n+      catch (A)\n+\t{\n+\t  try\n+\t    {\n+\t      printf (\"Throwing 2...\\n\");\n+\t      throw;\n+\t    }\n+\t  catch (A)\n+\t    {\n+\t      printf (\"Throwing 3...\\n\");\n+\t      throw;\n+\t    }\n+\t}\n+    }\n+  catch (A)\n+    {\n+      printf (\"Caught.\\n\");\n+    }\n+  printf (\"c == %d, d == %d\\n\", c, d);\n+  return c != d;\n+}"}, {"sha": "355bedc64c98a644501b925236999cb4fa82bbf1", "filename": "gcc/testsuite/g++.old-deja/g++.eh/rethrow3.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Frethrow3.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,38 @@\n+#include <stdio.h>\n+#include <exception>\n+\n+static void\n+eh_terminate ()\n+{\n+  printf (\"CALLING TERMINATE\\n\");\n+  exit (1);\n+}\n+\n+void\n+eh_test (int level)\n+{\n+  try\n+    {\n+      if (level < 2)\n+\teh_test (level + 1);\n+      else\n+\t{\n+\t  printf (\"%d: Throwing\\n\", level);\n+\t  throw (level);\n+\t}\n+    }\n+  catch (int &x)\n+    {\n+      printf (\"%d: Got level %d\\n\",\n+\t      level, x);\n+\n+      if (level > 0)\n+\tthrow;\n+    }\n+}\n+\n+main ()\n+{\n+  set_terminate (&eh_terminate);\n+  eh_test (0);\n+}"}, {"sha": "00d57eb3ea18c7ea09994c008d095eb63895a11a", "filename": "gcc/testsuite/g++.old-deja/g++.jason/inline3.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Finline3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Finline3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Finline3.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,42 @@\n+// Testcase for order of destruction.\n+// Special g++ Options: -O2\n+\n+extern \"C\" int printf( char const*, ... );\n+int c;\n+int r;\n+\n+struct B {\n+  B();\n+  B( B const& );\n+  ~B();\n+};\n+\n+struct A {\n+  A();\n+  A( A const& );\n+  ~A();\n+  operator B ();\n+};\n+\n+inline A::operator B () { printf( \"operator B ()\\n\"); return B(); }\n+\n+A f();\n+void g( B const& );\n+\n+int\n+main()\n+{\n+  g( f() );\n+  return r;\n+}\n+\n+B::B() { printf( \"B::B()\\n\" ); if (++c != 2) r = 1; }\n+B::B( B const& ) { printf( \"B::B( B const& )\\n\" ); r = 1; }\n+B::~B() { printf( \"B::~B()\\n\" ); if (--c != 1) r = 1; }\n+\n+A::A() { printf( \"A::A()\\n\" ); if (++c != 1) r = 1; }\n+A::A( A const& ) { printf( \"A::A( A const& )\\n\" ); r = 1; }\n+A::~A() { printf( \"A::~A()\\n\" ); if (--c != 0) r = 1; }\n+\n+A f() { printf( \"f()\\n\"); return A(); }\n+void g( B const& ) { printf( \"g()\\n\"); }"}, {"sha": "f5e6fb61dc3fa444780db31aefa807443afc22c9", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload36.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload36.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,15 @@\n+// Test for subsequence checking in overload resolution.\n+\n+class foo {\n+public:\n+  void operator <<(char *) { }\n+  void operator <<(const char * const &);\n+};\n+ \n+int\n+main()\n+{\n+  char s[20];\n+  foo f;\n+  f << s;\n+}"}, {"sha": "335cfccb8c038327ead9f3c807e7a6ae4107f67a", "filename": "gcc/testsuite/g++.old-deja/g++.jason/pmf9.C", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmf9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmf9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmf9.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,57 @@\n+// PRMS id: g++/13340\n+// Build don't link:\n+\n+class rectangle {\n+    \n+public:\n+  rectangle();\n+  int overlaps() const;\n+\n+};\n+\n+class region \n+{\n+  friend class region_impl;\n+\n+public:\n+  region();\n+  typedef int (region::* region_func)() const;      \n+\n+};\n+\n+class region_impl  {\n+  friend class region;\n+\n+private:\n+  rectangle content, mbb;\n+  region_impl *link_p;\n+  region_impl(const rectangle &content);\n+\n+public:\n+  int iterate(region *region_p, region::region_func what,\n+\t      const rectangle &clip_rect) const;\n+  int iterate(region *region_p, region::region_func what,\n+\t      const region_impl &clip_rgn) const;\n+};\n+\n+\n+int\n+region_impl::iterate (region *region_p, region::region_func what, \n+\t\t      const rectangle &clip_rect) const\n+{\n+  for (const region_impl *p = this; p != 0 && p->mbb.overlaps();\n+       p = p->link_p)\n+    if (p->content.overlaps())\n+      if (!(region_p->*what)()) return 0;\n+  return 1;\n+}\n+\n+int\n+region_impl::iterate (region *region_p, region::region_func what,\n+\t\t      const region_impl &clip_rgn) const\n+{\n+  for (const region_impl *p = this; p != 0 && p->mbb.overlaps();\n+       p = p->link_p)\n+    if (!clip_rgn.iterate(region_p, what, p->content)) return 0;\n+  return 1;\n+}"}, {"sha": "93b47bd23e6ff53d1f2b8ad31f8b3d0afd1efe05", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template44.C", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate44.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,61 @@\n+#include <stdlib.h>\n+#include <string.h>\n+\n+template <class T>\n+class List {\n+public:\n+    int len;\n+    T *array;\n+\n+    int length() const { return( len ); }\n+\n+    List() : len( 0 ), array( 0 ) {}\n+};\n+\n+template <class T>\n+int AlgoStdCompare(const T* a, const T* b) {\n+  if (*a < *b)\n+    return -1;\n+  else\n+    return (*a > *b);\t// 0 if equal, 1 if greater\n+}\n+\n+int AlgoStdCompare(const char* const* a, const char * const*b)\n+{\n+    return strcmp(*a,*b);\n+}\n+     \n+template <class T>\n+void AlgoFixupSort(List< T >* , int, int ) {\n+}\n+\n+template <class T> \n+void AlgoSort(int (*compare)(const T *, const T *),\n+\t  void (*fixup)( List<T> *, int first, int last),\n+\t  List< T >* theList, int first, int last) {\n+  if (last < 0)\n+    last = theList->length()-1;\n+  \n+  qsort(theList->array+first, last-first+1, sizeof(T),\n+\t(int (*)(const void *, const void *))compare);\n+  if (fixup)\n+    fixup(theList, first, last);\n+}\n+\n+template <class T> \n+void AlgoSort(List< T >* theList, int first = 0, int last = -1) {\n+  int (*compare)(const T*, const T*) = AlgoStdCompare;\n+  void (*fixup)( List<T> *, int first, int last) = AlgoFixupSort;\n+  \n+  AlgoSort(compare, fixup, theList, first, last);\n+}\n+\n+int\n+main()\n+{\n+    List<const char *> slist;\n+    AlgoSort( &slist );\n+\n+    List<int> ilist;\n+    AlgoSort( &ilist );\n+}"}, {"sha": "61491cede48a2f8ea941182d8e083a00a77bfc28", "filename": "gcc/testsuite/g++.old-deja/g++.mike/virt6.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvirt6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvirt6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvirt6.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,39 @@\n+// This testcase ensures that we can build vtable names for complex MI\n+// classes.\n+\n+class C_A {\n+public:\n+  virtual int foo(void *) { }\n+} a;\n+ \n+class C_B : public C_A {\n+} b;\n+ \n+class C_C : public C_A {\n+} c;\n+ \n+class C_D : public C_A {\n+} d;\n+ \n+class C_E : public C_C, public C_B {\n+public:\n+  virtual int foo(void *) { }\n+} e;\n+ \n+class C_F : public C_D, public C_B {\n+public:\n+  virtual int foo(void *) { }\n+} f;\n+ \n+class C_G : public C_A {\n+public:\n+  virtual int foo(void *) { }\n+} g;\n+ \n+class C_H : public C_G, public C_E, public C_F {\n+public:\n+  virtual int foo(void *) { }\n+} h;\n+ \n+int main() {\n+}"}, {"sha": "8c424cc744cbbce36c9b22382d653f558bfb9e3b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit50.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit50.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,15 @@\n+extern \"C\" void abort ();\n+\n+template <class T> int f ()\n+{\n+  return sizeof(T);\n+}\n+\n+int main ()\n+{\n+  if (f<long> () != sizeof(long)\n+      || f<char> () != sizeof(char)\n+      || f<long> () != sizeof(long)\n+      || f<long int> () != sizeof(long int))\n+    abort ();\n+}"}, {"sha": "e4a0a64c46ed1e5fc18ede75e592a88d68fd518f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit51.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit51.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,18 @@\n+extern \"C\" void abort ();\n+\n+template <int a> int fact ()\n+{\n+  return 0;\n+}\n+\n+template <> int fact<1> ()\n+{\n+  return 1;\n+}\n+\n+int main()\n+{\n+  if (fact<3> () != 0 || fact<1> () != 1\n+      || fact<3> () != 0 || fact<1> () != 1 || fact<1+0> () != 1)\n+    abort ();\n+}"}, {"sha": "368573e5b8518364c7ccd9e04ebc703f6b7e5d7d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit52.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit52.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,18 @@\n+extern \"C\" void abort ();\n+\n+template <int a> inline int fact ()\n+{\n+  return a * fact<a-1> ();\n+}\n+\n+template <> inline int fact<1> ()\n+{\n+  return 1;\n+}\n+\n+int main()\n+{\n+  if (fact<3> () != 6 || fact<1> () != 1\n+      || fact<3> () != 6 || fact<1> () != 1 || fact<1+0> () != 1)\n+    abort ();\n+}"}, {"sha": "e66cca99d5c0a7ac703414bf33fc60be7a73dd56", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit53.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit53.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit53.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit53.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,21 @@\n+extern \"C\" void abort ();\n+\n+template <int a> inline int fact ();\n+template <> inline int fact<1> ();\n+\n+template <int a> inline int fact ()\n+{\n+  return a * fact<a-1> ();\n+}\n+\n+template <> inline int fact<1> ()\n+{\n+  return 1;\n+}\n+\n+int main()\n+{\n+  if (fact<3> () != 6 || fact<1> () != 1\n+      || fact<3> () != 6 || fact<1> () != 1 || fact<1+0> () != 1)\n+    abort ();\n+}"}, {"sha": "9d185be24ce86ffc7dba628a1dc81faa38dc720f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit54.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit54.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,35 @@\n+extern \"C\" void abort ();\n+\n+template <int a> inline int fact2 ();\n+\n+template <int a> inline int fact ()\n+{\n+  return a * fact2<a-1> ();\n+}\n+\n+template <> inline int fact<1> ()\n+{\n+  return 1;\n+}\n+\n+template <int a> inline int fact2 ()\n+{\n+  return a*fact<a-1>();\n+}\n+\n+template <> inline int fact2<1> ()\n+{\n+  return 1;\n+}\n+\n+int main()\n+{\n+  if (fact<3> () != 6 || fact<1> () != 1\n+      || fact<3> () != 6 || fact<1> () != 1 || fact<1+0> () != 1)\n+    abort ();\n+  if (fact2<3> () != 6 || fact2<1> () != 1\n+      || fact2<3> () != 6 || fact2<1> () != 1 || fact2<1+0> () != 1)\n+    abort ();\n+  if (fact2<4> () != 24 || fact<4> () != 24)\n+    abort ();\n+}"}, {"sha": "c9d312520a8656bb9387f55559e185207e870d9e", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit55.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit55.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,14 @@\n+template <class T> T* create ()\n+{\n+  return new T;\n+}\n+\n+template <class T> T* create2()\n+{\n+  return create<T>();\n+}\n+\n+int main()\n+{\n+  int *p = create2<int>();\n+}"}, {"sha": "d202160be169d01038f7e8bec2d40633d92bfe19", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit56.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit56.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,16 @@\n+template <class T> T* create ();\n+\n+template <class T> T* create2()\n+{\n+  return create<T>();\n+}\n+\n+template <class T> T* create ()\n+{\n+  return new T;\n+}\n+\n+int main()\n+{\n+  int *p = create2<int>();\n+}"}, {"sha": "d1f0ea870dc10af0687c4d17dafb13459cd6a4ab", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit57.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit57.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,42 @@\n+extern \"C\" void abort ();\n+\n+int a = 0;\n+\n+template <class T> void f ();\n+template <class T> void g ()\n+{\n+  if (a)\n+    abort ();\n+}\n+\n+template <> void g<char> ()\n+{\n+}\n+\n+template <class T> class C\n+{\n+  public:\n+    void ff () { f<T> (); }\n+    void gg () { g<T> (); }\n+};\n+\n+template <class T> void f ()\n+{\n+  if (a)\n+    abort ();\n+}\n+\n+template <> void f<char> ()\n+{\n+}\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+  c.gg();\n+  a = 1;\n+  C<char> d;\n+  d.ff();\n+  d.gg();\n+}"}, {"sha": "7193d2d84bd34a5d5a19730e6aacd6331a00a1dd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit58.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit58.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,41 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ();\n+template <class T> void g ()\n+{\n+  abort ();\n+}\n+\n+template <> void g<char> ()\n+{\n+  abort ();\n+}\n+\n+template <class T> class C\n+{\n+  public:\n+    template <class U> void f () {}\n+    template <class U> void g () {}\n+    void ff () { f<T> (); }\n+    void gg () { g<T> (); }\n+};\n+\n+template <class T> void f ()\n+{\n+  abort ();\n+}\n+\n+template <> void f<char> ()\n+{\n+  abort ();\n+}\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+  c.gg();\n+  C<char> d;\n+  d.ff();\n+  d.gg();\n+}"}, {"sha": "847a80acca6ea38d7111602e684f6910822da835", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit59.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit59.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,41 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ();\n+template <class T> void g ()\n+{\n+  abort ();\n+}\n+\n+template <> void g<char> ()\n+{\n+  abort ();\n+}\n+\n+template <class T> class C\n+{\n+  public:\n+    void ff () { f<T> (); }\n+    void gg () { g<T> (); }\n+    template <class U> void f () {}\n+    template <class U> void g () {}\n+};\n+\n+template <class T> void f ()\n+{\n+  abort ();\n+}\n+\n+template <> void f<char> ()\n+{\n+  abort ();\n+}\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+  c.gg();\n+  C<char> d;\n+  d.ff();\n+  d.gg();\n+}"}, {"sha": "5fda33355854097f8321205de645bbd274d7eb34", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit60.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit60.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,43 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ();\n+template <class T> void g ()\n+{\n+  abort ();\n+}\n+\n+template <> void g<char> ()\n+{\n+  abort ();\n+}\n+\n+template <class T> class C\n+{\n+  public:\n+    void ff () { f<T> (); }\n+    void gg () { g<T> (); }\n+    template <class U> void f () {}\n+    template <class U> void g () {}\n+    template <class U> void f (int) { abort(); }\n+    template <class U> void g (int) { abort(); }\n+};\n+\n+template <class T> void f ()\n+{\n+  abort ();\n+}\n+\n+template <> void f<char> ()\n+{\n+  abort ();\n+}\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+  c.gg();\n+  C<char> d;\n+  d.ff();\n+  d.gg();\n+}"}, {"sha": "69b78914742eaf6bd4176386807f6ed3bdbc39e2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit61.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit61.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,43 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ();\n+template <class T> void g ()\n+{\n+  abort ();\n+}\n+\n+template <> void g<char> ()\n+{\n+  abort ();\n+}\n+\n+template <class T> class C\n+{\n+  public:\n+    void ff () { f<T> (0); }\n+    void gg () { g<T> (1); }\n+    template <class U> void f () { abort(); }\n+    template <class U> void g () { abort(); }\n+    template <class U> void f (int) {}\n+    template <class U> void g (int) {}\n+};\n+\n+template <class T> void f ()\n+{\n+  abort ();\n+}\n+\n+template <> void f<char> ()\n+{\n+  abort ();\n+}\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+  c.gg();\n+  C<char> d;\n+  d.ff();\n+  d.gg();\n+}"}, {"sha": "5917ce01cf3ec2e5cf8aba1ac9550e9672269f15", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit62.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit62.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit62.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit62.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,19 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ()\n+{\n+}\n+\n+\n+template <class T> class C\n+{\n+  friend void f<char> ();\n+  public:\n+    void ff () { f<char> (); }\n+};\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+}"}, {"sha": "ce4d99af1e73de51961b5692ed0c35594c1c7c3b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit63.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit63.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit63.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit63.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,19 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ()\n+{\n+}\n+\n+\n+template <class T> class C\n+{\n+  friend void f<T> ();\n+  public:\n+    void ff () { f<T> (); }\n+};\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+}"}, {"sha": "2208b30eae737ad134934f44280592734fe6dc20", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit64.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit64.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,23 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ()\n+{\n+  abort ();\n+}\n+\n+template <> void f<char> ()\n+{\n+}\n+\n+template <class T> class C\n+{\n+  friend void f<char> ();\n+  public:\n+    void ff () { f<char> (); }\n+};\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+}"}, {"sha": "a026e8ee3f3adddfcd8369d8a7551156fb97427e", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit65.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit65.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit65.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit65.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,33 @@\n+extern \"C\" void abort ();\n+\n+template <class T> void f ()\n+{\n+  abort ();\n+}\n+\n+template <> void f<char> ()\n+{\n+  abort ();\n+}\n+\n+template <class T> void f (int)\n+{\n+  abort ();\n+}\n+\n+template <> void f<char> (int)\n+{\n+}\n+\n+template <class T> class C\n+{\n+  friend void f<char> (int);\n+  public:\n+    void ff () { f<char> (0); }\n+};\n+\n+int main ()\n+{\n+  C<int> c;\n+  c.ff();\n+}"}, {"sha": "6b7fc8e44f95defb155f07441192b803c1c783b0", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp63.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp63.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp63.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp63.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,13 @@\n+template <class T> struct A {\n+  template <class U> void f (U u);\n+};\n+\n+A<int> a;\n+\n+template <class T> template <class U> void A<T>::f (U u) { }\n+\n+main()\n+{\n+  a.f (24);\n+}\n+"}, {"sha": "7a929962fd4a4a4d69c153649ae7fe3312469362", "filename": "gcc/testsuite/g++.old-deja/g++.pt/partial1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fpartial1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fpartial1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fpartial1.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,26 @@\n+template<class T_type, int N>\n+class foo {\n+public:\n+  enum bar { z = 0 };\n+};\n+\n+template<int N>\n+class foo<double, N> {\n+public:\n+  enum bar { z = 1 };\n+};\n+\n+template<class T_type>\n+class foo<T_type, 2> {\n+public:\n+  enum bar { z = 2 };\n+};\n+\n+int main()\n+{\n+    if ((foo<int,3>::z == 0) && (foo<double,3>::z == 1) \n+       && (foo<float,2>::z == 2))\n+           return 0;\n+    else\n+        return 1;\n+}"}, {"sha": "5de152ef7dcda8ea00b8cc7739f73dca87e42446", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typedef1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypedef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypedef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypedef1.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,18 @@\n+// Testcase for handling of typedef wierdness.\n+// Build don't link:\n+\n+template <class T>\n+class A\n+{\n+  typedef enum\n+  {\n+    foo\n+  } B;\n+\n+  A (B b);\n+};\n+\n+template <class T>\n+A<T>::A (B b)\n+{\n+}"}, {"sha": "13a1fcc85d14e3e0bbcbbd294d66b900c7293004", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,17 @@\n+// Build don't link:\n+// GROUPS passed templates\n+template <class T>\n+struct bar { \n+  typedef typename T::baz baz;\n+};\n+\n+template <class T>\n+void foo(T)\n+{\n+  bar<T>::baz(); // ERROR - T is int.\n+}\n+\n+void foobar()\n+{\n+  foo(3);\n+}"}, {"sha": "283e2f50f8af8fdc98de14af43d0c322bfdc1ce0", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1afc355025f984fb0b26d68a7337f987890e6042/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify1.C?ref=1afc355025f984fb0b26d68a7337f987890e6042", "patch": "@@ -0,0 +1,14 @@\n+// Tests non-unification of parms that don't use template parms.\n+// Build don't link:\n+\n+enum kind {a, b};\n+\n+class C { public: C () {} };\n+\n+template<class P>\n+void f (P c, kind k) {}\n+\n+template<class P>\n+void f (P c, P d, kind k) {}\n+\n+template void f (C c, C c, kind k);"}]}