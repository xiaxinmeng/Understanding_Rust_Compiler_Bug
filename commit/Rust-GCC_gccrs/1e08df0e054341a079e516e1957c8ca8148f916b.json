{"sha": "1e08df0e054341a079e516e1957c8ca8148f916b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUwOGRmMGUwNTQzNDFhMDc5ZTUxNmUxOTU3YzhjYTgxNDhmOTE2Yg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-10-21T18:40:34Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-10-21T18:40:34Z"}, "message": "re PR middle-end/58809 (ICE with complex variable in OpenMP reduction clause)\n\n\tPR middle-end/58809\n\t* fold-const.c (fold_range_test): Return 0 if the type is not\n\tan integral type.\ntestsuite/\n\t* gcc.dg/gomp/pr58809.c: New test.\n\nFrom-SVN: r203907", "tree": {"sha": "f83f28779503ada6baf211f13e425689117569ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f83f28779503ada6baf211f13e425689117569ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e08df0e054341a079e516e1957c8ca8148f916b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e08df0e054341a079e516e1957c8ca8148f916b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e08df0e054341a079e516e1957c8ca8148f916b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e08df0e054341a079e516e1957c8ca8148f916b/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67b5215c7642f7436210b4501c445a42f5846fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b5215c7642f7436210b4501c445a42f5846fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b5215c7642f7436210b4501c445a42f5846fdd"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "d00105df9fbaecbb8d76bc45841a0e52bcf3a77d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e08df0e054341a079e516e1957c8ca8148f916b", "patch": "@@ -1,3 +1,9 @@\n+2013-10-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/58809\n+\t* fold-const.c (fold_range_test): Return 0 if the type is not\n+\tan integral type.\n+\n 2013-10-21  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* system.h: Move hwint.h include further down."}, {"sha": "021d670acf0744359418effcfa093f626bcd812c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1e08df0e054341a079e516e1957c8ca8148f916b", "patch": "@@ -4970,12 +4970,16 @@ fold_range_test (location_t loc, enum tree_code code, tree type,\n   int in0_p, in1_p, in_p;\n   tree low0, low1, low, high0, high1, high;\n   bool strict_overflow_p = false;\n-  tree lhs = make_range (op0, &in0_p, &low0, &high0, &strict_overflow_p);\n-  tree rhs = make_range (op1, &in1_p, &low1, &high1, &strict_overflow_p);\n-  tree tem;\n+  tree tem, lhs, rhs;\n   const char * const warnmsg = G_(\"assuming signed overflow does not occur \"\n \t\t\t\t  \"when simplifying range test\");\n \n+  if (!INTEGRAL_TYPE_P (type))\n+    return 0;\n+\n+  lhs = make_range (op0, &in0_p, &low0, &high0, &strict_overflow_p);\n+  rhs = make_range (op1, &in1_p, &low1, &high1, &strict_overflow_p);\n+\n   /* If this is an OR operation, invert both sides; we will invert\n      again at the end.  */\n   if (or_op)"}, {"sha": "fca2bb4b1ac024937bd80e5294df748ba0296526", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e08df0e054341a079e516e1957c8ca8148f916b", "patch": "@@ -1,3 +1,8 @@\n+2013-10-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/58809\n+\t* gcc.dg/gomp/pr58809.c: New test.\n+\n 2013-10-21  Vidya Praveen  <vidyapraveen@arm.com>\n \n \t* gcc.dg/20050922-1.c: Remove stdlib.h and declare abort()."}, {"sha": "5dc02f65aa8707ca525fb2e36e17d06fbb38930f", "filename": "gcc/testsuite/gcc.dg/gomp/pr58809.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr58809.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e08df0e054341a079e516e1957c8ca8148f916b/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr58809.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr58809.c?ref=1e08df0e054341a079e516e1957c8ca8148f916b", "patch": "@@ -0,0 +1,13 @@\n+/* PR middle-end/58809 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp -O\" } */\n+\n+int i;\n+#pragma omp threadprivate (i)\n+\n+void foo()\n+{\n+  _Complex int j;\n+#pragma omp parallel copyin (i) reduction (&&:j)\n+  ;\n+}"}]}