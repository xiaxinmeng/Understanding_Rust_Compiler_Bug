{"sha": "9a855d84862cd3f752498e1bc9f599efe65c7f24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4NTVkODQ4NjJjZDNmNzUyNDk4ZTFiYzlmNTk5ZWZlNjVjN2YyNA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-08-25T11:43:35Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-08-25T11:43:35Z"}, "message": "* sh.h (GIV_SORT_CRITERION): Delete.\n\nFrom-SVN: r21966", "tree": {"sha": "8a9d2710971487b731066794716c91ad1570555d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a9d2710971487b731066794716c91ad1570555d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a855d84862cd3f752498e1bc9f599efe65c7f24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a855d84862cd3f752498e1bc9f599efe65c7f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a855d84862cd3f752498e1bc9f599efe65c7f24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a855d84862cd3f752498e1bc9f599efe65c7f24/comments", "author": null, "committer": null, "parents": [{"sha": "b80c4d770ac87e627f75bd758b4d9b9b881fff96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b80c4d770ac87e627f75bd758b4d9b9b881fff96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b80c4d770ac87e627f75bd758b4d9b9b881fff96"}], "stats": {"total": 21, "additions": 4, "deletions": 17}, "files": [{"sha": "ae0884eae1421621fd4876cc1fbdca65fe74a607", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a855d84862cd3f752498e1bc9f599efe65c7f24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a855d84862cd3f752498e1bc9f599efe65c7f24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a855d84862cd3f752498e1bc9f599efe65c7f24", "patch": "@@ -1,3 +1,7 @@\n+Tue Aug 25 19:20:12 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.h (GIV_SORT_CRITERION): Delete.\n+\n Tue Aug 25 13:19:46 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* regclass.c (regclass): Use xmalloc/free instead of alloca."}, {"sha": "10936c78feea952270aed6f8bef5ad17790f46b1", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a855d84862cd3f752498e1bc9f599efe65c7f24/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a855d84862cd3f752498e1bc9f599efe65c7f24/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=9a855d84862cd3f752498e1bc9f599efe65c7f24", "patch": "@@ -1945,14 +1945,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     cost = 2;\t\t\t\t\t\t\t\t\\\n } while (0)\t\t\t\t\t\t\t\t\\\n \n-/* Since the SH architecture lacks negative address offsets,\n-   the givs should be sorted smallest to largest so combine_givs\n-   has maximum opportunity to combine givs.  */\n-#define GIV_SORT_CRITERION(X, Y)\t\\\n-  if (GET_CODE ((X)->add_val) == CONST_INT\t\t\\\n-      && GET_CODE ((Y)->add_val) == CONST_INT)\t\t\\\n-    return INTVAL ((X)->add_val) - INTVAL ((Y)->add_val);\n-\n /* For the sake of libgcc2.c, indicate target supports atexit.  */\n #define HAVE_ATEXIT\n "}, {"sha": "bf9aa4a05cf98cc6a7028655748c56f95f55ead7", "filename": "gcc/tm.texi", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a855d84862cd3f752498e1bc9f599efe65c7f24/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a855d84862cd3f752498e1bc9f599efe65c7f24/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=9a855d84862cd3f752498e1bc9f599efe65c7f24", "patch": "@@ -7454,15 +7454,6 @@ unit may not be bound to undefined symbols in another translation unit\n without user intervention.  For instance, under Microsoft Windows\n symbols must be explicitly imported from shared libraries (DLLs).\n \n-@findex GIV_SORT_CRITERION\n-@item GIV_SORT_CRITERION (@var{giv1}, @var{giv2})\n-In some cases, the strength reduction optimization pass can produce better\n-code if this is defined.  This macro controls the order that induction\n-variables are combined.  This macro is particularly useful if the target has\n-limited addressing modes.  For instance, the SH target has only positive\n-offsets in addresses.  Thus sorting to put the smallest address first\n-allows the most combinations to be found.\n-\n @findex ISSUE_RATE\n @item ISSUE_RATE\n A C expression that returns how many instructions can be issued at the"}]}