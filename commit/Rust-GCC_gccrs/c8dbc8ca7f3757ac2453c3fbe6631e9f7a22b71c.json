{"sha": "c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkYmM4Y2E3ZjM3NTdhYzI0NTNjM2ZiZTY2MzFlOWY3YTIyYjcxYw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-02T13:33:56Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-02T13:33:56Z"}, "message": "(expand_divmod): Always return gen_lowpart (mode, ...).\n\nFrom-SVN: r7640", "tree": {"sha": "fd915431f4d3bd3fa39b7eaf336a72bfa3169fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd915431f4d3bd3fa39b7eaf336a72bfa3169fd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c/comments", "author": null, "committer": null, "parents": [{"sha": "18beb3e99697d66f252e98d717fcdfb14b1f1403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18beb3e99697d66f252e98d717fcdfb14b1f1403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18beb3e99697d66f252e98d717fcdfb14b1f1403"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "a57992e487e79debe65151717fad9b50f441a6c6", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=c8dbc8ca7f3757ac2453c3fbe6631e9f7a22b71c", "patch": "@@ -2720,7 +2720,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\t\t\t\t\t  remainder, 1,\n \t\t\t\t\t\t  OPTAB_LIB_WIDEN);\n \t\t\tif (remainder)\n-\t\t\t  return remainder;\n+\t\t\t  return gen_lowpart (mode, remainder);\n \t\t      }\n \t\t    quotient = expand_shift (RSHIFT_EXPR, compute_mode, op0,\n \t\t\t\t\t     build_int_2 (pre_shift, 0),\n@@ -2958,7 +2958,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\t\t\t\t\t  GEN_INT (((HOST_WIDE_INT) 1 << pre_shift) - 1),\n \t\t\t\t\t\t  remainder, 0, OPTAB_LIB_WIDEN);\n \t\t\tif (remainder)\n-\t\t\t  return remainder;\n+\t\t\t  return gen_lowpart (mode, remainder);\n \t\t      }\n \t\t    quotient = expand_shift (RSHIFT_EXPR, compute_mode, op0,\n \t\t\t\t\t     build_int_2 (pre_shift, 0),\n@@ -3054,10 +3054,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t    expand_dec (quotient, const1_rtx);\n \t    expand_inc (remainder, op1);\n \t    emit_label (label);\n-\t    if (rem_flag)\n-\t      return remainder;\n-\t    else\n-\t      return quotient;\n+\t    return gen_lowpart (mode, rem_flag ? remainder : quotient);\n \t  }\n \n \t/* No luck with division elimination or divmod.  Have to do it\n@@ -3146,7 +3143,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\texpand_inc (quotient, const1_rtx);\n \t\texpand_dec (remainder, op1);\n \t\temit_label (label);\n-\t\treturn rem_flag ? remainder : quotient;\n+\t\treturn gen_lowpart (mode, rem_flag ? remainder : quotient);\n \t      }\n \n \t    /* No luck with division elimination or divmod.  Have to do it\n@@ -3213,7 +3210,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\texpand_inc (quotient, const1_rtx);\n \t\texpand_dec (remainder, op1);\n \t\temit_label (label);\n-\t\treturn rem_flag ? remainder : quotient;\n+\t\treturn gen_lowpart (mode, rem_flag ? remainder : quotient);\n \t      }\n \n \t    /* No luck with division elimination or divmod.  Have to do it"}]}