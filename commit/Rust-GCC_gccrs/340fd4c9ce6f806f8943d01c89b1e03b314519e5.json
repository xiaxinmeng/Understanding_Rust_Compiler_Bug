{"sha": "340fd4c9ce6f806f8943d01c89b1e03b314519e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQwZmQ0YzljZTZmODA2Zjg5NDNkMDFjODliMWUwM2IzMTQ1MTllNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-24T08:36:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-24T08:36:16Z"}, "message": "re PR middle-end/69909 (wrong code with -Os and vectors @ x86_64)\n\n\tPR middle-end/69909\n\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Avoid\n\tset_mem_attributes if tem is SSA_NAME which got expanded\n\tas a MEM.\n\n\t* gcc.dg/torture/pr69909.c: New test.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r233656", "tree": {"sha": "f97d67ca1002d6df826f5c5fa36b27dee372f699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f97d67ca1002d6df826f5c5fa36b27dee372f699"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/340fd4c9ce6f806f8943d01c89b1e03b314519e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340fd4c9ce6f806f8943d01c89b1e03b314519e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/340fd4c9ce6f806f8943d01c89b1e03b314519e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340fd4c9ce6f806f8943d01c89b1e03b314519e5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47d3fdb242c7374a6fe3e4b0981a70767bc585a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47d3fdb242c7374a6fe3e4b0981a70767bc585a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47d3fdb242c7374a6fe3e4b0981a70767bc585a2"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "03f7a326d2682e0e77e8b5d1030ff5ba4c0097e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=340fd4c9ce6f806f8943d01c89b1e03b314519e5", "patch": "@@ -1,3 +1,11 @@\n+2016-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Biener  <rguenth@suse.de>\n+\n+\tPR middle-end/69909\n+\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Avoid\n+\tset_mem_attributes if tem is SSA_NAME which got expanded\n+\tas a MEM.\n+\n 2016-02-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69907"}, {"sha": "29d22b07256ce0adcb8c8eae5249847e144caf4b", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=340fd4c9ce6f806f8943d01c89b1e03b314519e5", "patch": "@@ -10521,7 +10521,11 @@ expand_expr_real_1 (tree exp, rtx target, machine_mode tmode,\n \tif (op0 == orig_op0)\n \t  op0 = copy_rtx (op0);\n \n-\tset_mem_attributes (op0, exp, 0);\n+\t/* Don't set memory attributes if the base expression is\n+\t   SSA_NAME that got expanded as a MEM.  In that case, we should\n+\t   just honor its original memory attributes.  */\n+\tif (TREE_CODE (tem) != SSA_NAME || !MEM_P (orig_op0))\n+\t  set_mem_attributes (op0, exp, 0);\n \n \tif (REG_P (XEXP (op0, 0)))\n \t  mark_reg_pointer (XEXP (op0, 0), MEM_ALIGN (op0));"}, {"sha": "f09672b07831b31d241a5accf9b741114c28784c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=340fd4c9ce6f806f8943d01c89b1e03b314519e5", "patch": "@@ -1,3 +1,8 @@\n+2016-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/69909\n+\t* gcc.dg/torture/pr69909.c: New test.\n+\n 2016-02-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69907"}, {"sha": "fb36c80cb91913155547cd4ade7e6acf94379a41", "filename": "gcc/testsuite/gcc.dg/torture/pr69909.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69909.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340fd4c9ce6f806f8943d01c89b1e03b314519e5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69909.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69909.c?ref=340fd4c9ce6f806f8943d01c89b1e03b314519e5", "patch": "@@ -0,0 +1,35 @@\n+/* PR middle-end/69909 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-additional-options \"-w\" } */\n+\n+typedef unsigned V __attribute__ ((vector_size (32)));\n+typedef __int128 T;\n+typedef __int128 U __attribute__ ((vector_size (32)));\n+\n+__attribute__((noinline, noclone)) T\n+foo (T a, V b, V c, V d, V e, U f)\n+{\n+  d[6] ^= 0x10;\n+  f -= (U) d;\n+  f[1] |= f[1] << (a & 127);\n+  c ^= d;\n+  return b[7] + c[2] + c[2] + d[6] + e[2] + f[1];\n+}\n+\n+int\n+main ()\n+{\n+  if (__CHAR_BIT__ != 8 || sizeof (unsigned) != 4 || sizeof (T) != 16)\n+    return 0;\n+\n+  T x = foo (1, (V) { 9, 2, 5, 8, 1, 2, 9, 3 },\n+\t\t(V) { 1, 2, 3, 4, 5, 6, 7, 8 },\n+\t\t(V) { 4, 1, 2, 9, 8, 3, 5, 2 },\n+\t\t(V) { 3, 6, 1, 3, 2, 9, 4, 8 }, (U) { 3, 5 });\n+  if (((unsigned long long) (x >> 64) != 0xffffffffffffffffULL\n+       || (unsigned long long) x != 0xfffffffe0000001aULL)\n+      && ((unsigned long long) (x >> 64) != 0xfffffffffffffffdULL\n+\t  || (unsigned long long) x != 0xffffffff00000022ULL))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}