{"sha": "d5bf11434788c415a53f27a7f5fc278920941869", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDViZjExNDM0Nzg4YzQxNWE1M2YyN2E3ZjVmYzI3ODkyMDk0MTg2OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-05-23T07:01:43Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-05-23T07:01:43Z"}, "message": "function.c (expand_function_start): Always use a pseudo for the function result value.\n\n        * function.c (expand_function_start): Always use a pseudo\n        for the function result value.\n\nFrom-SVN: r42486", "tree": {"sha": "c46dc0c9b13f201462d48ed91d38580c40a20648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c46dc0c9b13f201462d48ed91d38580c40a20648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5bf11434788c415a53f27a7f5fc278920941869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5bf11434788c415a53f27a7f5fc278920941869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5bf11434788c415a53f27a7f5fc278920941869", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5bf11434788c415a53f27a7f5fc278920941869/comments", "author": null, "committer": null, "parents": [{"sha": "9336389d378d0e0179e3bbc92f786a2a3f3bd6f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9336389d378d0e0179e3bbc92f786a2a3f3bd6f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9336389d378d0e0179e3bbc92f786a2a3f3bd6f5"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "98aa47afcbe15cc9e09c6493715592830bbf168e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5bf11434788c415a53f27a7f5fc278920941869/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5bf11434788c415a53f27a7f5fc278920941869/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5bf11434788c415a53f27a7f5fc278920941869", "patch": "@@ -1,3 +1,8 @@\n+2001-05-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* function.c (expand_function_start): Always use a pseudo\n+\tfor the function result value.\n+\n 2001-05-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/mips/iris6.h (EH_FRAME_SECTION_ASM_OP): Give the"}, {"sha": "6aeed3e9bbcfceda1bfbb30f1b7d8ce5234ad5d4", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5bf11434788c415a53f27a7f5fc278920941869/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5bf11434788c415a53f27a7f5fc278920941869/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=d5bf11434788c415a53f27a7f5fc278920941869", "patch": "@@ -6366,13 +6366,10 @@ expand_function_start (subr, parms_have_cleanups)\n   else if (DECL_MODE (DECL_RESULT (subr)) == VOIDmode)\n     /* If return mode is void, this decl rtl should not be used.  */\n     SET_DECL_RTL (DECL_RESULT (subr), NULL_RTX);\n-  else if (parms_have_cleanups\n-\t   || current_function_instrument_entry_exit\n-\t   || (flag_exceptions && USING_SJLJ_EXCEPTIONS))\n+  else\n     {\n-      /* If function will end with cleanup code for parms, compute the\n-\t return values into a pseudo reg, which we will copy into the\n-\t true return register after the cleanups are done.  */\n+      /* Compute the return values into a pseudo reg, which we will copy\n+\t into the true return register after the cleanups are done.  */\n \n       /* In order to figure out what mode to use for the pseudo, we\n \t figure out what the mode of the eventual return register will\n@@ -6393,22 +6390,6 @@ expand_function_start (subr, parms_have_cleanups)\n \t in case it's a named return value whose address is taken.  */\n       DECL_REGISTER (DECL_RESULT (subr)) = 1;\n     }\n-  else\n-    {\n-      /* Scalar, returned in a register.  */\n-      SET_DECL_RTL (DECL_RESULT (subr),\n-\t\t    hard_function_value (TREE_TYPE (DECL_RESULT (subr)), \n-\t\t\t\t\t subr, 1));\n-\n-      /* Mark this reg as the function's return value.  */\n-      if (GET_CODE (DECL_RTL (DECL_RESULT (subr))) == REG)\n-\t{\n-\t  REG_FUNCTION_VALUE_P (DECL_RTL (DECL_RESULT (subr))) = 1;\n-\t  /* Needed because we may need to move this to memory\n-\t     in case it's a named return value whose address is taken.  */\n-\t  DECL_REGISTER (DECL_RESULT (subr)) = 1;\n-\t}\n-    }\n \n   /* Initialize rtx for parameters and local variables.\n      In some cases this requires emitting insns.  */"}]}