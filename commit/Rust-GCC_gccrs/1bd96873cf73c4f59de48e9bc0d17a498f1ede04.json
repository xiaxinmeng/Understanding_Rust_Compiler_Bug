{"sha": "1bd96873cf73c4f59de48e9bc0d17a498f1ede04", "node_id": "C_kwDOANBUbNoAKDFiZDk2ODczY2Y3M2M0ZjU5ZGU0OGU5YmMwZDE3YTQ5OGYxZWRlMDQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-04-12T07:54:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-04-12T08:53:46Z"}, "message": "tree-optimization/105232 - handle overly large sizes in component_ref_size\n\nThe following properly checks tree_fits_poly_int64_p before converting\na size to a poly_int64.\n\n2022-04-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/105232\n\t* tree.cc (component_ref_size): Bail out for too large\n\tor non-constant sizes.", "tree": {"sha": "ebe308251d20cd5e901aa463ebd1f44ee609acf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebe308251d20cd5e901aa463ebd1f44ee609acf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bd96873cf73c4f59de48e9bc0d17a498f1ede04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd96873cf73c4f59de48e9bc0d17a498f1ede04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd96873cf73c4f59de48e9bc0d17a498f1ede04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd96873cf73c4f59de48e9bc0d17a498f1ede04/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62d5bb0f35fb6ec373eaac942755585a633528a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d5bb0f35fb6ec373eaac942755585a633528a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d5bb0f35fb6ec373eaac942755585a633528a0"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "609f0b4569aead88ceb90e62b4bca7a43f902f12", "filename": "gcc/tree.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd96873cf73c4f59de48e9bc0d17a498f1ede04/gcc%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd96873cf73c4f59de48e9bc0d17a498f1ede04/gcc%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.cc?ref=1bd96873cf73c4f59de48e9bc0d17a498f1ede04", "patch": "@@ -12961,6 +12961,8 @@ component_ref_size (tree ref, special_array_member *sam /* = NULL */)\n      to struct types with flexible array members.  */\n   if (memsize)\n     {\n+      if (!tree_fits_poly_int64_p (memsize))\n+\treturn NULL_TREE;\n       poly_int64 memsz64 = memsize ? tree_to_poly_int64 (memsize) : 0;\n       if (known_lt (baseoff, memsz64))\n \t{"}]}