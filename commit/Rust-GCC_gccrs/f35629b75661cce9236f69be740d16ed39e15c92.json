{"sha": "f35629b75661cce9236f69be740d16ed39e15c92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM1NjI5Yjc1NjYxY2NlOTIzNmY2OWJlNzQwZDE2ZWQzOWUxNWM5Mg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-12-19T13:27:55Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-12-19T13:27:55Z"}, "message": "[PATCH] -fdump-tree, -save-temps=obj & subdirs\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-12/msg00377.html\n\t* opts.c (finish_options): Don't prefix dump_base_name if it\n\talready contains directories.\n\nFrom-SVN: r255820", "tree": {"sha": "ac61920c55c77eb06ce0b6115364cf228eff0575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac61920c55c77eb06ce0b6115364cf228eff0575"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f35629b75661cce9236f69be740d16ed39e15c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f35629b75661cce9236f69be740d16ed39e15c92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f35629b75661cce9236f69be740d16ed39e15c92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f35629b75661cce9236f69be740d16ed39e15c92/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02db1ea393065ef3b6f9a5d737abd8fbc1ad72ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02db1ea393065ef3b6f9a5d737abd8fbc1ad72ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02db1ea393065ef3b6f9a5d737abd8fbc1ad72ea"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "220d5534c89218a55c1410135ba87aeb2d944a85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35629b75661cce9236f69be740d16ed39e15c92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35629b75661cce9236f69be740d16ed39e15c92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f35629b75661cce9236f69be740d16ed39e15c92", "patch": "@@ -1,3 +1,8 @@\n+2017-12-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* opts.c (finish_options): Don't prefix dump_base_name if it\n+\talready contains directories.\n+\n 2017-12-19  Martin Liska  <mliska@suse.cz>\n \n \tPR rtl-optimization/82675"}, {"sha": "d779744ebb4ddb4ba1b59f6cc4705a0023da63c3", "filename": "gcc/opts.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35629b75661cce9236f69be740d16ed39e15c92/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35629b75661cce9236f69be740d16ed39e15c92/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=f35629b75661cce9236f69be740d16ed39e15c92", "patch": "@@ -700,19 +700,27 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n   enum unwind_info_type ui_except;\n \n   if (opts->x_dump_base_name\n-      && ! IS_ABSOLUTE_PATH (opts->x_dump_base_name)\n       && ! opts->x_dump_base_name_prefixed)\n     {\n-      /* First try to make OPTS->X_DUMP_BASE_NAME relative to the\n-\t OPTS->X_DUMP_DIR_NAME directory.  Then try to make\n-\t OPTS->X_DUMP_BASE_NAME relative to the OPTS->X_AUX_BASE_NAME\n-\t directory, typically the directory to contain the object\n-\t file.  */\n-      if (opts->x_dump_dir_name)\n+      const char *sep = opts->x_dump_base_name;\n+\n+      for (; *sep; sep++)\n+\tif (IS_DIR_SEPARATOR (*sep))\n+\t  break;\n+\n+      if (*sep)\n+\t/* If dump_base_path contains subdirectories, don't prepend\n+\t   anything.  */;\n+      else if (opts->x_dump_dir_name)\n+\t/* We have a DUMP_DIR_NAME, prepend that.  */\n \topts->x_dump_base_name = opts_concat (opts->x_dump_dir_name,\n \t\t\t\t\t      opts->x_dump_base_name, NULL);\n       else if (opts->x_aux_base_name\n \t       && strcmp (opts->x_aux_base_name, HOST_BIT_BUCKET) != 0)\n+\t/* AUX_BASE_NAME is set and is not the bit bucket.  If it\n+\t   contains a directory component, prepend those directories.\n+\t   Typically this places things in the same directory as the\n+\t   object file.  */\n \t{\n \t  const char *aux_base;\n \n@@ -731,7 +739,9 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n \t      opts->x_dump_base_name = new_dump_base_name;\n \t    }\n \t}\n-\topts->x_dump_base_name_prefixed = true;\n+\n+      /* It is definitely prefixed now.  */\n+      opts->x_dump_base_name_prefixed = true;\n     }\n \n   /* Handle related options for unit-at-a-time, toplevel-reorder, and"}]}