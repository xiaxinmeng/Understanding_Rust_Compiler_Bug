{"sha": "5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkNDdjYjc1ZGFjNDU4M2RjMzhlOWMxZGYyZmRlODlmZDQ1OWEwOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-07-12T17:36:45Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-07-12T17:36:45Z"}, "message": "invoke.texi (ssa-name-def-chain-limit): Document new --param.\n\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi (ssa-name-def-chain-limit): Document new --param.\n\t* params.def (PARAM_SSA_NAME_DEF_CHAIN_LIMIT): Add new --param.\n\t* tree-vrp.c (vrp_prop::check_mem_ref): Use\n\tPARAM_SSA_NAME_DEF_CHAIN_LIMIT.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/Warray-bounds-43.c: New test.\n\nFrom-SVN: r273454", "tree": {"sha": "0d8febea6e49248e6ea92f630e251dcc93b88c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d8febea6e49248e6ea92f630e251dcc93b88c9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d132c59b10ac8ee35d2e48c0b598160d5bdabf46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d132c59b10ac8ee35d2e48c0b598160d5bdabf46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d132c59b10ac8ee35d2e48c0b598160d5bdabf46"}], "stats": {"total": 161, "additions": 159, "deletions": 2}, "files": [{"sha": "685c7793f0e0fa25fa23881d91fe4acb56f38de8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "patch": "@@ -1,3 +1,10 @@\n+2019-07-12  Martin Sebor  <msebor@redhat.com>\n+\n+\t* doc/invoke.texi (ssa-name-def-chain-limit): Document new --param.\n+\t* params.def (PARAM_SSA_NAME_DEF_CHAIN_LIMIT): Add new --param.\n+\t* tree-vrp.c (vrp_prop::check_mem_ref): Use\n+\tPARAM_SSA_NAME_DEF_CHAIN_LIMIT.\n+\n 2019-07-12  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-alias.c (same_tmr_indexing_p): Break out from ...\n@@ -28,7 +35,6 @@\n \trather than this_state as the lowering context for the ELSE\n \tseq in a GIMPLE_EH_ELSE.\n \n->>>>>>> .r273450\n 2019-07-12  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* vector-builder.h (vector_builder::elt): Allow already-supplied"}, {"sha": "b4e71f2c8fd87c0392c31b21b1c7a54f67c2b73f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "patch": "@@ -12225,6 +12225,13 @@ before the loop versioning pass considers it too big to copy,\n discounting any instructions in inner loops that directly benefit\n from versioning.\n \n+@item ssa-name-def-chain-limit\n+The maximum number of SSA_NAME assignments to follow in determining\n+a property of a variable such as its value.  This limits the number\n+of iterations or recursive calls GCC performs when optimizing certain\n+statements or when determining their validity prior to issuing\n+diagnostics.\n+\n @end table\n @end table\n "}, {"sha": "c56055da9d94f98695f938c5a600f0646028fa4b", "filename": "gcc/params.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "patch": "@@ -1437,6 +1437,12 @@ DEFPARAM(PARAM_HASH_TABLE_VERIFICATION_LIMIT,\n \t \"each searched element.\",\n \t 10, 0, 0)\n \n+DEFPARAM(PARAM_SSA_NAME_DEF_CHAIN_LIMIT,\n+\t \"ssa-name-def-chain-limit\",\n+\t \"The maximum number of SSA_NAME assignments to follow in determining \"\n+\t \"a value.\",\n+\t 512, 0, 0)\n+\n /*\n \n Local variables:"}, {"sha": "73fe73933b0d9023c0ea23b33e2c9769345a6ef6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "patch": "@@ -1,3 +1,7 @@\n+2019-07-12  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/Warray-bounds-43.c: New test.\n+\n 2019-07-12  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-ssa/alias-access-path-9.c: New testcase."}, {"sha": "8892921157d21df9e5eced2d84e99bbef8608111", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-43.c", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-43.c?ref=5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "patch": "@@ -0,0 +1,133 @@\n+/* Test to verify that --param ssa_name_def_chain_limit can be used to\n+   limit the maximum number of SSA_NAME assignments the warning follows.\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall --param ssa-name-def-chain-limit=4\" }  */\n+\n+#define NOIPA __attribute__ ((noipa))\n+\n+const char a0[] = \"\";\n+const char a1[] = \"1\";\n+const char a2[] = \"12\";\n+const char a3[] = \"123\";\n+const char a4[] = \"1234\";\n+const char a5[] = \"12345\";\n+const char a6[] = \"123456\";\n+const char a7[] = \"1234567\";\n+const char a8[] = \"12345678\";\n+const char a9[] = \"123456789\";\n+\n+void f (const char*, ...);\n+\n+int i0, i1, i2, i3, i4, i5, i6, i7, i8;\n+\n+NOIPA int g2 (int i)\n+{\n+  if (i < 1) i = 1;\n+\n+  const char *p0 = a9;\n+  const char *p1 = p0 + i;\n+  const char *p2 = p1 + i;\n+\n+  f (p0, p1, p2);\n+\n+  return p2[8];     // { dg-warning \"\\\\\\[-Warray-bounds]\" }\n+}\n+\n+NOIPA int g3 (int i)\n+{\n+  if (i < 1) i = 1;\n+\n+  const char *p0 = a9;\n+  const char *p1 = p0 + i;\n+  const char *p2 = p1 + i;\n+  const char *p3 = p2 + i;\n+\n+  f (p0, p1, p2, p3);\n+\n+  return p3[7];     // { dg-warning \"\\\\\\[-Warray-bounds]\" }\n+}\n+\n+NOIPA int g4 (int i)\n+{\n+  if (i < 1) i = 1;\n+\n+  const char *p0 = a9;\n+  const char *p1 = p0 + i;\n+  const char *p2 = p1 + i;\n+  const char *p3 = p2 + i;\n+  const char *p4 = p3 + i;\n+\n+  f (p0, p1, p2, p3, p4);\n+\n+  return p4[6];     // { dg-warning \"\\\\\\[-Warray-bounds]\" }\n+}\n+\n+NOIPA int g5 (int i)\n+{\n+  if (i < 1) i = 1;\n+\n+  const char *p0 = a9;\n+  const char *p1 = p0 + i;\n+  const char *p2 = p1 + i;\n+  const char *p3 = p2 + i;\n+  const char *p4 = p3 + i;\n+  const char *p5 = p4 + i;\n+\n+  f (p0, p1, p2, p3, p4, p5);\n+\n+  return p5[5];\n+}\n+\n+NOIPA int g6 (int i)\n+{\n+  if (i < 1) i = 1;\n+\n+  const char *p0 = a9;\n+  const char *p1 = p0 + i;\n+  const char *p2 = p1 + i;\n+  const char *p3 = p2 + i;\n+  const char *p4 = p3 + i;\n+  const char *p5 = p4 + i;\n+  const char *p6 = p5 + i;\n+\n+  f (p0, p1, p2, p3, p4, p5, p6);\n+\n+  return p6[4];\n+}\n+\n+NOIPA int g7 (int i)\n+{\n+  if (i < 1) i = 1;\n+\n+  const char *p0 = a9;\n+  const char *p1 = p0 + i;\n+  const char *p2 = p1 + i;\n+  const char *p3 = p2 + i;\n+  const char *p4 = p3 + i;\n+  const char *p5 = p4 + i;\n+  const char *p6 = p5 + i;\n+  const char *p7 = p6 + i;\n+\n+  f (p0, p1, p2, p3, p4, p5, p6, p7);\n+\n+  return p7[3];\n+}\n+\n+NOIPA int g8 (int i)\n+{\n+  if (i < 1) i = 1;\n+\n+  const char *p0 = a9;\n+  const char *p1 = p0 + i;\n+  const char *p2 = p1 + i;\n+  const char *p3 = p2 + i;\n+  const char *p4 = p3 + i;\n+  const char *p5 = p4 + i;\n+  const char *p6 = p5 + i;\n+  const char *p7 = p6 + i;\n+  const char *p8 = p7 + i;\n+\n+  f (p0, p1, p2, p3, p4, p5, p6, p7, p8);\n+\n+  return p8[2];\n+}"}, {"sha": "b79dfb261ae6813ba42b455b0b461bc8edae66e2", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd47cb75dac4583dc38e9c1df2fde89fd459a08/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=5dd47cb75dac4583dc38e9c1df2fde89fd459a08", "patch": "@@ -4492,7 +4492,8 @@ vrp_prop::check_mem_ref (location_t location, tree ref,\n      The loop computes the range of the final offset for expressions such\n      as (A + i0 + ... + iN)[CSTOFF] where i0 through iN are SSA_NAMEs in\n      some range.  */\n-  while (TREE_CODE (arg) == SSA_NAME)\n+  const unsigned limit = PARAM_VALUE (PARAM_SSA_NAME_DEF_CHAIN_LIMIT);\n+  for (unsigned n = 0; TREE_CODE (arg) == SSA_NAME && n < limit; ++n)\n     {\n       gimple *def = SSA_NAME_DEF_STMT (arg);\n       if (!is_gimple_assign (def))"}]}