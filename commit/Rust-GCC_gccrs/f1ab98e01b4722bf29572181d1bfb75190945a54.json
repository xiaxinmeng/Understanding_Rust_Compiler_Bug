{"sha": "f1ab98e01b4722bf29572181d1bfb75190945a54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhYjk4ZTAxYjQ3MjJiZjI5NTcyMTgxZDFiZmI3NTE5MDk0NWE1NA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-04-05T00:19:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-04-05T00:19:36Z"}, "message": "pa.md (movdi patterns): Do not accept 1.0 FP registers in the constraints.\n\n\t* pa.md (movdi patterns): Do not accept 1.0 FP registers in\n\tthe constraints.\n\t(floatunsdisf, floatunsdidf expanders): Disable unless TARGET_SNAKE.\n\t(floatdisf2, floatdidf2 patterns): Likewise.\n\t(fix_truncdisf2, fix_truncdidf2): Likewise\n\nFrom-SVN: r4018", "tree": {"sha": "0a4e2728aef9cede7b0992b0c23af1c5b0f91bd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a4e2728aef9cede7b0992b0c23af1c5b0f91bd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1ab98e01b4722bf29572181d1bfb75190945a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ab98e01b4722bf29572181d1bfb75190945a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ab98e01b4722bf29572181d1bfb75190945a54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ab98e01b4722bf29572181d1bfb75190945a54/comments", "author": null, "committer": null, "parents": [{"sha": "1cfe228c0c0bcfe0f7ae3ab20835190694beafc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cfe228c0c0bcfe0f7ae3ab20835190694beafc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cfe228c0c0bcfe0f7ae3ab20835190694beafc0"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "9dcd818ec063e0bb793d6e990e0fca11e87d7d21", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ab98e01b4722bf29572181d1bfb75190945a54/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ab98e01b4722bf29572181d1bfb75190945a54/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=f1ab98e01b4722bf29572181d1bfb75190945a54", "patch": "@@ -1488,9 +1488,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"reg_or_nonsymb_mem_operand\"\n-\t\t\t  \"=r,Q,&r,&r,fx,fx,*T\")\n+\t\t\t  \"=r,Q,&r,&r,x,x,*T\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t\t\t  \"rM,r,Q,i,fxM,*T,fx\"))]\n+\t\t\t  \"rM,r,Q,i,xM,*T,x\"))]\n   \"register_operand (operands[0], DImode)\n    || reg_or_0_operand (operands[1], DImode)\"\n   \"*\n@@ -1697,7 +1697,7 @@\n \t(const_int 0))\n    (set (match_operand:SF 0 \"general_operand\" \"\")\n \t(float:SF (match_dup 2)))]\n-  \"\"\n+  \"TARGET_SNAKE\"\n   \"operands[2] = gen_reg_rtx (DImode);\")\n \n (define_expand \"floatunssidf2\"\n@@ -1707,21 +1707,21 @@\n \t(const_int 0))\n    (set (match_operand:DF 0 \"general_operand\" \"\")\n \t(float:DF (match_dup 2)))]\n-  \"\"\n+  \"TARGET_SNAKE\"\n   \"operands[2] = gen_reg_rtx (DImode);\")\n \n (define_insn \"floatdisf2\"\n-  [(set (match_operand:SF 0 \"general_operand\" \"=fx\")\n-\t(float:SF (match_operand:DI 1 \"register_operand\" \"fx\")))]\n-  \"\"\n+  [(set (match_operand:SF 0 \"general_operand\" \"=x\")\n+\t(float:SF (match_operand:DI 1 \"register_operand\" \"x\")))]\n+  \"TARGET_SNAKE\"\n   \"fcnvxf,dbl,sgl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"floatdidf2\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=fx\")\n-\t(float:DF (match_operand:DI 1 \"register_operand\" \"fx\")))]\n-  \"\"\n+  [(set (match_operand:DF 0 \"general_operand\" \"=x\")\n+\t(float:DF (match_operand:DI 1 \"register_operand\" \"x\")))]\n+  \"TARGET_SNAKE\"\n   \"fcnvxf,dbl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"1\")])\n@@ -1746,17 +1746,17 @@\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"fix_truncsfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=fx\")\n-\t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"fx\"))))]\n-  \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n+\t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"x\"))))]\n+  \"TARGET_SNAKE\"\n   \"fcnvfxt,sgl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"fix_truncdfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=fx\")\n-\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"fx\"))))]\n-  \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n+\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"x\"))))]\n+  \"TARGET_SNAKE\"\n   \"fcnvfxt,dbl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"1\")])"}]}