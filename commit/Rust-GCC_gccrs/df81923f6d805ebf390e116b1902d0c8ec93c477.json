{"sha": "df81923f6d805ebf390e116b1902d0c8ec93c477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY4MTkyM2Y2ZDgwNWViZjM5MGUxMTZiMTkwMmQwYzhlYzkzYzQ3Nw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-06-12T17:06:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-27T08:05:15Z"}, "message": "[Ada] Add range check for GNATprove on 'Pos to Long_Integer conversion\n\ngcc/ada/\n\n\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference) Extend\n\texisting workaround to 'Pos.", "tree": {"sha": "bd477a840930956acc0eee79b8deff8ca323ec1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd477a840930956acc0eee79b8deff8ca323ec1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df81923f6d805ebf390e116b1902d0c8ec93c477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df81923f6d805ebf390e116b1902d0c8ec93c477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df81923f6d805ebf390e116b1902d0c8ec93c477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df81923f6d805ebf390e116b1902d0c8ec93c477/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "b400268ac5b9de6da3edb7a2da02b51b5c5c46db", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df81923f6d805ebf390e116b1902d0c8ec93c477/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df81923f6d805ebf390e116b1902d0c8ec93c477/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=df81923f6d805ebf390e116b1902d0c8ec93c477", "patch": "@@ -400,13 +400,16 @@ package body Exp_SPARK is\n          --  flag as the compiler assumes attributes always fit in this type.\n          --  Since in SPARK_Mode we do not take Storage_Error into account, we\n          --  cannot make this assumption and need to produce a check.\n-         --  ??? It should be enough to add this check for attributes 'Length\n-         --  and 'Range_Length when the type is as big as Long_Long_Integer.\n+         --  ??? It should be enough to add this check for attributes\n+         --  'Length, 'Range_Length and 'Pos when the type is as big\n+         --  as Long_Long_Integer.\n \n          declare\n             Typ : Entity_Id;\n          begin\n-            if Attr_Id = Attribute_Range_Length then\n+            if Attr_Id = Attribute_Range_Length\n+              or else Attr_Id = Attribute_Pos\n+            then\n                Typ := Etype (Prefix (N));\n \n             elsif Attr_Id = Attribute_Length then\n@@ -421,6 +424,9 @@ package body Exp_SPARK is\n             if Present (Typ)\n               and then RM_Size (Typ) = RM_Size (Standard_Long_Long_Integer)\n             then\n+               --  ??? This should rather be a range check, but this would\n+               --  crash GNATprove which somehow recovers the proper kind\n+               --  of check anyway.\n                Set_Do_Overflow_Check (N);\n             end if;\n          end;"}]}