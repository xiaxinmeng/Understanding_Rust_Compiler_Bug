{"sha": "10389f52340a87ce25290fa49cc059e2f72a13a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAzODlmNTIzNDBhODdjZTI1MjkwZmE0OWNjMDU5ZTJmNzJhMTNhNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-19T18:11:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-19T18:11:21Z"}, "message": "(current_function_decl): Delete declaration.\n\n(function_prologue): New variable fnname.  Use it instead of\ncurrent_function_name.\n(function_epilogue): Likewise.\n\nFrom-SVN: r10006", "tree": {"sha": "cbb4a0126facbd5a9403f2019075d7413c2aa256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbb4a0126facbd5a9403f2019075d7413c2aa256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10389f52340a87ce25290fa49cc059e2f72a13a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10389f52340a87ce25290fa49cc059e2f72a13a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10389f52340a87ce25290fa49cc059e2f72a13a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10389f52340a87ce25290fa49cc059e2f72a13a4/comments", "author": null, "committer": null, "parents": [{"sha": "c80a48bf6d54f2060ff7b540f26653ea72369f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80a48bf6d54f2060ff7b540f26653ea72369f4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80a48bf6d54f2060ff7b540f26653ea72369f4b"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "bab4e4126d0c8fb6f6a88e44c40c000f8aea6d2b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10389f52340a87ce25290fa49cc059e2f72a13a4/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10389f52340a87ce25290fa49cc059e2f72a13a4/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=10389f52340a87ce25290fa49cc059e2f72a13a4", "patch": "@@ -82,7 +82,6 @@ extern tree   lookup_name ();\n extern void   pfatal_with_name ();\n extern void   warning ();\n \n-extern tree   current_function_decl;\n extern FILE  *asm_out_file;\n \n /* Enumeration for all of the relational tests, so that we can build\n@@ -4829,6 +4828,7 @@ function_prologue (file, size)\n      FILE *file;\n      int size;\n {\n+  char *fnname;\n   long tsize = current_frame_info.total_size;\n \n   ASM_OUTPUT_SOURCE_FILENAME (file, DECL_SOURCE_FILE (current_function_decl));\n@@ -4838,12 +4838,17 @@ function_prologue (file, size)\n     ASM_OUTPUT_SOURCE_LINE (file, DECL_SOURCE_LINE (current_function_decl));\n #endif\n \n+  /* Get the function name the same way that toplev.c does before calling\n+     assemble_start_function.  This is needed so that the name used here\n+     exactly matches the name used in ASM_DECLARE_FUNCTION_NAME.  */\n+  fnname = XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0);\n+\n   inside_function = 1;\n   fputs (\"\\t.ent\\t\", file);\n-  assemble_name (file, current_function_name);\n+  assemble_name (file, fnname);\n   fputs (\"\\n\", file);\n \n-  assemble_name (file, current_function_name);\n+  assemble_name (file, fnname);\n   fputs (\":\\n\", file);\n \n   fprintf (file, \"\\t.frame\\t%s,%d,%s\\t\\t# vars= %d, regs= %d/%d, args= %d, extra= %d\\n\",\n@@ -5067,6 +5072,7 @@ function_epilogue (file, size)\n      FILE *file;\n      int size;\n {\n+  char *fnname;\n   long tsize;\n   char *sp_str = reg_names[STACK_POINTER_REGNUM];\n   char *t1_str = reg_names[MIPS_TEMP1_REGNUM];\n@@ -5232,16 +5238,21 @@ function_epilogue (file, size)\n \t}\n     }\n \n+  /* Get the function name the same way that toplev.c does before calling\n+     assemble_start_function.  This is needed so that the name used here\n+     exactly matches the name used in ASM_DECLARE_FUNCTION_NAME.  */\n+  fnname = XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0);\n+\n   fputs (\"\\t.end\\t\", file);\n-  assemble_name (file, current_function_name);\n+  assemble_name (file, fnname);\n   fputs (\"\\n\", file);\n \n   if (TARGET_STATS)\n     {\n       int num_gp_regs = current_frame_info.gp_reg_size / 4;\n       int num_fp_regs = current_frame_info.fp_reg_size / 8;\n       int num_regs    = num_gp_regs + num_fp_regs;\n-      char *name      = current_function_name;\n+      char *name      = fnname;\n \n       if (name[0] == '*')\n \tname++;"}]}