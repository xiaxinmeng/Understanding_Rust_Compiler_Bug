{"sha": "942149531d595c7860a49a9688fd9cd160a62455", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQyMTQ5NTMxZDU5NWM3ODYwYTQ5YTk2ODhmZDljZDE2MGE2MjQ1NQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-09-22T18:12:10Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-09-22T18:12:10Z"}, "message": "cp-tree.h (unemitted_tinfo_decls): Make a VEC(tree).\n\n\t* cp-tree.h (unemitted_tinfo_decls): Make a VEC(tree).\n\t* decl2.c (cp_finish_file): Adjust tinfo decl emission loop.\n\t* rtti.c (unemitted_tinfo_decls): Make a VEC(tree).\n\t(init_rtti_processing): Initialize it to something realistic.\n\t(get_tinfo_decl): Adjust pushing the new decl.\n\nFrom-SVN: r87872", "tree": {"sha": "3d48eaf3d5b695c2aed8d381f2851caa06e286d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d48eaf3d5b695c2aed8d381f2851caa06e286d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/942149531d595c7860a49a9688fd9cd160a62455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/942149531d595c7860a49a9688fd9cd160a62455", "html_url": "https://github.com/Rust-GCC/gccrs/commit/942149531d595c7860a49a9688fd9cd160a62455", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/942149531d595c7860a49a9688fd9cd160a62455/comments", "author": null, "committer": null, "parents": [{"sha": "8739ed59c414cb398d6ffd6df489519700116d8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8739ed59c414cb398d6ffd6df489519700116d8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8739ed59c414cb398d6ffd6df489519700116d8a"}], "stats": {"total": 58, "additions": 23, "deletions": 35}, "files": [{"sha": "e91d4251d8df456ee3062bafecb6d5571e4261a9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=942149531d595c7860a49a9688fd9cd160a62455", "patch": "@@ -1,5 +1,11 @@\n 2004-09-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\t* cp-tree.h (unemitted_tinfo_decls): Make a VEC(tree).\n+\t* decl2.c (cp_finish_file): Adjust tinfo decl emission loop.\n+\t* rtti.c (unemitted_tinfo_decls): Make a VEC(tree).\n+\t(init_rtti_processing): Initialize it to something realistic.\n+\t(get_tinfo_decl): Adjust pushing the new decl.\n+\n \t* cp-tree.h (struct lang_type_class): Remove marked flags, add\n \tdiamond_shaped and repeated_base flags.  Reorder to keep 8-bit blocks.\n \t(TYPE_MARKED_P): New."}, {"sha": "c439864c1b12b3db6259c9a88c1a2c83ed7658f4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=942149531d595c7860a49a9688fd9cd160a62455", "patch": "@@ -3967,8 +3967,8 @@ extern bool repo_export_class_p (tree);\n extern void finish_repo (void);\n \n /* in rtti.c */\n-/* A varray of all tinfo decls that haven't been emitted yet.  */\n-extern GTY(()) varray_type unemitted_tinfo_decls;\n+/* A vector of all tinfo decls that haven't been emitted yet.  */\n+extern GTY(()) VEC(tree) *unemitted_tinfo_decls;\n \n extern void init_rtti_processing (void);\n extern tree build_typeid (tree);"}, {"sha": "8506ea3b3b8bb9bfd583fc6e01bc88b2f106cd42", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 27, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=942149531d595c7860a49a9688fd9cd160a62455", "patch": "@@ -2780,7 +2780,6 @@ cp_finish_file (void)\n   do \n     {\n       tree t;\n-      size_t n_old, n_new;\n \n       reconsider = false;\n \n@@ -2823,32 +2822,16 @@ cp_finish_file (void)\n \n       /* Write out needed type info variables.  We have to be careful\n  \t looping through unemitted decls, because emit_tinfo_decl may\n- \t cause other variables to be needed.  We stick new elements\n- \t (and old elements that we may need to reconsider) at the end\n- \t of the array, then shift them back to the beginning once we're\n- \t done.  */\n-\n-      n_old = VARRAY_ACTIVE_SIZE (unemitted_tinfo_decls);\n-      for (i = 0; i < n_old; ++i)\n-  \t{\n-  \t  tree tinfo_decl = VARRAY_TREE (unemitted_tinfo_decls, i);\n-  \t  if (emit_tinfo_decl (tinfo_decl))\n- \t    reconsider = true;\n-  \t  else\n-  \t    VARRAY_PUSH_TREE (unemitted_tinfo_decls, tinfo_decl);\n-  \t}\n-  \n-      /* The only elements we want to keep are the new ones.  Copy\n-  \t them to the beginning of the array, then get rid of the\n-  \t leftovers.  */\n-      n_new = VARRAY_ACTIVE_SIZE (unemitted_tinfo_decls) - n_old;\n-      if (n_new)\n-\tmemmove (&VARRAY_TREE (unemitted_tinfo_decls, 0),\n-\t\t &VARRAY_TREE (unemitted_tinfo_decls, n_old),\n-\t\t n_new * sizeof (tree));\n-      memset (&VARRAY_TREE (unemitted_tinfo_decls, n_new),\n-  \t      0, n_old * sizeof (tree));\n-      VARRAY_ACTIVE_SIZE (unemitted_tinfo_decls) = n_new;\n+ \t cause other variables to be needed. New elements will be\n+ \t appended, and we remove from the vector those that actually\n+ \t get emitted.  */\n+      for (i = VEC_length (tree, unemitted_tinfo_decls);\n+\t   VEC_iterate (tree, unemitted_tinfo_decls, --i, t);)\n+\tif (emit_tinfo_decl (t))\n+\t  {\n+\t    reconsider = true;\n+\t    VEC_unordered_remove (tree, unemitted_tinfo_decls, i);\n+\t  }\n \n       /* The list of objects with static storage duration is built up\n \t in reverse order.  We clear STATIC_AGGREGATES so that any new"}, {"sha": "b995726e09b459909788c1466fa14459611869ec", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/942149531d595c7860a49a9688fd9cd160a62455/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=942149531d595c7860a49a9688fd9cd160a62455", "patch": "@@ -73,8 +73,8 @@ Boston, MA 02111-1307, USA.  */\n /* The IDENTIFIER_NODE naming the real class.  */\n #define TINFO_REAL_NAME(NODE) TREE_PURPOSE (NODE)\n \n-/* A varray of all tinfo decls that haven't yet been emitted.  */\n-varray_type unemitted_tinfo_decls;\n+/* A vector of all tinfo decls that haven't yet been emitted.  */\n+VEC (tree) *unemitted_tinfo_decls;\n \n static tree build_headof (tree);\n static tree ifnonnull (tree, tree);\n@@ -120,8 +120,8 @@ init_rtti_processing (void)\n   type_info_ptr_type = build_pointer_type (const_type_info_type);\n   type_info_ref_type = build_reference_type (const_type_info_type);\n \n-  VARRAY_TREE_INIT (unemitted_tinfo_decls, 10, \"RTTI decls\");\n-\n+  unemitted_tinfo_decls = VEC_alloc (tree, 124);\n+  \n   create_tinfo_types ();\n }\n \n@@ -361,8 +361,7 @@ get_tinfo_decl (tree type)\n       pushdecl_top_level_and_finish (d, NULL_TREE);\n \n       /* Add decl to the global array of tinfo decls.  */\n-      gcc_assert (unemitted_tinfo_decls != 0);\n-      VARRAY_PUSH_TREE (unemitted_tinfo_decls, d);\n+      VEC_safe_push (tree, unemitted_tinfo_decls, d);\n     }\n \n   return d;"}]}