{"sha": "f67b3771d51db363dc9c6e9d721b71568fceff14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY3YjM3NzFkNTFkYjM2M2RjOWM2ZTlkNzIxYjcxNTY4ZmNlZmYxNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T08:06:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T08:06:37Z"}, "message": "Makefile.in: Adjust the libgnat target pairs for Xscale to ARM.\n\n2005-09-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* Makefile.in: Adjust the libgnat target pairs for Xscale to ARM.\n\tNote that the platform-specific version of g-soccon.ads for VMS is now\n\tnamed g-soccon-vms.ads (it was previously g-soccon-vms.adb, although it\n\treally is a package spec).\n\tReplace s-taspri-linux.ads by s-taspri-posix.ads\n\tRemove references to s-mastop-x86.adb\n\n\t* system-vxworks-xscale.ads: Removed, no longer used.\n\t* s-vxwork-xscale.ads: Removed, no longer used.\n\nFrom-SVN: r103893", "tree": {"sha": "a9a97b1d642d6c4904533f155a0b52a5d5451d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9a97b1d642d6c4904533f155a0b52a5d5451d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f67b3771d51db363dc9c6e9d721b71568fceff14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67b3771d51db363dc9c6e9d721b71568fceff14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67b3771d51db363dc9c6e9d721b71568fceff14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67b3771d51db363dc9c6e9d721b71568fceff14/comments", "author": null, "committer": null, "parents": [{"sha": "ba355842e8ff8cbcb8552b99f6098b333512cc81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba355842e8ff8cbcb8552b99f6098b333512cc81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba355842e8ff8cbcb8552b99f6098b333512cc81"}], "stats": {"total": 250, "additions": 13, "deletions": 237}, "files": [{"sha": "f13fed7fb76235e1943c73b697e3faf2dfec8469", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 13, "deletions": 22, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f67b3771d51db363dc9c6e9d721b71568fceff14/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f67b3771d51db363dc9c6e9d721b71568fceff14/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=f67b3771d51db363dc9c6e9d721b71568fceff14", "patch": "@@ -390,7 +390,6 @@ ifeq ($(strip $(filter-out %86 os2 OS2 os2_emx,$(arch) $(osys))),)\n   s-inmaop.adb<s-inmaop-dummy.adb \\\n   s-interr.adb<s-interr-dummy.adb \\\n   s-intman.adb<s-intman-dummy.adb \\\n-  s-mastop.adb<s-mastop-x86.adb \\\n   s-osinte.adb<s-osinte-os2.adb \\\n   s-osinte.ads<s-osinte-os2.ads \\\n   s-osprim.adb<s-osprim-os2.adb \\\n@@ -415,7 +414,6 @@ ifeq ($(strip $(filter-out %86 interix%,$(arch) $(osys))),)\n   g-soccon.ads<g-soccon-interix.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  s-mastop.adb<s-mastop-x86.adb \\\n   s-osinte.adb<s-osinte-fsu.adb \\\n   s-osinte.ads<s-osinte-interix.ads \\\n   s-osprim.adb<s-osprim-unix.adb \\\n@@ -437,7 +435,6 @@ ifeq ($(strip $(filter-out %86 sysv5uw%,$(arch) $(osys))),)\n   a-numaux.ads<a-numaux-x86.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  s-mastop.adb<s-mastop-x86.adb \\\n   s-osinte.ads<s-osinte-unixware.ads \\\n   s-osinte.adb<s-osinte-unixware.adb \\\n   s-osprim.adb<s-osprim-unix.adb \\\n@@ -622,7 +619,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n endif\n \n-ifeq ($(strip $(filter-out xscale% coff wrs vx%,$(targ))),)\n+ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -638,11 +635,11 @@ ifeq ($(strip $(filter-out xscale% coff wrs vx%,$(targ))),)\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n-  s-vxwork.ads<s-vxwork-xscale.ads \\\n+  s-vxwork.ads<s-vxwork-arm.ads \\\n   g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n-  system.ads<system-elf-sparc.ads\n+  system.ads<system-vxworks-arm.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt.adb<mlib-tgt-vxworks.adb\n \n@@ -769,7 +766,6 @@ ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n   a-intnam.ads<a-intnam-solaris.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-solaris.adb \\\n-  s-mastop.adb<s-mastop-x86.adb \\\n   s-osinte.adb<s-osinte-solaris.adb \\\n   s-osinte.ads<s-osinte-solaris.ads \\\n   s-osprim.adb<s-osprim-solaris.adb \\\n@@ -801,12 +797,11 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n   a-numaux.ads<a-numaux-x86.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  s-mastop.adb<s-mastop-x86.adb \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n-  s-taspri.ads<s-taspri-linux.ads \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-parame.adb<s-parame-linux.adb \\\n   system.ads<system-linux-x86.ads\n@@ -828,7 +823,6 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n     a-numaux.ads<a-numaux-x86.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n     s-intman.adb<s-intman-posix.adb \\\n-    s-mastop.adb<s-mastop-x86.adb \\\n     s-osinte.adb<s-osinte-fsu.adb \\\n     s-osinte.ads<s-osinte-linux-fsu.ads \\\n     s-osprim.adb<s-osprim-posix.adb \\\n@@ -849,7 +843,6 @@ ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n   g-soccon.ads<g-soccon-freebsd.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  s-mastop.adb<s-mastop-x86.adb \\\n   s-osinte.adb<s-osinte-freebsd.adb \\\n   s-osinte.ads<s-osinte-freebsd.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n@@ -878,7 +871,7 @@ ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n     s-osinte.ads<s-osinte-linux.ads \\\n     s-osprim.adb<s-osprim-posix.adb \\\n     s-taprop.adb<s-taprop-linux.adb \\\n-    s-taspri.ads<s-taspri-linux.ads \\\n+    s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n     s-parame.adb<s-parame-linux.adb \\\n     system.ads<system-linux-s390x.ads\n@@ -891,7 +884,7 @@ ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n     s-osinte.ads<s-osinte-linux.ads \\\n     s-osprim.adb<s-osprim-posix.adb \\\n     s-taprop.adb<s-taprop-linux.adb \\\n-    s-taspri.ads<s-taspri-linux.ads \\\n+    s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n     s-parame.adb<s-parame-linux.adb \\\n     system.ads<system-linux-s390.ads\n@@ -1076,7 +1069,6 @@ ifeq ($(strip $(filter-out lynxos,$(osys))),)\n     a-numaux.adb<a-numaux-x86.adb \\\n     a-numaux.ads<a-numaux-x86.ads \\\n     a-intnam.ads<a-intnam-lynxos.ads \\\n-    s-mastop.adb<s-mastop-x86.adb \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n     s-intman.adb<s-intman-posix.adb \\\n     s-osinte.adb<s-osinte-lynxos.adb \\\n@@ -1213,7 +1205,7 @@ endif\n   a-intnam.ads<a-intnam-vms.ads \\\n   a-numaux.ads<a-numaux-vms.ads \\\n   g-expect.adb<g-expect-vms.adb \\\n-  g-soccon.ads<g-soccon-vms.adb \\\n+  g-soccon.ads<g-soccon-vms.ads \\\n   g-socthi.ads<g-socthi-vms.ads \\\n   g-socthi.adb<g-socthi-vms.adb \\\n   g-trasym.adb<g-trasym-vms.adb \\\n@@ -1277,7 +1269,6 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n   s-inmaop.adb<s-inmaop-dummy.adb \\\n   s-interr.adb<s-interr-sigaction.adb \\\n   s-intman.adb<s-intman-mingw.adb \\\n-  s-mastop.adb<s-mastop-x86.adb \\\n   s-memory.adb<s-memory-mingw.adb \\\n   s-osinte.ads<s-osinte-mingw.ads \\\n   s-osprim.adb<s-osprim-mingw.adb \\\n@@ -1316,7 +1307,7 @@ ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n-  s-taspri.ads<s-taspri-linux.ads \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-parame.adb<s-parame-linux.adb \\\n   system.ads<system-linux-ppc.ads\n@@ -1341,7 +1332,7 @@ ifeq ($(strip $(filter-out sparc% linux%,$(arch) $(osys))),)\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n-  s-taspri.ads<s-taspri-linux.ads \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-parame.adb<s-parame-linux.adb \\\n   system.ads<system-linux-sparc.ads\n@@ -1366,7 +1357,7 @@ ifeq ($(strip $(filter-out hppa% linux%,$(arch) $(osys))),)\n   s-osinte.ads<s-osinte-linux-hppa.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n-  s-taspri.ads<s-taspri-linux.ads \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-parame.adb<s-parame-linux.adb \\\n   system.ads<system-linux-hppa.ads\n@@ -1393,7 +1384,7 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  s-taspri.ads<s-taspri-linux.ads \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n   system.ads<system-linux-ia64.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n@@ -1418,7 +1409,7 @@ ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  s-taspri.ads<s-taspri-linux.ads \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n   system.ads<system-linux-alpha.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n@@ -1444,7 +1435,7 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  s-taspri.ads<s-taspri-linux.ads \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n   system.ads<system-linux-x86_64.ads\n \n   TOOLS_TARGET_PAIRS =  \\"}, {"sha": "26bb6ca3e71422c6377934937362419d9ce25689", "filename": "gcc/ada/s-vxwork-xscale.ads", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba355842e8ff8cbcb8552b99f6098b333512cc81/gcc%2Fada%2Fs-vxwork-xscale.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba355842e8ff8cbcb8552b99f6098b333512cc81/gcc%2Fada%2Fs-vxwork-xscale.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-xscale.ads?ref=ba355842e8ff8cbcb8552b99f6098b333512cc81", "patch": "@@ -1,54 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n---                                                                          --\n---                        S Y S T E M . V X W O R K S                       --\n---                                                                          --\n---                                   S p e c                                --\n---                                                                          --\n---            Copyright (C) 1998-2005 Free Software Foundation, Inc.        --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Xscale VxWorks version of this package.\n-\n-package System.VxWorks is\n-   pragma Preelaborate (System.VxWorks);\n-\n-   --  Floating point context record. Xscale version\n-\n-   --  There is no floating point unit on Xscale. The record definition\n-   --  below matches what arch/arm/fppArmLib.h says.\n-\n-   type FP_CONTEXT is record\n-      Dummy : Integer;\n-   end record;\n-\n-   for FP_CONTEXT'Alignment use 4;\n-   pragma Convention (C, FP_CONTEXT);\n-\n-   Num_HW_Interrupts : constant := 256;\n-   --  Number of entries in hardware interrupt vector table.\n-\n-end System.VxWorks;"}, {"sha": "afe1b7f5c4d507d5495d97a4ae85770c1617a8b5", "filename": "gcc/ada/system-vxworks-xscale.ads", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba355842e8ff8cbcb8552b99f6098b333512cc81/gcc%2Fada%2Fsystem-vxworks-xscale.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba355842e8ff8cbcb8552b99f6098b333512cc81/gcc%2Fada%2Fsystem-vxworks-xscale.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-xscale.ads?ref=ba355842e8ff8cbcb8552b99f6098b333512cc81", "patch": "@@ -1,161 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                         (VxWorks Version Xscale)                         --\n---                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := Integer'Last;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 1.0 / 60.0;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  256        is reserved for the VxWorks kernel\n-   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n-   --  247        is a catchall default \"interrupt\" priority for signals,\n-   --             allowing higher priority than normal tasks, but lower than\n-   --             hardware priority levels.  Protected Object ceilings can\n-   --             override these values.\n-   --  246        is used by the Interrupt_Manager task\n-\n-   Max_Priority           : constant Positive := 245;\n-   Max_Interrupt_Priority : constant Positive := 255;\n-\n-   subtype Any_Priority       is Integer      range   0 .. 255;\n-   subtype Priority           is Any_Priority range   0 .. 245;\n-   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n-\n-   Default_Priority : constant Priority := 122;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   AAMP                      : constant Boolean := False;\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n-   Command_Line_Args         : constant Boolean := False;\n-   Compiler_System_Version   : constant Boolean := False;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Functions_Return_By_DSP   : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   OpenVMS                   : constant Boolean := False;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Support_64_Bit_Divides    : constant Boolean := True;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := True;\n-   ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n-   Front_End_ZCX_Support     : constant Boolean := False;\n-\n-   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n-\n-   High_Integrity_Mode       : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := False;\n-\n-end System;"}]}