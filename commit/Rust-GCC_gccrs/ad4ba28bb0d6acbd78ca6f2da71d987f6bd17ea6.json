{"sha": "ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0YmEyOGJiMGQ2YWNiZDc4Y2E2ZjJkYTcxZDk4N2Y2YmQxN2VhNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T10:49:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T10:49:18Z"}, "message": "[multiple changes]\n\n2015-05-26  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_prag.adb, sem_ch3.adb, sem_ch5.adb, exp_ch11.adb, ghost.adb,\n\texp_ch6.adb, sem_ch6.adb, sem_ch8.adb, sem_ch11.adb, sem_ch13.adb,\n\texp_ch3.adb: Minor reformatting.\n\n2015-05-26  Bob Duff  <duff@adacore.com>\n\n\t* treepr.adb: Minor improvement to debugging routines (pp, pn)\n\trobustness.  Rearrange the code so passing a nonexistent Node_Id\n\tprints \"No such node\" rather than crashing, and causing gdb to\n\tgenerate confusing messages.\n\n2015-05-26  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_util.adb: Minor typo fix.\n\n2015-05-26  Yannick Moy  <moy@adacore.com>\n\n\t* sem_aux.adb (Subprogram_Body_Entity): Deal with subprogram stubs.\n\nFrom-SVN: r223685", "tree": {"sha": "529389619f9f210e3855bc6754e7da9d1ceb16f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/529389619f9f210e3855bc6754e7da9d1ceb16f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/comments", "author": null, "committer": null, "parents": [{"sha": "241ebe892af143aaf8cce4bfd80f9b8dce97fe72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241ebe892af143aaf8cce4bfd80f9b8dce97fe72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241ebe892af143aaf8cce4bfd80f9b8dce97fe72"}], "stats": {"total": 161, "additions": 99, "deletions": 62}, "files": [{"sha": "c04227408fcbbf9c3f8036e296f2ae83bef795ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -1,3 +1,24 @@\n+2015-05-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_prag.adb, sem_ch3.adb, sem_ch5.adb, exp_ch11.adb, ghost.adb,\n+\texp_ch6.adb, sem_ch6.adb, sem_ch8.adb, sem_ch11.adb, sem_ch13.adb,\n+\texp_ch3.adb: Minor reformatting.\n+\n+2015-05-26  Bob Duff  <duff@adacore.com>\n+\n+\t* treepr.adb: Minor improvement to debugging routines (pp, pn)\n+\trobustness.  Rearrange the code so passing a nonexistent Node_Id\n+\tprints \"No such node\" rather than crashing, and causing gdb to\n+\tgenerate confusing messages.\n+\n+2015-05-26  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_util.adb: Minor typo fix.\n+\n+2015-05-26  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_aux.adb (Subprogram_Body_Entity): Deal with subprogram stubs.\n+\n 2015-05-26  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch3.adb (Expand_N_Full_Type_Declaration): Capture, set and"}, {"sha": "47c373081b3c1d5d89ec2431900c9288bbc809aa", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -1191,11 +1191,11 @@ package body Exp_Ch11 is\n \n    procedure Expand_N_Exception_Declaration (N : Node_Id) is\n       GM      : constant Ghost_Mode_Type := Ghost_Mode;\n-      Id      : constant Entity_Id  := Defining_Identifier (N);\n-      Loc     : constant Source_Ptr := Sloc (N);\n+      Id      : constant Entity_Id       := Defining_Identifier (N);\n+      Loc     : constant Source_Ptr      := Sloc (N);\n       Ex_Id   : Entity_Id;\n       Flag_Id : Entity_Id;\n-      L       : List_Id := New_List;\n+      L       : List_Id;\n \n       procedure Force_Static_Allocation_Of_Referenced_Objects\n         (Aggregate : Node_Id);\n@@ -1304,6 +1304,7 @@ package body Exp_Ch11 is\n       --  Create the aggregate list for type Standard.Exception_Type:\n       --  Handled_By_Other component: False\n \n+      L := Empty_List;\n       Append_To (L, New_Occurrence_Of (Standard_False, Loc));\n \n       --  Lang component: 'A'"}, {"sha": "714176948a57ebb4897e208d1aac631212928218", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -4792,8 +4792,8 @@ package body Exp_Ch3 is\n \n       --  Local declarations\n \n-      Def_Id : constant Entity_Id := Defining_Identifier (N);\n-      B_Id   : constant Entity_Id := Base_Type (Def_Id);\n+      Def_Id : constant Entity_Id       := Defining_Identifier (N);\n+      B_Id   : constant Entity_Id       := Base_Type (Def_Id);\n       GM     : constant Ghost_Mode_Type := Ghost_Mode;\n       FN     : Node_Id;\n       Par_Id : Entity_Id;\n@@ -4942,13 +4942,13 @@ package body Exp_Ch3 is\n    ---------------------------------\n \n    procedure Expand_N_Object_Declaration (N : Node_Id) is\n-      Def_Id   : constant Entity_Id  := Defining_Identifier (N);\n-      Expr     : constant Node_Id    := Expression (N);\n+      Loc      : constant Source_Ptr      := Sloc (N);\n+      Def_Id   : constant Entity_Id       := Defining_Identifier (N);\n+      Expr     : constant Node_Id         := Expression (N);\n       GM       : constant Ghost_Mode_Type := Ghost_Mode;\n-      Loc      : constant Source_Ptr := Sloc (N);\n-      Obj_Def  : constant Node_Id    := Object_Definition (N);\n-      Typ      : constant Entity_Id  := Etype (Def_Id);\n-      Base_Typ : constant Entity_Id  := Base_Type (Typ);\n+      Obj_Def  : constant Node_Id         := Object_Definition (N);\n+      Typ      : constant Entity_Id       := Etype (Def_Id);\n+      Base_Typ : constant Entity_Id       := Base_Type (Typ);\n       Expr_Q   : Node_Id;\n \n       function Build_Equivalent_Aggregate return Boolean;"}, {"sha": "5afaf49cd08a0bf5de8e0b0a6f3c7466bbdd02be", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -5006,8 +5006,8 @@ package body Exp_Ch6 is\n \n    procedure Expand_N_Subprogram_Body (N : Node_Id) is\n       GM       : constant Ghost_Mode_Type := Ghost_Mode;\n-      Loc      : constant Source_Ptr := Sloc (N);\n-      HSS      : constant Node_Id    := Handled_Statement_Sequence (N);\n+      Loc      : constant Source_Ptr      := Sloc (N);\n+      HSS      : constant Node_Id         := Handled_Statement_Sequence (N);\n       Body_Id  : Entity_Id;\n       Except_H : Node_Id;\n       L        : List_Id;\n@@ -5451,10 +5451,10 @@ package body Exp_Ch6 is\n    --  If the declaration is for a null procedure, emit null body\n \n    procedure Expand_N_Subprogram_Declaration (N : Node_Id) is\n+      Loc       : constant Source_Ptr      := Sloc (N);\n       GM        : constant Ghost_Mode_Type := Ghost_Mode;\n-      Loc       : constant Source_Ptr := Sloc (N);\n-      Subp      : constant Entity_Id  := Defining_Entity (N);\n-      Scop      : constant Entity_Id  := Scope (Subp);\n+      Subp      : constant Entity_Id       := Defining_Entity (N);\n+      Scop      : constant Entity_Id       := Scope (Subp);\n       Prot_Bod  : Node_Id;\n       Prot_Decl : Node_Id;\n       Prot_Id   : Entity_Id;"}, {"sha": "d47e31c7cec0bafcbfbcc1dac1850727a88aa3b8", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -294,8 +294,8 @@ package body Exp_Prag is\n \n    procedure Expand_Pragma_Check (N : Node_Id) is\n       GM   : constant Ghost_Mode_Type := Ghost_Mode;\n-      Cond : constant Node_Id := Arg2 (N);\n-      Nam  : constant Name_Id := Chars (Arg1 (N));\n+      Cond : constant Node_Id         := Arg2 (N);\n+      Nam  : constant Name_Id         := Chars (Arg1 (N));\n       Msg  : Node_Id;\n \n       Loc : constant Source_Ptr := Sloc (First_Node (Cond));\n@@ -1580,8 +1580,9 @@ package body Exp_Prag is\n    --     end loop;\n \n    procedure Expand_Pragma_Loop_Variant (N : Node_Id) is\n-      Last_Var : constant Node_Id := Last (Pragma_Argument_Associations (N));\n       Loc      : constant Source_Ptr := Sloc (N);\n+      Last_Var : constant Node_Id    :=\n+                   Last (Pragma_Argument_Associations (N));\n \n       Curr_Assign : List_Id   := No_List;\n       Flag_Id     : Entity_Id := Empty;"}, {"sha": "05295a0e3c327f7a06f89ccfe9c603d04803055d", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -121,18 +121,18 @@ package body Ghost is\n \n          Error_Msg_N (\"incompatible ghost policies in effect\", Partial_View);\n          Error_Msg_N (\"\\& declared with ghost policy `Check`\", Partial_View);\n-         Error_Msg_N\n-           (\"\\& completed # with ghost policy `Ignore`\", Partial_View);\n+         Error_Msg_N (\"\\& completed # with ghost policy `Ignore`\",\n+                                                               Partial_View);\n \n       elsif Is_Ignored_Ghost_Entity (Partial_View)\n         and then Policy = Name_Check\n       then\n          Error_Msg_Sloc := Sloc (Full_View);\n \n-         Error_Msg_N (\"incompatible ghost policies in effect\", Partial_View);\n+         Error_Msg_N (\"incompatible ghost policies in effect\",  Partial_View);\n          Error_Msg_N (\"\\& declared with ghost policy `Ignore`\", Partial_View);\n-         Error_Msg_N\n-           (\"\\& completed # with ghost policy `Check`\", Partial_View);\n+         Error_Msg_N (\"\\& completed # with ghost policy `Check`\",\n+                                                                Partial_View);\n       end if;\n    end Check_Ghost_Completion;\n \n@@ -300,7 +300,8 @@ package body Ghost is\n \n                if GP = Name_Ignore and then AP /= Name_Ignore then\n                   Error_Msg_N\n-                    (\"incompatible ghost policies in effect\", Ghost_Ref);\n+                    (\"incompatible ghost policies in effect\",\n+                     Ghost_Ref);\n                   Error_Msg_NE\n                     (\"\\ghost entity & has policy `Ignore`\",\n                      Ghost_Ref, Ghost_Id);\n@@ -494,14 +495,14 @@ package body Ghost is\n \n             Error_Msg_N  (\"incompatible ghost policies in effect\", Err_N);\n             Error_Msg_NE (\"\\& declared with ghost policy `Check`\", Err_N, Id);\n-            Error_Msg_NE (\"\\& used # with ghost policy `Ignore`\", Err_N, Id);\n+            Error_Msg_NE (\"\\& used # with ghost policy `Ignore`\",  Err_N, Id);\n \n          elsif Is_Ignored_Ghost_Entity (Id) and then Policy = Name_Check then\n             Error_Msg_Sloc := Sloc (Err_N);\n \n-            Error_Msg_N  (\"incompatible ghost policies in effect\", Err_N);\n+            Error_Msg_N  (\"incompatible ghost policies in effect\",  Err_N);\n             Error_Msg_NE (\"\\& declared with ghost policy `Ignore`\", Err_N, Id);\n-            Error_Msg_NE (\"\\& used # with ghost policy `Check`\", Err_N, Id);\n+            Error_Msg_NE (\"\\& used # with ghost policy `Check`\",    Err_N, Id);\n          end if;\n       end Check_Ghost_Policy;\n \n@@ -558,7 +559,7 @@ package body Ghost is\n \n             if not Is_Ghost_Entity (Iface) then\n                Error_Msg_N  (\"type extension & cannot be ghost\", Typ);\n-               Error_Msg_NE (\"\\interface type & is not ghost\", Typ, Iface);\n+               Error_Msg_NE (\"\\interface type & is not ghost\",   Typ, Iface);\n                return;\n             end if;\n \n@@ -587,24 +588,24 @@ package body Ghost is\n          if Is_Checked_Ghost_Entity (Par_Subp)\n            and then Is_Ignored_Ghost_Entity (Subp)\n          then\n-            Error_Msg_N (\"incompatible ghost policies in effect\", Subp);\n+            Error_Msg_N (\"incompatible ghost policies in effect\",    Subp);\n \n             Error_Msg_Sloc := Sloc (Par_Subp);\n-            Error_Msg_N (\"\\& declared # with ghost policy `Check`\", Subp);\n+            Error_Msg_N (\"\\& declared # with ghost policy `Check`\",  Subp);\n \n             Error_Msg_Sloc := Sloc (Subp);\n             Error_Msg_N (\"\\overridden # with ghost policy `Ignore`\", Subp);\n \n          elsif Is_Ignored_Ghost_Entity (Par_Subp)\n            and then Is_Checked_Ghost_Entity (Subp)\n          then\n-            Error_Msg_N (\"incompatible ghost policies in effect\", Subp);\n+            Error_Msg_N (\"incompatible ghost policies in effect\",    Subp);\n \n             Error_Msg_Sloc := Sloc (Par_Subp);\n             Error_Msg_N (\"\\& declared # with ghost policy `Ignore`\", Subp);\n \n             Error_Msg_Sloc := Sloc (Subp);\n-            Error_Msg_N (\"\\overridden # with ghost policy `Check`\", Subp);\n+            Error_Msg_N (\"\\overridden # with ghost policy `Check`\",  Subp);\n          end if;\n       end if;\n    end Check_Ghost_Overriding;\n@@ -1158,7 +1159,6 @@ package body Ghost is\n    begin\n       if Is_Checked_Ghost_Entity (Id) then\n          Ghost_Mode := Check;\n-\n       elsif Is_Ignored_Ghost_Entity (Id) then\n          Ghost_Mode := Ignore;\n       end if;"}, {"sha": "31644b076e36ad9032e22ffc0aa0e1c210c88600", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -1524,15 +1524,15 @@ package body Sem_Aux is\n       N := Parent (Subprogram_Specification (E));\n \n       --  If this declaration is not a subprogram body, then it must be a\n-      --  subprogram declaration, from which we can retrieve the entity for\n-      --  the corresponding subprogram body if any, or an abstract subprogram\n-      --  declaration, for which we return Empty.\n+      --  subprogram declaration or body stub, from which we can retrieve the\n+      --  entity for the corresponding subprogram body if any, or an abstract\n+      --  subprogram declaration, for which we return Empty.\n \n       case Nkind (N) is\n          when N_Subprogram_Body =>\n             return E;\n \n-         when N_Subprogram_Declaration =>\n+         when N_Subprogram_Declaration | N_Subprogram_Body_Stub =>\n             return Corresponding_Body (N);\n \n          when others =>"}, {"sha": "82b59e92d7fa59d54e0794a478c3c1316735ca7e", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -56,8 +56,8 @@ package body Sem_Ch11 is\n \n    procedure Analyze_Exception_Declaration (N : Node_Id) is\n       GM : constant Ghost_Mode_Type := Ghost_Mode;\n-      Id : constant Entity_Id := Defining_Identifier (N);\n-      PF : constant Boolean   := Is_Pure (Current_Scope);\n+      Id : constant Entity_Id       := Defining_Identifier (N);\n+      PF : constant Boolean         := Is_Pure (Current_Scope);\n \n    begin\n       --  The exception declaration may be subject to pragma Ghost with policy"}, {"sha": "d994ba3fe025011116e015d97296992934c61185", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -7763,14 +7763,14 @@ package body Sem_Ch13 is\n    function Build_Invariant_Procedure_Declaration\n      (Typ : Entity_Id) return Node_Id\n    is\n+      Loc    : constant Source_Ptr      := Sloc (Typ);\n       GM     : constant Ghost_Mode_Type := Ghost_Mode;\n-      Loc    : constant Source_Ptr := Sloc (Typ);\n       Decl   : Node_Id;\n       Obj_Id : Entity_Id;\n       SId    : Entity_Id;\n \n    begin\n-      --  Check for duplicate definiations\n+      --  Check for duplicate definitions\n \n       if Has_Invariants (Typ) and then Present (Invariant_Procedure (Typ)) then\n          return Empty;\n@@ -8011,7 +8011,7 @@ package body Sem_Ch13 is\n             --  analyzed at the end of the private part, but that yields the\n             --  wrong visibility.\n \n-            --  Historic note: we used to set N as the parent, but a package\n+            --  Historical note: we used to set N as the parent, but a package\n             --  specification as the parent of an expression is bizarre.\n \n             Set_Parent (Expr, Parent (Arg2));"}, {"sha": "df86250b2862253419acb02b6f7b7ae13b489d14", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -2556,8 +2556,8 @@ package body Sem_Ch3 is\n    -----------------------------------\n \n    procedure Analyze_Full_Type_Declaration (N : Node_Id) is\n-      Def    : constant Node_Id   := Type_Definition (N);\n-      Def_Id : constant Entity_Id := Defining_Identifier (N);\n+      Def    : constant Node_Id         := Type_Definition (N);\n+      Def_Id : constant Entity_Id       := Defining_Identifier (N);\n       GM     : constant Ghost_Mode_Type := Ghost_Mode;\n       T      : Entity_Id;\n       Prev   : Entity_Id;\n@@ -2923,7 +2923,7 @@ package body Sem_Ch3 is\n    ----------------------------------\n \n    procedure Analyze_Incomplete_Type_Decl (N : Node_Id) is\n-      F  : constant Boolean := Is_Pure (Current_Scope);\n+      F  : constant Boolean         := Is_Pure (Current_Scope);\n       GM : constant Ghost_Mode_Type := Ghost_Mode;\n       T  : Entity_Id;\n \n@@ -3406,9 +3406,9 @@ package body Sem_Ch3 is\n    --------------------------------\n \n    procedure Analyze_Object_Declaration (N : Node_Id) is\n+      Loc   : constant Source_Ptr      := Sloc (N);\n       GM    : constant Ghost_Mode_Type := Ghost_Mode;\n-      Id    : constant Entity_Id  := Defining_Identifier (N);\n-      Loc   : constant Source_Ptr := Sloc (N);\n+      Id    : constant Entity_Id       := Defining_Identifier (N);\n       Act_T : Entity_Id;\n       T     : Entity_Id;\n \n@@ -4544,8 +4544,8 @@ package body Sem_Ch3 is\n \n    procedure Analyze_Private_Extension_Declaration (N : Node_Id) is\n       GM          : constant Ghost_Mode_Type := Ghost_Mode;\n-      Indic       : constant Node_Id   := Subtype_Indication (N);\n-      T           : constant Entity_Id := Defining_Identifier (N);\n+      Indic       : constant Node_Id         := Subtype_Indication (N);\n+      T           : constant Entity_Id       := Defining_Identifier (N);\n       Parent_Base : Entity_Id;\n       Parent_Type : Entity_Id;\n "}, {"sha": "2b2e918da3659c99ac8caa279fbfe46b41716eba", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -91,8 +91,8 @@ package body Sem_Ch5 is\n \n    procedure Analyze_Assignment (N : Node_Id) is\n       GM   : constant Ghost_Mode_Type := Ghost_Mode;\n-      Lhs  : constant Node_Id := Name (N);\n-      Rhs  : constant Node_Id := Expression (N);\n+      Lhs  : constant Node_Id         := Name (N);\n+      Rhs  : constant Node_Id         := Expression (N);\n       T1   : Entity_Id;\n       T2   : Entity_Id;\n       Decl : Node_Id;"}, {"sha": "a225883e668670aa8db424102c1b9a8bd3fab6bf", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -210,8 +210,8 @@ package body Sem_Ch6 is\n \n    procedure Analyze_Abstract_Subprogram_Declaration (N : Node_Id) is\n       GM      : constant Ghost_Mode_Type := Ghost_Mode;\n-      Scop    : constant Entity_Id := Current_Scope;\n-      Subp_Id : constant Entity_Id :=\n+      Scop    : constant Entity_Id       := Current_Scope;\n+      Subp_Id : constant Entity_Id       :=\n                   Analyze_Subprogram_Specification (Specification (N));\n \n    begin"}, {"sha": "df1eff32b9f4c5d714742635be66609208087459", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -672,7 +672,9 @@ package body Sem_Ch8 is\n       GM    : constant Ghost_Mode_Type := Ghost_Mode;\n       New_P : constant Entity_Id       := Defining_Entity (N);\n       Old_P : Entity_Id;\n-      Inst  : Boolean := False; -- prevent junk warning\n+\n+      Inst  : Boolean := False;\n+      --  Prevent junk warning\n \n    begin\n       if Name (N) = Error then\n@@ -2646,7 +2648,7 @@ package body Sem_Ch8 is\n       --  type is class-wide.\n \n       GM        : constant Ghost_Mode_Type := Ghost_Mode;\n-      Inst_Node : Node_Id := Empty;\n+      Inst_Node : Node_Id                  := Empty;\n       New_S     : Entity_Id;\n \n    --  Start of processing for Analyze_Subprogram_Renaming"}, {"sha": "08a6fbb3bab30bf3a201686cc1ae02cf5d793799", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -17003,7 +17003,7 @@ package body Sem_Util is\n             Comp := First_Entity (Typ);\n             while Present (Comp) loop\n                if Ekind (Comp) = E_Component then\n-                  --  ???It's not cleare we need a full recursive call to\n+                  --  ???It's not clear we need a full recursive call to\n                   --  Requires_Transient_Scope here. Note that the following\n                   --  can't happen.\n "}, {"sha": "d11a12bbe9c6e18d321910809e62093bf0022f95", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=ad4ba28bb0d6acbd78ca6f2da71d987f6bd17ea6", "patch": "@@ -974,7 +974,7 @@ package body Treepr is\n       Prefix_Char : Character)\n    is\n       F : Fchar;\n-      P : Natural := Pchar_Pos (Nkind (N));\n+      P : Natural;\n \n       Field_To_Be_Printed : Boolean;\n       Prefix_Str_Char     : String (Prefix_Str'First .. Prefix_Str'Last + 1);\n@@ -987,10 +987,14 @@ package body Treepr is\n          return;\n       end if;\n \n-      if Nkind (N) = N_Integer_Literal and then Print_In_Hex (N) then\n-         Fmt := Hex;\n-      else\n-         Fmt := Auto;\n+      --  If there is no such node, indicate that. Skip the rest, so we don't\n+      --  crash getting fields of the nonexistent node.\n+\n+      if N > Atree_Private_Part.Nodes.Last then\n+         Print_Str (\"No such node: \");\n+         Print_Int (Int (N));\n+         Print_Eol;\n+         return;\n       end if;\n \n       Prefix_Str_Char (Prefix_Str'Range)    := Prefix_Str;\n@@ -1184,6 +1188,14 @@ package body Treepr is\n \n       --  Loop to print fields included in Pchars array\n \n+      P := Pchar_Pos (Nkind (N));\n+\n+      if Nkind (N) = N_Integer_Literal and then Print_In_Hex (N) then\n+         Fmt := Hex;\n+      else\n+         Fmt := Auto;\n+      end if;\n+\n       while P < Pchar_Pos (Node_Kind'Succ (Nkind (N))) loop\n          F := Pchars (P);\n          P := P + 1;"}]}