{"sha": "469dfae932684a783566ae5f1654504fcf8ffd54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY5ZGZhZTkzMjY4NGE3ODM1NjZhZTVmMTY1NDUwNGZjZjhmZmQ1NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-05-27T11:00:38Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-05-27T11:00:38Z"}, "message": "tree-sra.c (sra_type_can_be_decomposed_p): Make sure that the bitfield is of integral type before testing its precision.\n\n\t* tree-sra.c (sra_type_can_be_decomposed_p) <RECORD_TYPE>: Make sure\n\tthat the bitfield is of integral type before testing its precision.\n\nFrom-SVN: r136009", "tree": {"sha": "d87a910aa92849bb44796633b36b39da56efa712", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d87a910aa92849bb44796633b36b39da56efa712"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/469dfae932684a783566ae5f1654504fcf8ffd54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469dfae932684a783566ae5f1654504fcf8ffd54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469dfae932684a783566ae5f1654504fcf8ffd54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469dfae932684a783566ae5f1654504fcf8ffd54/comments", "author": null, "committer": null, "parents": [{"sha": "3b3c04308eef477c84841ef6090ad28e71315220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3c04308eef477c84841ef6090ad28e71315220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b3c04308eef477c84841ef6090ad28e71315220"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "d373b1bf31473f2c78b33ba02a43944761b85c70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=469dfae932684a783566ae5f1654504fcf8ffd54", "patch": "@@ -1,3 +1,8 @@\n+2008-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-sra.c (sra_type_can_be_decomposed_p) <RECORD_TYPE>: Make sure\n+\tthat the bitfield is of integral type before testing its precision.\n+\n 2008-05-27  Trevor Smigiel  <trevor_smigiel@playstation.sony.com>\n \t    Sa Liu  <saliu@de.ibm.com> \n "}, {"sha": "d1eb120f035be0e4915c02cd048e93929f1b0a36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=469dfae932684a783566ae5f1654504fcf8ffd54", "patch": "@@ -1,3 +1,7 @@\n+2008-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/pack9.ad[sb]: New test.\n+\n 2008-05-27  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat.dg/sync1.ad[sb]: New test."}, {"sha": "894ecd6bb06ab2e06cbda03e2ec3910df1ea3692", "filename": "gcc/testsuite/gnat.dg/pack9.adb", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.adb?ref=469dfae932684a783566ae5f1654504fcf8ffd54", "patch": "@@ -0,0 +1,18 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O2 -gnatp -cargs --param sra-max-structure-size=24 --param sra-max-structure-count=6 -fdump-tree-final_cleanup\" }\n+\n+package body Pack9 is\n+\n+  procedure Copy (X, Y : R2_Ptr) is\n+    T : R2 := Y.all;\n+  begin\n+    if T.I2 /= Y.I2 then\n+      raise Program_Error;\n+    end if;\n+    X.all := T;\n+  end;\n+\n+end Pack9;\n+\n+-- { dg-final { scan-tree-dump-not \"__gnat_rcheck\" \"final_cleanup\" } }\n+-- { dg-final { cleanup-tree-dump \"final_cleanup\" } }"}, {"sha": "00202a97fa955990c27136b884cdb93ed5197873", "filename": "gcc/testsuite/gnat.dg/pack9.ads", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.ads?ref=469dfae932684a783566ae5f1654504fcf8ffd54", "patch": "@@ -0,0 +1,18 @@\n+package Pack9 is\n+\n+  type R1 is record\n+    I : Integer;\n+    C : Character;\n+  end record;\n+\n+  type R2 is record\n+    I1, I2 : Integer;\n+    A : R1;\n+  end record;\n+  pragma Pack(R2);\n+\n+  type R2_Ptr is access all R2;\n+\n+  procedure Copy (X, Y : R2_Ptr);\n+\n+end Pack9;"}, {"sha": "244219ffe79175d07ef0821c945fb623c47de703", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/469dfae932684a783566ae5f1654504fcf8ffd54/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=469dfae932684a783566ae5f1654504fcf8ffd54", "patch": "@@ -268,6 +268,7 @@ sra_type_can_be_decomposed_p (tree type)\n \t    {\n \t      /* Reject incorrectly represented bit fields.  */\n \t      if (DECL_BIT_FIELD (t)\n+\t\t  && INTEGRAL_TYPE_P (TREE_TYPE (t))\n \t\t  && (tree_low_cst (DECL_SIZE (t), 1)\n \t\t      != TYPE_PRECISION (TREE_TYPE (t))))\n \t\tgoto fail;"}]}