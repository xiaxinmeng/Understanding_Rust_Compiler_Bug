{"sha": "e04408387abab115585c157b0659739c8bfa5c4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA0NDA4Mzg3YWJhYjExNTU4NWMxNTdiMDY1OTczOWM4YmZhNWM0Yw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-06-09T20:20:45Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-06-09T20:20:45Z"}, "message": "OSF/1 with ELF support patches.\n\nFrom-SVN: r4655", "tree": {"sha": "ce7ca89a9e5ace9e90029c4139fd85c4ca5467b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce7ca89a9e5ace9e90029c4139fd85c4ca5467b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e04408387abab115585c157b0659739c8bfa5c4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e04408387abab115585c157b0659739c8bfa5c4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e04408387abab115585c157b0659739c8bfa5c4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e04408387abab115585c157b0659739c8bfa5c4c/comments", "author": null, "committer": null, "parents": [{"sha": "703c875e7eb2fd7f5bb8fa67e3deef4f800418c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/703c875e7eb2fd7f5bb8fa67e3deef4f800418c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/703c875e7eb2fd7f5bb8fa67e3deef4f800418c7"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "5212139f5b8db4d39940931ef68eb46983aa8492", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 43, "deletions": 10, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e04408387abab115585c157b0659739c8bfa5c4c/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e04408387abab115585c157b0659739c8bfa5c4c/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=e04408387abab115585c157b0659739c8bfa5c4c", "patch": "@@ -35,16 +35,21 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define MASK_HALF_PIC     \t0x40000000\t/* Mask for half-pic code */\n #define MASK_HALF_PIC_DEBUG\t0x20000000\t/* Debug flag */\n+#define MASK_ELF\t\t0x10000000\t/* ELF not rose */\n \n #define TARGET_HALF_PIC\t(target_flags & MASK_HALF_PIC)\n #define TARGET_DEBUG\t(target_flags & MASK_HALF_PIC_DEBUG)\n #define HALF_PIC_DEBUG\tTARGET_DEBUG\n+#define TARGET_ELF\t(target_flags & MASK_ELF)\n \n #undef\tSUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\\n      { \"half-pic\",\t MASK_HALF_PIC},\t\t\t\t\\\n      { \"no-half-pic\",\t-MASK_HALF_PIC},\t\t\t\t\\\n-     { \"debugb\",\t MASK_HALF_PIC_DEBUG},\n+     { \"debugb\",\t MASK_HALF_PIC_DEBUG},\t\t\t\t\\\n+     { \"elf\",\t\t MASK_ELF},\t\t\t\t\t\\\n+     { \"no-elf\",\t-MASK_ELF},\t\t\t\t\t\\\n+     { \"rose\",\t\t-MASK_ELF},\n \n /* OSF/rose uses stabs, not dwarf.  */\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n@@ -53,22 +58,17 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define DWARF_DEBUGGING_INFO\t/* enable dwarf debugging for testing */\n #endif\n \n-/* Prefix that appears before all global/static identifiers, except for\n-   temporary labels.  */\n+/* Handle #pragma weak and #pragma pack.  */\n \n-#define IDENTIFIER_PREFIX \"_\"\n-\n-/* Suffix that appears after all global/static identifiers, except for\n-   temporary labels.  */\n-\n-#define IDENTIFIER_SUFFIX \"\"\n+#define HANDLE_SYSV_PRAGMA\n \n /* Change default predefines.  */\n #undef\tCPP_PREDEFINES\n-#define CPP_PREDEFINES \"-DOSF -DOSF1 -Dunix -Di386\"\n+#define CPP_PREDEFINES \"-DOSF -DOSF1 -Dunix -Di386 -Asystem(unix) -Acpu(i386) -Amachine(i386)\"\n \n #undef  CPP_SPEC\n #define CPP_SPEC \"\\\n+%{!melf: -D__ROSE__} %{melf: -D__ELF__} \\\n %{.S:\t%{!ansi:%{!traditional:%{!traditional-cpp:%{!ftraditional: -traditional}}}}} \\\n %{.S:\t-D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n %{.cc:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n@@ -80,6 +80,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Turn on -mpic-extern by default.  */\n #undef  CC1_SPEC\n #define CC1_SPEC \"\\\n+%{!melf: %{!mrose: %{!mno-elf: -mrose }}} \\\n %{gline:%{!g:%{!g0:%{!g1:%{!g2: -g1}}}}} \\\n %{pic-none:   -mno-half-pic} \\\n %{fpic:\t      -mno-half-pic} \\\n@@ -431,3 +432,35 @@ while (0)\n /* Don't default to pcc-struct-return, because gcc is the only compiler, and\n    we want to retain compatibility with older gcc versions.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0\n+\n+/* Map i386 registers to the numbers dwarf expects.  Of course this is different\n+   from what stabs expects.  */\n+\n+#define DWARF_DBX_REGISTER_NUMBER(n) \\\n+((n) == 0 ? 0 \\\n+ : (n) == 1 ? 2 \\\n+ : (n) == 2 ? 1 \\\n+ : (n) == 3 ? 3 \\\n+ : (n) == 4 ? 6 \\\n+ : (n) == 5 ? 7 \\\n+ : (n) == 6 ? 5 \\\n+ : (n) == 7 ? 4 \\\n+ : ((n) >= FIRST_STACK_REG && (n) <= LAST_STACK_REG) ? (n)+3 \\\n+ : (-1))\n+\n+/* Now what stabs expects in the register.  */\n+#define STABS_DBX_REGISTER_NUMBER(n) \\\n+((n) == 0 ? 0 : \\\n+ (n) == 1 ? 2 : \\\n+ (n) == 2 ? 1 : \\\n+ (n) == 3 ? 3 : \\\n+ (n) == 4 ? 6 : \\\n+ (n) == 5 ? 7 : \\\n+ (n) == 6 ? 4 : \\\n+ (n) == 7 ? 5 : \\\n+ (n) + 4)\n+\n+#undef\tDBX_REGISTER_NUMBER\n+#define DBX_REGISTER_NUMBER(n) ((write_symbols == DWARF_DEBUG)\t\t\\\n+\t\t\t\t? DWARF_DBX_REGISTER_NUMBER(n)\t\t\\\n+\t\t\t\t: STABS_DBX_REGISTER_NUMBER(n))"}]}