{"sha": "08884e66575e07544cf5bba20d19e07d62b67a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4ODRlNjY1NzVlMDc1NDRjZjViYmEyMGQxOWUwN2Q2MmI2N2E1Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-27T08:02:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-27T08:02:21Z"}, "message": "New test.\n\nFrom-SVN: r47370", "tree": {"sha": "4411a328cedb9c767fa8aacdb737cf70b1e388ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4411a328cedb9c767fa8aacdb737cf70b1e388ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08884e66575e07544cf5bba20d19e07d62b67a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08884e66575e07544cf5bba20d19e07d62b67a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08884e66575e07544cf5bba20d19e07d62b67a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08884e66575e07544cf5bba20d19e07d62b67a52/comments", "author": null, "committer": null, "parents": [{"sha": "07e96fc688ba9fcc49c0e71ce8a3b484feacac52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07e96fc688ba9fcc49c0e71ce8a3b484feacac52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07e96fc688ba9fcc49c0e71ce8a3b484feacac52"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "f6625058afb3a8b8d405d16d7258dfc46ce5c55d", "filename": "gcc/testsuite/gcc.c-torture/execute/20011126-2.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08884e66575e07544cf5bba20d19e07d62b67a52/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011126-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08884e66575e07544cf5bba20d19e07d62b67a52/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011126-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011126-2.c?ref=08884e66575e07544cf5bba20d19e07d62b67a52", "patch": "@@ -0,0 +1,43 @@\n+/* Problem originally visible on ia64.\n+\n+   There is a partial redundancy of \"in + 1\" that makes GCSE want to\n+   transform the final while loop to \n+\n+     p = in + 1;\n+     tmp = p;\n+     ...\n+     goto start;\n+   top:\n+     tmp = tmp + 1;\n+   start:\n+     in = tmp;\n+     if (in < p) goto top;\n+\n+   We miscalculate the number of loop iterations as (p - tmp) = 0\n+   instead of (p - in) = 1, which results in overflow in the doloop\n+   optimization.  */\n+\n+static const char *\n+test (const char *in, char *out)\n+{\n+  while (1)\n+    {\n+      if (*in == 'a')\n+\t{\n+\t  const char *p = in + 1;\n+\t  while (*p == 'x')\n+\t    ++p;\n+\t  if (*p == 'b')\n+\t    return p;\n+\t  while (in < p)\n+\t    *out++ = *in++;\n+\t}\n+    }\n+}\n+\n+int main ()\n+{\n+  char out[4];\n+  test (\"aab\", out);\n+  return 0;\n+}"}]}