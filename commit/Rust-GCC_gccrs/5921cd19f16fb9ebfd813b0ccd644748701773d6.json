{"sha": "5921cd19f16fb9ebfd813b0ccd644748701773d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkyMWNkMTlmMTZmYjllYmZkODEzYjBjY2Q2NDQ3NDg3MDE3NzNkNg==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2012-06-14T08:38:22Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2012-06-14T08:38:22Z"}, "message": "re PR target/53621 ([SH] Frame pointers not generated with -fno-omit-frame-pointer on GCC 4.7.0)\n\nPR target/53621\n* config/sh/sh.c (sh_option_override): Don't force\nflag_omit_frame_pointer and maccumulate_outgoing_args.\n* config/sh/sh.opt (maccumulate-outgoing-args): Init as Var.\n\n* gcc.dg/stack-usage-1.c: Force -fomit-frame-pointer on SH.\n\nFrom-SVN: r188598", "tree": {"sha": "2fc2bf1c169b35cfa53192374d65cf2a9a59fb24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fc2bf1c169b35cfa53192374d65cf2a9a59fb24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5921cd19f16fb9ebfd813b0ccd644748701773d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5921cd19f16fb9ebfd813b0ccd644748701773d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5921cd19f16fb9ebfd813b0ccd644748701773d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5921cd19f16fb9ebfd813b0ccd644748701773d6/comments", "author": null, "committer": null, "parents": [{"sha": "3c9c79e8bfa2840979556bf559f98b5d65a6edec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9c79e8bfa2840979556bf559f98b5d65a6edec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9c79e8bfa2840979556bf559f98b5d65a6edec"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "f2e1f25b377250b30410ff3f68f0066cd4520406", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5921cd19f16fb9ebfd813b0ccd644748701773d6", "patch": "@@ -1,3 +1,10 @@\n+2012-06-12  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/53621\n+\t* config/sh/sh.c (sh_option_override): Don't force\n+\t flag_omit_frame_pointer and maccumulate_outgoing_args.\n+\t* config/sh/sh.opt (maccumulate-outgoing-args): Init as Var.\n+\n 2012-06-14  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vrp.c (VR_INITIALIZER): New define."}, {"sha": "cdfd7b6bce8915477cdaf7f1d16877c12d4e4a92", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=5921cd19f16fb9ebfd813b0ccd644748701773d6", "patch": "@@ -751,8 +751,6 @@ sh_option_override (void)\n     if (! VALID_REGISTER_P (ADDREGNAMES_REGNO (regno)))\n       sh_additional_register_names[regno][0] = '\\0';\n \n-  flag_omit_frame_pointer = (PREFERRED_DEBUGGING_TYPE == DWARF2_DEBUG);\n-\n   if ((flag_pic && ! TARGET_PREFERGOT)\n       || (TARGET_SHMEDIA && !TARGET_PT_FIXED))\n     flag_no_function_cse = 1;\n@@ -784,22 +782,17 @@ sh_option_override (void)\n \tflag_schedule_insns = 0;\n     }\n \n-    if ((target_flags_explicit & MASK_ACCUMULATE_OUTGOING_ARGS) == 0)\n-       target_flags |= MASK_ACCUMULATE_OUTGOING_ARGS;\n-\n-  /* Unwind info is not correct around the CFG unless either a frame \n-     pointer is present or M_A_O_A is set.  Fixing this requires rewriting \n-     unwind info generation to be aware of the CFG and propagating states \n+  /* Unwind info is not correct around the CFG unless either a frame\n+     pointer is present or M_A_O_A is set.  Fixing this requires rewriting\n+     unwind info generation to be aware of the CFG and propagating states\n      around edges.  */\n   if ((flag_unwind_tables || flag_asynchronous_unwind_tables\n-       || flag_exceptions || flag_non_call_exceptions)   \n-      && flag_omit_frame_pointer\n-      && !(target_flags & MASK_ACCUMULATE_OUTGOING_ARGS))\n-    {\n-      if (target_flags_explicit & MASK_ACCUMULATE_OUTGOING_ARGS)\n-\twarning (0, \"unwind tables currently require either a frame pointer \"\n-\t\t \"or -maccumulate-outgoing-args for correctness\");\n-      target_flags |= MASK_ACCUMULATE_OUTGOING_ARGS;\n+       || flag_exceptions || flag_non_call_exceptions)\n+      && flag_omit_frame_pointer && !TARGET_ACCUMULATE_OUTGOING_ARGS)\n+    {\n+      warning (0, \"unwind tables currently require either a frame pointer \"\n+\t       \"or -maccumulate-outgoing-args for correctness\");\n+      TARGET_ACCUMULATE_OUTGOING_ARGS = 1;\n     }\n \n   /* Unwinding with -freorder-blocks-and-partition does not work on this"}, {"sha": "76e66e288995f24dcbd02fabf1b4a35cc8572261", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=5921cd19f16fb9ebfd813b0ccd644748701773d6", "patch": "@@ -202,7 +202,7 @@ Target RejectNegative Condition(SUPPORT_SH5_32MEDIA_NOFPU)\n Generate FPU-less SHcompact code\n \n maccumulate-outgoing-args\n-Target Report Mask(ACCUMULATE_OUTGOING_ARGS)\n+Target Report Var(TARGET_ACCUMULATE_OUTGOING_ARGS) Init(1)\n Reserve space for outgoing arguments in the function prologue\n \n madjust-unroll"}, {"sha": "74e831447bc3645ecd1e11c099a47bf1fb5b81c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5921cd19f16fb9ebfd813b0ccd644748701773d6", "patch": "@@ -1,3 +1,8 @@\n+2012-06-13  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/53621\n+\t* gcc.dg/stack-usage-1.c: Force -fomit-frame-pointer on SH.\n+\n 2012-06-14  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/mips.exp (mips-dg-options): Handle -msynci."}, {"sha": "9142228668389912e9bc8efb3e081e25aefb15ed", "filename": "gcc/testsuite/gcc.dg/stack-usage-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Ftestsuite%2Fgcc.dg%2Fstack-usage-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5921cd19f16fb9ebfd813b0ccd644748701773d6/gcc%2Ftestsuite%2Fgcc.dg%2Fstack-usage-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstack-usage-1.c?ref=5921cd19f16fb9ebfd813b0ccd644748701773d6", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fstack-usage\" } */\n+/* { dg-options \"-fstack-usage -fomit-frame-pointer\" { target { sh-*-* } } } */\n \n /* This is aimed at testing basic support for -fstack-usage in the back-ends.\n    See the SPARC back-end for example (grep flag_stack_usage_info in sparc.c)."}]}