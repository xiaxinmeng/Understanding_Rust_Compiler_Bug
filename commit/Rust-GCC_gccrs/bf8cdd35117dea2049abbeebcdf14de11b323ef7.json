{"sha": "bf8cdd35117dea2049abbeebcdf14de11b323ef7", "node_id": "C_kwDOANBUbNoAKGJmOGNkZDM1MTE3ZGVhMjA0OWFiYmVlYmNkZjE0ZGUxMWIzMjNlZjc", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-11-13T14:11:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-12-15T22:18:10Z"}, "message": "Sync with binutils: GCC: Pass --plugin to AR and RANLIB\n\nSync with binutils for building binutils with LTO:\n\n50ad1254d50 GCC: Pass --plugin to AR and RANLIB\n\nDetect GCC LTO plugin.  Pass --plugin to AR and RANLIB to support LTO\nbuild.\n\nChangeLog:\n\n\t* Makefile.tpl (AR): Add @AR_PLUGIN_OPTION@\n\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n\t* configure.ac: Include config/gcc-plugin.m4.\n\tAC_SUBST AR_PLUGIN_OPTION and RANLIB_PLUGIN_OPTION.\n\t* libtool.m4 (_LT_CMD_OLD_ARCHIVE): Pass --plugin to AR and\n\tRANLIB if possible.\n\t* Makefile.in: Regenerated.\n\t* configure: Likewise.\n\nconfig/\n\n\t* gcc-plugin.m4 (GCC_PLUGIN_OPTION): New.\n\nlibiberty/\n\n\t* Makefile.in (AR): Add @AR_PLUGIN_OPTION@\n\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n\t(configure_deps): Depend on ../config/gcc-plugin.m4.\n\t* configure.ac: AC_SUBST AR_PLUGIN_OPTION and\n\tRANLIB_PLUGIN_OPTION.\n\t* aclocal.m4: Regenerated.\n\t* configure: Likewise.\n\nzlib/\n\n\t* configure: Regenerated.", "tree": {"sha": "2a9b15300ca8bc1b3497086f2e0010a2fd9306c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a9b15300ca8bc1b3497086f2e0010a2fd9306c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf8cdd35117dea2049abbeebcdf14de11b323ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8cdd35117dea2049abbeebcdf14de11b323ef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf8cdd35117dea2049abbeebcdf14de11b323ef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8cdd35117dea2049abbeebcdf14de11b323ef7/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "807ad4bc854caea407aaa09993e4a3220290b0f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807ad4bc854caea407aaa09993e4a3220290b0f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/807ad4bc854caea407aaa09993e4a3220290b0f0"}], "stats": {"total": 201, "additions": 191, "deletions": 10}, "files": [{"sha": "2e3fec10ee216f1b546c18e174dd1c339d8ab005", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -418,7 +418,7 @@ MAKEINFOFLAGS = --split-size=5000000\n # ---------------------------------------------\n \n AS = @AS@\n-AR = @AR@\n+AR = @AR@ @AR_PLUGIN_OPTION@\n AR_FLAGS = rc\n CC = @CC@\n CXX = @CXX@\n@@ -429,7 +429,7 @@ LIPO = @LIPO@\n NM = @NM@\n OBJDUMP = @OBJDUMP@\n OTOOL = @OTOOL@\n-RANLIB = @RANLIB@\n+RANLIB = @RANLIB@ @RANLIB_PLUGIN_OPTION@\n READELF = @READELF@\n STRIP = @STRIP@\n WINDRES = @WINDRES@\n@@ -66653,6 +66653,7 @@ AUTOCONF = autoconf\n $(srcdir)/configure: @MAINT@ $(srcdir)/configure.ac $(srcdir)/config/acx.m4 \\\n \t$(srcdir)/config/override.m4 $(srcdir)/config/proginstall.m4 \\\n \t$(srcdir)/config/elf.m4 $(srcdir)/config/isl.m4 \\\n+\t$(srcdir)/config/gcc-plugin.m4 \\\n \t$(srcdir)/libtool.m4 $(srcdir)/ltoptions.m4 $(srcdir)/ltsugar.m4 \\\n \t$(srcdir)/ltversion.m4 $(srcdir)/lt~obsolete.m4\n \tcd $(srcdir) && $(AUTOCONF)"}, {"sha": "736b6a6c31a0f0ef0068a30aff7f9b544fd2ba03", "filename": "Makefile.tpl", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -421,7 +421,7 @@ MAKEINFOFLAGS = --split-size=5000000\n # ---------------------------------------------\n \n AS = @AS@\n-AR = @AR@\n+AR = @AR@ @AR_PLUGIN_OPTION@\n AR_FLAGS = rc\n CC = @CC@\n CXX = @CXX@\n@@ -432,7 +432,7 @@ LIPO = @LIPO@\n NM = @NM@\n OBJDUMP = @OBJDUMP@\n OTOOL = @OTOOL@\n-RANLIB = @RANLIB@\n+RANLIB = @RANLIB@ @RANLIB_PLUGIN_OPTION@\n READELF = @READELF@\n STRIP = @STRIP@\n WINDRES = @WINDRES@\n@@ -2035,6 +2035,7 @@ AUTOCONF = autoconf\n $(srcdir)/configure: @MAINT@ $(srcdir)/configure.ac $(srcdir)/config/acx.m4 \\\n \t$(srcdir)/config/override.m4 $(srcdir)/config/proginstall.m4 \\\n \t$(srcdir)/config/elf.m4 $(srcdir)/config/isl.m4 \\\n+\t$(srcdir)/config/gcc-plugin.m4 \\\n \t$(srcdir)/libtool.m4 $(srcdir)/ltoptions.m4 $(srcdir)/ltsugar.m4 \\\n \t$(srcdir)/ltversion.m4 $(srcdir)/lt~obsolete.m4\n \tcd $(srcdir) && $(AUTOCONF)"}, {"sha": "f2daba96fd8d962bc518943b808b11db7c85dcde", "filename": "config/gcc-plugin.m4", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/config%2Fgcc-plugin.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/config%2Fgcc-plugin.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fgcc-plugin.m4?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -129,3 +129,31 @@ AC_DEFUN([GCC_ENABLE_PLUGINS],\n      fi\n    fi\n ])\n+\n+dnl\n+dnl\n+dnl GCC_PLUGIN_OPTION\n+dnl    (SHELL-CODE_HANDLER)\n+dnl\n+AC_DEFUN([GCC_PLUGIN_OPTION],[dnl\n+AC_MSG_CHECKING([for -plugin option])\n+\n+plugin_names=\"liblto_plugin.so liblto_plugin-0.dll cyglto_plugin-0.dll\"\n+plugin_option=\n+for plugin in $plugin_names; do\n+  plugin_so=`${CC} ${CFLAGS} --print-prog-name $plugin`\n+  if test x$plugin_so = x$plugin; then\n+    plugin_so=`${CC} ${CFLAGS} --print-file-name $plugin`\n+  fi\n+  if test x$plugin_so != x$plugin; then\n+    plugin_option=\"--plugin $plugin_so\"\n+    break\n+  fi\n+done\n+if test -n \"$plugin_option\"; then\n+  $1=\"$plugin_option\"\n+  AC_MSG_RESULT($plugin_option)\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+])"}, {"sha": "c569b28dc6c377ad6040d83ef736a7de9fd31043", "filename": "configure", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -619,6 +619,8 @@ GFORTRAN_FOR_TARGET\n GCC_FOR_TARGET\n CXX_FOR_TARGET\n CC_FOR_TARGET\n+RANLIB_PLUGIN_OPTION\n+AR_PLUGIN_OPTION\n GDCFLAGS\n READELF\n OTOOL\n@@ -12745,6 +12747,43 @@ fi\n \n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -plugin option\" >&5\n+$as_echo_n \"checking for -plugin option... \" >&6; }\n+\n+plugin_names=\"liblto_plugin.so liblto_plugin-0.dll cyglto_plugin-0.dll\"\n+plugin_option=\n+for plugin in $plugin_names; do\n+  plugin_so=`${CC} ${CFLAGS} --print-prog-name $plugin`\n+  if test x$plugin_so = x$plugin; then\n+    plugin_so=`${CC} ${CFLAGS} --print-file-name $plugin`\n+  fi\n+  if test x$plugin_so != x$plugin; then\n+    plugin_option=\"--plugin $plugin_so\"\n+    break\n+  fi\n+done\n+if test -n \"$plugin_option\"; then\n+  PLUGIN_OPTION=\"$plugin_option\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_option\" >&5\n+$as_echo \"$plugin_option\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+AR_PLUGIN_OPTION=\n+RANLIB_PLUGIN_OPTION=\n+if test -n \"$PLUGIN_OPTION\"; then\n+  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n+    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+  fi\n+  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n+    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+  fi\n+fi\n+\n+\n+\n # Target tools.\n \n # Check whether --with-build-time-tools was given."}, {"sha": "ce1e764e87266502977823966c7e5d9a2476c42b", "filename": "configure.ac", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -24,6 +24,7 @@ m4_include(config/override.m4)\n m4_include(config/proginstall.m4)\n m4_include(config/elf.m4)\n m4_include(config/ax_cxx_compile_stdcxx.m4)\n+m4_include(config/gcc-plugin.m4)\n m4_include([libtool.m4])\n m4_include([ltoptions.m4])\n m4_include([ltsugar.m4])\n@@ -3535,6 +3536,20 @@ AC_SUBST(CXXFLAGS)\n AC_SUBST(GDC)\n AC_SUBST(GDCFLAGS)\n \n+GCC_PLUGIN_OPTION(PLUGIN_OPTION)\n+AR_PLUGIN_OPTION=\n+RANLIB_PLUGIN_OPTION=\n+if test -n \"$PLUGIN_OPTION\"; then\n+  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n+    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+  fi\n+  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n+    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+  fi\n+fi\n+AC_SUBST(AR_PLUGIN_OPTION)\n+AC_SUBST(RANLIB_PLUGIN_OPTION)\n+\n # Target tools.\n AC_ARG_WITH([build-time-tools], \n   [AS_HELP_STRING([--with-build-time-tools=PATH],"}, {"sha": "cf38d211243a8ba31aee56617a9c0224bf286223", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -50,13 +50,13 @@ mkinstalldirs = $(SHELL) $(libiberty_topdir)/mkinstalldirs\n # Some compilers can't handle cc -c blah.c -o foo/blah.o.\n OUTPUT_OPTION = @OUTPUT_OPTION@\n \n-AR = @AR@\n+AR = @AR@ @AR_PLUGIN_OPTION@\n AR_FLAGS = rc\n \n CC = @CC@\n CFLAGS = @CFLAGS@\n CPPFLAGS = @CPPFLAGS@\n-RANLIB = @RANLIB@\n+RANLIB = @RANLIB@ @RANLIB_PLUGIN_OPTION@\n MAKEINFO = @MAKEINFO@\n PERL = @PERL@\n \n@@ -507,6 +507,7 @@ aclocal_deps = \\\n \t$(srcdir)/../config/acx.m4 \\\n \t$(srcdir)/../config/cet.m4 \\\n \t$(srcdir)/../config/enable.m4 \\\n+\t$(srcdir)/../config/gcc-plugin.m4 \\\n \t$(srcdir)/../config/no-executables.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n \t$(srcdir)/../config/picflag.m4 \\"}, {"sha": "0757688d52a4c8c620f4cd79e45608f61122a01d", "filename": "libiberty/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Faclocal.m4?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -15,6 +15,7 @@ m4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun\n m4_include([../config/acx.m4])\n m4_include([../config/cet.m4])\n m4_include([../config/enable.m4])\n+m4_include([../config/gcc-plugin.m4])\n m4_include([../config/no-executables.m4])\n m4_include([../config/picflag.m4])\n m4_include([../config/warnings.m4])"}, {"sha": "6dd1d119b889ee1ea4b0505e889fd6a72d44743a", "filename": "libiberty/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -645,6 +645,8 @@ CPPFLAGS\n LDFLAGS\n CFLAGS\n CC\n+RANLIB_PLUGIN_OPTION\n+AR_PLUGIN_OPTION\n RANLIB\n AR\n host_os\n@@ -2935,6 +2937,41 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -plugin option\" >&5\n+$as_echo_n \"checking for -plugin option... \" >&6; }\n+\n+plugin_names=\"liblto_plugin.so liblto_plugin-0.dll cyglto_plugin-0.dll\"\n+plugin_option=\n+for plugin in $plugin_names; do\n+  plugin_so=`${CC} ${CFLAGS} --print-prog-name $plugin`\n+  if test x$plugin_so = x$plugin; then\n+    plugin_so=`${CC} ${CFLAGS} --print-file-name $plugin`\n+  fi\n+  if test x$plugin_so != x$plugin; then\n+    plugin_option=\"--plugin $plugin_so\"\n+    break\n+  fi\n+done\n+if test -n \"$plugin_option\"; then\n+  PLUGIN_OPTION=\"$plugin_option\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_option\" >&5\n+$as_echo \"$plugin_option\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+if test -n \"$PLUGIN_OPTION\"; then\n+  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n+    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+\n+  fi\n+  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n+    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+\n+  fi\n+fi\n+\n # Add --enable-multilib to configure.\n # Default to --enable-multilib\n # Check whether --enable-multilib was given."}, {"sha": "f59f35e1f208cb493a0696faac9c0ea836f09263", "filename": "libiberty/configure.ac", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -113,6 +113,18 @@ dnl to call AC_CHECK_PROG.\n AC_CHECK_TOOL(AR, ar)\n AC_CHECK_TOOL(RANLIB, ranlib, :)\n \n+GCC_PLUGIN_OPTION(PLUGIN_OPTION)\n+if test -n \"$PLUGIN_OPTION\"; then\n+  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n+    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+    AC_SUBST(AR_PLUGIN_OPTION)\n+  fi\n+  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n+    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n+    AC_SUBST(RANLIB_PLUGIN_OPTION)\n+  fi\n+fi\n+\n dnl When switching to automake, replace the following with AM_ENABLE_MULTILIB.\n # Add --enable-multilib to configure.\n # Default to --enable-multilib"}, {"sha": "efa62bfcbf0992c850588d1340e3b58afa85e808", "filename": "libtool.m4", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libtool.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/libtool.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libtool.m4?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -1325,8 +1325,26 @@ need_locks=\"$enable_libtool_lock\"\n # _LT_CMD_OLD_ARCHIVE\n # -------------------\n m4_defun([_LT_CMD_OLD_ARCHIVE],\n-[AC_CHECK_TOOL(AR, ar, false)\n+[plugin_option=\n+plugin_names=\"liblto_plugin.so liblto_plugin-0.dll cyglto_plugin-0.dll\"\n+for plugin in $plugin_names; do\n+  plugin_so=`${CC} ${CFLAGS} --print-prog-name $plugin`\n+  if test x$plugin_so = x$plugin; then\n+    plugin_so=`${CC} ${CFLAGS} --print-file-name $plugin`\n+  fi\n+  if test x$plugin_so != x$plugin; then\n+    plugin_option=\"--plugin $plugin_so\"\n+    break\n+  fi\n+done\n+\n+AC_CHECK_TOOL(AR, ar, false)\n test -z \"$AR\" && AR=ar\n+if test -n \"$plugin_option\"; then\n+  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n+    AR=\"$AR $plugin_option\"\n+  fi\n+fi\n test -z \"$AR_FLAGS\" && AR_FLAGS=cru\n _LT_DECL([], [AR], [1], [The archiver])\n _LT_DECL([], [AR_FLAGS], [1])\n@@ -1337,6 +1355,11 @@ _LT_DECL([], [STRIP], [1], [A symbol stripping program])\n \n AC_CHECK_TOOL(RANLIB, ranlib, :)\n test -z \"$RANLIB\" && RANLIB=:\n+if test -n \"$plugin_option\" && test \"$RANLIB\" != \":\"; then\n+  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n+    RANLIB=\"$RANLIB $plugin_option\"\n+  fi\n+fi\n _LT_DECL([], [RANLIB], [1],\n     [Commands used to install an old-style archive])\n "}, {"sha": "8ce61b11119aebf8718fe2a517b8fefd07881aac", "filename": "zlib/configure", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8cdd35117dea2049abbeebcdf14de11b323ef7/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8cdd35117dea2049abbeebcdf14de11b323ef7/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=bf8cdd35117dea2049abbeebcdf14de11b323ef7", "patch": "@@ -4169,7 +4169,7 @@ case \"$host\" in\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n-\t# and if assembler supports CET insn.\n+\t# and if compiler and assembler support CET insn.\n \tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -5502,6 +5502,19 @@ test -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n \n \n \n+plugin_option=\n+plugin_names=\"liblto_plugin.so liblto_plugin-0.dll cyglto_plugin-0.dll\"\n+for plugin in $plugin_names; do\n+  plugin_so=`${CC} ${CFLAGS} --print-prog-name $plugin`\n+  if test x$plugin_so = x$plugin; then\n+    plugin_so=`${CC} ${CFLAGS} --print-file-name $plugin`\n+  fi\n+  if test x$plugin_so != x$plugin; then\n+    plugin_option=\"--plugin $plugin_so\"\n+    break\n+  fi\n+done\n+\n if test -n \"$ac_tool_prefix\"; then\n   # Extract the first word of \"${ac_tool_prefix}ar\", so it can be a program name with args.\n set dummy ${ac_tool_prefix}ar; ac_word=$2\n@@ -5595,6 +5608,11 @@ else\n fi\n \n test -z \"$AR\" && AR=ar\n+if test -n \"$plugin_option\"; then\n+  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n+    AR=\"$AR $plugin_option\"\n+  fi\n+fi\n test -z \"$AR_FLAGS\" && AR_FLAGS=cru\n \n \n@@ -5799,6 +5817,11 @@ else\n fi\n \n test -z \"$RANLIB\" && RANLIB=:\n+if test -n \"$plugin_option\" && test \"$RANLIB\" != \":\"; then\n+  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n+    RANLIB=\"$RANLIB $plugin_option\"\n+  fi\n+fi\n \n \n \n@@ -10735,7 +10758,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10748 \"configure\"\n+#line 10761 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10841,7 +10864,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10854 \"configure\"\n+#line 10867 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}