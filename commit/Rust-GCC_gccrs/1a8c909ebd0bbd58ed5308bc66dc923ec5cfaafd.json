{"sha": "1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE4YzkwOWViZDBiYmQ1OGVkNTMwOGJjNjZkYzkyM2VjNWNmYWFmZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-09-17T21:48:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-09-17T21:48:08Z"}, "message": "varasm.c (initializer_constant_valid_p): Forbid view-conversions from aggregate to non-aggregate type if...\n\n\t* varasm.c (initializer_constant_valid_p): Forbid view-conversions\n\tfrom aggregate to non-aggregate type if the bit pattern is not fully\n\tpreserved afterwards.\n\nFrom-SVN: r140432", "tree": {"sha": "b323580342f5e9faae9bf584a093129a2b0fa96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b323580342f5e9faae9bf584a093129a2b0fa96d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/comments", "author": null, "committer": null, "parents": [{"sha": "9f509004fcba4e2ef649c347f679108fefdff122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f509004fcba4e2ef649c347f679108fefdff122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f509004fcba4e2ef649c347f679108fefdff122"}], "stats": {"total": 70, "additions": 62, "deletions": 8}, "files": [{"sha": "48b5f0e779ef9cae4c147143bdbf8060b103c27c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "patch": "@@ -1,3 +1,9 @@\n+2008-09-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* varasm.c (initializer_constant_valid_p): Forbid view-conversions\n+\tfrom aggregate to non-aggregate type if the bit pattern is not fully\n+\tpreserved afterwards.\n+\n 2008-09-17  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-cfg.c (verify_types_in_gimple_assign): Rename to ..."}, {"sha": "ed9d1e31f606b4a744470a6f504b90b230b2ae39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "patch": "@@ -1,3 +1,7 @@\n+2008-09-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/static_initializer3.ads: New test.\n+\n 2008-09-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/37552"}, {"sha": "42994f2e1c57660e13f8e536f3ccdf6452e2261a", "filename": "gcc/testsuite/gnat.dg/specs/static_initializer3.ads", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fstatic_initializer3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fstatic_initializer3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fstatic_initializer3.ads?ref=1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "patch": "@@ -0,0 +1,27 @@\n+with Unchecked_Conversion;\n+\n+package Static_Initializer3 is\n+\n+  type Byte is range 0 .. 16#FF#;\n+  for Byte'Size use 8;\n+\n+  type Word is range 0 .. 16#FFFF# ;\n+  for Word'Size use 16;\n+\n+  type R is record\n+    b1 : Boolean;\n+    b2 : Boolean;\n+  end record;\n+  for R use record\n+    b1 at 0 range 0..3;\n+    b2 at 0 range 4..7;\n+  end record;\n+  for R'Size use 8;\n+\n+  function Conv is new Unchecked_Conversion (R, Byte);\n+\n+  C1 : constant Byte := Conv ((true, false));\n+\n+  C2 : constant Word := Word(C1);\n+\n+end Static_Initializer3;"}, {"sha": "e74adaed9833daaa318ea62c37b4a73c88b95ae8", "filename": "gcc/varasm.c", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=1a8c909ebd0bbd58ed5308bc66dc923ec5cfaafd", "patch": "@@ -4205,19 +4205,36 @@ initializer_constant_valid_p (tree value, tree endtype)\n \treturn op0;\n       }\n \n-    case VIEW_CONVERT_EXPR:\n     case NON_LVALUE_EXPR:\n       return initializer_constant_valid_p (TREE_OPERAND (value, 0), endtype);\n \n-    CASE_CONVERT:\n+    case VIEW_CONVERT_EXPR:\n       {\n-\ttree src;\n-\ttree src_type;\n-\ttree dest_type;\n+\ttree src = TREE_OPERAND (value, 0);\n+\ttree src_type = TREE_TYPE (src);\n+\ttree dest_type = TREE_TYPE (value);\n+\n+\t/* Allow view-conversions from aggregate to non-aggregate type only\n+\t   if the bit pattern is fully preserved afterwards; otherwise, the\n+\t   RTL expander won't be able to apply a subsequent transformation\n+\t   to the underlying constructor.  */\n+\tif (AGGREGATE_TYPE_P (src_type) && !AGGREGATE_TYPE_P (dest_type))\n+\t  {\n+\t    if (TYPE_MODE (endtype) == TYPE_MODE (dest_type))\n+\t      return initializer_constant_valid_p (src, endtype);\n+\t    else\n+\t      return NULL_TREE;\n+\t  }\n+\n+\t/* Allow all other kinds of view-conversion.  */\n+\treturn initializer_constant_valid_p (src, endtype);\n+      }\n \n-\tsrc = TREE_OPERAND (value, 0);\n-\tsrc_type = TREE_TYPE (src);\n-\tdest_type = TREE_TYPE (value);\n+    CASE_CONVERT:\n+      {\n+\ttree src = TREE_OPERAND (value, 0);\n+\ttree src_type = TREE_TYPE (src);\n+\ttree dest_type = TREE_TYPE (value);\n \n \t/* Allow conversions between pointer types, floating-point\n \t   types, and offset types.  */"}]}