{"sha": "8fac50e006cada9c19b2099bc39e8f2578bf42da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhYzUwZTAwNmNhZGE5YzE5YjIwOTliYzM5ZThmMjU3OGJmNDJkYQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-01-23T12:29:05Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-01-23T12:29:05Z"}, "message": "2004-01-23  Michael Koch  <konqueror@gmx.de>\n\n\t* java/io/FileDescriptor.java\n\t(in, out, err): Added javadoc.\n\t(static): Merged loading code.\n\t(fd, position): Moved around.\n\nFrom-SVN: r76411", "tree": {"sha": "5753c333517b9c1597130269afde3b5a8152cf62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5753c333517b9c1597130269afde3b5a8152cf62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fac50e006cada9c19b2099bc39e8f2578bf42da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fac50e006cada9c19b2099bc39e8f2578bf42da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fac50e006cada9c19b2099bc39e8f2578bf42da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fac50e006cada9c19b2099bc39e8f2578bf42da/comments", "author": null, "committer": null, "parents": [{"sha": "58cc47894986d201a9f1a40710d903309be7d066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cc47894986d201a9f1a40710d903309be7d066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58cc47894986d201a9f1a40710d903309be7d066"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "fe374fd80817bf9e30445ee39d7e7244813dc16e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fac50e006cada9c19b2099bc39e8f2578bf42da/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fac50e006cada9c19b2099bc39e8f2578bf42da/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8fac50e006cada9c19b2099bc39e8f2578bf42da", "patch": "@@ -1,3 +1,10 @@\n+2004-01-23  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/io/FileDescriptor.java\n+\t(in, out, err): Added javadoc.\n+\t(static): Merged loading code.\n+\t(fd, position): Moved around.\n+\n 2004-01-23  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/awt/doc-files/BitwiseXORComposite-1.png:"}, {"sha": "c7fd6edbbec96dc3eb498465f0b802ba90483e0e", "filename": "libjava/java/io/FileDescriptor.java", "status": "modified", "additions": 44, "deletions": 13, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fac50e006cada9c19b2099bc39e8f2578bf42da/libjava%2Fjava%2Fio%2FFileDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fac50e006cada9c19b2099bc39e8f2578bf42da/libjava%2Fjava%2Fio%2FFileDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileDescriptor.java?ref=8fac50e006cada9c19b2099bc39e8f2578bf42da", "patch": "@@ -39,26 +39,51 @@\n \n package java.io;\n \n+import gnu.classpath.Configuration;\n+\n /**\n  * This class represents an opaque file handle as a Java class.  It should\n  * be used only to pass to other methods that expect an object of this\n  * type.  No system specific information can be obtained from this object.\n  *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @author Tom Tromey (tromey@cygnus.com)\n  * @date September 24, 1998 \n  */\n public final class FileDescriptor\n {\n-\n+  /**\n+   * A <code>FileDescriptor</code> representing the system standard input\n+   * stream.  This will usually be accessed through the\n+   * <code>System.in</code>variable.\n+   */\n   public static final FileDescriptor in = null;\n+\n+  /**\n+   * A <code>FileDescriptor</code> representing the system standard output\n+   * stream.  This will usually be accessed through the\n+   * <code>System.out</code>variable.\n+   */\n   public static final FileDescriptor out = null;\n+\n+  /**\n+   * A <code>FileDescriptor</code> representing the system standard error\n+   * stream.  This will usually be accessed through the\n+   * <code>System.err</code>variable.\n+   */\n   public static final FileDescriptor err = null;\n \n   private static native void init();\n+\n   static\n-  {\n-    init();\n-  }\n+    {\n+      if (Configuration.INIT_LOAD_LIBRARY)\n+        {\n+          System.loadLibrary(\"javaio\");\n+        }\n+\n+      init();\n+    }\n \n   public native void sync () throws SyncFailedException;\n   public native boolean valid ();\n@@ -77,9 +102,22 @@\n   static final int SYNC   = 16;\n   static final int DSYNC  = 32;\n \n+  /**\n+   * This is the actual native file descriptor value\n+   */\n+  // System's notion of file descriptor.  It might seem redundant to\n+  // initialize this given that it is reassigned in the constructors.\n+  // However, this is necessary because if open() throws an exception\n+  // we want to make sure this has the value -1.  This is the most\n+  // efficient way to accomplish that.\n+  private int fd = -1;\n+\n+  private long position = 0;\n \n-  // This constructor is specified to create an invalid descriptor.\n-  public FileDescriptor ()\n+  /**\n+   * This method is used to initialize an invalid FileDescriptor object.\n+   */\n+  public FileDescriptor()\n   {\n   }\n \n@@ -124,12 +162,5 @@ protected void finalize () throws Throwable\n     fd = desc;\n   }\n \n-  // System's notion of file descriptor.  It might seem redundant to\n-  // initialize this given that it is reassigned in the constructors.\n-  // However, this is necessary because if open() throws an exception\n-  // we want to make sure this has the value -1.  This is the most\n-  // efficient way to accomplish that.\n-  private int fd = -1;\n \n-  private long position = 0;\n }"}]}