{"sha": "1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2MWZlZWI5OTNkMjQ2NDJlY2E3ZjZhNmE0ZjM3Y2RjYmY1ODQ4ZA==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2014-07-17T10:10:50Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2014-07-17T10:10:50Z"}, "message": "types.md (alu_reg): Replaced by alu_sreg and alu_dsp_reg.\n\n2014-07-17  Terry Guo  <terry.guo@arm.com>\n\n\t* config/arm/types.md (alu_reg): Replaced by alu_sreg and alu_dsp_reg.\n\t(alus_reg): Renamed to alus_sreg.\n\t* config/arm/arm-fixed.md: Change type of non-dsp instructions\n\tfrom alu_reg to alu_sreg.  Change type of dsp instructions from\n\talu_reg to alu_dsp_reg.\n\t* config/arm/thumb1.md: Likewise.\n\t* config/arm/thumb2.md: Likewise.\n\t* config/arm/arm.c (cortexa7_older_only): Use new ALU type names.\n\t* config/arm/arm1020e.md (1020alu_op): Replace alu_reg and alus_reg\n\twith alu_sreg and alus_sreg.\n\t* config/arm/arm1026ejs.md (alu_op): Likewise.\n\t* config/arm/arm1136jfs.md (11_alu_op): Likewise.\n\t* config/arm/arm926ejs.md (9_alu_op): Likewise.\n\t* config/arm/fa526.md (526_alu_op): Likewise.\n\t* config/arm/fa606te.md (606te_alu_op): Likewise.\n\t* config/arm/fa626te.md (626te_alu_op): Likewise.\n\t* config/arm/fa726te.md (726te_alu_op): Likewise.\n\t* config/arm/fmp626.md (mp626_alu_op): Likewise.\n\t* config/arm/arm.md (core_cycles): Replace alu_reg and alus_reg with\n\talu_sreg, alu_dsp_reg and alus_sreg.     \n\t* config/arm/cortex-a15.md (cortex_a15_alu): Likewise.\n\t* config/arm/cortex-a5.md (cortex_a5_alu): Likewise.\n\t* config/arm/cortex-a53.md (cortex_a53_alu): Likewise.\n\t* config/arm/cortex-a7.md (cortex_a7_alu_sreg): Likewise.\n\t* config/arm/cortex-a8.md (cortex_a8_alu): Likewise.\n\t* config/arm/cortex-a9.md (cortex_a9_dp): Likewise.\n\t* config/arm/cortex-m4.md (cortex_m4_alu): Likewise.\n\t* config/arm/cortex-r4.md (cortex_r4_alu): Likewise.\n\t* config/arm/marvell-pj4.md (pj4_alu, pj4_alu_conds): Likewise.\n\t* config/aarch64/aarch64.md (*addsi3_aarch64, *addsi3_aarch64_uxtw,\n\tsubsi3, *adddi3_aarch64, *subsi3_uxtw, subdi3, absdi2, neg<mode>2,\n\t*negsi2_uxtw, tlsle_small_<mode>): Rename type alu_reg to alu_sreg.     \n\t(add<mode>3_compare0, *addsi3_compare0_uxtw, *add<mode>3nr_compare0,\n\tsub<mode>3_compare0, *compare_neg<mode>, *neg<mode>2_compare0,\n\tsubsi3_compare0_uxtw, *negsi2_compare0_uxtw, *cmp<mode>): Rename type \n\talus_reg to alus_sreg.\n\nFrom-SVN: r212750", "tree": {"sha": "44a6657dbdd9fa0c54fcdf161b8a3ab73829a897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44a6657dbdd9fa0c54fcdf161b8a3ab73829a897"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/comments", "author": null, "committer": null, "parents": [{"sha": "72b9a00b9a191d5db4d072b397b908987272130f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b9a00b9a191d5db4d072b397b908987272130f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b9a00b9a191d5db4d072b397b908987272130f"}], "stats": {"total": 239, "additions": 141, "deletions": 98}, "files": [{"sha": "b56200873cb7b09bd6aeb547305cd1b7e23b829f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -1,3 +1,42 @@\n+2014-07-17  Terry Guo  <terry.guo@arm.com>\n+\n+\t* config/arm/types.md (alu_reg): Replaced by alu_sreg and alu_dsp_reg.\n+\t(alus_reg): Renamed to alus_sreg.\n+\t* config/arm/arm-fixed.md: Change type of non-dsp instructions\n+\tfrom alu_reg to alu_sreg.  Change type of dsp instructions from\n+\talu_reg to alu_dsp_reg.\n+\t* config/arm/thumb1.md: Likewise.\n+\t* config/arm/thumb2.md: Likewise.\n+\t* config/arm/arm.c (cortexa7_older_only): Use new ALU type names.\n+\t* config/arm/arm1020e.md (1020alu_op): Replace alu_reg and alus_reg\n+\twith alu_sreg and alus_sreg.\n+\t* config/arm/arm1026ejs.md (alu_op): Likewise.\n+\t* config/arm/arm1136jfs.md (11_alu_op): Likewise.\n+\t* config/arm/arm926ejs.md (9_alu_op): Likewise.\n+\t* config/arm/fa526.md (526_alu_op): Likewise.\n+\t* config/arm/fa606te.md (606te_alu_op): Likewise.\n+\t* config/arm/fa626te.md (626te_alu_op): Likewise.\n+\t* config/arm/fa726te.md (726te_alu_op): Likewise.\n+\t* config/arm/fmp626.md (mp626_alu_op): Likewise.\n+\t* config/arm/arm.md (core_cycles): Replace alu_reg and alus_reg with\n+\talu_sreg, alu_dsp_reg and alus_sreg.     \n+\t* config/arm/cortex-a15.md (cortex_a15_alu): Likewise.\n+\t* config/arm/cortex-a5.md (cortex_a5_alu): Likewise.\n+\t* config/arm/cortex-a53.md (cortex_a53_alu): Likewise.\n+\t* config/arm/cortex-a7.md (cortex_a7_alu_sreg): Likewise.\n+\t* config/arm/cortex-a8.md (cortex_a8_alu): Likewise.\n+\t* config/arm/cortex-a9.md (cortex_a9_dp): Likewise.\n+\t* config/arm/cortex-m4.md (cortex_m4_alu): Likewise.\n+\t* config/arm/cortex-r4.md (cortex_r4_alu): Likewise.\n+\t* config/arm/marvell-pj4.md (pj4_alu, pj4_alu_conds): Likewise.\n+\t* config/aarch64/aarch64.md (*addsi3_aarch64, *addsi3_aarch64_uxtw,\n+\tsubsi3, *adddi3_aarch64, *subsi3_uxtw, subdi3, absdi2, neg<mode>2,\n+\t*negsi2_uxtw, tlsle_small_<mode>): Rename type alu_reg to alu_sreg.     \n+\t(add<mode>3_compare0, *addsi3_compare0_uxtw, *add<mode>3nr_compare0,\n+\tsub<mode>3_compare0, *compare_neg<mode>, *neg<mode>2_compare0,\n+\tsubsi3_compare0_uxtw, *negsi2_compare0_uxtw, *cmp<mode>): Rename type \n+\talus_reg to alus_sreg.\n+\n 2014-07-17  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* real.c (encode_ieee_extended_motorola): Clear integer bit in the"}, {"sha": "042a3b57756caafedf546ce182ced4e176f37148", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -1167,7 +1167,7 @@\n   add\\\\t%w0, %w1, %w2\n   add\\\\t%0.2s, %1.2s, %2.2s\n   sub\\\\t%w0, %w1, #%n2\"\n-  [(set_attr \"type\" \"alu_imm,alu_reg,neon_add,alu_imm\")\n+  [(set_attr \"type\" \"alu_imm,alu_sreg,neon_add,alu_imm\")\n    (set_attr \"simd\" \"*,*,yes,*\")]\n )\n \n@@ -1183,7 +1183,7 @@\n   add\\\\t%w0, %w1, %2\n   add\\\\t%w0, %w1, %w2\n   sub\\\\t%w0, %w1, #%n2\"\n-  [(set_attr \"type\" \"alu_imm,alu_reg,alu_imm\")]\n+  [(set_attr \"type\" \"alu_imm,alu_sreg,alu_imm\")]\n )\n \n (define_insn \"*adddi3_aarch64\"\n@@ -1198,7 +1198,7 @@\n   add\\\\t%x0, %x1, %x2\n   sub\\\\t%x0, %x1, #%n2\n   add\\\\t%d0, %d1, %d2\"\n-  [(set_attr \"type\" \"alu_imm,alu_reg,alu_imm,alu_reg\")\n+  [(set_attr \"type\" \"alu_imm,alu_sreg,alu_imm,alu_sreg\")\n    (set_attr \"simd\" \"*,*,*,yes\")]\n )\n \n@@ -1234,7 +1234,7 @@\n   adds\\\\t%<w>0, %<w>1, %<w>2\n   adds\\\\t%<w>0, %<w>1, %<w>2\n   subs\\\\t%<w>0, %<w>1, #%n2\"\n-  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")]\n+  [(set_attr \"type\" \"alus_sreg,alus_imm,alus_imm\")]\n )\n \n ;; zero_extend version of above\n@@ -1251,7 +1251,7 @@\n   adds\\\\t%w0, %w1, %w2\n   adds\\\\t%w0, %w1, %w2\n   subs\\\\t%w0, %w1, #%n2\"\n-  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")]\n+  [(set_attr \"type\" \"alus_sreg,alus_imm,alus_imm\")]\n )\n \n (define_insn \"*adds_mul_imm_<mode>\"\n@@ -1365,7 +1365,7 @@\n   cmn\\\\t%<w>0, %<w>1\n   cmn\\\\t%<w>0, %<w>1\n   cmp\\\\t%<w>0, #%n1\"\n-  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")]\n+  [(set_attr \"type\" \"alus_sreg,alus_imm,alus_imm\")]\n )\n \n (define_insn \"*compare_neg<mode>\"\n@@ -1375,7 +1375,7 @@\n \t (match_operand:GPI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"cmn\\\\t%<w>1, %<w>0\"\n-  [(set_attr \"type\" \"alus_reg\")]\n+  [(set_attr \"type\" \"alus_sreg\")]\n )\n \n (define_insn \"*add_<shift>_<mode>\"\n@@ -1647,7 +1647,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"type\" \"alu_reg\")]\n+  [(set_attr \"type\" \"alu_sreg\")]\n )\n \n ;; zero_extend version of above\n@@ -1658,7 +1658,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"\"\n   \"sub\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"type\" \"alu_reg\")]\n+  [(set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"subdi3\"\n@@ -1669,7 +1669,7 @@\n   \"@\n    sub\\\\t%x0, %x1, %x2\n    sub\\\\t%d0, %d1, %d2\"\n-  [(set_attr \"type\" \"alu_reg, neon_sub\")\n+  [(set_attr \"type\" \"alu_sreg, neon_sub\")\n    (set_attr \"simd\" \"*,yes\")]\n )\n \n@@ -1701,7 +1701,7 @@\n \t(minus:GPI (match_dup 1) (match_dup 2)))]\n   \"\"\n   \"subs\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"type\" \"alus_reg\")]\n+  [(set_attr \"type\" \"alus_sreg\")]\n )\n \n ;; zero_extend version of above\n@@ -1714,7 +1714,7 @@\n \t(zero_extend:DI (minus:SI (match_dup 1) (match_dup 2))))]\n   \"\"\n   \"subs\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"type\" \"alus_reg\")]\n+  [(set_attr \"type\" \"alus_sreg\")]\n )\n \n (define_insn \"*sub_<shift>_<mode>\"\n@@ -1925,7 +1925,7 @@\n \t\t\t\t\t\t\t     GEN_INT (63)))));\n     DONE;\n   }\n-  [(set_attr \"type\" \"alu_reg\")]\n+  [(set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"neg<mode>2\"\n@@ -1935,7 +1935,7 @@\n   \"@\n    neg\\\\t%<w>0, %<w>1\n    neg\\\\t%<rtn>0<vas>, %<rtn>1<vas>\"\n-  [(set_attr \"type\" \"alu_reg, neon_neg<q>\")\n+  [(set_attr \"type\" \"alu_sreg, neon_neg<q>\")\n    (set_attr \"simd\" \"*,yes\")]\n )\n \n@@ -1945,7 +1945,7 @@\n \t(zero_extend:DI (neg:SI (match_operand:SI 1 \"register_operand\" \"r\"))))]\n   \"\"\n   \"neg\\\\t%w0, %w1\"\n-  [(set_attr \"type\" \"alu_reg\")]\n+  [(set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"*ngc<mode>\"\n@@ -1975,7 +1975,7 @@\n \t(neg:GPI (match_dup 1)))]\n   \"\"\n   \"negs\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"type\" \"alus_reg\")]\n+  [(set_attr \"type\" \"alus_sreg\")]\n )\n \n ;; zero_extend version of above\n@@ -1987,7 +1987,7 @@\n \t(zero_extend:DI (neg:SI (match_dup 1))))]\n   \"\"\n   \"negs\\\\t%w0, %w1\"\n-  [(set_attr \"type\" \"alus_reg\")]\n+  [(set_attr \"type\" \"alus_sreg\")]\n )\n \n (define_insn \"*neg_<shift><mode>3_compare0\"\n@@ -2266,7 +2266,7 @@\n    cmp\\\\t%<w>0, %<w>1\n    cmp\\\\t%<w>0, %<w>1\n    cmn\\\\t%<w>0, #%n1\"\n-  [(set_attr \"type\" \"alus_reg,alus_imm,alus_imm\")]\n+  [(set_attr \"type\" \"alus_sreg,alus_imm,alus_imm\")]\n )\n \n (define_insn \"*cmp<mode>\"\n@@ -3901,7 +3901,7 @@\n \t\t   UNSPEC_GOTSMALLTLS))]\n   \"\"\n   \"add\\\\t%<w>0, %<w>1, #%G2\\;add\\\\t%<w>0, %<w>0, #%L2\"\n-  [(set_attr \"type\" \"alu_reg\")\n+  [(set_attr \"type\" \"alu_sreg\")\n    (set_attr \"length\" \"8\")]\n )\n "}, {"sha": "5611ad16302f7c679342fc52872762fb5f7a3433", "filename": "gcc/config/arm/arm-fixed.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm-fixed.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm-fixed.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fixed.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -26,7 +26,7 @@\n   \"add%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_sreg\")])\n \n (define_insn \"add<mode>3\"\n   [(set (match_operand:ADDSUB 0 \"s_register_operand\" \"=r\")\n@@ -36,7 +36,7 @@\n   \"sadd<qaddsub_suf>%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_dsp_reg\")])\n \n (define_insn \"usadd<mode>3\"\n   [(set (match_operand:UQADDSUB 0 \"s_register_operand\" \"=r\")\n@@ -46,7 +46,7 @@\n   \"uqadd<qaddsub_suf>%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_dsp_reg\")])\n \n (define_insn \"ssadd<mode>3\"\n   [(set (match_operand:QADDSUB 0 \"s_register_operand\" \"=r\")\n@@ -56,7 +56,7 @@\n   \"qadd<qaddsub_suf>%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_dsp_reg\")])\n \n (define_insn \"sub<mode>3\"\n   [(set (match_operand:FIXED 0 \"s_register_operand\" \"=l,r\")\n@@ -66,7 +66,7 @@\n   \"sub%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_sreg\")])\n \n (define_insn \"sub<mode>3\"\n   [(set (match_operand:ADDSUB 0 \"s_register_operand\" \"=r\")\n@@ -76,7 +76,7 @@\n   \"ssub<qaddsub_suf>%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_dsp_reg\")])\n \n (define_insn \"ussub<mode>3\"\n   [(set (match_operand:UQADDSUB 0 \"s_register_operand\" \"=r\")\n@@ -87,7 +87,7 @@\n   \"uqsub<qaddsub_suf>%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_dsp_reg\")])\n \n (define_insn \"sssub<mode>3\"\n   [(set (match_operand:QADDSUB 0 \"s_register_operand\" \"=r\")\n@@ -97,7 +97,7 @@\n   \"qsub<qaddsub_suf>%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"alu_reg\")])\n+   (set_attr \"type\" \"alu_dsp_reg\")])\n \n ;; Fractional multiplies.\n "}, {"sha": "942df7d3c13dc11435048bf2cebeeea5cbe8dca2", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -11710,8 +11710,9 @@ cortexa7_older_only (rtx insn)\n \n   switch (get_attr_type (insn))\n     {\n-    case TYPE_ALU_REG:\n-    case TYPE_ALUS_REG:\n+    case TYPE_ALU_DSP_REG:\n+    case TYPE_ALU_SREG:\n+    case TYPE_ALUS_SREG:\n     case TYPE_LOGIC_REG:\n     case TYPE_LOGICS_REG:\n     case TYPE_ADC_REG:"}, {"sha": "bd8ea8f201d7614270d1426c99cd232e2e75fc3c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -320,8 +320,8 @@\n ; than one on the main cpu execution unit.\n (define_attr \"core_cycles\" \"single,multi\"\n   (if_then_else (eq_attr \"type\"\n-    \"adc_imm, adc_reg, adcs_imm, adcs_reg, adr, alu_ext, alu_imm, alu_reg,\\\n-    alu_shift_imm, alu_shift_reg, alus_ext, alus_imm, alus_reg,\\\n+    \"adc_imm, adc_reg, adcs_imm, adcs_reg, adr, alu_ext, alu_imm, alu_sreg,\\\n+    alu_shift_imm, alu_shift_reg, alu_dsp_reg, alus_ext, alus_imm, alus_sreg,\\\n     alus_shift_imm, alus_shift_reg, bfm, csel, rev, logic_imm, logic_reg,\\\n     logic_shift_imm, logic_shift_reg, logics_imm, logics_reg,\\\n     logics_shift_imm, logics_shift_reg, extend, shift_imm, float, fcsel,\\\n@@ -602,7 +602,7 @@\n    (set_attr \"arch\" \"t2,t2,t2,t2,*,*,*,t2,t2,*,*,a,t2,t2,*\")\n    (set (attr \"type\") (if_then_else (match_operand 2 \"const_int_operand\" \"\")\n \t\t      (const_string \"alu_imm\")\n-\t\t      (const_string \"alu_reg\")))\n+\t\t      (const_string \"alu_sreg\")))\n  ]\n )\n \n@@ -620,7 +620,7 @@\n    sub%.\\\\t%0, %1, #%n2\n    add%.\\\\t%0, %1, %2\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"alus_imm,alus_imm,alus_reg\")]\n+   (set_attr \"type\" \"alus_imm,alus_imm,alus_sreg\")]\n )\n \n (define_insn \"*addsi3_compare0_scratch\"\n@@ -636,7 +636,7 @@\n    cmn%?\\\\t%0, %1\"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alus_imm,alus_imm,alus_reg\")]\n+   (set_attr \"type\" \"alus_imm,alus_imm,alus_sreg\")]\n )\n \n (define_insn \"*compare_negsi_si\"\n@@ -651,7 +651,7 @@\n    (set_attr \"arch\" \"t2,*\")\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable_short_it\" \"yes,no\")\n-   (set_attr \"type\" \"alus_reg\")]\n+   (set_attr \"type\" \"alus_sreg\")]\n )\n \n ;; This is the canonicalization of addsi3_compare0_for_combiner when the\n@@ -669,7 +669,7 @@\n    add%.\\\\t%0, %1, %3\n    sub%.\\\\t%0, %1, #%n3\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"alus_reg\")]\n+   (set_attr \"type\" \"alus_sreg\")]\n )\n \n ;; Convert the sequence\n@@ -727,7 +727,7 @@\n    sub%.\\\\t%0, %1, #%n2\n    add%.\\\\t%0, %1, %2\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\"  \"alus_imm,alus_imm,alus_reg\")]\n+   (set_attr \"type\"  \"alus_imm,alus_imm,alus_sreg\")]\n )\n \n (define_insn \"*addsi3_compare_op2\"\n@@ -744,7 +744,7 @@\n    add%.\\\\t%0, %1, %2\n    sub%.\\\\t%0, %1, #%n2\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"alus_imm,alus_imm,alus_reg\")]\n+   (set_attr \"type\" \"alus_imm,alus_imm,alus_sreg\")]\n )\n \n (define_insn \"*compare_addsi2_op0\"\n@@ -765,7 +765,7 @@\n    (set_attr \"arch\" \"t2,t2,*,*,*\")\n    (set_attr \"predicable_short_it\" \"yes,yes,no,no,no\")\n    (set_attr \"length\" \"2,2,4,4,4\")\n-   (set_attr \"type\" \"alus_imm,alus_reg,alus_imm,alus_imm,alus_reg\")]\n+   (set_attr \"type\" \"alus_imm,alus_sreg,alus_imm,alus_imm,alus_sreg\")]\n )\n \n (define_insn \"*compare_addsi2_op1\"\n@@ -786,7 +786,7 @@\n    (set_attr \"arch\" \"t2,t2,*,*,*\")\n    (set_attr \"predicable_short_it\" \"yes,yes,no,no,no\")\n    (set_attr \"length\" \"2,2,4,4,4\")\n-   (set_attr \"type\" \"alus_imm,alus_reg,alus_imm,alus_imm,alus_reg\")]\n+   (set_attr \"type\" \"alus_imm,alus_sreg,alus_imm,alus_imm,alus_sreg\")]\n  )\n \n (define_insn \"*addsi3_carryin_<optab>\"\n@@ -1201,7 +1201,7 @@\n    (set_attr \"arch\" \"t2,t2,t2,t2,*,*,*,*,*\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,yes,yes,yes,no,no,no,no,no\")\n-   (set_attr \"type\" \"alu_reg,alu_reg,alu_reg,alu_reg,alu_imm,alu_imm,alu_reg,alu_reg,multiple\")]\n+   (set_attr \"type\" \"alu_sreg,alu_sreg,alu_sreg,alu_sreg,alu_imm,alu_imm,alu_sreg,alu_sreg,multiple\")]\n )\n \n (define_peephole2\n@@ -1231,7 +1231,7 @@\n    sub%.\\\\t%0, %1, %2\n    rsb%.\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\"  \"alus_imm,alus_reg,alus_reg\")]\n+   (set_attr \"type\"  \"alus_imm,alus_sreg,alus_sreg\")]\n )\n \n (define_insn \"subsi3_compare\"\n@@ -1246,7 +1246,7 @@\n    sub%.\\\\t%0, %1, %2\n    rsb%.\\\\t%0, %2, %1\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"alus_imm,alus_reg,alus_reg\")]\n+   (set_attr \"type\" \"alus_imm,alus_sreg,alus_sreg\")]\n )\n \n (define_expand \"subsf3\"\n@@ -4366,7 +4366,7 @@\n    (set_attr \"predicable_short_it\" \"yes,no\")\n    (set_attr \"arch\" \"t2,*\")\n    (set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_expand \"negsf2\"\n@@ -5828,7 +5828,7 @@\n   return \\\"add\\\\t%0, %|pc\\\";\n   \"\n   [(set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"pic_add_dot_plus_eight\"\n@@ -5844,7 +5844,7 @@\n     return \\\"add%?\\\\t%0, %|pc, %1\\\";\n   \"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"tls_load_dot_plus_eight\"\n@@ -6857,7 +6857,7 @@\n    (set_attr \"length\" \"2,2,4,4,4\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"yes,yes,yes,no,no\")\n-   (set_attr \"type\" \"alus_imm,alus_reg,alus_reg,alus_imm,alus_imm\")]\n+   (set_attr \"type\" \"alus_imm,alus_sreg,alus_sreg,alus_imm,alus_imm\")]\n )\n \n (define_insn \"*cmpsi_shiftsi\"\n@@ -9430,10 +9430,10 @@\n    (set_attr_alternative \"type\"\n                          [(if_then_else (match_operand 3 \"const_int_operand\" \"\")\n                                         (const_string \"alu_imm\" )\n-                                        (const_string \"alu_reg\"))\n+                                        (const_string \"alu_sreg\"))\n                           (const_string \"alu_imm\")\n-                          (const_string \"alu_reg\")\n-                          (const_string \"alu_reg\")])]\n+                          (const_string \"alu_sreg\")\n+                          (const_string \"alu_sreg\")])]\n )\n \n (define_insn \"*ifcompare_move_plus\"\n@@ -9470,7 +9470,7 @@\n    sub%D4\\\\t%0, %2, #%n3\\;mov%d4\\\\t%0, %1\"\n   [(set_attr \"conds\" \"use\")\n    (set_attr \"length\" \"4,4,8,8\")\n-   (set_attr \"type\" \"alu_reg,alu_imm,multiple,multiple\")]\n+   (set_attr \"type\" \"alu_sreg,alu_imm,multiple,multiple\")]\n )\n \n (define_insn \"*ifcompare_arith_arith\""}, {"sha": "c1577308b7eee793e19107af0e3af46b67367658", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -67,7 +67,7 @@\n (define_insn_reservation \"1020alu_op\" 1 \n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,\\"}, {"sha": "f8c66e98006cff44698206c4ff1fcd20d1dda610", "filename": "gcc/config/arm/arm1026ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1026ejs.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -67,7 +67,7 @@\n (define_insn_reservation \"alu_op\" 1 \n  (and (eq_attr \"tune\" \"arm1026ejs\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,\\"}, {"sha": "a3c61a83c815d7377d50d48aa439a828f1977be7", "filename": "gcc/config/arm/arm1136jfs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1136jfs.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -76,7 +76,7 @@\n (define_insn_reservation \"11_alu_op\" 2\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,\\"}, {"sha": "c6e154a88900a4e5217425d3e52f7c5d1d3c19b5", "filename": "gcc/config/arm/arm926ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm926ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Farm926ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm926ejs.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -59,7 +59,7 @@\n (define_insn_reservation \"9_alu_op\" 1 \n  (and (eq_attr \"tune\" \"arm926ejs\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        alu_shift_imm,alus_shift_imm,\\"}, {"sha": "f5e01a72dcf5f2817a0f625edc766dc6608ad2f7", "filename": "gcc/config/arm/cortex-a15.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -62,9 +62,9 @@\n (define_insn_reservation \"cortex_a15_alu\" 2\n   (and (eq_attr \"tune\" \"cortexa15\")\n        (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                        alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        adr,bfm,clz,rbit,rev,\\\n+                        adr,bfm,clz,rbit,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg,\\\n                         mov_imm,mov_reg,\\\n                         mvn_imm,mvn_reg,\\"}, {"sha": "0ae27b0aeadc8bc0f0ec5127476a8bea5ac6737b", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -59,9 +59,9 @@\n (define_insn_reservation \"cortex_a5_alu\" 2\n   (and (eq_attr \"tune\" \"cortexa5\")\n        (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                        alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        adr,bfm,clz,rbit,rev,\\\n+                        adr,bfm,clz,rbit,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg,\\\n                         mov_imm,mov_reg,mvn_imm,mvn_reg,\\\n                         mrs,multiple,no_insn\"))"}, {"sha": "6cfdcf27c1cf7bb2b3ce4e804f500a8252aec65e", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -73,9 +73,9 @@\n (define_insn_reservation \"cortex_a53_alu\" 2\n   (and (eq_attr \"tune\" \"cortexa53\")\n        (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                        alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        adr,bfm,csel,clz,rbit,rev,\\\n+                        adr,bfm,csel,clz,rbit,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg,\\\n                         mov_imm,mov_reg,mvn_imm,mvn_reg,\\\n                         mrs,multiple,no_insn\"))"}, {"sha": "ae2e823fb85f6672e797eb488bd15f3241241b81", "filename": "gcc/config/arm/cortex-a7.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a7.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -133,11 +133,11 @@\n \n ;; ALU instruction with register operands can dual-issue\n ;; with a younger immediate-based instruction.\n-(define_insn_reservation \"cortex_a7_alu_reg\" 2\n+(define_insn_reservation \"cortex_a7_alu_sreg\" 2\n   (and (eq_attr \"tune\" \"cortexa7\")\n-       (eq_attr \"type\" \"alu_reg,alus_reg,logic_reg,logics_reg,\\\n+       (eq_attr \"type\" \"alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        bfm,clz,rbit,rev,\\\n+                        bfm,clz,rbit,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg,mov_reg,mvn_reg\"))\n   \"cortex_a7_ex1\")\n \n@@ -153,14 +153,14 @@\n   \"cortex_a7_ex1\")\n \n ;; Forwarding path for unshifted operands.\n-(define_bypass 1 \"cortex_a7_alu_imm,cortex_a7_alu_reg,cortex_a7_alu_shift\"\n-  \"cortex_a7_alu_imm,cortex_a7_alu_reg,cortex_a7_mul\")\n+(define_bypass 1 \"cortex_a7_alu_imm,cortex_a7_alu_sreg,cortex_a7_alu_shift\"\n+  \"cortex_a7_alu_imm,cortex_a7_alu_sreg,cortex_a7_mul\")\n \n-(define_bypass 1 \"cortex_a7_alu_imm,cortex_a7_alu_reg,cortex_a7_alu_shift\"\n+(define_bypass 1 \"cortex_a7_alu_imm,cortex_a7_alu_sreg,cortex_a7_alu_shift\"\n   \"cortex_a7_store*\"\n   \"arm_no_early_store_addr_dep\")\n \n-(define_bypass 1 \"cortex_a7_alu_imm,cortex_a7_alu_reg,cortex_a7_alu_shift\"\n+(define_bypass 1 \"cortex_a7_alu_imm,cortex_a7_alu_sreg,cortex_a7_alu_shift\"\n   \"cortex_a7_alu_shift\"\n   \"arm_no_early_alu_shift_dep\")\n "}, {"sha": "8ef6c99575b9a3de79ba8ce5aefc53deaee2f016", "filename": "gcc/config/arm/cortex-a8.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -86,9 +86,9 @@\n (define_insn_reservation \"cortex_a8_alu\" 2\n   (and (eq_attr \"tune\" \"cortexa8\")\n        (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                        alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        adr,bfm,clz,rbit,rev,\\\n+                        adr,bfm,clz,rbit,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg,\\\n                         multiple,no_insn\"))\n   \"cortex_a8_default\")"}, {"sha": "ca7ab171fd0690d02860b8571005a33f67f30401", "filename": "gcc/config/arm/cortex-a9.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -81,9 +81,9 @@ cortex_a9_p1_e2 + cortex_a9_p0_e1 + cortex_a9_p1_e1\")\n (define_insn_reservation \"cortex_a9_dp\" 2\n   (and (eq_attr \"tune\" \"cortexa9\")\n        (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                        alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        adr,bfm,clz,rbit,rev,\\\n+                        adr,bfm,clz,rbit,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg,\\\n                         mov_imm,mov_reg,mvn_imm,mvn_reg,\\\n                         mov_shift_reg,mov_shift,\\"}, {"sha": "c00c343a7581888a49abd77bf5559044f26c77c7", "filename": "gcc/config/arm/cortex-m4.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -32,9 +32,9 @@\n (define_insn_reservation \"cortex_m4_alu\" 1\n   (and (eq_attr \"tune\" \"cortexm4\")\n        (ior (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                             alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                             alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                              adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                             adr,bfm,clz,rbit,rev,\\\n+                             adr,bfm,clz,rbit,rev,alu_dsp_reg,\\\n                              shift_imm,shift_reg,extend,\\\n                              alu_shift_imm,alus_shift_imm,\\\n                              logic_shift_imm,logics_shift_imm,\\"}, {"sha": "7138b85f5df977881ea4d2a3dc19a7a8079c5b80", "filename": "gcc/config/arm/cortex-r4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -79,7 +79,7 @@\n (define_insn_reservation \"cortex_r4_alu\" 2\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                        alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                         adr,bfm,clz,rbit,rev,\\\n                         shift_imm,shift_reg,mvn_imm,mvn_reg\"))"}, {"sha": "fc58d34f1b97cb6c7789de78127b046cb90baa98", "filename": "gcc/config/arm/fa526.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa526.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa526.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa526.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -63,7 +63,7 @@\n (define_insn_reservation \"526_alu_op\" 1\n  (and (eq_attr \"tune\" \"fa526\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,\\"}, {"sha": "432461d0ce0d149eef7d1e1a915537f36318779a", "filename": "gcc/config/arm/fa606te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa606te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa606te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa606te.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -63,7 +63,7 @@\n (define_insn_reservation \"606te_alu_op\" 1\n  (and (eq_attr \"tune\" \"fa606te\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,extend,\\"}, {"sha": "e5ba9b407336cd6a6c225299d91a613c0a48f64f", "filename": "gcc/config/arm/fa626te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa626te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa626te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa626te.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -69,7 +69,7 @@\n (define_insn_reservation \"626te_alu_op\" 1\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,\\"}, {"sha": "5af67364e07cf8a158302c19020809a8c5b2eee7", "filename": "gcc/config/arm/fa726te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa726te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffa726te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa726te.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -87,7 +87,7 @@\n (define_insn_reservation \"726te_alu_op\" 1\n  (and (eq_attr \"tune\" \"fa726te\")\n       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n-                       alu_reg,alus_reg,logic_reg,logics_reg,\\\n+                       alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\\n                        shift_imm,shift_reg,\\"}, {"sha": "24e9b6a8c048ba0ae6d24022c943f5f100ba31ff", "filename": "gcc/config/arm/fmp626.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffmp626.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ffmp626.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffmp626.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -63,7 +63,7 @@\n ;; ALU operations\n (define_insn_reservation \"mp626_alu_op\" 1\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"alu_imm,alus_imm,alu_reg,alus_reg,\\\n+      (eq_attr \"type\" \"alu_imm,alus_imm,alu_sreg,alus_sreg,\\\n                        logic_imm,logics_imm,logic_reg,logics_reg,\\\n                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n                        adr,bfm,rev,\\"}, {"sha": "85f5f05129113c35ca72bca16c82925b110f9105", "filename": "gcc/config/arm/marvell-pj4.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -53,20 +53,20 @@\n \n (define_insn_reservation \"pj4_alu\" 1\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"alu_imm,alus_imm,alu_reg,alus_reg,\\\n+       (eq_attr \"type\" \"alu_imm,alus_imm,alu_sreg,alus_sreg,\\\n                         logic_imm,logics_imm,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        adr,bfm,rev,\\\n+                        adr,bfm,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg\")\n        (not (eq_attr \"conds\" \"set\")))\n                                \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")\n \n (define_insn_reservation \"pj4_alu_conds\" 4\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n-       (eq_attr \"type\" \"alu_imm,alus_imm,alu_reg,alus_reg,\\\n+       (eq_attr \"type\" \"alu_imm,alus_imm,alu_sreg,alus_sreg,\\\n                         logic_imm,logics_imm,logic_reg,logics_reg,\\\n                         adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-                        adr,bfm,rev,\\\n+                        adr,bfm,rev,alu_dsp_reg,\\\n                         shift_imm,shift_reg\")\n        (eq_attr \"conds\" \"set\"))\n                                \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")"}, {"sha": "cd1adf45884c9885d92655ba334f63e789f28a8e", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -81,8 +81,8 @@\n     operands[2] = GEN_INT (INTVAL (operands[2]) - offset);\n   }\n   [(set_attr \"length\" \"2,2,2,2,2,2,2,4,4,4\")\n-   (set_attr \"type\" \"alus_imm,alus_imm,alus_reg,alus_reg,alus_reg,\n-\t\t     alus_reg,alus_reg,multiple,multiple,multiple\")]\n+   (set_attr \"type\" \"alus_imm,alus_imm,alus_sreg,alus_sreg,alus_sreg,\n+\t\t     alus_sreg,alus_sreg,multiple,multiple,multiple\")]\n )\n \n ;; Reloading and elimination of the frame pointer can\n@@ -118,7 +118,7 @@\n   \"sub\\\\t%0, %1, %2\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"alus_reg\")]\n+   (set_attr \"type\" \"alus_sreg\")]\n )\n \n ; Unfortunately with the Thumb the '&'/'0' trick can fails when operands"}, {"sha": "029a679987ba6897b4093904c55dd10dac470394", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -1117,7 +1117,7 @@\n   \"%I3%!\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"*thumb2_shiftsi3_short\"\n@@ -1171,7 +1171,7 @@\n   \"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"*thumb2_subsi_short\"\n@@ -1183,7 +1183,7 @@\n   \"sub%!\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_peephole2\n@@ -1236,7 +1236,7 @@\n   \"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"length\" \"2,2,4\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n (define_insn \"*thumb2_addsi3_compare0_scratch\"\n@@ -1261,7 +1261,7 @@\n   \"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"length\" \"2,2,4,4\")\n-   (set_attr \"type\" \"alus_imm,alus_reg,alus_imm,alus_reg\")]\n+   (set_attr \"type\" \"alus_imm,alus_sreg,alus_imm,alus_sreg\")]\n )\n \n (define_insn \"*thumb2_mulsi_short\"\n@@ -1367,7 +1367,7 @@\n   \"neg%!\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"length\" \"2\")\n-   (set_attr \"type\" \"alu_reg\")]\n+   (set_attr \"type\" \"alu_sreg\")]\n )\n \n ; Constants for op 2 will never be given to these patterns."}, {"sha": "ff74aaa7caa90e23bbf153864f4b8ba19317a0db", "filename": "gcc/config/arm/types.md", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ftypes.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d61feeb993d24642eca7f6a6a4f37cdcbf5848d/gcc%2Fconfig%2Farm%2Ftypes.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftypes.md?ref=1d61feeb993d24642eca7f6a6a4f37cdcbf5848d", "patch": "@@ -35,17 +35,19 @@\n ; alu_imm            any arithmetic instruction that doesn't have a shifted\n ;                    operand and has an immediate operand.  This\n ;                    excludes MOV, MVN and RSB(S) immediate.\n-; alu_reg            any arithmetic instruction that doesn't have a shifted\n+; alu_sreg           any arithmetic instruction that doesn't have a shifted\n ;                    or an immediate operand.  This excludes\n-;                    MOV and MVN but includes MOVT.  This is also the default.\n+;                    MOV and MVN but includes MOVT.  This also excludes\n+;                    DSP-kind instructions.  This is also the default.\n ; alu_shift_imm      any arithmetic instruction that has a source operand\n ;                    shifted by a constant.  This excludes simple shifts.\n ; alu_shift_reg      as alu_shift_imm, with the shift amount specified in a\n ;                    register.\n+; alu_dsp_reg        any DSP-kind instruction like QSUB8.\n ; alus_ext           From ARMv8-A: as alu_ext, setting condition flags.\n ;                    AArch64 Only.\n ; alus_imm           as alu_imm, setting condition flags.\n-; alus_reg           as alu_reg, setting condition flags.\n+; alus_sreg          as alu_sreg, setting condition flags.\n ; alus_shift_imm     as alu_shift_imm, setting condition flags.\n ; alus_shift_reg     as alu_shift_reg, setting condition flags.\n ; bfm                bitfield move operation.\n@@ -540,12 +542,13 @@\n   adr,\\\n   alu_ext,\\\n   alu_imm,\\\n-  alu_reg,\\\n+  alu_sreg,\\\n   alu_shift_imm,\\\n   alu_shift_reg,\\\n+  alu_dsp_reg,\\\n   alus_ext,\\\n   alus_imm,\\\n-  alus_reg,\\\n+  alus_sreg,\\\n   alus_shift_imm,\\\n   alus_shift_reg,\\\n   bfm,\\"}]}