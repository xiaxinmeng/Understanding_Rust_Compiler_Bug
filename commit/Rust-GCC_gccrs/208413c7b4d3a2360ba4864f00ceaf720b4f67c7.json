{"sha": "208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA4NDEzYzdiNGQzYTIzNjBiYTQ4NjRmMDBjZWFmNzIwYjRmNjdjNw==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2017-12-28T18:49:12Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2017-12-28T18:49:12Z"}, "message": "PR fortran/83344 Don't set bogus constant value\n\nThis patch does not fix PR 83344, but merely fixes an error where we\nused to set a constant character length value from a non-constant\nexpression, and thus set it to some bogus value.\n\nAs a result of this, I have commented out part of the associate_22.f90\ntest which otherwise generates a warning message.\n\nRegtested on x86_64-pc-linux-gnu.\n\ngcc/fortran/ChangeLog:\n\n2017-12-28  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/83344\n\t* resolve.c (resolve_assoc_var): Don't set the constant value\n\tunless the target is a constant expression.\n\ngcc/testsuite/ChangeLog:\n\n2017-12-28  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/83344\n\t* gfortran.dg/associate_22.f90: Comment out part of test.\n\nFrom-SVN: r256021", "tree": {"sha": "580b1b983ec82b840b86649b556573849f117aa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/580b1b983ec82b840b86649b556573849f117aa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/comments", "author": null, "committer": null, "parents": [{"sha": "9fd8313a89d1c76b3f204b33c854e3cdc4b5a2d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd8313a89d1c76b3f204b33c854e3cdc4b5a2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd8313a89d1c76b3f204b33c854e3cdc4b5a2d7"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "fd4d8a6ae62b00cccd1e0e5e9c0f5dfad6b7ab2f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "patch": "@@ -1,3 +1,9 @@\n+2017-12-28  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/83344\n+\t* resolve.c (resolve_assoc_var): Don't set the constant value\n+\tunless the target is a constant expression.\n+\n 2017-12-28  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/83567"}, {"sha": "cf75a78d7bae1bed546a8699ffef6f9026a8b9d7", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "patch": "@@ -8627,7 +8627,8 @@ resolve_assoc_var (gfc_symbol* sym, bool resolve_target)\n       if (!sym->ts.u.cl)\n \tsym->ts.u.cl = target->ts.u.cl;\n \n-      if (!sym->ts.u.cl->length && !sym->ts.deferred)\n+      if (!sym->ts.u.cl->length && !sym->ts.deferred\n+\t  && target->expr_type == EXPR_CONSTANT)\n \tsym->ts.u.cl->length\n \t  = gfc_get_int_expr (gfc_default_integer_kind,\n \t\t\t      NULL, target->value.character.length);"}, {"sha": "1e91e7f5480ccc6ec5d20fdb463bd9a121fcf4ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "patch": "@@ -1,9 +1,14 @@\n+2017-12-28  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/83344\n+\t* gfortran.dg/associate_22.f90: Comment out part of test.\n+\n 2017-12-28  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/83567\n \t* gfortran.dg/pdt_26.f90 : New test.\n \n-2017_12_27  Louis Krupp  <louis.krupp@zoho.com>\n+2017-12-27  Louis Krupp  <louis.krupp@zoho.com>\n \n \tPR fortran/83092\n \t* gfortran.dg/init_char_with_nonchar_ctr.f90: New test."}, {"sha": "edf59321dd5fb5ec1f789db4802dc6b1de6e813f", "filename": "gcc/testsuite/gfortran.dg/associate_22.f90", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/208413c7b4d3a2360ba4864f00ceaf720b4f67c7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_22.f90?ref=208413c7b4d3a2360ba4864f00ceaf720b4f67c7", "patch": "@@ -24,10 +24,11 @@ program foo\n    end associate\n \n    ! This failed.\n-   a = trim(s) // 'abc'\n-   associate(w => trim(s) // 'abc')\n-      if (trim(w) /= trim(a)) call abort\n-   end associate\n+   ! This still doesn't work correctly, see PR 83344\n+!   a = trim(s) // 'abc'\n+!   associate(w => trim(s) // 'abc')\n+!      if (trim(w) /= trim(a)) call abort\n+!   end associate\n \n    ! This failed.\n    associate(x => trim('abc'))"}]}