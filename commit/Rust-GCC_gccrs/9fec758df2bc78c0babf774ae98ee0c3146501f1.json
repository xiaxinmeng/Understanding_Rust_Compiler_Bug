{"sha": "9fec758df2bc78c0babf774ae98ee0c3146501f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZlYzc1OGRmMmJjNzhjMGJhYmY3NzRhZTk4ZWUwYzMxNDY1MDFmMQ==", "commit": {"author": {"name": "Wolfgang Gellerich", "email": "gellerich@de,ibm.com", "date": "2009-01-30T10:50:31Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2009-01-30T10:50:31Z"}, "message": "2009-01-30  Wolfgang Gellerich  <gellerich@de,ibm.com>\n\n\t* config/s390/s390.md (*insv<mode>_reg_extimm): Removed.\n\t(*insv_h_di_reg_extimm): New insn.\n\t(*insv_l<mode>_reg_extimm): New insn.\n\nFrom-SVN: r143786", "tree": {"sha": "419d069125d380d724526d64793b64370d1caf46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/419d069125d380d724526d64793b64370d1caf46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fec758df2bc78c0babf774ae98ee0c3146501f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fec758df2bc78c0babf774ae98ee0c3146501f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fec758df2bc78c0babf774ae98ee0c3146501f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fec758df2bc78c0babf774ae98ee0c3146501f1/comments", "author": null, "committer": null, "parents": [{"sha": "9e8be1e49e810a2147662a085f5b2e62d79c06b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8be1e49e810a2147662a085f5b2e62d79c06b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e8be1e49e810a2147662a085f5b2e62d79c06b9"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "c700951184b857b85d570592f1f8cd57111dd1a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fec758df2bc78c0babf774ae98ee0c3146501f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fec758df2bc78c0babf774ae98ee0c3146501f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fec758df2bc78c0babf774ae98ee0c3146501f1", "patch": "@@ -1,10 +1,16 @@\n-Hariharan Sandanagobalane <hariharan@picochip.com>\n+2009-01-30  Wolfgang Gellerich  <gellerich@de,ibm.com>\n+\n+\t* config/s390/s390.md (*insv<mode>_reg_extimm): Removed.\n+\t(*insv_h_di_reg_extimm): New insn.\n+\t(*insv_l<mode>_reg_extimm): New insn.\n+\n+2009-01-30  Hariharan Sandanagobalane  <hariharan@picochip.com>\n \n \t* config/picochip/picochip.c (flag_conserve_stack): set\n \tPARAM_LARGE_STACK_FRAME and PARAM_STACK_FRAME_GROWTH to zero under\n \tfconserve-stack. Reduce call-overhead used by inliner.\n \n-Hariharan Sandanagobalane <hariharan@picochip.com>\n+2009-01-30  Hariharan Sandanagobalane  <hariharan@picochip.com>\n \n \tPR/38157\n \t* common.opt (flag_conserve_stack): Initialised to zero."}, {"sha": "0e5546a804b5b6999c9fdda750cf246c1781a28a", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fec758df2bc78c0babf774ae98ee0c3146501f1/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fec758df2bc78c0babf774ae98ee0c3146501f1/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=9fec758df2bc78c0babf774ae98ee0c3146501f1", "patch": "@@ -3378,27 +3378,28 @@\n   [(set_attr \"op_type\" \"RI\")\n    (set_attr \"z10prop\" \"z10_super_E1\")])\n \n+; Update the left-most 32 bit of a DI.\n+(define_insn \"*insv_h_di_reg_extimm\"\n+  [(set (zero_extract:DI (match_operand:DI 0 \"register_operand\" \"+d\")\n+\t\t\t (const_int 32)\n+\t\t\t (const_int 0))\n+\t(match_operand:DI 1 \"const_int_operand\" \"n\"))]\n+  \"TARGET_EXTIMM\"\n+  \"iihf\\t%0,%o1\"\n+  [(set_attr \"op_type\" \"RIL\")\n+   (set_attr \"z10prop\" \"z10_fwd_E1\")])\n \n-(define_insn \"*insv<mode>_reg_extimm\"\n+; Update the right-most 32 bit of a DI, or the whole of a SI.\n+(define_insn \"*insv_l<mode>_reg_extimm\"\n   [(set (zero_extract:P (match_operand:P 0 \"register_operand\" \"+d\")\n \t\t\t(const_int 32)\n \t\t\t(match_operand 1 \"const_int_operand\" \"n\"))\n \t(match_operand:P 2 \"const_int_operand\" \"n\"))]\n   \"TARGET_EXTIMM\n-   && INTVAL (operands[1]) >= 0\n-   && INTVAL (operands[1]) < BITS_PER_WORD\n-   && INTVAL (operands[1]) % 32 == 0\"\n-{\n-  switch (BITS_PER_WORD - INTVAL (operands[1]))\n-    {\n-      case 64: return \"iihf\\t%0,%o2\"; break;\n-      case 32: return \"iilf\\t%0,%o2\"; break;\n-      default: gcc_unreachable();\n-    }\n-}\n+   && BITS_PER_WORD - INTVAL (operands[1]) == 32\"\n+  \"iilf\\t%0,%o2\"\n   [(set_attr \"op_type\" \"RIL\")\n-   (set_attr \"z10prop\" \"z10_fwd_E1\")])\n-\n+   (set_attr \"z10prop\" \"z10_fwd_A1\")])\n \n ;\n ; extendsidi2 instruction pattern(s)."}]}