{"sha": "5f325f5e6fd091f73f5be6ef30d27e22e4b59a74", "node_id": "C_kwDOANBUbNoAKDVmMzI1ZjVlNmZkMDkxZjczZjViZTZlZjMwZDI3ZTIyZTRiNTlhNzQ", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-07-23T08:52:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-22T15:01:47Z"}, "message": "[Ada] Add adequate guard before calling First_Rep_Item\n\ngcc/ada/\n\n\t* sem_ch13.adb (Build_Predicate_Functions): Add guard.", "tree": {"sha": "6b7e0fcb80497f9a4811f1798e29af74ec1cce13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b7e0fcb80497f9a4811f1798e29af74ec1cce13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f325f5e6fd091f73f5be6ef30d27e22e4b59a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f325f5e6fd091f73f5be6ef30d27e22e4b59a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f325f5e6fd091f73f5be6ef30d27e22e4b59a74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f325f5e6fd091f73f5be6ef30d27e22e4b59a74/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27534649ab6bed76c2839f2874849a5ddd48251a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27534649ab6bed76c2839f2874849a5ddd48251a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27534649ab6bed76c2839f2874849a5ddd48251a"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "595a741346f311e776772e7eb37f8fb854fa1fcf", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f325f5e6fd091f73f5be6ef30d27e22e4b59a74/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f325f5e6fd091f73f5be6ef30d27e22e4b59a74/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5f325f5e6fd091f73f5be6ef30d27e22e4b59a74", "patch": "@@ -10104,7 +10104,10 @@ package body Sem_Ch13 is\n          --  If the type is private, check whether full view has inherited\n          --  predicates.\n \n-         if Is_Private_Type (Typ) and then No (Ritem) then\n+         if Is_Private_Type (Typ)\n+           and then No (Ritem)\n+           and then Present (Full_View (Typ))\n+         then\n             Ritem := First_Rep_Item (Full_View (Typ));\n          end if;\n "}]}