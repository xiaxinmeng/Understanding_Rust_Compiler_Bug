{"sha": "61786edf7a82ffb4979207b43a8204ebc2a7671d", "node_id": "C_kwDOANBUbNoAKDYxNzg2ZWRmN2E4MmZmYjQ5NzkyMDdiNDNhODIwNGViYzJhNzY3MWQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-30T19:54:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-30T19:55:39Z"}, "message": "arm, csky: Fix C++ ICEs with _Float16 and __fp16 [PR107080]\n\nOn Fri, Sep 30, 2022 at 09:54:49AM -0400, Jason Merrill wrote:\n> > Note, there is one further problem on aarch64/arm, types with HFmode\n> > (_Float16 and __fp16) are there mangled as Dh (which is standard\n> > Itanium mangling:\n> >                   ::= Dh # IEEE 754r half-precision floating point (16 bits)\n> >                   ::= DF <number> _ # ISO/IEC TS 18661 binary floating point type _FloatN (N bits)\n> > so in theory is also ok, but DF16_ is more specific.  Should we just\n> > change Dh to DF16_ in those backends, or should __fp16 there be distinct\n> > type from _Float16 where __fp16 would mangle Dh and _Float16 DF16_ ?\n>\n> You argued for keeping __float128 separate from _Float128, does the same\n> argument not apply to this case?\n\nActually, they already were distinct types that just mangled the same.\nSo the same issue that had to be solved on i?86, ia64 and rs6000 for\n_Float64x vs. long double is a problem on arm and aarch64 with _Float16\nvs. __fp16.\nThe following patch fixes it for arm after aarch64 has been changed\nalready before.\n\n> > And there is csky, which mangles __fp16 (but only if type's name is __fp16,\n> > not _Float16) as __fp16, that looks clearly invalid to me as it isn't\n> > valid in the mangling grammar.  So perhaps just nuke csky's mangle_type\n> > and have it mangled as DF16_ by the generic code?\n\nAnd seems even on csky __fp16 is distinct type from _Float16 (which is a\ngood thing for consistency, these 3 targets are the only ones that have\n__fp16 type), so instead the patch handles it the same as on arm/aarch64,\nDh mangling for __fp16 and DF16_ for _Float16.\n\n2022-09-30  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/107080\n\t* config/arm/arm.cc (arm_mangle_type): Mangle just __fp16 as Dh\n\tand _Float16 as DF16_.\n\t* config/csky/csky.cc (csky_init_builtins): Fix a comment typo.\n\t(csky_mangle_type): Mangle __fp16 as Dh and _Float16 as DF16_\n\trather than mangling __fp16 as __fp16.\n\n\t* g++.target/arm/pr107080.C: New test.", "tree": {"sha": "c73f8b1e2396c1856a61e5de5cab1b055843158d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c73f8b1e2396c1856a61e5de5cab1b055843158d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61786edf7a82ffb4979207b43a8204ebc2a7671d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61786edf7a82ffb4979207b43a8204ebc2a7671d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61786edf7a82ffb4979207b43a8204ebc2a7671d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61786edf7a82ffb4979207b43a8204ebc2a7671d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b52b99b62df8fc9b3a3010cb0a8cf49bc35037f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52b99b62df8fc9b3a3010cb0a8cf49bc35037f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b52b99b62df8fc9b3a3010cb0a8cf49bc35037f0"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "ee8f1babf8a1319e77e0db0fa55851c038048804", "filename": "gcc/config/arm/arm.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61786edf7a82ffb4979207b43a8204ebc2a7671d/gcc%2Fconfig%2Farm%2Farm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61786edf7a82ffb4979207b43a8204ebc2a7671d/gcc%2Fconfig%2Farm%2Farm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.cc?ref=61786edf7a82ffb4979207b43a8204ebc2a7671d", "patch": "@@ -30359,6 +30359,8 @@ arm_mangle_type (const_tree type)\n   /* Half-precision floating point types.  */\n   if (TREE_CODE (type) == REAL_TYPE && TYPE_PRECISION (type) == 16)\n     {\n+      if (TYPE_MAIN_VARIANT (type) == float16_type_node)\n+\treturn NULL;\n       if (TYPE_MODE (type) == BFmode)\n \treturn \"u6__bf16\";\n       else"}, {"sha": "f7b2bf8e7c10460638de7703280e59b6eab2e688", "filename": "gcc/config/csky/csky.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61786edf7a82ffb4979207b43a8204ebc2a7671d/gcc%2Fconfig%2Fcsky%2Fcsky.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61786edf7a82ffb4979207b43a8204ebc2a7671d/gcc%2Fconfig%2Fcsky%2Fcsky.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky.cc?ref=61786edf7a82ffb4979207b43a8204ebc2a7671d", "patch": "@@ -7300,7 +7300,7 @@ csky_init_cumulative_args (CUMULATIVE_ARGS *pcum, tree fntype,\n void\n csky_init_builtins (void)\n {\n-  /* Inint fp16.  */\n+  /* Init fp16.  */\n   static tree csky_floatHF_type_node = make_node (REAL_TYPE);\n   TYPE_PRECISION (csky_floatHF_type_node) = GET_MODE_PRECISION (HFmode);\n   layout_type (csky_floatHF_type_node);\n@@ -7313,10 +7313,10 @@ csky_init_builtins (void)\n static const char *\n csky_mangle_type (const_tree type)\n {\n-  if (TYPE_NAME (type) && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL\n-      && DECL_NAME (TYPE_NAME (type))\n-      && !strcmp (IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type))), \"__fp16\"))\n-    return \"__fp16\";\n+  if (TREE_CODE (type) == REAL_TYPE\n+      && TYPE_PRECISION (type) == 16\n+      && TYPE_MAIN_VARIANT (type) != float16_type_node)\n+    return \"Dh\";\n \n   /* Use the default mangling.  */\n   return NULL;"}, {"sha": "89a5746d5fb795fd4b355958f3278b5383fc582e", "filename": "gcc/testsuite/g++.target/arm/pr107080.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61786edf7a82ffb4979207b43a8204ebc2a7671d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Farm%2Fpr107080.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61786edf7a82ffb4979207b43a8204ebc2a7671d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Farm%2Fpr107080.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Farm%2Fpr107080.C?ref=61786edf7a82ffb4979207b43a8204ebc2a7671d", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/107080\n+// { dg-do compile }\n+// { dg-options \"-mfp16-format=ieee\" }\n+\n+template <typename T, typename T1> \n+int\n+foo (T x, T1 y)\n+{\n+  return 3;\n+}\n+\n+int\n+main ()\n+{\n+  return (foo (0.0f16, 0.0f16) + foo (0.0f16, (__fp16) 0.0)) != 6;\n+}\n+\n+// { dg-final { scan-assembler \"_Z3fooIDF16_DF16_EiT_T0_\" } }\n+// { dg-final { scan-assembler \"_Z3fooIDF16_DhEiT_T0_\" } }"}]}