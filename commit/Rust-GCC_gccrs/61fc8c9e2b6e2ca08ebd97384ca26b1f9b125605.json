{"sha": "61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmYzhjOWUyYjZlMmNhMDhlYmQ5NzM4NGNhMjZiMWY5YjEyNTYwNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-05-22T14:26:55Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-05-22T14:26:55Z"}, "message": "cp-tree.h (push_nested_namespace): Declare.\n\n\t* cp-tree.h (push_nested_namespace): Declare.\n\t(pop_nested_namespace): Likewise.\n\t* decl.c (push_nested_namespace): New function.\n\t(pop_nested_namespace): Likewise.\n\t* pt.c (instantiate_class_template): Use them.\n\nFrom-SVN: r27103", "tree": {"sha": "00b8014b19980b4bc5f6ecc6d9dcc30a640efe0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00b8014b19980b4bc5f6ecc6d9dcc30a640efe0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/comments", "author": null, "committer": null, "parents": [{"sha": "9dd03dd98bed4ef1f04d7729ef4fdb80a1d244c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd03dd98bed4ef1f04d7729ef4fdb80a1d244c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd03dd98bed4ef1f04d7729ef4fdb80a1d244c9"}], "stats": {"total": 85, "additions": 80, "deletions": 5}, "files": [{"sha": "7623f188722038607b94da146fec984887ca8295", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "patch": "@@ -1,6 +1,12 @@\n 1999-05-22  Mark Mitchell  <mark@codesourcery.com>\n \n-\t* tree.c (mapcar): Handle LVALUE_EXPR.\n+\t* cp-tree.h (push_nested_namespace): Declare.\n+\t(pop_nested_namespace): Likewise.\n+\t* decl.c (push_nested_namespace): New function.\n+\t(pop_nested_namespace): Likewise.\n+\t* pt.c (instantiate_class_template): Use them.\n+\n+\t* tree.c (mapcar): Handle NON_LVALUE_EXPR.\n \n \t* cp-tree.h (cplus_expand_constant): Declare.\n \t* cvt.c (convert_to_pointer): Expand PTRMEM_CSTs when they're"}, {"sha": "a482824c15ed1638c403091917d90a6d91b22655", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "patch": "@@ -2781,6 +2781,8 @@ extern void print_binding_stack\t\t\tPROTO((void));\n extern void print_binding_level\t\t\tPROTO((struct binding_level *));\n extern void push_namespace\t\t\tPROTO((tree));\n extern void pop_namespace\t\t\tPROTO((void));\n+extern void push_nested_namespace\t\tPROTO((tree));\n+extern void pop_nested_namespace\t\tPROTO((tree));\n extern void maybe_push_to_top_level\t\tPROTO((int));\n extern void push_to_top_level\t\t\tPROTO((void));\n extern void pop_from_top_level\t\t\tPROTO((void));"}, {"sha": "2308e4c4b7e697c05569d52dc75b94fe208645aa", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "patch": "@@ -2396,6 +2396,38 @@ pop_namespace ()\n   suspend_binding_level ();\n }\n \n+/* Push into the scope of the namespace NS, even if it is deeply\n+   nested within another namespace.  */\n+\n+void\n+push_nested_namespace (ns)\n+     tree ns;\n+{\n+  if (ns == global_namespace)\n+    push_to_top_level ();\n+  else\n+    {\n+      push_nested_namespace (CP_DECL_CONTEXT (ns));\n+      push_namespace (DECL_NAME (ns));\n+    }\n+}\n+\n+/* Pop back from the scope of the namespace NS, which was previously\n+   entered with push_nested_namespace.  */\n+     \n+void\n+pop_nested_namespace (ns)\n+     tree ns;\n+{\n+  while (ns != global_namespace)\n+    {\n+      pop_namespace ();\n+      ns = CP_DECL_CONTEXT (ns);\n+    }\n+\n+  pop_from_top_level ();\n+}\n+\n \f\n /* Subroutines for reverting temporarily to top-level for instantiation\n    of templates and such.  We actually need to clear out the class- and"}, {"sha": "8c8017356b8af35de809fd4e57db73e0cf5beb6d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "patch": "@@ -5079,11 +5079,16 @@ instantiate_class_template (type)\n \tnew_friend_type = tsubst (friend_type, args, /*complain=*/1,\n \t\t\t\t  NULL_TREE);\n       else \n-\t/* The call to xref_tag_from_type does injection for friend\n-\t   classes.  */\n-\tnew_friend_type = \n-\t  xref_tag_from_type (friend_type, NULL_TREE, 1);\n+\t{\n+\t  tree ns = decl_namespace_context (TYPE_MAIN_DECL (friend_type));\n \n+\t  /* The call to xref_tag_from_type does injection for friend\n+\t     classes.  */\n+\t  push_nested_namespace (ns);\n+\t  new_friend_type = \n+\t    xref_tag_from_type (friend_type, NULL_TREE, 1);\n+\t  pop_nested_namespace (ns);\n+\t}\n \n       if (TREE_CODE (friend_type) == TEMPLATE_DECL)\n \t/* Trick make_friend_class into realizing that the friend"}, {"sha": "445ef6bc0f2cd71a66ab06d56682effa0b6aa121", "filename": "gcc/testsuite/g++.old-deja/g++.ns/ns18.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fns18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fns18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fns18.C?ref=61fc8c9e2b6e2ca08ebd97384ca26b1f9b125605", "patch": "@@ -0,0 +1,30 @@\n+// Build don't link:\n+// Origin: Theo Papadopoulo <Theodore.Papadopoulo@sophia.inria.fr>\n+\n+namespace Bname {\n+  class B;\n+}\n+\n+template <class T>\n+class A {\n+  friend class Bname::B;\n+  static const int a = 1;\n+public:\n+  A() { }\n+};\n+\n+namespace Bname {\n+  class B {\n+  \tint a;\n+  public:\n+  \ttemplate<class T>\n+  \tB(const T&):a(T::a) { }\n+  };\n+}\n+\n+int\n+main()\n+{\n+  A<int> a;\n+  Bname::B b(a);\n+}"}]}