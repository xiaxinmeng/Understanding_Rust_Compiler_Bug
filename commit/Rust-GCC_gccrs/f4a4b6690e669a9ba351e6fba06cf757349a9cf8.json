{"sha": "f4a4b6690e669a9ba351e6fba06cf757349a9cf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRhNGI2NjkwZTY2OWE5YmEzNTFlNmZiYTA2Y2Y3NTczNDlhOWNmOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-02-07T20:34:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-02-07T20:34:20Z"}, "message": "tweak wording\n\nFrom-SVN: r31835", "tree": {"sha": "5dd3d8dfac214dc8c67491eb9a793f8fdf79bf1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dd3d8dfac214dc8c67491eb9a793f8fdf79bf1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4a4b6690e669a9ba351e6fba06cf757349a9cf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a4b6690e669a9ba351e6fba06cf757349a9cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4a4b6690e669a9ba351e6fba06cf757349a9cf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a4b6690e669a9ba351e6fba06cf757349a9cf8/comments", "author": null, "committer": null, "parents": [{"sha": "981cb4378aacbf1d6645e9397f8c412dab51f425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/981cb4378aacbf1d6645e9397f8c412dab51f425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/981cb4378aacbf1d6645e9397f8c412dab51f425"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1fd6eb969ddd53f49099505fa914c1811d81701d", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a4b6690e669a9ba351e6fba06cf757349a9cf8/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a4b6690e669a9ba351e6fba06cf757349a9cf8/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=f4a4b6690e669a9ba351e6fba06cf757349a9cf8", "patch": "@@ -301,8 +301,8 @@ yylex ()\n \t    case PTYPENAME:\n \t      lastiddecl = trrr;\n \n-\t      /* If this got special lookup, remember it.  In these cases,\n-\t         we don't have to worry about being a declarator-id. */\n+\t      /* If this got special lookup, remember it.  In these\n+\t         cases, we know it can't be a declarator-id. */\n \t      if (got_scope || got_object)\n \t\ttmp_token.yylval.ttype = trrr;\n \t      break;"}, {"sha": "6f35b3633ac15d673a1438308a578cf09125cb56", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a4b6690e669a9ba351e6fba06cf757349a9cf8/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a4b6690e669a9ba351e6fba06cf757349a9cf8/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=f4a4b6690e669a9ba351e6fba06cf757349a9cf8", "patch": "@@ -1462,7 +1462,7 @@ check_for_new_type (string, inptree)\n {\n   if (inptree.new_type_flag\n       && (pedantic || strcmp (string, \"cast\") != 0))\n-    pedwarn (\"ISO C++ forbids defining types within %s\",string);\n+    pedwarn (\"ISO C++ forbids defining types within %s\", string);\n }\n \n /* Add new exception specifier SPEC, to the LIST we currently have."}]}