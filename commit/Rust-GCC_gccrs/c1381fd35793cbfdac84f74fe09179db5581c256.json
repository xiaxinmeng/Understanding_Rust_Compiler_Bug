{"sha": "c1381fd35793cbfdac84f74fe09179db5581c256", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEzODFmZDM1NzkzY2JmZGFjODRmNzRmZTA5MTc5ZGI1NTgxYzI1Ng==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-09-22T17:44:56Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-09-22T17:44:56Z"}, "message": "(__enable_execute_stack): Add case for NeXT/__MACH__.\n\nFrom-SVN: r5394", "tree": {"sha": "f3091e6c7bf7a7ba02ea63aa03db96c357eb8a1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3091e6c7bf7a7ba02ea63aa03db96c357eb8a1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1381fd35793cbfdac84f74fe09179db5581c256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1381fd35793cbfdac84f74fe09179db5581c256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1381fd35793cbfdac84f74fe09179db5581c256", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1381fd35793cbfdac84f74fe09179db5581c256/comments", "author": null, "committer": null, "parents": [{"sha": "9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aefc7b6f47fd5068f15a677fcd055bd446af7a3"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "d1383bb46911853100f104d689a062641abc8a8f", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1381fd35793cbfdac84f74fe09179db5581c256/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1381fd35793cbfdac84f74fe09179db5581c256/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=c1381fd35793cbfdac84f74fe09179db5581c256", "patch": "@@ -1712,6 +1712,40 @@ __clear_cache (beg, end)\n TRANSFER_FROM_TRAMPOLINE \n #endif\n \n+#if defined (NeXT) && defined (__MACH__)\n+\n+/* Make stack executable so we can call trampolines on stack.\n+   This is called from INITIALIZE_TRAMPOLINE in next.h.  */\n+\n+#include <mach/mach.h>\n+\n+void\n+__enable_execute_stack (addr)\n+     char *addr;\n+{\n+  kern_return_t r;\n+  char *eaddr = addr + TRAMPOLINE_SIZE;\n+  vm_address_t a = (vm_address_t) addr;\n+\n+  /* turn on execute access on stack */\n+  r = vm_protect (task_self (), a, TRAMPOLINE_SIZE, FALSE, VM_PROT_ALL);\n+  if (r != KERN_SUCCESS)\n+    {\n+      mach_error(\"vm_protect VM_PROT_ALL\", r);\n+      exit(1);\n+    }\n+\n+  /* We inline the i-cache invalidation for speed */\n+\n+#ifdef CLEAR_INSN_CACHE\n+  CLEAR_INSN_CACHE (addr, eaddr);\n+#else\n+  __clear_cache ((int) addr, (int) eaddr);\n+#endif\n+} \n+\n+#endif /* defined (NeXT) && defined (__MACH__) */\n+\n #ifdef __convex__\n \n /* Make stack executable so we can call trampolines on stack."}]}