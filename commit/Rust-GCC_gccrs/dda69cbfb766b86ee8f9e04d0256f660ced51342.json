{"sha": "dda69cbfb766b86ee8f9e04d0256f660ced51342", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRhNjljYmZiNzY2Yjg2ZWU4ZjllMDRkMDI1NmY2NjBjZWQ1MTM0Mg==", "commit": {"author": {"name": "Mark Shinwell", "email": "shinwell@codesourcery.com", "date": "2006-06-12T12:56:52Z"}, "committer": {"name": "Mark Shinwell", "email": "shinwell@gcc.gnu.org", "date": "2006-06-12T12:56:52Z"}, "message": "builtins.c (expand_builtin_return_addr): Only use frame_pointer_rtx when count == 0 and we are expanding...\n\ngcc/\n\t* builtins.c (expand_builtin_return_addr): Only use\n\tframe_pointer_rtx when count == 0 and we are expanding\n\t__builtin_return_address.\n\nFrom-SVN: r114567", "tree": {"sha": "0a00b7c5eddbe5d1b9ebfe19260878e50329d448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a00b7c5eddbe5d1b9ebfe19260878e50329d448"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dda69cbfb766b86ee8f9e04d0256f660ced51342", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda69cbfb766b86ee8f9e04d0256f660ced51342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dda69cbfb766b86ee8f9e04d0256f660ced51342", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda69cbfb766b86ee8f9e04d0256f660ced51342/comments", "author": null, "committer": null, "parents": [{"sha": "0901c5a3d97937d6ef2f430baa98328b032e35c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0901c5a3d97937d6ef2f430baa98328b032e35c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0901c5a3d97937d6ef2f430baa98328b032e35c6"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "45696359c28e0e48e427dac0c7fd577aad2f960f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dda69cbfb766b86ee8f9e04d0256f660ced51342/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dda69cbfb766b86ee8f9e04d0256f660ced51342/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dda69cbfb766b86ee8f9e04d0256f660ced51342", "patch": "@@ -1,3 +1,9 @@\n+2006-06-12  Mark Shinwell  <shinwell@codesourcery.com>\n+\n+\t* builtins.c (expand_builtin_return_addr): Only use\n+\tframe_pointer_rtx when count == 0 and we are expanding\n+\t__builtin_return_address.\n+\n 2006-06-12  Fred Fish  <fnf@specifix.com>\n \n \t* config/mips/mips.c (mips_file_start): Create special section"}, {"sha": "80f2fbbf4b79320df5cfccffe220c213fe48ba20", "filename": "gcc/builtins.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dda69cbfb766b86ee8f9e04d0256f660ced51342/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dda69cbfb766b86ee8f9e04d0256f660ced51342/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=dda69cbfb766b86ee8f9e04d0256f660ced51342", "patch": "@@ -509,12 +509,16 @@ expand_builtin_return_addr (enum built_in_function fndecl_code, int count)\n #else\n   rtx tem;\n \n-  /* For a zero count, we don't care what frame address we return, so frame\n-     pointer elimination is OK, and using the soft frame pointer is OK.\n-     For a nonzero count, we require a stable offset from the current frame\n-     pointer to the previous one, so we must use the hard frame pointer, and\n+  /* For a zero count with __builtin_return_address, we don't care what\n+     frame address we return, because target-specific definitions will\n+     override us.  Therefore frame pointer elimination is OK, and using\n+     the soft frame pointer is OK.\n+\n+     For a non-zero count, or a zero count with __builtin_frame_address,\n+     we require a stable offset from the current frame pointer to the\n+     previous one, so we must use the hard frame pointer, and\n      we must disable frame pointer elimination.  */\n-  if (count == 0)\n+  if (count == 0 && fndecl_code == BUILT_IN_RETURN_ADDRESS)\n     tem = frame_pointer_rtx;\n   else\n     {"}]}