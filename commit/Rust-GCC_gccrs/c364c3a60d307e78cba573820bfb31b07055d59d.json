{"sha": "c364c3a60d307e78cba573820bfb31b07055d59d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM2NGMzYTYwZDMwN2U3OGNiYTU3MzgyMGJmYjMxYjA3MDU1ZDU5ZA==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2003-04-12T14:52:17Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2003-04-12T14:52:17Z"}, "message": "larith.asm (memcpy): Use ARG macro to access stack parameters so that offsets are valid for far...\n\n\t* config/m68hc11/larith.asm (memcpy): Use ARG macro to access stack\n\tparameters so that offsets are valid for far definition.\n\t(__mulsi3): Likewise and use ret to return.\n\t(___adddi3, ___subdi3, ___notdi2, ): Don't use it to save the result.\n\nFrom-SVN: r65509", "tree": {"sha": "584feddabcb11cb0b0afb7ce6c37d73165fecf72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/584feddabcb11cb0b0afb7ce6c37d73165fecf72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c364c3a60d307e78cba573820bfb31b07055d59d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c364c3a60d307e78cba573820bfb31b07055d59d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c364c3a60d307e78cba573820bfb31b07055d59d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c364c3a60d307e78cba573820bfb31b07055d59d/comments", "author": null, "committer": null, "parents": [{"sha": "09501938ed571f2548b526f62da3ff548ee80012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09501938ed571f2548b526f62da3ff548ee80012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09501938ed571f2548b526f62da3ff548ee80012"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "dd01a08314f13c97eb58b6b574196e1c86fbc94c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c364c3a60d307e78cba573820bfb31b07055d59d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c364c3a60d307e78cba573820bfb31b07055d59d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c364c3a60d307e78cba573820bfb31b07055d59d", "patch": "@@ -1,3 +1,10 @@\n+2003-04-12  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/larith.asm (memcpy): Use ARG macro to access stack\n+\tparameters so that offsets are valid for far definition.\n+\t(__mulsi3): Likewise and use ret to return.\n+\t(___adddi3, ___subdi3, ___notdi2, ): Don't use it to save the result.\n+\n 2003-04-12  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_hash_constant): Skip '0' fields."}, {"sha": "78b5885dac224bda55b77232c92f34f56296a7f4", "filename": "gcc/config/m68hc11/larith.asm", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c364c3a60d307e78cba573820bfb31b07055d59d/gcc%2Fconfig%2Fm68hc11%2Flarith.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c364c3a60d307e78cba573820bfb31b07055d59d/gcc%2Fconfig%2Fm68hc11%2Flarith.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Flarith.asm?ref=c364c3a60d307e78cba573820bfb31b07055d59d", "patch": "@@ -289,8 +289,8 @@ Done:\n #else\n \txgdy\n \ttsx\n-\tldd\t4,x\n-\tldx\t2,x\t\t; SRC = X, DST = Y\n+\tldd\tARG(4),x\n+\tldx\tARG(2),x\t; SRC = X, DST = Y\n \tcpd\t#0\n \tbeq\tEnd\n \tpshy\n@@ -365,85 +365,85 @@ End:\n #endif\n \n #ifdef L_adddi3\n-       declare\t___adddi3\n+\tdeclare\t___adddi3\n \n \ttsx\n \txgdy\n \tldd\tARG(8),x\t\t; Add LSB\n \taddd\tARG(16),x\n-\tstd\tARG(6),y\t\t; Save (carry preserved)\n+\tstd\t6,y\t\t; Save (carry preserved)\n \n \tldd\tARG(6),x\n \tadcb\tARG(15),x\n \tadca\tARG(14),x\n-\tstd\tARG(4),y\n+\tstd\t4,y\n \n \tldd\tARG(4),x\n \tadcb\tARG(13),x\n \tadca\tARG(12),x\n-\tstd\tARG(2),y\n+\tstd\t2,y\n \t\n \tldd\tARG(2),x\n \tadcb\tARG(11),x\t\t; Add MSB\n \tadca\tARG(10),x\n-\tstd\tARG(0),y\n+\tstd\t0,y\n \n \txgdy\n \tret\n #endif\n \n #ifdef L_subdi3\n-       declare\t___subdi3\n+\tdeclare\t___subdi3\n \n \ttsx\n \txgdy\n \tldd\tARG(8),x\t\t; Subtract LSB\n \tsubd\tARG(16),x\n-\tstd\tARG(6),y\t\t; Save, borrow preserved\n+\tstd\t6,y\t\t\t; Save, borrow preserved\n \n \tldd\tARG(6),x\n \tsbcb\tARG(15),x\n \tsbca\tARG(14),x\n-\tstd\tARG(4),y\n+\tstd\t4,y\n \n \tldd\tARG(4),x\n \tsbcb\tARG(13),x\n \tsbca\tARG(12),x\n-\tstd\tARG(2),y\n+\tstd\t2,y\n \t\n \tldd\tARG(2),x\t\t; Subtract MSB\n \tsbcb\tARG(11),x\n \tsbca\tARG(10),x\n-\tstd\tARG(0),y\n+\tstd\t0,y\n \n \txgdy\t\t\t;\n \tret\n #endif\n \t\n #ifdef L_notdi2\n-        declare\t___notdi2\n+\tdeclare\t___notdi2\n \n \ttsy\n \txgdx\n \tldd\tARG(8),y\n \tcoma\n \tcomb\n-\tstd\tARG(6),x\n+\tstd\t6,x\n \t\n \tldd\tARG(6),y\n \tcoma\n \tcomb\n-\tstd\tARG(4),x\n+\tstd\t4,x\n \n \tldd\tARG(4),y\n \tcoma\n \tcomb\n-\tstd\tARG(2),x\n+\tstd\t2,x\n \n \tldd\tARG(2),y\n \tcoma\n \tcomb\n-\tstd\tARG(0),x\n+\tstd\t0,x\n \txgdx\n \tret\n #endif\n@@ -966,8 +966,8 @@ Ret:\n \texg\td,y\n \tret\n #else\n-B_low\t=\t8\n-B_high\t=\t6\n+B_low\t=\tARG(8)\n+B_high\t=\tARG(6)\n A_low\t=\t0\n A_high\t=\t2\n \tpshx\n@@ -1015,7 +1015,7 @@ Return:\n \tins\n \tins\n \tins\n-\trts\n+\tret\n ;\n ; \n ; A_low_zero_non_optimized:"}]}