{"sha": "99abb146fd0923ebda2c7e7681adb18e6798a90c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlhYmIxNDZmZDA5MjNlYmRhMmM3ZTc2ODFhZGIxOGU2Nzk4YTkwYw==", "commit": {"author": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-06-22T16:11:19Z"}, "committer": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-06-22T16:13:05Z"}, "message": "arm: Fix the failing mve scalar shift execution tests.\n\nIn GCC testsuite the MVE scalar shift execution tests (mve_scalar_shifts[1-4].c) are failings\nbecause of executing them on target hardware which doesn't support MVE instructions. This patch\nrestricts those tests to execute only on target hardware that support MVE instructions.\n\n2020-06-22  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n\ngcc/\n\t* doc/sourcebuild.texi (arm_v8_1m_mve_fp_ok): Add item.\n\t(arm_mve_hw): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts1.c: Modify.\n\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts3.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts4.c: Likewise.\n\t* lib/target-supports.exp (check_effective_target_arm_mve_hw): Define.", "tree": {"sha": "84d0eaf041bf14f13a9f1801b761be9e4f20b31c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d0eaf041bf14f13a9f1801b761be9e4f20b31c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99abb146fd0923ebda2c7e7681adb18e6798a90c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99abb146fd0923ebda2c7e7681adb18e6798a90c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99abb146fd0923ebda2c7e7681adb18e6798a90c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99abb146fd0923ebda2c7e7681adb18e6798a90c/comments", "author": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "647340c92a042e8e6f7d004637f07060dbde49c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647340c92a042e8e6f7d004637f07060dbde49c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647340c92a042e8e6f7d004637f07060dbde49c0"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "a12af822443ad41afba816ed640d80d182859239", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=99abb146fd0923ebda2c7e7681adb18e6798a90c", "patch": "@@ -1925,6 +1925,15 @@ ARM target supports options to generate instructions from ARMv8.1-M with\n the M-Profile Vector Extension (MVE). Some multilibs may be incompatible\n with these options.\n \n+@item arm_v8_1m_mve_fp_ok\n+ARM target supports options to generate instructions from ARMv8.1-M with\n+the Half-precision floating-point instructions (HP), Floating-point Extension\n+(FP) along with M-Profile Vector Extension (MVE). Some multilibs may be\n+incompatible with these options.\n+\n+@item arm_mve_hw\n+Test system supports executing MVE instructions.\n+\n @item arm_v8m_main_cde\n ARM target supports options to generate instructions from ARMv8-M with\n the Custom Datapath Extension (CDE). Some multilibs may be incompatible"}, {"sha": "db2335fc76ed3204fcfc033ef6777dc85dbd465f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_scalar_shifts1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts1.c?ref=99abb146fd0923ebda2c7e7681adb18e6798a90c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-require-effective-target arm_mve_hw } */\n /* { dg-options \"-O2\" } */\n /* { dg-add-options arm_v8_1m_mve } */\n "}, {"sha": "5a63d385cb7e7d18345974421035f3090f409554", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_scalar_shifts2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts2.c?ref=99abb146fd0923ebda2c7e7681adb18e6798a90c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-require-effective-target arm_mve_hw } */\n /* { dg-options \"-O2\" } */\n /* { dg-add-options arm_v8_1m_mve } */\n "}, {"sha": "f0d5ee32f829c482cbeb4f1fb1f714e01b43da87", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_scalar_shifts3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts3.c?ref=99abb146fd0923ebda2c7e7681adb18e6798a90c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-require-effective-target arm_mve_hw } */\n /* { dg-options \"-O2\" } */\n /* { dg-add-options arm_v8_1m_mve } */\n "}, {"sha": "283742fcf982b6cf2746e7745a3c5258e75d3982", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_scalar_shifts4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_scalar_shifts4.c?ref=99abb146fd0923ebda2c7e7681adb18e6798a90c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-require-effective-target arm_mve_hw } */\n /* { dg-options \"-O2\" } */\n /* { dg-add-options arm_v8_1m_mve } */\n "}, {"sha": "ab0ee32fc911622b4716c272df4e656698b81a70", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99abb146fd0923ebda2c7e7681adb18e6798a90c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=99abb146fd0923ebda2c7e7681adb18e6798a90c", "patch": "@@ -4671,6 +4671,24 @@ proc check_effective_target_arm_cmse_ok {} {\n     } \"-mcmse\"];\n }\n \n+# Return 1 if the target supports executing MVE instructions, 0\n+# otherwise.\n+\n+proc check_effective_target_arm_mve_hw {} {\n+    return [check_runtime arm_mve_hw_available {\n+\tint\n+\tmain (void)\n+\t{\n+\t  long long a = 16;\n+\t  int b = 3;\n+\t  asm (\"sqrshrl %Q1, %R1, #64, %2\"\n+\t       : \"=l\" (a)\n+\t       : \"0\" (a), \"r\" (b));\n+\t  return (a != 2);\n+\t}\n+    } \"\"]\n+}\n+\n # Return 1 if this is an ARM target where ARMv8-M Security Extensions with\n # clearing instructions (clrm, vscclrm, vstr/vldr with FPCXT) is available.\n "}]}