{"sha": "91dd7954c44b201aa3b16e66b18d7a5df00fded9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkZDc5NTRjNDRiMjAxYWEzYjE2ZTY2YjE4ZDdhNWRmMDBmZGVkOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-12T10:45:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-12T11:30:07Z"}, "message": "libstdc++: Fix some tests that fail in C++20 mode\n\nThe linear_congruential_engine negative tests fail with a different\nerror in C++20 mode, because double is no longer an invalid type for\nNTTP. Adjust the expected errors.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/26_numerics/random/linear_congruential_engine/requirements/non_uint_neg.cc:\n\tAdjust expected error for C++20 mode.\n\t* testsuite/tr1/5_numerical_facilities/random/linear_congruential/requirements/non_uint_neg.cc:\n\tLikewise.", "tree": {"sha": "e0984339e5c064274ef91b77b2b33e66235b670d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0984339e5c064274ef91b77b2b33e66235b670d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91dd7954c44b201aa3b16e66b18d7a5df00fded9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91dd7954c44b201aa3b16e66b18d7a5df00fded9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91dd7954c44b201aa3b16e66b18d7a5df00fded9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91dd7954c44b201aa3b16e66b18d7a5df00fded9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a694a02125f181afe2ae461dd8f35c6f5f54ad22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a694a02125f181afe2ae461dd8f35c6f5f54ad22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a694a02125f181afe2ae461dd8f35c6f5f54ad22"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "a36d63c6c7b9fbcf6e894f52a2c068f42ee283be", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/requirements/non_uint_neg.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91dd7954c44b201aa3b16e66b18d7a5df00fded9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fnon_uint_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91dd7954c44b201aa3b16e66b18d7a5df00fded9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fnon_uint_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fnon_uint_neg.cc?ref=91dd7954c44b201aa3b16e66b18d7a5df00fded9", "patch": "@@ -20,10 +20,12 @@\n \n // { dg-do compile { target c++11 } }\n // { dg-require-cstdint \"\" }\n+// { dg-error \"not a valid type\" \"\" { target { ! c++20 } } 31 }\n+// { dg-error \"from 'int' to 'double'\" \"\" { target c++20 } 31 }\n \n // 26.4.3.1 class template linear_congruential_engine [rand.eng.lcong]\n // 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n \n #include <random>\n \n-std::linear_congruential_engine<double, 48271, 0, 2147483647> x; // { dg-error \"not a valid type\" }\n+std::linear_congruential_engine<double, 48271, 0, 2147483647> x;"}, {"sha": "53b15f325160bc9344b60be1d230ce02a469a1bb", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/linear_congruential/requirements/non_uint_neg.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91dd7954c44b201aa3b16e66b18d7a5df00fded9/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Flinear_congruential%2Frequirements%2Fnon_uint_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91dd7954c44b201aa3b16e66b18d7a5df00fded9/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Flinear_congruential%2Frequirements%2Fnon_uint_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Flinear_congruential%2Frequirements%2Fnon_uint_neg.cc?ref=91dd7954c44b201aa3b16e66b18d7a5df00fded9", "patch": "@@ -19,7 +19,8 @@\n \n // { dg-do compile }\n // { dg-options \"-D_GLIBCXX_CONCEPT_CHECKS\" }\n-// { dg-error \"not a valid type\" \"\" { target *-*-* } 29 }\n+// { dg-error \"not a valid type\" \"\" { target { ! c++20 } } 30 }\n+// { dg-error \"from 'int' to 'double'\" \"\" { target c++20 } 30 }\n \n // 5.1.4.1 class template linear_congruential [tr.rand.eng.lcong]\n // 5.1.4.1 [4]"}]}