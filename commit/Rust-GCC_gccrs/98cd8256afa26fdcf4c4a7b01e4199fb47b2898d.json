{"sha": "98cd8256afa26fdcf4c4a7b01e4199fb47b2898d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjZDgyNTZhZmEyNmZkY2Y0YzRhN2IwMWU0MTk5ZmI0N2IyODk4ZA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2005-09-07T20:16:47Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2005-09-07T20:16:47Z"}, "message": "re PR libfortran/23419 (unformatted complex I/O with kind=10)\n\n\tPR libfortran/23419\n\t* io/write.c (extract_int): Use memcpy to access buffer.\n\t(extract_uint): Ditto.\n\t(extract_real): Ditto.\n\nFrom-SVN: r104000", "tree": {"sha": "1aba9950ba1a9a153cd920858aeac4426db8af55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aba9950ba1a9a153cd920858aeac4426db8af55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d/comments", "author": null, "committer": null, "parents": [{"sha": "9f36bc49f8e9af63c64536da3e6085274c842e5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f36bc49f8e9af63c64536da3e6085274c842e5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f36bc49f8e9af63c64536da3e6085274c842e5b"}], "stats": {"total": 91, "additions": 77, "deletions": 14}, "files": [{"sha": "8b2bb625a468a1bde21eebdd3d5a7b4c7904be44", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=98cd8256afa26fdcf4c4a7b01e4199fb47b2898d", "patch": "@@ -1,3 +1,10 @@\n+2005-09-07  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR libfortran/23419\n+\t* io/write.c (extract_int): Use memcpy to access buffer.\n+\t(extract_uint): Ditto.\n+\t(extract_real): Ditto.\n+\n 2005-09-05  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \t* io/list_read.c:  Adjust size of of value to 32 (to hold"}, {"sha": "da9feb3e09e5099a1fd12476d2d490806c00ebf0", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 70, "deletions": 14, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98cd8256afa26fdcf4c4a7b01e4199fb47b2898d/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=98cd8256afa26fdcf4c4a7b01e4199fb47b2898d", "patch": "@@ -79,20 +79,40 @@ extract_int (const void *p, int len)\n   switch (len)\n     {\n     case 1:\n-      i = *((const GFC_INTEGER_1 *) p);\n+      {\n+\tGFC_INTEGER_1 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n     case 2:\n-      i = *((const GFC_INTEGER_2 *) p);\n+      {\n+\tGFC_INTEGER_2 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n     case 4:\n-      i = *((const GFC_INTEGER_4 *) p);\n+      {\n+\tGFC_INTEGER_4 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n     case 8:\n-      i = *((const GFC_INTEGER_8 *) p);\n+      {\n+\tGFC_INTEGER_8 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n #ifdef HAVE_GFC_INTEGER_16\n     case 16:\n-      i = *((const GFC_INTEGER_16 *) p);\n+      {\n+\tGFC_INTEGER_16 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n #endif\n     default:\n@@ -113,20 +133,40 @@ extract_uint (const void *p, int len)\n   switch (len)\n     {\n     case 1:\n-      i = (GFC_UINTEGER_1) *((const GFC_INTEGER_1 *) p);\n+      {\n+\tGFC_INTEGER_1 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = (GFC_UINTEGER_1) tmp;\n+      }\n       break;\n     case 2:\n-      i = (GFC_UINTEGER_2) *((const GFC_INTEGER_2 *) p);\n+      {\n+\tGFC_INTEGER_2 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = (GFC_UINTEGER_2) tmp;\n+      }\n       break;\n     case 4:\n-      i = (GFC_UINTEGER_4) *((const GFC_INTEGER_4 *) p);\n+      {\n+\tGFC_INTEGER_4 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = (GFC_UINTEGER_4) tmp;\n+      }\n       break;\n     case 8:\n-      i = (GFC_UINTEGER_8) *((const GFC_INTEGER_8 *) p);\n+      {\n+\tGFC_INTEGER_8 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = (GFC_UINTEGER_8) tmp;\n+      }\n       break;\n #ifdef HAVE_GFC_INTEGER_16\n     case 16:\n-      i = (GFC_UINTEGER_16) *((const GFC_INTEGER_16 *) p);\n+      {\n+\tGFC_INTEGER_16 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = (GFC_UINTEGER_16) tmp;\n+      }\n       break;\n #endif\n     default:\n@@ -143,19 +183,35 @@ extract_real (const void *p, int len)\n   switch (len)\n     {\n     case 4:\n-      i = *((const GFC_REAL_4 *) p);\n+      {\n+\tGFC_REAL_4 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n     case 8:\n-      i = *((const GFC_REAL_8 *) p);\n+      {\n+\tGFC_REAL_8 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n #ifdef HAVE_GFC_REAL_10\n     case 10:\n-      i = *((const GFC_REAL_10 *) p);\n+      {\n+\tGFC_REAL_10 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n #endif\n #ifdef HAVE_GFC_REAL_16\n     case 16:\n-      i = *((const GFC_REAL_16 *) p);\n+      {\n+\tGFC_REAL_16 tmp;\n+\tmemcpy ((void *) &tmp, p, len);\n+\ti = tmp;\n+      }\n       break;\n #endif\n     default:"}]}