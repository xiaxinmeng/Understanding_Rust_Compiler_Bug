{"sha": "45e206963a226dc93046a671951f8cc5bcce52cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVlMjA2OTYzYTIyNmRjOTMwNDZhNjcxOTUxZjhjYzViY2NlNTJjZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-04-27T11:57:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-04-27T11:57:58Z"}, "message": "libstdc++/70767 Define std::numeric_limits<cv T> in C++98 mode\n\n\tPR libstdc++/70767\n\t* include/std/limits: Update comments about DRs.\n\t(numeric_limits<const _Tp>, numeric_limits<volatile _Tp>,\n\tnumeric_limits<const volatile _Tp>): Define unconditionally.\n\nFrom-SVN: r235486", "tree": {"sha": "3fa28d5a712558b67980daee0e84ac6b38faad30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fa28d5a712558b67980daee0e84ac6b38faad30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45e206963a226dc93046a671951f8cc5bcce52cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45e206963a226dc93046a671951f8cc5bcce52cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45e206963a226dc93046a671951f8cc5bcce52cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45e206963a226dc93046a671951f8cc5bcce52cf/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5819764843d6847f9aa7885362c3cee4f246eeea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5819764843d6847f9aa7885362c3cee4f246eeea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5819764843d6847f9aa7885362c3cee4f246eeea"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "080fd59afa0fbacc468f02cad3abdc39abbfc300", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45e206963a226dc93046a671951f8cc5bcce52cf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45e206963a226dc93046a671951f8cc5bcce52cf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=45e206963a226dc93046a671951f8cc5bcce52cf", "patch": "@@ -1,3 +1,10 @@\n+2016-04-27  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/70767\n+\t* include/std/limits: Update comments about DRs.\n+\t(numeric_limits<const _Tp>, numeric_limits<volatile _Tp>,\n+\tnumeric_limits<const volatile _Tp>): Define unconditionally.\n+\n 2016-04-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/70762"}, {"sha": "53a183f712e59c97e7b44493ae414dbc5bfca269", "filename": "libstdc++-v3/include/std/limits", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45e206963a226dc93046a671951f8cc5bcce52cf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45e206963a226dc93046a671951f8cc5bcce52cf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits?ref=45e206963a226dc93046a671951f8cc5bcce52cf", "patch": "@@ -307,9 +307,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  representation of a fundamental type on a given platform.  For\n    *  non-fundamental types, the functions will return 0 and the data\n    *  members will all be @c false.\n-   *\n-   *  _GLIBCXX_RESOLVE_LIB_DEFECTS:  DRs 201 and 184 (hi Gaby!) are\n-   *  noted, but not incorporated in this documented (yet).\n   */\n   template<typename _Tp>\n     struct numeric_limits : public __numeric_limits_base\n@@ -360,7 +357,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       denorm_min() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }\n     };\n \n-#if __cplusplus >= 201103L\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 559. numeric_limits<const T>\n+\n   template<typename _Tp>\n     struct numeric_limits<const _Tp>\n     : public numeric_limits<_Tp> { };\n@@ -372,10 +371,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp>\n     struct numeric_limits<const volatile _Tp>\n     : public numeric_limits<_Tp> { };\n-#endif\n \n   // Now there follow 16 explicit specializations.  Yes, 16.  Make sure\n-  // you get the count right. (18 in c++0x mode)\n+  // you get the count right. (18 in C++11 mode, with char16_t and char32_t.)\n+\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 184. numeric_limits<bool> wording problems\n \n   /// numeric_limits<bool> specialization.\n   template<>"}]}