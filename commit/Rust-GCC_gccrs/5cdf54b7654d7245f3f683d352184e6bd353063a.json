{"sha": "5cdf54b7654d7245f3f683d352184e6bd353063a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNkZjU0Yjc2NTRkNzI0NWYzZjY4M2QzNTIxODRlNmJkMzUzMDYzYQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-24T16:31:47Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-24T16:31:47Z"}, "message": "re PR libfortran/57496 (I/O: WRITE(*,*) HUGE(0._10) gives SIGFPE with -ffpe-trap=overflow)\n\n\tPR libfortran/57496\n\t* io/write_float.def: Use built-in type-generic functions defined\n\tby libgfortran.h for isfinite, isnan, and signbit.\n\nFrom-SVN: r227136", "tree": {"sha": "2cd1340ed793575dd283a2ee0fbdc56a29a9fd51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cd1340ed793575dd283a2ee0fbdc56a29a9fd51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cdf54b7654d7245f3f683d352184e6bd353063a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cdf54b7654d7245f3f683d352184e6bd353063a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cdf54b7654d7245f3f683d352184e6bd353063a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cdf54b7654d7245f3f683d352184e6bd353063a/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f7ba2088e4ebfa747f51a107d25f05c29df51b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7ba2088e4ebfa747f51a107d25f05c29df51b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f7ba2088e4ebfa747f51a107d25f05c29df51b7"}], "stats": {"total": 41, "additions": 10, "deletions": 31}, "files": [{"sha": "9d58d50f289888e44215f703445ec8bbd67c42c7", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdf54b7654d7245f3f683d352184e6bd353063a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdf54b7654d7245f3f683d352184e6bd353063a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5cdf54b7654d7245f3f683d352184e6bd353063a", "patch": "@@ -1,3 +1,9 @@\n+2015-08-24  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/57496\n+\t* io/write_float.def: Use built-in type-generic functions defined\n+\tby libgfortran.h for isfinite, isnan, and signbit.\n+\n 2015-08-23  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/54572"}, {"sha": "dd298aa81ad7fa079617d626d1ff9141d9410737", "filename": "libgfortran/io/write_float.def", "status": "modified", "additions": 4, "deletions": 31, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdf54b7654d7245f3f683d352184e6bd353063a/libgfortran%2Fio%2Fwrite_float.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdf54b7654d7245f3f683d352184e6bd353063a/libgfortran%2Fio%2Fwrite_float.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite_float.def?ref=5cdf54b7654d7245f3f683d352184e6bd353063a", "patch": "@@ -958,33 +958,6 @@ __qmath_(quadmath_snprintf) (buffer, size, \"%+-#.*Qf\", \\\n #endif\n \n \n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define ISFINITE2Q(val) finiteq(val)\n-#endif\n-#define ISFINITE2(val) isfinite(val)\n-#define ISFINITE2L(val) isfinite(val)\n-\n-#define ISFINITE(suff,val) TOKENPASTE(ISFINITE2,suff)(val)\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define SIGNBIT2Q(val) signbitq(val)\n-#endif\n-#define SIGNBIT2(val) signbit(val)\n-#define SIGNBIT2L(val) signbit(val)\n-\n-#define SIGNBIT(suff,val) TOKENPASTE(SIGNBIT2,suff)(val)\n-\n-\n-#if defined(GFC_REAL_16_IS_FLOAT128)\n-#define ISNAN2Q(val) isnanq(val)\n-#endif\n-#define ISNAN2(val) isnan(val)\n-#define ISNAN2L(val) isnan(val)\n-\n-#define ISNAN(suff,val) TOKENPASTE(ISNAN2,suff)(val)\n-\n-\n \n /* Generate corresponding I/O format for FMT_G and output.\n    The rules to translate FMT_G to FMT_E or FMT_F from DEC fortran\n@@ -1164,7 +1137,7 @@ OUTPUT_FLOAT_FMT_G(16,L)\n {\\\n     volatile GFC_REAL_ ## x tmp, one = 1.0;\\\n     tmp = * (GFC_REAL_ ## x *)source;\\\n-    if (ISFINITE (y,tmp))\\\n+    if (isfinite (tmp))\\\n       {\\\n \tnprinted = DTOA(y,0,tmp);\\\n \tint e = atoi (&buffer[4]);\\\n@@ -1235,10 +1208,10 @@ determine_en_precision (st_parameter_dt *dtp, const fnode *f,\n {\\\n \tGFC_REAL_ ## x tmp;\\\n \ttmp = * (GFC_REAL_ ## x *)source;\\\n-\tsign_bit = SIGNBIT (y,tmp);\\\n-\tif (!ISFINITE (y,tmp))\\\n+\tsign_bit = signbit (tmp);\\\n+\tif (!isfinite (tmp))\\\n \t  { \\\n-\t    write_infnan (dtp, f, ISNAN (y,tmp), sign_bit);\\\n+\t    write_infnan (dtp, f, isnan (tmp), sign_bit);\\\n \t    return;\\\n \t  }\\\n \ttmp = sign_bit ? -tmp : tmp;\\"}]}