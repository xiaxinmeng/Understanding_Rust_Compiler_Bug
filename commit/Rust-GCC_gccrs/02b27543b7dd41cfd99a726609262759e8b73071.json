{"sha": "02b27543b7dd41cfd99a726609262759e8b73071", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJiMjc1NDNiN2RkNDFjZmQ5OWE3MjY2MDkyNjI3NTllOGI3MzA3MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-11-22T18:54:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-11-22T18:54:36Z"}, "message": "stl_tree.h (_Rb_tree<>::_Rb_tree_impl<, true>): Remove, identical in mainline to the primary template.\n\n2007-11-22  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_tree.h (_Rb_tree<>::_Rb_tree_impl<, true>): Remove,\n\tidentical in mainline to the primary template.\n\nFrom-SVN: r130355", "tree": {"sha": "a85ace31c5bfcc25a9c0a3ca95e1517abbbed4f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a85ace31c5bfcc25a9c0a3ca95e1517abbbed4f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02b27543b7dd41cfd99a726609262759e8b73071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b27543b7dd41cfd99a726609262759e8b73071", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b27543b7dd41cfd99a726609262759e8b73071", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b27543b7dd41cfd99a726609262759e8b73071/comments", "author": null, "committer": null, "parents": [{"sha": "6d1f904c2efb86125ae06ec5ac348a2e55499706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1f904c2efb86125ae06ec5ac348a2e55499706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1f904c2efb86125ae06ec5ac348a2e55499706"}], "stats": {"total": 35, "additions": 5, "deletions": 30}, "files": [{"sha": "943f27c07e8d7251c067a2f4cea078f1b6dd172e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b27543b7dd41cfd99a726609262759e8b73071/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b27543b7dd41cfd99a726609262759e8b73071/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=02b27543b7dd41cfd99a726609262759e8b73071", "patch": "@@ -1,3 +1,8 @@\n+2007-11-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_tree.h (_Rb_tree<>::_Rb_tree_impl<, true>): Remove,\n+\tidentical in mainline to the primary template.\n+\n 2007-11-22  Paolo Carlini  <pcarlini@suse.de>\n \n \t* config/abi/pre/gnu.ver: Adjust new exports for 128-bit long double."}, {"sha": "d922a6db4dddc65fb4d21aa591bbfa48d3a6e39f", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b27543b7dd41cfd99a726609262759e8b73071/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b27543b7dd41cfd99a726609262759e8b73071/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=02b27543b7dd41cfd99a726609262759e8b73071", "patch": "@@ -421,36 +421,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t  }\t    \n \t};\n \n-      // Specialization for _Comparison types that are not capable of\n-      // being base classes / super classes.\n-      template<typename _Key_compare>\n-        struct _Rb_tree_impl<_Key_compare, true> : public _Node_allocator \n-\t{\n-\t  _Key_compare \t\t_M_key_compare;\n-\t  _Rb_tree_node_base \t_M_header;\n-\t  size_type \t\t_M_node_count; // Keeps track of size of tree.\n-\n-\t  _Rb_tree_impl()\n-\t  : _Node_allocator(), _M_key_compare(), _M_header(),\n-\t    _M_node_count(0)\n-\t  { _M_initialize(); }\n-\n-\t  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)\n-\t  : _Node_allocator(__a), _M_key_compare(__comp), _M_header(),\n-\t    _M_node_count(0)\n-\t  { _M_initialize(); }\n-\n-\tprivate:\n-\t  void\n-\t  _M_initialize()\n-\t  {\n-\t    this->_M_header._M_color = _S_red;\n-\t    this->_M_header._M_parent = 0;\n-\t    this->_M_header._M_left = &this->_M_header;\n-\t    this->_M_header._M_right = &this->_M_header;\n-\t  }\t    \n-\t};\n-\n       _Rb_tree_impl<_Compare> _M_impl;\n \n     protected:"}]}