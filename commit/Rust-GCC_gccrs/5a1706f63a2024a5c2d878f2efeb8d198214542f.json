{"sha": "5a1706f63a2024a5c2d878f2efeb8d198214542f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWExNzA2ZjYzYTIwMjRhNWMyZDg3OGYyZWZlYjhkMTk4MjE0NTQyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T08:18:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T08:18:35Z"}, "message": "c++: Fix a -fcompare-debug issue with DEBUG_BEGIN_STMT stmts in STATEMENT_LISTs [PR94272]\n\nThe following testcase FAILs with -fcompare-debug.  The problem is that\nthe C++ FE initially uses IF_STMTs, tcc_statement which default to\nTREE_SIDE_EFFECTS set, but later on is genericized into COND_EXPRs,\ntcc_expression which default to TREE_SIDE_EFFECTS ored from all 3 operands.\nFurthermore, with -g we emit by default DEBUG_BEGIN_STMTs (TREE_SIDE_EFFECTS\nclear) and so end up with a STATEMENT_LIST containing DEBUG_BEGIN_STMT\n+ e.g. the IF_STMT, while with -g0 we would end up with just the IF_STMT\nalone and in that case there is no STATEMENT_LIST wrapping it.\n\nNow, the STATEMENT_LIST has TREE_SIDE_EFFECTS set to match the IF_STMT,\nbut if none of the 3 operands (condition and both branches) have\nTREE_SIDE_EFFECTS, genericize_if_stmt will replace the IF_STMT with\nCOND_EXPR without TREE_SIDE_EFFECTS, but with -g only STATEMENT_LIST\nwrapping it will keep TREE_SIDE_EFFECTS.  Then during gimplification,\nshortcut_cond_expr checks TREE_SIDE_EFFECTS of the operands and as it\nis differennt between -g and -g0, will generate different code.\n\nThe following patch attempts to fix this by clearing TREE_SIDE_EFFECTS\non STATEMENT_LISTs that initially have it set and contain only\nDEBUG_BEGIN_STMT or at most one other statement that lost TREE_SIDE_EFFECTS\nduring the genericization.\n\n2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/94272\n\t* cp-gimplify.c (cp_genericize_r): Handle STATEMENT_LIST.\n\n\t* g++.dg/debug/pr94272.C: New test.", "tree": {"sha": "15b61f1bd3c5c3388f4c53a04c010afe1bb682db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15b61f1bd3c5c3388f4c53a04c010afe1bb682db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a1706f63a2024a5c2d878f2efeb8d198214542f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1706f63a2024a5c2d878f2efeb8d198214542f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a1706f63a2024a5c2d878f2efeb8d198214542f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1706f63a2024a5c2d878f2efeb8d198214542f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9708ca2be40399d6266bc85c99e085e3fe27a809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9708ca2be40399d6266bc85c99e085e3fe27a809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9708ca2be40399d6266bc85c99e085e3fe27a809"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "9ff2525f83dbea385e7d6fc11c89f0de4c3c34d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5a1706f63a2024a5c2d878f2efeb8d198214542f", "patch": "@@ -1,3 +1,8 @@\n+2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94272\n+\t* cp-gimplify.c (cp_genericize_r): Handle STATEMENT_LIST.\n+\n 2020-03-25  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/94265"}, {"sha": "d003f5b7825c5ae1cd99bf9a2c12990363f907ec", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=5a1706f63a2024a5c2d878f2efeb8d198214542f", "patch": "@@ -1754,6 +1754,35 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n       walk_subtrees = 0;\n       break;\n \n+    case STATEMENT_LIST:\n+      if (TREE_SIDE_EFFECTS (stmt))\n+\t{\n+\t  tree_stmt_iterator i;\n+\t  int nondebug_stmts = 0;\n+\t  bool clear_side_effects = true;\n+\t  /* Genericization can clear TREE_SIDE_EFFECTS, e.g. when\n+\t     transforming an IF_STMT into COND_EXPR.  If such stmt\n+\t     appears in a STATEMENT_LIST that contains only that\n+\t     stmt and some DEBUG_BEGIN_STMTs, without -g where the\n+\t     STATEMENT_LIST wouldn't be present at all the resulting\n+\t     expression wouldn't have TREE_SIDE_EFFECTS set, so make sure\n+\t     to clear it even on the STATEMENT_LIST in such cases.  */\n+\t  for (i = tsi_start (stmt); !tsi_end_p (i); tsi_next (&i))\n+\t    {\n+\t      tree t = tsi_stmt (i);\n+\t      if (TREE_CODE (t) != DEBUG_BEGIN_STMT && nondebug_stmts < 2)\n+\t\tnondebug_stmts++;\n+\t      cp_walk_tree (tsi_stmt_ptr (i), cp_genericize_r, data, NULL);\n+\t      if (TREE_CODE (t) != DEBUG_BEGIN_STMT\n+\t\t  && (nondebug_stmts > 1 || TREE_SIDE_EFFECTS (tsi_stmt (i))))\n+\t\tclear_side_effects = false;\n+\t    }\n+\t  if (clear_side_effects)\n+\t    TREE_SIDE_EFFECTS (stmt) = 0;\n+\t  *walk_subtrees = 0;\n+\t}\n+      break;\n+\n     default:\n       if (IS_TYPE_OR_DECL_P (stmt))\n \t*walk_subtrees = 0;"}, {"sha": "6d5c12f20a3fa3705afeb8656e80351be0e00db6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a1706f63a2024a5c2d878f2efeb8d198214542f", "patch": "@@ -1,3 +1,8 @@\n+2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94272\n+\t* g++.dg/debug/pr94272.C: New test.\n+\n 2020-03-26  Felix Yang  <felix.yang@huawei.com>\n \n \tPR tree-optimization/94269"}, {"sha": "78522e00472b2600d933de92927dd169281aeb6d", "filename": "gcc/testsuite/g++.dg/debug/pr94272.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94272.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1706f63a2024a5c2d878f2efeb8d198214542f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94272.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94272.C?ref=5a1706f63a2024a5c2d878f2efeb8d198214542f", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/94272\n+// { dg-do compile }\n+// { dg-options \"-O2 -fnon-call-exceptions -fcompare-debug\" }\n+\n+int *c, d, *e;\n+\n+void\n+foo ()\n+{\n+  if (c && d)\n+    ;\n+  else if (*e)\n+    ;\n+}"}]}