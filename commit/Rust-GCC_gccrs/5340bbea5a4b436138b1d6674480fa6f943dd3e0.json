{"sha": "5340bbea5a4b436138b1d6674480fa6f943dd3e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM0MGJiZWE1YTRiNDM2MTM4YjFkNjY3NDQ4MGZhNmY5NDNkZDNlMA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2004-03-09T01:53:28Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-03-09T01:53:28Z"}, "message": "Makefile.in (site.exp): Add libiconv variable definition.\n\n2004-03-08  Eric Christopher  <echristo@redhat.com>\n\n\t* Makefile.in (site.exp): Add libiconv variable definition.\n\n2004-03-08  Eric Christopher  <echristo@redhat.com>\n\n\t* * lib/target-supports.exp: Enable libiconv in test\n\tcompilation.  Fix up error checking.\n\nFrom-SVN: r79148", "tree": {"sha": "dd61d8b0a4beeb412cfbc7dc002567f830604ca6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd61d8b0a4beeb412cfbc7dc002567f830604ca6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5340bbea5a4b436138b1d6674480fa6f943dd3e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5340bbea5a4b436138b1d6674480fa6f943dd3e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5340bbea5a4b436138b1d6674480fa6f943dd3e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5340bbea5a4b436138b1d6674480fa6f943dd3e0/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3beb1315569f7f73cdec685d7d656c30f022f1c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3beb1315569f7f73cdec685d7d656c30f022f1c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3beb1315569f7f73cdec685d7d656c30f022f1c6"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "9bce15759e2a2db68698ec43cd1a43bbbacdae6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5340bbea5a4b436138b1d6674480fa6f943dd3e0", "patch": "@@ -1,3 +1,7 @@\n+2004-03-08  Eric Christopher  <echristo@redhat.com>\n+\n+\t* Makefile.in (site.exp): Add libiconv variable definition.\n+\n 2004-03-09  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* configure: Regenerate for config/accross.m4 correction.\n@@ -45,7 +49,7 @@\n \tand MASK_STRING.\n \n 2004-03-07  Aldy Hernandez  <aldyh@redhat.com>\n- \n+\n         * config/rs6000/rs6000.md (ashrdi3): Do not call ashrdi3_no_power\n         for little endian.\n         (\"ashrdi3_no_power\"): Disable for little endian."}, {"sha": "a3eb664587c97bfa1920631a94ed1fb0e5f9dcc9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5340bbea5a4b436138b1d6674480fa6f943dd3e0", "patch": "@@ -90,7 +90,7 @@ objdir = @objdir@\n # Directory where sources are, from where we are.\n VPATH = @srcdir@\n \n-# We define a vpath for the sources of the .texi files here because they \n+# We define a vpath for the sources of the .texi files here because they\n # are split between multiple directories and we would rather use one implicit\n # pattern rule for everything.\n # This vpath could be extended within the Make-lang fragments.\n@@ -1288,7 +1288,7 @@ gcc.srcextra: c-parse.y c-parse.c gengtype-lex.c gengtype-yacc.c gengtype-yacc.h\n \t-cp -p $^ $(srcdir)\n \n c-parse.c: c-parse.y\n-\t-$(BISON) $(BISONFLAGS) -o $@ $< \n+\t-$(BISON) $(BISONFLAGS) -o $@ $<\n \n c-parse.y: c-parse.in\n \techo '/*WARNING: This file is automatically generated!*/' >tmp-c-parse.y\n@@ -2670,7 +2670,7 @@ TEXI_GCCINSTALL_FILES = install.texi install-old.texi fdl.texi\n \n TEXI_CPPINT_FILES = cppinternals.texi\n \n-# The *.1, *.7, *.info, and *.dvi files are being generated from implicit \n+# The *.1, *.7, *.info, and *.dvi files are being generated from implicit\n # patterns.  To use them, put each of the specific targets with its\n # specific dependencies but no build commands.\n \n@@ -2709,7 +2709,7 @@ doc/gccinstall.dvi: $(TEXI_GCCINSTALL_FILES)\n \n MANFILES = doc/gcov.1 doc/cpp.1 doc/gcc.1 doc/gfdl.7 doc/gpl.7 doc/fsf-funding.7\n \n-generated-manpages: man \n+generated-manpages: man\n \n man: $(MANFILES) lang.man @GENINSRC@ srcman lang.srcman\n \n@@ -2939,7 +2939,7 @@ install-common: native $(EXTRA_PARTS) lang.install-common installdirs\n \tfi\n \t$(INSTALL_SCRIPT) gccbug $(DESTDIR)$(bindir)/$(GCCBUG_INSTALL_NAME)\n \n-# Install the driver program as $(target_noncanonical)-gcc, \n+# Install the driver program as $(target_noncanonical)-gcc,\n # $(target_noncanonical)-gcc-$(version)\n # and also as either gcc (if native) or $(gcc_tooldir)/bin/gcc.\n install-driver: installdirs xgcc$(exeext)\n@@ -3003,17 +3003,17 @@ $(DESTDIR)$(man7dir)/%$(man7ext): doc/%.7\n \n $(DESTDIR)$(man1dir)/$(GCC_INSTALL_NAME)$(man1ext): doc/gcc.1\n \t-rm -f $@\n-\t-$(INSTALL_DATA) $< $@ \n+\t-$(INSTALL_DATA) $< $@\n \t-chmod a-x $@\n \n $(DESTDIR)$(man1dir)/$(CPP_INSTALL_NAME)$(man1ext): doc/cpp.1\n \t-rm -f $@\n-\t-$(INSTALL_DATA) $< $@ \n+\t-$(INSTALL_DATA) $< $@\n \t-chmod a-x $@\n \n $(DESTDIR)$(man1dir)/$(GCOV_INSTALL_NAME)$(man1ext): doc/gcov.1\n \t-rm -f $@\n-\t-$(INSTALL_DATA) $< $@ \n+\t-$(INSTALL_DATA) $< $@\n \t-chmod a-x $@\n \n # Install the library.\n@@ -3165,6 +3165,7 @@ site.exp: ./config.status Makefile\n \t@echo \"set build_triplet $(build)\" >> ./tmp0\n \t@echo \"set target_triplet $(target)\" >> ./tmp0\n \t@echo \"set target_alias $(target_noncanonical)\" >> ./tmp0\n+\t@echo \"set libiconv \\\"$(LIBICONV)\\\"\" >> ./tmp0\n # CFLAGS is set even though it's empty to show we reserve the right to set it.\n \t@echo \"set CFLAGS \\\"\\\"\" >> ./tmp0\n \t@echo \"set CXXFLAGS \\\"\\\"\" >> ./tmp0\n@@ -3365,12 +3366,12 @@ STAGE2_FLAGS_TO_PASS = \\\n \tWERROR=\"@WERROR@\" \\\n \n STAGEPROFILE_FLAGS_TO_PASS = \\\n-\tCFLAGS=\"$(BOOT_CFLAGS) -fprofile-generate\" \n+\tCFLAGS=\"$(BOOT_CFLAGS) -fprofile-generate\"\n \n # Files never linked into the final executable produces warnings about missing\n # profile.\n STAGEFEEDBACK_FLAGS_TO_PASS = \\\n-\tCFLAGS=\"$(BOOT_CFLAGS) -fprofile-use\" \n+\tCFLAGS=\"$(BOOT_CFLAGS) -fprofile-use\"\n \n # Only build the C compiler for stage1, because that is the only one that\n # we can guarantee will build with the native compiler, and also it is the"}, {"sha": "77eb45c9d448d5b76b1d26edbdcff049aa751620", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5340bbea5a4b436138b1d6674480fa6f943dd3e0", "patch": "@@ -1,3 +1,8 @@\n+2004-03-08  Eric Christopher  <echristo@redhat.com>\n+\n+\t* * lib/target-supports.exp: Enable libiconv in test\n+\tcompilation.  Fix up error checking.\n+\n 2004-03-08  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/14289"}, {"sha": "99b418e78a7243a03621992cdb9244d7f3c92741", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5340bbea5a4b436138b1d6674480fa6f943dd3e0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=5340bbea5a4b436138b1d6674480fa6f943dd3e0", "patch": "@@ -216,6 +216,7 @@ proc check_profiling_available { test_what } {\n \n proc check_iconv_available { test_what } {\n     global tool\n+    global libiconv\n \n     set result \"\"\n \n@@ -229,15 +230,19 @@ proc check_iconv_available { test_what } {\n     puts $f \"return 0;\\n}\"\n     close $f\n \n-    set lines [${tool}_target_compile \"tmp.c\" \"tmp.x\" executable \"\"]\n+    set lines [${tool}_target_compile \"tmp.c\" \"tmp.x\" executable \"libs=$libiconv\" ]\n \n-    set result [${tool}_load \"./tmp.x\" \"\" \"\"]\n-    set status [lindex $result 0];\n+    if [string match \"\" $lines] then {\n+\t# No error messages, everything is OK.\n \n-    verbose \"status is <$status>\"\n+\tset result [${tool}_load \"./tmp.x\" \"\" \"\"]\n+\tset status [lindex $result 0];\n \n-    if { $status == \"pass\" } then {\n-\treturn 1\n+\tverbose \"status is <$status>\"\n+\n+\tif { $status == \"pass\" } then {\n+\t    return 1\n+\t}\n     }\n \n     return 0"}]}