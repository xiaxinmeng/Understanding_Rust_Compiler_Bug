{"sha": "b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI3ODMyZWRjZjFhMzQ0YzllMmJhOTRjNjhiMGNlZWYyZDE0MWY3Yg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-09-09T11:29:21Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-09-09T11:29:21Z"}, "message": "[ARM][7/7] Convert FP mnemonics to UAL | f{ld,st}m -> v{ld,st}m\n\n\t* config/arm/arm.md (vfp_pop_multiple_with_writeback): Use vldm\n\tmnemonic instead of fldmfdd.\n\t* config/arm/arm.c (vfp_output_fstmd): Rename to...\n\t(vfp_output_vstmd): ... This.  Convert output to UAL syntax.\n\tOutput vpush when address register is SP.\n\t* config/arm/arm-protos.h (vfp_output_fstmd): Rename to...\n\t(vfp_output_vstmd): ... This.\n\t* config/arm/vfp.md (push_multi_vfp): Update call to\n\tvfp_output_vstmd.\n\nFrom-SVN: r215056", "tree": {"sha": "779c2406d8235b66a51df9d248b7cc62fad824de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/779c2406d8235b66a51df9d248b7cc62fad824de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a1501087f3479efe896c0a608e4705d0d3334ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1501087f3479efe896c0a608e4705d0d3334ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a1501087f3479efe896c0a608e4705d0d3334ec"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "be964cbcfce4aeba590e93637b2724b2b9415bd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "patch": "@@ -1,3 +1,15 @@\n+2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (vfp_pop_multiple_with_writeback): Use vldm\n+\tmnemonic instead of fldmfdd.\n+\t* config/arm/arm.c (vfp_output_fstmd): Rename to...\n+\t(vfp_output_vstmd): ... This.  Convert output to UAL syntax.\n+\tOutput vpush when address register is SP.\n+\t* config/arm/arm-protos.h (vfp_output_fstmd): Rename to...\n+\t(vfp_output_vstmd): ... This.\n+\t* config/arm/vfp.md (push_multi_vfp): Update call to\n+\tvfp_output_vstmd.\n+\n 2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/vfp.md (*movcc_vfp): Use UAL syntax."}, {"sha": "61d7f9d237263b7994a31e8ea9b390a7624e7390", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "patch": "@@ -149,7 +149,7 @@ extern bool arm_is_long_call_p (tree);\n extern int    arm_emit_vector_const (FILE *, rtx);\n extern void arm_emit_fp16_const (rtx c);\n extern const char * arm_output_load_gr (rtx *);\n-extern const char *vfp_output_fstmd (rtx *);\n+extern const char *vfp_output_vstmd (rtx *);\n extern void arm_output_multireg_pop (rtx *, bool, rtx, bool, bool);\n extern void arm_set_return_address (rtx, rtx);\n extern int arm_eliminable_register (rtx);"}, {"sha": "d75ca4293ed21568fc69d554192d7b5cb648ab37", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "patch": "@@ -17630,14 +17630,22 @@ arm_output_multireg_pop (rtx *operands, bool return_pc, rtx cond, bool reverse,\n /* Output the assembly for a store multiple.  */\n \n const char *\n-vfp_output_fstmd (rtx * operands)\n+vfp_output_vstmd (rtx * operands)\n {\n   char pattern[100];\n   int p;\n   int base;\n   int i;\n+  rtx addr_reg = REG_P (XEXP (operands[0], 0))\n+\t\t   ? XEXP (operands[0], 0)\n+\t\t   : XEXP (XEXP (operands[0], 0), 0);\n+  bool push_p =  REGNO (addr_reg) == SP_REGNUM;\n+\n+  if (push_p)\n+    strcpy (pattern, \"vpush%?.64\\t{%P1\");\n+  else\n+    strcpy (pattern, \"vstmdb%?.64\\t%m0!, {%P1\");\n \n-  strcpy (pattern, \"fstmfdd%?\\t%m0!, {%P1\");\n   p = strlen (pattern);\n \n   gcc_assert (REG_P (operands[1]));"}, {"sha": "53235749098c0daf6fc095cb1b78d401551ad29e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "patch": "@@ -10528,7 +10528,7 @@\n     int num_regs = XVECLEN (operands[0], 0);\n     char pattern[100];\n     rtx op_list[2];\n-    strcpy (pattern, \\\"fldmfdd\\\\t\\\");\n+    strcpy (pattern, \\\"vldm\\\\t\\\");\n     strcat (pattern, reg_names[REGNO (SET_DEST (XVECEXP (operands[0], 0, 0)))]);\n     strcat (pattern, \\\"!, {\\\");\n     op_list[0] = XEXP (XVECEXP (operands[0], 0, 1), 0);"}, {"sha": "a2034498518c0e5315c11cb5d8877a7d480ef5d9", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b27832edcf1a344c9e2ba94c68b0ceef2d141f7b/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=b27832edcf1a344c9e2ba94c68b0ceef2d141f7b", "patch": "@@ -1285,7 +1285,7 @@\n \t  (unspec:BLK [(match_operand:DF 1 \"vfp_register_operand\" \"\")]\n \t\t      UNSPEC_PUSH_MULT))])]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"* return vfp_output_fstmd (operands);\"\n+  \"* return vfp_output_vstmd (operands);\"\n   [(set_attr \"type\" \"f_stored\")]\n )\n "}]}