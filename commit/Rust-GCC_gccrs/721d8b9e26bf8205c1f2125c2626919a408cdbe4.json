{"sha": "721d8b9e26bf8205c1f2125c2626919a408cdbe4", "node_id": "C_kwDOANBUbNoAKDcyMWQ4YjllMjZiZjgyMDVjMWYyMTI1YzI2MjY5MTlhNDA4Y2RiZTQ", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-11-23T16:51:38Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-11-23T16:51:38Z"}, "message": "Fortran: fix scalarization for intrinsic LEN_TRIM with present KIND argument\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/87711\n\tPR fortran/87851\n\t* trans-array.c (arg_evaluated_for_scalarization): Add LEN_TRIM to\n\tlist of intrinsics for which an optional KIND argument needs to be\n\tremoved before scalarization.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/87711\n\tPR fortran/87851\n\t* gfortran.dg/len_trim.f90: New test.", "tree": {"sha": "475dbb2f16e80450852f47254c88354701bb7ff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/475dbb2f16e80450852f47254c88354701bb7ff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/721d8b9e26bf8205c1f2125c2626919a408cdbe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721d8b9e26bf8205c1f2125c2626919a408cdbe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721d8b9e26bf8205c1f2125c2626919a408cdbe4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721d8b9e26bf8205c1f2125c2626919a408cdbe4/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46d3cfd29dc701e1e0d18b0380d6299fce7944f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d3cfd29dc701e1e0d18b0380d6299fce7944f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d3cfd29dc701e1e0d18b0380d6299fce7944f2"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "238b1b7238515a26e8c516ba7a7c8bca36662061", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721d8b9e26bf8205c1f2125c2626919a408cdbe4/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721d8b9e26bf8205c1f2125c2626919a408cdbe4/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=721d8b9e26bf8205c1f2125c2626919a408cdbe4", "patch": "@@ -11499,6 +11499,7 @@ arg_evaluated_for_scalarization (gfc_intrinsic_sym *function,\n       switch (function->id)\n \t{\n \t  case GFC_ISYM_INDEX:\n+\t  case GFC_ISYM_LEN_TRIM:\n \t    if (strcmp (\"kind\", gfc_dummy_arg_get_name (*dummy_arg)) == 0)\n \t      return false;\n \t  /* Fallthrough.  */"}, {"sha": "2252b81f08467272f62de482204af2709583857c", "filename": "gcc/testsuite/gfortran.dg/len_trim.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721d8b9e26bf8205c1f2125c2626919a408cdbe4/gcc%2Ftestsuite%2Fgfortran.dg%2Flen_trim.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721d8b9e26bf8205c1f2125c2626919a408cdbe4/gcc%2Ftestsuite%2Fgfortran.dg%2Flen_trim.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flen_trim.f90?ref=721d8b9e26bf8205c1f2125c2626919a408cdbe4", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! { dg-options \"-O -Wall -Wconversion-extra -fdump-tree-original\" }\n+! { dg-final { scan-tree-dump-not \"_gfortran_stop_numeric\" \"original\" } }\n+! PR fortran/87711 - ICE in gfc_trans_transfer\n+! PR fortran/87851 - return type for len_trim\n+\n+program main\n+  implicit none\n+  character(3), parameter :: a(1) = 'aa'\n+  character(3)            :: b    = \"bb\"\n+  character(3)            :: c(1) = 'cc'\n+  integer(4), parameter   :: l4(1) = len_trim (a, kind=4)\n+  integer(8), parameter   :: l8(1) = len_trim (a, kind=8)\n+  integer                 :: kk(1) = len_trim (a)\n+  integer(4)              :: mm(1) = len_trim (a, kind=4)\n+  integer(8)              :: nn(1) = len_trim (a, kind=8)\n+  kk = len_trim (a)\n+  mm = len_trim (a, kind=4)\n+  nn = len_trim (a, kind=8)\n+  kk = len_trim ([b])\n+  mm = len_trim ([b],kind=4)\n+  nn = len_trim ([b],kind=8)\n+  kk = len_trim (c)\n+  mm = len_trim (c, kind=4)\n+  nn = len_trim (c, kind=8)\n+  if (any (l4 /= 2_4) .or. any (l8 /= 2_8)) stop 1\n+end program main"}]}