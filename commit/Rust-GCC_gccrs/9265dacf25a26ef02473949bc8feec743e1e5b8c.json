{"sha": "9265dacf25a26ef02473949bc8feec743e1e5b8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2NWRhY2YyNWEyNmVmMDI0NzM5NDliYzhmZWVjNzQzZTFlNWI4Yw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-10-10T23:18:32Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-10T23:18:32Z"}, "message": "flow.c (find_basic_blocks): Delte \"live_reachable_p\" argument.\n\n        * flow.c (find_basic_blocks): Delte \"live_reachable_p\" argument.\n        (find_basic_blocks_1): Similarly.\n        * output.h (find_basic_blocks): Fix prototype.\n        * gcse.c, toplev.c: Don't pass \"live_reachable_p\" argument to\n        find_basic_blocks anymore.\n\nFrom-SVN: r22979", "tree": {"sha": "aa526f8221b6bf5dce3a4b3b7cb94f5962e87891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa526f8221b6bf5dce3a4b3b7cb94f5962e87891"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9265dacf25a26ef02473949bc8feec743e1e5b8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9265dacf25a26ef02473949bc8feec743e1e5b8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9265dacf25a26ef02473949bc8feec743e1e5b8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9265dacf25a26ef02473949bc8feec743e1e5b8c/comments", "author": null, "committer": null, "parents": [{"sha": "a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a86d864c41d8dc8bdcbcf87cdfa49185319fd0e5"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "1cd2d8a32bd2ac38d9bf0f65e4249a771fdd61ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9265dacf25a26ef02473949bc8feec743e1e5b8c", "patch": "@@ -1,3 +1,11 @@\n+Sun Oct 11 00:15:29 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* flow.c (find_basic_blocks): Delte \"live_reachable_p\" argument.\n+\t(find_basic_blocks_1): Similarly.\n+\t* output.h (find_basic_blocks): Fix prototype.\n+\t* gcse.c, toplev.c: Don't pass \"live_reachable_p\" argument to\n+\tfind_basic_blocks anymore.\n+\n Sat Oct 10 22:00:34 1998  Richard Henderson  <rth@cygnus.com>\n \n         * basic-block.h (EXECUTE_IF_SET_IN_SBITMAP): New macro."}, {"sha": "35a43cd8932e2ca300b9b16bef17c1bb4fbad38b", "filename": "gcc/flow.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=9265dacf25a26ef02473949bc8feec743e1e5b8c", "patch": "@@ -298,11 +298,10 @@ static void count_reg_references\tPROTO ((rtx));\n    information to be inaccurate and not suitable for passes like GCSE.  */\n \n void\n-find_basic_blocks (f, nregs, file, live_reachable_p)\n+find_basic_blocks (f, nregs, file)\n      rtx f;\n      int nregs;\n      FILE *file;\n-     int live_reachable_p;\n {\n   register rtx insn;\n   register int i;\n@@ -402,7 +401,7 @@ find_basic_blocks (f, nregs, file, live_reachable_p)\n   uid_volatile = (char *) xmalloc (max_uid_for_flow + 1);\n   bzero (uid_volatile, max_uid_for_flow + 1);\n \n-  find_basic_blocks_1 (f, nonlocal_label_list, live_reachable_p);\n+  find_basic_blocks_1 (f, nonlocal_label_list);\n }\n \n /* For communication between find_basic_blocks_1 and its subroutines.  */\n@@ -436,9 +435,8 @@ static rtx nonlocal_label_list;\n    information to be inaccurate and not suitable for passes like GCSE.  */\n \n static void\n-find_basic_blocks_1 (f, nonlocal_labels, live_reachable_p)\n+find_basic_blocks_1 (f, nonlocal_labels)\n      rtx f, nonlocal_labels;\n-     int live_reachable_p;\n {\n   register rtx insn;\n   register int i;"}, {"sha": "cffb94e31f0e95c011fe241f4450bdbe13ecfdfd", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=9265dacf25a26ef02473949bc8feec743e1e5b8c", "patch": "@@ -669,7 +669,7 @@ gcse_main (f, file)\n   debug_stderr = stderr;\n \n   max_gcse_regno = max_reg_num ();\n-  find_basic_blocks (f, max_gcse_regno, file, 0);\n+  find_basic_blocks (f, max_gcse_regno, file);\n \n   /* Return if there's nothing to do.  */\n   if (n_basic_blocks <= 1)"}, {"sha": "06d5204c7f37d8f9c8c16573f5e00b0b1a5a0045", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=9265dacf25a26ef02473949bc8feec743e1e5b8c", "patch": "@@ -128,7 +128,7 @@ extern void allocate_for_life_analysis\tPROTO((void));\n extern int regno_uninitialized\t\tPROTO((int));\n extern int regno_clobbered_at_setjmp\tPROTO((int));\n extern void dump_flow_info\t\tPROTO((FILE *));\n-extern void find_basic_blocks         PROTO((rtx, int, FILE *, int));\n+extern void find_basic_blocks         PROTO((rtx, int, FILE *));\n extern void free_basic_block_vars     PROTO((int));\n extern void set_block_num             PROTO((rtx, int));\n extern void life_analysis             PROTO((rtx, int, FILE *));"}, {"sha": "97ee2fa63b35c09e7a6297fe5d375a1453913ccb", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9265dacf25a26ef02473949bc8feec743e1e5b8c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=9265dacf25a26ef02473949bc8feec743e1e5b8c", "patch": "@@ -3649,7 +3649,7 @@ rest_of_compilation (decl)\n       TIMEVAR\n \t(flow_time,\n \t {\n-\t   find_basic_blocks (insns, max_reg_num (), rtl_dump_file, 1);\n+\t   find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n \t   life_analysis (insns, max_reg_num (), rtl_dump_file);\n \t });\n "}]}