{"sha": "fc1a202ca60def4894f2deeda8ae184527ee897e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMxYTIwMmNhNjBkZWY0ODk0ZjJkZWVkYThhZTE4NDUyN2VlODk3ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-02T10:54:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-02T10:54:10Z"}, "message": "re PR c++/91606 (Optimization leads to invalid code)\n\n2019-10-02  Richard Biener  <rguenther@suse.de>\n\n\tPR c++/91606\n\t* decl.c (build_ptrmemfunc_type): Mark pointer-to-member\n\tfat pointer structure members as DECL_NONADDRESSABLE_P.\n\n\t* g++.dg/torture/pr91606.C: New testcase.\n\nFrom-SVN: r276448", "tree": {"sha": "5d7cea1fdfcc3291fa32eb81f23a31f9f7618fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d7cea1fdfcc3291fa32eb81f23a31f9f7618fc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc1a202ca60def4894f2deeda8ae184527ee897e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1a202ca60def4894f2deeda8ae184527ee897e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1a202ca60def4894f2deeda8ae184527ee897e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1a202ca60def4894f2deeda8ae184527ee897e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba045eb2297e8e51c7e99c2b2650f32cb642d209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba045eb2297e8e51c7e99c2b2650f32cb642d209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba045eb2297e8e51c7e99c2b2650f32cb642d209"}], "stats": {"total": 122, "additions": 122, "deletions": 0}, "files": [{"sha": "bac74fef422c962419b92634461fe22e86d052a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fc1a202ca60def4894f2deeda8ae184527ee897e", "patch": "@@ -1,3 +1,9 @@\n+2019-10-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c++/91606\n+\t* decl.c (build_ptrmemfunc_type): Mark pointer-to-member\n+\tfat pointer structure members as DECL_NONADDRESSABLE_P.\n+\n 2019-09-28  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91889 - follow-up fix for DR 2352."}, {"sha": "c96294feb2ed1c275297246288f46d033ebf6dd7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=fc1a202ca60def4894f2deeda8ae184527ee897e", "patch": "@@ -9665,10 +9665,12 @@ build_ptrmemfunc_type (tree type)\n   TYPE_PTRMEMFUNC_FLAG (t) = 1;\n \n   field = build_decl (input_location, FIELD_DECL, pfn_identifier, type);\n+  DECL_NONADDRESSABLE_P (field) = 1;\n   fields = field;\n \n   field = build_decl (input_location, FIELD_DECL, delta_identifier, \n \t\t      delta_type_node);\n+  DECL_NONADDRESSABLE_P (field) = 1;\n   DECL_CHAIN (field) = fields;\n   fields = field;\n "}, {"sha": "3fbed65d3c16779e4685cb0e2d76d9731c40ffb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc1a202ca60def4894f2deeda8ae184527ee897e", "patch": "@@ -1,3 +1,8 @@\n+2019-10-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c++/91606\n+\t* g++.dg/torture/pr91606.C: New testcase.\n+\n 2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* gfortran.dg/goacc/asyncwait-1.f95: Handle new error message."}, {"sha": "37a05a5e3a5fa82413d1800a66608c9bc7fbce62", "filename": "gcc/testsuite/g++.dg/torture/pr91606.C", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr91606.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1a202ca60def4894f2deeda8ae184527ee897e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr91606.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr91606.C?ref=fc1a202ca60def4894f2deeda8ae184527ee897e", "patch": "@@ -0,0 +1,109 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-fstrict-aliasing\" } */\n+\n+#include <cstdlib>\n+#include <array>\n+#include <type_traits>\n+\n+template <typename T1, typename T2>\n+struct variant\n+{\n+  constexpr variant(T1 arg)\n+      : f1(arg),\n+      index(0)\n+  {}\n+\n+  constexpr variant(T2 arg)\n+      : f2(arg),\n+      index(1)\n+  {}\n+\n+  union\n+    {\n+      T1 f1;\n+      T2 f2;\n+    };\n+  std::size_t index = 0;\n+};\n+\n+template <typename T1, typename T2>\n+constexpr const T1* get_if(const variant<T1, T2>* v)\n+{\n+  if (v->index != 0)\n+    {\n+      return nullptr;\n+    }\n+  return &v->f1;\n+}\n+\n+template <typename T2, typename T1>\n+constexpr const T2* get_if(const variant<T1, T2>* v)\n+{\n+  if (v->index != 1)\n+    {\n+      return nullptr;\n+    }\n+  return &v->f2;\n+}\n+\n+template <typename T, size_t N>\n+struct my_array\n+{\n+  constexpr const T* begin() const\n+    {\n+      return data;\n+    }\n+\n+  constexpr const T* end() const\n+    {\n+      return data + N;\n+    }\n+\n+  T data[N];\n+};\n+\n+template <typename ...Ts>\n+constexpr auto get_array_of_variants(Ts ...ptrs)\n+{\n+  return std::array<variant<std::decay_t<Ts>...>, sizeof...(Ts)>{ ptrs... };\n+}\n+\n+template <typename T>\n+constexpr auto get_member_functions();\n+\n+template <typename Member, typename Class>\n+constexpr int getFuncId(Member (Class::*memFuncPtr))\n+{\n+  int idx = 0u;\n+  for (auto &anyFunc : get_member_functions<Class>())\n+    {\n+      if (auto *specificFunc = get_if<Member (Class::*)>(&anyFunc))\n+\t{\n+\t  if (*specificFunc == memFuncPtr)\n+\t    {\n+\t      return idx;\n+\t    }\n+\t}\n+      ++idx;\n+    }\n+  std::abort();\n+}\n+\n+struct MyStruct\n+{\n+  void fun1(int /*a*/) {}\n+\n+  int fun2(char /*b*/, short /*c*/, bool /*d*/) { return 0; }\n+\n+};\n+\n+template <>\n+constexpr auto get_member_functions<MyStruct>()\n+{\n+  return get_array_of_variants(&MyStruct::fun1, &MyStruct::fun2);\n+}\n+\n+int main()\n+{\n+  return getFuncId(&MyStruct::fun1);\n+}"}]}