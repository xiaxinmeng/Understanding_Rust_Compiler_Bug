{"sha": "7b32a8f61f4b3a34cacbd029e85220787eada240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzMmE4ZjYxZjRiM2EzNGNhY2JkMDI5ZTg1MjIwNzg3ZWFkYTI0MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-01-19T21:00:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-01-19T21:00:53Z"}, "message": "re PR target/78478 (Compile Error for i386-rtems)\n\n\tPR target/78478\n\t* config/ax_check_define.m4: New file.\n\nlibgfortran/ChangeLog:\n\n\tPR target/78478\n\t* acinclude.m4: Include ../config/ax_check_define.m4\n\t* configure.ac: Check if _SOFT_FLOAT is defined.\n\t* configure.host (i?86 | x86_64): Use fpu-generic when\n\thave_soft_float is set.\n\t* configure: Regenerate.\n\nFrom-SVN: r244651", "tree": {"sha": "cacf5acabfee467ac9b6420c71be5a7c048e6fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cacf5acabfee467ac9b6420c71be5a7c048e6fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b32a8f61f4b3a34cacbd029e85220787eada240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b32a8f61f4b3a34cacbd029e85220787eada240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b32a8f61f4b3a34cacbd029e85220787eada240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b32a8f61f4b3a34cacbd029e85220787eada240/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ade9945a07c47abf2d1d5ad3a5de504e9f37b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ade9945a07c47abf2d1d5ad3a5de504e9f37b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ade9945a07c47abf2d1d5ad3a5de504e9f37b73"}], "stats": {"total": 153, "additions": 152, "deletions": 1}, "files": [{"sha": "a95d6516871a6cc85bef47684269d123e39a001d", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b32a8f61f4b3a34cacbd029e85220787eada240/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b32a8f61f4b3a34cacbd029e85220787eada240/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7b32a8f61f4b3a34cacbd029e85220787eada240", "patch": "@@ -1,3 +1,8 @@\n+2017-01-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/78478\n+\t* config/ax_check_define.m4: New file.\n+\n 2017-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/79046"}, {"sha": "4bc694861c075c07432669baf20215bc4fe36e22", "filename": "config/ax_check_define.m4", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b32a8f61f4b3a34cacbd029e85220787eada240/config%2Fax_check_define.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b32a8f61f4b3a34cacbd029e85220787eada240/config%2Fax_check_define.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fax_check_define.m4?ref=7b32a8f61f4b3a34cacbd029e85220787eada240", "patch": "@@ -0,0 +1,92 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_check_define.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AC_CHECK_DEFINE([symbol], [ACTION-IF-FOUND], [ACTION-IF-NOT])\n+#   AX_CHECK_DEFINE([includes],[symbol], [ACTION-IF-FOUND], [ACTION-IF-NOT])\n+#\n+# DESCRIPTION\n+#\n+#   Complements AC_CHECK_FUNC but it does not check for a function but for a\n+#   define to exist. Consider a usage like:\n+#\n+#    AC_CHECK_DEFINE(__STRICT_ANSI__, CFLAGS=\"$CFLAGS -D_XOPEN_SOURCE=500\")\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#\n+#   This program is free software; you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation; either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 8\n+\n+AU_ALIAS([AC_CHECK_DEFINED], [AC_CHECK_DEFINE])\n+AC_DEFUN([AC_CHECK_DEFINE],[\n+AS_VAR_PUSHDEF([ac_var],[ac_cv_defined_$1])dnl\n+AC_CACHE_CHECK([for $1 defined], ac_var,\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[\n+  #ifdef $1\n+  int ok;\n+  #else\n+  choke me\n+  #endif\n+]])],[AS_VAR_SET(ac_var, yes)],[AS_VAR_SET(ac_var, no)]))\n+AS_IF([test AS_VAR_GET(ac_var) != \"no\"], [$2], [$3])dnl\n+AS_VAR_POPDEF([ac_var])dnl\n+])\n+\n+AU_ALIAS([AX_CHECK_DEFINED], [AX_CHECK_DEFINE])\n+AC_DEFUN([AX_CHECK_DEFINE],[\n+AS_VAR_PUSHDEF([ac_var],[ac_cv_defined_$2_$1])dnl\n+AC_CACHE_CHECK([for $2 defined in $1], ac_var,\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <$1>]], [[\n+  #ifdef $2\n+  int ok;\n+  #else\n+  choke me\n+  #endif\n+]])],[AS_VAR_SET(ac_var, yes)],[AS_VAR_SET(ac_var, no)]))\n+AS_IF([test AS_VAR_GET(ac_var) != \"no\"], [$3], [$4])dnl\n+AS_VAR_POPDEF([ac_var])dnl\n+])\n+\n+AC_DEFUN([AX_CHECK_FUNC],\n+[AS_VAR_PUSHDEF([ac_var], [ac_cv_func_$2])dnl\n+AC_CACHE_CHECK([for $2], ac_var,\n+dnl AC_LANG_FUNC_LINK_TRY\n+[AC_LINK_IFELSE([AC_LANG_PROGRAM([$1\n+                #undef $2\n+                char $2 ();],[\n+                char (*f) () = $2;\n+                return f != $2; ])],\n+                [AS_VAR_SET(ac_var, yes)],\n+                [AS_VAR_SET(ac_var, no)])])\n+AS_IF([test AS_VAR_GET(ac_var) = yes], [$3], [$4])dnl\n+AS_VAR_POPDEF([ac_var])dnl\n+])# AC_CHECK_FUNC"}, {"sha": "ad4f65b7fb230764a1c57a6fec89fc4067ef88dd", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=7b32a8f61f4b3a34cacbd029e85220787eada240", "patch": "@@ -1,3 +1,12 @@\n+2017-01-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/78478\n+\t* acinclude.m4: Include ../config/ax_check_define.m4\n+\t* configure.ac: Check if _SOFT_FLOAT is defined.\n+\t* configure.host (i?86 | x86_64): Use fpu-generic when\n+\thave_soft_float is set.\n+\t* configure: Regenerate.\n+\n 2017-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/79127"}, {"sha": "ceb80a12a18061c231d1c7c94a8f77ec4be4092f", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=7b32a8f61f4b3a34cacbd029e85220787eada240", "patch": "@@ -1,6 +1,7 @@\n m4_include(../config/acx.m4)\n m4_include(../config/no-executables.m4)\n m4_include(../config/math.m4)\n+m4_include(../config/ax_check_define.m4)\n \n dnl Check that we have a working GNU Fortran compiler\n AC_DEFUN([LIBGFOR_WORKING_GFORTRAN], ["}, {"sha": "81238fcb79c6aed7aa24ecb4d9b3c0d9751176e9", "filename": "libgfortran/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=7b32a8f61f4b3a34cacbd029e85220787eada240", "patch": "@@ -25822,6 +25822,43 @@ $as_echo \"#define HAVE_FP_ENABLE 1\" >>confdefs.h\n fi\n \n \n+# Check if _SOFT_FLOAT is defined\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for _SOFT_FLOAT defined\" >&5\n+$as_echo_n \"checking for _SOFT_FLOAT defined... \" >&6; }\n+if test \"${ac_cv_defined__SOFT_FLOAT+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  #ifdef _SOFT_FLOAT\n+  int ok;\n+  #else\n+  choke me\n+  #endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_defined__SOFT_FLOAT=yes\n+else\n+  ac_cv_defined__SOFT_FLOAT=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_defined__SOFT_FLOAT\" >&5\n+$as_echo \"$ac_cv_defined__SOFT_FLOAT\" >&6; }\n+if test $ac_cv_defined__SOFT_FLOAT != \"no\"; then :\n+  have_soft_float=yes\n+fi\n+\n # Runs configure.host to set up necessary host-dependent shell variables.\n # We then display a message about it, and propagate them through the\n # build chain."}, {"sha": "37b12d2998f433d163fafb9fe74c0b7154b7b3b5", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=7b32a8f61f4b3a34cacbd029e85220787eada240", "patch": "@@ -556,6 +556,9 @@ AC_CHECK_FUNC([fpresetsticky],[have_fpresetsticky=yes AC_DEFINE([HAVE_FPRESETSTI\n AC_CHECK_FUNC([fp_trap],[have_fp_trap=yes AC_DEFINE([HAVE_FP_TRAP],[1],[fp_trap is present])])\n AC_CHECK_FUNC([fp_enable],[have_fp_enable=yes AC_DEFINE([HAVE_FP_ENABLE],[1],[fp_enable is present])])\n \n+# Check if _SOFT_FLOAT is defined\n+AC_CHECK_DEFINE([_SOFT_FLOAT],[have_soft_float=yes])\n+\n # Runs configure.host to set up necessary host-dependent shell variables.\n # We then display a message about it, and propagate them through the\n # build chain."}, {"sha": "5824f253e2f18ea7a019256d8ca1c54b950aa5a3", "filename": "libgfortran/configure.host", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b32a8f61f4b3a34cacbd029e85220787eada240/libgfortran%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.host?ref=7b32a8f61f4b3a34cacbd029e85220787eada240", "patch": "@@ -40,7 +40,11 @@ fi\n # the x86 denormal exception.\n case \"${host_cpu}\" in\n   i?86 | x86_64)\n-    fpu_host='fpu-387'\n+    if test \"x${have_soft_float}\" = \"xyes\"; then\n+      fpu_host='fpu-generic'\n+    else\n+      fpu_host='fpu-387'\n+    fi\n     ieee_support='yes'\n     ;;\n esac"}]}