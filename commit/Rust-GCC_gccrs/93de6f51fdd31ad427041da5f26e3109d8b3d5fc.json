{"sha": "93de6f51fdd31ad427041da5f26e3109d8b3d5fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkZTZmNTFmZGQzMWFkNDI3MDQxZGE1ZjI2ZTMxMDlkOGIzZDVmYw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T10:33:57Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T10:33:57Z"}, "message": "definitions in config/alpha/alpha.h config/arm/aout.h (oops, missed):\n\nChanges add TABs on either or both sides, covering start of line,\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36613", "tree": {"sha": "783618e3c58a533935fe820506d8ea500a09218c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783618e3c58a533935fe820506d8ea500a09218c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93de6f51fdd31ad427041da5f26e3109d8b3d5fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93de6f51fdd31ad427041da5f26e3109d8b3d5fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93de6f51fdd31ad427041da5f26e3109d8b3d5fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93de6f51fdd31ad427041da5f26e3109d8b3d5fc/comments", "author": null, "committer": null, "parents": [{"sha": "471b6f1be0ef3538555e4f2bc01a0e6d8ce335bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/471b6f1be0ef3538555e4f2bc01a0e6d8ce335bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/471b6f1be0ef3538555e4f2bc01a0e6d8ce335bf"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "092e62e01ebc035523d925ecb2189ea2ba335cd7", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93de6f51fdd31ad427041da5f26e3109d8b3d5fc/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93de6f51fdd31ad427041da5f26e3109d8b3d5fc/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=93de6f51fdd31ad427041da5f26e3109d8b3d5fc", "patch": "@@ -1948,15 +1948,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define ASM_APP_OFF \"\"\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before read-only data.  */\n \n-#define READONLY_DATA_SECTION_ASM_OP \".rdata\"\n+#define READONLY_DATA_SECTION_ASM_OP \"\\t.rdata\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* Define an extra section for read-only data, a routine to enter it, and\n    indicate that it is for read-only data.\n@@ -2158,9 +2158,9 @@ literal_section ()\t\t\t\t\t\t\\\n   while (0)\n \n /* To get unaligned data, we have to turn off auto alignment.  */\n-#define UNALIGNED_SHORT_ASM_OP\t\t\".align 0\\n\\t.word\"\n-#define UNALIGNED_INT_ASM_OP\t\t\".align 0\\n\\t.long\"\n-#define UNALIGNED_DOUBLE_INT_ASM_OP\t\".align 0\\n\\t.quad\"\n+#define UNALIGNED_SHORT_ASM_OP\t\t\"\\t.align 0\\n\\t.word\\t\"\n+#define UNALIGNED_INT_ASM_OP\t\t\"\\t.align 0\\n\\t.long\\t\"\n+#define UNALIGNED_DOUBLE_INT_ASM_OP\t\"\\t.align 0\\n\\t.quad\\t\"\n \n /* This is how to output an insn to push a register on the stack.\n    It need not be very fast code.  */\n@@ -2441,9 +2441,9 @@ extern long alpha_auto_offset;\n    that the ALPHA assembler does not choke.  The mips-tfile program\n    will correctly put the stab into the object file.  */\n \n-#define ASM_STABS_OP\t((TARGET_GAS) ? \".stabs\" : \" #.stabs\")\n-#define ASM_STABN_OP\t((TARGET_GAS) ? \".stabn\" : \" #.stabn\")\n-#define ASM_STABD_OP\t((TARGET_GAS) ? \".stabd\" : \" #.stabd\")\n+#define ASM_STABS_OP\t((TARGET_GAS) ? \"\\t.stabs\\t\" : \" #.stabs\\t\")\n+#define ASM_STABN_OP\t((TARGET_GAS) ? \"\\t.stabn\\t\" : \" #.stabn\\t\")\n+#define ASM_STABD_OP\t((TARGET_GAS) ? \"\\t.stabd\\t\" : \" #.stabd\\t\")\n \n /* Forward references to tags are allowed.  */\n #define SDB_ALLOW_FORWARD_REFERENCES"}, {"sha": "d270f85fe49a71d036dd1f5e2e3aa87cf243c54a", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93de6f51fdd31ad427041da5f26e3109d8b3d5fc/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93de6f51fdd31ad427041da5f26e3109d8b3d5fc/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=93de6f51fdd31ad427041da5f26e3109d8b3d5fc", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for ARM with a.out\n-   Copyright (C) 1995 - 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1995 - 2000 Free Software Foundation, Inc.\n    Contributed by Richard Earnshaw (rearnsha@armltd.co.uk).\n    \n This file is part of GNU CC.\n@@ -45,9 +45,9 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n /* Switch to the text or data segment.  */\n-#define TEXT_SECTION_ASM_OP  \t\".text\"\n-#define DATA_SECTION_ASM_OP  \t\".data\"\n-#define BSS_SECTION_ASM_OP   \t\".bss\"\n+#define TEXT_SECTION_ASM_OP  \t\"\\t.text\"\n+#define DATA_SECTION_ASM_OP  \t\"\\t.data\"\n+#define BSS_SECTION_ASM_OP   \t\"\\t.bss\"\n \n /* Note: If USER_LABEL_PREFIX or LOCAL_LABEL_PREFIX are changed,\n    make sure that this change is reflected in the function\n@@ -331,6 +331,6 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n /* This works for GAS and some other assemblers.  */\n-#define SET_ASM_OP\t\t\".set\"\n+#define SET_ASM_OP\t\t\"\\t.set\\t\"\n \n #include \"arm.h\""}]}