{"sha": "68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlYWYzNWNkYjg2YmExM2FiYjE0MzMwY2MyYTRhOWIyNjYyNDJlZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-07-20T12:58:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-07-20T12:58:03Z"}, "message": "re PR debug/45003 (VTA issues with sign/zero extension and debug temporaries)\n\n\tPR debug/45003\n\t* cfgexpand.c (expand_debug_expr) <case NOP_EXPR>: Use ZERO_EXTEND\n\tor SIGN_EXTEND depending on TYPE_UNSIGNED of the operand's type\n\tinstead of the result's type.\n\n\t* gcc.dg/guality/pr45003-1.c: New test.\n\nFrom-SVN: r162336", "tree": {"sha": "192f1761f965d8bc4c32c0ae966d552d036bd763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/192f1761f965d8bc4c32c0ae966d552d036bd763"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "720151cabda2a56418b32c1b048de33670641e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720151cabda2a56418b32c1b048de33670641e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/720151cabda2a56418b32c1b048de33670641e45"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "f7598eb8d1ddec089db6fd3c91b38b70b05d517d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "patch": "@@ -1,3 +1,10 @@\n+2010-07-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/45003\n+\t* cfgexpand.c (expand_debug_expr) <case NOP_EXPR>: Use ZERO_EXTEND\n+\tor SIGN_EXTEND depending on TYPE_UNSIGNED of the operand's type\n+\tinstead of the result's type.\n+\n 2010-07-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44977"}, {"sha": "3d7bdd0f81d6f4d4bd408e07066218e172c0b40b", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "patch": "@@ -2427,7 +2427,7 @@ expand_debug_expr (tree exp)\n \t  op0 = simplify_gen_subreg (mode, op0, inner_mode,\n \t\t\t\t     subreg_lowpart_offset (mode,\n \t\t\t\t\t\t\t    inner_mode));\n-\telse if (unsignedp)\n+\telse if (TYPE_UNSIGNED (TREE_TYPE (TREE_OPERAND (exp, 0))))\n \t  op0 = gen_rtx_ZERO_EXTEND (mode, op0);\n \telse\n \t  op0 = gen_rtx_SIGN_EXTEND (mode, op0);"}, {"sha": "391d88f0a7691fd73b066419bb31c81cddfc9795", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "patch": "@@ -1,3 +1,8 @@\n+2010-07-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/45003\n+\t* gcc.dg/guality/pr45003-1.c: New test.\n+\n 2010-07-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44977"}, {"sha": "7cef8f6284c8b814b1fe0cd78a1d9cc6013fb262", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68eaf35cdb86ba13abb14330cc2a4a9b266242ef/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c?ref=68eaf35cdb86ba13abb14330cc2a4a9b266242ef", "patch": "@@ -0,0 +1,31 @@\n+/* PR debug/45003 */\n+/* { dg-do run { target { x86_64-*-* && lp64 } } } */\n+/* { dg-options \"-g\" } */\n+\n+int __attribute__((noinline))\n+foo (unsigned short *p)\n+{\n+  int a = *p;\n+  asm volatile (\"nop\");\n+  asm volatile (\"nop\" : : \"D\" (a));\t/* { dg-final { gdb-test 10 \"a\" \"0x8078\" } } */\n+  return 0;\n+}\n+\n+int __attribute__((noinline))\n+bar (short *p)\n+{\n+  unsigned int a = *p;\n+  asm volatile (\"nop\");\n+  asm volatile (\"nop\" : : \"D\" (a));\t/* { dg-final { gdb-test 19 \"a\" \"0xffff8078\" } } */\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned short us = 0x8078;\n+  foo (&us);\n+  short s = -32648;\n+  bar (&s);\n+  return 0;\n+}"}]}