{"sha": "8d0e1e43af7ade878ccb2227f16dd5b7a877fabf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQwZTFlNDNhZjdhZGU4NzhjY2IyMjI3ZjE2ZGQ1YjdhODc3ZmFiZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-19T09:03:09Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-19T09:03:09Z"}, "message": "mips.c (mips_call_tls_get_addr): Use gen_const_mem rather then gen_rtx_MEM.\n\ngcc/\n\t* config/mips/mips.c (mips_call_tls_get_addr): Use gen_const_mem\n\trather then gen_rtx_MEM.\n\t(mips_setup_incoming_varargs): Use gen_frame_mem rather than\n\tgen_rtx_MEM.\n\t(mips_set_return_address): Likewise.\n\t(mips_restore_gp): Likewise.\n\nFrom-SVN: r129480", "tree": {"sha": "d3369642a48af93348538bc3acb891f0b96b7c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3369642a48af93348538bc3acb891f0b96b7c3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf/comments", "author": null, "committer": null, "parents": [{"sha": "6e75e6e37480bfcefc3453cdaba40c17e01406e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e75e6e37480bfcefc3453cdaba40c17e01406e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e75e6e37480bfcefc3453cdaba40c17e01406e3"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "2346a5b1d8a163e1899c4fecebb6b5feb0692231", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d0e1e43af7ade878ccb2227f16dd5b7a877fabf", "patch": "@@ -1,3 +1,12 @@\n+2007-10-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.c (mips_call_tls_get_addr): Use gen_const_mem\n+\trather then gen_rtx_MEM.\n+\t(mips_setup_incoming_varargs): Use gen_frame_mem rather than\n+\tgen_rtx_MEM.\n+\t(mips_set_return_address): Likewise.\n+\t(mips_restore_gp): Likewise.\n+\n 2007-10-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (gpr_mode): Delete."}, {"sha": "d8f2894138b9ffeb17b45f2c666a6366bf6ba411", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0e1e43af7ade878ccb2227f16dd5b7a877fabf/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=8d0e1e43af7ade878ccb2227f16dd5b7a877fabf", "patch": "@@ -2354,7 +2354,7 @@ mips_call_tls_get_addr (rtx sym, enum mips_symbol_type type, rtx v0)\n \n   emit_insn (gen_rtx_SET (Pmode, a0,\n \t\t\t  gen_rtx_LO_SUM (Pmode, pic_offset_table_rtx, loc)));\n-  tga = gen_rtx_MEM (Pmode, mips_tls_symbol);\n+  tga = gen_const_mem (Pmode, mips_tls_symbol);\n   insn = emit_call_insn (gen_call_value (v0, tga, const0_rtx, const0_rtx));\n   CONST_OR_PURE_CALL_P (insn) = 1;\n   use_reg (&CALL_INSN_FUNCTION_USAGE (insn), v0);\n@@ -4656,7 +4656,7 @@ mips_setup_incoming_varargs (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t  ptr = plus_constant (virtual_incoming_args_rtx,\n \t\t\t       REG_PARM_STACK_SPACE (cfun->decl)\n \t\t\t       - gp_saved * UNITS_PER_WORD);\n-\t  mem = gen_rtx_MEM (BLKmode, ptr);\n+\t  mem = gen_frame_mem (BLKmode, ptr);\n \t  set_mem_alias_set (mem, get_varargs_alias_set ());\n \n \t  move_block_from_reg (local_cum.num_gprs + GP_ARG_FIRST,\n@@ -4684,7 +4684,7 @@ mips_setup_incoming_varargs (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t      rtx ptr, mem;\n \n \t      ptr = plus_constant (virtual_incoming_args_rtx, off);\n-\t      mem = gen_rtx_MEM (mode, ptr);\n+\t      mem = gen_frame_mem (mode, ptr);\n \t      set_mem_alias_set (mem, get_varargs_alias_set ());\n \t      mips_emit_move (mem, gen_rtx_REG (mode, FP_ARG_FIRST + i));\n \t      off += UNITS_PER_HWFPVALUE;\n@@ -8093,7 +8093,7 @@ mips_set_return_address (rtx address, rtx scratch)\n   slot_address = mips_add_offset (scratch, stack_pointer_rtx,\n \t\t\t\t  cfun->machine->frame.gp_sp_offset);\n \n-  mips_emit_move (gen_rtx_MEM (GET_MODE (address), slot_address), address);\n+  mips_emit_move (gen_frame_mem (GET_MODE (address), slot_address), address);\n }\n \n /* Restore $gp from its save slot.  Valid only when using o32 or\n@@ -8102,7 +8102,7 @@ mips_set_return_address (rtx address, rtx scratch)\n void\n mips_restore_gp (void)\n {\n-  rtx address, slot;\n+  rtx address;\n \n   gcc_assert (TARGET_ABICALLS && TARGET_OLDABI);\n \n@@ -8111,9 +8111,8 @@ mips_restore_gp (void)\n \t\t\t     ? hard_frame_pointer_rtx\n \t\t\t     : stack_pointer_rtx,\n \t\t\t     current_function_outgoing_args_size);\n-  slot = gen_rtx_MEM (Pmode, address);\n \n-  mips_emit_move (pic_offset_table_rtx, slot);\n+  mips_emit_move (pic_offset_table_rtx, gen_frame_mem (Pmode, address));\n   if (!TARGET_EXPLICIT_RELOCS)\n     emit_insn (gen_blockage ());\n }"}]}