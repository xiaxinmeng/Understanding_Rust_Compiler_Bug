{"sha": "5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM1ZTM2YzU0NDZhYWE3YTNlYWQ2Mzg1YTEwMGFkNzZiZjJhNDJhOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-12T01:00:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-12T01:00:44Z"}, "message": "(mark_jump_label, case LABEL_REF): Update REG_LABEL note if changing\ntarget of jump.\n\nFrom-SVN: r6533", "tree": {"sha": "cde817496b16f68214450da9f722c06c5cb3e408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cde817496b16f68214450da9f722c06c5cb3e408"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8/comments", "author": null, "committer": null, "parents": [{"sha": "b67b29cd338c3da3e34c22c5114c173a70c528c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b67b29cd338c3da3e34c22c5114c173a70c528c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b67b29cd338c3da3e34c22c5114c173a70c528c2"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "b8f08eb166a288c73728efb26b03138f4d1d4a78", "filename": "gcc/jump.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=5c5e36c5446aaa7a3ead6385a100ad76bf2a42a8", "patch": "@@ -3014,13 +3014,18 @@ mark_jump_label (x, insn, cross_jump)\n \n     case LABEL_REF:\n       {\n-\tregister rtx label = XEXP (x, 0);\n-\tregister rtx next;\n+\trtx label = XEXP (x, 0);\n+\trtx olabel = label;\n+\trtx note;\n+\trtx next;\n+\n \tif (GET_CODE (label) != CODE_LABEL)\n \t  abort ();\n+\n \t/* Ignore references to labels of containing functions.  */\n \tif (LABEL_REF_NONLOCAL_P (x))\n \t  break;\n+\n \t/* If there are other labels following this one,\n \t   replace it with the last of the consecutive labels.  */\n \tfor (next = NEXT_INSN (label); next; next = NEXT_INSN (next))\n@@ -3038,12 +3043,23 @@ mark_jump_label (x, insn, cross_jump)\n \t\t\t || NOTE_LINE_NUMBER (next) == NOTE_INSN_FUNCTION_END))\n \t      break;\n \t  }\n+\n \tXEXP (x, 0) = label;\n \t++LABEL_NUSES (label);\n+\n \tif (insn)\n \t  {\n \t    if (GET_CODE (insn) == JUMP_INSN)\n \t      JUMP_LABEL (insn) = label;\n+\n+\t    /* If we've changed OLABEL and we had a REG_LABEL note\n+\t       for it, update it as well.  */\n+\t    else if (label != olabel\n+\t\t     && (note = find_reg_note (insn, REG_LABEL, olabel)) != 0)\n+\t      XEXP (note, 0) = label;\n+\n+\t    /* Otherwise, add a REG_LABEL note for LABEL unless there already\n+\t       is one.  */\n \t    else if (! find_reg_note (insn, REG_LABEL, label))\n \t      {\n \t\trtx next = next_real_insn (label);"}]}