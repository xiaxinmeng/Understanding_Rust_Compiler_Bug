{"sha": "57548bf579a86a1e80a0b2e4a385f18dc65e0057", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1NDhiZjU3OWE4NmExZTgwYTBiMmU0YTM4NWYxOGRjNjVlMDA1Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-03-07T14:15:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-03-07T14:15:56Z"}, "message": "re PR tree-optimization/70115 (gcc ICE at -O2 (seg fault) and above on valid code on x86_64-linux-gnu)\n\n2016-03-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70115\n\t* tree-ssa-loop-ivcanon.c (propagate_into_all_uses): Remove.\n\t(propagate_constants_for_unrolling): Use replace_uses_by.\n\n\t* gcc.dg/torture/pr70115.c: New testcase.\n\nFrom-SVN: r234027", "tree": {"sha": "174ab48133312ec86f9e42ef7360c9246e6df08a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/174ab48133312ec86f9e42ef7360c9246e6df08a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57548bf579a86a1e80a0b2e4a385f18dc65e0057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57548bf579a86a1e80a0b2e4a385f18dc65e0057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57548bf579a86a1e80a0b2e4a385f18dc65e0057", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57548bf579a86a1e80a0b2e4a385f18dc65e0057/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ae13300cd12a603847f1afd152103e0ad48d89a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae13300cd12a603847f1afd152103e0ad48d89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ae13300cd12a603847f1afd152103e0ad48d89a"}], "stats": {"total": 67, "additions": 33, "deletions": 34}, "files": [{"sha": "04fb3361f41ac91b6b4dbcb072b7b344ef8269fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57548bf579a86a1e80a0b2e4a385f18dc65e0057", "patch": "@@ -1,3 +1,9 @@\n+2016-03-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70115\n+\t* tree-ssa-loop-ivcanon.c (propagate_into_all_uses): Remove.\n+\t(propagate_constants_for_unrolling): Use replace_uses_by.\n+\n 2016-03-07  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR middle-end/69916"}, {"sha": "a0d3c2a5786222fe59597ba3c1ef7d66d2316dc5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57548bf579a86a1e80a0b2e4a385f18dc65e0057", "patch": "@@ -1,3 +1,8 @@\n+2016-03-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70115\n+\t* gcc.dg/torture/pr70115.c: New testcase.\n+\n 2016-03-07  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR middle-end/69916"}, {"sha": "0044fe4c2b11a5fd799eb6a5bf33638714f9f9bd", "filename": "gcc/testsuite/gcc.dg/torture/pr70115.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70115.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70115.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70115.c?ref=57548bf579a86a1e80a0b2e4a385f18dc65e0057", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+typedef int size_t;\n+char a;\n+int main()\n+{\n+  size_t b, c;\n+  for (;;)\n+    {\n+      b = 0;\n+      for (; c;)\n+\t;\n+      for (; b < sizeof(long); b++)\n+\t;\n+      for (; b < c; b++)\n+\ta++;\n+      for (; c < b; c++)\n+\t;\n+    }\n+}"}, {"sha": "1a4d6df7062b12134a615be001132888d56fa5ce", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 2, "deletions": 34, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57548bf579a86a1e80a0b2e4a385f18dc65e0057/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=57548bf579a86a1e80a0b2e4a385f18dc65e0057", "patch": "@@ -1164,38 +1164,6 @@ canonicalize_induction_variables (void)\n   return 0;\n }\n \n-/* Propagate VAL into all uses of SSA_NAME.  */\n-\n-static void\n-propagate_into_all_uses (tree ssa_name, tree val)\n-{\n-  imm_use_iterator iter;\n-  gimple *use_stmt;\n-\n-  FOR_EACH_IMM_USE_STMT (use_stmt, iter, ssa_name)\n-    {\n-      gimple_stmt_iterator use_stmt_gsi = gsi_for_stmt (use_stmt);\n-      use_operand_p use;\n-\n-      FOR_EACH_IMM_USE_ON_STMT (use, iter)\n-\tSET_USE (use, val);\n-\n-      if (is_gimple_assign (use_stmt)\n-\t  && get_gimple_rhs_class (gimple_assign_rhs_code (use_stmt))\n-\t     == GIMPLE_SINGLE_RHS)\n-\t{\n-\t  tree rhs = gimple_assign_rhs1 (use_stmt);\n-\n-\t  if (TREE_CODE (rhs) == ADDR_EXPR)\n-\t    recompute_tree_invariant_for_addr_expr (rhs);\n-\t}\n-\n-      fold_stmt_inplace (&use_stmt_gsi);\n-      update_stmt (use_stmt);\n-      maybe_clean_or_replace_eh_stmt (use_stmt, use_stmt);\n-    }\n-}\n-\n /* Propagate constant SSA_NAMEs defined in basic block BB.  */\n \n static void\n@@ -1212,7 +1180,7 @@ propagate_constants_for_unrolling (basic_block bb)\n \t  && gimple_phi_num_args (phi) == 1\n \t  && TREE_CODE (arg) == INTEGER_CST)\n \t{\n-\t  propagate_into_all_uses (result, arg);\n+\t  replace_uses_by (result, arg);\n \t  gsi_remove (&gsi, true);\n \t  release_ssa_name (result);\n \t}\n@@ -1231,7 +1199,7 @@ propagate_constants_for_unrolling (basic_block bb)\n \t  && (lhs = gimple_assign_lhs (stmt), TREE_CODE (lhs) == SSA_NAME)\n \t  && !SSA_NAME_OCCURS_IN_ABNORMAL_PHI (lhs))\n \t{\n-\t  propagate_into_all_uses (lhs, gimple_assign_rhs1 (stmt));\n+\t  replace_uses_by (lhs, gimple_assign_rhs1 (stmt));\n \t  gsi_remove (&gsi, true);\n \t  release_ssa_name (lhs);\n \t}"}]}