{"sha": "c744ae0897957def0cd798399ef8ed6dc0d23811", "node_id": "C_kwDOANBUbNoAKGM3NDRhZTA4OTc5NTdkZWYwY2Q3OTgzOTllZjhlZDZkYzBkMjM4MTE", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-11-10T18:37:22Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-11-10T22:06:23Z"}, "message": "[COMMITTED] aarch64: [PR103170] Fix aarch64_simd_dup<mode>\n\nThe problem here is aarch64_simd_dup<mode> use\nthe vw iterator rather than vwcore iterator.  This causes\nproblems for the V4SF and V2DF modes. I changed both of\naarch64_simd_dup<mode> patterns to be consistent.\n\nCommitted as obvious after a bootstrap/test on aarch64-linux-gnu.\n\n\tPR target/103170\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd.md (aarch64_simd_dup<mode>):\n\tUse vwcore iterator for the r constraint output string.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.c-torture/compile/vector-dup-1.c: New test.", "tree": {"sha": "7794fbfc8312a6c6f37f0992b04613cbca040253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7794fbfc8312a6c6f37f0992b04613cbca040253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c744ae0897957def0cd798399ef8ed6dc0d23811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c744ae0897957def0cd798399ef8ed6dc0d23811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c744ae0897957def0cd798399ef8ed6dc0d23811", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c744ae0897957def0cd798399ef8ed6dc0d23811/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abc2f01914d6c4703de26c402fb579a9a2d0dba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abc2f01914d6c4703de26c402fb579a9a2d0dba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abc2f01914d6c4703de26c402fb579a9a2d0dba4"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "1020cd9ee64f99ace9ca50415de8291aa8f77a42", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c744ae0897957def0cd798399ef8ed6dc0d23811/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c744ae0897957def0cd798399ef8ed6dc0d23811/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=c744ae0897957def0cd798399ef8ed6dc0d23811", "patch": "@@ -69,7 +69,7 @@\n   \"TARGET_SIMD\"\n   \"@\n    dup\\\\t%0.<Vtype>, %1.<Vetype>[0]\n-   dup\\\\t%0.<Vtype>, %<vw>1\"\n+   dup\\\\t%0.<Vtype>, %<vwcore>1\"\n   [(set_attr \"type\" \"neon_dup<q>, neon_from_gp<q>\")]\n )\n \n@@ -80,7 +80,7 @@\n   \"TARGET_SIMD\"\n   \"@\n    dup\\\\t%0.<Vtype>, %1.<Vetype>[0]\n-   dup\\\\t%0.<Vtype>, %<vw>1\"\n+   dup\\\\t%0.<Vtype>, %<vwcore>1\"\n   [(set_attr \"type\" \"neon_dup<q>, neon_from_gp<q>\")]\n )\n "}, {"sha": "3475360462b41123d23af78f9fc4f5ed22cf0c72", "filename": "gcc/testsuite/gcc.c-torture/compile/vector-dup-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c744ae0897957def0cd798399ef8ed6dc0d23811/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-dup-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c744ae0897957def0cd798399ef8ed6dc0d23811/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-dup-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-dup-1.c?ref=c744ae0897957def0cd798399ef8ed6dc0d23811", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-additional-options \"-fno-strict-aliasing\" } */\n+\n+\n+/* PR target/103170 */\n+/* AARCH64 used to ICE on this for a typo in the string template. */\n+#define vector __attribute__((vector_size(4*sizeof(float))))\n+\n+typedef vector float v4sf;\n+\n+v4sf f(int t)\n+{\n+  float tt = *(float*)&t;\n+  asm(\"\":\"+r\"(tt));\n+  return (v4sf){tt,tt,tt,tt};\n+}"}]}