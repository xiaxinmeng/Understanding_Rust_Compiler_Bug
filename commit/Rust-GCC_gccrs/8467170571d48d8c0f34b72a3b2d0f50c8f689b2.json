{"sha": "8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ2NzE3MDU3MWQ0OGQ4YzBmMzRiNzJhM2IyZDBmNTBjOGY2ODliMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-03-06T08:54:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-03-06T08:54:57Z"}, "message": "lto-streamer.c (lto_check_version): Use %qs in diagnostics.\n\n2017-03-06  Richard Biener  <rguenther@suse.de>\n\n\t* lto-streamer.c (lto_check_version): Use %qs in diagnostics.\n\t* plugin.c (register_plugin_info): Likewise.\n\t* tree-chkp.c (chkp_make_static_const_bounds): Likewise.\n\nFrom-SVN: r245909", "tree": {"sha": "79b243ccf37276b8c1819020da2ed98de924b069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79b243ccf37276b8c1819020da2ed98de924b069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d0da5b439d39da7c379f618876a5c8963e1d62b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0da5b439d39da7c379f618876a5c8963e1d62b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d0da5b439d39da7c379f618876a5c8963e1d62b"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "8c9396795c4b422b508b75f0ec0f1ab63204a358", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "patch": "@@ -1,3 +1,9 @@\n+2017-03-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* lto-streamer.c (lto_check_version): Use %qs in diagnostics.\n+\t* plugin.c (register_plugin_info): Likewise.\n+\t* tree-chkp.c (chkp_make_static_const_bounds): Likewise.\n+\n 2017-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (sse_storehps, sse_storelps,"}, {"sha": "04d733024d82be2c607928e904103b0a93a337fe", "filename": "gcc/lto-streamer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2Flto-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2Flto-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.c?ref=8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "patch": "@@ -380,7 +380,7 @@ lto_check_version (int major, int minor, const char *file_name)\n {\n   if (major != LTO_major_version || minor != LTO_minor_version)\n     fatal_error (input_location,\n-\t\t \"bytecode stream in file '%s' generated with LTO version \"\n+\t\t \"bytecode stream in file %qs generated with LTO version \"\n \t\t \"%d.%d instead of the expected %d.%d\",\n \t\t file_name,\n \t\t major, minor,"}, {"sha": "1996c9af43f6a396d462695e52a45802f6767af2", "filename": "gcc/plugin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "patch": "@@ -334,7 +334,7 @@ register_plugin_info (const char* name, struct plugin_info *info)\n \n   if (slot == NULL)\n     {\n-      error (\"unable to register info for plugin '%s' - plugin name not found\",\n+      error (\"unable to register info for plugin %qs - plugin name not found\",\n \t     name);\n       return;\n     }"}, {"sha": "02ae2d2d2c79f8dc3c5d7a6a2b689a70ff816130", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8467170571d48d8c0f34b72a3b2d0f50c8f689b2/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=8467170571d48d8c0f34b72a3b2d0f50c8f689b2", "patch": "@@ -1991,7 +1991,7 @@ chkp_make_static_const_bounds (HOST_WIDE_INT lb,\n       /* We don't allow this symbol usage for non bounds.  */\n       if (snode->type != SYMTAB_VARIABLE\n \t  || !POINTER_BOUNDS_P (snode->decl))\n-\tsorry (\"-fcheck-pointer-bounds requires '%s' \"\n+\tsorry (\"-fcheck-pointer-bounds requires %qs \"\n \t       \"name for internal usage\",\n \t       IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (var)));\n "}]}