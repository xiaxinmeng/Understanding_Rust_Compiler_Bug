{"sha": "32ab9238d86dfa6d74d3592bec570f4f257d0413", "node_id": "C_kwDOANBUbNoAKDMyYWI5MjM4ZDg2ZGZhNmQ3NGQzNTkyYmVjNTcwZjRmMjU3ZDA0MTM", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-19T07:01:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-19T08:55:39Z"}, "message": "tree-optimization/106781 - adjust cgraph lhs removal\n\nThe following matches up the cgraph code removing LHS of a noreturn\ncall with what fixup_noreturn_call does which gets along without\ninserting a definition, fixing the ICE resulting from having no\nplace to actually insert that new def.\n\n\tPR tree-optimization/106781\n\t* cgraph.cc (cgraph_edge::redirect_call_stmt_to_callee): Copy\n\tLHS removal from fixup_noreturn_call.\n\n\t* gcc.dg/pr106781.c: New testcase.", "tree": {"sha": "f4664d405d991361b8ba7cd9c0062765ea055d80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4664d405d991361b8ba7cd9c0062765ea055d80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32ab9238d86dfa6d74d3592bec570f4f257d0413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ab9238d86dfa6d74d3592bec570f4f257d0413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ab9238d86dfa6d74d3592bec570f4f257d0413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ab9238d86dfa6d74d3592bec570f4f257d0413/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f7ff1f1e74ea9aecf30f6038545a51a30b4a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f7ff1f1e74ea9aecf30f6038545a51a30b4a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75f7ff1f1e74ea9aecf30f6038545a51a30b4a87"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "5851b2ffc6cfe684c2042e7db797a9b571012213", "filename": "gcc/cgraph.cc", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ab9238d86dfa6d74d3592bec570f4f257d0413/gcc%2Fcgraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ab9238d86dfa6d74d3592bec570f4f257d0413/gcc%2Fcgraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.cc?ref=32ab9238d86dfa6d74d3592bec570f4f257d0413", "patch": "@@ -1411,7 +1411,6 @@ cgraph_edge::redirect_call_stmt_to_callee (cgraph_edge *e)\n {\n   tree decl = gimple_call_fndecl (e->call_stmt);\n   gcall *new_stmt;\n-  gimple_stmt_iterator gsi;\n \n   if (e->speculative)\n     {\n@@ -1572,18 +1571,17 @@ cgraph_edge::redirect_call_stmt_to_callee (cgraph_edge *e)\n       && (VOID_TYPE_P (TREE_TYPE (gimple_call_fntype (new_stmt)))\n \t  || should_remove_lhs_p (lhs)))\n     {\n+      gimple_call_set_lhs (new_stmt, NULL_TREE);\n+      /* We need to fix up the SSA name to avoid checking errors.  */\n       if (TREE_CODE (lhs) == SSA_NAME)\n \t{\n \t  tree var = create_tmp_reg_fn (DECL_STRUCT_FUNCTION (e->caller->decl),\n \t\t\t\t\tTREE_TYPE (lhs), NULL);\n-\t  var = get_or_create_ssa_default_def\n-\t\t  (DECL_STRUCT_FUNCTION (e->caller->decl), var);\n-\t  gimple *set_stmt = gimple_build_assign (lhs, var);\n-\t  gsi = gsi_for_stmt (new_stmt);\n-\t  gsi_insert_before_without_update (&gsi, set_stmt, GSI_SAME_STMT);\n-\t  update_stmt_fn (DECL_STRUCT_FUNCTION (e->caller->decl), set_stmt);\n+\t  SET_SSA_NAME_VAR_OR_IDENTIFIER (lhs, var);\n+\t  SSA_NAME_DEF_STMT (lhs) = gimple_build_nop ();\n+\t  set_ssa_default_def (DECL_STRUCT_FUNCTION (e->caller->decl),\n+\t\t\t       var, lhs);\n \t}\n-      gimple_call_set_lhs (new_stmt, NULL_TREE);\n       update_stmt_fn (DECL_STRUCT_FUNCTION (e->caller->decl), new_stmt);\n     }\n "}, {"sha": "339c28c41df0d4d22cd6170ba7dd5675012e7c1c", "filename": "gcc/testsuite/gcc.dg/pr106781.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ab9238d86dfa6d74d3592bec570f4f257d0413/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106781.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ab9238d86dfa6d74d3592bec570f4f257d0413/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106781.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106781.c?ref=32ab9238d86dfa6d74d3592bec570f4f257d0413", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wno-div-by-zero\" } */\n+\n+int n;\n+\n+__attribute__ ((noinline, returns_twice)) static int\n+bar (int)\n+{\n+  n /= 0;\n+\n+  return n;\n+}\n+\n+int\n+foo (int x)\n+{\n+  return bar (x);\n+}"}]}