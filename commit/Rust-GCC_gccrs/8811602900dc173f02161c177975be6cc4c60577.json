{"sha": "8811602900dc173f02161c177975be6cc4c60577", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgxMTYwMjkwMGRjMTczZjAyMTYxYzE3Nzk3NWJlNmNjNGM2MDU3Nw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-02-09T21:56:06Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-02-09T21:56:06Z"}, "message": "re PR fortran/30512 ([4.1 only] MAXVAL() incorrect for zero-size int arrays, and for -HUGE-1 maximum values.)\n\nfortran/\n2007-02-09  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/30512\n        * trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc,\n\t  gfc_conv_intrinsic_minmaxval): Use HUGE-1 for most negative integer.\n\ntestsuite/\n2007-02-09  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/30512\n        * gfortran.dg/maxlocval_1.f90: New test.\n\nlibgfortran/\n2007-02-09  Thomas Koenig  <Thomas.Koenig@online.de>\n\t    Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/30512\n        * m4/iparm.m4: Use HUGE-1 for most negative integer.\n\t* generated/maxloc1_8_i4.c: Regenerate.\n\t* generated/maxloc0_8_i8.c: Regenerate.\n\t* generated/maxloc1_16_i4.c: Regenerate.\n\t* generated/maxloc0_16_i8.c: Regenerate.\n\t* generated/maxval_i4.c: Regenerate.\n\t* generated/maxloc1_4_i8.c: Regenerate.\n\t* generated/maxloc0_16_i16.c: Regenerate.\n\t* generated/maxloc1_4_i16.c: Regenerate.\n\t* generated/maxloc0_8_i16.c: Regenerate.\n\t* generated/maxloc0_4_i4.c: Regenerate.\n\t* generated/maxloc1_8_i8.c: Regenerate.\n\t* generated/maxloc0_8_i4.c: Regenerate.\n\t* generated/maxloc0_16_i4.c: Regenerate.\n\t* generated/maxloc1_16_i8.c: Regenerate.\n\t* generated/maxloc1_4_i4.c: Regenerate.\n\t* generated/maxval_i8.c: Regenerate.\n\t* generated/maxloc0_4_i16.c: Regenerate.\n\t* generated/maxloc1_8_i16.c: Regenerate.\n\t* generated/maxloc0_4_i8.c: Regenerate.\n\t* generated/maxloc1_16_i16.c: Regenerate.\n\t* generated/maxval_i16.c: Regenerate.\n\nFrom-SVN: r121777", "tree": {"sha": "8c9f83d0bcfb910fd85a30861f1369cd3b9b22fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c9f83d0bcfb910fd85a30861f1369cd3b9b22fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8811602900dc173f02161c177975be6cc4c60577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8811602900dc173f02161c177975be6cc4c60577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8811602900dc173f02161c177975be6cc4c60577", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8811602900dc173f02161c177975be6cc4c60577/comments", "author": null, "committer": null, "parents": [{"sha": "ff848f0e0fd0fe375b1afa9475d8144f38596685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff848f0e0fd0fe375b1afa9475d8144f38596685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff848f0e0fd0fe375b1afa9475d8144f38596685"}], "stats": {"total": 205, "additions": 151, "deletions": 54}, "files": [{"sha": "da3698537c3955f39cd7214ebf97e2cf831b000c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -1,3 +1,9 @@\n+2007-02-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/30512\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc,\n+\t  gfc_conv_intrinsic_minmaxval): Use HUGE-1 for most negative integer.\n+\n 2007-02-09  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/30720"}, {"sha": "1bce128d976c60b62babe72e6348c4117a906ed2", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -1984,11 +1984,18 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n       gcc_unreachable ();\n     }\n \n-  /* Most negative(+HUGE) for maxval, most negative (-HUGE) for minval.  */\n+  /* We start with the most negative possible value for MAXLOC, and the most\n+     positive possible value for MINLOC. The most negative possible value is\n+     -HUGE for BT_REAL and (-HUGE - 1) for BT_INTEGER; the most positive\n+     possible value is HUGE in both cases. */\n   if (op == GT_EXPR)\n     tmp = fold_build1 (NEGATE_EXPR, TREE_TYPE (tmp), tmp);\n   gfc_add_modify_expr (&se->pre, limit, tmp);\n \n+  if (op == GT_EXPR && expr->ts.type == BT_INTEGER)\n+    tmp = build2 (MINUS_EXPR, TREE_TYPE (tmp), tmp,\n+\t\t  build_int_cst (type, 1));\n+\n   /* Initialize the scalarizer.  */\n   gfc_init_loopinfo (&loop);\n   gfc_add_ss_to_loop (&loop, arrayss);\n@@ -2143,9 +2150,17 @@ gfc_conv_intrinsic_minmaxval (gfc_se * se, gfc_expr * expr, int op)\n       gcc_unreachable ();\n     }\n \n-  /* Most negative(-HUGE) for maxval, most positive (-HUGE) for minval.  */\n+  /* We start with the most negative possible value for MAXVAL, and the most\n+     positive possible value for MINVAL. The most negative possible value is\n+     -HUGE for BT_REAL and (-HUGE - 1) for BT_INTEGER; the most positive\n+     possible value is HUGE in both cases. */\n   if (op == GT_EXPR)\n     tmp = fold_build1 (NEGATE_EXPR, TREE_TYPE (tmp), tmp);\n+\n+  if (op == GT_EXPR && expr->ts.type == BT_INTEGER)\n+    tmp = build2 (MINUS_EXPR, TREE_TYPE (tmp), tmp,\n+\t\t  build_int_cst (type, 1));\n+\n   gfc_add_modify_expr (&se->pre, limit, tmp);\n \n   /* Walk the arguments.  */"}, {"sha": "433172ef08051e67823a83e7cad8db580b4d8b49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -1,3 +1,8 @@\n+2007-02-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/30512\n+\t* gfortran.dg/maxlocval_1.f90: New test.\n+\n 2007-02-09  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.target/ia64/builtin_bswap-1.c: New test case."}, {"sha": "11a92ca7725725b00e946395a40793905d270945", "filename": "gcc/testsuite/gfortran.dg/maxlocval_1.f90", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxlocval_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxlocval_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxlocval_1.f90?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do run }\n+! Check that maxval uses for integers HUGE()-1.\n+! PR fortran/30512\n+\n+program main\n+implicit none\n+integer(1) :: i1(3), a1(3:2)\n+integer(2) :: i2(3), a2(3:2)\n+integer(4) :: i4(3), a4(3:2)\n+integer(8) :: i8(3), a8(3:2)\n+\n+integer(kind=4), allocatable :: a(:,:)\n+integer(kind=8), allocatable :: b(:,:)\n+\n+logical :: msk(3)\n+msk = .false.\n+\n+i1 = 1\n+i2 = 1\n+i4 = 1\n+i8 = 1\n+\n+if(-huge(i1)-1_1 /= maxval(i1, msk)) call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+if(-huge(a1)-1_1 /= maxval(a1))      call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+\n+if(-huge(i2)-1_2 /= maxval(i2, msk)) call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+if(-huge(a2)-1_2 /= maxval(a2))      call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+\n+if(-huge(i4)-1_4 /= maxval(i4, msk)) call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+if(-huge(a4)-1_4 /= maxval(a4))      call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+\n+if(-huge(i8)-1_4 /= maxval(i8, msk)) call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+if(-huge(a8)-1_4 /= maxval(a8))      call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+\n+allocate (a(0:-1,1:1))\n+allocate (b(0:-1,1:1))\n+\n+if(any(maxval(a,dim=1) /= -huge(a)-1_4)) call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+if(any(minval(a,dim=1) /=  huge(a)    )) call abort()\n+\n+if(any(maxval(b,dim=1) /= -huge(b)-1_8)) call abort() ! { dg-warning \"outside symmetric range implied by Standard Fortran\" }\n+if(any(minval(b,dim=1) /=  huge(b)    )) call abort()\n+\n+end program main"}, {"sha": "2b5c26f2436243b1d85504d491140c3b55374b37", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -1,3 +1,30 @@\n+2007-02-09  Thomas Koenig  <Thomas.Koenig@online.de>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/30512\n+\t* m4/iparm.m4: Use HUGE-1 for most negative integer.\n+\t* generated/maxloc1_8_i4.c: Regenerate.\n+\t* generated/maxloc0_8_i8.c: Regenerate.\n+\t* generated/maxloc1_16_i4.c: Regenerate.\n+\t* generated/maxloc0_16_i8.c: Regenerate.\n+\t* generated/maxval_i4.c: Regenerate.\n+\t* generated/maxloc1_4_i8.c: Regenerate.\n+\t* generated/maxloc0_16_i16.c: Regenerate.\n+\t* generated/maxloc1_4_i16.c: Regenerate.\n+\t* generated/maxloc0_8_i16.c: Regenerate.\n+\t* generated/maxloc0_4_i4.c: Regenerate.\n+\t* generated/maxloc1_8_i8.c: Regenerate.\n+\t* generated/maxloc0_8_i4.c: Regenerate.\n+\t* generated/maxloc0_16_i4.c: Regenerate.\n+\t* generated/maxloc1_16_i8.c: Regenerate.\n+\t* generated/maxloc1_4_i4.c: Regenerate.\n+\t* generated/maxval_i8.c: Regenerate.\n+\t* generated/maxloc0_4_i16.c: Regenerate.\n+\t* generated/maxloc1_8_i16.c: Regenerate.\n+\t* generated/maxloc0_4_i8.c: Regenerate.\n+\t* generated/maxloc1_16_i16.c: Regenerate.\n+\t* generated/maxval_i16.c: Regenerate.\n+\n 2007-02-04  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/30611"}, {"sha": "82571c435e056bd1542f7bac6310fbce75e1aea2", "filename": "libgfortran/generated/maxloc0_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n \n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n \n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "fe46afbbb6753ebdd07f4bc54110fea2504a1db7", "filename": "libgfortran/generated/maxloc0_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n \n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n \n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "82ff74fa71e618703d44e632d23e013cdda05a8c", "filename": "libgfortran/generated/maxloc0_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n \n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n \n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "1cbab8caf3215a7f0dca938ea6c4c00da7b28d35", "filename": "libgfortran/generated/maxloc0_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n \n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n \n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "a1ba2ae29ca7c5039d06e5f45caa5d2d40d08edb", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n \n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n \n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "82011f90e0f4ee8a2ccc57b0efe565b5347a9363", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n \n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n \n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "69b4015d136bf31e37dd60f6d91eb3266932f8d0", "filename": "libgfortran/generated/maxloc0_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n \n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n \n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "b6ccff6a096463fc4cd0459a10ee7ffa0317ff28", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n \n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n \n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "5ab944c25e901060ce97fb8f642be606d29d6a17", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -103,7 +103,7 @@ maxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n \n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n \n   while (base)\n     {\n@@ -227,7 +227,7 @@ mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n \n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n \n   while (base)\n     {"}, {"sha": "14db8ddd859b15333ee5caeab7d35f747819da74", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       {\n \n   GFC_INTEGER_16 maxval;\n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       {\n \n   GFC_INTEGER_16 maxval;\n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "63b6f463f2fe5bf924aa888bfe213b26b422081a", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       {\n \n   GFC_INTEGER_4 maxval;\n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       {\n \n   GFC_INTEGER_4 maxval;\n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "3b6a6ef1492334c4b447d9a911a70c51c3b25b0e", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       {\n \n   GFC_INTEGER_8 maxval;\n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       {\n \n   GFC_INTEGER_8 maxval;\n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "0848c44fdca60cd065d95305154074f28af99770", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       {\n \n   GFC_INTEGER_16 maxval;\n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       {\n \n   GFC_INTEGER_16 maxval;\n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "15f1243babf4bf06c9b6b8678a2ba09535c85cf3", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       {\n \n   GFC_INTEGER_4 maxval;\n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       {\n \n   GFC_INTEGER_4 maxval;\n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "2a2f37ca4d0dca9470c1d97f936c873cc9591bf7", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       {\n \n   GFC_INTEGER_8 maxval;\n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       {\n \n   GFC_INTEGER_8 maxval;\n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "17c73ce295501d40cdeae02f7abd4cf86ed24213", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       {\n \n   GFC_INTEGER_16 maxval;\n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       {\n \n   GFC_INTEGER_16 maxval;\n-  maxval = -GFC_INTEGER_16_HUGE;\n+  maxval = (-GFC_INTEGER_16_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "a4f36452b633e735f9f8e63ca6f8f0b5042c3bf0", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       {\n \n   GFC_INTEGER_4 maxval;\n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       {\n \n   GFC_INTEGER_4 maxval;\n-  maxval = -GFC_INTEGER_4_HUGE;\n+  maxval = (-GFC_INTEGER_4_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "587ddc657f92a24e357ace94af7614e558c2ff1d", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -140,7 +140,7 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       {\n \n   GFC_INTEGER_8 maxval;\n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n@@ -315,7 +315,7 @@ mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       {\n \n   GFC_INTEGER_8 maxval;\n-  maxval = -GFC_INTEGER_8_HUGE;\n+  maxval = (-GFC_INTEGER_8_HUGE-1);\n   result = 0;\n         if (len <= 0)\n \t  *dest = 0;"}, {"sha": "f5df1e1b394a7982f6ecf7407308d6f9128eb162", "filename": "libgfortran/generated/maxval_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i16.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -138,9 +138,9 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n       src = base;\n       {\n \n-  result = -GFC_INTEGER_16_HUGE;\n+  result = (-GFC_INTEGER_16_HUGE-1);\n         if (len <= 0)\n-\t  *dest = -GFC_INTEGER_16_HUGE;\n+\t  *dest = (-GFC_INTEGER_16_HUGE-1);\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n@@ -308,9 +308,9 @@ mmaxval_i16 (gfc_array_i16 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = -GFC_INTEGER_16_HUGE;\n+  result = (-GFC_INTEGER_16_HUGE-1);\n         if (len <= 0)\n-\t  *dest = -GFC_INTEGER_16_HUGE;\n+\t  *dest = (-GFC_INTEGER_16_HUGE-1);\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n@@ -404,7 +404,7 @@ smaxval_i16 (gfc_array_i16 * const restrict retarray,\n     dest = retarray->data;\n \n     for (n = 0; n < rank; n++)\n-      dest[n * dstride] = -GFC_INTEGER_16_HUGE ;\n+      dest[n * dstride] = (-GFC_INTEGER_16_HUGE-1) ;\n }\n \n #endif"}, {"sha": "7b01617edd1b4864429d5fa147620f3d9e477ad3", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -138,9 +138,9 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n       src = base;\n       {\n \n-  result = -GFC_INTEGER_4_HUGE;\n+  result = (-GFC_INTEGER_4_HUGE-1);\n         if (len <= 0)\n-\t  *dest = -GFC_INTEGER_4_HUGE;\n+\t  *dest = (-GFC_INTEGER_4_HUGE-1);\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n@@ -308,9 +308,9 @@ mmaxval_i4 (gfc_array_i4 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = -GFC_INTEGER_4_HUGE;\n+  result = (-GFC_INTEGER_4_HUGE-1);\n         if (len <= 0)\n-\t  *dest = -GFC_INTEGER_4_HUGE;\n+\t  *dest = (-GFC_INTEGER_4_HUGE-1);\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n@@ -404,7 +404,7 @@ smaxval_i4 (gfc_array_i4 * const restrict retarray,\n     dest = retarray->data;\n \n     for (n = 0; n < rank; n++)\n-      dest[n * dstride] = -GFC_INTEGER_4_HUGE ;\n+      dest[n * dstride] = (-GFC_INTEGER_4_HUGE-1) ;\n }\n \n #endif"}, {"sha": "cb83c5a1e6aa3eca4bbcd2a3201ed4df2faddbbf", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -138,9 +138,9 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n       src = base;\n       {\n \n-  result = -GFC_INTEGER_8_HUGE;\n+  result = (-GFC_INTEGER_8_HUGE-1);\n         if (len <= 0)\n-\t  *dest = -GFC_INTEGER_8_HUGE;\n+\t  *dest = (-GFC_INTEGER_8_HUGE-1);\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n@@ -308,9 +308,9 @@ mmaxval_i8 (gfc_array_i8 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = -GFC_INTEGER_8_HUGE;\n+  result = (-GFC_INTEGER_8_HUGE-1);\n         if (len <= 0)\n-\t  *dest = -GFC_INTEGER_8_HUGE;\n+\t  *dest = (-GFC_INTEGER_8_HUGE-1);\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n@@ -404,7 +404,7 @@ smaxval_i8 (gfc_array_i8 * const restrict retarray,\n     dest = retarray->data;\n \n     for (n = 0; n < rank; n++)\n-      dest[n * dstride] = -GFC_INTEGER_8_HUGE ;\n+      dest[n * dstride] = (-GFC_INTEGER_8_HUGE-1) ;\n }\n \n #endif"}, {"sha": "acd3d2ce604bbaf3f0b2acd38dfa8a87914ed8d2", "filename": "libgfortran/m4/iparm.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fm4%2Fiparm.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8811602900dc173f02161c177975be6cc4c60577/libgfortran%2Fm4%2Fiparm.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiparm.m4?ref=8811602900dc173f02161c177975be6cc4c60577", "patch": "@@ -28,6 +28,6 @@ define_type(rtype, rtype_tmp)dnl\n define(rtype_qual,`_'rtype_kind)dnl\n ')dnl\n define(atype_max, atype_name`_HUGE')dnl\n-define(atype_min, `-'atype_max)dnl\n+define(atype_min,ifelse(regexp(file, `_\\(.\\)[0-9]*\\.c$', `\\1'),`i',`(-'atype_max`-1)',`-'atype_max))dnl\n define(name, regexp(regexp(file, `[^/]*$', `\\&'), `^\\([^_]*\\)_', `\\1'))dnl\n define(rtype_ccode,ifelse(rtype_letter,`i',rtype_kind,rtype_code))dnl"}]}