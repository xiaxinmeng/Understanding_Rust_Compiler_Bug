{"sha": "89c273b45787a36d90bdf91c0eb0f182a7fb960e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODljMjczYjQ1Nzg3YTM2ZDkwYmRmOTFjMGViMGYxODJhN2ZiOTYwZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T09:28:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T09:28:48Z"}, "message": "[multiple changes]\n\n2009-08-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Access_Definition): Do not create an Itype reference for\n\tan anonymous access type whose designated type is generic.\n\n2009-08-17  Arnaud Charlet  <charlet@adacore.com>\n\n\t* comperr.adb (Compiler_Abort): Do not generate a bug box when in\n\tcodepeer mode, friendlier.\n\nFrom-SVN: r150824", "tree": {"sha": "03156472b70475e068c50a7528cdfcad587c7b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03156472b70475e068c50a7528cdfcad587c7b75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89c273b45787a36d90bdf91c0eb0f182a7fb960e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c273b45787a36d90bdf91c0eb0f182a7fb960e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89c273b45787a36d90bdf91c0eb0f182a7fb960e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c273b45787a36d90bdf91c0eb0f182a7fb960e/comments", "author": null, "committer": null, "parents": [{"sha": "b76e28c64d8a13f0fcaf6bddee53c06115c1d186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b76e28c64d8a13f0fcaf6bddee53c06115c1d186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b76e28c64d8a13f0fcaf6bddee53c06115c1d186"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "10e15169911c402237114c3ef7c04fa993286a73", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c273b45787a36d90bdf91c0eb0f182a7fb960e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c273b45787a36d90bdf91c0eb0f182a7fb960e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=89c273b45787a36d90bdf91c0eb0f182a7fb960e", "patch": "@@ -1,3 +1,13 @@\n+2009-08-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Access_Definition): Do not create an Itype reference for\n+\tan anonymous access type whose designated type is generic.\n+\n+2009-08-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* comperr.adb (Compiler_Abort): Do not generate a bug box when in\n+\tcodepeer mode, friendlier.\n+\n 2009-08-10  Laurent GUERBY  <laurent@guerby.net>\n \n         * make.adb: Handle multilib"}, {"sha": "da6c8a688ed31f596f47411ee92caf1822f8a087", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c273b45787a36d90bdf91c0eb0f182a7fb960e/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c273b45787a36d90bdf91c0eb0f182a7fb960e/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=89c273b45787a36d90bdf91c0eb0f182a7fb960e", "patch": "@@ -32,6 +32,7 @@ with Debug;    use Debug;\n with Errout;   use Errout;\n with Gnatvsn;  use Gnatvsn;\n with Namet;    use Namet;\n+with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Sinput;   use Sinput;\n@@ -121,19 +122,26 @@ package body Comperr is\n       --  practical interface, since giving scary bug boxes on unsupported\n       --  features is definitely not helpful.\n \n+      --  Similarly if we are generating SCIL, an error message is sufficient\n+      --  instead of generating a bug box.\n+\n       --  Note that the call to Error_Msg_N below sets Serious_Errors_Detected\n       --  to 1, so we use the regular mechanism below in order to display a\n       --  \"compilation abandoned\" message and exit, so we still know we have\n       --  this case (and -gnatdk can still be used to get the bug box).\n \n-      if VM_Target = CLI_Target\n+      if (VM_Target = CLI_Target or else CodePeer_Mode)\n         and then Serious_Errors_Detected = 0\n         and then not Debug_Flag_K\n         and then Sloc (Current_Error_Node) > No_Location\n       then\n-         Error_Msg_N\n-           (\"unsupported construct in this context\",\n-            Current_Error_Node);\n+         if VM_Target = CLI_Target then\n+            Error_Msg_N\n+              (\"unsupported construct in this context\",\n+               Current_Error_Node);\n+         else\n+            Error_Msg_N (\"cannot generate 'S'C'I'L\", Current_Error_Node);\n+         end if;\n       end if;\n \n       --  If any errors have already occurred, then we guess that the abort"}, {"sha": "8b24cd6d07173a29418088e2292e9b202880ac1e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c273b45787a36d90bdf91c0eb0f182a7fb960e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c273b45787a36d90bdf91c0eb0f182a7fb960e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=89c273b45787a36d90bdf91c0eb0f182a7fb960e", "patch": "@@ -939,9 +939,12 @@ package body Sem_Ch3 is\n       --  type declaration. In either case, do not create a reference for a\n       --  type obtained through a limited_with clause, because this would\n       --  introduce semantic dependencies.\n+      --  Similarly, do not create a reference if the designated type is a\n+      --  generic formal, because no use of it will reach the backend.\n \n       elsif Nkind (Related_Nod) = N_Function_Specification\n         and then not From_With_Type (Desig_Type)\n+        and then not Is_Generic_Type (Desig_Type)\n       then\n          if Present (Enclosing_Prot_Type) then\n             Build_Itype_Reference (Anon_Type, Parent (Enclosing_Prot_Type));"}]}