{"sha": "ec4b5d4827c826d26d11863d5c1832b179178b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM0YjVkNDgyN2M4MjZkMjZkMTE4NjNkNWMxODMyYjE3OTE3OGI4OQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2005-11-25T22:30:53Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-11-25T22:30:53Z"}, "message": "standard.omit.in: Remove javax/rmi, org/omg, gnu/CORBA and gnu/javax/rmi.\n\n       * standard.omit.in: Remove javax/rmi, org/omg, gnu/CORBA and\n       gnu/javax/rmi.\n       * scripts/makemake.tcl: Set javax/rmi, org/omg, gnu/CORBA and\n       gnu/javax/rmi to bc.\n       * gnu/CORBA/ObjectCreator.java: New override file for missing\n       VMStackWalker issue.\n       * gnu/CORBA/DynAn/gnuDynValue.java: New override file for bug #24938\n       * gnu/CORBA/DynAn/RecordAny.java: Likewise\n       * sources.am: Regenerated.\n       * Makefile.in: Regenerated\n\nFrom-SVN: r107522", "tree": {"sha": "3af5f76b546b436b51a07d7bca16c2ecc9146f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3af5f76b546b436b51a07d7bca16c2ecc9146f84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec4b5d4827c826d26d11863d5c1832b179178b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4b5d4827c826d26d11863d5c1832b179178b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec4b5d4827c826d26d11863d5c1832b179178b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4b5d4827c826d26d11863d5c1832b179178b89/comments", "author": null, "committer": null, "parents": [{"sha": "b90ba157c1cd22a67dcd58783626033fe94475d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90ba157c1cd22a67dcd58783626033fe94475d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b90ba157c1cd22a67dcd58783626033fe94475d1"}], "stats": {"total": 2916, "additions": 2910, "deletions": 6}, "files": [{"sha": "d303755736f2ead72b241dca7e3a03f79fc03320", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -1,3 +1,16 @@\n+2005-11-25  Mark Wielaard  <mark@klomp.org>\n+\n+\t* standard.omit.in: Remove javax/rmi, org/omg, gnu/CORBA and\n+\tgnu/javax/rmi.\n+\t* scripts/makemake.tcl: Set javax/rmi, org/omg, gnu/CORBA and\n+\tgnu/javax/rmi to bc.\n+\t* gnu/CORBA/ObjectCreator.java: New override file for missing\n+\tVMStackWalker issue.\n+\t* gnu/CORBA/DynAn/gnuDynValue.java: New override file for bug #24938\n+\t* gnu/CORBA/DynAn/RecordAny.java: Likewise\n+\t* sources.am: Regenerated.\n+\t* Makefile.in: Regenerated\n+\n 2005-11-25  Andrew Haley  <aph@redhat.com>\n \n \tPR libgcj/25016"}, {"sha": "82aeb41d6a16dba79ab9b9da34fa15c91fa0a63a", "filename": "libjava/Makefile.in", "status": "modified", "additions": 749, "deletions": 2, "changes": 751, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -211,8 +211,9 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/text/html/parser.lo javax/swing/text/rtf.lo \\\n \tjavax/swing/tree.lo javax/swing/undo.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo\n-am__DEPENDENCIES_3 = gnu-java-beans.lo gnu-javax-sound-midi.lo \\\n-\tgnu-xml.lo javax-imageio.lo javax-xml.lo org-w3c.lo org-xml.lo\n+am__DEPENDENCIES_3 = gnu-CORBA.lo gnu-java-beans.lo gnu-javax-rmi.lo \\\n+\tgnu-javax-sound-midi.lo gnu-xml.lo javax-imageio.lo \\\n+\tjavax-rmi.lo javax-xml.lo org-omg.lo org-w3c.lo org-xml.lo\n am__DEPENDENCIES_4 = $(patsubst classpath/resource/%,%,$(addsuffix \\\n \t.lo,$(property_files)))\n am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n@@ -810,6 +811,167 @@ CLEANFILES = libgcj-$(gcc_version).jar \\\n \n DISTCLEANFILES = native.dirs\n SUFFIXES = .class .java .h .properties .list\n+gnu_CORBA_source_files = \\\n+classpath/gnu/CORBA/Asynchron.java \\\n+classpath/gnu/CORBA/BigDecimalHelper.java \\\n+classpath/gnu/CORBA/ByteArrayComparator.java \\\n+classpath/gnu/CORBA/CDR/AbstractCdrInput.java \\\n+classpath/gnu/CORBA/CDR/AbstractCdrOutput.java \\\n+classpath/gnu/CORBA/CDR/AbstractDataInput.java \\\n+classpath/gnu/CORBA/CDR/AbstractDataOutput.java \\\n+classpath/gnu/CORBA/CDR/AligningInput.java \\\n+classpath/gnu/CORBA/CDR/AligningOutput.java \\\n+classpath/gnu/CORBA/CDR/ArrayValueHelper.java \\\n+classpath/gnu/CORBA/CDR/BigEndianInputStream.java \\\n+classpath/gnu/CORBA/CDR/BigEndianOutputStream.java \\\n+classpath/gnu/CORBA/CDR/BufferedCdrOutput.java \\\n+classpath/gnu/CORBA/CDR/BufferredCdrInput.java \\\n+classpath/gnu/CORBA/CDR/EncapsulationStream.java \\\n+classpath/gnu/CORBA/CDR/HeadlessInput.java \\\n+classpath/gnu/CORBA/CDR/IDLTypeHelper.java \\\n+classpath/gnu/CORBA/CDR/LittleEndianInputStream.java \\\n+classpath/gnu/CORBA/CDR/LittleEndianOutputStream.java \\\n+classpath/gnu/CORBA/CDR/UnknownExceptionCtxHandler.java \\\n+classpath/gnu/CORBA/CDR/VMVio.java \\\n+classpath/gnu/CORBA/CDR/Vio.java \\\n+classpath/gnu/CORBA/CDR/gnuRuntime.java \\\n+classpath/gnu/CORBA/CDR/gnuValueStream.java \\\n+classpath/gnu/CORBA/CdrEncapsCodecImpl.java \\\n+classpath/gnu/CORBA/Connected_objects.java \\\n+classpath/gnu/CORBA/CorbaList.java \\\n+classpath/gnu/CORBA/DefaultSocketFactory.java \\\n+classpath/gnu/CORBA/DefinitionKindHolder.java \\\n+classpath/gnu/CORBA/DuplicateNameHolder.java \\\n+classpath/gnu/CORBA/DynAn/AbstractAny.java \\\n+classpath/gnu/CORBA/DynAn/DivideableAny.java \\\n+classpath/gnu/CORBA/DynAn/NameValuePairHolder.java \\\n+gnu/CORBA/DynAn/RecordAny.java \\\n+classpath/gnu/CORBA/DynAn/UndivideableAny.java \\\n+classpath/gnu/CORBA/DynAn/ValueChangeListener.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynAny.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynAnyFactory.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynArray.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynEnum.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynFixed.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynSequence.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynStruct.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynUnion.java \\\n+gnu/CORBA/DynAn/gnuDynValue.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynValueBox.java \\\n+classpath/gnu/CORBA/DynAnySeqHolder.java \\\n+classpath/gnu/CORBA/EmptyExceptionHolder.java \\\n+classpath/gnu/CORBA/ForwardRequestHelper.java \\\n+classpath/gnu/CORBA/GIOP/CancelHeader.java \\\n+classpath/gnu/CORBA/GIOP/CharSets_OSF.java \\\n+classpath/gnu/CORBA/GIOP/CloseMessage.java \\\n+classpath/gnu/CORBA/GIOP/CodeSetServiceContext.java \\\n+classpath/gnu/CORBA/GIOP/ContextHandler.java \\\n+classpath/gnu/CORBA/GIOP/ErrorMessage.java \\\n+classpath/gnu/CORBA/GIOP/MessageHeader.java \\\n+classpath/gnu/CORBA/GIOP/ReplyHeader.java \\\n+classpath/gnu/CORBA/GIOP/RequestHeader.java \\\n+classpath/gnu/CORBA/GIOP/ServiceContext.java \\\n+classpath/gnu/CORBA/GIOP/v1_0/CancelHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_0/ReplyHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_0/RequestHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_2/ReplyHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_2/RequestHeader.java \\\n+classpath/gnu/CORBA/GeneralHolder.java \\\n+classpath/gnu/CORBA/HolderLocator.java \\\n+classpath/gnu/CORBA/IOR.java \\\n+classpath/gnu/CORBA/Interceptor/ClientRequestInterceptors.java \\\n+classpath/gnu/CORBA/Interceptor/ForwardRequestHolder.java \\\n+classpath/gnu/CORBA/Interceptor/IORInterceptors.java \\\n+classpath/gnu/CORBA/Interceptor/Registrator.java \\\n+classpath/gnu/CORBA/Interceptor/ServerRequestInterceptors.java \\\n+classpath/gnu/CORBA/Interceptor/gnuClientRequestInfo.java \\\n+classpath/gnu/CORBA/Interceptor/gnuIcCurrent.java \\\n+classpath/gnu/CORBA/Interceptor/gnuIorInfo.java \\\n+classpath/gnu/CORBA/Interceptor/gnuServerRequestInfo.java \\\n+classpath/gnu/CORBA/IorDelegate.java \\\n+classpath/gnu/CORBA/IorObject.java \\\n+classpath/gnu/CORBA/IorProvider.java \\\n+classpath/gnu/CORBA/Minor.java \\\n+classpath/gnu/CORBA/NameDynAnyPairHolder.java \\\n+classpath/gnu/CORBA/NameDynAnyPairSeqHolder.java \\\n+classpath/gnu/CORBA/NameValuePairHolder.java \\\n+classpath/gnu/CORBA/NameValuePairSeqHolder.java \\\n+classpath/gnu/CORBA/NamingService/Binding_iterator_impl.java \\\n+classpath/gnu/CORBA/NamingService/Ext.java \\\n+classpath/gnu/CORBA/NamingService/NameComponentComparator.java \\\n+classpath/gnu/CORBA/NamingService/NameParser.java \\\n+classpath/gnu/CORBA/NamingService/NameTransformer.java \\\n+classpath/gnu/CORBA/NamingService/NameValidator.java \\\n+classpath/gnu/CORBA/NamingService/NamingMap.java \\\n+classpath/gnu/CORBA/NamingService/NamingServiceTransient.java \\\n+classpath/gnu/CORBA/NamingService/TransientContext.java \\\n+gnu/CORBA/ObjectCreator.java \\\n+classpath/gnu/CORBA/OctetHolder.java \\\n+classpath/gnu/CORBA/OrbFocused.java \\\n+classpath/gnu/CORBA/OrbFunctional.java \\\n+classpath/gnu/CORBA/OrbRestricted.java \\\n+classpath/gnu/CORBA/Poa/AOM.java \\\n+classpath/gnu/CORBA/Poa/AccessiblePolicy.java \\\n+classpath/gnu/CORBA/Poa/DynamicImpHandler.java \\\n+classpath/gnu/CORBA/Poa/ForwardRequestHolder.java \\\n+classpath/gnu/CORBA/Poa/ForwardedServant.java \\\n+classpath/gnu/CORBA/Poa/InvalidPolicyHolder.java \\\n+classpath/gnu/CORBA/Poa/LocalDelegate.java \\\n+classpath/gnu/CORBA/Poa/LocalRequest.java \\\n+classpath/gnu/CORBA/Poa/LocalServerRequest.java \\\n+classpath/gnu/CORBA/Poa/ORB_1_4.java \\\n+classpath/gnu/CORBA/Poa/ServantDelegateImpl.java \\\n+classpath/gnu/CORBA/Poa/StandardPolicies.java \\\n+classpath/gnu/CORBA/Poa/gnuAdapterActivator.java \\\n+classpath/gnu/CORBA/Poa/gnuForwardRequest.java \\\n+classpath/gnu/CORBA/Poa/gnuIdAssignmentPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuIdUniquenessPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuImplicitActivationPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuLifespanPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuPOA.java \\\n+classpath/gnu/CORBA/Poa/gnuPOAManager.java \\\n+classpath/gnu/CORBA/Poa/gnuPoaCurrent.java \\\n+classpath/gnu/CORBA/Poa/gnuRequestProcessingPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuServantObject.java \\\n+classpath/gnu/CORBA/Poa/gnuServantRetentionPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuThreadPolicy.java \\\n+classpath/gnu/CORBA/RawReply.java \\\n+classpath/gnu/CORBA/ResponseHandlerImpl.java \\\n+classpath/gnu/CORBA/ServiceDetailHolder.java \\\n+classpath/gnu/CORBA/ServiceRequestAdapter.java \\\n+classpath/gnu/CORBA/SetOverrideTypeHolder.java \\\n+classpath/gnu/CORBA/SimpleDelegate.java \\\n+classpath/gnu/CORBA/SocketRepository.java \\\n+classpath/gnu/CORBA/StreamBasedRequest.java \\\n+classpath/gnu/CORBA/StreamHolder.java \\\n+classpath/gnu/CORBA/StubLocator.java \\\n+classpath/gnu/CORBA/TypeCodeHelper.java \\\n+classpath/gnu/CORBA/TypeKindNamer.java \\\n+classpath/gnu/CORBA/Unexpected.java \\\n+classpath/gnu/CORBA/Version.java \\\n+classpath/gnu/CORBA/WCharHolder.java \\\n+classpath/gnu/CORBA/WStringHolder.java \\\n+classpath/gnu/CORBA/_PolicyImplBase.java \\\n+classpath/gnu/CORBA/gnuAny.java \\\n+classpath/gnu/CORBA/gnuCodecFactory.java \\\n+classpath/gnu/CORBA/gnuContext.java \\\n+classpath/gnu/CORBA/gnuContextList.java \\\n+classpath/gnu/CORBA/gnuEnvironment.java \\\n+classpath/gnu/CORBA/gnuExceptionList.java \\\n+classpath/gnu/CORBA/gnuNVList.java \\\n+classpath/gnu/CORBA/gnuNamedValue.java \\\n+classpath/gnu/CORBA/gnuRequest.java \\\n+classpath/gnu/CORBA/gnuValueHolder.java \\\n+classpath/gnu/CORBA/interfaces/SocketFactory.java \\\n+classpath/gnu/CORBA/typecodes/AliasTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/ArrayTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/FixedTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/GeneralTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/PrimitiveTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/RecordTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/RecursiveTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/StringTypeCode.java\n+\n gnu_awt_source_files = \\\n gnu/awt/LightweightRedirector.java\n \n@@ -1756,6 +1918,19 @@ classpath/gnu/javax/imageio/bmp/DecodeRLE4.java \\\n classpath/gnu/javax/imageio/bmp/DecodeRLE8.java\n \n gnu_javax_imageio_bmp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_bmp_source_files)))\n+gnu_javax_rmi_source_files = \\\n+classpath/gnu/javax/rmi/CORBA/CorbaInput.java \\\n+classpath/gnu/javax/rmi/CORBA/CorbaOutput.java \\\n+classpath/gnu/javax/rmi/CORBA/DefaultWriteObjectTester.java \\\n+classpath/gnu/javax/rmi/CORBA/DelegateFactory.java \\\n+classpath/gnu/javax/rmi/CORBA/GetDelegateInstanceException.java \\\n+classpath/gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java \\\n+classpath/gnu/javax/rmi/CORBA/RmiUtilities.java \\\n+classpath/gnu/javax/rmi/CORBA/StubDelegateImpl.java \\\n+classpath/gnu/javax/rmi/CORBA/TieTargetRecord.java \\\n+classpath/gnu/javax/rmi/CORBA/UtilDelegateImpl.java \\\n+classpath/gnu/javax/rmi/CORBA/ValueHandlerDelegateImpl.java\n+\n gnu_javax_sound_midi_source_files = \\\n classpath/gnu/javax/sound/midi/alsa/AlsaInputPortDevice.java \\\n classpath/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider.java \\\n@@ -3742,6 +3917,18 @@ classpath/javax/print/event/PrintServiceAttributeEvent.java \\\n classpath/javax/print/event/PrintServiceAttributeListener.java\n \n javax_print_event_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_print_event_source_files)))\n+javax_rmi_source_files = \\\n+classpath/javax/rmi/CORBA/ClassDesc.java \\\n+classpath/javax/rmi/CORBA/PortableRemoteObjectDelegate.java \\\n+classpath/javax/rmi/CORBA/Stub.java \\\n+classpath/javax/rmi/CORBA/StubDelegate.java \\\n+classpath/javax/rmi/CORBA/Tie.java \\\n+classpath/javax/rmi/CORBA/Util.java \\\n+classpath/javax/rmi/CORBA/UtilDelegate.java \\\n+classpath/javax/rmi/CORBA/ValueHandler.java \\\n+classpath/javax/rmi/CORBA/ValueHandlerMultiFormat.java \\\n+classpath/javax/rmi/PortableRemoteObject.java\n+\n javax_security_auth_source_files = \\\n classpath/javax/security/auth/AuthPermission.java \\\n classpath/javax/security/auth/DestroyFailedException.java \\\n@@ -4538,6 +4725,542 @@ classpath/org/ietf/jgss/MessageProp.java \\\n classpath/org/ietf/jgss/Oid.java\n \n org_ietf_jgss_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(org_ietf_jgss_source_files)))\n+org_omg_source_files = \\\n+classpath/org/omg/CORBA/ACTIVITY_COMPLETED.java \\\n+classpath/org/omg/CORBA/ACTIVITY_REQUIRED.java \\\n+classpath/org/omg/CORBA/ARG_IN.java \\\n+classpath/org/omg/CORBA/ARG_INOUT.java \\\n+classpath/org/omg/CORBA/ARG_OUT.java \\\n+classpath/org/omg/CORBA/Any.java \\\n+classpath/org/omg/CORBA/AnyHolder.java \\\n+classpath/org/omg/CORBA/AnySeqHelper.java \\\n+classpath/org/omg/CORBA/AnySeqHolder.java \\\n+classpath/org/omg/CORBA/BAD_CONTEXT.java \\\n+classpath/org/omg/CORBA/BAD_INV_ORDER.java \\\n+classpath/org/omg/CORBA/BAD_OPERATION.java \\\n+classpath/org/omg/CORBA/BAD_PARAM.java \\\n+classpath/org/omg/CORBA/BAD_POLICY.java \\\n+classpath/org/omg/CORBA/BAD_POLICY_TYPE.java \\\n+classpath/org/omg/CORBA/BAD_POLICY_VALUE.java \\\n+classpath/org/omg/CORBA/BAD_QOS.java \\\n+classpath/org/omg/CORBA/BAD_TYPECODE.java \\\n+classpath/org/omg/CORBA/BooleanHolder.java \\\n+classpath/org/omg/CORBA/BooleanSeqHelper.java \\\n+classpath/org/omg/CORBA/BooleanSeqHolder.java \\\n+classpath/org/omg/CORBA/Bounds.java \\\n+classpath/org/omg/CORBA/ByteHolder.java \\\n+classpath/org/omg/CORBA/CODESET_INCOMPATIBLE.java \\\n+classpath/org/omg/CORBA/COMM_FAILURE.java \\\n+classpath/org/omg/CORBA/CTX_RESTRICT_SCOPE.java \\\n+classpath/org/omg/CORBA/CharHolder.java \\\n+classpath/org/omg/CORBA/CharSeqHelper.java \\\n+classpath/org/omg/CORBA/CharSeqHolder.java \\\n+classpath/org/omg/CORBA/CompletionStatus.java \\\n+classpath/org/omg/CORBA/CompletionStatusHelper.java \\\n+classpath/org/omg/CORBA/Context.java \\\n+classpath/org/omg/CORBA/ContextList.java \\\n+classpath/org/omg/CORBA/Current.java \\\n+classpath/org/omg/CORBA/CurrentHelper.java \\\n+classpath/org/omg/CORBA/CurrentHolder.java \\\n+classpath/org/omg/CORBA/CurrentOperations.java \\\n+classpath/org/omg/CORBA/CustomMarshal.java \\\n+classpath/org/omg/CORBA/CustomValue.java \\\n+classpath/org/omg/CORBA/DATA_CONVERSION.java \\\n+classpath/org/omg/CORBA/DataInputStream.java \\\n+classpath/org/omg/CORBA/DataOutputStream.java \\\n+classpath/org/omg/CORBA/DefinitionKind.java \\\n+classpath/org/omg/CORBA/DefinitionKindHelper.java \\\n+classpath/org/omg/CORBA/DomainManager.java \\\n+classpath/org/omg/CORBA/DomainManagerOperations.java \\\n+classpath/org/omg/CORBA/DoubleHolder.java \\\n+classpath/org/omg/CORBA/DoubleSeqHelper.java \\\n+classpath/org/omg/CORBA/DoubleSeqHolder.java \\\n+classpath/org/omg/CORBA/DynAny.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/Invalid.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/InvalidSeq.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/InvalidValue.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/TypeMismatch.java \\\n+classpath/org/omg/CORBA/DynArray.java \\\n+classpath/org/omg/CORBA/DynEnum.java \\\n+classpath/org/omg/CORBA/DynFixed.java \\\n+classpath/org/omg/CORBA/DynSequence.java \\\n+classpath/org/omg/CORBA/DynStruct.java \\\n+classpath/org/omg/CORBA/DynUnion.java \\\n+classpath/org/omg/CORBA/DynValue.java \\\n+classpath/org/omg/CORBA/DynamicImplementation.java \\\n+classpath/org/omg/CORBA/Environment.java \\\n+classpath/org/omg/CORBA/ExceptionList.java \\\n+classpath/org/omg/CORBA/FREE_MEM.java \\\n+classpath/org/omg/CORBA/FieldNameHelper.java \\\n+classpath/org/omg/CORBA/FixedHolder.java \\\n+classpath/org/omg/CORBA/FloatHolder.java \\\n+classpath/org/omg/CORBA/FloatSeqHelper.java \\\n+classpath/org/omg/CORBA/FloatSeqHolder.java \\\n+classpath/org/omg/CORBA/IDLType.java \\\n+classpath/org/omg/CORBA/IDLTypeHelper.java \\\n+classpath/org/omg/CORBA/IDLTypeOperations.java \\\n+classpath/org/omg/CORBA/IMP_LIMIT.java \\\n+classpath/org/omg/CORBA/INITIALIZE.java \\\n+classpath/org/omg/CORBA/INTERNAL.java \\\n+classpath/org/omg/CORBA/INTF_REPOS.java \\\n+classpath/org/omg/CORBA/INVALID_ACTIVITY.java \\\n+classpath/org/omg/CORBA/INVALID_TRANSACTION.java \\\n+classpath/org/omg/CORBA/INV_FLAG.java \\\n+classpath/org/omg/CORBA/INV_IDENT.java \\\n+classpath/org/omg/CORBA/INV_OBJREF.java \\\n+classpath/org/omg/CORBA/INV_POLICY.java \\\n+classpath/org/omg/CORBA/IRObject.java \\\n+classpath/org/omg/CORBA/IRObjectOperations.java \\\n+classpath/org/omg/CORBA/IdentifierHelper.java \\\n+classpath/org/omg/CORBA/IntHolder.java \\\n+classpath/org/omg/CORBA/LocalObject.java \\\n+classpath/org/omg/CORBA/LongHolder.java \\\n+classpath/org/omg/CORBA/LongLongSeqHelper.java \\\n+classpath/org/omg/CORBA/LongLongSeqHolder.java \\\n+classpath/org/omg/CORBA/LongSeqHelper.java \\\n+classpath/org/omg/CORBA/LongSeqHolder.java \\\n+classpath/org/omg/CORBA/MARSHAL.java \\\n+classpath/org/omg/CORBA/NO_IMPLEMENT.java \\\n+classpath/org/omg/CORBA/NO_MEMORY.java \\\n+classpath/org/omg/CORBA/NO_PERMISSION.java \\\n+classpath/org/omg/CORBA/NO_RESOURCES.java \\\n+classpath/org/omg/CORBA/NO_RESPONSE.java \\\n+classpath/org/omg/CORBA/NVList.java \\\n+classpath/org/omg/CORBA/NameValuePair.java \\\n+classpath/org/omg/CORBA/NameValuePairHelper.java \\\n+classpath/org/omg/CORBA/NamedValue.java \\\n+classpath/org/omg/CORBA/OBJECT_NOT_EXIST.java \\\n+classpath/org/omg/CORBA/OBJ_ADAPTER.java \\\n+classpath/org/omg/CORBA/OMGVMCID.java \\\n+classpath/org/omg/CORBA/ORB.java \\\n+classpath/org/omg/CORBA/ORBPackage/InconsistentTypeCode.java \\\n+classpath/org/omg/CORBA/ORBPackage/InvalidName.java \\\n+classpath/org/omg/CORBA/Object.java \\\n+classpath/org/omg/CORBA/ObjectHelper.java \\\n+classpath/org/omg/CORBA/ObjectHolder.java \\\n+classpath/org/omg/CORBA/OctetSeqHelper.java \\\n+classpath/org/omg/CORBA/OctetSeqHolder.java \\\n+classpath/org/omg/CORBA/PERSIST_STORE.java \\\n+classpath/org/omg/CORBA/PRIVATE_MEMBER.java \\\n+classpath/org/omg/CORBA/PUBLIC_MEMBER.java \\\n+classpath/org/omg/CORBA/ParameterMode.java \\\n+classpath/org/omg/CORBA/ParameterModeHelper.java \\\n+classpath/org/omg/CORBA/ParameterModeHolder.java \\\n+classpath/org/omg/CORBA/Policy.java \\\n+classpath/org/omg/CORBA/PolicyError.java \\\n+classpath/org/omg/CORBA/PolicyErrorCodeHelper.java \\\n+classpath/org/omg/CORBA/PolicyErrorHelper.java \\\n+classpath/org/omg/CORBA/PolicyErrorHolder.java \\\n+classpath/org/omg/CORBA/PolicyHelper.java \\\n+classpath/org/omg/CORBA/PolicyHolder.java \\\n+classpath/org/omg/CORBA/PolicyListHelper.java \\\n+classpath/org/omg/CORBA/PolicyListHolder.java \\\n+classpath/org/omg/CORBA/PolicyOperations.java \\\n+classpath/org/omg/CORBA/PolicyTypeHelper.java \\\n+classpath/org/omg/CORBA/Principal.java \\\n+classpath/org/omg/CORBA/PrincipalHolder.java \\\n+classpath/org/omg/CORBA/REBIND.java \\\n+classpath/org/omg/CORBA/RepositoryIdHelper.java \\\n+classpath/org/omg/CORBA/Request.java \\\n+classpath/org/omg/CORBA/ServerRequest.java \\\n+classpath/org/omg/CORBA/ServiceDetail.java \\\n+classpath/org/omg/CORBA/ServiceDetailHelper.java \\\n+classpath/org/omg/CORBA/ServiceInformation.java \\\n+classpath/org/omg/CORBA/ServiceInformationHelper.java \\\n+classpath/org/omg/CORBA/ServiceInformationHolder.java \\\n+classpath/org/omg/CORBA/SetOverrideType.java \\\n+classpath/org/omg/CORBA/SetOverrideTypeHelper.java \\\n+classpath/org/omg/CORBA/ShortHolder.java \\\n+classpath/org/omg/CORBA/ShortSeqHelper.java \\\n+classpath/org/omg/CORBA/ShortSeqHolder.java \\\n+classpath/org/omg/CORBA/StringHolder.java \\\n+classpath/org/omg/CORBA/StringSeqHelper.java \\\n+classpath/org/omg/CORBA/StringSeqHolder.java \\\n+classpath/org/omg/CORBA/StringValueHelper.java \\\n+classpath/org/omg/CORBA/StructMember.java \\\n+classpath/org/omg/CORBA/StructMemberHelper.java \\\n+classpath/org/omg/CORBA/SystemException.java \\\n+classpath/org/omg/CORBA/TCKind.java \\\n+classpath/org/omg/CORBA/TIMEOUT.java \\\n+classpath/org/omg/CORBA/TRANSACTION_MODE.java \\\n+classpath/org/omg/CORBA/TRANSACTION_REQUIRED.java \\\n+classpath/org/omg/CORBA/TRANSACTION_ROLLEDBACK.java \\\n+classpath/org/omg/CORBA/TRANSACTION_UNAVAILABLE.java \\\n+classpath/org/omg/CORBA/TRANSIENT.java \\\n+classpath/org/omg/CORBA/TypeCode.java \\\n+classpath/org/omg/CORBA/TypeCodeHolder.java \\\n+classpath/org/omg/CORBA/TypeCodePackage/BadKind.java \\\n+classpath/org/omg/CORBA/TypeCodePackage/Bounds.java \\\n+classpath/org/omg/CORBA/ULongLongSeqHelper.java \\\n+classpath/org/omg/CORBA/ULongLongSeqHolder.java \\\n+classpath/org/omg/CORBA/ULongSeqHelper.java \\\n+classpath/org/omg/CORBA/ULongSeqHolder.java \\\n+classpath/org/omg/CORBA/UNKNOWN.java \\\n+classpath/org/omg/CORBA/UNSUPPORTED_POLICY.java \\\n+classpath/org/omg/CORBA/UNSUPPORTED_POLICY_VALUE.java \\\n+classpath/org/omg/CORBA/UShortSeqHelper.java \\\n+classpath/org/omg/CORBA/UShortSeqHolder.java \\\n+classpath/org/omg/CORBA/UnionMember.java \\\n+classpath/org/omg/CORBA/UnionMemberHelper.java \\\n+classpath/org/omg/CORBA/UnknownUserException.java \\\n+classpath/org/omg/CORBA/UnknownUserExceptionHelper.java \\\n+classpath/org/omg/CORBA/UnknownUserExceptionHolder.java \\\n+classpath/org/omg/CORBA/UserException.java \\\n+classpath/org/omg/CORBA/VM_ABSTRACT.java \\\n+classpath/org/omg/CORBA/VM_CUSTOM.java \\\n+classpath/org/omg/CORBA/VM_NONE.java \\\n+classpath/org/omg/CORBA/VM_TRUNCATABLE.java \\\n+classpath/org/omg/CORBA/ValueBaseHelper.java \\\n+classpath/org/omg/CORBA/ValueBaseHolder.java \\\n+classpath/org/omg/CORBA/ValueMember.java \\\n+classpath/org/omg/CORBA/ValueMemberHelper.java \\\n+classpath/org/omg/CORBA/VersionSpecHelper.java \\\n+classpath/org/omg/CORBA/VisibilityHelper.java \\\n+classpath/org/omg/CORBA/WCharSeqHelper.java \\\n+classpath/org/omg/CORBA/WCharSeqHolder.java \\\n+classpath/org/omg/CORBA/WStringSeqHelper.java \\\n+classpath/org/omg/CORBA/WStringSeqHolder.java \\\n+classpath/org/omg/CORBA/WStringValueHelper.java \\\n+classpath/org/omg/CORBA/WrongTransaction.java \\\n+classpath/org/omg/CORBA/WrongTransactionHelper.java \\\n+classpath/org/omg/CORBA/WrongTransactionHolder.java \\\n+classpath/org/omg/CORBA/_IDLTypeStub.java \\\n+classpath/org/omg/CORBA/_PolicyStub.java \\\n+classpath/org/omg/CORBA/portable/ApplicationException.java \\\n+classpath/org/omg/CORBA/portable/BoxedValueHelper.java \\\n+classpath/org/omg/CORBA/portable/CustomValue.java \\\n+classpath/org/omg/CORBA/portable/Delegate.java \\\n+classpath/org/omg/CORBA/portable/IDLEntity.java \\\n+classpath/org/omg/CORBA/portable/IndirectionException.java \\\n+classpath/org/omg/CORBA/portable/InputStream.java \\\n+classpath/org/omg/CORBA/portable/InvokeHandler.java \\\n+classpath/org/omg/CORBA/portable/ObjectImpl.java \\\n+classpath/org/omg/CORBA/portable/OutputStream.java \\\n+classpath/org/omg/CORBA/portable/RemarshalException.java \\\n+classpath/org/omg/CORBA/portable/ResponseHandler.java \\\n+classpath/org/omg/CORBA/portable/ServantObject.java \\\n+classpath/org/omg/CORBA/portable/Streamable.java \\\n+classpath/org/omg/CORBA/portable/StreamableValue.java \\\n+classpath/org/omg/CORBA/portable/UnknownException.java \\\n+classpath/org/omg/CORBA/portable/ValueBase.java \\\n+classpath/org/omg/CORBA/portable/ValueFactory.java \\\n+classpath/org/omg/CORBA_2_3/ORB.java \\\n+classpath/org/omg/CORBA_2_3/portable/Delegate.java \\\n+classpath/org/omg/CORBA_2_3/portable/InputStream.java \\\n+classpath/org/omg/CORBA_2_3/portable/ObjectImpl.java \\\n+classpath/org/omg/CORBA_2_3/portable/OutputStream.java \\\n+classpath/org/omg/CosNaming/Binding.java \\\n+classpath/org/omg/CosNaming/BindingHelper.java \\\n+classpath/org/omg/CosNaming/BindingHolder.java \\\n+classpath/org/omg/CosNaming/BindingIterator.java \\\n+classpath/org/omg/CosNaming/BindingIteratorHelper.java \\\n+classpath/org/omg/CosNaming/BindingIteratorHolder.java \\\n+classpath/org/omg/CosNaming/BindingIteratorOperations.java \\\n+classpath/org/omg/CosNaming/BindingIteratorPOA.java \\\n+classpath/org/omg/CosNaming/BindingListHelper.java \\\n+classpath/org/omg/CosNaming/BindingListHolder.java \\\n+classpath/org/omg/CosNaming/BindingType.java \\\n+classpath/org/omg/CosNaming/BindingTypeHelper.java \\\n+classpath/org/omg/CosNaming/BindingTypeHolder.java \\\n+classpath/org/omg/CosNaming/IstringHelper.java \\\n+classpath/org/omg/CosNaming/NameComponent.java \\\n+classpath/org/omg/CosNaming/NameComponentHelper.java \\\n+classpath/org/omg/CosNaming/NameComponentHolder.java \\\n+classpath/org/omg/CosNaming/NameHelper.java \\\n+classpath/org/omg/CosNaming/NameHolder.java \\\n+classpath/org/omg/CosNaming/NamingContext.java \\\n+classpath/org/omg/CosNaming/NamingContextExt.java \\\n+classpath/org/omg/CosNaming/NamingContextExtHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextExtOperations.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPOA.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/AddressHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/InvalidAddress.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/InvalidAddressHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/InvalidAddressHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/StringNameHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/URLStringHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextOperations.java \\\n+classpath/org/omg/CosNaming/NamingContextPOA.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/AlreadyBound.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/AlreadyBoundHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/AlreadyBoundHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/CannotProceed.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/CannotProceedHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/CannotProceedHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/InvalidName.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/InvalidNameHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/InvalidNameHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotEmpty.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotEmptyHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotEmptyHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFound.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundReason.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundReasonHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundReasonHolder.java \\\n+classpath/org/omg/CosNaming/_BindingIteratorImplBase.java \\\n+classpath/org/omg/CosNaming/_BindingIteratorStub.java \\\n+classpath/org/omg/CosNaming/_NamingContextExtImplBase.java \\\n+classpath/org/omg/CosNaming/_NamingContextExtStub.java \\\n+classpath/org/omg/CosNaming/_NamingContextImplBase.java \\\n+classpath/org/omg/CosNaming/_NamingContextStub.java \\\n+classpath/org/omg/Dynamic/Parameter.java \\\n+classpath/org/omg/DynamicAny/AnySeqHelper.java \\\n+classpath/org/omg/DynamicAny/DynAny.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactory.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryOperations.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCode.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyOperations.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/InvalidValue.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/TypeMismatch.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnySeqHelper.java \\\n+classpath/org/omg/DynamicAny/DynArray.java \\\n+classpath/org/omg/DynamicAny/DynArrayHelper.java \\\n+classpath/org/omg/DynamicAny/DynArrayOperations.java \\\n+classpath/org/omg/DynamicAny/DynEnum.java \\\n+classpath/org/omg/DynamicAny/DynEnumHelper.java \\\n+classpath/org/omg/DynamicAny/DynEnumOperations.java \\\n+classpath/org/omg/DynamicAny/DynFixed.java \\\n+classpath/org/omg/DynamicAny/DynFixedHelper.java \\\n+classpath/org/omg/DynamicAny/DynFixedOperations.java \\\n+classpath/org/omg/DynamicAny/DynSequence.java \\\n+classpath/org/omg/DynamicAny/DynSequenceHelper.java \\\n+classpath/org/omg/DynamicAny/DynSequenceOperations.java \\\n+classpath/org/omg/DynamicAny/DynStruct.java \\\n+classpath/org/omg/DynamicAny/DynStructHelper.java \\\n+classpath/org/omg/DynamicAny/DynStructOperations.java \\\n+classpath/org/omg/DynamicAny/DynUnion.java \\\n+classpath/org/omg/DynamicAny/DynUnionHelper.java \\\n+classpath/org/omg/DynamicAny/DynUnionOperations.java \\\n+classpath/org/omg/DynamicAny/DynValue.java \\\n+classpath/org/omg/DynamicAny/DynValueBox.java \\\n+classpath/org/omg/DynamicAny/DynValueBoxOperations.java \\\n+classpath/org/omg/DynamicAny/DynValueCommon.java \\\n+classpath/org/omg/DynamicAny/DynValueCommonOperations.java \\\n+classpath/org/omg/DynamicAny/DynValueHelper.java \\\n+classpath/org/omg/DynamicAny/DynValueOperations.java \\\n+classpath/org/omg/DynamicAny/FieldNameHelper.java \\\n+classpath/org/omg/DynamicAny/NameDynAnyPair.java \\\n+classpath/org/omg/DynamicAny/NameDynAnyPairHelper.java \\\n+classpath/org/omg/DynamicAny/NameDynAnyPairSeqHelper.java \\\n+classpath/org/omg/DynamicAny/NameValuePair.java \\\n+classpath/org/omg/DynamicAny/NameValuePairHelper.java \\\n+classpath/org/omg/DynamicAny/NameValuePairSeqHelper.java \\\n+classpath/org/omg/DynamicAny/_DynAnyFactoryStub.java \\\n+classpath/org/omg/DynamicAny/_DynAnyStub.java \\\n+classpath/org/omg/DynamicAny/_DynArrayStub.java \\\n+classpath/org/omg/DynamicAny/_DynEnumStub.java \\\n+classpath/org/omg/DynamicAny/_DynFixedStub.java \\\n+classpath/org/omg/DynamicAny/_DynSequenceStub.java \\\n+classpath/org/omg/DynamicAny/_DynStructStub.java \\\n+classpath/org/omg/DynamicAny/_DynUnionStub.java \\\n+classpath/org/omg/DynamicAny/_DynValueStub.java \\\n+classpath/org/omg/IOP/CodeSets.java \\\n+classpath/org/omg/IOP/Codec.java \\\n+classpath/org/omg/IOP/CodecFactory.java \\\n+classpath/org/omg/IOP/CodecFactoryHelper.java \\\n+classpath/org/omg/IOP/CodecFactoryOperations.java \\\n+classpath/org/omg/IOP/CodecFactoryPackage/UnknownEncoding.java \\\n+classpath/org/omg/IOP/CodecFactoryPackage/UnknownEncodingHelper.java \\\n+classpath/org/omg/IOP/CodecOperations.java \\\n+classpath/org/omg/IOP/CodecPackage/FormatMismatch.java \\\n+classpath/org/omg/IOP/CodecPackage/FormatMismatchHelper.java \\\n+classpath/org/omg/IOP/CodecPackage/InvalidTypeForEncoding.java \\\n+classpath/org/omg/IOP/CodecPackage/InvalidTypeForEncodingHelper.java \\\n+classpath/org/omg/IOP/CodecPackage/TypeMismatch.java \\\n+classpath/org/omg/IOP/CodecPackage/TypeMismatchHelper.java \\\n+classpath/org/omg/IOP/ComponentIdHelper.java \\\n+classpath/org/omg/IOP/ENCODING_CDR_ENCAPS.java \\\n+classpath/org/omg/IOP/Encoding.java \\\n+classpath/org/omg/IOP/ExceptionDetailMessage.java \\\n+classpath/org/omg/IOP/IOR.java \\\n+classpath/org/omg/IOP/IORHelper.java \\\n+classpath/org/omg/IOP/IORHolder.java \\\n+classpath/org/omg/IOP/MultipleComponentProfileHelper.java \\\n+classpath/org/omg/IOP/MultipleComponentProfileHolder.java \\\n+classpath/org/omg/IOP/ProfileIdHelper.java \\\n+classpath/org/omg/IOP/RMICustomMaxStreamFormat.java \\\n+classpath/org/omg/IOP/ServiceContext.java \\\n+classpath/org/omg/IOP/ServiceContextHelper.java \\\n+classpath/org/omg/IOP/ServiceContextHolder.java \\\n+classpath/org/omg/IOP/ServiceContextListHelper.java \\\n+classpath/org/omg/IOP/ServiceContextListHolder.java \\\n+classpath/org/omg/IOP/ServiceIdHelper.java \\\n+classpath/org/omg/IOP/TAG_ALTERNATE_IIOP_ADDRESS.java \\\n+classpath/org/omg/IOP/TAG_CODE_SETS.java \\\n+classpath/org/omg/IOP/TAG_INTERNET_IOP.java \\\n+classpath/org/omg/IOP/TAG_JAVA_CODEBASE.java \\\n+classpath/org/omg/IOP/TAG_MULTIPLE_COMPONENTS.java \\\n+classpath/org/omg/IOP/TAG_ORB_TYPE.java \\\n+classpath/org/omg/IOP/TAG_POLICIES.java \\\n+classpath/org/omg/IOP/TAG_RMI_CUSTOM_MAX_STREAM_FORMAT.java \\\n+classpath/org/omg/IOP/TaggedComponent.java \\\n+classpath/org/omg/IOP/TaggedComponentHelper.java \\\n+classpath/org/omg/IOP/TaggedComponentHolder.java \\\n+classpath/org/omg/IOP/TaggedProfile.java \\\n+classpath/org/omg/IOP/TaggedProfileHelper.java \\\n+classpath/org/omg/IOP/TaggedProfileHolder.java \\\n+classpath/org/omg/IOP/TransactionService.java \\\n+classpath/org/omg/Messaging/SYNC_WITH_TRANSPORT.java \\\n+classpath/org/omg/Messaging/SyncScopeHelper.java \\\n+classpath/org/omg/PortableInterceptor/ACTIVE.java \\\n+classpath/org/omg/PortableInterceptor/AdapterManagerIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/AdapterNameHelper.java \\\n+classpath/org/omg/PortableInterceptor/AdapterStateHelper.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInfo.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInterceptor.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/Current.java \\\n+classpath/org/omg/PortableInterceptor/CurrentHelper.java \\\n+classpath/org/omg/PortableInterceptor/CurrentOperations.java \\\n+classpath/org/omg/PortableInterceptor/DISCARDING.java \\\n+classpath/org/omg/PortableInterceptor/ForwardRequest.java \\\n+classpath/org/omg/PortableInterceptor/ForwardRequestHelper.java \\\n+classpath/org/omg/PortableInterceptor/HOLDING.java \\\n+classpath/org/omg/PortableInterceptor/INACTIVE.java \\\n+classpath/org/omg/PortableInterceptor/IORInfo.java \\\n+classpath/org/omg/PortableInterceptor/IORInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0Helper.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0Holder.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0Operations.java \\\n+classpath/org/omg/PortableInterceptor/Interceptor.java \\\n+classpath/org/omg/PortableInterceptor/InterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/InvalidSlot.java \\\n+classpath/org/omg/PortableInterceptor/InvalidSlotHelper.java \\\n+classpath/org/omg/PortableInterceptor/LOCATION_FORWARD.java \\\n+classpath/org/omg/PortableInterceptor/NON_EXISTENT.java \\\n+classpath/org/omg/PortableInterceptor/ORBIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfo.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/DuplicateName.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/DuplicateNameHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidNameHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/ObjectIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitializer.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitializerOperations.java \\\n+classpath/org/omg/PortableInterceptor/ObjectIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactory.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactoryHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactoryHolder.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactoryOperations.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplate.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateHolder.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHolder.java \\\n+classpath/org/omg/PortableInterceptor/PolicyFactory.java \\\n+classpath/org/omg/PortableInterceptor/PolicyFactoryOperations.java \\\n+classpath/org/omg/PortableInterceptor/RequestInfo.java \\\n+classpath/org/omg/PortableInterceptor/RequestInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/SUCCESSFUL.java \\\n+classpath/org/omg/PortableInterceptor/SYSTEM_EXCEPTION.java \\\n+classpath/org/omg/PortableInterceptor/ServerIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInfo.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInterceptor.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/TRANSPORT_RETRY.java \\\n+classpath/org/omg/PortableInterceptor/USER_EXCEPTION.java \\\n+classpath/org/omg/PortableInterceptor/_IORInterceptor_3_0Stub.java \\\n+classpath/org/omg/PortableServer/AdapterActivator.java \\\n+classpath/org/omg/PortableServer/AdapterActivatorOperations.java \\\n+classpath/org/omg/PortableServer/Current.java \\\n+classpath/org/omg/PortableServer/CurrentHelper.java \\\n+classpath/org/omg/PortableServer/CurrentOperations.java \\\n+classpath/org/omg/PortableServer/CurrentPackage/NoContext.java \\\n+classpath/org/omg/PortableServer/CurrentPackage/NoContextHelper.java \\\n+classpath/org/omg/PortableServer/DynamicImplementation.java \\\n+classpath/org/omg/PortableServer/ForwardRequest.java \\\n+classpath/org/omg/PortableServer/ForwardRequestHelper.java \\\n+classpath/org/omg/PortableServer/ID_ASSIGNMENT_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/ID_UNIQUENESS_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/IMPLICIT_ACTIVATION_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/IdAssignmentPolicy.java \\\n+classpath/org/omg/PortableServer/IdAssignmentPolicyOperations.java \\\n+classpath/org/omg/PortableServer/IdAssignmentPolicyValue.java \\\n+classpath/org/omg/PortableServer/IdUniquenessPolicy.java \\\n+classpath/org/omg/PortableServer/IdUniquenessPolicyOperations.java \\\n+classpath/org/omg/PortableServer/IdUniquenessPolicyValue.java \\\n+classpath/org/omg/PortableServer/ImplicitActivationPolicy.java \\\n+classpath/org/omg/PortableServer/ImplicitActivationPolicyOperations.java \\\n+classpath/org/omg/PortableServer/ImplicitActivationPolicyValue.java \\\n+classpath/org/omg/PortableServer/LIFESPAN_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/LifespanPolicy.java \\\n+classpath/org/omg/PortableServer/LifespanPolicyOperations.java \\\n+classpath/org/omg/PortableServer/LifespanPolicyValue.java \\\n+classpath/org/omg/PortableServer/POA.java \\\n+classpath/org/omg/PortableServer/POAHelper.java \\\n+classpath/org/omg/PortableServer/POAManager.java \\\n+classpath/org/omg/PortableServer/POAManagerOperations.java \\\n+classpath/org/omg/PortableServer/POAManagerPackage/AdapterInactive.java \\\n+classpath/org/omg/PortableServer/POAManagerPackage/AdapterInactiveHelper.java \\\n+classpath/org/omg/PortableServer/POAManagerPackage/State.java \\\n+classpath/org/omg/PortableServer/POAOperations.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterAlreadyExists.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterAlreadyExistsHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterNonExistent.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterNonExistentHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/InvalidPolicy.java \\\n+classpath/org/omg/PortableServer/POAPackage/InvalidPolicyHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/NoServant.java \\\n+classpath/org/omg/PortableServer/POAPackage/NoServantHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectAlreadyActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectAlreadyActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectNotActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectNotActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantAlreadyActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantAlreadyActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantNotActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantNotActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongAdapter.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongAdapterHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongPolicy.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongPolicyHelper.java \\\n+classpath/org/omg/PortableServer/REQUEST_PROCESSING_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/RequestProcessingPolicy.java \\\n+classpath/org/omg/PortableServer/RequestProcessingPolicyOperations.java \\\n+classpath/org/omg/PortableServer/RequestProcessingPolicyValue.java \\\n+classpath/org/omg/PortableServer/SERVANT_RETENTION_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/Servant.java \\\n+classpath/org/omg/PortableServer/ServantActivator.java \\\n+classpath/org/omg/PortableServer/ServantActivatorHelper.java \\\n+classpath/org/omg/PortableServer/ServantActivatorOperations.java \\\n+classpath/org/omg/PortableServer/ServantActivatorPOA.java \\\n+classpath/org/omg/PortableServer/ServantLocator.java \\\n+classpath/org/omg/PortableServer/ServantLocatorHelper.java \\\n+classpath/org/omg/PortableServer/ServantLocatorOperations.java \\\n+classpath/org/omg/PortableServer/ServantLocatorPOA.java \\\n+classpath/org/omg/PortableServer/ServantLocatorPackage/CookieHolder.java \\\n+classpath/org/omg/PortableServer/ServantManager.java \\\n+classpath/org/omg/PortableServer/ServantManagerOperations.java \\\n+classpath/org/omg/PortableServer/ServantRetentionPolicy.java \\\n+classpath/org/omg/PortableServer/ServantRetentionPolicyOperations.java \\\n+classpath/org/omg/PortableServer/ServantRetentionPolicyValue.java \\\n+classpath/org/omg/PortableServer/THREAD_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/ThreadPolicy.java \\\n+classpath/org/omg/PortableServer/ThreadPolicyOperations.java \\\n+classpath/org/omg/PortableServer/ThreadPolicyValue.java \\\n+classpath/org/omg/PortableServer/_ServantActivatorStub.java \\\n+classpath/org/omg/PortableServer/_ServantLocatorStub.java \\\n+classpath/org/omg/PortableServer/portable/Delegate.java \\\n+classpath/org/omg/SendingContext/RunTime.java \\\n+classpath/org/omg/SendingContext/RunTimeOperations.java \\\n+classpath/org/omg/stub/java/rmi/_Remote_Stub.java\n+\n org_w3c_source_files = \\\n classpath/external/w3c_dom/org/w3c/dom/Attr.java \\\n classpath/external/w3c_dom/org/w3c/dom/CDATASection.java \\\n@@ -5031,11 +5754,15 @@ ordinary_header_files = \\\n   $(org_ietf_jgss_header_files)\n \n bc_objects = \\\n+  gnu-CORBA.lo \\\n   gnu-java-beans.lo \\\n+  gnu-javax-rmi.lo \\\n   gnu-javax-sound-midi.lo \\\n   gnu-xml.lo \\\n   javax-imageio.lo \\\n+  javax-rmi.lo \\\n   javax-xml.lo \\\n+  org-omg.lo \\\n   org-w3c.lo \\\n   org-xml.lo\n \n@@ -6827,6 +7554,11 @@ lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPEND\n %.lo: %.list\n \t$(LTGCJCOMPILE) -c -o $@ -MT $@ -MD -MP -MF $(basename $@).deps @$<\n \n+gnu-CORBA.lo: $(gnu_CORBA_source_files)\n+\t@find classpath/lib/gnu/CORBA -name '*.class' > gnu-CORBA.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-CORBA.lo @gnu-CORBA.list\n+\t@rm -f gnu-CORBA.list\n+\n gnu/awt.list: $(gnu_awt_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_awt_source_files); do \\\n@@ -7392,6 +8124,11 @@ gnu/javax/imageio/bmp.list: $(gnu_javax_imageio_bmp_source_files)\n \n -include gnu/javax/imageio/bmp.deps\n \n+gnu-javax-rmi.lo: $(gnu_javax_rmi_source_files)\n+\t@find classpath/lib/gnu/javax/rmi -name '*.class' > gnu-javax-rmi.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-javax-rmi.lo @gnu-javax-rmi.list\n+\t@rm -f gnu-javax-rmi.list\n+\n gnu-javax-sound-midi.lo: $(gnu_javax_sound_midi_source_files)\n \t@find classpath/lib/gnu/javax/sound/midi -name '*.class' > gnu-javax-sound-midi.list\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-javax-sound-midi.lo @gnu-javax-sound-midi.list\n@@ -8077,6 +8814,11 @@ javax/print/event.list: $(javax_print_event_source_files)\n \n -include javax/print/event.deps\n \n+javax-rmi.lo: $(javax_rmi_source_files)\n+\t@find classpath/lib/javax/rmi -name '*.class' > javax-rmi.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o javax-rmi.lo @javax-rmi.list\n+\t@rm -f javax-rmi.list\n+\n javax/security/auth.list: $(javax_security_auth_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(javax_security_auth_source_files); do \\\n@@ -8392,6 +9134,11 @@ org/ietf/jgss.list: $(org_ietf_jgss_source_files)\n \n -include org/ietf/jgss.deps\n \n+org-omg.lo: $(org_omg_source_files)\n+\t@find classpath/lib/org/omg -name '*.class' > org-omg.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o org-omg.lo @org-omg.list\n+\t@rm -f org-omg.list\n+\n org-w3c.lo: $(org_w3c_source_files)\n \t@find classpath/lib/org/w3c -name '*.class' > org-w3c.list\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o org-w3c.lo @org-w3c.list"}, {"sha": "7cfabccd7ba22c4aff529c23b74ace54dac32d35", "filename": "libjava/gnu/CORBA/DynAn/RecordAny.java", "status": "added", "additions": 416, "deletions": 0, "changes": 416, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fgnu%2FCORBA%2FDynAn%2FRecordAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fgnu%2FCORBA%2FDynAn%2FRecordAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2FCORBA%2FDynAn%2FRecordAny.java?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -0,0 +1,416 @@\n+/* RecordAny.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.DynAn;\n+\n+import gnu.CORBA.Unexpected;\n+import gnu.CORBA.HolderLocator;\n+\n+import org.omg.CORBA.Any;\n+import org.omg.CORBA.ORB;\n+import org.omg.CORBA.TCKind;\n+import org.omg.CORBA.TypeCode;\n+import org.omg.CORBA.TypeCodePackage.BadKind;\n+import org.omg.CORBA.TypeCodePackage.Bounds;\n+import org.omg.CORBA.portable.Streamable;\n+import org.omg.DynamicAny.DynAny;\n+import org.omg.DynamicAny.DynAnyPackage.InvalidValue;\n+import org.omg.DynamicAny.DynAnyPackage.TypeMismatch;\n+import org.omg.DynamicAny.DynStruct;\n+import org.omg.DynamicAny.DynValueCommonOperations;\n+import org.omg.DynamicAny.NameDynAnyPair;\n+import org.omg.DynamicAny.NameValuePair;\n+\n+import java.io.Serializable;\n+\n+import java.lang.reflect.Field;\n+\n+/**\n+ * A shared base for both dynamic structure an dynamic value final_type.\n+ *\n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public abstract class RecordAny\n+  extends DivideableAny\n+  implements DynAny, Serializable\n+{\n+  /**\n+   * Use serialVersionUID for interoperability.\n+   */\n+  private static final long serialVersionUID = 1;\n+  String[] fNames;\n+\n+  /**\n+   * Creates the structure with the given typecode.\n+   *\n+   * @param fields The DynAny's, representing the fields of the structure.\n+   */\n+  public RecordAny(TypeCode oType, TypeCode aType,\n+                        gnuDynAnyFactory aFactory, ORB anOrb\n+                       )\n+  {\n+    super(oType, aType, aFactory, anOrb);\n+  }\n+\n+  /** @inheritDoc */\n+  public TCKind current_member_kind()\n+                             throws TypeMismatch, InvalidValue\n+  {\n+    if (array.length == 0)\n+      throw new TypeMismatch(EMPTY);\n+    try\n+      {\n+        return final_type.member_type(pos).kind();\n+      }\n+    catch (BadKind e)\n+      {\n+        TypeMismatch t = new TypeMismatch();\n+        t.initCause(e);\n+        throw t;\n+      }\n+    catch (Bounds e)\n+      {\n+        InvalidValue t = new InvalidValue();\n+        t.initCause(e);\n+        throw t;\n+      }\n+  }\n+\n+  /** @inheritDoc */\n+  public String current_member_name()\n+                             throws TypeMismatch, InvalidValue\n+  {\n+    if (array.length == 0)\n+      throw new TypeMismatch(EMPTY);\n+    try\n+      {\n+        return final_type.member_name(pos);\n+      }\n+    catch (BadKind e)\n+      {\n+        TypeMismatch t = new TypeMismatch();\n+        t.initCause(e);\n+        throw t;\n+      }\n+    catch (Bounds e)\n+      {\n+        InvalidValue t = new InvalidValue();\n+        t.initCause(e);\n+        throw t;\n+      }\n+  }\n+\n+  /**\n+   * Get content of the structure. This method must be defined on a different\n+   * name because get_members_as_dyn_any() throws exception only in some of the\n+   * supported interfaces.\n+   */\n+  public NameDynAnyPair[] gnu_get_members_as_dyn_any()\n+  {\n+    NameDynAnyPair[] r = new NameDynAnyPair[ array.length ];\n+    for (int i = 0; i < r.length; i++)\n+      {\n+        try\n+          {\n+            r [ i ] = new NameDynAnyPair(fNames [ i ], array [ i ]);\n+          }\n+        catch (Exception ex)\n+          {\n+            throw new Unexpected(ex);\n+          }\n+      }\n+    return r;\n+  }\n+\n+  /**\n+   * Get content of the structure. This method must be defined on a different\n+   * name because get_members_as_dyn_any() throws exception only in some of the\n+   * supported interfaces.\n+   */\n+  public NameValuePair[] gnu_get_members()\n+  {\n+    NameValuePair[] r = new NameValuePair[ array.length ];\n+    for (int i = 0; i < r.length; i++)\n+      {\n+        try\n+          {\n+            r [ i ] = new NameValuePair(fNames [ i ], array [ i ].to_any());\n+          }\n+        catch (Exception ex)\n+          {\n+            throw new Unexpected(ex);\n+          }\n+      }\n+    return r;\n+  }\n+\n+  /**\n+   * Set members from the provided array.\n+   */\n+  public void set_members_as_dyn_any(NameDynAnyPair[] value)\n+                              throws TypeMismatch, InvalidValue\n+  {\n+    if (value.length != array.length)\n+      throw new InvalidValue(sizeMismatch(array.length, value.length));\n+\n+    for (int i = 0; i < value.length; i++)\n+      {\n+        DynAny dynAny = value [ i ].value;\n+        checkType(dynAny.type(), i);\n+        checkName(value [ i ].id, i);\n+\n+        array [ i ] = dynAny;\n+      }\n+    pos = 0;\n+  }\n+\n+  /**\n+   * Check the name at the given position (\"\" matches everything).\n+   */\n+  private void checkName(String xName, int i)\n+                  throws TypeMismatch\n+  {\n+    if (xName.length() > 0 && fNames [ i ].length() > 0)\n+      if (!xName.equals(fNames [ i ]))\n+        throw new TypeMismatch(\"Field name mismatch \" + xName + \" expected \" +\n+                               fNames [ i ]\n+                              );\n+  }\n+\n+  /**\n+   * Check the type at the given position.\n+   */\n+  private void checkType(TypeCode t, int i)\n+                  throws TypeMismatch\n+  {\n+    if (!array [ i ].type().equal(t))\n+      throw new TypeMismatch(typeMismatch(array [ i ].type(), t) + \" field \" +\n+                             i\n+                            );\n+  }\n+\n+  /**\n+   * Set members from the provided array.\n+   */\n+  public void set_members(NameValuePair[] value)\n+                   throws TypeMismatch, InvalidValue\n+  {\n+    if (value.length != array.length)\n+      throw new InvalidValue(sizeMismatch(array.length, value.length));\n+\n+    for (int i = 0; i < value.length; i++)\n+      {\n+        Any any = value [ i ].value;\n+        checkType(any.type(), i);\n+        checkName(value [ i ].id, i);\n+\n+        array [ i ].from_any(any);\n+      }\n+    pos = 0;\n+  }\n+\n+  /** @inheritDoc */\n+  public void assign(DynAny from)\n+              throws TypeMismatch\n+  {\n+    checkType(official_type, from.type());\n+    if (from instanceof DynStruct)\n+      {\n+        try\n+          {\n+            set_members_as_dyn_any(((DynStruct) from).get_members_as_dyn_any());\n+          }\n+        catch (InvalidValue e)\n+          {\n+            TypeMismatch t = new TypeMismatch(\"Invalid value\");\n+            t.initCause(e);\n+            throw t;\n+          }\n+      }\n+    else\n+      throw new TypeMismatch(\"Not a DynStruct\");\n+  }\n+\n+  /**\n+   * Create a copy.\n+   */\n+  public DynAny copy()\n+  {\n+    DynAny[] c = new DynAny[ array.length ];\n+    for (int i = 0; i < c.length; i++)\n+      {\n+        c [ i ] = array [ i ].copy();\n+      }\n+\n+    RecordAny d = newInstance(official_type, final_type, factory, orb);\n+    d.array = c;\n+    return d;\n+  }\n+\n+  /**\n+   * Create a new instance when copying.\n+   */\n+  protected abstract RecordAny newInstance(TypeCode oType, TypeCode aType,\n+                                                gnuDynAnyFactory aFactory,\n+                                                ORB anOrb\n+                                               );\n+\n+  /**\n+   * Done via reflection.\n+   */\n+  public Any to_any()\n+  {\n+    try\n+      {\n+        Streamable sHolder = HolderLocator.createHolder(official_type);\n+\n+        Class sHolderClass = sHolder.getClass();\n+        Field sHolderValue = sHolderClass.getField(\"value\");\n+        Class sClass = sHolderValue.getType();\n+\n+        Object structure = sClass.newInstance();\n+        Object member;\n+        Any am;\n+        Field vread;\n+        Field vwrite;\n+        Streamable memberHolder;\n+\n+        for (int i = 0; i < array.length; i++)\n+          {\n+            am = array [ i ].to_any();\n+            memberHolder = am.extract_Streamable();\n+            vwrite = structure.getClass().getField(final_type.member_name(i));\n+            vread = memberHolder.getClass().getField(\"value\");\n+            member = vread.get(memberHolder);\n+            vwrite.set(structure, member);\n+          }\n+\n+        Any g = createAny();\n+        sHolderValue.set(sHolder, structure);\n+        g.insert_Streamable(sHolder);\n+        g.type(official_type);\n+        return g;\n+      }\n+    catch (Exception e)\n+      {\n+        throw new Unexpected(e);\n+      }\n+  }\n+\n+  /**\n+   * Done via reflection.\n+   */\n+  public void from_any(Any an_any)\n+                throws TypeMismatch, InvalidValue\n+  {\n+    checkType(official_type, an_any.type());\n+    try\n+      {\n+        Streamable s = an_any.extract_Streamable();\n+        if (s == null)\n+          {\n+            if (this instanceof DynValueCommonOperations)\n+              {\n+                ((DynValueCommonOperations) this).set_to_null();\n+                return;\n+              }\n+            else\n+              throw new InvalidValue(ISNULL);\n+          }\n+\n+        Object structure = s.getClass().getField(\"value\").get(s);\n+        if (structure == null && (this instanceof DynValueCommonOperations))\n+          {\n+            ((DynValueCommonOperations) this).set_to_null();\n+            return;\n+          }\n+\n+        Any member;\n+        Streamable holder;\n+        Object field;\n+        TypeCode fType;\n+        Field fField;\n+\n+        for (int i = 0; i < array.length; i++)\n+          {\n+            fField = structure.getClass().getField(fNames [ i ]);\n+            field = fField.get(structure);\n+            fType = array [ i ].type();\n+            holder = HolderLocator.createHolder(fType);\n+\n+            member = createAny();\n+            holder.getClass().getField(\"value\").set(holder, field);\n+            member.insert_Streamable(holder);\n+            member.type(fType);\n+\n+            array [ i ].from_any(member);\n+          }\n+\n+        if (this instanceof DynValueCommonOperations)\n+          ((DynValueCommonOperations) this).set_to_value();\n+      }\n+    catch (InvalidValue v)\n+      {\n+        throw v;\n+      }\n+    catch (NoSuchFieldException ex)\n+      {\n+        TypeMismatch v =\n+          new TypeMismatch(\"holder value does not match typecode\");\n+        v.initCause(ex);\n+        throw v;\n+      }\n+    catch (Exception ex)\n+      {\n+        TypeMismatch t = new TypeMismatch();\n+        t.initCause(ex);\n+        throw t;\n+      }\n+  }\n+\n+// GCJ LOCAL - package private delegates to work around bug in gnuDynValue.\n+  int record_component_count()\n+  {\n+    return component_count();\n+  }\n+\n+  boolean record_equal(DynAny o)\n+  {\n+    return equal(o);\n+  }\n+}"}, {"sha": "df9524125123311b8a90061f2cebd62ffd7f45f4", "filename": "libjava/gnu/CORBA/DynAn/gnuDynValue.java", "status": "added", "additions": 386, "deletions": 0, "changes": 386, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2FCORBA%2FDynAn%2FgnuDynValue.java?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -0,0 +1,386 @@\n+/* gnuDynValue.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA.DynAn;\n+\n+import gnu.CORBA.Minor;\n+import gnu.CORBA.Unexpected;\n+\n+import org.omg.CORBA.Any;\n+import org.omg.CORBA.BAD_PARAM;\n+import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.ORB;\n+import org.omg.CORBA.TCKind;\n+import org.omg.CORBA.TypeCode;\n+import org.omg.CORBA.VM_TRUNCATABLE;\n+import org.omg.CORBA.portable.OutputStream;\n+import org.omg.CORBA.portable.ValueFactory;\n+import org.omg.DynamicAny.DynAny;\n+import org.omg.DynamicAny.DynAnyPackage.InvalidValue;\n+import org.omg.DynamicAny.DynAnyPackage.TypeMismatch;\n+import org.omg.DynamicAny.DynStruct;\n+import org.omg.DynamicAny.DynValue;\n+import org.omg.DynamicAny.DynValueCommon;\n+import org.omg.DynamicAny.DynValueOperations;\n+import org.omg.DynamicAny.NameDynAnyPair;\n+import org.omg.DynamicAny.NameValuePair;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Implementation of DynValue.\n+ *\n+ * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n+ */\n+public class gnuDynValue extends RecordAny implements DynValue,\n+  Serializable\n+{\n+  /**\n+   * Use serialVersionUID for interoperability.\n+   */\n+  private static final long serialVersionUID = 1;\n+\n+  /**\n+   * If true, the value of this ValueType is set to null.\n+   */\n+  boolean isNull;\n+\n+  /**\n+   * Create an instance.\n+   */\n+  public gnuDynValue(TypeCode oType, TypeCode aType,\n+    gnuDynAnyFactory aFactory, ORB anOrb\n+  )\n+  {\n+    super(oType, aType, aFactory, anOrb);\n+\n+    // Initialise fields. The array of fields also includes all inherited\n+    // fields.\n+    try\n+      {\n+        array = new DynAny[ final_type.member_count() ];\n+        fNames = new String[ array.length ];\n+        for (int i = 0; i < array.length; i++)\n+          {\n+            array [ i ] =\n+              factory.create_dyn_any_from_type_code(final_type.member_type(i));\n+            fNames [ i ] = final_type.member_name(i);\n+          }\n+\n+        // Search of inherited members.\n+        if (final_type.type_modifier() == VM_TRUNCATABLE.value)\n+          {\n+            TypeCode parent = final_type.concrete_base_type();\n+            DynAny ancestor = factory.create_dyn_any_from_type_code(parent);\n+\n+            if (ancestor instanceof DynValue)\n+              {\n+                // Add members of ancestor in front of the curren members.\n+                DynValue anc = (DynValue) ancestor;\n+                anc.set_to_value();\n+\n+                NameDynAnyPair[] aar = anc.get_members_as_dyn_any();\n+                inheritFields(aar);\n+              }\n+            else if (ancestor instanceof DynStruct)\n+              {\n+                // Add members of ancestor in front of the curren members.\n+                DynStruct anc = (DynStruct) ancestor;\n+                NameDynAnyPair[] aar = anc.get_members_as_dyn_any();\n+                inheritFields(aar);\n+              }\n+            else\n+              throw new BAD_PARAM(\"The parent of \" + final_type.id() + \", \" +\n+                parent.id() + \", is not structure nor value.\"\n+              );\n+          }\n+      }\n+    catch (Exception e)\n+      {\n+        throw new Unexpected(e);\n+      }\n+\n+    set_to_null();\n+  }\n+\n+  /**\n+   * Inherit the provided fields.\n+   */\n+  private void inheritFields(NameDynAnyPair[] aar)\n+  {\n+    DynAny[] nArray = new DynAny[ array.length + aar.length ];\n+    String[] nNames = new String[ array.length + aar.length ];\n+    int p = 0;\n+    for (int i = 0; i < aar.length; i++)\n+      {\n+        nArray [ p ] = aar [ i ].value;\n+        nNames [ p ] = aar [ i ].id;\n+        p++;\n+      }\n+\n+    for (int i = 0; i < array.length; i++)\n+      {\n+        nArray [ p ] = array [ i ];\n+        nNames [ p ] = fNames [ i ];\n+        p++;\n+      }\n+\n+    array = nArray;\n+    fNames = nNames;\n+  }\n+\n+  /** @inheritDoc */\n+  public TCKind current_member_kind() throws TypeMismatch, InvalidValue\n+  {\n+    if (isNull)\n+      throw new TypeMismatch(ISNULL);\n+    else\n+      return super.current_member_kind();\n+  }\n+  ;\n+\n+  /** @inheritDoc */\n+  public String current_member_name() throws TypeMismatch, InvalidValue\n+  {\n+    if (isNull)\n+      throw new TypeMismatch(ISNULL);\n+    else\n+      return super.current_member_name();\n+  }\n+  ;\n+\n+  /** @inheritDoc */\n+  public NameDynAnyPair[] get_members_as_dyn_any() throws InvalidValue\n+  {\n+    if (isNull)\n+      throw new InvalidValue(ISNULL);\n+    return super.gnu_get_members_as_dyn_any();\n+  }\n+  ;\n+\n+  /** @inheritDoc */\n+  public NameValuePair[] get_members() throws InvalidValue\n+  {\n+    if (isNull)\n+      throw new InvalidValue(ISNULL);\n+    else\n+      return super.gnu_get_members();\n+  }\n+  ;\n+\n+  /** @inheritDoc */\n+  public void set_members_as_dyn_any(NameDynAnyPair[] value)\n+    throws TypeMismatch, InvalidValue\n+  {\n+    super.set_members_as_dyn_any(value);\n+    isNull = false;\n+  }\n+  ;\n+\n+  /** @inheritDoc */\n+  public void set_members(NameValuePair[] value)\n+    throws TypeMismatch, InvalidValue\n+  {\n+    super.set_members(value);\n+    isNull = false;\n+  }\n+  ;\n+\n+  /** @inheritDoc */\n+  public boolean is_null()\n+  {\n+    return isNull;\n+  }\n+\n+  /** @inheritDoc */\n+  public void set_to_null()\n+  {\n+    isNull = true;\n+    valueChanged();\n+  }\n+\n+  /** @inheritDoc */\n+  public void set_to_value()\n+  {\n+    isNull = false;\n+    valueChanged();\n+  }\n+\n+  /**\n+   * Create a new instance.\n+   */\n+  protected RecordAny newInstance(TypeCode oType, TypeCode aType,\n+    gnuDynAnyFactory aFactory, ORB anOrb\n+  )\n+  {\n+    gnuDynValue v = new gnuDynValue(oType, aType, aFactory, anOrb);\n+    if (isNull)\n+      v.set_to_null();\n+    else\n+      v.set_to_value();\n+    return v;\n+  }\n+\n+  /**\n+   * Compare for equality, minding null values.\n+   */\n+  public boolean equal(DynAny other)\n+  {\n+    if (other instanceof DynValueOperations)\n+      {\n+        DynValueCommon o = (DynValueCommon) other;\n+        if (isNull)\n+          return o.is_null() && o.type().equal(official_type);\n+        else\n+          return !o.is_null() && record_equal(other); // GCJ LOCAL bug #24938\n+      }\n+    else\n+      return false;\n+  }\n+\n+  /**\n+   * Get the focused component, throwing exception if the current value is null.\n+   */\n+  protected DynAny focused() throws InvalidValue, TypeMismatch\n+  {\n+    if (isNull)\n+      throw new TypeMismatch(ISNULL);\n+    else\n+      return super.focused();\n+  }\n+\n+  /**\n+   * Convert into Any.\n+   */\n+  public Any to_any()\n+  {\n+    if (isNull)\n+      {\n+        Any a0 = createAny();\n+        a0.type(orb.get_primitive_tc(TCKind.tk_null));\n+        return a0;\n+      }\n+    else\n+      {\n+        try\n+          {\n+            ValueFactory factory =\n+              ((org.omg.CORBA_2_3.ORB) orb).lookup_value_factory(official_type.id());\n+            if (factory == null)\n+              {\n+                MARSHAL m = new MARSHAL(\"Factory for \" + official_type.id() +\n+                \" not registered.\");\n+                m.minor = Minor.Factory;\n+                throw m;\n+              }\n+\n+            OutputStream out = orb.create_output_stream();\n+\n+            for (int i = 0; i < array.length; i++)\n+              array [ i ].to_any().write_value(out);\n+\n+            org.omg.CORBA_2_3.portable.InputStream in =\n+              (org.omg.CORBA_2_3.portable.InputStream) out.create_input_stream();\n+            Serializable v = factory.read_value(in);\n+\n+            Any g = createAny();\n+            g.type(official_type);\n+            g.insert_Value(v, official_type);\n+\n+            return g;\n+          }\n+        catch (Exception e)\n+          {\n+            throw new Unexpected(e);\n+          }\n+      }\n+  }\n+\n+  /** @inheritDoc */\n+  public void assign(DynAny from) throws TypeMismatch\n+  {\n+    checkType(official_type, from.type());\n+\n+    if (from instanceof DynValue)\n+      {\n+        DynValue other = (DynValue) from;\n+        if (other.is_null())\n+          set_to_null();\n+        else\n+          {\n+            set_to_value();\n+            try\n+              {\n+                DynValueOperations src = (DynValueOperations) from;\n+                set_members_as_dyn_any(src.get_members_as_dyn_any());\n+              }\n+            catch (InvalidValue e)\n+              {\n+                TypeMismatch t = new TypeMismatch(\"Invalid value\");\n+                t.initCause(e);\n+                throw t;\n+              }\n+          }\n+      }\n+    else\n+      throw new TypeMismatch(\"Not a DynValue\");\n+  }\n+\n+  /**\n+   * Get the number of components.\n+   */\n+  public int component_count()\n+  {\n+    return isNull ? 0 : record_component_count(); // GCJ LOCAL bug #24938\n+  }\n+\n+  /** {@inheritDoc} */\n+  public Serializable get_val() throws TypeMismatch, InvalidValue\n+  {\n+    return to_any().extract_Value();\n+  }\n+\n+  /** {@inheritDoc} */\n+  public void insert_val(Serializable a_x) throws InvalidValue, TypeMismatch\n+  {\n+    Any a = to_any();\n+    a.insert_Value(a_x);\n+    from_any(a);\n+    valueChanged();\n+  }\n+}"}, {"sha": "9f215fc64ee6d824d27908cdde692a179f6d188f", "filename": "libjava/gnu/CORBA/ObjectCreator.java", "status": "added", "additions": 596, "deletions": 0, "changes": 596, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fgnu%2FCORBA%2FObjectCreator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fgnu%2FCORBA%2FObjectCreator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2FCORBA%2FObjectCreator.java?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -0,0 +1,596 @@\n+/* ObjectCreator.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.CORBA;\n+\n+import gnu.CORBA.CDR.UnknownExceptionCtxHandler;\n+import gnu.CORBA.CDR.BufferredCdrInput;\n+import gnu.CORBA.CDR.BufferedCdrOutput;\n+import gnu.CORBA.CDR.AbstractCdrInput;\n+import gnu.CORBA.GIOP.ServiceContext;\n+import gnu.CORBA.typecodes.RecordTypeCode;\n+// GCJ LOCAL - We don't have this yet.\n+// import gnu.classpath.VMStackWalker;\n+\n+import org.omg.CORBA.Any;\n+import org.omg.CORBA.CompletionStatus;\n+import org.omg.CORBA.CompletionStatusHelper;\n+import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.SystemException;\n+import org.omg.CORBA.TCKind;\n+import org.omg.CORBA.UNKNOWN;\n+import org.omg.CORBA.UserException;\n+import org.omg.CORBA.portable.IDLEntity;\n+import org.omg.CORBA.portable.InputStream;\n+import org.omg.CORBA.portable.OutputStream;\n+import org.omg.CORBA.portable.ValueBase;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+import java.util.WeakHashMap;\n+\n+import javax.rmi.CORBA.Util;\n+\n+/**\n+ * Creates java objects from the agreed IDL names for the simple case when the\n+ * CORBA object is directly mapped into the locally defined java class.\n+ * \n+ * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n+ */\n+public class ObjectCreator\n+{\n+  /**\n+   * The standard OMG prefix.\n+   */\n+  public static final String OMG_PREFIX = \"omg.org/\";\n+\n+  /**\n+   * The standard java prefix.\n+   */\n+  public static final String JAVA_PREFIX = \"org.omg.\";\n+\n+  /**\n+   * The prefix for classes that are placed instide the gnu.CORBA namespace.\n+   */\n+  public static final String CLASSPATH_PREFIX = \"gnu.CORBA.\";\n+\n+  /**\n+   * Maps classes to they IDL or RMI names. Computing RMI name is an expensive\n+   * operations, so frequently used RMI keys are reused. The map must be weak to\n+   * ensure that the class can be unloaded, when applicable.\n+   */\n+  public static Map m_names = new WeakHashMap();\n+\n+  /**\n+   * Maps IDL strings into known classes. The map must be weak to ensure that\n+   * the class can be unloaded, when applicable.\n+   */\n+  public static Map m_classes = new WeakHashMap();\n+\n+  /**\n+   * Maps IDL types to they helpers.\n+   */\n+  public static Map m_helpers = new WeakHashMap();\n+\n+  /**\n+   * Try to instantiate an object with the given IDL name. The object must be\n+   * mapped to the local java class. The omg.org domain must be mapped into the\n+   * object in either org/omg or gnu/CORBA namespace.\n+   * \n+   * @param IDL name\n+   * @return instantiated object instance or null if no such available.\n+   */\n+  public static java.lang.Object createObject(String idl, String suffix)\n+  {\n+    synchronized (m_classes)\n+      {\n+        Class known = (Class) (suffix == null ? m_classes.get(idl)\n+          : m_classes.get(idl + 0xff + suffix));\n+        Object object;\n+\n+        if (known != null)\n+          {\n+            try\n+              {\n+                return known.newInstance();\n+              }\n+            catch (Exception ex)\n+              {\n+                RuntimeException rex = new RuntimeException(idl + \" suffix \"\n+                  + suffix, ex);\n+                throw rex;\n+              }\n+          }\n+        else\n+          {\n+            if (suffix == null)\n+              suffix = \"\";\n+            try\n+              {\n+                known = forName(toClassName(JAVA_PREFIX, idl) + suffix);\n+                object = known.newInstance();\n+              }\n+            catch (Exception ex)\n+              {\n+                try\n+                  {\n+                    known = forName(toClassName(CLASSPATH_PREFIX, idl)\n+                      + suffix);\n+                    object = known.newInstance();\n+                  }\n+                catch (Exception exex)\n+                  {\n+                    return null;\n+                  }\n+              }\n+            m_classes.put(idl + 0xff + suffix, known);\n+            return object;\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Read the system exception from the given stream.\n+   * \n+   * @param input the CDR stream to read from.\n+   * @param contexts the service contexts in request/reply header/\n+   * \n+   * @return the exception that has been stored in the stream (IDL name, minor\n+   * code and completion status).\n+   */\n+  public static SystemException readSystemException(InputStream input,\n+    ServiceContext[] contexts)\n+  {\n+    SystemException exception;\n+\n+    String idl = input.read_string();\n+    int minor = input.read_ulong();\n+    CompletionStatus completed = CompletionStatusHelper.read(input);\n+\n+    try\n+      {\n+        exception = (SystemException) createObject(idl, null);\n+        exception.minor = minor;\n+        exception.completed = completed;\n+      }\n+    catch (Exception ex)\n+      {\n+        UNKNOWN u = new UNKNOWN(\"Unsupported system exception \" + idl, minor,\n+          completed);\n+        u.initCause(ex);\n+        throw u;\n+      }\n+\n+    try\n+      {\n+        // If UnknownExceptionInfo is present in the contexts, read it and\n+        // set as a cause of this exception.\n+        ServiceContext uEx = ServiceContext.find(\n+          ServiceContext.UnknownExceptionInfo, contexts);\n+\n+        if (uEx != null)\n+          {\n+            BufferredCdrInput in = new BufferredCdrInput(uEx.context_data);\n+            in.setOrb(in.orb());\n+            if (input instanceof AbstractCdrInput)\n+              {\n+                ((AbstractCdrInput) input).cloneSettings(in);\n+              }\n+\n+            Throwable t = UnknownExceptionCtxHandler.read(in, contexts);\n+            exception.initCause(t);\n+          }\n+      }\n+    catch (Exception ex)\n+      {\n+        // Unsupported context format. Do not terminate as the user program may\n+        // not need it.\n+      }\n+\n+    return exception;\n+  }\n+\n+  /**\n+   * Reads the user exception, having the given Id, from the input stream. The\n+   * id is expected to be in the form like\n+   * 'IDL:test/org/omg/CORBA/ORB/communication/ourUserException:1.0'\n+   * \n+   * @param idl the exception idl name.\n+   * @param input the stream to read from.\n+   * \n+   * @return the loaded exception.\n+   * @return null if the helper class cannot be found.\n+   */\n+  public static UserException readUserException(String idl, InputStream input)\n+  {\n+    try\n+      {\n+        Class helperClass = findHelper(idl);\n+\n+        Method read = helperClass.getMethod(\"read\",\n+          new Class[] { org.omg.CORBA.portable.InputStream.class });\n+\n+        return (UserException) read.invoke(null, new Object[] { input });\n+      }\n+    catch (MARSHAL mex)\n+      {\n+        // This one is ok to throw\n+        throw mex;\n+      }\n+    catch (Exception ex)\n+      {\n+        ex.printStackTrace();\n+        return null;\n+      }\n+  }\n+\n+  /**\n+   * Gets the helper class name from the string like\n+   * 'IDL:test/org/omg/CORBA/ORB/communication/ourUserException:1.0'\n+   * \n+   * @param IDL the idl name.\n+   */\n+  public static String toHelperName(String IDL)\n+  {\n+    String s = IDL;\n+    int a = s.indexOf(':') + 1;\n+    int b = s.lastIndexOf(':');\n+\n+    s = IDL.substring(a, b);\n+\n+    if (s.startsWith(OMG_PREFIX))\n+      s = JAVA_PREFIX + s.substring(OMG_PREFIX.length());\n+\n+    return s.replace('/', '.') + \"Helper\";\n+  }\n+\n+  /**\n+   * Writes the system exception data to CDR output stream.\n+   * \n+   * @param output a stream to write data to.\n+   * @param ex an exception to write.\n+   */\n+  public static void writeSystemException(OutputStream output,\n+    SystemException ex)\n+  {\n+    String exIDL = getRepositoryId(ex.getClass());\n+    output.write_string(exIDL);\n+    output.write_ulong(ex.minor);\n+    CompletionStatusHelper.write(output, ex.completed);\n+  }\n+\n+  /**\n+   * Converts the given IDL name to class name.\n+   * \n+   * @param IDL the idl name.\n+   * \n+   */\n+  protected static String toClassName(String prefix, String IDL)\n+  {\n+    String s = IDL;\n+    int a = s.indexOf(':') + 1;\n+    int b = s.lastIndexOf(':');\n+\n+    s = IDL.substring(a, b);\n+\n+    if (s.startsWith(OMG_PREFIX))\n+      s = prefix + s.substring(OMG_PREFIX.length());\n+\n+    return s.replace('/', '.');\n+  }\n+\n+  /**\n+   * Converts the given IDL name to class name and tries to load the matching\n+   * class. The OMG prefix (omg.org) is replaced by the java prefix org.omg. No\n+   * other prefixes are added.\n+   * \n+   * @param IDL the idl name.\n+   * \n+   * @return the matching class or null if no such is available.\n+   */\n+  public static Class Idl2class(String IDL)\n+  {\n+    synchronized (m_classes)\n+      {\n+        Class c = (Class) m_classes.get(IDL);\n+\n+        if (c != null)\n+          return c;\n+        else\n+          {\n+            String s = IDL;\n+            int a = s.indexOf(':') + 1;\n+            int b = s.lastIndexOf(':');\n+\n+            s = IDL.substring(a, b);\n+\n+            if (s.startsWith(OMG_PREFIX))\n+              s = JAVA_PREFIX + s.substring(OMG_PREFIX.length());\n+\n+            String cn = s.replace('/', '.');\n+\n+            try\n+              {\n+                c = forName(cn);\n+                m_classes.put(IDL, c);\n+                return c;\n+              }\n+            catch (ClassNotFoundException ex)\n+              {\n+                return null;\n+              }\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Converts the given IDL name to class name, tries to load the matching class\n+   * and create an object instance with parameterless constructor. The OMG\n+   * prefix (omg.org) is replaced by the java prefix org.omg. No other prefixes\n+   * are added.\n+   * \n+   * @param IDL the idl name.\n+   * \n+   * @return instantiated object instance or null if such attempt was not\n+   * successful.\n+   */\n+  public static java.lang.Object Idl2Object(String IDL)\n+  {\n+    Class cx = Idl2class(IDL);\n+\n+    try\n+      {\n+        if (cx != null)\n+          return cx.newInstance();\n+        else\n+          return null;\n+      }\n+    catch (Exception ex)\n+      {\n+        return null;\n+      }\n+  }\n+\n+  /**\n+   * Convert the class name to IDL or RMI name (repository id). If the class\n+   * inherits from IDLEntity, ValueBase or SystemException, returns repository\n+   * Id in the IDL:(..) form. If it does not, returns repository Id in the\n+   * RMI:(..) form.\n+   * \n+   * @param cx the class for that the name must be computed.\n+   * \n+   * @return the idl or rmi name.\n+   */\n+  public static synchronized String getRepositoryId(Class cx)\n+  {\n+    String name = (String) m_names.get(cx);\n+    if (name != null)\n+      return name;\n+\n+    String cn = cx.getName();\n+    if (!(IDLEntity.class.isAssignableFrom(cx)\n+      || ValueBase.class.isAssignableFrom(cx) || SystemException.class.isAssignableFrom(cx)))\n+      {\n+        // Not an IDL entity.\n+        name = Util.createValueHandler().getRMIRepositoryID(cx);\n+      }\n+    else\n+      {\n+        if (cn.startsWith(JAVA_PREFIX))\n+          cn = OMG_PREFIX\n+            + cn.substring(JAVA_PREFIX.length()).replace('.', '/');\n+        else if (cn.startsWith(CLASSPATH_PREFIX))\n+          cn = OMG_PREFIX\n+            + cn.substring(CLASSPATH_PREFIX.length()).replace('.', '/');\n+\n+        name = \"IDL:\" + cn + \":1.0\";\n+      }\n+    m_names.put(cx, name);\n+    return name;\n+  }\n+\n+  /**\n+   * Insert the passed parameter into the given Any, assuming that the helper\n+   * class is available. The helper class must have the \"Helper\" suffix and be\n+   * in the same package as the class of the object being inserted.\n+   * \n+   * @param into the target to insert.\n+   * \n+   * @param object the object to insert. It can be any object as far as the\n+   * corresponding helper is provided.\n+   * \n+   * @return true on success, false otherwise.\n+   */\n+  public static boolean insertWithHelper(Any into, Object object)\n+  {\n+    try\n+      {\n+        String helperClassName = object.getClass().getName() + \"Helper\";\n+        Class helperClass = forName(helperClassName);\n+\n+        Method insert = helperClass.getMethod(\"insert\", new Class[] {\n+          Any.class, object.getClass() });\n+\n+        insert.invoke(null, new Object[] { into, object });\n+\n+        return true;\n+      }\n+    catch (Exception exc)\n+      {\n+        // Failed due some reason.\n+        return false;\n+      }\n+  }\n+\n+  /**\n+   * Insert the system exception into the given Any.\n+   */\n+  public static boolean insertSysException(Any into, SystemException exception)\n+  {\n+    try\n+      {\n+        BufferedCdrOutput output = new BufferedCdrOutput();\n+\n+        String m_exception_id = getRepositoryId(exception.getClass());\n+        output.write_string(m_exception_id);\n+        output.write_ulong(exception.minor);\n+        CompletionStatusHelper.write(output, exception.completed);\n+\n+        String name = getDefaultName(m_exception_id);\n+\n+        GeneralHolder h = new GeneralHolder(output);\n+\n+        into.insert_Streamable(h);\n+\n+        RecordTypeCode r = new RecordTypeCode(TCKind.tk_except);\n+        r.setId(m_exception_id);\n+        r.setName(name);\n+        into.type(r);\n+\n+        return true;\n+      }\n+    catch (Exception ex)\n+      {\n+        ex.printStackTrace();\n+        return false;\n+      }\n+  }\n+\n+  /**\n+   * Get the type name from the IDL string.\n+   */\n+  public static String getDefaultName(String idl)\n+  {\n+    int f1 = idl.lastIndexOf(\"/\");\n+    int p1 = (f1 < 0) ? 0 : f1;\n+    int p2 = idl.indexOf(\":\", p1);\n+    if (p2 < 0)\n+      p2 = idl.length();\n+\n+    String name = idl.substring(f1 + 1, p2);\n+    return name;\n+  }\n+\n+  /**\n+   * Insert this exception into the given Any. On failure, insert the UNKNOWN\n+   * exception.\n+   */\n+  public static void insertException(Any into, Throwable exception)\n+  {\n+    boolean ok = false;\n+    if (exception instanceof SystemException)\n+      ok = insertSysException(into, (SystemException) exception);\n+    else if (exception instanceof UserException)\n+      ok = insertWithHelper(into, exception);\n+\n+    if (!ok)\n+      ok = insertSysException(into, new UNKNOWN());\n+    if (!ok)\n+      throw new InternalError(\"Exception wrapping broken\");\n+  }\n+\n+  /**\n+   * Find helper for the class with the given name.\n+   */\n+  public static Class findHelper(String idl)\n+  {\n+    synchronized (m_helpers)\n+      {\n+        Class c = (Class) m_helpers.get(idl);\n+        if (c != null)\n+          return c;\n+        try\n+          {\n+            String helper = toHelperName(idl);\n+            c = forName(helper);\n+\n+            m_helpers.put(idl, c);\n+            return c;\n+          }\n+        catch (Exception ex)\n+          {\n+            return null;\n+          }\n+      }\n+  }\n+  \n+  /**\n+   * Load the class with the given name. This method tries to use the context\n+   * class loader first. If this fails, it searches for the suitable class\n+   * loader in the caller stack trace. This method is a central point where all\n+   * requests to find a class by name are delegated.\n+   */\n+  public static Class forName(String className) throws ClassNotFoundException\n+  {\n+    try\n+      {\n+        return Class.forName(className, true,\n+                             Thread.currentThread().getContextClassLoader());\n+      }\n+    catch (ClassNotFoundException nex)\n+      {\n+        /**\n+         * Returns the first user defined class loader on the call stack, or\n+         * null when no non-null class loader was found.\n+         */\n+\n+// GCJ LOCAL - We don't have VMStackWalker yet.\n+// We only try the SystemClassLoader for now.\n+//        Class[] ctx = VMStackWalker.getClassContext();\n+//        for (int i = 0; i < ctx.length; i++)\n+//          {\n+//            // Since we live in a class loaded by the bootstrap\n+//            // class loader, getClassLoader is safe to call without\n+//            // needing to be wrapped in a privileged action.\n+//            ClassLoader cl = ctx[i].getClassLoader();\n+\t    ClassLoader cl = ClassLoader.getSystemClassLoader();\n+            try\n+              {\n+                if (cl != null)\n+                  return Class.forName(className, true, cl);\n+              }\n+            catch (ClassNotFoundException nex2)\n+              {\n+                // Try next.\n+              }\n+//          }\n+\n+      }\n+    throw new ClassNotFoundException(className);\n+  }\n+}"}, {"sha": "b182ab659a8db9c6eff53c2c152b6a7240f48a46", "filename": "libjava/scripts/makemake.tcl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fscripts%2Fmakemake.tcl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fscripts%2Fmakemake.tcl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fmakemake.tcl?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -46,6 +46,10 @@ set package_map(gnu/java/awt/peer/qt) bc\n set package_map(gnu/javax/sound/midi) bc\n set package_map(org/xml) bc\n set package_map(org/w3c) bc\n+set package_map(javax/rmi) bc\n+set package_map(org/omg) bc\n+set package_map(gnu/CORBA) bc\n+set package_map(gnu/javax/rmi) bc\n \n # This is handled specially by the Makefile.\n # We still want it byte-compiled so it isn't in the .omit file."}, {"sha": "4cd7e49d8fee3f983f089021c28e0652a9f88f2e", "filename": "libjava/sources.am", "status": "modified", "additions": 746, "deletions": 0, "changes": 746, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fsources.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fsources.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsources.am?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -1,6 +1,172 @@\n ## This file was automatically generated by scripts/makemake.tcl\n ## Do not edit!\n \n+gnu_CORBA_source_files = \\\n+classpath/gnu/CORBA/Asynchron.java \\\n+classpath/gnu/CORBA/BigDecimalHelper.java \\\n+classpath/gnu/CORBA/ByteArrayComparator.java \\\n+classpath/gnu/CORBA/CDR/AbstractCdrInput.java \\\n+classpath/gnu/CORBA/CDR/AbstractCdrOutput.java \\\n+classpath/gnu/CORBA/CDR/AbstractDataInput.java \\\n+classpath/gnu/CORBA/CDR/AbstractDataOutput.java \\\n+classpath/gnu/CORBA/CDR/AligningInput.java \\\n+classpath/gnu/CORBA/CDR/AligningOutput.java \\\n+classpath/gnu/CORBA/CDR/ArrayValueHelper.java \\\n+classpath/gnu/CORBA/CDR/BigEndianInputStream.java \\\n+classpath/gnu/CORBA/CDR/BigEndianOutputStream.java \\\n+classpath/gnu/CORBA/CDR/BufferedCdrOutput.java \\\n+classpath/gnu/CORBA/CDR/BufferredCdrInput.java \\\n+classpath/gnu/CORBA/CDR/EncapsulationStream.java \\\n+classpath/gnu/CORBA/CDR/HeadlessInput.java \\\n+classpath/gnu/CORBA/CDR/IDLTypeHelper.java \\\n+classpath/gnu/CORBA/CDR/LittleEndianInputStream.java \\\n+classpath/gnu/CORBA/CDR/LittleEndianOutputStream.java \\\n+classpath/gnu/CORBA/CDR/UnknownExceptionCtxHandler.java \\\n+classpath/gnu/CORBA/CDR/VMVio.java \\\n+classpath/gnu/CORBA/CDR/Vio.java \\\n+classpath/gnu/CORBA/CDR/gnuRuntime.java \\\n+classpath/gnu/CORBA/CDR/gnuValueStream.java \\\n+classpath/gnu/CORBA/CdrEncapsCodecImpl.java \\\n+classpath/gnu/CORBA/Connected_objects.java \\\n+classpath/gnu/CORBA/CorbaList.java \\\n+classpath/gnu/CORBA/DefaultSocketFactory.java \\\n+classpath/gnu/CORBA/DefinitionKindHolder.java \\\n+classpath/gnu/CORBA/DuplicateNameHolder.java \\\n+classpath/gnu/CORBA/DynAn/AbstractAny.java \\\n+classpath/gnu/CORBA/DynAn/DivideableAny.java \\\n+classpath/gnu/CORBA/DynAn/NameValuePairHolder.java \\\n+gnu/CORBA/DynAn/RecordAny.java \\\n+classpath/gnu/CORBA/DynAn/UndivideableAny.java \\\n+classpath/gnu/CORBA/DynAn/ValueChangeListener.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynAny.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynAnyFactory.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynArray.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynEnum.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynFixed.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynSequence.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynStruct.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynUnion.java \\\n+gnu/CORBA/DynAn/gnuDynValue.java \\\n+classpath/gnu/CORBA/DynAn/gnuDynValueBox.java \\\n+classpath/gnu/CORBA/DynAnySeqHolder.java \\\n+classpath/gnu/CORBA/EmptyExceptionHolder.java \\\n+classpath/gnu/CORBA/ForwardRequestHelper.java \\\n+classpath/gnu/CORBA/GIOP/CancelHeader.java \\\n+classpath/gnu/CORBA/GIOP/CharSets_OSF.java \\\n+classpath/gnu/CORBA/GIOP/CloseMessage.java \\\n+classpath/gnu/CORBA/GIOP/CodeSetServiceContext.java \\\n+classpath/gnu/CORBA/GIOP/ContextHandler.java \\\n+classpath/gnu/CORBA/GIOP/ErrorMessage.java \\\n+classpath/gnu/CORBA/GIOP/MessageHeader.java \\\n+classpath/gnu/CORBA/GIOP/ReplyHeader.java \\\n+classpath/gnu/CORBA/GIOP/RequestHeader.java \\\n+classpath/gnu/CORBA/GIOP/ServiceContext.java \\\n+classpath/gnu/CORBA/GIOP/v1_0/CancelHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_0/ReplyHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_0/RequestHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_2/ReplyHeader.java \\\n+classpath/gnu/CORBA/GIOP/v1_2/RequestHeader.java \\\n+classpath/gnu/CORBA/GeneralHolder.java \\\n+classpath/gnu/CORBA/HolderLocator.java \\\n+classpath/gnu/CORBA/IOR.java \\\n+classpath/gnu/CORBA/Interceptor/ClientRequestInterceptors.java \\\n+classpath/gnu/CORBA/Interceptor/ForwardRequestHolder.java \\\n+classpath/gnu/CORBA/Interceptor/IORInterceptors.java \\\n+classpath/gnu/CORBA/Interceptor/Registrator.java \\\n+classpath/gnu/CORBA/Interceptor/ServerRequestInterceptors.java \\\n+classpath/gnu/CORBA/Interceptor/gnuClientRequestInfo.java \\\n+classpath/gnu/CORBA/Interceptor/gnuIcCurrent.java \\\n+classpath/gnu/CORBA/Interceptor/gnuIorInfo.java \\\n+classpath/gnu/CORBA/Interceptor/gnuServerRequestInfo.java \\\n+classpath/gnu/CORBA/IorDelegate.java \\\n+classpath/gnu/CORBA/IorObject.java \\\n+classpath/gnu/CORBA/IorProvider.java \\\n+classpath/gnu/CORBA/Minor.java \\\n+classpath/gnu/CORBA/NameDynAnyPairHolder.java \\\n+classpath/gnu/CORBA/NameDynAnyPairSeqHolder.java \\\n+classpath/gnu/CORBA/NameValuePairHolder.java \\\n+classpath/gnu/CORBA/NameValuePairSeqHolder.java \\\n+classpath/gnu/CORBA/NamingService/Binding_iterator_impl.java \\\n+classpath/gnu/CORBA/NamingService/Ext.java \\\n+classpath/gnu/CORBA/NamingService/NameComponentComparator.java \\\n+classpath/gnu/CORBA/NamingService/NameParser.java \\\n+classpath/gnu/CORBA/NamingService/NameTransformer.java \\\n+classpath/gnu/CORBA/NamingService/NameValidator.java \\\n+classpath/gnu/CORBA/NamingService/NamingMap.java \\\n+classpath/gnu/CORBA/NamingService/NamingServiceTransient.java \\\n+classpath/gnu/CORBA/NamingService/TransientContext.java \\\n+gnu/CORBA/ObjectCreator.java \\\n+classpath/gnu/CORBA/OctetHolder.java \\\n+classpath/gnu/CORBA/OrbFocused.java \\\n+classpath/gnu/CORBA/OrbFunctional.java \\\n+classpath/gnu/CORBA/OrbRestricted.java \\\n+classpath/gnu/CORBA/Poa/AOM.java \\\n+classpath/gnu/CORBA/Poa/AccessiblePolicy.java \\\n+classpath/gnu/CORBA/Poa/DynamicImpHandler.java \\\n+classpath/gnu/CORBA/Poa/ForwardRequestHolder.java \\\n+classpath/gnu/CORBA/Poa/ForwardedServant.java \\\n+classpath/gnu/CORBA/Poa/InvalidPolicyHolder.java \\\n+classpath/gnu/CORBA/Poa/LocalDelegate.java \\\n+classpath/gnu/CORBA/Poa/LocalRequest.java \\\n+classpath/gnu/CORBA/Poa/LocalServerRequest.java \\\n+classpath/gnu/CORBA/Poa/ORB_1_4.java \\\n+classpath/gnu/CORBA/Poa/ServantDelegateImpl.java \\\n+classpath/gnu/CORBA/Poa/StandardPolicies.java \\\n+classpath/gnu/CORBA/Poa/gnuAdapterActivator.java \\\n+classpath/gnu/CORBA/Poa/gnuForwardRequest.java \\\n+classpath/gnu/CORBA/Poa/gnuIdAssignmentPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuIdUniquenessPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuImplicitActivationPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuLifespanPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuPOA.java \\\n+classpath/gnu/CORBA/Poa/gnuPOAManager.java \\\n+classpath/gnu/CORBA/Poa/gnuPoaCurrent.java \\\n+classpath/gnu/CORBA/Poa/gnuRequestProcessingPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuServantObject.java \\\n+classpath/gnu/CORBA/Poa/gnuServantRetentionPolicy.java \\\n+classpath/gnu/CORBA/Poa/gnuThreadPolicy.java \\\n+classpath/gnu/CORBA/RawReply.java \\\n+classpath/gnu/CORBA/ResponseHandlerImpl.java \\\n+classpath/gnu/CORBA/ServiceDetailHolder.java \\\n+classpath/gnu/CORBA/ServiceRequestAdapter.java \\\n+classpath/gnu/CORBA/SetOverrideTypeHolder.java \\\n+classpath/gnu/CORBA/SimpleDelegate.java \\\n+classpath/gnu/CORBA/SocketRepository.java \\\n+classpath/gnu/CORBA/StreamBasedRequest.java \\\n+classpath/gnu/CORBA/StreamHolder.java \\\n+classpath/gnu/CORBA/StubLocator.java \\\n+classpath/gnu/CORBA/TypeCodeHelper.java \\\n+classpath/gnu/CORBA/TypeKindNamer.java \\\n+classpath/gnu/CORBA/Unexpected.java \\\n+classpath/gnu/CORBA/Version.java \\\n+classpath/gnu/CORBA/WCharHolder.java \\\n+classpath/gnu/CORBA/WStringHolder.java \\\n+classpath/gnu/CORBA/_PolicyImplBase.java \\\n+classpath/gnu/CORBA/gnuAny.java \\\n+classpath/gnu/CORBA/gnuCodecFactory.java \\\n+classpath/gnu/CORBA/gnuContext.java \\\n+classpath/gnu/CORBA/gnuContextList.java \\\n+classpath/gnu/CORBA/gnuEnvironment.java \\\n+classpath/gnu/CORBA/gnuExceptionList.java \\\n+classpath/gnu/CORBA/gnuNVList.java \\\n+classpath/gnu/CORBA/gnuNamedValue.java \\\n+classpath/gnu/CORBA/gnuRequest.java \\\n+classpath/gnu/CORBA/gnuValueHolder.java \\\n+classpath/gnu/CORBA/interfaces/SocketFactory.java \\\n+classpath/gnu/CORBA/typecodes/AliasTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/ArrayTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/FixedTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/GeneralTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/PrimitiveTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/RecordTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/RecursiveTypeCode.java \\\n+classpath/gnu/CORBA/typecodes/StringTypeCode.java\n+\n+gnu-CORBA.lo: $(gnu_CORBA_source_files)\n+\t@find classpath/lib/gnu/CORBA -name '*.class' > gnu-CORBA.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-CORBA.lo @gnu-CORBA.list\n+\t@rm -f gnu-CORBA.list\n+\n gnu_awt_source_files = \\\n gnu/awt/LightweightRedirector.java\n \n@@ -1622,6 +1788,24 @@ gnu/javax/imageio/bmp.list: $(gnu_javax_imageio_bmp_source_files)\n -include gnu/javax/imageio/bmp.deps\n \n \n+gnu_javax_rmi_source_files = \\\n+classpath/gnu/javax/rmi/CORBA/CorbaInput.java \\\n+classpath/gnu/javax/rmi/CORBA/CorbaOutput.java \\\n+classpath/gnu/javax/rmi/CORBA/DefaultWriteObjectTester.java \\\n+classpath/gnu/javax/rmi/CORBA/DelegateFactory.java \\\n+classpath/gnu/javax/rmi/CORBA/GetDelegateInstanceException.java \\\n+classpath/gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java \\\n+classpath/gnu/javax/rmi/CORBA/RmiUtilities.java \\\n+classpath/gnu/javax/rmi/CORBA/StubDelegateImpl.java \\\n+classpath/gnu/javax/rmi/CORBA/TieTargetRecord.java \\\n+classpath/gnu/javax/rmi/CORBA/UtilDelegateImpl.java \\\n+classpath/gnu/javax/rmi/CORBA/ValueHandlerDelegateImpl.java\n+\n+gnu-javax-rmi.lo: $(gnu_javax_rmi_source_files)\n+\t@find classpath/lib/gnu/javax/rmi -name '*.class' > gnu-javax-rmi.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-javax-rmi.lo @gnu-javax-rmi.list\n+\t@rm -f gnu-javax-rmi.list\n+\n gnu_javax_sound_midi_source_files = \\\n classpath/gnu/javax/sound/midi/alsa/AlsaInputPortDevice.java \\\n classpath/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider.java \\\n@@ -4427,6 +4611,23 @@ javax/print/event.list: $(javax_print_event_source_files)\n -include javax/print/event.deps\n \n \n+javax_rmi_source_files = \\\n+classpath/javax/rmi/CORBA/ClassDesc.java \\\n+classpath/javax/rmi/CORBA/PortableRemoteObjectDelegate.java \\\n+classpath/javax/rmi/CORBA/Stub.java \\\n+classpath/javax/rmi/CORBA/StubDelegate.java \\\n+classpath/javax/rmi/CORBA/Tie.java \\\n+classpath/javax/rmi/CORBA/Util.java \\\n+classpath/javax/rmi/CORBA/UtilDelegate.java \\\n+classpath/javax/rmi/CORBA/ValueHandler.java \\\n+classpath/javax/rmi/CORBA/ValueHandlerMultiFormat.java \\\n+classpath/javax/rmi/PortableRemoteObject.java\n+\n+javax-rmi.lo: $(javax_rmi_source_files)\n+\t@find classpath/lib/javax/rmi -name '*.class' > javax-rmi.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o javax-rmi.lo @javax-rmi.list\n+\t@rm -f javax-rmi.list\n+\n javax_security_auth_source_files = \\\n classpath/javax/security/auth/AuthPermission.java \\\n classpath/javax/security/auth/DestroyFailedException.java \\\n@@ -5600,6 +5801,547 @@ org/ietf/jgss.list: $(org_ietf_jgss_source_files)\n -include org/ietf/jgss.deps\n \n \n+org_omg_source_files = \\\n+classpath/org/omg/CORBA/ACTIVITY_COMPLETED.java \\\n+classpath/org/omg/CORBA/ACTIVITY_REQUIRED.java \\\n+classpath/org/omg/CORBA/ARG_IN.java \\\n+classpath/org/omg/CORBA/ARG_INOUT.java \\\n+classpath/org/omg/CORBA/ARG_OUT.java \\\n+classpath/org/omg/CORBA/Any.java \\\n+classpath/org/omg/CORBA/AnyHolder.java \\\n+classpath/org/omg/CORBA/AnySeqHelper.java \\\n+classpath/org/omg/CORBA/AnySeqHolder.java \\\n+classpath/org/omg/CORBA/BAD_CONTEXT.java \\\n+classpath/org/omg/CORBA/BAD_INV_ORDER.java \\\n+classpath/org/omg/CORBA/BAD_OPERATION.java \\\n+classpath/org/omg/CORBA/BAD_PARAM.java \\\n+classpath/org/omg/CORBA/BAD_POLICY.java \\\n+classpath/org/omg/CORBA/BAD_POLICY_TYPE.java \\\n+classpath/org/omg/CORBA/BAD_POLICY_VALUE.java \\\n+classpath/org/omg/CORBA/BAD_QOS.java \\\n+classpath/org/omg/CORBA/BAD_TYPECODE.java \\\n+classpath/org/omg/CORBA/BooleanHolder.java \\\n+classpath/org/omg/CORBA/BooleanSeqHelper.java \\\n+classpath/org/omg/CORBA/BooleanSeqHolder.java \\\n+classpath/org/omg/CORBA/Bounds.java \\\n+classpath/org/omg/CORBA/ByteHolder.java \\\n+classpath/org/omg/CORBA/CODESET_INCOMPATIBLE.java \\\n+classpath/org/omg/CORBA/COMM_FAILURE.java \\\n+classpath/org/omg/CORBA/CTX_RESTRICT_SCOPE.java \\\n+classpath/org/omg/CORBA/CharHolder.java \\\n+classpath/org/omg/CORBA/CharSeqHelper.java \\\n+classpath/org/omg/CORBA/CharSeqHolder.java \\\n+classpath/org/omg/CORBA/CompletionStatus.java \\\n+classpath/org/omg/CORBA/CompletionStatusHelper.java \\\n+classpath/org/omg/CORBA/Context.java \\\n+classpath/org/omg/CORBA/ContextList.java \\\n+classpath/org/omg/CORBA/Current.java \\\n+classpath/org/omg/CORBA/CurrentHelper.java \\\n+classpath/org/omg/CORBA/CurrentHolder.java \\\n+classpath/org/omg/CORBA/CurrentOperations.java \\\n+classpath/org/omg/CORBA/CustomMarshal.java \\\n+classpath/org/omg/CORBA/CustomValue.java \\\n+classpath/org/omg/CORBA/DATA_CONVERSION.java \\\n+classpath/org/omg/CORBA/DataInputStream.java \\\n+classpath/org/omg/CORBA/DataOutputStream.java \\\n+classpath/org/omg/CORBA/DefinitionKind.java \\\n+classpath/org/omg/CORBA/DefinitionKindHelper.java \\\n+classpath/org/omg/CORBA/DomainManager.java \\\n+classpath/org/omg/CORBA/DomainManagerOperations.java \\\n+classpath/org/omg/CORBA/DoubleHolder.java \\\n+classpath/org/omg/CORBA/DoubleSeqHelper.java \\\n+classpath/org/omg/CORBA/DoubleSeqHolder.java \\\n+classpath/org/omg/CORBA/DynAny.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/Invalid.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/InvalidSeq.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/InvalidValue.java \\\n+classpath/org/omg/CORBA/DynAnyPackage/TypeMismatch.java \\\n+classpath/org/omg/CORBA/DynArray.java \\\n+classpath/org/omg/CORBA/DynEnum.java \\\n+classpath/org/omg/CORBA/DynFixed.java \\\n+classpath/org/omg/CORBA/DynSequence.java \\\n+classpath/org/omg/CORBA/DynStruct.java \\\n+classpath/org/omg/CORBA/DynUnion.java \\\n+classpath/org/omg/CORBA/DynValue.java \\\n+classpath/org/omg/CORBA/DynamicImplementation.java \\\n+classpath/org/omg/CORBA/Environment.java \\\n+classpath/org/omg/CORBA/ExceptionList.java \\\n+classpath/org/omg/CORBA/FREE_MEM.java \\\n+classpath/org/omg/CORBA/FieldNameHelper.java \\\n+classpath/org/omg/CORBA/FixedHolder.java \\\n+classpath/org/omg/CORBA/FloatHolder.java \\\n+classpath/org/omg/CORBA/FloatSeqHelper.java \\\n+classpath/org/omg/CORBA/FloatSeqHolder.java \\\n+classpath/org/omg/CORBA/IDLType.java \\\n+classpath/org/omg/CORBA/IDLTypeHelper.java \\\n+classpath/org/omg/CORBA/IDLTypeOperations.java \\\n+classpath/org/omg/CORBA/IMP_LIMIT.java \\\n+classpath/org/omg/CORBA/INITIALIZE.java \\\n+classpath/org/omg/CORBA/INTERNAL.java \\\n+classpath/org/omg/CORBA/INTF_REPOS.java \\\n+classpath/org/omg/CORBA/INVALID_ACTIVITY.java \\\n+classpath/org/omg/CORBA/INVALID_TRANSACTION.java \\\n+classpath/org/omg/CORBA/INV_FLAG.java \\\n+classpath/org/omg/CORBA/INV_IDENT.java \\\n+classpath/org/omg/CORBA/INV_OBJREF.java \\\n+classpath/org/omg/CORBA/INV_POLICY.java \\\n+classpath/org/omg/CORBA/IRObject.java \\\n+classpath/org/omg/CORBA/IRObjectOperations.java \\\n+classpath/org/omg/CORBA/IdentifierHelper.java \\\n+classpath/org/omg/CORBA/IntHolder.java \\\n+classpath/org/omg/CORBA/LocalObject.java \\\n+classpath/org/omg/CORBA/LongHolder.java \\\n+classpath/org/omg/CORBA/LongLongSeqHelper.java \\\n+classpath/org/omg/CORBA/LongLongSeqHolder.java \\\n+classpath/org/omg/CORBA/LongSeqHelper.java \\\n+classpath/org/omg/CORBA/LongSeqHolder.java \\\n+classpath/org/omg/CORBA/MARSHAL.java \\\n+classpath/org/omg/CORBA/NO_IMPLEMENT.java \\\n+classpath/org/omg/CORBA/NO_MEMORY.java \\\n+classpath/org/omg/CORBA/NO_PERMISSION.java \\\n+classpath/org/omg/CORBA/NO_RESOURCES.java \\\n+classpath/org/omg/CORBA/NO_RESPONSE.java \\\n+classpath/org/omg/CORBA/NVList.java \\\n+classpath/org/omg/CORBA/NameValuePair.java \\\n+classpath/org/omg/CORBA/NameValuePairHelper.java \\\n+classpath/org/omg/CORBA/NamedValue.java \\\n+classpath/org/omg/CORBA/OBJECT_NOT_EXIST.java \\\n+classpath/org/omg/CORBA/OBJ_ADAPTER.java \\\n+classpath/org/omg/CORBA/OMGVMCID.java \\\n+classpath/org/omg/CORBA/ORB.java \\\n+classpath/org/omg/CORBA/ORBPackage/InconsistentTypeCode.java \\\n+classpath/org/omg/CORBA/ORBPackage/InvalidName.java \\\n+classpath/org/omg/CORBA/Object.java \\\n+classpath/org/omg/CORBA/ObjectHelper.java \\\n+classpath/org/omg/CORBA/ObjectHolder.java \\\n+classpath/org/omg/CORBA/OctetSeqHelper.java \\\n+classpath/org/omg/CORBA/OctetSeqHolder.java \\\n+classpath/org/omg/CORBA/PERSIST_STORE.java \\\n+classpath/org/omg/CORBA/PRIVATE_MEMBER.java \\\n+classpath/org/omg/CORBA/PUBLIC_MEMBER.java \\\n+classpath/org/omg/CORBA/ParameterMode.java \\\n+classpath/org/omg/CORBA/ParameterModeHelper.java \\\n+classpath/org/omg/CORBA/ParameterModeHolder.java \\\n+classpath/org/omg/CORBA/Policy.java \\\n+classpath/org/omg/CORBA/PolicyError.java \\\n+classpath/org/omg/CORBA/PolicyErrorCodeHelper.java \\\n+classpath/org/omg/CORBA/PolicyErrorHelper.java \\\n+classpath/org/omg/CORBA/PolicyErrorHolder.java \\\n+classpath/org/omg/CORBA/PolicyHelper.java \\\n+classpath/org/omg/CORBA/PolicyHolder.java \\\n+classpath/org/omg/CORBA/PolicyListHelper.java \\\n+classpath/org/omg/CORBA/PolicyListHolder.java \\\n+classpath/org/omg/CORBA/PolicyOperations.java \\\n+classpath/org/omg/CORBA/PolicyTypeHelper.java \\\n+classpath/org/omg/CORBA/Principal.java \\\n+classpath/org/omg/CORBA/PrincipalHolder.java \\\n+classpath/org/omg/CORBA/REBIND.java \\\n+classpath/org/omg/CORBA/RepositoryIdHelper.java \\\n+classpath/org/omg/CORBA/Request.java \\\n+classpath/org/omg/CORBA/ServerRequest.java \\\n+classpath/org/omg/CORBA/ServiceDetail.java \\\n+classpath/org/omg/CORBA/ServiceDetailHelper.java \\\n+classpath/org/omg/CORBA/ServiceInformation.java \\\n+classpath/org/omg/CORBA/ServiceInformationHelper.java \\\n+classpath/org/omg/CORBA/ServiceInformationHolder.java \\\n+classpath/org/omg/CORBA/SetOverrideType.java \\\n+classpath/org/omg/CORBA/SetOverrideTypeHelper.java \\\n+classpath/org/omg/CORBA/ShortHolder.java \\\n+classpath/org/omg/CORBA/ShortSeqHelper.java \\\n+classpath/org/omg/CORBA/ShortSeqHolder.java \\\n+classpath/org/omg/CORBA/StringHolder.java \\\n+classpath/org/omg/CORBA/StringSeqHelper.java \\\n+classpath/org/omg/CORBA/StringSeqHolder.java \\\n+classpath/org/omg/CORBA/StringValueHelper.java \\\n+classpath/org/omg/CORBA/StructMember.java \\\n+classpath/org/omg/CORBA/StructMemberHelper.java \\\n+classpath/org/omg/CORBA/SystemException.java \\\n+classpath/org/omg/CORBA/TCKind.java \\\n+classpath/org/omg/CORBA/TIMEOUT.java \\\n+classpath/org/omg/CORBA/TRANSACTION_MODE.java \\\n+classpath/org/omg/CORBA/TRANSACTION_REQUIRED.java \\\n+classpath/org/omg/CORBA/TRANSACTION_ROLLEDBACK.java \\\n+classpath/org/omg/CORBA/TRANSACTION_UNAVAILABLE.java \\\n+classpath/org/omg/CORBA/TRANSIENT.java \\\n+classpath/org/omg/CORBA/TypeCode.java \\\n+classpath/org/omg/CORBA/TypeCodeHolder.java \\\n+classpath/org/omg/CORBA/TypeCodePackage/BadKind.java \\\n+classpath/org/omg/CORBA/TypeCodePackage/Bounds.java \\\n+classpath/org/omg/CORBA/ULongLongSeqHelper.java \\\n+classpath/org/omg/CORBA/ULongLongSeqHolder.java \\\n+classpath/org/omg/CORBA/ULongSeqHelper.java \\\n+classpath/org/omg/CORBA/ULongSeqHolder.java \\\n+classpath/org/omg/CORBA/UNKNOWN.java \\\n+classpath/org/omg/CORBA/UNSUPPORTED_POLICY.java \\\n+classpath/org/omg/CORBA/UNSUPPORTED_POLICY_VALUE.java \\\n+classpath/org/omg/CORBA/UShortSeqHelper.java \\\n+classpath/org/omg/CORBA/UShortSeqHolder.java \\\n+classpath/org/omg/CORBA/UnionMember.java \\\n+classpath/org/omg/CORBA/UnionMemberHelper.java \\\n+classpath/org/omg/CORBA/UnknownUserException.java \\\n+classpath/org/omg/CORBA/UnknownUserExceptionHelper.java \\\n+classpath/org/omg/CORBA/UnknownUserExceptionHolder.java \\\n+classpath/org/omg/CORBA/UserException.java \\\n+classpath/org/omg/CORBA/VM_ABSTRACT.java \\\n+classpath/org/omg/CORBA/VM_CUSTOM.java \\\n+classpath/org/omg/CORBA/VM_NONE.java \\\n+classpath/org/omg/CORBA/VM_TRUNCATABLE.java \\\n+classpath/org/omg/CORBA/ValueBaseHelper.java \\\n+classpath/org/omg/CORBA/ValueBaseHolder.java \\\n+classpath/org/omg/CORBA/ValueMember.java \\\n+classpath/org/omg/CORBA/ValueMemberHelper.java \\\n+classpath/org/omg/CORBA/VersionSpecHelper.java \\\n+classpath/org/omg/CORBA/VisibilityHelper.java \\\n+classpath/org/omg/CORBA/WCharSeqHelper.java \\\n+classpath/org/omg/CORBA/WCharSeqHolder.java \\\n+classpath/org/omg/CORBA/WStringSeqHelper.java \\\n+classpath/org/omg/CORBA/WStringSeqHolder.java \\\n+classpath/org/omg/CORBA/WStringValueHelper.java \\\n+classpath/org/omg/CORBA/WrongTransaction.java \\\n+classpath/org/omg/CORBA/WrongTransactionHelper.java \\\n+classpath/org/omg/CORBA/WrongTransactionHolder.java \\\n+classpath/org/omg/CORBA/_IDLTypeStub.java \\\n+classpath/org/omg/CORBA/_PolicyStub.java \\\n+classpath/org/omg/CORBA/portable/ApplicationException.java \\\n+classpath/org/omg/CORBA/portable/BoxedValueHelper.java \\\n+classpath/org/omg/CORBA/portable/CustomValue.java \\\n+classpath/org/omg/CORBA/portable/Delegate.java \\\n+classpath/org/omg/CORBA/portable/IDLEntity.java \\\n+classpath/org/omg/CORBA/portable/IndirectionException.java \\\n+classpath/org/omg/CORBA/portable/InputStream.java \\\n+classpath/org/omg/CORBA/portable/InvokeHandler.java \\\n+classpath/org/omg/CORBA/portable/ObjectImpl.java \\\n+classpath/org/omg/CORBA/portable/OutputStream.java \\\n+classpath/org/omg/CORBA/portable/RemarshalException.java \\\n+classpath/org/omg/CORBA/portable/ResponseHandler.java \\\n+classpath/org/omg/CORBA/portable/ServantObject.java \\\n+classpath/org/omg/CORBA/portable/Streamable.java \\\n+classpath/org/omg/CORBA/portable/StreamableValue.java \\\n+classpath/org/omg/CORBA/portable/UnknownException.java \\\n+classpath/org/omg/CORBA/portable/ValueBase.java \\\n+classpath/org/omg/CORBA/portable/ValueFactory.java \\\n+classpath/org/omg/CORBA_2_3/ORB.java \\\n+classpath/org/omg/CORBA_2_3/portable/Delegate.java \\\n+classpath/org/omg/CORBA_2_3/portable/InputStream.java \\\n+classpath/org/omg/CORBA_2_3/portable/ObjectImpl.java \\\n+classpath/org/omg/CORBA_2_3/portable/OutputStream.java \\\n+classpath/org/omg/CosNaming/Binding.java \\\n+classpath/org/omg/CosNaming/BindingHelper.java \\\n+classpath/org/omg/CosNaming/BindingHolder.java \\\n+classpath/org/omg/CosNaming/BindingIterator.java \\\n+classpath/org/omg/CosNaming/BindingIteratorHelper.java \\\n+classpath/org/omg/CosNaming/BindingIteratorHolder.java \\\n+classpath/org/omg/CosNaming/BindingIteratorOperations.java \\\n+classpath/org/omg/CosNaming/BindingIteratorPOA.java \\\n+classpath/org/omg/CosNaming/BindingListHelper.java \\\n+classpath/org/omg/CosNaming/BindingListHolder.java \\\n+classpath/org/omg/CosNaming/BindingType.java \\\n+classpath/org/omg/CosNaming/BindingTypeHelper.java \\\n+classpath/org/omg/CosNaming/BindingTypeHolder.java \\\n+classpath/org/omg/CosNaming/IstringHelper.java \\\n+classpath/org/omg/CosNaming/NameComponent.java \\\n+classpath/org/omg/CosNaming/NameComponentHelper.java \\\n+classpath/org/omg/CosNaming/NameComponentHolder.java \\\n+classpath/org/omg/CosNaming/NameHelper.java \\\n+classpath/org/omg/CosNaming/NameHolder.java \\\n+classpath/org/omg/CosNaming/NamingContext.java \\\n+classpath/org/omg/CosNaming/NamingContextExt.java \\\n+classpath/org/omg/CosNaming/NamingContextExtHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextExtOperations.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPOA.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/AddressHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/InvalidAddress.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/InvalidAddressHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/InvalidAddressHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/StringNameHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextExtPackage/URLStringHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextOperations.java \\\n+classpath/org/omg/CosNaming/NamingContextPOA.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/AlreadyBound.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/AlreadyBoundHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/AlreadyBoundHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/CannotProceed.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/CannotProceedHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/CannotProceedHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/InvalidName.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/InvalidNameHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/InvalidNameHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotEmpty.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotEmptyHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotEmptyHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFound.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundHolder.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundReason.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundReasonHelper.java \\\n+classpath/org/omg/CosNaming/NamingContextPackage/NotFoundReasonHolder.java \\\n+classpath/org/omg/CosNaming/_BindingIteratorImplBase.java \\\n+classpath/org/omg/CosNaming/_BindingIteratorStub.java \\\n+classpath/org/omg/CosNaming/_NamingContextExtImplBase.java \\\n+classpath/org/omg/CosNaming/_NamingContextExtStub.java \\\n+classpath/org/omg/CosNaming/_NamingContextImplBase.java \\\n+classpath/org/omg/CosNaming/_NamingContextStub.java \\\n+classpath/org/omg/Dynamic/Parameter.java \\\n+classpath/org/omg/DynamicAny/AnySeqHelper.java \\\n+classpath/org/omg/DynamicAny/DynAny.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactory.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryOperations.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCode.java \\\n+classpath/org/omg/DynamicAny/DynAnyFactoryPackage/InconsistentTypeCodeHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyOperations.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/InvalidValue.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/InvalidValueHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/TypeMismatch.java \\\n+classpath/org/omg/DynamicAny/DynAnyPackage/TypeMismatchHelper.java \\\n+classpath/org/omg/DynamicAny/DynAnySeqHelper.java \\\n+classpath/org/omg/DynamicAny/DynArray.java \\\n+classpath/org/omg/DynamicAny/DynArrayHelper.java \\\n+classpath/org/omg/DynamicAny/DynArrayOperations.java \\\n+classpath/org/omg/DynamicAny/DynEnum.java \\\n+classpath/org/omg/DynamicAny/DynEnumHelper.java \\\n+classpath/org/omg/DynamicAny/DynEnumOperations.java \\\n+classpath/org/omg/DynamicAny/DynFixed.java \\\n+classpath/org/omg/DynamicAny/DynFixedHelper.java \\\n+classpath/org/omg/DynamicAny/DynFixedOperations.java \\\n+classpath/org/omg/DynamicAny/DynSequence.java \\\n+classpath/org/omg/DynamicAny/DynSequenceHelper.java \\\n+classpath/org/omg/DynamicAny/DynSequenceOperations.java \\\n+classpath/org/omg/DynamicAny/DynStruct.java \\\n+classpath/org/omg/DynamicAny/DynStructHelper.java \\\n+classpath/org/omg/DynamicAny/DynStructOperations.java \\\n+classpath/org/omg/DynamicAny/DynUnion.java \\\n+classpath/org/omg/DynamicAny/DynUnionHelper.java \\\n+classpath/org/omg/DynamicAny/DynUnionOperations.java \\\n+classpath/org/omg/DynamicAny/DynValue.java \\\n+classpath/org/omg/DynamicAny/DynValueBox.java \\\n+classpath/org/omg/DynamicAny/DynValueBoxOperations.java \\\n+classpath/org/omg/DynamicAny/DynValueCommon.java \\\n+classpath/org/omg/DynamicAny/DynValueCommonOperations.java \\\n+classpath/org/omg/DynamicAny/DynValueHelper.java \\\n+classpath/org/omg/DynamicAny/DynValueOperations.java \\\n+classpath/org/omg/DynamicAny/FieldNameHelper.java \\\n+classpath/org/omg/DynamicAny/NameDynAnyPair.java \\\n+classpath/org/omg/DynamicAny/NameDynAnyPairHelper.java \\\n+classpath/org/omg/DynamicAny/NameDynAnyPairSeqHelper.java \\\n+classpath/org/omg/DynamicAny/NameValuePair.java \\\n+classpath/org/omg/DynamicAny/NameValuePairHelper.java \\\n+classpath/org/omg/DynamicAny/NameValuePairSeqHelper.java \\\n+classpath/org/omg/DynamicAny/_DynAnyFactoryStub.java \\\n+classpath/org/omg/DynamicAny/_DynAnyStub.java \\\n+classpath/org/omg/DynamicAny/_DynArrayStub.java \\\n+classpath/org/omg/DynamicAny/_DynEnumStub.java \\\n+classpath/org/omg/DynamicAny/_DynFixedStub.java \\\n+classpath/org/omg/DynamicAny/_DynSequenceStub.java \\\n+classpath/org/omg/DynamicAny/_DynStructStub.java \\\n+classpath/org/omg/DynamicAny/_DynUnionStub.java \\\n+classpath/org/omg/DynamicAny/_DynValueStub.java \\\n+classpath/org/omg/IOP/CodeSets.java \\\n+classpath/org/omg/IOP/Codec.java \\\n+classpath/org/omg/IOP/CodecFactory.java \\\n+classpath/org/omg/IOP/CodecFactoryHelper.java \\\n+classpath/org/omg/IOP/CodecFactoryOperations.java \\\n+classpath/org/omg/IOP/CodecFactoryPackage/UnknownEncoding.java \\\n+classpath/org/omg/IOP/CodecFactoryPackage/UnknownEncodingHelper.java \\\n+classpath/org/omg/IOP/CodecOperations.java \\\n+classpath/org/omg/IOP/CodecPackage/FormatMismatch.java \\\n+classpath/org/omg/IOP/CodecPackage/FormatMismatchHelper.java \\\n+classpath/org/omg/IOP/CodecPackage/InvalidTypeForEncoding.java \\\n+classpath/org/omg/IOP/CodecPackage/InvalidTypeForEncodingHelper.java \\\n+classpath/org/omg/IOP/CodecPackage/TypeMismatch.java \\\n+classpath/org/omg/IOP/CodecPackage/TypeMismatchHelper.java \\\n+classpath/org/omg/IOP/ComponentIdHelper.java \\\n+classpath/org/omg/IOP/ENCODING_CDR_ENCAPS.java \\\n+classpath/org/omg/IOP/Encoding.java \\\n+classpath/org/omg/IOP/ExceptionDetailMessage.java \\\n+classpath/org/omg/IOP/IOR.java \\\n+classpath/org/omg/IOP/IORHelper.java \\\n+classpath/org/omg/IOP/IORHolder.java \\\n+classpath/org/omg/IOP/MultipleComponentProfileHelper.java \\\n+classpath/org/omg/IOP/MultipleComponentProfileHolder.java \\\n+classpath/org/omg/IOP/ProfileIdHelper.java \\\n+classpath/org/omg/IOP/RMICustomMaxStreamFormat.java \\\n+classpath/org/omg/IOP/ServiceContext.java \\\n+classpath/org/omg/IOP/ServiceContextHelper.java \\\n+classpath/org/omg/IOP/ServiceContextHolder.java \\\n+classpath/org/omg/IOP/ServiceContextListHelper.java \\\n+classpath/org/omg/IOP/ServiceContextListHolder.java \\\n+classpath/org/omg/IOP/ServiceIdHelper.java \\\n+classpath/org/omg/IOP/TAG_ALTERNATE_IIOP_ADDRESS.java \\\n+classpath/org/omg/IOP/TAG_CODE_SETS.java \\\n+classpath/org/omg/IOP/TAG_INTERNET_IOP.java \\\n+classpath/org/omg/IOP/TAG_JAVA_CODEBASE.java \\\n+classpath/org/omg/IOP/TAG_MULTIPLE_COMPONENTS.java \\\n+classpath/org/omg/IOP/TAG_ORB_TYPE.java \\\n+classpath/org/omg/IOP/TAG_POLICIES.java \\\n+classpath/org/omg/IOP/TAG_RMI_CUSTOM_MAX_STREAM_FORMAT.java \\\n+classpath/org/omg/IOP/TaggedComponent.java \\\n+classpath/org/omg/IOP/TaggedComponentHelper.java \\\n+classpath/org/omg/IOP/TaggedComponentHolder.java \\\n+classpath/org/omg/IOP/TaggedProfile.java \\\n+classpath/org/omg/IOP/TaggedProfileHelper.java \\\n+classpath/org/omg/IOP/TaggedProfileHolder.java \\\n+classpath/org/omg/IOP/TransactionService.java \\\n+classpath/org/omg/Messaging/SYNC_WITH_TRANSPORT.java \\\n+classpath/org/omg/Messaging/SyncScopeHelper.java \\\n+classpath/org/omg/PortableInterceptor/ACTIVE.java \\\n+classpath/org/omg/PortableInterceptor/AdapterManagerIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/AdapterNameHelper.java \\\n+classpath/org/omg/PortableInterceptor/AdapterStateHelper.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInfo.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInterceptor.java \\\n+classpath/org/omg/PortableInterceptor/ClientRequestInterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/Current.java \\\n+classpath/org/omg/PortableInterceptor/CurrentHelper.java \\\n+classpath/org/omg/PortableInterceptor/CurrentOperations.java \\\n+classpath/org/omg/PortableInterceptor/DISCARDING.java \\\n+classpath/org/omg/PortableInterceptor/ForwardRequest.java \\\n+classpath/org/omg/PortableInterceptor/ForwardRequestHelper.java \\\n+classpath/org/omg/PortableInterceptor/HOLDING.java \\\n+classpath/org/omg/PortableInterceptor/INACTIVE.java \\\n+classpath/org/omg/PortableInterceptor/IORInfo.java \\\n+classpath/org/omg/PortableInterceptor/IORInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0Helper.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0Holder.java \\\n+classpath/org/omg/PortableInterceptor/IORInterceptor_3_0Operations.java \\\n+classpath/org/omg/PortableInterceptor/Interceptor.java \\\n+classpath/org/omg/PortableInterceptor/InterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/InvalidSlot.java \\\n+classpath/org/omg/PortableInterceptor/InvalidSlotHelper.java \\\n+classpath/org/omg/PortableInterceptor/LOCATION_FORWARD.java \\\n+classpath/org/omg/PortableInterceptor/NON_EXISTENT.java \\\n+classpath/org/omg/PortableInterceptor/ORBIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfo.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/DuplicateName.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/DuplicateNameHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidNameHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitInfoPackage/ObjectIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitializer.java \\\n+classpath/org/omg/PortableInterceptor/ORBInitializerOperations.java \\\n+classpath/org/omg/PortableInterceptor/ObjectIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactory.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactoryHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactoryHolder.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceFactoryOperations.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplate.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateHolder.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHelper.java \\\n+classpath/org/omg/PortableInterceptor/ObjectReferenceTemplateSeqHolder.java \\\n+classpath/org/omg/PortableInterceptor/PolicyFactory.java \\\n+classpath/org/omg/PortableInterceptor/PolicyFactoryOperations.java \\\n+classpath/org/omg/PortableInterceptor/RequestInfo.java \\\n+classpath/org/omg/PortableInterceptor/RequestInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/SUCCESSFUL.java \\\n+classpath/org/omg/PortableInterceptor/SYSTEM_EXCEPTION.java \\\n+classpath/org/omg/PortableInterceptor/ServerIdHelper.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInfo.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInfoOperations.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInterceptor.java \\\n+classpath/org/omg/PortableInterceptor/ServerRequestInterceptorOperations.java \\\n+classpath/org/omg/PortableInterceptor/TRANSPORT_RETRY.java \\\n+classpath/org/omg/PortableInterceptor/USER_EXCEPTION.java \\\n+classpath/org/omg/PortableInterceptor/_IORInterceptor_3_0Stub.java \\\n+classpath/org/omg/PortableServer/AdapterActivator.java \\\n+classpath/org/omg/PortableServer/AdapterActivatorOperations.java \\\n+classpath/org/omg/PortableServer/Current.java \\\n+classpath/org/omg/PortableServer/CurrentHelper.java \\\n+classpath/org/omg/PortableServer/CurrentOperations.java \\\n+classpath/org/omg/PortableServer/CurrentPackage/NoContext.java \\\n+classpath/org/omg/PortableServer/CurrentPackage/NoContextHelper.java \\\n+classpath/org/omg/PortableServer/DynamicImplementation.java \\\n+classpath/org/omg/PortableServer/ForwardRequest.java \\\n+classpath/org/omg/PortableServer/ForwardRequestHelper.java \\\n+classpath/org/omg/PortableServer/ID_ASSIGNMENT_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/ID_UNIQUENESS_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/IMPLICIT_ACTIVATION_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/IdAssignmentPolicy.java \\\n+classpath/org/omg/PortableServer/IdAssignmentPolicyOperations.java \\\n+classpath/org/omg/PortableServer/IdAssignmentPolicyValue.java \\\n+classpath/org/omg/PortableServer/IdUniquenessPolicy.java \\\n+classpath/org/omg/PortableServer/IdUniquenessPolicyOperations.java \\\n+classpath/org/omg/PortableServer/IdUniquenessPolicyValue.java \\\n+classpath/org/omg/PortableServer/ImplicitActivationPolicy.java \\\n+classpath/org/omg/PortableServer/ImplicitActivationPolicyOperations.java \\\n+classpath/org/omg/PortableServer/ImplicitActivationPolicyValue.java \\\n+classpath/org/omg/PortableServer/LIFESPAN_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/LifespanPolicy.java \\\n+classpath/org/omg/PortableServer/LifespanPolicyOperations.java \\\n+classpath/org/omg/PortableServer/LifespanPolicyValue.java \\\n+classpath/org/omg/PortableServer/POA.java \\\n+classpath/org/omg/PortableServer/POAHelper.java \\\n+classpath/org/omg/PortableServer/POAManager.java \\\n+classpath/org/omg/PortableServer/POAManagerOperations.java \\\n+classpath/org/omg/PortableServer/POAManagerPackage/AdapterInactive.java \\\n+classpath/org/omg/PortableServer/POAManagerPackage/AdapterInactiveHelper.java \\\n+classpath/org/omg/PortableServer/POAManagerPackage/State.java \\\n+classpath/org/omg/PortableServer/POAOperations.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterAlreadyExists.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterAlreadyExistsHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterNonExistent.java \\\n+classpath/org/omg/PortableServer/POAPackage/AdapterNonExistentHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/InvalidPolicy.java \\\n+classpath/org/omg/PortableServer/POAPackage/InvalidPolicyHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/NoServant.java \\\n+classpath/org/omg/PortableServer/POAPackage/NoServantHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectAlreadyActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectAlreadyActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectNotActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ObjectNotActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantAlreadyActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantAlreadyActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantNotActive.java \\\n+classpath/org/omg/PortableServer/POAPackage/ServantNotActiveHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongAdapter.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongAdapterHelper.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongPolicy.java \\\n+classpath/org/omg/PortableServer/POAPackage/WrongPolicyHelper.java \\\n+classpath/org/omg/PortableServer/REQUEST_PROCESSING_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/RequestProcessingPolicy.java \\\n+classpath/org/omg/PortableServer/RequestProcessingPolicyOperations.java \\\n+classpath/org/omg/PortableServer/RequestProcessingPolicyValue.java \\\n+classpath/org/omg/PortableServer/SERVANT_RETENTION_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/Servant.java \\\n+classpath/org/omg/PortableServer/ServantActivator.java \\\n+classpath/org/omg/PortableServer/ServantActivatorHelper.java \\\n+classpath/org/omg/PortableServer/ServantActivatorOperations.java \\\n+classpath/org/omg/PortableServer/ServantActivatorPOA.java \\\n+classpath/org/omg/PortableServer/ServantLocator.java \\\n+classpath/org/omg/PortableServer/ServantLocatorHelper.java \\\n+classpath/org/omg/PortableServer/ServantLocatorOperations.java \\\n+classpath/org/omg/PortableServer/ServantLocatorPOA.java \\\n+classpath/org/omg/PortableServer/ServantLocatorPackage/CookieHolder.java \\\n+classpath/org/omg/PortableServer/ServantManager.java \\\n+classpath/org/omg/PortableServer/ServantManagerOperations.java \\\n+classpath/org/omg/PortableServer/ServantRetentionPolicy.java \\\n+classpath/org/omg/PortableServer/ServantRetentionPolicyOperations.java \\\n+classpath/org/omg/PortableServer/ServantRetentionPolicyValue.java \\\n+classpath/org/omg/PortableServer/THREAD_POLICY_ID.java \\\n+classpath/org/omg/PortableServer/ThreadPolicy.java \\\n+classpath/org/omg/PortableServer/ThreadPolicyOperations.java \\\n+classpath/org/omg/PortableServer/ThreadPolicyValue.java \\\n+classpath/org/omg/PortableServer/_ServantActivatorStub.java \\\n+classpath/org/omg/PortableServer/_ServantLocatorStub.java \\\n+classpath/org/omg/PortableServer/portable/Delegate.java \\\n+classpath/org/omg/SendingContext/RunTime.java \\\n+classpath/org/omg/SendingContext/RunTimeOperations.java \\\n+classpath/org/omg/stub/java/rmi/_Remote_Stub.java\n+\n+org-omg.lo: $(org_omg_source_files)\n+\t@find classpath/lib/org/omg -name '*.class' > org-omg.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o org-omg.lo @org-omg.list\n+\t@rm -f org-omg.list\n+\n org_w3c_source_files = \\\n classpath/external/w3c_dom/org/w3c/dom/Attr.java \\\n classpath/external/w3c_dom/org/w3c/dom/CDATASection.java \\\n@@ -6104,10 +6846,14 @@ ordinary_header_files = \\\n   $(org_ietf_jgss_header_files)\n \n bc_objects = \\\n+  gnu-CORBA.lo \\\n   gnu-java-beans.lo \\\n+  gnu-javax-rmi.lo \\\n   gnu-javax-sound-midi.lo \\\n   gnu-xml.lo \\\n   javax-imageio.lo \\\n+  javax-rmi.lo \\\n   javax-xml.lo \\\n+  org-omg.lo \\\n   org-w3c.lo \\\n   org-xml.lo"}, {"sha": "c445e1a7c2fd9f8f13f0bc4454d4e2ca2bceb633", "filename": "libjava/standard.omit.in", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fstandard.omit.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4b5d4827c826d26d11863d5c1832b179178b89/libjava%2Fstandard.omit.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstandard.omit.in?ref=ec4b5d4827c826d26d11863d5c1832b179178b89", "patch": "@@ -3,10 +3,6 @@ java/lang/Win32Process.java\n java/lang/PosixProcess.java\n gnu/java/awt/peer/gtk/Test.java\n gnu/java/awt/peer/gtk/TestAWT.java\n-javax/rmi\n-org/omg\n-gnu/CORBA\n-gnu/javax/rmi\n gnu/java/nio/charset/iconv\n java/util/zip/DeflaterConstants.java\n java/util/zip/DeflaterEngine.java"}]}