{"sha": "36ef72625cd8bc38933adf8c06a7de4f093e98c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZlZjcyNjI1Y2Q4YmMzODkzM2FkZjhjMDZhN2RlNGYwOTNlOThjNg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-04-21T19:49:23Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-04-21T19:49:23Z"}, "message": "re PR c++/35711 (bad text in -Wcast-qual warning (forgets volatile))\n\n2009-04-21  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR c++/35711\ncp/\n\t* typeck.c (check_for_casting_away_constness): We diagnose casting\n\taway any qualifiers not just constness.\n\t(casts_away_constness): Mention that it handles more than just\n\tconstness.\ntestsuite/\n\t* g++.dg/warn/pr35711.C: New.\n\t* g++.dg/conversion/ptrmem2.C: Update.\n\nFrom-SVN: r146537", "tree": {"sha": "252a0939bdbc3eeb3a8ea24b01705c79fcc71cfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/252a0939bdbc3eeb3a8ea24b01705c79fcc71cfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36ef72625cd8bc38933adf8c06a7de4f093e98c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ef72625cd8bc38933adf8c06a7de4f093e98c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36ef72625cd8bc38933adf8c06a7de4f093e98c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ef72625cd8bc38933adf8c06a7de4f093e98c6/comments", "author": null, "committer": null, "parents": [{"sha": "ad41bd84ff7298f2eff1d0b99e1975f99bc8ba68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad41bd84ff7298f2eff1d0b99e1975f99bc8ba68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad41bd84ff7298f2eff1d0b99e1975f99bc8ba68"}], "stats": {"total": 82, "additions": 58, "deletions": 24}, "files": [{"sha": "99c78261654d96a4bafb23ca69acd864abb28bc3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=36ef72625cd8bc38933adf8c06a7de4f093e98c6", "patch": "@@ -1,3 +1,11 @@\n+2009-04-21  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c++/35711\n+\t* typeck.c (check_for_casting_away_constness): We diagnose casting\n+\taway any qualifiers not just constness.\n+\t(casts_away_constness): Mention that it handles more than just\n+\tconstness.\n+\t\n 2009-04-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* ChangeLog, ChangeLog-1993, ChangeLog-1994, ChangeLog-1995,"}, {"sha": "34a20b8af2a7b1b83125ab114134c2306d909901", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 34, "deletions": 22, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=36ef72625cd8bc38933adf8c06a7de4f093e98c6", "patch": "@@ -5038,7 +5038,12 @@ cp_build_compound_expr (tree lhs, tree rhs, tsubst_flags_t complain)\n }\n \n /* Issue a diagnostic message if casting from SRC_TYPE to DEST_TYPE\n-   casts away constness.  CAST gives the type of cast.  */\n+   casts away constness.  CAST gives the type of cast.  \n+\n+   ??? This function warns for casting away any qualifier not just\n+   const.  We would like to specify exactly what qualifiers are casted\n+   away.\n+*/\n \n static void\n check_for_casting_away_constness (tree src_type, tree dest_type,\n@@ -5049,27 +5054,29 @@ check_for_casting_away_constness (tree src_type, tree dest_type,\n   if (cast == CAST_EXPR && !warn_cast_qual)\n       return;\n   \n-  if (casts_away_constness (src_type, dest_type))\n-    switch (cast)\n-      {\n-      case CAST_EXPR:\n-\twarning (OPT_Wcast_qual, \n-                 \"cast from type %qT to type %qT casts away constness\",\n-\t\t src_type, dest_type);\n-\treturn;\n-\t\n-      case STATIC_CAST_EXPR:\n-\terror (\"static_cast from type %qT to type %qT casts away constness\",\n-\t       src_type, dest_type);\n-\treturn;\n-\t\n-      case REINTERPRET_CAST_EXPR:\n-\terror (\"reinterpret_cast from type %qT to type %qT casts away constness\",\n+  if (!casts_away_constness (src_type, dest_type))\n+    return;\n+\n+  switch (cast)\n+    {\n+    case CAST_EXPR:\n+      warning (OPT_Wcast_qual, \n+\t       \"cast from type %qT to type %qT casts away qualifiers\",\n \t       src_type, dest_type);\n-\treturn;\n-      default:\n-\tgcc_unreachable();\n-      }\n+      return;\n+      \n+    case STATIC_CAST_EXPR:\n+      error (\"static_cast from type %qT to type %qT casts away qualifiers\",\n+\t     src_type, dest_type);\n+      return;\n+      \n+    case REINTERPRET_CAST_EXPR:\n+      error (\"reinterpret_cast from type %qT to type %qT casts away qualifiers\",\n+\t     src_type, dest_type);\n+      return;\n+    default:\n+      gcc_unreachable();\n+    }\n }\n \n /* Convert EXPR (an expression with pointer-to-member type) to TYPE\n@@ -7362,7 +7369,12 @@ casts_away_constness_r (tree *t1, tree *t2)\n }\n \n /* Returns nonzero if casting from TYPE1 to TYPE2 casts away\n-   constness.  */\n+   constness.  \n+\n+   ??? This function returns non-zero if casting away qualifiers not\n+   just const.  We would like to return to the caller exactly which\n+   qualifiers are casted away to give more accurate diagnostics.\n+*/\n \n static bool\n casts_away_constness (tree t1, tree t2)"}, {"sha": "c144d658690139b2cd3cc85173767b7a83cfa92a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36ef72625cd8bc38933adf8c06a7de4f093e98c6", "patch": "@@ -1,3 +1,9 @@\n+2009-04-21  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c++/35711\n+\t* g++.dg/warn/pr35711.C: New.\n+\t* g++.dg/conversion/ptrmem2.C: Update.\n+\n 2009-04-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* ChangeLog, ChangeLog-1993-2007, ChangeLog-2008, ChangeLog.ptr,"}, {"sha": "d46113db6c658f8d65a88608577046f187fce6c3", "filename": "gcc/testsuite/g++.dg/conversion/ptrmem2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fptrmem2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fptrmem2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fptrmem2.C?ref=36ef72625cd8bc38933adf8c06a7de4f093e98c6", "patch": "@@ -31,8 +31,8 @@ const int B::*p9 = static_cast<const int B::*>(&D::x);\n const int D::*p10 = static_cast<const int D::*>(&B::x);\n \n // Invalid conversions which decrease cv-qualification.\n-int B::*p11 = static_cast<int B::*>(p10); // { dg-error \"casts away constness\" }\n-int D::*p12 = static_cast<int D::*>(p9);  // { dg-error \"casts away constness\" }\n+int B::*p11 = static_cast<int B::*>(p10); // { dg-error \"casts away qualifiers\" }\n+int D::*p12 = static_cast<int D::*>(p9);  // { dg-error \"casts away qualifiers\" }\n \n // Attempts to change member type.\n float B::*p13 = static_cast<float B::*>(&D::x); // { dg-error \"\" }"}, {"sha": "653269c0e7929534b06a3aeef4155c4838529221", "filename": "gcc/testsuite/g++.dg/warn/pr35711.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr35711.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef72625cd8bc38933adf8c06a7de4f093e98c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr35711.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr35711.C?ref=36ef72625cd8bc38933adf8c06a7de4f093e98c6", "patch": "@@ -0,0 +1,8 @@\n+// PR 35711\n+// { dg-do compile }\n+// { dg-options \"-Wcast-qual\" }\n+\n+int* foo (volatile int *p)\n+{\n+  return (int*)p; // { dg-warning \"cast from type 'volatile int\\\\*' to type 'int\\\\*' casts away qualifiers\" }\n+}"}]}