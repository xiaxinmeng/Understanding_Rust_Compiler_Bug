{"sha": "4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY5ZGJhYWFlOGI0NjI5MGI0MGVjNDNlNTZmZGZjMTBkZmQ0NzdiMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-08-15T12:17:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-08-15T12:17:33Z"}, "message": "re PR tree-optimization/50058 (FAIL: g++.dg/tree-ssa/pr41186.C)\n\n2011-08-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/50058\n\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Relax aggregate\n\tcopy matching.\n\nFrom-SVN: r177760", "tree": {"sha": "5dafed5bf7957642b3bb13ca7a9b7d75fe2a4fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dafed5bf7957642b3bb13ca7a9b7d75fe2a4fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3598da80668da2ebf4098529b8f298800997776c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3598da80668da2ebf4098529b8f298800997776c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3598da80668da2ebf4098529b8f298800997776c"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "58e2216f163d06db764560949216144774c7da4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0", "patch": "@@ -1,3 +1,9 @@\n+2011-08-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50058\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Relax aggregate\n+\tcopy matching.\n+\n 2011-08-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n \tPR target/50022"}, {"sha": "4ccc0a29fd515970ed32b3f7e0bfb82f7b1f15fe", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=4f9dbaaae8b46290b40ec43e56fdfc10dfd477b0", "patch": "@@ -1485,12 +1485,11 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_)\n \t may fail when comparing types for compatibility.  But we really\n \t don't care here - further lookups with the rewritten operands\n \t will simply fail if we messed up types too badly.  */\n-      if (j == 0 && i == 0\n+      if (j == 0 && i >= 0\n \t  && VEC_index (vn_reference_op_s, lhs_ops, 0)->opcode == MEM_REF\n-\t  && VEC_index (vn_reference_op_s, vr->operands, i)->opcode == MEM_REF\n-\t  && tree_int_cst_equal\n-\t       (VEC_index (vn_reference_op_s, lhs_ops, 0)->op0,\n-\t\tVEC_index (vn_reference_op_s, vr->operands, i)->op0))\n+\t  && VEC_index (vn_reference_op_s, lhs_ops, 0)->off != -1\n+\t  && (VEC_index (vn_reference_op_s, lhs_ops, 0)->off\n+\t      == VEC_index (vn_reference_op_s, vr->operands, i)->off))\n \ti--, j--;\n \n       /* i now points to the first additional op."}]}