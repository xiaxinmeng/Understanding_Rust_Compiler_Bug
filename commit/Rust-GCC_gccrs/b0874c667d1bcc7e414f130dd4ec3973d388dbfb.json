{"sha": "b0874c667d1bcc7e414f130dd4ec3973d388dbfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4NzRjNjY3ZDFiY2M3ZTQxNGYxMzBkZDRlYzM5NzNkMzg4ZGJmYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-18T18:59:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-18T18:59:44Z"}, "message": "LWG 2989 hide path iostream operators from normal lookup\n\nBy only defining these operators as friends (with no namespace-scope\ndeclaration) they can only be found by ADL and do not participate in\noverload resolution for arguments of types other than path.\n\n\tLWG 2989 hide path iostream operators from normal lookup\n\t* include/bits/fs_path.h (operator<<, operator>>): Define inline as\n\tfriends.\n\t* testsuite/27_io/filesystem/path/io/dr2989.cc: New.\n\nFrom-SVN: r261711", "tree": {"sha": "07be2d2b825895ff064717384af7f979bd573fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07be2d2b825895ff064717384af7f979bd573fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0874c667d1bcc7e414f130dd4ec3973d388dbfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0874c667d1bcc7e414f130dd4ec3973d388dbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0874c667d1bcc7e414f130dd4ec3973d388dbfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0874c667d1bcc7e414f130dd4ec3973d388dbfb/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adac3a685da705d6811d4069f57e1bc73a95a957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adac3a685da705d6811d4069f57e1bc73a95a957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adac3a685da705d6811d4069f57e1bc73a95a957"}], "stats": {"total": 80, "additions": 60, "deletions": 20}, "files": [{"sha": "0b81f047a178cb8d25a78557bc011300938fc247", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0874c667d1bcc7e414f130dd4ec3973d388dbfb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0874c667d1bcc7e414f130dd4ec3973d388dbfb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b0874c667d1bcc7e414f130dd4ec3973d388dbfb", "patch": "@@ -1,5 +1,10 @@\n 2018-06-18  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tLWG 2989 hide path iostream operators from normal lookup\n+\t* include/bits/fs_path.h (operator<<, operator>>): Define inline as\n+\tfriends.\n+\t* testsuite/27_io/filesystem/path/io/dr2989.cc: New.\n+\n \tLWG 3050 Fix cv-qualification of convertibility constraints\n \t* include/std/chrono (duration, operator*, operator/, operator%): Use\n \tconst-qualified type as source type in is_convertible constraints."}, {"sha": "e3938d06d59a21f7a8756904284faf9978b2dbfe", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0874c667d1bcc7e414f130dd4ec3973d388dbfb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0874c667d1bcc7e414f130dd4ec3973d388dbfb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=b0874c667d1bcc7e414f130dd4ec3973d388dbfb", "patch": "@@ -363,6 +363,26 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n     iterator begin() const;\n     iterator end() const;\n \n+    /// Write a path to a stream\n+    template<typename _CharT, typename _Traits>\n+      friend std::basic_ostream<_CharT, _Traits>&\n+      operator<<(std::basic_ostream<_CharT, _Traits>& __os, const path& __p)\n+      {\n+\t__os << std::quoted(__p.string<_CharT, _Traits>());\n+\treturn __os;\n+      }\n+\n+    /// Read a path from a stream\n+    template<typename _CharT, typename _Traits>\n+      friend std::basic_istream<_CharT, _Traits>&\n+      operator>>(std::basic_istream<_CharT, _Traits>& __is, path& __p)\n+      {\n+\tstd::basic_string<_CharT, _Traits> __tmp;\n+\tif (__is >> std::quoted(__tmp))\n+\t  __p = std::move(__tmp);\n+\treturn __is;\n+      }\n+\n     // Create a basic_string by reading until a null character.\n     template<typename _InputIterator,\n \t     typename _Traits = std::iterator_traits<_InputIterator>,\n@@ -505,26 +525,6 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n     return __result;\n   }\n \n-  /// Write a path to a stream\n-  template<typename _CharT, typename _Traits>\n-    basic_ostream<_CharT, _Traits>&\n-    operator<<(basic_ostream<_CharT, _Traits>& __os, const path& __p)\n-    {\n-      __os << std::quoted(__p.string<_CharT, _Traits>());\n-      return __os;\n-    }\n-\n-  /// Read a path from a stream\n-  template<typename _CharT, typename _Traits>\n-    basic_istream<_CharT, _Traits>&\n-    operator>>(basic_istream<_CharT, _Traits>& __is, path& __p)\n-    {\n-      basic_string<_CharT, _Traits> __tmp;\n-      if (__is >> std::quoted(__tmp))\n-\t__p = std::move(__tmp);\n-      return __is;\n-    }\n-\n   template<typename _InputIterator>\n     inline auto\n     u8path(_InputIterator __first, _InputIterator __last)"}, {"sha": "b9a1235e1fef5218959535a9c010192910fbfc28", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/io/dr2989.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0874c667d1bcc7e414f130dd4ec3973d388dbfb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fio%2Fdr2989.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0874c667d1bcc7e414f130dd4ec3973d388dbfb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fio%2Fdr2989.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fio%2Fdr2989.cc?ref=b0874c667d1bcc7e414f130dd4ec3973d388dbfb", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <iostream>\n+#include <filesystem>\n+\n+using namespace std::filesystem;\n+\n+struct P {\n+  operator path&();\n+};\n+\n+void foo(std::iostream& s) {\n+  P p;\n+  s << p; // { dg-error \"no match\" }\n+  s >> p; // { dg-error \"no match\" }\n+}\n+// { dg-prune-output \"no type .* std::enable_if\" }"}]}