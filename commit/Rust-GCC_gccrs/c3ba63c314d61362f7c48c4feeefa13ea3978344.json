{"sha": "c3ba63c314d61362f7c48c4feeefa13ea3978344", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiYTYzYzMxNGQ2MTM2MmY3YzQ4YzRmZWVlZmExM2VhMzk3ODM0NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-10-23T13:10:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-10-23T13:10:26Z"}, "message": "PR libstdc++/87704 fix unique_ptr(nullptr_t) constructors\n\nUsing a delegating constructor to implement these constructors means\nthat they instantiate the destructor, which requires the element_type to\nbe complete. In C++11 and C++14 they were specified to be delegating,\nbut that was changed as part of LWG 2801 so in C++17 they don't require\na complete type (as was intended all along).\n\n\tPR libstdc++/87704\n\t* include/bits/unique_ptr.h (unique_ptr::unique_ptr(nullptr_t)): Do\n\tnot delegate to default constructor.\n\t(unique_ptr<T[], D>::unique_ptr(nullptr_t)): Likewise.\n\t* testsuite/20_util/unique_ptr/cons/incomplete.cc: New test.\n\nFrom-SVN: r265423", "tree": {"sha": "3c251d913f928aff73255661bf886c61668373ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c251d913f928aff73255661bf886c61668373ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3ba63c314d61362f7c48c4feeefa13ea3978344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ba63c314d61362f7c48c4feeefa13ea3978344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ba63c314d61362f7c48c4feeefa13ea3978344", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ba63c314d61362f7c48c4feeefa13ea3978344/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99c24b911b385a3dddfe8fe5730d2c659a92222a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c24b911b385a3dddfe8fe5730d2c659a92222a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c24b911b385a3dddfe8fe5730d2c659a92222a"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "7c583dd726ecdec747deef9a674594afda881824", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ba63c314d61362f7c48c4feeefa13ea3978344/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ba63c314d61362f7c48c4feeefa13ea3978344/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c3ba63c314d61362f7c48c4feeefa13ea3978344", "patch": "@@ -1,3 +1,11 @@\n+2018-10-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/87704\n+\t* include/bits/unique_ptr.h (unique_ptr::unique_ptr(nullptr_t)): Do\n+\tnot delegate to default constructor.\n+\t(unique_ptr<T[], D>::unique_ptr(nullptr_t)): Likewise.\n+\t* testsuite/20_util/unique_ptr/cons/incomplete.cc: New test.\n+\n 2018-10-20  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* testsuite/util/testsuite_containers.h"}, {"sha": "dcb866d37bc8c5297776ab8296963fb2079bf467", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ba63c314d61362f7c48c4feeefa13ea3978344/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ba63c314d61362f7c48c4feeefa13ea3978344/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=c3ba63c314d61362f7c48c4feeefa13ea3978344", "patch": "@@ -195,7 +195,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>\n \tconstexpr unique_ptr() noexcept\n \t: _M_t()\n-        { }\n+\t{ }\n \n       /** Takes ownership of a pointer.\n        *\n@@ -244,7 +244,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /// Creates a unique_ptr that owns nothing.\n       template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>\n-\tconstexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }\n+\tconstexpr unique_ptr(nullptr_t) noexcept\n+\t: _M_t()\n+\t{ }\n \n       // Move constructors.\n \n@@ -472,7 +474,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>\n \tconstexpr unique_ptr() noexcept\n \t: _M_t()\n-        { }\n+\t{ }\n \n       /** Takes ownership of a pointer.\n        *\n@@ -535,7 +537,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /// Creates a unique_ptr that owns nothing.\n       template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>\n-\tconstexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }\n+\tconstexpr unique_ptr(nullptr_t) noexcept\n+\t: _M_t()\n+        { }\n \n       template<typename _Up, typename _Ep,\n \t       typename = _Require<__safe_conversion_up<_Up, _Ep>>>"}, {"sha": "1a8f28838a17f6e0af5a424c9822ba042d46a6a7", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/incomplete.cc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ba63c314d61362f7c48c4feeefa13ea3978344/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fincomplete.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ba63c314d61362f7c48c4feeefa13ea3978344/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fincomplete.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fincomplete.cc?ref=c3ba63c314d61362f7c48c4feeefa13ea3978344", "patch": "@@ -0,0 +1,32 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <memory>\n+\n+struct Incomplete;\n+\n+void f(void** p)\n+{\n+  ::new (p[0]) std::unique_ptr<Incomplete>();\n+  ::new (p[1]) std::unique_ptr<Incomplete[]>();\n+\n+  // PR libstdc++/87704\n+  ::new (p[2]) std::unique_ptr<Incomplete>(nullptr);\n+  ::new (p[3]) std::unique_ptr<Incomplete[]>(nullptr);\n+}"}]}