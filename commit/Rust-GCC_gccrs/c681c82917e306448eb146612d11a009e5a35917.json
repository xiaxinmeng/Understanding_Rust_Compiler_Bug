{"sha": "c681c82917e306448eb146612d11a009e5a35917", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4MWM4MjkxN2UzMDY0NDhlYjE0NjYxMmQxMWEwMDllNWEzNTkxNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-06-22T16:49:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-06-22T16:49:57Z"}, "message": "testsuite_common_types.h (bitwise_operators, [...]): Initialize a and b.\n\n2009-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/util/testsuite_common_types.h (bitwise_operators,\n\tbitwise_assignment_operators): Initialize a and b.\n\t(struct has_bitwise_operators): Do not call the latter.\n\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Adjust\n\tdg-error line numbers.\n\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Likewise.\n\nFrom-SVN: r148809", "tree": {"sha": "057a4a8b99a538d50c268fcbfa231afd4160019c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/057a4a8b99a538d50c268fcbfa231afd4160019c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c681c82917e306448eb146612d11a009e5a35917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c681c82917e306448eb146612d11a009e5a35917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c681c82917e306448eb146612d11a009e5a35917", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c681c82917e306448eb146612d11a009e5a35917/comments", "author": null, "committer": null, "parents": [{"sha": "7a5d2eb861a39a2422fb25e4e106941a5aba79d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5d2eb861a39a2422fb25e4e106941a5aba79d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5d2eb861a39a2422fb25e4e106941a5aba79d8"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "fc140487c81b8a75b5469e01234ba23dac96029a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c681c82917e306448eb146612d11a009e5a35917", "patch": "@@ -1,3 +1,14 @@\n+2009-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/util/testsuite_common_types.h (bitwise_operators,\n+\tbitwise_assignment_operators): Initialize a and b.\n+\t(struct has_bitwise_operators): Do not call the latter.\n+\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Adjust\n+\tdg-error line numbers.\n+\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Likewise.\n+\n 2009-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/23_containers/list/invalidation/1.cc: Mark test as"}, {"sha": "0b73b080fbe7494f13a4fa20a0472e4814346f67", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc?ref=c681c82917e306448eb146612d11a009e5a35917", "patch": "@@ -29,7 +29,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 521 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 525 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 239 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 257 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 275 } "}, {"sha": "a261a84c96835da9711d3c1677386ab14a11bbd2", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc?ref=c681c82917e306448eb146612d11a009e5a35917", "patch": "@@ -29,7 +29,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 560 } \n+// { dg-error \"used here\" \"\" { target *-*-* } 564 } \n // { dg-error \"deleted function\" \"\" { target *-*-* } 238 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 256 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 274 }"}, {"sha": "a488cb06d142f6f05ae1bad6e6507c80f025918a", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc?ref=c681c82917e306448eb146612d11a009e5a35917", "patch": "@@ -30,11 +30,11 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 521 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 525 }\n // { dg-excess-errors \"deleted function\" } \n // { dg-excess-errors \"deleted function\" } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 29 } \n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 528 } \n+// { dg-error \"instantiated from\" \"\" { target *-*-* } 532 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 170 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 399 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 168 }  "}, {"sha": "71eb282fcd80ade5236cf6332ca6075765126025", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc?ref=c681c82917e306448eb146612d11a009e5a35917", "patch": "@@ -30,11 +30,11 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 560 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 564 }\n // { dg-excess-errors \"deleted function\" } \n // { dg-excess-errors \"deleted function\" } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 29 } \n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 566 } \n+// { dg-error \"instantiated from\" \"\" { target *-*-* } 570 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 170 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 399 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 168 }  "}, {"sha": "c6c00689f3da8a5f0cec837b2d25e8f09cc47c82", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c681c82917e306448eb146612d11a009e5a35917/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=c681c82917e306448eb146612d11a009e5a35917", "patch": "@@ -387,8 +387,8 @@ namespace __gnu_test\n     void\n     bitwise_operators()\n     {\n-      _Tp a; \n-      _Tp b;\n+      _Tp a = _Tp();\n+      _Tp b = _Tp();\n       a | b;\n       a & b;\n       a ^ b;\n@@ -399,8 +399,8 @@ namespace __gnu_test\n     void\n     bitwise_assignment_operators()\n     {\n-      _Tp a; \n-      _Tp b;\n+      _Tp a = _Tp();\n+      _Tp b = _Tp();\n       a |= b; // set\n       a &= ~b; // clear\n       a ^= b;\n@@ -426,7 +426,11 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    bitwise_assignment_operators<_Tp>();\n+\t    _Tp a;\n+\t    _Tp b;\n+\t    a |= b; // set\n+\t    a &= ~b; // clear\n+\t    a ^= b;\n \t  }\n \t};\n "}]}