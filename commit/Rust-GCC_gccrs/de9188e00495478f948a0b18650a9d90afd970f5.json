{"sha": "de9188e00495478f948a0b18650a9d90afd970f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU5MTg4ZTAwNDk1NDc4Zjk0OGEwYjE4NjUwYTlkOTBhZmQ5NzBmNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-05T19:45:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-05T19:45:21Z"}, "message": "re PR target/77476 ([AVX-512] illegal kmovb instruction on KNL)\n\n\tPR target/77476\n\t* config/i386/i386.md (isa): Add x64_avx512bw.\n\t(*zero_extendsidi2): For alternative 11 use x64_avx512bw isa.\n\t(kmov_isa): New mode attr.\n\t(zero_extend<mode>di2): Use <kmov_isa> isa for the last alternative.\n\t(*zero_extend<mode>si2): Likewise.\n\t(*zero_extendqihi2): Use avx512dq isa for the last alternative.\n\n\t* gcc.target/i386/avx512f-pr77476.c: New test.\n\t* gcc.target/i386/avx512bw-pr77476.c: New test.\n\t* gcc.target/i386/avx512dq-pr77476.c: New test.\n\nFrom-SVN: r240000", "tree": {"sha": "fa939b7010e4f5e496f23badba5bcde11924b80d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa939b7010e4f5e496f23badba5bcde11924b80d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de9188e00495478f948a0b18650a9d90afd970f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de9188e00495478f948a0b18650a9d90afd970f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de9188e00495478f948a0b18650a9d90afd970f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de9188e00495478f948a0b18650a9d90afd970f5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c76f7809850c894df300556e4b7c31755b6e027c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76f7809850c894df300556e4b7c31755b6e027c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76f7809850c894df300556e4b7c31755b6e027c"}], "stats": {"total": 127, "additions": 123, "deletions": 4}, "files": [{"sha": "4335b9d86ced5f716beb8f3e906635e187c9731e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de9188e00495478f948a0b18650a9d90afd970f5", "patch": "@@ -1,3 +1,13 @@\n+2016-09-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/77476\n+\t* config/i386/i386.md (isa): Add x64_avx512bw.\n+\t(*zero_extendsidi2): For alternative 11 use x64_avx512bw isa.\n+\t(kmov_isa): New mode attr.\n+\t(zero_extend<mode>di2): Use <kmov_isa> isa for the last alternative.\n+\t(*zero_extend<mode>si2): Likewise.\n+\t(*zero_extendqihi2): Use avx512dq isa for the last alternative.\n+\n 2016-09-05  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/invoke.texi (SPU Options): nops -> NOPs."}, {"sha": "e3c9eadde858488f4dc55f18e6630c8a6ee75ebc", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=de9188e00495478f948a0b18650a9d90afd970f5", "patch": "@@ -799,7 +799,7 @@\n \t\t    sse2,sse2_noavx,sse3,sse4,sse4_noavx,avx,noavx,\n \t\t    avx2,noavx2,bmi,bmi2,fma4,fma,avx512f,noavx512f,\n \t\t    fma_avx512f,avx512bw,noavx512bw,avx512dq,noavx512dq,\n-\t\t    avx512vl,noavx512vl,x64_avx512dq\"\n+\t\t    avx512vl,noavx512vl,x64_avx512dq,x64_avx512bw\"\n   (const_string \"base\"))\n \n (define_attr \"enabled\" \"\"\n@@ -812,6 +812,8 @@\n \t   (symbol_ref \"TARGET_64BIT && TARGET_AVX\")\n \t (eq_attr \"isa\" \"x64_avx512dq\")\n \t   (symbol_ref \"TARGET_64BIT && TARGET_AVX512DQ\")\n+\t (eq_attr \"isa\" \"x64_avx512bw\")\n+\t   (symbol_ref \"TARGET_64BIT && TARGET_AVX512BW\")\n \t (eq_attr \"isa\" \"nox64\") (symbol_ref \"!TARGET_64BIT\")\n \t (eq_attr \"isa\" \"sse2\") (symbol_ref \"TARGET_SSE2\")\n \t (eq_attr \"isa\" \"sse2_noavx\")\n@@ -3735,12 +3737,14 @@\n   [(set (attr \"isa\")\n      (cond [(eq_attr \"alternative\" \"0,1,2\")\n \t      (const_string \"nox64\")\n-\t    (eq_attr \"alternative\" \"3,7,11\")\n+\t    (eq_attr \"alternative\" \"3,7\")\n \t      (const_string \"x64\")\n \t    (eq_attr \"alternative\" \"8\")\n \t      (const_string \"x64_sse4\")\n \t    (eq_attr \"alternative\" \"10\")\n \t      (const_string \"sse2\")\n+\t    (eq_attr \"alternative\" \"11\")\n+\t      (const_string \"x64_avx512bw\")\n \t   ]\n \t   (const_string \"*\")))\n    (set (attr \"type\")\n@@ -3804,6 +3808,9 @@\n    (set (match_dup 4) (const_int 0))]\n   \"split_double_mode (DImode, &operands[0], 1, &operands[3], &operands[4]);\")\n \n+(define_mode_attr kmov_isa\n+  [(QI \"avx512dq\") (HI \"avx512f\") (SI \"avx512bw\") (DI \"avx512bw\")])\n+\n (define_insn \"zero_extend<mode>di2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,*r\")\n \t(zero_extend:DI\n@@ -3812,7 +3819,8 @@\n   \"@\n    movz{<imodesuffix>l|x}\\t{%1, %k0|%k0, %1}\n    kmov<mskmodesuffix>\\t{%1, %k0|%k0, %1}\"\n-  [(set_attr \"type\" \"imovx,mskmov\")\n+  [(set_attr \"isa\" \"*,<kmov_isa>\")\n+   (set_attr \"type\" \"imovx,mskmov\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"zero_extend<mode>si2\"\n@@ -3863,7 +3871,8 @@\n   \"@\n    movz{<imodesuffix>l|x}\\t{%1, %0|%0, %1}\n    kmov<mskmodesuffix>\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"imovx,mskmov\")\n+  [(set_attr \"isa\" \"*,<kmov_isa>\")\n+   (set_attr \"type\" \"imovx,mskmov\")\n    (set_attr \"mode\" \"SI,<MODE>\")])\n \n (define_expand \"zero_extendqihi2\"\n@@ -3914,6 +3923,7 @@\n    movz{bl|x}\\t{%1, %k0|%k0, %1}\n    kmovb\\t{%1, %k0|%k0, %1}\"\n   [(set_attr \"type\" \"imovx,mskmov\")\n+   (set_attr \"isa\" \"*,avx512dq\")\n    (set_attr \"mode\" \"SI,QI\")])\n \n (define_insn_and_split \"*zext<mode>_doubleword_and\""}, {"sha": "c91ad0d310130c2c4228396b75526375bcf50c43", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=de9188e00495478f948a0b18650a9d90afd970f5", "patch": "@@ -1,5 +1,10 @@\n 2016-09-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/77476\n+\t* gcc.target/i386/avx512f-pr77476.c: New test.\n+\t* gcc.target/i386/avx512bw-pr77476.c: New test.\n+\t* gcc.target/i386/avx512dq-pr77476.c: New test.\n+\n \t* lib/target-supports.exp (check_effective_target_vect_simd_clones):\n \tUpdate comment to mention also avx512f.\n "}, {"sha": "bae00e4ee514cb1a3d0dcc9dfb9938d5343fa410", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr77476.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr77476.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr77476.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr77476.c?ref=de9188e00495478f948a0b18650a9d90afd970f5", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/77476 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512bw\" } */\n+/* { dg-require-effective-target avx512bw } */\n+\n+#include \"avx512bw-check.h\"\n+#define PR77476_TEST avx512bw_test\n+\n+#include \"avx512f-pr77476.c\""}, {"sha": "77d024e053e3cfd52abfd8a1baade4e198a37710", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-pr77476.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr77476.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr77476.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr77476.c?ref=de9188e00495478f948a0b18650a9d90afd970f5", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/77476 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#include \"avx512dq-check.h\"\n+#define PR77476_TEST avx512dq_test\n+\n+#include \"avx512f-pr77476.c\""}, {"sha": "f3bd509535a9cd668c7851ac4f636f4e8e692df0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr77476.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr77476.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9188e00495478f948a0b18650a9d90afd970f5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr77476.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr77476.c?ref=de9188e00495478f948a0b18650a9d90afd970f5", "patch": "@@ -0,0 +1,76 @@\n+/* PR target/77476 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+/* { dg-require-effective-target avx512f } */\n+\n+#ifndef PR77476_TEST\n+#include \"avx512f-check.h\"\n+#define PR77476_TEST avx512f_test\n+#endif\n+\n+unsigned short s;\n+unsigned int i;\n+unsigned long long l;\n+\n+void\n+f1 (void)\n+{\n+  unsigned char a = 0xff;\n+  asm volatile (\"\" : \"+Yk\" (a));\n+  s = a;\n+}\n+\n+void\n+f2 (void)\n+{\n+  unsigned char a = 0xff;\n+  asm volatile (\"\" : \"+Yk\" (a));\n+  i = a;\n+}\n+\n+void\n+f3 (void)\n+{\n+  unsigned char a = 0xff;\n+  asm volatile (\"\" : \"+Yk\" (a));\n+  l = a;\n+}\n+\n+void\n+f4 (void)\n+{\n+  unsigned short a = 0xffff;\n+  asm volatile (\"\" : \"+Yk\" (a));\n+  i = a;\n+}\n+\n+void\n+f5 (void)\n+{\n+  unsigned short a = 0xffff;\n+  asm volatile (\"\" : \"+Yk\" (a));\n+  l = a;\n+}\n+\n+#ifdef __AVX512BW__\n+void\n+f6 (void)\n+{\n+  unsigned int a = 0xffffffff;\n+  asm volatile (\"\" : \"+Yk\" (a));\n+  l = a;\n+}\n+#endif\n+\n+static void\n+PR77476_TEST ()\n+{\n+  f1 (); if (s != 0xff) __builtin_abort (); s = 0;\n+  f2 (); if (i != 0xff) __builtin_abort (); i = 0;\n+  f3 (); if (l != 0xff) __builtin_abort (); l = 0;\n+  f4 (); if (i != 0xffff) __builtin_abort (); i = 0;\n+  f5 (); if (l != 0xffff) __builtin_abort (); l = 0;\n+#ifdef __AVX512BW__\n+  f6 (); if (l != 0xffffffff) __builtin_abort (); l = 0;\n+#endif\n+}"}]}