{"sha": "3e452820c3956cbefe3a0547fe51198a882d9e54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0NTI4MjBjMzk1NmNiZWZlM2EwNTQ3ZmU1MTE5OGE4ODJkOWU1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-15T09:22:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-15T09:22:01Z"}, "message": "[multiple changes]\n\n2011-10-15  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch6.adb (Add_Unconstrained_Actuals_To_Build_In_Place_Call):\n\tDo not create a pool formal on unless RE_Root_Storage_Pool_Ptr\n\tis available.\n\t(Expand_N_Extended_Return_Statement): Do not create a renaming of the\n\tbuild-in-place pool parameter unless RE_Root_Storage_Pool_Ptr is\n\tavailable.\n\t(Make_Build_In_Place_Call_In_Allocator): Add the user-defined\n\tpool only if RE_Root_Storage_Pool_Ptr is available.\n\t(Make_Build_In_Place_Call_In_Object_Declaration): Do not add a\n\tpool actual unless RE_Root_Storage_Pool_Ptr is available.\n\t* sem_ch6.adb (Create_Extra_Formals): Add build-in-place pool\n\tformal only if RE_Root_Storage_Pool_Ptr is available.\n\n2011-10-15  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-cusyqu.ads, a-cbsyqu.ads, a-cuprqu.ads, a-cbprqu.ads (Queue\n\ttype): Specify Priority aspect for protected type.\n\nFrom-SVN: r180025", "tree": {"sha": "96772105a94b5dd2509256c64d5d12042e63189d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96772105a94b5dd2509256c64d5d12042e63189d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e452820c3956cbefe3a0547fe51198a882d9e54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e452820c3956cbefe3a0547fe51198a882d9e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e452820c3956cbefe3a0547fe51198a882d9e54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e452820c3956cbefe3a0547fe51198a882d9e54/comments", "author": null, "committer": null, "parents": [{"sha": "4650947d66b44b48786a73ac2972ef96f0613565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4650947d66b44b48786a73ac2972ef96f0613565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4650947d66b44b48786a73ac2972ef96f0613565"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "891ac96fcd4bb4b865d1d1ab409f73ccdbc59620", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3e452820c3956cbefe3a0547fe51198a882d9e54", "patch": "@@ -1,3 +1,23 @@\n+2011-10-15  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch6.adb (Add_Unconstrained_Actuals_To_Build_In_Place_Call):\n+\tDo not create a pool formal on unless RE_Root_Storage_Pool_Ptr\n+\tis available.\n+\t(Expand_N_Extended_Return_Statement): Do not create a renaming of the\n+\tbuild-in-place pool parameter unless RE_Root_Storage_Pool_Ptr is\n+\tavailable.\n+\t(Make_Build_In_Place_Call_In_Allocator): Add the user-defined\n+\tpool only if RE_Root_Storage_Pool_Ptr is available.\n+\t(Make_Build_In_Place_Call_In_Object_Declaration): Do not add a\n+\tpool actual unless RE_Root_Storage_Pool_Ptr is available.\n+\t* sem_ch6.adb (Create_Extra_Formals): Add build-in-place pool\n+\tformal only if RE_Root_Storage_Pool_Ptr is available.\n+\n+2011-10-15  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-cusyqu.ads, a-cbsyqu.ads, a-cuprqu.ads, a-cbprqu.ads (Queue\n+\ttype): Specify Priority aspect for protected type.\n+\n 2011-10-14  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_disp.adb (Check_Premature_Freezing): If an untagged type"}, {"sha": "d8a53f27918af0d8e5cb9cdfdb21b965207e7465", "filename": "gcc/ada/a-cbprqu.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cbprqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cbprqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbprqu.ads?ref=3e452820c3956cbefe3a0547fe51198a882d9e54", "patch": "@@ -101,9 +101,7 @@ package Ada.Containers.Bounded_Priority_Queues is\n    protected type Queue\n      (Capacity : Count_Type := Default_Capacity;\n       Ceiling  : System.Any_Priority := Default_Ceiling)\n-   --  ???\n-   --  with Priority => Ceiling is new Queue_Interfaces.Queue with\n-   is new Queue_Interfaces.Queue with\n+     with Priority => Ceiling is new Queue_Interfaces.Queue with\n \n       overriding\n       entry Enqueue (New_Item : Queue_Interfaces.Element_Type);"}, {"sha": "17b0a5a6a41706d710b2333886c5c4510a7ad635", "filename": "gcc/ada/a-cbsyqu.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cbsyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cbsyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbsyqu.ads?ref=3e452820c3956cbefe3a0547fe51198a882d9e54", "patch": "@@ -83,9 +83,7 @@ package Ada.Containers.Bounded_Synchronized_Queues is\n    protected type Queue\n      (Capacity : Count_Type := Default_Capacity;\n       Ceiling  : System.Any_Priority := Default_Ceiling)\n-   --  ???\n-   --  with Priority => Ceiling is new Queue_Interfaces.Queue with\n-   is new Queue_Interfaces.Queue with\n+     with Priority => Ceiling is new Queue_Interfaces.Queue with\n \n       overriding\n       entry Enqueue (New_Item : Queue_Interfaces.Element_Type);"}, {"sha": "f7d4d4c71d657051f1a088926872a6733c533f43", "filename": "gcc/ada/a-cuprqu.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cuprqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cuprqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cuprqu.ads?ref=3e452820c3956cbefe3a0547fe51198a882d9e54", "patch": "@@ -100,9 +100,7 @@ package Ada.Containers.Unbounded_Priority_Queues is\n    end Implementation;\n \n    protected type Queue (Ceiling : System.Any_Priority := Default_Ceiling)\n-      --  ???\n-      --  with Priority => Ceiling is new Queue_Interfaces.Queue with\n-      is new Queue_Interfaces.Queue with\n+     with Priority => Ceiling is new Queue_Interfaces.Queue with\n \n       overriding\n       entry Enqueue (New_Item : Queue_Interfaces.Element_Type);"}, {"sha": "20e584d70c6c4d17735aa8476cf1c6510592253d", "filename": "gcc/ada/a-cusyqu.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cusyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fa-cusyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cusyqu.ads?ref=3e452820c3956cbefe3a0547fe51198a882d9e54", "patch": "@@ -86,9 +86,7 @@ package Ada.Containers.Unbounded_Synchronized_Queues is\n    end Implementation;\n \n    protected type Queue (Ceiling : System.Any_Priority := Default_Ceiling)\n-     --  ???\n-     --  with Priority => Ceiling is new Queue_Interfaces.Queue with\n-     is new Queue_Interfaces.Queue with\n+     with Priority => Ceiling is new Queue_Interfaces.Queue with\n \n       overriding\n       entry Enqueue (New_Item : Queue_Interfaces.Element_Type);"}, {"sha": "17b72cf231b49246d28d59cc4030b3df60657cb6", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=3e452820c3956cbefe3a0547fe51198a882d9e54", "patch": "@@ -311,10 +311,12 @@ package body Exp_Ch6 is\n       Add_Extra_Actual_To_Call\n         (Function_Call, Alloc_Form_Formal, Alloc_Form_Actual);\n \n-      --  Pass the Storage_Pool parameter. This parameter is omitted on .NET\n-      --  and JVM as those targets do not support pools.\n+      --  Pass the Storage_Pool parameter. This parameter is omitted\n+      --  .NET/JVM/ZFP as those targets do not support pools.\n \n-      if VM_Target = No_VM then\n+      if\n+        VM_Target = No_VM and then RTE_Available (RE_Root_Storage_Pool_Ptr)\n+      then\n          Pool_Formal := Build_In_Place_Formal (Function_Id, BIP_Storage_Pool);\n          Analyze_And_Resolve (Pool_Actual, Etype (Pool_Formal));\n          Add_Extra_Actual_To_Call\n@@ -5241,10 +5243,12 @@ package body Exp_Ch6 is\n                      Pool_Allocator := New_Copy_Tree (Heap_Allocator);\n \n                      --  Do not generate the renaming of the build-in-place\n-                     --  pool parameter on .NET/JVM because the parameter is\n-                     --  not created in the first place.\n+                     --  pool parameter on .NET/JVM/ZFP because the parameter\n+                     --  is not created in the first place.\n \n-                     if VM_Target = No_VM then\n+                     if VM_Target = No_VM and then\n+                       RTE_Available (RE_Root_Storage_Pool_Ptr)\n+                     then\n                         Pool_Decl :=\n                           Make_Object_Renaming_Declaration (Loc,\n                             Defining_Identifier => Pool_Id,\n@@ -8137,7 +8141,9 @@ package body Exp_Ch6 is\n          --  has an unconstrained or tagged result type).\n \n          if Needs_BIP_Alloc_Form (Enclosing_Func) then\n-            if VM_Target = No_VM then\n+            if VM_Target = No_VM and then\n+              RTE_Available (RE_Root_Storage_Pool_Ptr)\n+            then\n                Pool_Actual :=\n                  New_Reference_To (Build_In_Place_Formal\n                    (Enclosing_Func, BIP_Storage_Pool), Loc);"}, {"sha": "6cf630aeb050ac32cf5d9e4b7b9eb20a79c09707", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452820c3956cbefe3a0547fe51198a882d9e54/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3e452820c3956cbefe3a0547fe51198a882d9e54", "patch": "@@ -6487,10 +6487,12 @@ package body Sem_Ch6 is\n                     E, BIP_Formal_Suffix (BIP_Alloc_Form));\n \n                --  Add BIP_Storage_Pool, in case BIP_Alloc_Form indicates to\n-               --  use a user-defined pool. This formal is not added on .NET\n-               --  and JVM as those targets do not support pools.\n+               --  use a user-defined pool. This formal is not added on\n+               --  .NET/JVM/ZFP as those targets do not support pools.\n \n-               if VM_Target = No_VM then\n+               if VM_Target = No_VM and then\n+                 RTE_Available (RE_Root_Storage_Pool_Ptr)\n+               then\n                   Discard :=\n                     Add_Extra_Formal\n                       (E, RTE (RE_Root_Storage_Pool_Ptr),"}]}