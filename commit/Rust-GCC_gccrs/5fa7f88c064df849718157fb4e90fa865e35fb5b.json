{"sha": "5fa7f88c064df849718157fb4e90fa865e35fb5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhN2Y4OGMwNjRkZjg0OTcxODE1N2ZiNGU5MGZhODY1ZTM1ZmI1Yg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-02-08T21:27:02Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-02-08T21:27:02Z"}, "message": "Makefile.in (GEN_PROTOS_OBJS): Remove libcpp.a.\n\n\t* Makefile.in (GEN_PROTOS_OBJS): Remove libcpp.a.\n\t(gen_protos.o): Don't depend on cpplib.h or cpphash.h.\n\t(fix-header.o): Don't depend on cpphash.h.\n\n\t* scan.c (hashstr): New function.\n\t* scan.h: Prototype it.\n\t* fix-header.c: Don't include cpphash.h.  Use hashstr.\n\t* gen-protos.c: Don't include cpphash.h or cpplib.h.  Use\n\thashstr.  Report hash table statistics.  Add private\n\tdefinition of xrealloc.\n\nFrom-SVN: r31854", "tree": {"sha": "dc89fdbfec79835dff420526e91afe6ae04f9ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc89fdbfec79835dff420526e91afe6ae04f9ca8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fa7f88c064df849718157fb4e90fa865e35fb5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa7f88c064df849718157fb4e90fa865e35fb5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fa7f88c064df849718157fb4e90fa865e35fb5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa7f88c064df849718157fb4e90fa865e35fb5b/comments", "author": null, "committer": null, "parents": [{"sha": "4be2e5d967e76bdec83d5b6d08d7b9c5ccacad75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be2e5d967e76bdec83d5b6d08d7b9c5ccacad75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be2e5d967e76bdec83d5b6d08d7b9c5ccacad75"}], "stats": {"total": 65, "additions": 57, "deletions": 8}, "files": [{"sha": "b0c2ec951f28e093a5b79e83c1d7d9e4982db257", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fa7f88c064df849718157fb4e90fa865e35fb5b", "patch": "@@ -1,3 +1,16 @@\n+2000-02-08  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* Makefile.in (GEN_PROTOS_OBJS): Remove libcpp.a.\n+\t(gen_protos.o): Don't depend on cpplib.h or cpphash.h.\n+\t(fix-header.o): Don't depend on cpphash.h.\n+\n+\t* scan.c (hashstr): New function. \n+\t* scan.h: Prototype it.\n+\t* fix-header.c: Don't include cpphash.h.  Use hashstr.  \n+\t* gen-protos.c: Don't include cpphash.h or cpplib.h.  Use\n+\thashstr.  Report hash table statistics.  Add private     \n+\tdefinition of xrealloc.\n+\n 2000-02-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* i386.h (TARGET_SWITCHES): Fix typo in option name."}, {"sha": "ee34ad6d685b39a7842b065d29205d588d9455c7", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5fa7f88c064df849718157fb4e90fa865e35fb5b", "patch": "@@ -2246,12 +2246,12 @@ deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \t  touch deduced.h; \\\n \tfi\n \n-GEN_PROTOS_OBJS = gen-protos.o scan.o libcpp.a\n+GEN_PROTOS_OBJS = gen-protos.o scan.o\n gen-protos: $(GEN_PROTOS_OBJS) $(HOST_LIBDEPS)\n \t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o gen-protos \\\n \t  $(GEN_PROTOS_OBJS) $(HOST_LIBS)\n \n-gen-protos.o: gen-protos.c scan.h $(build_xm_file) system.h cpplib.h cpphash.h\n+gen-protos.o: gen-protos.c scan.h $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c\n \n scan.o: scan.c scan.h $(build_xm_file) system.h\n@@ -2272,7 +2272,7 @@ fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_LIBDEPS) \\\n \t   scan-decls.o scan.o libcpp.a $(HOST_LIBS)\n \n fix-header.o: fix-header.c $(srcdir)/../include/obstack.h scan.h \\\n-\txsys-protos.h $(build_xm_file) system.h cpplib.h cpphash.h\n+\txsys-protos.h $(build_xm_file) system.h cpplib.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n \n scan-decls.o: scan-decls.c scan.h cpplib.h $(build_xm_file) system.h"}, {"sha": "f01eadc1b30a9d85e26a26ddfc5c539316189cfa", "filename": "gcc/fix-header.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=5fa7f88c064df849718157fb4e90fa865e35fb5b", "patch": "@@ -75,7 +75,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"obstack.h\"\n #include \"scan.h\"\n #include \"cpplib.h\"\n-#include \"cpphash.h\"\n \n static void v_fatal PARAMS ((const char *, va_list)) ATTRIBUTE_NORETURN;\n static void fatal PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n@@ -381,7 +380,7 @@ lookup_std_proto (name, name_length)\n      const char *name;\n      int name_length;\n {\n-  int i = hashf (name, name_length, HASH_SIZE);\n+  int i = hashstr (name, name_length) % HASH_SIZE;\n   int i0 = i;\n   for (;;)\n     {"}, {"sha": "32eb80e8a5640a30f33a2ac08524dad48fd88cb6", "filename": "gcc/gen-protos.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Fgen-protos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Fgen-protos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgen-protos.c?ref=5fa7f88c064df849718157fb4e90fa865e35fb5b", "patch": "@@ -18,8 +18,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"scan.h\"\n-#include \"cpplib.h\"\n-#include \"cpphash.h\"\n #undef abort\n \n int verbose = 0;\n@@ -31,6 +29,7 @@ static int parse_fn_proto\tPARAMS ((char *, char *, struct fn_decl *));\n #define HASH_SIZE 2503 /* a prime */\n int hash_tab[HASH_SIZE];\n int next_index;\n+int collisions;\n \n static void\n add_hash (fname)\n@@ -39,10 +38,11 @@ add_hash (fname)\n   int i, i0;\n \n   /* NOTE:  If you edit this, also edit lookup_std_proto in fix-header.c !! */\n-  i = hashf (fname, strlen (fname), HASH_SIZE);\n+  i = hashstr (fname, strlen (fname)) % HASH_SIZE;\n   i0 = i;\n   if (hash_tab[i] != 0)\n     {\n+      collisions++;\n       for (;;)\n \t{\n \t  i = (i+1) % HASH_SIZE;\n@@ -186,5 +186,26 @@ main (argc, argv)\n     fprintf (outf, \"  %d,\\n\", hash_tab[i]);\n   fprintf (outf, \"};\\n\");\n \n+  fprintf (stderr, \"gen-protos: %d entries %d collisions\\n\",\n+\t   next_index, collisions);\n+  \n   return 0;\n }\n+\n+/* Needed by scan.o.  We can't use libiberty here.  */\n+PTR\n+xrealloc (p, s)\n+     PTR p;\n+     size_t s;\n+{\n+  PTR r;\n+  if (s == 0)\n+    s = 1;\n+  if (p)\n+    r = realloc (p, s);\n+  else\n+    r = malloc (s);\n+  if (!r)\n+    abort ();\n+  return r;\n+}"}, {"sha": "4af6a43a702243f1117d15bd69f5315f00240ccb", "filename": "gcc/scan.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Fscan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Fscan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.c?ref=5fa7f88c064df849718157fb4e90fa865e35fb5b", "patch": "@@ -236,3 +236,18 @@ get_token (fp, s)\n   *s->ptr = 0;\n   return c;\n }\n+\n+unsigned int\n+hashstr (str, len)\n+     const char *str;\n+     unsigned int len;\n+{\n+  unsigned int n = len;\n+  unsigned int r = 0;\n+  const unsigned char *s = (const unsigned char *)str;\n+\n+  do\n+    r = r * 67 + (*s++ - 113);\n+  while (--n);\n+  return r + len;\n+}"}, {"sha": "a2d964485e0992f2d3f0494360bf564ef2094d26", "filename": "gcc/scan.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Fscan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa7f88c064df849718157fb4e90fa865e35fb5b/gcc%2Fscan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.h?ref=5fa7f88c064df849718157fb4e90fa865e35fb5b", "patch": "@@ -60,6 +60,7 @@ extern int read_upto _PARAMS((FILE *, sstring *, int));\n extern unsigned long hash _PARAMS((const char *));\n extern void recognized_function _PARAMS((const char *, int, int, const char *, int, int, const char *, int));\n extern void recognized_extern _PARAMS((const char *, int, const char *, int));\n+extern unsigned int hashstr _PARAMS((const char *, unsigned int));\n \n /* get_token is a simple C lexer. */\n #define IDENTIFIER_TOKEN 300"}]}