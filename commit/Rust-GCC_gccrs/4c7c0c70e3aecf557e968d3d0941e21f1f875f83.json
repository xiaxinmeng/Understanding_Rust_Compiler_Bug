{"sha": "4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM3YzBjNzBlM2FlY2Y1NTdlOTY4ZDNkMDk0MWUyMWYxZjg3NWY4Mw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-10-25T13:27:32Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-10-25T13:27:32Z"}, "message": "re PR middle-end/17407 (ICE in int_mode_for_mode)\n\n2004-10-25  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/17407\n        * c-decl.c (grokdeclarator) <case cdk_array>: Remove the call\n        layout_type as it is already done by build_array_type.\n        * tree.c (build_array_type): Layout the type even\n\n2004-10-25  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR c++/18121\n        * decl.c (grokdeclarator) <case cdk_array>: Remove the call\n        layout_type as it is already done by create_array_type_for_decl.\n\n2004-10-25  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/17407\n        * gcc.c-torture/compile/pr17407.c: New test.\n\n        PR c++/18121\n        * g++.dg/template/array8.C: New test.\n\nFrom-SVN: r89533", "tree": {"sha": "3ea37435d5af3d291b57b64a93db96a445576a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ea37435d5af3d291b57b64a93db96a445576a2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/comments", "author": null, "committer": null, "parents": [{"sha": "d87bdb13309e3f691fe0570c16cdcbdb6991d55b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87bdb13309e3f691fe0570c16cdcbdb6991d55b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d87bdb13309e3f691fe0570c16cdcbdb6991d55b"}], "stats": {"total": 71, "additions": 57, "deletions": 14}, "files": [{"sha": "16777c9341c34dc04159e216617c3e6e0d2c8635", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -1,3 +1,10 @@\n+2004-10-25  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/17407\n+\t* c-decl.c (grokdeclarator) <case cdk_array>: Remove the call\n+\tlayout_type as it is already done by build_array_type.\n+\t* tree.c (build_array_type): Layout the type even\n+\n 2004-10-25  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/frv/linux.h (TARGET_C99_FUNCTIONS): Define to 0."}, {"sha": "08f790982431a6a1ba5a9f3edaea7f45f9ef4578", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -4133,14 +4133,9 @@ grokdeclarator (const struct c_declarator *declarator,\n \t       zero.  */\n \t    if (size && integer_zerop (size))\n \t      {\n-\t\tlayout_type (type);\n \t\tTYPE_SIZE (type) = bitsize_zero_node;\n \t\tTYPE_SIZE_UNIT (type) = size_zero_node;\n \t      }\n-\t    else if (declarator->kind == cdk_pointer)\n-\t      /* We can never complete an array type which is the\n-\t         target of a pointer, so go ahead and lay it out.  */\n-\t      layout_type (type);\n \n \t    if (decl_context != PARM\n \t\t&& (array_ptr_quals != TYPE_UNQUALIFIED"}, {"sha": "8e759ff5f91c04bcd7f1fecc1d7613dba673bfb2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -1,3 +1,9 @@\n+2004-10-25  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR c++/18121\n+\t* decl.c (grokdeclarator) <case cdk_array>: Remove the call\n+\tlayout_type as it is already done by create_array_type_for_decl.\n+\n 2004-10-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/18095"}, {"sha": "2aca629cfe4b414ad4a38e147155e8e19f1bb720", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -7214,13 +7214,6 @@ grokdeclarator (const cp_declarator *declarator,\n \tcase cdk_array:\n \t  type = create_array_type_for_decl (dname, type,\n \t\t\t\t\t     declarator->u.array.bounds);\n-\t  if (inner_declarator\n-\t      && (inner_declarator->kind == cdk_pointer\n-\t\t  || inner_declarator->kind == cdk_reference\n-\t\t  || inner_declarator->kind == cdk_ptrmem))\n-\t    /* We can never complete an array type which is the\n-\t       target of a pointer, so go ahead and lay it out.  */\n-\t    layout_type (type);\n \t  break;\n \n \tcase cdk_function:"}, {"sha": "765daa2758f79c075e90e43f0c0411930e3582a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -1,3 +1,11 @@\n+2004-10-25  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/17407\n+\t* gcc.c-torture/compile/pr17407.c: New test.\n+\n+\tPR c++/18121\n+\t* g++.dg/template/array8.C: New test.\n+\n 2004-10-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR other/18138"}, {"sha": "9fd33a4aa7df795e57051f3ad2e607fd332bbf5d", "filename": "gcc/testsuite/g++.dg/template/array8.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray8.C?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/18121\n+\n+// We were trying to layout the array\n+// type but since the type/value of A<N>::i\n+// was not known at template declation type,\n+// we were crashing\n+\n+template<int> struct A\n+{\n+    static int const i = 1;\n+};\n+\n+template<int N> struct B\n+{\n+    typedef int (*p)[A<N>::i];\n+};"}, {"sha": "a06ab17580ecc58f83c84101fac69df4388f9cbb", "filename": "gcc/testsuite/gcc.c-torture/compile/pr17407.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr17407.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr17407.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr17407.c?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -0,0 +1,15 @@\n+typedef struct libxml_xpathCallback { \n+  void *ns_uri; \n+} libxml_xpathCallback; \n+ \n+typedef libxml_xpathCallback libxml_xpathCallbackArray[]; \n+ \n+libxml_xpathCallbackArray *libxml_xpathCallbacks; \n+\n+void foo1(void);\n+ \n+void \n+foo (void) \n+{ \n+  if ((*libxml_xpathCallbacks)[3].ns_uri != ((void *)0)) foo1(); \n+} "}, {"sha": "18dec5ea730e6a4d8ec5e1fdf647cad106b51db8", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7c0c70e3aecf557e968d3d0941e21f1f875f83/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=4c7c0c70e3aecf557e968d3d0941e21f1f875f83", "patch": "@@ -4333,9 +4333,12 @@ build_array_type (tree elt_type, tree index_type)\n   t = make_node (ARRAY_TYPE);\n   TREE_TYPE (t) = elt_type;\n   TYPE_DOMAIN (t) = index_type;\n-\n+  \n   if (index_type == 0)\n-    return t;\n+    {\n+      layout_type (t);\n+      return t;\n+    }\n \n   hashcode = iterative_hash_object (TYPE_HASH (elt_type), hashcode);\n   hashcode = iterative_hash_object (TYPE_HASH (index_type), hashcode);"}]}