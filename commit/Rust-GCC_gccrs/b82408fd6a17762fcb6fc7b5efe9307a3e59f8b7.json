{"sha": "b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "node_id": "C_kwDOANBUbNoAKGI4MjQwOGZkNmExNzc2MmZjYjZmYzdiNWVmZTkzMDdhM2U1OWY4Yjc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-06T21:24:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-06T21:24:24Z"}, "message": "Merge #986\n\n986: Fix ICE on recursive macro invocation r=CohenArthur a=CohenArthur\n\nCloses #982 \r\n\r\nWe can now do fancy lispy things!\r\n```rust\r\nmacro_rules! add {\r\n    ($e:literal) => {\r\n        0 + $e\r\n    };\r\n    ($e:literal $($es:literal)*) => {\r\n        $e + add!($($es)*)\r\n    };\r\n}\r\n```\r\n\r\nI've switched the order of the commits around so that the buildbot is happy\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "d1b65b146861961f38d1e292407610e3a435fbc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1b65b146861961f38d1e292407610e3a435fbc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiJSaICRBK7hj4Ov3rIwAAuVMIAD8FdVwgSaofjkpmHncjzDCv\n4PFM/i6hNPH49PKznl+0xddG7FTYDwQlBrSD1v3+ShJdLXSrmfTSWxr5vKd9/Ye1\nDQK8PG1u8CXMSaPzyRp1V5LL6efmXBP03yjBH2YhtjxJbACelvxtZxiMkfKIsj/d\nPqsjGmX+SXxQ4omM3S10iOaK/oN1kAaxvDmNfhPheU2daI/VqGeHQKz/NbbpJZpJ\nRS+wzilhX7aTL+Bz8BhH1GizsQ6P9y//MtWFAdwDuz+QX+AXmBCysbDND2kS04Mj\nzgKctzC0laPxmrtWUqXTv2ZVhg+oECs94MfYKC7mQ4Db0Lrm3FGUHA4FbTwMP1I=\n=kcj6\n-----END PGP SIGNATURE-----\n", "payload": "tree d1b65b146861961f38d1e292407610e3a435fbc0\nparent e2bccf43ed1bf33d5f454eab39a7a4a1f115b0bd\nparent 82fc107e3d1929ec41135353d62a11c42979f831\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1646601864 +0000\ncommitter GitHub <noreply@github.com> 1646601864 +0000\n\nMerge #986\n\n986: Fix ICE on recursive macro invocation r=CohenArthur a=CohenArthur\n\nCloses #982 \r\n\r\nWe can now do fancy lispy things!\r\n```rust\r\nmacro_rules! add {\r\n    ($e:literal) => {\r\n        0 + $e\r\n    };\r\n    ($e:literal $($es:literal)*) => {\r\n        $e + add!($($es)*)\r\n    };\r\n}\r\n```\r\n\r\nI've switched the order of the commits around so that the buildbot is happy\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2bccf43ed1bf33d5f454eab39a7a4a1f115b0bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bccf43ed1bf33d5f454eab39a7a4a1f115b0bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2bccf43ed1bf33d5f454eab39a7a4a1f115b0bd"}, {"sha": "82fc107e3d1929ec41135353d62a11c42979f831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82fc107e3d1929ec41135353d62a11c42979f831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82fc107e3d1929ec41135353d62a11c42979f831"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "3d07b484134f3a68553c00e1757b5858a55b3f3c", "filename": "gcc/rust/expand/rust-macro-substitute-ctx.cc", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-substitute-ctx.cc?ref=b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "patch": "@@ -17,8 +17,8 @@ SubstituteCtx::substitute_metavar (std::unique_ptr<AST::Token> &metavar)\n   else\n     {\n       // Replace\n-      // We only care about the vector when expanding repetitions. Just access\n-      // the first element of the vector.\n+      // We only care about the vector when expanding repetitions.\n+      // Just access the first element of the vector.\n       // FIXME: Clean this up so it makes more sense\n       auto &frag = it->second[0];\n       for (size_t offs = frag.token_offset_begin; offs < frag.token_offset_end;\n@@ -103,7 +103,13 @@ SubstituteCtx::substitute_repetition (size_t pattern_start, size_t pattern_end)\n       for (auto &kv_match : fragments)\n \t{\n \t  std::vector<MatchedFragment> sub_vec;\n-\t  sub_vec.emplace_back (kv_match.second[i]);\n+\n+\t  // FIXME: Hack: If a fragment is not repeated, how does it fit in the\n+\t  // submap? Do we really want to expand it? Is this normal behavior?\n+\t  if (kv_match.second.size () == 1)\n+\t    sub_vec.emplace_back (kv_match.second[0]);\n+\t  else\n+\t    sub_vec.emplace_back (kv_match.second[i]);\n \n \t  sub_map.insert ({kv_match.first, sub_vec});\n \t}\n@@ -177,6 +183,7 @@ std::vector<std::unique_ptr<AST::Token>>\n SubstituteCtx::substitute_tokens ()\n {\n   std::vector<std::unique_ptr<AST::Token>> replaced_tokens;\n+  rust_debug (\"expanding tokens\");\n \n   for (size_t i = 0; i < macro.size (); i++)\n     {"}, {"sha": "47ab2411c0d9885a7b42f75766822c27dc48c6cd", "filename": "gcc/testsuite/rust/execute/torture/macros16.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros16.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros16.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros16.rs?ref=b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "patch": "@@ -0,0 +1,14 @@\n+macro_rules! add {\n+    ($e:literal) => {\n+        0 + $e\n+    };\n+    ($e:literal $($es:literal)*) => {\n+        $e + add!($($es)*)\n+    };\n+}\n+\n+fn main() -> i32 {\n+    let a = add!(1 2 3 10); // 16\n+\n+    a - 16\n+}"}, {"sha": "e007bb355ebf91273d8759195fe619bf7bbd5e5b", "filename": "gcc/testsuite/rust/execute/torture/macros17.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros17.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros17.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros17.rs?ref=b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "patch": "@@ -0,0 +1,17 @@\n+macro_rules! two {\n+    (2) => {\n+        3\n+    };\n+}\n+\n+macro_rules! one {\n+    (1) => {\n+        two!(2)\n+    };\n+}\n+\n+fn main() -> i32 {\n+    let a = one!(1);\n+\n+    a - 3\n+}"}, {"sha": "61df17e9da597bf2045168b65f0486b12e08867f", "filename": "gcc/testsuite/rust/execute/torture/macros18.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros18.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros18.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmacros18.rs?ref=b82408fd6a17762fcb6fc7b5efe9307a3e59f8b7", "patch": "@@ -0,0 +1,14 @@\n+macro_rules! add {\n+    ($e:literal) => {\n+        0 + $e\n+    };\n+    ($e:literal $($es:literal)*) => {\n+        $e + add!($($es)*)\n+    };\n+}\n+\n+fn main() -> i32 {\n+    let a = add!(3 4); // 7\n+\n+    a - 7\n+}"}]}