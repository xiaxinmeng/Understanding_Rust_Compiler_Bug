{"sha": "c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhhZTBiZWMzZTJiMjVkNTY2M2YxMGFkNDYyN2QwNjM2ZGIzMTZkOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-03-18T14:02:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-03-18T14:02:17Z"}, "message": "tree-gimple.h (is_gimple_invariant_address): Declare.\n\n2008-03-18  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-gimple.h (is_gimple_invariant_address): Declare.\n\t(is_gimple_constant): Likewise.\n\t* tree-gimple.c (is_gimple_constant): New function.\n\t(is_gimple_invariant_address): Likewise.\n\t(is_gimple_min_invariant): Implement in terms of is_gimple_constant\n\tand is_gimple_invariant_address.\n\t* tree-ssa-loop-niter.c (expand_simple_operations): Revert\n\tprevious change.\n\t* tree-data-ref.c (get_references_in_stmt): A SSA_NAME is not\n\tan addressable base.\n\n\t* gcc.dg/tree-ssa/loop-19.c: Revert previous change.\n\nFrom-SVN: r133311", "tree": {"sha": "34274bc646f8291660cba602b593b220e0f0b0e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34274bc646f8291660cba602b593b220e0f0b0e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8119fc93077ce835232c711273cd8f3b097f17f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8119fc93077ce835232c711273cd8f3b097f17f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8119fc93077ce835232c711273cd8f3b097f17f4"}], "stats": {"total": 121, "additions": 109, "deletions": 12}, "files": [{"sha": "8004991f92c2e15d5046b1efae9412f794d1f02b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "patch": "@@ -1,3 +1,16 @@\n+2008-03-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-gimple.h (is_gimple_invariant_address): Declare.\n+\t(is_gimple_constant): Likewise.\n+\t* tree-gimple.c (is_gimple_constant): New function.\n+\t(is_gimple_invariant_address): Likewise.\n+\t(is_gimple_min_invariant): Implement in terms of is_gimple_constant\n+\tand is_gimple_invariant_address.\n+\t* tree-ssa-loop-niter.c (expand_simple_operations): Revert\n+\tprevious change.\n+\t* tree-data-ref.c (get_references_in_stmt): A SSA_NAME is not\n+\tan addressable base.\n+\n 2008-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/35611"}, {"sha": "d5543830532554aac34b5c752ce14dd90cce9508", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "patch": "@@ -1,3 +1,7 @@\n+2008-03-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/loop-19.c: Revert previous change.\n+\n 2008-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/35617"}, {"sha": "748c6e8143499852a1adf34a25a6a747268670f3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-19.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-19.c?ref=c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "patch": "@@ -6,7 +6,7 @@\n \n /* { dg-do compile { target i?86-*-* x86_64-*-* powerpc*-*-*} } */\n /* { dg-require-effective-target nonpic } */\n-/* { dg-options \"-O2 -fdump-tree-final_cleanup\" } */\n+/* { dg-options \"-O3 -fdump-tree-final_cleanup\" } */\n \n # define N      2000000\n static double   a[N],c[N];"}, {"sha": "f8faed813c78da37534b1487adbb9384507146ec", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "patch": "@@ -3965,11 +3965,14 @@ get_references_in_stmt (tree stmt, VEC (data_ref_loc, heap) **references)\n \n   if (TREE_CODE (stmt) ==  GIMPLE_MODIFY_STMT)\n     {\n+      tree base;\n       op0 = &GIMPLE_STMT_OPERAND (stmt, 0);\n       op1 = &GIMPLE_STMT_OPERAND (stmt, 1);\n \t\t\n       if (DECL_P (*op1)\n-\t  || (REFERENCE_CLASS_P (*op1) && get_base_address (*op1)))\n+\t  || (REFERENCE_CLASS_P (*op1)\n+\t      && (base = get_base_address (*op1))\n+\t      && TREE_CODE (base) != SSA_NAME))\n \t{\n \t  ref = VEC_safe_push (data_ref_loc, heap, *references, NULL);\n \t  ref->pos = op1;"}, {"sha": "93e99e6cbed1dc11cfe588209f1a09e93d83d4bb", "filename": "gcc/tree-gimple.c", "status": "modified", "additions": 83, "deletions": 6, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-gimple.c?ref=c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "patch": "@@ -167,17 +167,13 @@ is_gimple_addressable (tree t)\n \t  || INDIRECT_REF_P (t));\n }\n \n-/* Return true if T is a GIMPLE minimal invariant.  It's a restricted\n-   form of function invariant.  */\n+/* Return true if T is a valid gimple constant.  */\n \n bool\n-is_gimple_min_invariant (const_tree t)\n+is_gimple_constant (const_tree t)\n {\n   switch (TREE_CODE (t))\n     {\n-    case ADDR_EXPR:\n-      return TREE_INVARIANT (t);\n-\n     case INTEGER_CST:\n     case REAL_CST:\n     case FIXED_CST:\n@@ -198,6 +194,87 @@ is_gimple_min_invariant (const_tree t)\n     }\n }\n \n+/* Return true if T is a gimple invariant address.  */\n+\n+bool\n+is_gimple_invariant_address (const_tree t)\n+{\n+  tree op;\n+\n+  if (TREE_CODE (t) != ADDR_EXPR)\n+    return false;\n+\n+  op = TREE_OPERAND (t, 0);\n+  while (handled_component_p (op))\n+    {\n+      switch (TREE_CODE (op))\n+\t{\n+\tcase ARRAY_REF:\n+\tcase ARRAY_RANGE_REF:\n+\t  if (!is_gimple_constant (TREE_OPERAND (op, 1))\n+\t      || TREE_OPERAND (op, 2) != NULL_TREE\n+\t      || TREE_OPERAND (op, 3) != NULL_TREE)\n+\t    return false;\n+\t  break;\n+\n+\tcase COMPONENT_REF:\n+\t  if (TREE_OPERAND (op, 2) != NULL_TREE)\n+\t    return false;\n+\t  break;\n+\n+\tdefault:;\n+\t}\n+      op = TREE_OPERAND (op, 0);\n+    }\n+\n+  if (CONSTANT_CLASS_P (op))\n+    return true;\n+\n+  if (INDIRECT_REF_P (op))\n+    return false;\n+\n+  switch (TREE_CODE (op))\n+    {\n+    case PARM_DECL:\n+    case RESULT_DECL:\n+    case LABEL_DECL:\n+    case FUNCTION_DECL:\n+      return true;\n+\n+    case VAR_DECL:\n+      if (((TREE_STATIC (op) || DECL_EXTERNAL (op))\n+\t   && ! DECL_DLLIMPORT_P (op))\n+\t  || DECL_THREAD_LOCAL_P (op)\n+\t  || DECL_CONTEXT (op) == current_function_decl\n+\t  || decl_function_context (op) == current_function_decl)\n+\treturn true;\n+      break;\n+\n+    case CONST_DECL:\n+      if ((TREE_STATIC (op) || DECL_EXTERNAL (op))\n+\t  || decl_function_context (op) == current_function_decl)\n+\treturn true;\n+      break;\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n+  return false;\n+}\n+\n+/* Return true if T is a GIMPLE minimal invariant.  It's a restricted\n+   form of function invariant.  */\n+\n+bool\n+is_gimple_min_invariant (const_tree t)\n+{\n+  if (TREE_CODE (t) == ADDR_EXPR)\n+    return is_gimple_invariant_address (t);\n+\n+  return is_gimple_constant (t);\n+}\n+\n /* Return true if T looks like a valid GIMPLE statement.  */\n \n bool"}, {"sha": "b45b44b2bde318ef1c9e6288baec514614484f62", "filename": "gcc/tree-gimple.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-gimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-gimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-gimple.h?ref=c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "patch": "@@ -62,6 +62,10 @@ extern bool is_gimple_addressable (tree);\n /* Returns true iff T is any valid GIMPLE lvalue.  */\n extern bool is_gimple_lvalue (tree);\n \n+/* Returns true iff T is a GIMPLE invariant address.  */\n+bool is_gimple_invariant_address (const_tree);\n+/* Returns true iff T is a valid GIMPLE constant.  */\n+bool is_gimple_constant (const_tree);\n /* Returns true iff T is a GIMPLE restricted function invariant.  */\n extern bool is_gimple_min_invariant (const_tree);\n /* Returns true iff T is a GIMPLE rvalue.  */"}, {"sha": "40e7051c265bf9d70dc54ac93179dbf15a8a9b27", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae0bec3e2b25d5663f10ad4627d0636db316d8/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=c8ae0bec3e2b25d5663f10ad4627d0636db316d8", "patch": "@@ -1436,10 +1436,6 @@ expand_simple_operations (tree expr)\n     return expr;\n \n   e = GIMPLE_STMT_OPERAND (stmt, 1);\n-  /* Do not expand random invariants.  */\n-  if (TREE_INVARIANT (e)\n-      && !is_gimple_min_invariant (e))\n-    return expr;\n   if (/* Casts are simple.  */\n       TREE_CODE (e) != NOP_EXPR\n       && TREE_CODE (e) != CONVERT_EXPR"}]}