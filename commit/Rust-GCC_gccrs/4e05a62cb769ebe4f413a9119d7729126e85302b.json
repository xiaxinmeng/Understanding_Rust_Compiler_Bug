{"sha": "4e05a62cb769ebe4f413a9119d7729126e85302b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwNWE2MmNiNzY5ZWJlNGY0MTNhOTExOWQ3NzI5MTI2ZTg1MzAyYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T11:46:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T11:46:32Z"}, "message": "(expand_end_bindings): Add test and call for nonlocal_goto_receiver pattern.\n\n(expand_end_bindings): Add test and call for nonlocal_goto_receiver\npattern.\n(expand_asm_operands): Fix off-by-one error when scanning constraints.\n\nFrom-SVN: r12622", "tree": {"sha": "37e167294b85386248a063849fb5c50f03cd78dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37e167294b85386248a063849fb5c50f03cd78dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e05a62cb769ebe4f413a9119d7729126e85302b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e05a62cb769ebe4f413a9119d7729126e85302b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e05a62cb769ebe4f413a9119d7729126e85302b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e05a62cb769ebe4f413a9119d7729126e85302b/comments", "author": null, "committer": null, "parents": [{"sha": "32ccb0aca0b9af986d0f0a87f347eccde8bf1c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ccb0aca0b9af986d0f0a87f347eccde8bf1c48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ccb0aca0b9af986d0f0a87f347eccde8bf1c48"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "080b1e4466e82ef97f916afaf798d438d60b1ac6", "filename": "gcc/stmt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e05a62cb769ebe4f413a9119d7729126e85302b/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e05a62cb769ebe4f413a9119d7729126e85302b/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=4e05a62cb769ebe4f413a9119d7729126e85302b", "patch": "@@ -1416,7 +1416,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t the worst that happens if we get it wrong is we issue an error\n \t message.  */\n \n-      for (j = 0; j < TREE_STRING_LENGTH (TREE_PURPOSE (tail)) - 1; j++)\n+      for (j = 0; j < TREE_STRING_LENGTH (TREE_PURPOSE (tail)); j++)\n \tswitch (TREE_STRING_POINTER (TREE_PURPOSE (tail))[j])\n \t  {\n \t  case '+':\n@@ -1522,7 +1522,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \n       /* Make sure constraint has neither `=' nor `+'.  */\n \n-      for (j = 0; j < TREE_STRING_LENGTH (TREE_PURPOSE (tail)) - 1; j++)\n+      for (j = 0; j < TREE_STRING_LENGTH (TREE_PURPOSE (tail)); j++)\n \tswitch (TREE_STRING_POINTER (TREE_PURPOSE (tail))[j])\n \t  {\n \t  case '+':   case '=':\n@@ -3176,6 +3176,11 @@ expand_end_bindings (vars, mark_ends, dont_jump_in)\n \t}\n #endif\n \n+#ifdef HAVE_nonlocal_goto_receiver\n+      if (HAVE_nonlocal_goto_receiver)\n+\temit_insn (gen_nonlocal_goto_receiver ());\n+#endif\n+\n       /* The handler expects the desired label address in the static chain\n \t register.  It tests the address and does an appropriate jump\n \t to whatever label is desired.  */"}]}