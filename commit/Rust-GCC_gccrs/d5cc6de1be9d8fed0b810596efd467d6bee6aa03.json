{"sha": "d5cc6de1be9d8fed0b810596efd467d6bee6aa03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVjYzZkZTFiZTlkOGZlZDBiODEwNTk2ZWZkNDY3ZDZiZWU2YWEwMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-11-12T15:25:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-11-12T15:25:40Z"}, "message": "PR libstdc++/87963 fix build for 64-bit mingw\n\n\tPR libstdc++/87963\n\t* src/c++17/memory_resource.cc (chunk::_M_bytes): Change type from\n\tunsigned to uint32_t.\n\t(chunk): Fix static assertion for 64-bit targets that aren't LP64.\n\t(bigblock::all_ones): Fix undefined shift.\n\nFrom-SVN: r266032", "tree": {"sha": "8bf5fbfc56f0d4486bf4389f95bbfa09c95a05f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bf5fbfc56f0d4486bf4389f95bbfa09c95a05f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5cc6de1be9d8fed0b810596efd467d6bee6aa03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5cc6de1be9d8fed0b810596efd467d6bee6aa03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5cc6de1be9d8fed0b810596efd467d6bee6aa03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5cc6de1be9d8fed0b810596efd467d6bee6aa03/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae78a89f5210015ef21d107ad57d10bcb7ac852c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae78a89f5210015ef21d107ad57d10bcb7ac852c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae78a89f5210015ef21d107ad57d10bcb7ac852c"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "eafdd927e9cbaa35ad8aa19c0ef3bc34da533d83", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5cc6de1be9d8fed0b810596efd467d6bee6aa03/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5cc6de1be9d8fed0b810596efd467d6bee6aa03/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d5cc6de1be9d8fed0b810596efd467d6bee6aa03", "patch": "@@ -1,3 +1,11 @@\n+2018-11-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/87963\n+\t* src/c++17/memory_resource.cc (chunk::_M_bytes): Change type from\n+\tunsigned to uint32_t.\n+\t(chunk): Fix static assertion for 64-bit targets that aren't LP64.\n+\t(bigblock::all_ones): Fix undefined shift.\n+\n 2018-11-11  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR libstdc++-v3/54005"}, {"sha": "3595e255889c54445123d94dd9ffabff1151cf37", "filename": "libstdc++-v3/src/c++17/memory_resource.cc", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5cc6de1be9d8fed0b810596efd467d6bee6aa03/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5cc6de1be9d8fed0b810596efd467d6bee6aa03/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc?ref=d5cc6de1be9d8fed0b810596efd467d6bee6aa03", "patch": "@@ -421,7 +421,7 @@ namespace pmr\n     // The chunk has space for n blocks, followed by a bitset of size n\n     // that begins at address words.\n     // This object does not own p or words, the caller will free it.\n-    chunk(void* p, size_t bytes, void* words, size_t n)\n+    chunk(void* p, uint32_t bytes, void* words, size_t n)\n     : bitset(words, n),\n       _M_bytes(bytes),\n       _M_p(static_cast<std::byte*>(p))\n@@ -442,7 +442,7 @@ namespace pmr\n     }\n \n     // Allocated size of chunk:\n-    unsigned _M_bytes = 0;\n+    uint32_t _M_bytes = 0;\n     // Start of allocated chunk:\n     std::byte* _M_p = nullptr;\n \n@@ -508,12 +508,9 @@ namespace pmr\n     { return std::less<const void*>{}(p, c._M_p); }\n   };\n \n-#ifdef __LP64__\n-  // TODO pad up to 4*sizeof(void*) to avoid splitting across cache lines?\n-  static_assert(sizeof(chunk) == (3 * sizeof(void*)), \"\");\n-#else\n-  static_assert(sizeof(chunk) == (4 * sizeof(void*)), \"\");\n-#endif\n+  // For 64-bit this is 3*sizeof(void*) and for 32-bit it's 4*sizeof(void*).\n+  // TODO pad 64-bit to 4*sizeof(void*) to avoid splitting across cache lines?\n+  static_assert(sizeof(chunk) == 2 * sizeof(uint32_t) + 2 * sizeof(void*));\n \n   // An oversized allocation that doesn't fit in a pool.\n   struct big_block\n@@ -523,7 +520,7 @@ namespace pmr\n     static constexpr unsigned _S_sizebits\n       = numeric_limits<size_t>::digits - _S_alignbits;\n     // The maximum value that can be stored in _S_size\n-    static constexpr size_t all_ones = (1ul << _S_sizebits) - 1u;\n+    static constexpr size_t all_ones = (1ull << _S_sizebits) - 1u;\n     // The minimum size of a big block\n     static constexpr size_t min = 1u << _S_alignbits;\n "}]}