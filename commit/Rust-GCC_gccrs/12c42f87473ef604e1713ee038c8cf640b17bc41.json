{"sha": "12c42f87473ef604e1713ee038c8cf640b17bc41", "node_id": "C_kwDOANBUbNoAKDEyYzQyZjg3NDczZWY2MDRlMTcxM2VlMDM4YzhjZjY0MGIxN2JjNDE", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-01-29T15:44:24Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-01-30T16:42:24Z"}, "message": "RISC-V: Add vloxei8 C API intrinsic testcases\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vloxei8_v-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vloxei8_v_tumu-3.c: New test.", "tree": {"sha": "16009007fac8f3ce3bfd47f06e63a353f1a43e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16009007fac8f3ce3bfd47f06e63a353f1a43e2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12c42f87473ef604e1713ee038c8cf640b17bc41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c42f87473ef604e1713ee038c8cf640b17bc41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12c42f87473ef604e1713ee038c8cf640b17bc41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c42f87473ef604e1713ee038c8cf640b17bc41/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9da40aae23180fc9d240b762e4fea154df546570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da40aae23180fc9d240b762e4fea154df546570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da40aae23180fc9d240b762e4fea154df546570"}], "stats": {"total": 6228, "additions": 6228, "deletions": 0}, "files": [{"sha": "098475cfe20ba5b05edb13bf64beb60f228c02db", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v-1.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-1.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8(const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8(base,bindex,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4(const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4(base,bindex,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2(const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2(base,bindex,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1(const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1(base,bindex,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2(const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2(base,bindex,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4(const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4(base,bindex,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8(const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8(base,bindex,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4(const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4(base,bindex,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2(const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2(base,bindex,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1(const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1(base,bindex,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2(const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2(base,bindex,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4(const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4(base,bindex,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8(const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8(base,bindex,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2(const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2(base,bindex,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1(const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1(base,bindex,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2(const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2(base,bindex,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4(const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4(base,bindex,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8(const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8(base,bindex,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1(const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1(base,bindex,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2(const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2(base,bindex,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4(const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4(base,bindex,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8(const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8(base,bindex,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8(const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8(base,bindex,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4(const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4(base,bindex,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2(const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2(base,bindex,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1(const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1(base,bindex,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2(const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2(base,bindex,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4(const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4(base,bindex,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8(const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8(base,bindex,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4(const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4(base,bindex,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2(const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2(base,bindex,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1(const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1(base,bindex,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2(const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2(base,bindex,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4(const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4(base,bindex,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8(const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8(base,bindex,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2(const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2(base,bindex,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1(const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1(base,bindex,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2(const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2(base,bindex,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4(const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4(base,bindex,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8(const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8(base,bindex,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1(const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1(base,bindex,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2(const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2(base,bindex,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4(const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4(base,bindex,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8(const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8(base,bindex,vl);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2(const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2(base,bindex,vl);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1(const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1(base,bindex,vl);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2(const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2(base,bindex,vl);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4(const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4(base,bindex,vl);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8(const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8(base,bindex,vl);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1(const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1(base,bindex,vl);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2(const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2(base,bindex,vl);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4(const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4(base,bindex,vl);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8(const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8(base,bindex,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */"}, {"sha": "d236bad5fd48d51ed243b8f9576e6e9c616cb965", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v-2.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-2.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8(const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8(base,bindex,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4(const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4(base,bindex,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2(const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2(base,bindex,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1(const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1(base,bindex,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2(const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2(base,bindex,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4(const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4(base,bindex,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8(const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8(base,bindex,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4(const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4(base,bindex,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2(const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2(base,bindex,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1(const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1(base,bindex,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2(const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2(base,bindex,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4(const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4(base,bindex,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8(const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8(base,bindex,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2(const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2(base,bindex,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1(const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1(base,bindex,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2(const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2(base,bindex,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4(const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4(base,bindex,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8(const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8(base,bindex,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1(const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1(base,bindex,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2(const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2(base,bindex,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4(const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4(base,bindex,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8(const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8(base,bindex,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8(const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8(base,bindex,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4(const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4(base,bindex,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2(const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2(base,bindex,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1(const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1(base,bindex,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2(const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2(base,bindex,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4(const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4(base,bindex,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8(const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8(base,bindex,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4(const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4(base,bindex,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2(const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2(base,bindex,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1(const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1(base,bindex,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2(const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2(base,bindex,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4(const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4(base,bindex,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8(const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8(base,bindex,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2(const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2(base,bindex,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1(const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1(base,bindex,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2(const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2(base,bindex,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4(const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4(base,bindex,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8(const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8(base,bindex,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1(const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1(base,bindex,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2(const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2(base,bindex,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4(const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4(base,bindex,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8(const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8(base,bindex,31);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2(const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2(base,bindex,31);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1(const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1(base,bindex,31);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2(const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2(base,bindex,31);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4(const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4(base,bindex,31);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8(const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8(base,bindex,31);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1(const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1(base,bindex,31);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2(const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2(base,bindex,31);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4(const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4(base,bindex,31);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8(const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8(base,bindex,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */"}, {"sha": "678337fdcb61402b0b97f3ebb799a3e047a77c28", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v-3.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v-3.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8(const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8(base,bindex,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4(const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4(base,bindex,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2(const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2(base,bindex,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1(const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1(base,bindex,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2(const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2(base,bindex,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4(const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4(base,bindex,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8(const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8(base,bindex,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4(const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4(base,bindex,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2(const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2(base,bindex,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1(const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1(base,bindex,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2(const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2(base,bindex,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4(const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4(base,bindex,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8(const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8(base,bindex,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2(const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2(base,bindex,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1(const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1(base,bindex,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2(const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2(base,bindex,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4(const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4(base,bindex,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8(const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8(base,bindex,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1(const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1(base,bindex,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2(const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2(base,bindex,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4(const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4(base,bindex,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8(const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8(base,bindex,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8(const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8(base,bindex,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4(const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4(base,bindex,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2(const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2(base,bindex,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1(const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1(base,bindex,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2(const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2(base,bindex,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4(const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4(base,bindex,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8(const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8(base,bindex,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4(const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4(base,bindex,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2(const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2(base,bindex,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1(const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1(base,bindex,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2(const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2(base,bindex,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4(const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4(base,bindex,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8(const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8(base,bindex,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2(const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2(base,bindex,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1(const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1(base,bindex,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2(const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2(base,bindex,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4(const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4(base,bindex,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8(const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8(base,bindex,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1(const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1(base,bindex,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2(const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2(base,bindex,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4(const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4(base,bindex,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8(const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8(base,bindex,32);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2(const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2(base,bindex,32);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1(const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1(base,bindex,32);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2(const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2(base,bindex,32);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4(const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4(base,bindex,32);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8(const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8(base,bindex,32);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1(const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1(base,bindex,32);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2(const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2(base,bindex,32);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4(const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4(base,bindex,32);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8(const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8(base,bindex,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */"}, {"sha": "167a2817e8badfb9918846a371e16cce60a3fdc1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_m-1.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-1.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_m(vbool64_t mask,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_m(vbool32_t mask,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_m(vbool16_t mask,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_m(vbool8_t mask,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_m(vbool4_t mask,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_m(vbool2_t mask,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_m(vbool1_t mask,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_m(vbool64_t mask,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_m(vbool32_t mask,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_m(vbool16_t mask,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_m(vbool8_t mask,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_m(vbool4_t mask,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_m(vbool2_t mask,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_m(vbool64_t mask,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_m(vbool32_t mask,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_m(vbool16_t mask,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_m(vbool8_t mask,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_m(vbool4_t mask,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_m(vbool64_t mask,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_m(vbool32_t mask,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_m(vbool16_t mask,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_m(vbool8_t mask,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_m(vbool64_t mask,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_m(vbool32_t mask,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_m(vbool16_t mask,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_m(vbool8_t mask,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_m(vbool4_t mask,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_m(vbool2_t mask,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_m(vbool1_t mask,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_m(vbool64_t mask,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_m(vbool32_t mask,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_m(vbool16_t mask,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_m(vbool8_t mask,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_m(vbool4_t mask,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_m(vbool2_t mask,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_m(vbool64_t mask,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_m(vbool32_t mask,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_m(vbool16_t mask,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_m(vbool8_t mask,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_m(vbool4_t mask,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_m(vbool64_t mask,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_m(vbool32_t mask,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_m(vbool16_t mask,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_m(vbool8_t mask,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_m(vbool64_t mask,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_m(vbool32_t mask,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_m(vbool16_t mask,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_m(vbool8_t mask,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_m(vbool4_t mask,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_m(vbool64_t mask,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_m(vbool32_t mask,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_m(vbool16_t mask,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_m(mask,base,bindex,vl);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_m(vbool8_t mask,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_m(mask,base,bindex,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "c3ee8df44d7134c1148d6569f57baa86c6e6a152", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_m-2.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-2.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_m(vbool64_t mask,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_m(mask,base,bindex,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_m(vbool32_t mask,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_m(mask,base,bindex,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_m(vbool16_t mask,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_m(mask,base,bindex,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_m(vbool8_t mask,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_m(vbool4_t mask,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_m(vbool2_t mask,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_m(vbool1_t mask,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_m(vbool64_t mask,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_m(mask,base,bindex,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_m(vbool32_t mask,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_m(mask,base,bindex,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_m(vbool16_t mask,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_m(vbool8_t mask,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_m(vbool4_t mask,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_m(vbool2_t mask,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_m(vbool64_t mask,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_m(mask,base,bindex,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_m(vbool32_t mask,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_m(vbool16_t mask,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_m(vbool8_t mask,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_m(vbool4_t mask,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_m(vbool64_t mask,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_m(vbool32_t mask,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_m(vbool16_t mask,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_m(vbool8_t mask,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_m(vbool64_t mask,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_m(vbool32_t mask,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_m(vbool16_t mask,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_m(vbool8_t mask,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_m(vbool4_t mask,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_m(vbool2_t mask,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_m(vbool1_t mask,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_m(vbool64_t mask,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_m(vbool32_t mask,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_m(vbool16_t mask,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_m(vbool8_t mask,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_m(vbool4_t mask,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_m(vbool2_t mask,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_m(vbool64_t mask,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_m(vbool32_t mask,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_m(vbool16_t mask,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_m(vbool8_t mask,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_m(vbool4_t mask,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_m(vbool64_t mask,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_m(vbool32_t mask,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_m(vbool16_t mask,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_m(vbool8_t mask,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_m(vbool64_t mask,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_m(vbool32_t mask,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_m(vbool16_t mask,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_m(vbool8_t mask,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_m(vbool4_t mask,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_m(vbool64_t mask,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_m(vbool32_t mask,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_m(vbool16_t mask,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_m(mask,base,bindex,31);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_m(vbool8_t mask,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_m(mask,base,bindex,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "90ac6212d39296efa4f6770b94252f635be524ec", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_m-3.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_m-3.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_m(vbool64_t mask,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_m(mask,base,bindex,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_m(vbool32_t mask,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_m(mask,base,bindex,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_m(vbool16_t mask,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_m(mask,base,bindex,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_m(vbool8_t mask,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_m(vbool4_t mask,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_m(vbool2_t mask,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_m(vbool1_t mask,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_m(vbool64_t mask,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_m(mask,base,bindex,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_m(vbool32_t mask,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_m(mask,base,bindex,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_m(vbool16_t mask,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_m(vbool8_t mask,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_m(vbool4_t mask,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_m(vbool2_t mask,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_m(vbool64_t mask,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_m(mask,base,bindex,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_m(vbool32_t mask,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_m(vbool16_t mask,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_m(vbool8_t mask,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_m(vbool4_t mask,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_m(vbool64_t mask,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_m(vbool32_t mask,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_m(vbool16_t mask,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_m(vbool8_t mask,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_m(vbool64_t mask,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_m(vbool32_t mask,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_m(vbool16_t mask,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_m(vbool8_t mask,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_m(vbool4_t mask,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_m(vbool2_t mask,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_m(vbool1_t mask,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_m(vbool64_t mask,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_m(vbool32_t mask,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_m(vbool16_t mask,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_m(vbool8_t mask,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_m(vbool4_t mask,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_m(vbool2_t mask,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_m(vbool64_t mask,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_m(vbool32_t mask,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_m(vbool16_t mask,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_m(vbool8_t mask,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_m(vbool4_t mask,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_m(vbool64_t mask,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_m(vbool32_t mask,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_m(vbool16_t mask,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_m(vbool8_t mask,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_m(vbool64_t mask,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_m(vbool32_t mask,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_m(vbool16_t mask,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_m(vbool8_t mask,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_m(vbool4_t mask,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_m(vbool64_t mask,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_m(vbool32_t mask,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_m(vbool16_t mask,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_m(mask,base,bindex,32);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_m(vbool8_t mask,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_m(mask,base,bindex,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "8f3e2c2a3d4388372a51b902af21fa339f7c10a7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_mu-1.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-1.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_mu(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_mu(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_mu(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_mu(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_mu(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_mu(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_mu(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_mu(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_mu(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_mu(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_mu(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_mu(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_mu(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_mu(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_mu(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_mu(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_mu(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_mu(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_mu(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_mu(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_mu(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_mu(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_mu(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_mu(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_mu(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_mu(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_mu(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_mu(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_mu(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_mu(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_mu(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_mu(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_mu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "d94e7293d78bbea7c8e4d831e4c7f5f70bd0214a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_mu-2.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-2.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_mu(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_mu(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_mu(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_mu(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_mu(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_mu(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_mu(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_mu(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_mu(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_mu(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_mu(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_mu(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_mu(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_mu(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_mu(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_mu(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_mu(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_mu(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_mu(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_mu(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_mu(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_mu(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_mu(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_mu(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_mu(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_mu(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_mu(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_mu(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_mu(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_mu(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_mu(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_mu(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_mu(mask,merge,base,bindex,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "1b8696745d05fe2e1e3d23c66df8d96c4fb80c88", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_mu-3.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_mu-3.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_mu(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_mu(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_mu(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_mu(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_mu(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_mu(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_mu(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_mu(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_mu(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_mu(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_mu(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_mu(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_mu(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_mu(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_mu(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_mu(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_mu(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_mu(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_mu(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_mu(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_mu(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_mu(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_mu(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_mu(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_mu(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_mu(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_mu(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_mu(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_mu(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_mu(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_mu(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_mu(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_mu(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_mu(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_mu(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_mu(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_mu(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_mu(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_mu(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_mu(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_mu(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_mu(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_mu(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_mu(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_mu(mask,merge,base,bindex,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "9d9b5442605aa4cb71bb4051f1f6ec477c1c1919", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tu-1.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-1.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tu(vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tu(vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tu(vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tu(vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tu(vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tu(vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tu(vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tu(vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tu(vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tu(vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tu(vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tu(vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tu(vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tu(vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tu(vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tu(vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tu(vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tu(vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tu(vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tu(vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tu(vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tu(vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tu(vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tu(vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tu(vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tu(vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tu(vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tu(vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tu(vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tu(vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tu(vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tu(vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tu(vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tu(vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tu(vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tu(vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tu(vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tu(vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tu(vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tu(vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tu(vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tu(vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tu(vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tu(vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tu(vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tu(vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tu(vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tu(vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tu(vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tu(vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tu(vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tu(vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tu(merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tu(vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tu(merge,base,bindex,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */"}, {"sha": "820f26227743af3c88be67a478559198c7257d19", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tu-2.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-2.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tu(vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tu(vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tu(vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tu(vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tu(vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tu(vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tu(vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tu(vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tu(vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tu(vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tu(vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tu(vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tu(vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tu(vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tu(vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tu(vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tu(vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tu(vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tu(vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tu(vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tu(vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tu(vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tu(vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tu(vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tu(vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tu(vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tu(vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tu(vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tu(vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tu(vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tu(vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tu(vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tu(vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tu(vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tu(vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tu(vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tu(vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tu(vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tu(vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tu(vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tu(vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tu(vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tu(vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tu(vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tu(vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tu(vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tu(vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tu(vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tu(vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tu(vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tu(vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tu(vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tu(merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tu(vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tu(merge,base,bindex,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */"}, {"sha": "b47df5fb97a763df6054bca0bf24caf1a027d8ba", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tu-3.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tu-3.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tu(vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tu(vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tu(vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tu(vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tu(vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tu(vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tu(vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tu(vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tu(vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tu(vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tu(vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tu(vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tu(vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tu(vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tu(vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tu(vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tu(vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tu(vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tu(vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tu(vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tu(vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tu(vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tu(vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tu(vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tu(vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tu(vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tu(vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tu(vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tu(vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tu(vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tu(vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tu(vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tu(vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tu(vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tu(vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tu(vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tu(vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tu(vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tu(vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tu(vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tu(vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tu(vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tu(vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tu(vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tu(vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tu(vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tu(vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tu(vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tu(vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tu(vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tu(vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tu(vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tu(merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tu(vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tu(merge,base,bindex,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+} 3 } } */"}, {"sha": "72ddcce9339f8437d14921787e36b8a711eb57d4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tum-1.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-1.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tum(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tum(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tum(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tum(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tum(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tum(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tum(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tum(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tum(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tum(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tum(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tum(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tum(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tum(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tum(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tum(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tum(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tum(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tum(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tum(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tum(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tum(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tum(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tum(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tum(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tum(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tum(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tum(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tum(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tum(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tum(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tum(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tum(mask,merge,base,bindex,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "c744db476d27a04024c7717bd41128d47d982be7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tum-2.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-2.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tum(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tum(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tum(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tum(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tum(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tum(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tum(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tum(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tum(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tum(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tum(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tum(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tum(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tum(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tum(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tum(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tum(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tum(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tum(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tum(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tum(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tum(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tum(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tum(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tum(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tum(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tum(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tum(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tum(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tum(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tum(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tum(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tum(mask,merge,base,bindex,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "b4b97e901f11c4eddeaafc85e8d2c78e821354b0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tum-3.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tum-3.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tum(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tum(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tum(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tum(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tum(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tum(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tum(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tum(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tum(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tum(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tum(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tum(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tum(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tum(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tum(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tum(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tum(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tum(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tum(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tum(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tum(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tum(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tum(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tum(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tum(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tum(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tum(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tum(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tum(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tum(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tum(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tum(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tum(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tum(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tum(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tum(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tum(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tum(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tum(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tum(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tum(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tum(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tum(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tum(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tum(mask,merge,base,bindex,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "34affa65e4c46ba4bdf74b04f83529eb04fa9d03", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tumu-1.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-1.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tumu(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tumu(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tumu(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tumu(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tumu(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tumu(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tumu(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tumu(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tumu(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tumu(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tumu(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tumu(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tumu(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tumu(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tumu(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tumu(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tumu(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tumu(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tumu(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tumu(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tumu(mask,merge,base,bindex,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "5d636963da6e7509935cd6b31b2959cd14869b37", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tumu-2.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-2.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tumu(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tumu(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tumu(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tumu(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tumu(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tumu(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tumu(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tumu(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tumu(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tumu(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tumu(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tumu(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tumu(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tumu(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tumu(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tumu(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tumu(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tumu(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tumu(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tumu(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tumu(mask,merge,base,bindex,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}, {"sha": "ff4530b5d6ceac297fa7520e2689b59524e0fb50", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vloxei8_v_tumu-3.c", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12c42f87473ef604e1713ee038c8cf640b17bc41/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvloxei8_v_tumu-3.c?ref=12c42f87473ef604e1713ee038c8cf640b17bc41", "patch": "@@ -0,0 +1,346 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vloxei8_v_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,const int8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vloxei8_v_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,const int8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vloxei8_v_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,const int8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8mf2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vloxei8_v_i8m1_tumu(vbool8_t mask,vint8m1_t merge,const int8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vloxei8_v_i8m2_tumu(vbool4_t mask,vint8m2_t merge,const int8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vloxei8_v_i8m4_tumu(vbool2_t mask,vint8m4_t merge,const int8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vloxei8_v_i8m8_tumu(vbool1_t mask,vint8m8_t merge,const int8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i8m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vloxei8_v_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,const int16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vloxei8_v_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,const int16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16mf2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vloxei8_v_i16m1_tumu(vbool16_t mask,vint16m1_t merge,const int16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vloxei8_v_i16m2_tumu(vbool8_t mask,vint16m2_t merge,const int16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vloxei8_v_i16m4_tumu(vbool4_t mask,vint16m4_t merge,const int16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vloxei8_v_i16m8_tumu(vbool2_t mask,vint16m8_t merge,const int16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i16m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vloxei8_v_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,const int32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32mf2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vloxei8_v_i32m1_tumu(vbool32_t mask,vint32m1_t merge,const int32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vloxei8_v_i32m2_tumu(vbool16_t mask,vint32m2_t merge,const int32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vloxei8_v_i32m4_tumu(vbool8_t mask,vint32m4_t merge,const int32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vloxei8_v_i32m8_tumu(vbool4_t mask,vint32m8_t merge,const int32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i32m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vloxei8_v_i64m1_tumu(vbool64_t mask,vint64m1_t merge,const int64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vloxei8_v_i64m2_tumu(vbool32_t mask,vint64m2_t merge,const int64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vloxei8_v_i64m4_tumu(vbool16_t mask,vint64m4_t merge,const int64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vloxei8_v_i64m8_tumu(vbool8_t mask,vint64m8_t merge,const int64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_i64m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vloxei8_v_u8mf8_tumu(vbool64_t mask,vuint8mf8_t merge,const uint8_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vloxei8_v_u8mf4_tumu(vbool32_t mask,vuint8mf4_t merge,const uint8_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vloxei8_v_u8mf2_tumu(vbool16_t mask,vuint8mf2_t merge,const uint8_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8mf2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vloxei8_v_u8m1_tumu(vbool8_t mask,vuint8m1_t merge,const uint8_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vloxei8_v_u8m2_tumu(vbool4_t mask,vuint8m2_t merge,const uint8_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vloxei8_v_u8m4_tumu(vbool2_t mask,vuint8m4_t merge,const uint8_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vloxei8_v_u8m8_tumu(vbool1_t mask,vuint8m8_t merge,const uint8_t* base,vuint8m8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u8m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vloxei8_v_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,const uint16_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vloxei8_v_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,const uint16_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16mf2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vloxei8_v_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,const uint16_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vloxei8_v_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,const uint16_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vloxei8_v_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,const uint16_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vloxei8_v_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,const uint16_t* base,vuint8m4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u16m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vloxei8_v_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,const uint32_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32mf2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vloxei8_v_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,const uint32_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vloxei8_v_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,const uint32_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vloxei8_v_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,const uint32_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vloxei8_v_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,const uint32_t* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u32m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vloxei8_v_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,const uint64_t* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vloxei8_v_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,const uint64_t* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vloxei8_v_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,const uint64_t* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vloxei8_v_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,const uint64_t* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_u64m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32mf2_t test___riscv_vloxei8_v_f32mf2_tumu(vbool64_t mask,vfloat32mf2_t merge,const float* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32mf2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m1_t test___riscv_vloxei8_v_f32m1_tumu(vbool32_t mask,vfloat32m1_t merge,const float* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m2_t test___riscv_vloxei8_v_f32m2_tumu(vbool16_t mask,vfloat32m2_t merge,const float* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m4_t test___riscv_vloxei8_v_f32m4_tumu(vbool8_t mask,vfloat32m4_t merge,const float* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat32m8_t test___riscv_vloxei8_v_f32m8_tumu(vbool4_t mask,vfloat32m8_t merge,const float* base,vuint8m2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f32m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m1_t test___riscv_vloxei8_v_f64m1_tumu(vbool64_t mask,vfloat64m1_t merge,const double* base,vuint8mf8_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m1_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m2_t test___riscv_vloxei8_v_f64m2_tumu(vbool32_t mask,vfloat64m2_t merge,const double* base,vuint8mf4_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m2_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m4_t test___riscv_vloxei8_v_f64m4_tumu(vbool16_t mask,vfloat64m4_t merge,const double* base,vuint8mf2_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m4_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+vfloat64m8_t test___riscv_vloxei8_v_f64m8_tumu(vbool8_t mask,vfloat64m8_t merge,const double* base,vuint8m1_t bindex,size_t vl)\n+{\n+    return __riscv_vloxei8_v_f64m8_tumu(mask,merge,base,bindex,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vloxei8\\.v\\s+v[0-9]+,\\s*0?\\([a-x0-9]+\\),\\s*v[0-9]+,\\s*v0.t} 3 } } */"}]}