{"sha": "ef8614d733ee5496b834d5f483cc49907fdba2ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY4NjE0ZDczM2VlNTQ5NmI4MzRkNWY0ODNjYzQ5OTA3ZmRiYTJiYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-01-25T23:11:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-01-25T23:11:29Z"}, "message": "* g++.dg/opt/range-test-2.C: New test.\n\nFrom-SVN: r94235", "tree": {"sha": "e64e05539714be9ab7ccc161ba70315129a12e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e64e05539714be9ab7ccc161ba70315129a12e24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef8614d733ee5496b834d5f483cc49907fdba2ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8614d733ee5496b834d5f483cc49907fdba2ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef8614d733ee5496b834d5f483cc49907fdba2ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8614d733ee5496b834d5f483cc49907fdba2ba/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8e48b9803cfc1ea11dda0879c2e068c4dfbe61f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8e48b9803cfc1ea11dda0879c2e068c4dfbe61f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8e48b9803cfc1ea11dda0879c2e068c4dfbe61f"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "63f4aca8cc4444cb4bcc1d0dca23f2856839afa1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef8614d733ee5496b834d5f483cc49907fdba2ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef8614d733ee5496b834d5f483cc49907fdba2ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef8614d733ee5496b834d5f483cc49907fdba2ba", "patch": "@@ -1,5 +1,7 @@\n 2005-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* g++.dg/opt/range-test-2.C: New test.\n+\n \tPR rtl-optimization/19579\n \t* gcc.c-torture/execute/20050124-1.c: New test.\n "}, {"sha": "05690bfd07c80b9b098dcb1132fe916a801f71a7", "filename": "gcc/testsuite/g++.dg/opt/range-test-2.C", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef8614d733ee5496b834d5f483cc49907fdba2ba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Frange-test-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef8614d733ee5496b834d5f483cc49907fdba2ba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Frange-test-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Frange-test-2.C?ref=ef8614d733ee5496b834d5f483cc49907fdba2ba", "patch": "@@ -0,0 +1,96 @@\n+// Test fold-const.c (fold_range_test) optimizations.\n+// { dg-do run } */\n+// { dg-options \"-O2\" } */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <limits.h>\n+\n+#if (INT_MAX == 2147483647) && (INT_MIN == -2147483648) \\\n+    && (SCHAR_MIN == -128) && (SCHAR_MAX == 127) \\\n+    && (UCHAR_MIN == 0) && (UCHAR_MAX == 255)\n+\n+#ifndef T\n+\n+enum enum3\n+{\n+  enum3_zero,\n+  enum3_one,\n+  enum3_two,\n+  enum3_three,\n+  enum3_four,\n+  enum3_five,\n+  enum3_six,\n+  enum3_seven\n+};\n+\n+int var;\n+void\n+check ()\n+{\n+  ++var;\n+}\n+\n+#define T(IDX, TYPE, TEST, YESARR, NOARR)\t\t\t\t\\\n+void __attribute__((noinline))\t\t\t\t\t\t\\\n+test##IDX (TYPE x)\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (TEST)\t\t\t\t\t\t\t\t\\\n+    check ();\t\t\t\t\t\t\t\t\\\n+}\n+#include \"range-test-2.C\"\n+#undef T\n+\n+int\n+main ()\n+{\n+  int i, fails = 0;\n+\n+#define C ,\n+#define T(IDX, TYPE, TEST, YESARR, NOARR)\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    static TYPE yesarr##IDX [] = YESARR;\t\t\t\t\\\n+    static TYPE noarr##IDX [] = NOARR;\t\t\t\t\t\\\n+    for (i = 0; i < (int) (sizeof (yesarr##IDX) / sizeof (TYPE)); ++i)\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tvar = 0;\t\t\t\t\t\t\t\\\n+\ttest##IDX (yesarr##IDX [i]);\t\t\t\t\t\\\n+\tif (var != 1)\t\t\t\t\t\t\t\\\n+\t  printf (\"test\" #IDX \" failed for yesarr [%u]\\n\", i), ++fails;\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    var = 0;\t\t\t\t\t\t\t\t\\\n+    for (i = 0; i < (int) (sizeof (noarr##IDX) / sizeof (TYPE)); ++i)\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\ttest##IDX (noarr##IDX [i]);\t\t\t\t\t\\\n+\tif (var != 0)\t\t\t\t\t\t\t\\\n+\t  printf (\"test\" #IDX \" failed for noarr [%u]\\n\", i), ++fails;\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  }\n+#include \"range-test-2.C\"\n+#undef T\n+\n+  if (fails)\n+    abort ();\n+\n+  exit (0);\n+}\n+\n+#else\n+\n+/* Use `C' instead of `,' below to separate array entries.  */\n+\n+T(26, enum3, x == enum3_one || x == enum3_two || x == enum3_three,\n+  { enum3_one C enum3_two C enum3_three }, { enum3_zero C enum3_four\n+    C enum3_five C enum3_six C enum3_seven })\n+\n+#endif\n+\n+#else\n+\n+int\n+main (void)\n+{\n+  return 0;\n+}\n+\n+#endif"}]}