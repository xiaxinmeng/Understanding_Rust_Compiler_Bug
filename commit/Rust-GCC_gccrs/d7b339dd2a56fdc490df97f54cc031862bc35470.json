{"sha": "d7b339dd2a56fdc490df97f54cc031862bc35470", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiMzM5ZGQyYTU2ZmRjNDkwZGY5N2Y1NGNjMDMxODYyYmMzNTQ3MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-30T15:06:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-30T15:06:16Z"}, "message": "re PR tree-optimization/14847 ([tree-ssa] combine \"if (a & 1) goto there\" and \"if (a & 4) goto there\")\n\n2008-04-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/14847\n\t* tree-ssa-ifcombine.c (get_name_for_bit_test): New helper function.\n\t(recognize_bits_test): Use it.\n\t(recognize_single_bit_test): Likewise.\n\n\t* gcc.dg/tree-ssa/ssa-ifcombine-6.c: New testcase.\n\nFrom-SVN: r134825", "tree": {"sha": "dd5256063c954d6124c39527db2f7d903cd8c3ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd5256063c954d6124c39527db2f7d903cd8c3ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7b339dd2a56fdc490df97f54cc031862bc35470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b339dd2a56fdc490df97f54cc031862bc35470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b339dd2a56fdc490df97f54cc031862bc35470", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b339dd2a56fdc490df97f54cc031862bc35470/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56b1a55446a0646c53a2474be6051acf592e1da7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b1a55446a0646c53a2474be6051acf592e1da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b1a55446a0646c53a2474be6051acf592e1da7"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "dc1555bf219437c94191f973346936061621e00e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7b339dd2a56fdc490df97f54cc031862bc35470", "patch": "@@ -1,3 +1,10 @@\n+2008-04-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/14847\n+\t* tree-ssa-ifcombine.c (get_name_for_bit_test): New helper function.\n+\t(recognize_bits_test): Use it.\n+\t(recognize_single_bit_test): Likewise.\n+\n 2008-04-30  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_init_stage): Calls ipa_set_called_with_variable_arg"}, {"sha": "e16eaff42bd0523bfacf157b0043e5fe071d4dc9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7b339dd2a56fdc490df97f54cc031862bc35470", "patch": "@@ -1,3 +1,8 @@\n+2008-04-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/14847\n+\t* gcc.dg/tree-ssa/ssa-ifcombine-6.c: New testcase.\n+\n 2008-04-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/35986"}, {"sha": "90abc8debc9ee6d5ac2f73e597e6a52baba175f7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ifcombine-6.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ifcombine-6.c?ref=d7b339dd2a56fdc490df97f54cc031862bc35470", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-ifcombine\" } */\n+\n+void bar (void);\n+\n+void\n+foo1 (unsigned int a)\n+{\n+  if (a & 1)\n+    goto heaven;\n+  if (a & 4)\n+    goto heaven;\n+  return;\n+\n+ heaven:\n+  bar ();\n+}\n+\n+void\n+foo2 (unsigned int a)\n+{\n+  if (a & 1)\n+    if (a & 4)\n+      goto heaven;\n+  return;\n+\n+ heaven:\n+  bar ();\n+}\n+\n+\n+/* The special treatment of a & 1 != 0 in fold caused the pattern not\n+   to be recognized due to extra conversions inserted.  */\n+\n+/* { dg-final { scan-tree-dump \"optimizing bits or bits test\" \"ifcombine\" } } */\n+/* { dg-final { scan-tree-dump \"optimizing double bit test\" \"ifcombine\" } } */\n+/* { dg-final { cleanup-tree-dump \"ifcombine\" } } */"}, {"sha": "3a28fadd7920fecff6fecac68d30dacd28d96b6a", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b339dd2a56fdc490df97f54cc031862bc35470/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=d7b339dd2a56fdc490df97f54cc031862bc35470", "patch": "@@ -135,6 +135,32 @@ same_phi_args_p (basic_block bb1, basic_block bb2, basic_block dest)\n   return true;\n }\n \n+/* Return the best representative SSA name for CANDIDATE which is used\n+   in a bit test.  */\n+\n+static tree\n+get_name_for_bit_test (tree candidate)\n+{\n+  /* Skip single-use names in favor of using the name from a\n+     non-widening conversion definition.  */\n+  if (TREE_CODE (candidate) == SSA_NAME\n+      && has_single_use (candidate))\n+    {\n+      tree def_stmt = SSA_NAME_DEF_STMT (candidate);\n+      if (TREE_CODE (def_stmt) == GIMPLE_MODIFY_STMT\n+\t  && (TREE_CODE (GIMPLE_STMT_OPERAND (def_stmt, 1)) == NOP_EXPR\n+\t      || TREE_CODE (GIMPLE_STMT_OPERAND (def_stmt, 1)) == CONVERT_EXPR))\n+\t{\n+\t  tree rhs = GIMPLE_STMT_OPERAND (def_stmt, 1);\n+\t  if (TYPE_PRECISION (TREE_TYPE (rhs))\n+\t      <= TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (rhs, 0))))\n+\t    return TREE_OPERAND (rhs, 0);\n+\t}\n+    }\n+\n+  return candidate;\n+}\n+\n /* Recognize a single bit test pattern in COND_EXPR and its defining\n    statements.  Store the name being tested in *NAME and the bit\n    in *BIT.  The COND_EXPR computes *NAME & (1 << *BIT).\n@@ -192,7 +218,7 @@ recognize_single_bit_test (tree cond_expr, tree *name, tree *bit)\n \t{\n \t  /* t & 1 */\n \t  *bit = integer_zero_node;\n-\t  *name = orig_name;\n+\t  *name = get_name_for_bit_test (orig_name);\n \t}\n \n       return true;\n@@ -272,7 +298,7 @@ recognize_bits_test (tree cond_expr, tree *name, tree *bits)\n   if (TREE_CODE (t) != BIT_AND_EXPR)\n     return false;\n \n-  *name = TREE_OPERAND (t, 0);\n+  *name = get_name_for_bit_test (TREE_OPERAND (t, 0));\n   *bits = TREE_OPERAND (t, 1);\n \n   return true;"}]}