{"sha": "3a9d5f263933156f289c3bc1f3490f14a1151184", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E5ZDVmMjYzOTMzMTU2ZjI4OWMzYmMxZjM0OTBmMTRhMTE1MTE4NA==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2005-07-21T03:56:46Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2005-07-21T03:56:46Z"}, "message": "re PR c++/2922 ([DR 197] two-stage lookup for unqualified function calls with type-dependent arguments)\n\n2005-07-20  Douglas Gregor <doug.gregor@gmail.com>\n\n\tPR c++/2922\n\t* g++.dg/lookup/two-stage2.C: New.\n\t* g++.dg/lookup/two-stage3.C: New.\n\t* g++.dg/lookup/two-stage4.C: New. Illustrates how we have not yet\n\tfixed two-stage name lookup for operators.\n\t* g++.dg/template/call3.C: Compiler now produces an appropriate\n\terror message.\n\t* g++.dg/template/crash37.C: Compiler now describes bla() on line\n\t14 as a candidate.\n\t* g++.dg/template/ptrmem4.C: Compiler produces different error\n\tmessage.\n\t* g++.old-deja/g++.other/pmf3.C: Compiler now describes\n\tconnect_to_method as a candidate.\n\nFrom-SVN: r102217", "tree": {"sha": "1babb06d952f69f9985e26582cc5d4f204969601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1babb06d952f69f9985e26582cc5d4f204969601"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a9d5f263933156f289c3bc1f3490f14a1151184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9d5f263933156f289c3bc1f3490f14a1151184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9d5f263933156f289c3bc1f3490f14a1151184", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9d5f263933156f289c3bc1f3490f14a1151184/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20ac1e0392c91bf7c5ba645b58622a7641675a8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20ac1e0392c91bf7c5ba645b58622a7641675a8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20ac1e0392c91bf7c5ba645b58622a7641675a8d"}], "stats": {"total": 91, "additions": 84, "deletions": 7}, "files": [{"sha": "f701137d2fdbf6efd20054a0d472fb8556fcee0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -1,3 +1,19 @@\n+2005-07-20  Douglas Gregor <doug.gregor@gmail.com>\n+\n+\tPR c++/2922\n+\t* g++.dg/lookup/two-stage2.C: New.\n+\t* g++.dg/lookup/two-stage3.C: New.\n+\t* g++.dg/lookup/two-stage4.C: New. Illustrates how we have not yet\n+\tfixed two-stage name lookup for operators.\n+\t* g++.dg/template/call3.C: Compiler now produces an appropriate\n+\terror message. \n+\t* g++.dg/template/crash37.C: Compiler now describes bla() on line\n+\t14 as a candidate. \n+\t* g++.dg/template/ptrmem4.C: Compiler produces different error\n+\tmessage.\n+\t* g++.old-deja/g++.other/pmf3.C: Compiler now describes\n+\tconnect_to_method as a candidate.\n+\t\n 2005-07-20  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* gcc.dg/fold-alloc-1.c: New test."}, {"sha": "e758fc8f88975354a1bfa67d653a1113cd0bee79", "filename": "gcc/testsuite/g++.dg/lookup/two-stage2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage2.C?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+// PR c++/2922\n+\n+char& f(char);\n+\n+template<class T>\n+void g(T t)\n+{\n+  char& c1 = f(1);        // not dependent\n+  char& c2 = f(t);        // dependent\n+}\n+\n+int&f (int);\n+\n+int main()\n+{\n+  g(2);    // f(char) followed by f(int)\n+  g('a');  // two f(char)\n+}"}, {"sha": "fff853c1ba0fa783607486887916b92d89304073", "filename": "gcc/testsuite/g++.dg/lookup/two-stage3.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage3.C?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+// PR c++/2922\n+\n+namespace tpl_ {\n+\n+template<class T>\n+char test(T);\n+\n+template<class T>\n+struct check\n+{\n+    static T const t;\n+    enum { value = 1 == sizeof(test(t)) };\n+};\n+\n+double test(int);\n+\n+}\n+\n+bool const two_phase_lookup_supported = tpl_::check<int>::value;\n+\n+int compile_time_assert[two_phase_lookup_supported ? 1 : -1];"}, {"sha": "bbb44afa0d0faf9c89460d1fa075f7d325bf7ed3", "filename": "gcc/testsuite/g++.dg/lookup/two-stage4.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ftwo-stage4.C?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -0,0 +1,20 @@\n+\n+// Contributed by Douglas Gregor <doug.gregor@gmail.com>\n+\n+template<class T> struct wrap {};\n+\n+template<typename T> bool& operator==(wrap<T>, wrap<T>);\n+\n+template<typename T>\n+void g(T, wrap<wrap<int> > x)\n+{\n+  bool& b = x == x; // { dg-bogus \"invalid initialization of reference\" \"\" { xfail *-*-*} }\n+}\n+\n+template<typename T> int& operator==(wrap<wrap<T> >, wrap<wrap<T> >);\n+\n+void h()\n+{\n+  wrap<wrap<int> > x;\n+  g(17, x);\n+}"}, {"sha": "bbb6c7b3a2bdc4e7d04dae1759f6006943415c5f", "filename": "gcc/testsuite/g++.dg/template/call3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcall3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcall3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcall3.C?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -9,7 +9,7 @@ struct A\n \n template <typename T> struct B : T\n {\n-  B() { foo(T()); }\n+  B() { foo(T()); } // { dg-error \"cannot convert\" }\n };\n \n B<A> b;"}, {"sha": "0d837bd132d35e193d7367353792815405532dbe", "filename": "gcc/testsuite/g++.dg/template/crash37.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -11,7 +11,7 @@ struct coperator_stack\n struct helper {};\n \n template<class F>\n-void bla(F f)\n+void bla(F f) // { dg-error \"candidates\" }\n {\n }\n \n@@ -20,7 +20,7 @@ struct definition\n {\n  definition()\n  {\n-   bla(coperator_stack::push3<helper>); // { dg-error \"\" } \n+   bla(coperator_stack::push3<helper>); // { dg-error \"\" }\n  }\n };\n "}, {"sha": "db80eecf830f8ecbc54b8e7739adb02c7c54ab26", "filename": "gcc/testsuite/g++.dg/template/ptrmem4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -6,7 +6,7 @@\n // Pointer to member function template argument deduction ICE.\n \n \n-template <class CONT> void queryAliases(CONT& fill_me); // { dg-error \"argument\" }\n+template <class CONT> void queryAliases(CONT& fill_me); // { dg-error \"candidates\" }\n \n struct SpyExample\n {\n@@ -16,5 +16,5 @@ struct SpyExample\n \n void SpyExample::ready()\n {\n-  queryAliases(inputs);\t// { dg-error \"\" }\n+  queryAliases(inputs); // { dg-error \"\" }\n }"}, {"sha": "e5f757d07af4060eb022a57df32c5bb924994550", "filename": "gcc/testsuite/g++.old-deja/g++.other/pmf3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9d5f263933156f289c3bc1f3490f14a1151184/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C?ref=3a9d5f263933156f289c3bc1f3490f14a1151184", "patch": "@@ -5,11 +5,11 @@\n template<class T>\n   void connect_to_method(\n     T *receiver,\n-    void (T::*method)())\n+    void (T::*method)()) // { dg-error \"candidates are\" }\n   {}\n \n class Gtk_Base\n-{ \n+{\n public:\n   void expose();\n   void show();"}]}