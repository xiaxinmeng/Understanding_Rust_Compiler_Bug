{"sha": "ac59a959363d95d4bcb62231d545319166471fc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1OWE5NTkzNjNkOTVkNGJjYjYyMjMxZDU0NTMxOTE2NjQ3MWZjMw==", "commit": {"author": {"name": "Dorit Naishlos", "email": "dorit@il.ibm.com", "date": "2005-02-20T13:47:28Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2005-02-20T13:47:28Z"}, "message": "re PR tree-optimization/19951 (ICE in tree_split_edge, at tree-cfg.c:3199 with -ftree-vectorize)\n\n        PR tree-optimization/19951\n        * tree-vect-analyze.c (vect_analyze_loop_form): Check if loop exit edge\n        is abnormal.\n\nFrom-SVN: r95301", "tree": {"sha": "5d56727878f3d5d78be2d2dd2101cd88470f6ee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d56727878f3d5d78be2d2dd2101cd88470f6ee4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac59a959363d95d4bcb62231d545319166471fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac59a959363d95d4bcb62231d545319166471fc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac59a959363d95d4bcb62231d545319166471fc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac59a959363d95d4bcb62231d545319166471fc3/comments", "author": null, "committer": null, "parents": [{"sha": "b7d3bbceb7a20116efa905f2e82bcaea2f57031f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d3bbceb7a20116efa905f2e82bcaea2f57031f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d3bbceb7a20116efa905f2e82bcaea2f57031f"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "4a059c971085b32e2e6212d14e136b5b61a87998", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac59a959363d95d4bcb62231d545319166471fc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac59a959363d95d4bcb62231d545319166471fc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac59a959363d95d4bcb62231d545319166471fc3", "patch": "@@ -1,3 +1,9 @@\n+2005-02-20  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/19951\n+\t* tree-vect-analyze.c (vect_analyze_loop_form): Check if loop exit edge\n+\tis abnormal.\n+\t\n 2005-02-19  Steven Bosscher  <stevenb@suse.de>\n \n \tPR middle-end/19698 "}, {"sha": "fd26c90687e992b7bc61b280453b4059b92adb76", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac59a959363d95d4bcb62231d545319166471fc3/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac59a959363d95d4bcb62231d545319166471fc3/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=ac59a959363d95d4bcb62231d545319166471fc3", "patch": "@@ -2312,17 +2312,32 @@ vect_analyze_loop_form (struct loop *loop)\n     }\n \n   /* Make sure we have a preheader basic block.  */\n-  if (!loop->pre_header)\n+  if (!loop->pre_header || EDGE_COUNT (loop->pre_header->succs) != 1)\n     {\n+      edge e = loop_preheader_edge (loop);\n+      loop_split_edge_with (e, NULL);\n+      if (vect_print_dump_info (REPORT_DETAILS, loop_loc))\n+\tfprintf (vect_dump, \"split preheader edge.\");\n       rescan = true;\n-      loop_split_edge_with (loop_preheader_edge (loop), NULL);\n     }\n     \n   /* Make sure there exists a single-predecessor exit bb:  */\n-  if (EDGE_COUNT (loop->exit_edges[0]->dest->preds) != 1)\n+  if (EDGE_COUNT (loop->single_exit->dest->preds) != 1)\n     {\n-      rescan = true;\n-      loop_split_edge_with (loop->exit_edges[0], NULL);\n+      edge e = loop->single_exit;\n+      if (!(e->flags & EDGE_ABNORMAL))\n+\t{\n+\t  loop_split_edge_with (e, NULL);\n+\t  if (vect_print_dump_info (REPORT_DETAILS, loop_loc))\n+\t    fprintf (vect_dump, \"split exit edge.\");\n+\t  rescan = true;\n+\t}\n+      else\n+\t{\n+\t  if (vect_print_dump_info (REPORT_BAD_FORM_LOOPS, loop_loc))\n+\t    fprintf (vect_dump, \"not vectorized: abnormal loop exit edge.\");\n+\t  return NULL;\n+\t}\n     }\n     \n   if (rescan)"}]}