{"sha": "0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4NzY2YjhhZjBlYjdjMmVhMDYzZDU0NDJmMmI3M2ZjNmViYjUwNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-15T19:43:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-15T19:43:51Z"}, "message": "decl.c (grokfndecl): ::main and __builtin_* get C linkage.\n\n\t* decl.c (grokfndecl): ::main and __builtin_* get C linkage.\n\tDo mangling here.\n\t(grokdeclarator): Instead of here.\n\t* friend.c (do_friend): Lose special handling of ::main and\n\t__builtin_*.\n\t* cp-tree.h (DECL_MAIN_P): Check for C linkage.\n\t* spew.c (yylex): Clear looking_for_typename if we got\n\t'enum { ... };'.\n\nFrom-SVN: r23117", "tree": {"sha": "ff389523064167bec47d1d00530d97b280e24d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff389523064167bec47d1d00530d97b280e24d9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/comments", "author": null, "committer": null, "parents": [{"sha": "d46965b9674d7006bbe525cea86da936cfc2e3c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d46965b9674d7006bbe525cea86da936cfc2e3c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d46965b9674d7006bbe525cea86da936cfc2e3c1"}], "stats": {"total": 71, "additions": 38, "deletions": 33}, "files": [{"sha": "0958c3b7ca0d70a146d30c5348893aacffac7f71", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "patch": "@@ -1,3 +1,15 @@\n+1998-10-15  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (grokfndecl): ::main and __builtin_* get C linkage.\n+\tDo mangling here.\n+\t(grokdeclarator): Instead of here.\n+\t* friend.c (do_friend): Lose special handling of ::main and\n+\t__builtin_*.\n+\t* cp-tree.h (DECL_MAIN_P): Check for C linkage.\n+\n+\t* spew.c (yylex): Clear looking_for_typename if we got\n+\t'enum { ... };'.\n+\n 1998-10-15  Mark Mitchell  <mark@markmitchell.com>\n \n \t* class.c (maybe_warn_about_overly_private_class): Improve error"}, {"sha": "76ba93ede9146970cf088e6114c482cd50c06d63", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "patch": "@@ -2203,7 +2203,7 @@ extern int current_function_parms_stored;\n    `main'.  */\n #define DECL_MAIN_P(NODE)\t\t\t\t\\\n    (TREE_CODE (NODE) == FUNCTION_DECL\t\t\t\\\n-    && DECL_CONTEXT (NODE) == NULL_TREE \t\t\\\n+    && DECL_LANGUAGE (NODE) == lang_c\t \t\t\\\n     && DECL_NAME (NODE) != NULL_TREE\t\t\t\\\n     && MAIN_NAME_P (DECL_NAME (NODE)))\n "}, {"sha": "29605a73b7306fa35766fe126d6284cbdacf5ade", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "patch": "@@ -8016,6 +8016,19 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n   if (in_namespace)\n     set_decl_namespace (decl, in_namespace);\n \n+  /* `main' and builtins have implicit 'C' linkage.  */\n+  if ((MAIN_NAME_P (declarator)\n+       || (IDENTIFIER_LENGTH (declarator) > 10\n+\t   && IDENTIFIER_POINTER (declarator)[0] == '_'\n+\t   && IDENTIFIER_POINTER (declarator)[1] == '_'\n+\t   && strncmp (IDENTIFIER_POINTER (declarator)+2, \"builtin_\", 8) == 0))\n+      && current_lang_name == lang_name_cplusplus\n+      /* context == 0 could mean global scope or not set yet; either is fine\n+\t for us here, as we check current_namespace.  */\n+      && DECL_CONTEXT (decl) == NULL_TREE\n+      && current_namespace == global_namespace)\n+    DECL_LANGUAGE (decl) = lang_c;\n+\n   /* Should probably propagate const out from type to decl I bet (mrs).  */\n   if (staticp)\n     {\n@@ -8026,7 +8039,7 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n   if (ctype)\n     DECL_CLASS_CONTEXT (decl) = ctype;\n \n-  if (ctype == NULL_TREE && MAIN_NAME_P (declarator))\n+  if (ctype == NULL_TREE && DECL_MAIN_P (decl))\n     {\n       if (inlinep)\n \terror (\"cannot declare `main' to be inline\");\n@@ -8123,6 +8136,12 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n \t}\n     }\n \n+  /* Plain overloading: will not be grok'd by grokclassfn.  */\n+  if (! ctype && ! processing_template_decl\n+      && DECL_LANGUAGE (decl) != lang_c\n+      && (! DECL_USE_TEMPLATE (decl) || name_mangling_version < 1))\n+    set_mangled_name_for_decl (decl);\n+\n   /* Caller will do the rest of this.  */\n   if (check < 0)\n     return decl;\n@@ -10625,18 +10644,6 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\terror (\"virtual non-class function `%s'\", name);\n \t\tvirtualp = 0;\n \t      }\n-\n-\t    if (current_lang_name == lang_name_cplusplus\n-\t\t&& ! processing_template_decl\n-\t\t&& ! MAIN_NAME_P (original_name)\n-\t\t&& ! (IDENTIFIER_LENGTH (original_name) > 10\n-\t\t      && IDENTIFIER_POINTER (original_name)[0] == '_'\n-\t\t      && IDENTIFIER_POINTER (original_name)[1] == '_'\n-\t\t      && strncmp (IDENTIFIER_POINTER (original_name)+2, \"builtin_\", 8) == 0))\n-\t      /* Plain overloading: will not be grok'd by grokclassfn.  */\n-\t      if (name_mangling_version < 1 \n-\t\t  || TREE_CODE (declarator) != TEMPLATE_ID_EXPR)\n-\t\tdeclarator = build_decl_overload (dname, TYPE_ARG_TYPES (type), 0);\n \t  }\n \telse if (TREE_CODE (type) == FUNCTION_TYPE && staticp < 2)\n \t  type = build_cplus_method_type (ctype, TREE_TYPE (type),\n@@ -10660,11 +10667,6 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \tif (decl == error_mark_node)\n \t  return error_mark_node;\n \n-\tif (ctype == NULL_TREE && DECL_LANGUAGE (decl) != lang_c\n-\t    && (! DECL_USE_TEMPLATE (decl) ||\n-\t\tname_mangling_version < 1)) \n-\t  DECL_ASSEMBLER_NAME (decl) = declarator;\n-\t\n \tif (staticp == 1)\n \t  {\n \t    int illegal_static = 0;"}, {"sha": "a3d198a422b4236f40e8f80d897541f060f5ad57", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "patch": "@@ -405,20 +405,6 @@ do_friend (ctype, declarator, decl, parmdecls, flags, quals, funcdef_flag)\n \t  decl = void_type_node;\n \t}\n     }\n-  else if (TREE_CODE (decl) == FUNCTION_DECL\n-\t   && (MAIN_NAME_P (declarator)\n-\t       || (IDENTIFIER_LENGTH (declarator) > 10\n-\t\t   && IDENTIFIER_POINTER (declarator)[0] == '_'\n-\t\t   && IDENTIFIER_POINTER (declarator)[1] == '_'\n-\t\t   && strncmp (IDENTIFIER_POINTER (declarator)+2,\n-\t\t\t       \"builtin_\", 8) == 0)))\n-    {\n-      /* raw \"main\", and builtin functions never gets overloaded,\n-\t but they can become friends.  */\n-      add_friend (current_class_type, decl);\n-      DECL_FRIEND_P (decl) = 1;\n-      decl = void_type_node;\n-    }\n   /* A global friend.\n      @@ or possibly a friend from a base class ?!?  */\n   else if (TREE_CODE (decl) == FUNCTION_DECL)"}, {"sha": "b524cb13d8a1ba264ad67624fac894ab7a397e18", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=0f8766b8af0eb7c2ea063d5442f2b73fc6ebb506", "patch": "@@ -401,6 +401,11 @@ yylex ()\n   if (tmp_token.yychar != '~')\n     got_object = NULL_TREE;\n \n+  /* Clear looking_for_typename if we got 'enum { ... };'.  */\n+  if (tmp_token.yychar == '{' || tmp_token.yychar == ':'\n+      || tmp_token.yychar == ';')\n+    looking_for_typename = 0;\n+\n   yylval = tmp_token.yylval;\n   yychar = tmp_token.yychar;\n   end_of_file = tmp_token.end_of_file;"}]}