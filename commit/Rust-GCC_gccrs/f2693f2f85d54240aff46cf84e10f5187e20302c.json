{"sha": "f2693f2f85d54240aff46cf84e10f5187e20302c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI2OTNmMmY4NWQ1NDI0MGFmZjQ2Y2Y4NGUxMGY1MTg3ZTIwMzAyYw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@cygnus.com", "date": "1999-01-28T16:40:56Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-01-28T16:40:56Z"}, "message": "check-init.c (check_bool2_init, [...]): Handle TRUTH_AND_EXPR, TRUTH_OR_EXPR, and TRUTH_XOR_EXPR.\n\n\ufffd\n\t* check-init.c (check_bool2_init, check_bool_init, check_init):\n\tHandle TRUTH_AND_EXPR, TRUTH_OR_EXPR, and TRUTH_XOR_EXPR.\n\t* jcf-write.c (generate_bytecode_insns):  Likewise.\n\nFrom-SVN: r24900", "tree": {"sha": "1663c1bc1a14923b658bc075038a4c5fa280f5de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1663c1bc1a14923b658bc075038a4c5fa280f5de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2693f2f85d54240aff46cf84e10f5187e20302c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2693f2f85d54240aff46cf84e10f5187e20302c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2693f2f85d54240aff46cf84e10f5187e20302c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2693f2f85d54240aff46cf84e10f5187e20302c/comments", "author": null, "committer": null, "parents": [{"sha": "81f4eddded16e3cab942e9aae0ba88432256cb0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f4eddded16e3cab942e9aae0ba88432256cb0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f4eddded16e3cab942e9aae0ba88432256cb0b"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "c969046a07e78f086806f7c3adc3fde5120888de", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2693f2f85d54240aff46cf84e10f5187e20302c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2693f2f85d54240aff46cf84e10f5187e20302c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f2693f2f85d54240aff46cf84e10f5187e20302c", "patch": "@@ -1,3 +1,9 @@\n+Thu Jan 28 14:45:39 1999  Per Bothner  <bothner@cygnus.com>\n+\n+\t* check-init.c (check_bool2_init, check_bool_init, check_init):\n+\tHandle TRUTH_AND_EXPR, TRUTH_OR_EXPR, and TRUTH_XOR_EXPR.\n+\t* jcf-write.c (generate_bytecode_insns):  Likewise.\n+\n Mon Jan 25 17:39:19 1999  Andrew Haley  <aph@cygnus.com>\n \n         * except.c, java-except.h (expand_resume_after_catch): new"}, {"sha": "5cc6ec8620a0eaa1b991e5e71c6edbf4a7c4b32a", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2693f2f85d54240aff46cf84e10f5187e20302c/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2693f2f85d54240aff46cf84e10f5187e20302c/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=f2693f2f85d54240aff46cf84e10f5187e20302c", "patch": "@@ -188,13 +188,13 @@ check_bool2_init (code, exp0, exp1, before, when_false, when_true)\n       INTERSECT (before, when_false_0, when_false_1);\n       UNION (when_false, when_false, before);\n     }\n-  else if (code == BIT_AND_EXPR)\n+  else if (code == BIT_AND_EXPR || code == TRUTH_AND_EXPR)\n     {\n       UNION (when_true, when_true_0, when_true_1);\n       INTERSECT (when_false, when_false_0, when_false_1);\n       UNION (when_false, when_false, before);\n     }\n-  else /* if (code == BIT_IOR_EXPR) */\n+  else /* if (code == BIT_IOR_EXPR || code == TRUTH_OR_EXPR) */\n     {\n       UNION (when_false, when_false_0, when_false_1);\n       INTERSECT (when_true, when_true_0, when_true_1);\n@@ -263,12 +263,15 @@ check_bool_init (exp, before, when_false, when_true)\n \n     case BIT_AND_EXPR:\n     case BIT_IOR_EXPR:\n+    case TRUTH_AND_EXPR:\n+    case TRUTH_OR_EXPR:\n     case EQ_EXPR:\n       check_bool2_init (TREE_CODE (exp),\n \t\t\tTREE_OPERAND (exp, 0), TREE_OPERAND (exp, 1),\n \t\t\tbefore, when_false, when_true);\n       return;\n \n+    case TRUTH_XOR_EXPR:\n     case BIT_XOR_EXPR:\n     case NE_EXPR:\n       /* Just like EQ_EXPR, but switch when_true and when_false. */\n@@ -592,6 +595,9 @@ check_init (exp, before)\n       break;\n     case UNARY_PLUS_EXPR:\n     case NEGATE_EXPR:\n+    case TRUTH_AND_EXPR:\n+    case TRUTH_OR_EXPR:\n+    case TRUTH_XOR_EXPR:\n     case TRUTH_NOT_EXPR:\n     case BIT_NOT_EXPR:\n     case CONVERT_EXPR:"}]}