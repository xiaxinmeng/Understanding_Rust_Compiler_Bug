{"sha": "f525d7a75ffa9e02d094828e91b2c8af49272e61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUyNWQ3YTc1ZmZhOWUwMmQwOTQ4MjhlOTFiMmM4YWY0OTI3MmU2MQ==", "commit": {"author": {"name": "Andrew Overholt", "email": "overholt@redhat.com", "date": "2005-05-03T22:38:17Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-05-03T22:38:17Z"}, "message": "re PR libgcj/21372 (FileChannel.tryLock() return value incorrect)\n\n2005-05-03  Andrew Overholt  <overholt@redhat.com>\n\n\tPR libgcj/21372:\n\t* gnu/java/nio/channels/FileChannelImpl.java: Return null if lock\n\tcould not be acquired.\n\t* java/nio/channels/FileLock.java (toString): Re-implement to be\n\tin line with other implementations.\n\nFrom-SVN: r99188", "tree": {"sha": "d6cc1093a809e003aab0e160015f13e1f04bca5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6cc1093a809e003aab0e160015f13e1f04bca5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f525d7a75ffa9e02d094828e91b2c8af49272e61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f525d7a75ffa9e02d094828e91b2c8af49272e61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f525d7a75ffa9e02d094828e91b2c8af49272e61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f525d7a75ffa9e02d094828e91b2c8af49272e61/comments", "author": null, "committer": null, "parents": [{"sha": "8148fe656d06e12c5d34e8fa56e23ee7eb9d5841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8148fe656d06e12c5d34e8fa56e23ee7eb9d5841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8148fe656d06e12c5d34e8fa56e23ee7eb9d5841"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "17a07fddfdde4e12d68b5e85308df0c702c51c11", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f525d7a75ffa9e02d094828e91b2c8af49272e61/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f525d7a75ffa9e02d094828e91b2c8af49272e61/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f525d7a75ffa9e02d094828e91b2c8af49272e61", "patch": "@@ -1,3 +1,11 @@\n+2005-05-03  Andrew Overholt  <overholt@redhat.com>\n+\n+\tPR libgcj/21372:\n+\t* gnu/java/nio/channels/FileChannelImpl.java: Return null if lock\n+\tcould not be acquired.\n+\t* java/nio/channels/FileLock.java (toString): Re-implement to be\n+\tin line with other implementations.\n+\n 2005-05-03  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/VMSecurityManager.java (currentClassLoader): Use"}, {"sha": "6893d817744c8c5153e4b5e45c2cf1268b49ca30", "filename": "libjava/gnu/java/nio/channels/FileChannelImpl.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f525d7a75ffa9e02d094828e91b2c8af49272e61/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f525d7a75ffa9e02d094828e91b2c8af49272e61/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java?ref=f525d7a75ffa9e02d094828e91b2c8af49272e61", "patch": "@@ -437,9 +437,11 @@ public FileLock tryLock (long position, long size, boolean shared)\n     try\n       {\n \tbegin();\n-        lock(position, size, shared, false);\n+\tboolean lockable = lock(position, size, shared, false);\n \tcompleted = true;\n-\treturn new FileLockImpl(this, position, size, shared);\n+\treturn (lockable\n+\t\t? new FileLockImpl(this, position, size, shared)\n+\t\t: null);\n       }\n     finally\n       {"}, {"sha": "a4af08091bb3fe51a6e145580ceb116afc662107", "filename": "libjava/java/nio/channels/FileLock.java", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f525d7a75ffa9e02d094828e91b2c8af49272e61/libjava%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f525d7a75ffa9e02d094828e91b2c8af49272e61/libjava%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FFileLock.java?ref=f525d7a75ffa9e02d094828e91b2c8af49272e61", "patch": "@@ -132,6 +132,16 @@ public final long size()\n    */\n   public final String toString()\n   {\n-    return \"file-lock:pos=\" + position + \"size=\" + size;\n+\tString toReturn = getClass().getName() + \n+\t  \"[\" + position + \":\" + size;\n+\tif (shared)\n+\t  toReturn += \" shared\";\n+\telse\n+\t  toReturn += \" exclusive\";\n+\tif (isValid())\n+\t  toReturn += \" valid]\";\n+\telse\n+\t  toReturn += \" invalid]\";\n+\treturn toReturn;\n   }\n }"}]}