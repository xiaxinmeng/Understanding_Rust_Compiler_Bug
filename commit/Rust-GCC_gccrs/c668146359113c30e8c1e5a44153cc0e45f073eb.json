{"sha": "c668146359113c30e8c1e5a44153cc0e45f073eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY2ODE0NjM1OTExM2MzMGU4YzFlNWE0NDE1M2NjMGU0NWYwNzNlYg==", "commit": {"author": {"name": "Chen Liqin", "email": "liqin@sunnorth.com.cn", "date": "2007-04-04T01:49:10Z"}, "committer": {"name": "Chen Liqin", "email": "liqin@gcc.gnu.org", "date": "2007-04-04T01:49:10Z"}, "message": "crti.asm: Change _bss_start to __bss_start.\n\n2007-04-04  Chen Liqin  <liqin@sunnorth.com.cn>\n\n        * config/score/crti.asm: Change _bss_start to __bss_start.\n        * config/score/score.h (CONDITIONAL_REGISTER_USAGE): Added.\n        (OUTGOING_REG_PARM_STACK_SPACE) update.\n        * config/score/score.opt: add options to make backend support\n        score5, score5u, score7 and score7d.\n        * config/score/score.md: Likewise.\n        * config/score/misc.md: Likewise.\n        * config/score/mac.md: Likewise.\n        * doc/invoke.texi: Likewise.\n        * doc/md.texi: update constraints define.\n\nFrom-SVN: r123490", "tree": {"sha": "161a48bb545b26b41ec061a8f303dabd808e7160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/161a48bb545b26b41ec061a8f303dabd808e7160"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c668146359113c30e8c1e5a44153cc0e45f073eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c668146359113c30e8c1e5a44153cc0e45f073eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c668146359113c30e8c1e5a44153cc0e45f073eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c668146359113c30e8c1e5a44153cc0e45f073eb/comments", "author": null, "committer": null, "parents": [{"sha": "d4c3cb8c5ce69bae3ca3a6d7d3b0f4ce55a0fe7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c3cb8c5ce69bae3ca3a6d7d3b0f4ce55a0fe7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c3cb8c5ce69bae3ca3a6d7d3b0f4ce55a0fe7d"}], "stats": {"total": 178, "additions": 112, "deletions": 66}, "files": [{"sha": "00d1e9e96a90beb213f5e3a018233cd5bf4d4d4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -1,3 +1,16 @@\n+2007-04-04  Chen Liqin  <liqin@sunnorth.com.cn>\n+\n+        * config/score/crti.asm: Change _bss_start to __bss_start.\n+        * config/score/score.h (CONDITIONAL_REGISTER_USAGE): Added.\n+        (OUTGOING_REG_PARM_STACK_SPACE) update.\n+        * config/score/score.opt: add options to make backend support\n+        score5, score5u, score7 and score7d.\n+        * config/score/score.md: Likewise.\n+        * config/score/misc.md: Likewise.\n+        * config/score/mac.md: Likewise.\n+        * doc/invoke.texi: Likewise.\n+        * doc/md.texi: update constraints define.\n+\n 2007-04-03  Richard Henderson  <rth@redhat.com>\n \n \t* expr.c (store_expr): If get_signed_or_unsigned_type doesn't yield"}, {"sha": "88b9526f0e25220288588789ea93ddab4b5bc40e", "filename": "gcc/config/score/crti.asm", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fcrti.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fcrti.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fcrti.asm?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -43,8 +43,8 @@\n         .mask   0x00000000, 0\n _start:\n         la      r28, _gp\n-        la      r8, _bss_start\n-        la      r9, _bss_end__\n+        la      r8, __bss_start\n+        la      r9, __bss_end__\n         sub!    r9, r8\n         srli!   r9, 2\n         addi    r9, -1\n@@ -91,8 +91,8 @@ _fini:\n         .mask   0x00000000,0\n _start:\n         la      r28, _gp\n-        la      r8, _bss_start\n-        la      r9, _bss_end__\n+        la      r8, __bss_start\n+        la      r9, __bss_end__\n         sub!    r9, r8\n         srli!   r9, 2\n         addi    r9, -1"}, {"sha": "88550c73e59332092aed4456f22ffb369f9a4219", "filename": "gcc/config/score/mac.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fmac.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fmac.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fmac.md?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -26,7 +26,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (smax:SI (match_operand:SI 1 \"register_operand\" \"d\")\n                  (match_operand:SI 2 \"register_operand\" \"d\")))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"max     %0, %1, %2\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")])\n@@ -35,39 +35,39 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (smin:SI (match_operand:SI 1 \"register_operand\" \"d\")\n                  (match_operand:SI 2 \"register_operand\" \"d\")))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"min     %0, %1, %2\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"abssi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (abs:SI (match_operand:SI 1 \"register_operand\" \"d\")))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"abs     %0, %1\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"clzsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (clz:SI (match_operand:SI 1 \"register_operand\" \"d\")))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"clz     %0, %1\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"sffs\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (unspec:SI [(match_operand:SI 1 \"register_operand\" \"d\")] SFFS))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"bitrev  %0, %1, r0\\;clz     %0, %0\\;addi    %0, 0x1\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"ffssi2\"\n   [(set (match_operand:SI 0 \"register_operand\")\n         (ffs:SI (match_operand:SI 1 \"register_operand\")))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n {\n   emit_insn (gen_sffs (operands[0], operands[1]));\n   emit_insn (gen_rtx_SET (VOIDmode, gen_rtx_REG (CC_NZmode, CC_REGNUM),\n@@ -85,7 +85,7 @@\n         (match_operand:SI 1 \"register_operand\" \"\"))\n    (set (match_operand:SI 2 \"hireg_operand\" \"\")\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   [(parallel\n        [(set (match_dup 0) (match_dup 1))\n         (set (match_dup 2) (match_dup 3))])])\n@@ -95,7 +95,7 @@\n         (match_operand:SI 1 \"register_operand\" \"\"))\n    (set (match_operand:SI 2 \"loreg_operand\" \"\")\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   [(parallel\n        [(set (match_dup 2) (match_dup 3))\n         (set (match_dup 0) (match_dup 1))])])\n@@ -106,7 +106,7 @@\n              (match_operand:SI 1 \"register_operand\" \"d\"))\n         (set (match_operand:SI 2 \"hireg_operand\" \"=h\")\n              (match_operand:SI 3 \"register_operand\" \"d\"))])]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"mtcehl  %3, %1\"\n   [(set_attr \"type\" \"fce\")\n    (set_attr \"mode\" \"SI\")])\n@@ -117,7 +117,7 @@\n                           (match_operand:SI 3 \"register_operand\" \"d,d,d\"))\n                  (match_operand:SI 1 \"register_operand\" \"0,d,l\")))\n    (clobber (reg:SI HI_REGNUM))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"@\n    mad     %2, %3\n    mtcel%S1 %1\\;mad     %2, %3\n@@ -130,7 +130,7 @@\n                   (mult:SI (match_operand:SI 2 \"register_operand\" \"d,d,d\")\n                            (match_operand:SI 3 \"register_operand\" \"d,d,d\"))))\n    (clobber (reg:SI HI_REGNUM))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"@\n    msb     %2, %3\n    mtcel%S1 %1\\;msb     %2, %3\n@@ -143,7 +143,7 @@\n                   (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"%d\"))\n                   (sign_extend:DI (match_operand:SI 3 \"register_operand\" \"d\")))\n                  (match_operand:DI 1 \"register_operand\" \"0\")))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"mad     %2, %3\"\n   [(set_attr \"mode\" \"DI\")])\n \n@@ -153,7 +153,7 @@\n                   (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"%d\"))\n                   (zero_extend:DI (match_operand:SI 3 \"register_operand\" \"d\")))\n                  (match_operand:DI 1 \"register_operand\" \"0\")))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"madu    %2, %3\"\n   [(set_attr \"mode\" \"DI\")])\n \n@@ -164,7 +164,7 @@\n          (mult:DI\n           (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"%d\"))\n           (sign_extend:DI (match_operand:SI 3 \"register_operand\" \"d\")))))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"msb     %2, %3\"\n   [(set_attr \"mode\" \"DI\")])\n \n@@ -176,6 +176,6 @@\n                    (match_operand:SI 2 \"register_operand\" \"%d\"))\n                   (zero_extend:DI\n                    (match_operand:SI 3 \"register_operand\" \"d\")))))]\n-  \"TARGET_MAC\"\n+  \"TARGET_MAC || TARGET_SCORE7D\"\n   \"msbu    %2, %3\"\n   [(set_attr \"mode\" \"DI\")])"}, {"sha": "5da7240c68731425fe0089aebc63f20c4b7740cb", "filename": "gcc/config/score/misc.md", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fmisc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fmisc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fmisc.md?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -111,7 +111,7 @@\n         (zero_extract (match_operand:SI 1 \"memory_operand\" \"\")\n                       (match_operand:SI 2 \"immediate_operand\" \"\")\n                       (match_operand:SI 3 \"immediate_operand\" \"\")))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n {\n   if (mdx_unaligned_load (operands))\n     DONE;\n@@ -124,7 +124,7 @@\n                       (match_operand:SI 1 \"immediate_operand\" \"\")\n                       (match_operand:SI 2 \"immediate_operand\" \"\"))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n {\n   if (mdx_unaligned_store (operands))\n     DONE;\n@@ -137,7 +137,7 @@\n         (sign_extract (match_operand:SI 1 \"memory_operand\" \"\")\n                       (match_operand:SI 2 \"immediate_operand\" \"\")\n                       (match_operand:SI 3 \"immediate_operand\" \"\")))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n {\n   if (mdx_unaligned_load (operands))\n     DONE;\n@@ -150,7 +150,7 @@\n                    (match_operand:BLK 1 \"general_operand\"))\n               (use (match_operand:SI 2 \"\"))\n               (use (match_operand:SI 3 \"const_int_operand\"))])]\n-  \"!TARGET_SCORE5U\"\n+  \"!TARGET_SCORE5U && TARGET_ULS\"\n {\n   if (mdx_block_move (operands))\n     DONE;\n@@ -164,7 +164,7 @@\n                  (match_operand:SI 2 \"const_simm12\" \"\")))\n    (set (match_operand:QI 3 \"register_operand\" \"=d\")\n         (mem:QI (match_dup 1)))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"lbu     %3, [%1]+, %2\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"QI\")])\n@@ -175,7 +175,7 @@\n                  (match_operand:SI 2 \"const_simm12\" \"\")))\n    (set (match_operand:HI 3 \"register_operand\" \"=d\")\n         (mem:HI (match_dup 1)))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"lhu     %3, [%1]+, %2\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"HI\")])\n@@ -186,7 +186,7 @@\n                  (match_operand:SI 2 \"const_simm12\" \"\")))\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n         (mem:SI (match_dup 1)))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"lw      %3, [%1]+, %2\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"SI\")])\n@@ -197,7 +197,7 @@\n                  (match_operand:SI 2 \"const_simm12\" \"\")))\n    (set (mem:QI (match_dup 1))\n         (match_operand:QI 3 \"register_operand\" \"d\"))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"sb      %3, [%1]+, %2\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"QI\")])\n@@ -208,7 +208,7 @@\n                  (match_operand:SI 2 \"const_simm12\" \"\")))\n    (set (mem:HI (match_dup 1))\n         (match_operand:HI 3 \"register_operand\" \"d\"))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"sh      %3, [%1]+, %2\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"HI\")])\n@@ -219,7 +219,7 @@\n                  (match_operand:SI 2 \"const_simm12\" \"\")))\n    (set (mem:SI (match_dup 1))\n         (match_operand:SI 3 \"register_operand\" \"d\"))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"sw      %3, [%1]+, %2\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"SI\")])\n@@ -231,7 +231,7 @@\n    (set (match_operand:QI 3 \"register_operand\" \"=d\")\n         (mem:QI (plus:SI (match_dup 1)\n                          (match_dup 2))))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"lbu     %3, [%1, %2]+\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"QI\")])\n@@ -243,7 +243,7 @@\n    (set (match_operand:HI 3 \"register_operand\" \"=d\")\n         (mem:HI (plus:SI (match_dup 1)\n                          (match_dup 2))))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"lhu     %3, [%1, %2]+\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"HI\")])\n@@ -255,7 +255,7 @@\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n         (mem:SI (plus:SI (match_dup 1)\n                          (match_dup 2))))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"lw      %3, [%1, %2]+\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"SI\")])\n@@ -267,7 +267,7 @@\n    (set (mem:QI (plus:SI (match_dup 1)\n                          (match_dup 2)))\n         (match_operand:QI 3 \"register_operand\" \"d\"))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"sb      %3, [%1, %2]+\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"QI\")])\n@@ -279,7 +279,7 @@\n    (set (mem:HI (plus:SI (match_dup 1)\n                          (match_dup 2)))\n         (match_operand:HI 3 \"register_operand\" \"d\"))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"sh      %3, [%1, %2]+\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"HI\")])\n@@ -291,7 +291,7 @@\n    (set (mem:SI (plus:SI (match_dup 1)\n                          (match_dup 2)))\n         (match_operand:SI 3 \"register_operand\" \"d\"))]\n-  \"!TARGET_SCORE5U\"\n+  \"\"\n   \"sw      %3, [%1, %2]+\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"SI\")])\n@@ -302,7 +302,7 @@\n                  (const_int 4)))\n    (set (reg:SI LC_REGNUM)\n         (unspec:SI [(mem:BLK (match_dup 1))] LCB))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n   \"lcb     [%1]+\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"SI\")])\n@@ -316,7 +316,7 @@\n                     (reg:SI LC_REGNUM)] LCW))\n    (set (reg:SI LC_REGNUM)\n         (unspec:SI [(mem:BLK (match_dup 1))] LCB))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n   \"lcw     %2, [%1]+\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"SI\")])\n@@ -328,7 +328,7 @@\n    (set (match_operand:SI 2 \"register_operand\" \"=d\")\n         (unspec:SI [(mem:BLK (match_dup 1))\n                     (reg:SI LC_REGNUM)] LCE))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n   \"lce     %2, [%1]+\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"mode\" \"SI\")])\n@@ -341,7 +341,7 @@\n         (unspec:BLK [(match_operand:SI 2 \"register_operand\" \"d\")] SCB))\n    (set (reg:SI SC_REGNUM)\n         (unspec:SI [(match_dup 2)] SCLC))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n   \"scb     %2, [%1]+\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"SI\")])\n@@ -355,7 +355,7 @@\n                      (reg:SI SC_REGNUM)] SCW))\n    (set (reg:SI SC_REGNUM)\n         (unspec:SI [(match_dup 2)] SCLC))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n   \"scw     %2, [%1]+\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"SI\")])\n@@ -366,7 +366,7 @@\n                  (const_int 4)))\n    (set (mem:BLK (match_dup 1))\n         (unspec:BLK [(reg:SI SC_REGNUM)] SCE))]\n-  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN\"\n+  \"!TARGET_SCORE5U && !TARGET_LITTLE_ENDIAN && TARGET_ULS\"\n   \"sce     [%1]+\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"mode\" \"SI\")])"}, {"sha": "eb3b4f5ecf9032fe9d2601ccdc1fe6be0b2f8d90", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -38,7 +38,9 @@ extern GTY(()) rtx cmp_op1;\n \n #undef ASM_SPEC\n #define ASM_SPEC \\\n-  \"%{!mel:-EB} %{mel:-EL} %{mscore5u:-SCORE5U} %{mscore7:-SCORE7} %{G*}\"\n+  \"%{!mel:-EB} %{mel:-EL} %{mscore5:-SCORE5} %{mscore5u:-SCORE5U} \\\n+   %{mscore7:%{!mmac:-SCORE7}} %{mscore7:%{mmac:-SCORE7D}} \\\n+   %{mscore7d:-SCORE7D} %{G*}\"\n \n #undef LINK_SPEC\n #define LINK_SPEC                \"%{!mel:-EB} %{mel:-EL} %{G*}\"\n@@ -286,6 +288,16 @@ extern GTY(()) rtx cmp_op1;\n   128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,        \\\n   144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159        }\n \n+/* Macro to conditionally modify fixed_regs/call_used_regs.  */\n+#define PIC_OFFSET_TABLE_REGNUM          29\n+\n+#define CONDITIONAL_REGISTER_USAGE                     \\\n+{                                                      \\\n+   if (!flag_pic)                                      \\\n+     fixed_regs[PIC_OFFSET_TABLE_REGNUM] =             \\\n+     call_used_regs[PIC_OFFSET_TABLE_REGNUM] = 0;      \\\n+}\n+\n #define HARD_REGNO_NREGS(REGNO, MODE) \\\n   ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n \n@@ -534,7 +546,7 @@ enum reg_class\n    If `ACCUMULATE_OUTGOING_ARGS' is also defined, the only effect\n    of this macro is to determine whether the space is included in\n    `current_function_outgoing_args_size'.  */\n-#define OUTGOING_REG_PARM_STACK_SPACE 1\n+#define OUTGOING_REG_PARM_STACK_SPACE   1\n \n #define RETURN_POPS_ARGS(FUNDECL, FUNTYPE, STACK_SIZE) 0\n "}, {"sha": "7d3352947f0b5681c95ce6944a9a921adb84a215", "filename": "gcc/config/score/score.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fscore.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fscore.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.md?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -1511,7 +1511,7 @@\n    (use (match_operand 2 \"\" \"\"))    ; max iterations\n    (use (match_operand 3 \"\" \"\"))    ; loop level\n    (use (match_operand 4 \"\" \"\"))]   ; label\n-  \"\"\n+  \"!TARGET_NHWLOOP\"\n   {\n     if (INTVAL (operands[3]) > 1)\n       FAIL;\n@@ -1539,6 +1539,6 @@\n                  (const_int -1)))\n    (clobber (reg:CC CC_REGNUM))\n ]\n-  \"\"\n+  \"!TARGET_NHWLOOP\"\n   \"bcnz %1\"\n   [(set_attr \"type\" \"branch\")])"}, {"sha": "419a5458aeda752f53cfb8dee3d4cfd20b3b0e2c", "filename": "gcc/config/score/score.opt", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fscore.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fconfig%2Fscore%2Fscore.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.opt?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -27,10 +27,22 @@ mel\n Target RejectNegative Report Mask(LITTLE_ENDIAN)\n Generate little-endian code\n \n+mnhwloop\n+Target RejectNegative Report Mask(NHWLOOP)\n+Disable bcnz instruction\n+\n+muls\n+Target RejectNegative Report Mask(ULS)\n+Enable unaligned load/store instruction\n+\n mmac\n Target RejectNegative Report Mask(MAC)\n Enable mac instruction\n \n+mscore5\n+Target RejectNegative Report Mask(SCORE5)\n+Support SCORE 5 ISA\n+\n mscore5u\n Target RejectNegative Report Mask(SCORE5U)\n Support SCORE 5U ISA\n@@ -39,3 +51,6 @@ mscore7\n Target RejectNegative Report Mask(SCORE7)\n Support SCORE 7 ISA\n \n+mscore7d\n+Target RejectNegative Report Mask(SCORE7D)\n+Support SCORE 7D ISA"}, {"sha": "09f6b67196a8427d4550dafde1c7643ddc2a6375", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -709,9 +709,11 @@ See RS/6000 and PowerPC Options.\n -mwarn-framesize  -mwarn-dynamicstack  -mstack-size -mstack-guard}\n \n @emph{Score Options}\n-@gccoptlist{-mel -mel @gol\n+@gccoptlist{-meb -mel @gol\n+-mnhwloop @gol\n+-muls @gol\n -mmac @gol\n--mscore5u -mscore7}\n+-mscore5 -mscore5u -mscore7 -mscore7d}\n \n @emph{SH Options}\n @gccoptlist{-m1  -m2  -m2e  -m3  -m3e @gol\n@@ -12924,25 +12926,41 @@ The @var{stack-guard} option can only be used in conjunction with @var{stack-siz\n These options are defined for Score implementations:\n \n @table @gcctabopt\n-@item -mel\n-@opindex -mel\n-Compile code for little endian mode.\n-\n @item -meb\n @opindex meb\n Compile code for big endian mode.  This is the default.\n \n+@item -mel\n+@opindex -mel\n+Compile code for little endian mode. \n+\n+@item -mnhwloop\n+@opindex -mnhwloop\n+Disable generate bcnz instruction.\n+\n+@item -muls\n+@opindex -muls\n+Enable generate unaligned load and store instruction.\n+\n @item -mmac\n @opindex mmac\n-Enable the use of multiply-accumulate instructions. Disabled by default.\n+Enable the use of multiply-accumulate instructions. Disabled by default. \n+\n+@item -mscore5\n+@opindex mscore5\n+Specify the SCORE5 as the target architecture.\n \n @item -mscore5u\n @opindex mscore5u\n Specify the SCORE5U of the target architecture.\n \n @item -mscore7\n @opindex mscore7\n-Specify the SCORE7 of the target architecture. This is the default.\n+Specify the SCORE7 as the target architecture. This is the default.\n+\n+@item -mscore7d\n+@opindex mscore7d\n+Specify the SCORE7D as the target architecture.\n @end table\n \n @node SH Options"}, {"sha": "2c60ace37f4910aa489070e208a98b94fdc2933b", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c668146359113c30e8c1e5a44153cc0e45f073eb/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=c668146359113c30e8c1e5a44153cc0e45f073eb", "patch": "@@ -2903,7 +2903,7 @@ cp3 registers.\n cp1 + cp2 + cp3 registers.\n \n @item I\n-Unsigned 15 bit integer (in the range 0 to 32767).\n+High 16-bit constant (32-bit constant with 16 LSBs zero).\n \n @item J\n Unsigned 5 bit integer (in the range 0 to 31).\n@@ -2920,18 +2920,6 @@ Unsigned 14 bit integer (in the range 0 to 16383).\n @item N\n Signed 14 bit integer (in the range @minus{}8192 to 8191).\n \n-@item O\n-Signed 15 bit integer (in the range @minus{}16384 to 16383).\n-\n-@item P\n-Signed 12 bit integer (in the range @minus{}2048 to 2047).\n-\n-@item J\n-An integer constant with exactly a single bit set.\n-\n-@item Q\n-An integer constant.\n-\n @item Z\n Any SYMBOL_REF.\n @end table"}]}