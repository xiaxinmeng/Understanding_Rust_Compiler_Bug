{"sha": "e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc0ZmU0OTJmMTljOGEyYmRmMTA3N2FmMTU4M2M3NGE1ZWNkN2M5OA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2009-06-01T16:09:33Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2009-06-01T16:09:33Z"}, "message": "diagnostic.c (diagnostic_build_prefix): Always print columns.\n\n\ngcc/\n\t* diagnostic.c (diagnostic_build_prefix): Always print columns.\n\t(diagnostic_report_current_module): Print columns.\n\t* common.opt (flag_show_column): Enable by default.\ngcc/testsuite/\n\t* lib/gcc-dg.exp (dg-bogus): Override dg-bogus.\n\t(process-message): Expect column numbers.\n\t* gcc.dg/va-arg-2.c: Use line 0 to indicate no column.\n\t* gcc.dg/pch/counter-2.c: Same.\n\t* gcc.dg/pch/valid-2.c: Same.\n\t* gcc.dg/pch/warn-1.c: Same.\n\t* gcc.dg/pch/valid-1.c: Same.\n\t* gcc.dg/cpp/include2a.c: Handle lack of columns.\n\t* gcc.dg/cpp/syshdr.c: Same.\n\t* gcc.dg/cpp/19940712-1.c: Same.\n\t* gcc.dg/cpp/missing-header-1.c: Same.\n\t* gcc.dg/cpp/unc4.c: Remove -fno-show-column.\n\t* gcc.dg/cpp/tr-warn3.c: Same.\n\t* gcc.dg/cpp/pr29612-2.c: Same.\n\t* gcc.dg/cpp/tr-warn4.c: Same.\n\t* gcc.dg/cpp/Wtrigraphs.c: Same.\n\t* gcc.dg/cpp/poison.c: Same.\n\t* gcc.dg/cpp/arith-3.c: Same.\n\t* gcc.dg/cpp/sysmac2.c: Same.\n\t* gcc.dg/cpp/cpp.exp: Same.\n\t* gcc.dg/cpp/tr-warn5.c: Same.\n\t* gcc.dg/cpp/include2.c: Same.\n\t* gcc.dg/cpp/Wmissingdirs.c: Same.\n\t* gcc.dg/cpp/Wmissingdirs.c: Same.\n\t* gcc.dg/cpp/tr-warn6.c: Same.\n\t* gcc.dg/cpp/Wtrigraphs-2.c: Same.\n\t* gcc.dg/cpp/macspace1.c: Same.\n\t* gcc.dg/cpp/escape-2.c: Same.\n\t* gcc.dg/cpp/assert2.c: Same.\n\t* gcc.dg/cpp/undef2.c: Same.\n\t* gcc.dg/cpp/macspace2.c: Same.\n\t* gcc.dg/cpp/tr-warn1.c: Same.\n\t* gcc.dg/cpp/extratokens2.c: Same.\n\t* gcc.dg/cpp/strify2.c: Same.\n\t* gcc.dg/cpp/Wsignprom.c: Same.\n\t* gcc.dg/cpp/redef2.c: Same.\n\t* gcc.dg/cpp/trad/trad.exp: Same.\n\t* gcc.dg/cpp/arith-1.c: Same.\n\t* gcc.dg/cpp/extratokens.c: Same.\n\t* gcc.dg/cpp/if-mpar.c: Same.\ngcc/cp/\n\t* error.c (print_instantiation_partial_context): Print column\n\tnumbers.\nlibcpp/\n\t* include/line-map.h (LAST_SOURCE_COLUMN): New.\n\nFrom-SVN: r148052", "tree": {"sha": "79bf383cc2d2a276e12de3fa9beabb03ba047e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79bf383cc2d2a276e12de3fa9beabb03ba047e66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4851089fc69c0a249ff82f307829b47dc3856ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4851089fc69c0a249ff82f307829b47dc3856ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4851089fc69c0a249ff82f307829b47dc3856ee0"}], "stats": {"total": 224, "additions": 158, "deletions": 66}, "files": [{"sha": "9789c01fb9c1d2264748134d33f3af0adc7fe819", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,3 +1,9 @@\n+2009-06-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* diagnostic.c (diagnostic_build_prefix): Always print columns.\n+\t(diagnostic_report_current_module): Print columns.\n+\t* common.opt (flag_show_column): Enable by default.\n+\n 2009-06-01  Luis Machado  <luisgpm@br.ibm.com>\n \n \t* alias.c (find_base_term): Check for NULL term before returning."}, {"sha": "d3cbe169332404deef37aea6b15270e2b3a7b662", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1049,8 +1049,8 @@ Common Report Var(flag_see) Init(0)\n Eliminate redundant sign extensions using LCM.\n \n fshow-column\n-Common C ObjC C++ ObjC++ Report Var(flag_show_column) Init(0)\n-Show column numbers in diagnostics, when available.  Default off\n+Common C ObjC C++ ObjC++ Report Var(flag_show_column) Init(1)\n+Show column numbers in diagnostics, when available.  Default on\n \n fsignaling-nans\n Common Report Var(flag_signaling_nans) Optimization"}, {"sha": "2aee90842eff7fe31b6f511be0d28b2fa48e00f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,3 +1,8 @@\n+2009-06-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* error.c (print_instantiation_partial_context): Print column\n+\tnumbers.\n+\n 2009-05-29  Ian Lance Taylor  <iant@google.com>\n \n \t* error.c (cp_printer): Don't use va_arg with enum type."}, {"sha": "7be241dd02e738e8212361d852ec443e43f4acae", "filename": "gcc/cp/error.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -2705,19 +2705,30 @@ print_instantiation_partial_context (diagnostic_context *context,\n \t\t\t\t     struct tinst_level *t, location_t loc)\n {\n   expanded_location xloc;\n+  const char *str;\n   for (; ; t = t->next)\n     {\n       xloc = expand_location (loc);\n       if (t == NULL)\n \tbreak;\n-      pp_verbatim (context->printer, _(\"%s:%d:   instantiated from %qs\\n\"),\n-\t\t   xloc.file, xloc.line,\n-\t\t   decl_as_string_translate (t->decl,\n-\t\t\t\t\t     TFF_DECL_SPECIFIERS | TFF_RETURN_TYPE));\n+      str = decl_as_string_translate (t->decl,\n+\t  \t\t\t      TFF_DECL_SPECIFIERS | TFF_RETURN_TYPE);\n+      if (flag_show_column)\n+\tpp_verbatim (context->printer,\n+\t\t     _(\"%s:%d:%d:   instantiated from %qs\\n\"),\n+\t\t     xloc.file, xloc.line, xloc.column, str);\n+      else\n+\tpp_verbatim (context->printer,\n+\t\t     _(\"%s:%d:   instantiated from %qs\\n\"),\n+\t\t     xloc.file, xloc.line, str);\n       loc = t->locus;\n     }\n-  pp_verbatim (context->printer, _(\"%s:%d:   instantiated from here\"),\n-\t       xloc.file, xloc.line);\n+  if (flag_show_column)\n+    pp_verbatim (context->printer, _(\"%s:%d:%d:   instantiated from here\"),\n+\t\t xloc.file, xloc.line, xloc.column);\n+  else\n+    pp_verbatim (context->printer, _(\"%s:%d:   instantiated from here\"),\n+\t\t xloc.file, xloc.line);\n   pp_base_newline (context->printer);\n }\n "}, {"sha": "3f7bab19d8b7222b13c49d8a281137859a01ee6d", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -162,7 +162,7 @@ diagnostic_build_prefix (diagnostic_info *diagnostic)\n   return\n     (s.file == NULL\n      ? build_message_string (\"%s: %s\", progname, text)\n-     : flag_show_column && s.column != 0\n+     : flag_show_column\n      ? build_message_string (\"%s:%d:%d: %s\", s.file, s.line, s.column, text)\n      : build_message_string (\"%s:%d: %s\", s.file, s.line, text));\n }\n@@ -244,9 +244,15 @@ diagnostic_report_current_module (diagnostic_context *context)\n       if (! MAIN_FILE_P (map))\n \t{\n \t  map = INCLUDED_FROM (line_table, map);\n-\t  pp_verbatim (context->printer,\n-\t\t       \"In file included from %s:%d\",\n-\t\t       map->to_file, LAST_SOURCE_LINE (map));\n+\t  if (flag_show_column)\n+\t    pp_verbatim (context->printer,\n+\t\t\t \"In file included from %s:%d:%d\",\n+\t\t\t map->to_file,\n+\t\t\t LAST_SOURCE_LINE (map), LAST_SOURCE_COLUMN (map));\n+\t  else\n+\t    pp_verbatim (context->printer,\n+\t\t\t \"In file included from %s:%d\",\n+\t\t\t map->to_file, LAST_SOURCE_LINE (map));\n \t  while (! MAIN_FILE_P (map))\n \t    {\n \t      map = INCLUDED_FROM (line_table, map);"}, {"sha": "9e10c591404d73d64cdb19d2f4d674c6824ae900", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,3 +1,46 @@\n+2009-06-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* lib/gcc-dg.exp (dg-bogus): Override dg-bogus.\n+\t(process-message): Expect column numbers.\n+\t* gcc.dg/va-arg-2.c: Use line 0 to indicate no column.\n+\t* gcc.dg/pch/counter-2.c: Same.\n+\t* gcc.dg/pch/valid-2.c: Same.\n+\t* gcc.dg/pch/warn-1.c: Same.\n+\t* gcc.dg/pch/valid-1.c: Same.\n+\t* gcc.dg/cpp/include2a.c: Handle lack of columns.\n+\t* gcc.dg/cpp/syshdr.c: Same.\n+\t* gcc.dg/cpp/19940712-1.c: Same.\n+\t* gcc.dg/cpp/missing-header-1.c: Same.\n+\t* gcc.dg/cpp/unc4.c: Remove -fno-show-column.\n+\t* gcc.dg/cpp/tr-warn3.c: Same.\n+\t* gcc.dg/cpp/pr29612-2.c: Same.\n+\t* gcc.dg/cpp/tr-warn4.c: Same.\n+\t* gcc.dg/cpp/Wtrigraphs.c: Same.\n+\t* gcc.dg/cpp/poison.c: Same.\n+\t* gcc.dg/cpp/arith-3.c: Same.\n+\t* gcc.dg/cpp/sysmac2.c: Same.\n+\t* gcc.dg/cpp/cpp.exp: Same.\n+\t* gcc.dg/cpp/tr-warn5.c: Same.\n+\t* gcc.dg/cpp/include2.c: Same.\n+\t* gcc.dg/cpp/Wmissingdirs.c: Same.\n+\t* gcc.dg/cpp/Wmissingdirs.c: Same.\n+\t* gcc.dg/cpp/tr-warn6.c: Same.\n+\t* gcc.dg/cpp/Wtrigraphs-2.c: Same.\n+\t* gcc.dg/cpp/macspace1.c: Same.\n+\t* gcc.dg/cpp/escape-2.c: Same.\n+\t* gcc.dg/cpp/assert2.c: Same.\n+\t* gcc.dg/cpp/undef2.c: Same.\n+\t* gcc.dg/cpp/macspace2.c: Same.\n+\t* gcc.dg/cpp/tr-warn1.c: Same.\n+\t* gcc.dg/cpp/extratokens2.c: Same.\n+\t* gcc.dg/cpp/strify2.c: Same.\n+\t* gcc.dg/cpp/Wsignprom.c: Same.\n+\t* gcc.dg/cpp/redef2.c: Same.\n+\t* gcc.dg/cpp/trad/trad.exp: Same.\n+\t* gcc.dg/cpp/arith-1.c: Same.\n+\t* gcc.dg/cpp/extratokens.c: Same.\n+\t* gcc.dg/cpp/if-mpar.c: Same.\n+\n 2009-06-01  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/nested_float_packed.ads: New test."}, {"sha": "a79b2f5484d56bf867464a2a95f9ab9922e6a664", "filename": "gcc/testsuite/gcc.dg/cpp/19940712-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -5,8 +5,9 @@\n /* { dg-error \"unterminated comment\" \"\" { target *-*-* } 4 } */\n /* { dg-error \"unterminated comment\" \"header error\" { target *-*-* } 8 } */\n \n-#include \"19940712-1.h\"\t  /* { dg-message \"\" }  // In file included from: */\n-#include \"19940712-1a.h\"  /* { dg-message \"\" }  // In file included from: */\n+#include \"19940712-1.h\"\n+/* { dg-message \"\" \"In file included from:\" { target *-*-* } 0 } */\n+#include \"19940712-1a.h\"\n #include \"19940712-1b.h\"\n \n /* comment start in comment error"}, {"sha": "69b3aae3da603390ec85b2870513ff656d8a74fd", "filename": "gcc/testsuite/gcc.dg/cpp/Wmissingdirs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWmissingdirs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWmissingdirs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWmissingdirs.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=gnu99 -I /jolly/well/better/not/exist -Wmissing-include-dirs -fno-show-column\" } */\n+/* { dg-options \"-std=gnu99 -I /jolly/well/better/not/exist -Wmissing-include-dirs\" } */\n \n /* Test that -Wmissing-include-dirs issues a warning when a specified\n    directory does not exist.  Source Ben Elliston, 2004-05-13.  */"}, {"sha": "87d422b794fdcc89c4e8749a87b88177c910469e", "filename": "gcc/testsuite/gcc.dg/cpp/Wsignprom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWsignprom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWsignprom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWsignprom.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-Wall -fshow-column\" } */\n+/* { dg-options \"-Wall\" } */\n \n /* Test that -Wall emits the warnings about integer promotion changing\n    the sign of an operand.  */"}, {"sha": "8d61f2841f0fd3a1a48d80919d6c3baf238ae85d", "filename": "gcc/testsuite/gcc.dg/cpp/Wtrigraphs-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWtrigraphs-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWtrigraphs-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWtrigraphs-2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99 -Wtrigraphs -fno-show-column\" } */\n+/* { dg-options \"-std=c99 -Wtrigraphs\" } */\n \n /* Test warnings for trigraphs in comments, with trigraphs enabled.\n    Neil Booth.  4 May 2003.  */"}, {"sha": "d4be2040c18328822ccd06476ff124c4c8b19282", "filename": "gcc/testsuite/gcc.dg/cpp/Wtrigraphs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWtrigraphs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWtrigraphs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2FWtrigraphs.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=gnu99 -Wtrigraphs -fno-show-column\" } */\n+/* { dg-options \"-std=gnu99 -Wtrigraphs\" } */\n \n /* Test we don't double warn for trigraphs immediately after preceding\n    text.  Source Neil Booth.  22 Nov 2000.  */"}, {"sha": "99e3cd7be2e632ee75b95611346c3a2d82c40ef7", "filename": "gcc/testsuite/gcc.dg/cpp/arith-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-1.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -7,7 +7,7 @@\n    independent of target precision.  */\n \n /* { dg-do preprocess } */\n-/* { dg-options -fno-show-column } */\n+/* { dg-options \"\" } */\n \n /* Test || operator and its short circuiting.  */\n #if 0 || 0"}, {"sha": "3015d31657acf08765b4eaf118f7e2b6679968d1", "filename": "gcc/testsuite/gcc.dg/cpp/arith-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-3.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -9,7 +9,7 @@\n    Please keep changes to arith-2.c and arith-3.c in sync.  */\n \n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99 -fno-show-column\" } */\n+/* { dg-options \"-std=c99\" } */\n \n #include <limits.h>\n "}, {"sha": "5228bcbb3a912bac18b530ec3bc2cf2f51d99036", "filename": "gcc/testsuite/gcc.dg/cpp/assert2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fassert2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fassert2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fassert2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,6 +1,6 @@\n /* Malformed assertion tests.  */\n /* { dg-do preprocess } */\n-/* { dg-options \"-fno-show-column -Wno-deprecated\" } */\n+/* { dg-options \"-Wno-deprecated\" } */\n \n #assert\t\t/* { dg-error \"without predicate\" \"assert w/o predicate\" } */\n #assert %\t/* { dg-error \"an identifier\" \"assert punctuation\" } */"}, {"sha": "acf0898407b57b9289cf711ed69bdc6d85f0db06", "filename": "gcc/testsuite/gcc.dg/cpp/cpp.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcpp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcpp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcpp.exp?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -37,7 +37,7 @@ dg-init\n \n # Main loop.\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.{c,S} ]] \\\n-\t\"-fno-show-column\" $DEFAULT_CFLAGS\n+\t\"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}, {"sha": "902fad3a2c2e0a7c8e751bf9b0026a08dcef04b5", "filename": "gcc/testsuite/gcc.dg/cpp/escape-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fescape-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fescape-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fescape-2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* Copyright (C) 2001 Free Software Foundation, Inc.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-pedantic -std=c99 -fno-show-column\" } */\n+/* { dg-options \"-pedantic -std=c99\" } */\n \n /* This tests various diagnostics with -pedantic about escape\n    sequences, for both the preprocessor and the compiler."}, {"sha": "e7d5e08dd49382ecd2e1b47d131852964b51d73a", "filename": "gcc/testsuite/gcc.dg/cpp/escape.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fescape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fescape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fescape.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* Copyright (C) 2001 Free Software Foundation, Inc.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-Wtraditional -std=c89 -fno-show-column\" } */\n+/* { dg-options \"-Wtraditional -std=c89\" } */\n \n /* This tests various diagnostics with -Wtraditioanl about escape\n    sequences, for both the preprocessor and the compiler."}, {"sha": "11d094af572d506f29c2496572acd4d6356653b1", "filename": "gcc/testsuite/gcc.dg/cpp/extratokens.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fextratokens.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fextratokens.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fextratokens.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* Copyright (C) 2000, 2008 Free Software Foundation, Inc.  */\n \n /* { dg-do preprocess } */\n-/* { dg-options \"-fno-show-column -Wno-deprecated\" } */\n+/* { dg-options \"-Wno-deprecated\" } */\n \n /* Tests all directives that do not permit excess tokens at the end of\n    the line.  */"}, {"sha": "8e69a96c5b50d5aa614a3198b8c19ebf45d866c0", "filename": "gcc/testsuite/gcc.dg/cpp/extratokens2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fextratokens2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fextratokens2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fextratokens2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* Copyright (C) 2002 Free Software Foundation, Inc.  */\n \n /* { dg-do preprocess } */\n-/* { dg-options \"-fno-show-column -Wno-endif-labels\" } */\n+/* { dg-options \"-Wno-endif-labels\" } */\n \n /* Tests that -Wno-endif-labels correctly disables the checks done by\n    default (and tested in extratokens.c).  */"}, {"sha": "45dd78b1e673cef8e146cd7de9bfa17d983a0a8d", "filename": "gcc/testsuite/gcc.dg/cpp/if-mpar.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-mpar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-mpar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-mpar.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -4,7 +4,6 @@\n    missing parenthesis message.  */\n \n /* { dg-do preprocess } */\n-/* { dg-options \"-fshow-column\" } */\n #if (1          /* { dg-error \"5:missing '\\\\)'\" \"missing ')' no. 1\" } */\n #endif\n "}, {"sha": "de34255ec35180e3e97e96c76757a55b1819bf47", "filename": "gcc/testsuite/gcc.dg/cpp/include2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -11,5 +11,5 @@\n \n /* These error is No such file or directory, just once.  However, this\n    message is locale-dependent, so don't test for it.  */\n-/* { dg-error \"silly\" \"\" { target *-*-* } 10 } */\n+/* { dg-error \"silly\" \"\" { target *-*-* } 0 } */\n /* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "6a11c92cff262e695ba7c151b011cee5ca78198c", "filename": "gcc/testsuite/gcc.dg/cpp/include2a.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude2a.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -11,6 +11,6 @@\n \n /* These error is No such file or directory, just once.  However, this\n    message is locale-dependent, so don't test for it.  */\n-/* { dg-error \"silly\" \"\" { target *-*-* } 10 } */\n-/* { dg-error \"missing\" \"\" { target *-*-* } 10 } */\n+/* { dg-error \"silly\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"missing\" \"\" { target *-*-* } 0 } */\n /* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "d8578448b64e9bf877976c08d5eafaf1db0b11ac", "filename": "gcc/testsuite/gcc.dg/cpp/macspace1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace1.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,6 +1,6 @@\n /* PR preprocessor/19475 */\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=iso9899:1990 -pedantic-errors -fno-show-column\" } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic-errors\" } */\n \n #define a!\t\t/* { dg-warning \"missing whitespace\" } */\n #define b\"\t\t/* { dg-warning \"missing whitespace\" } */"}, {"sha": "1494fed18c3a56daa3fae39c62738194c48cb70b", "filename": "gcc/testsuite/gcc.dg/cpp/macspace2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacspace2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,6 +1,6 @@\n /* PR preprocessor/19475 */\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=iso9899:1999 -pedantic-errors -fno-show-column\" } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n \n #define a!\t\t/* { dg-error \"requires whitespace\" } */\n #define b\"\t\t/* { dg-error \"requires whitespace\" } */"}, {"sha": "dbcc2b36167030b986a6f9ad85b6ef139359e921", "filename": "gcc/testsuite/gcc.dg/cpp/missing-header-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-1.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -2,7 +2,8 @@\n /* { dg-do compile } */\n /* { dg-options \"\" } */\n \n-#include \"nonexistent.h\" /* { dg-error \"nonexistent.h\" } */\n+#include \"nonexistent.h\"\n+/* { dg-message \"nonexistent.h\" \"\" { target *-*-* } 0 } */\n /* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n \n /* This declaration should not receive any diagnostic.  */"}, {"sha": "f85405c0983e3b8671014ad86613dd821f843f75", "filename": "gcc/testsuite/gcc.dg/cpp/poison.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpoison.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpoison.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpoison.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do preprocess }\n-   { dg-options \"-fno-show-column\" } */\n+/* { dg-do preprocess } */\n \n #pragma GCC poison foo\n foo\t\t\t/* { dg-error \"foo\" \"use of foo\" } */"}, {"sha": "fff10a843b44773e9285702240c623b57f33da6a", "filename": "gcc/testsuite/gcc.dg/cpp/pr29612-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr29612-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr29612-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr29612-2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,6 +1,6 @@\n /* PR preprocessor/29612 */\n /* { dg-do preprocess } */\n-/* { dg-options \"-Wtraditional -fno-show-column\" } */\n+/* { dg-options \"-Wtraditional\" } */\n \n # 6 \"pr29612-2.c\"\n "}, {"sha": "1dbc10033edfc8fc3e892e1921327cf7261f6a5f", "filename": "gcc/testsuite/gcc.dg/cpp/redef2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fredef2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* Test for redefining macros with significant differences.  */\n \n /* { dg-do preprocess }\n-   { dg-options \"-ansi -Wall -fno-show-column\" } */\n+   { dg-options \"-ansi -Wall\" } */\n \n #define mac(a, b) (a) + (b)\n #define mac(a, b) (a) * (b)"}, {"sha": "c24220c70e012ec863af235f552427b5dea50440", "filename": "gcc/testsuite/gcc.dg/cpp/strify2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrify2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* Copyright (C) 2000 Free Software Foundation, Inc.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-std=c99 -pedantic-errors -fno-show-column\" } */\n+/* { dg-options \"-std=c99 -pedantic-errors\" } */\n \n /* Tests a whole bunch of things are correctly stringified.  */\n "}, {"sha": "310d5d0d28826d20598920419cfebb189ac6bfc7", "filename": "gcc/testsuite/gcc.dg/cpp/syshdr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fsyshdr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fsyshdr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fsyshdr.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -8,5 +8,6 @@\n /* { dg-do preprocess } */\n /* { dg-error \"include_next\" \"good error\" { target *-*-* } 4 } */\n \n-#include \"syshdr1.h\"  /* { dg-message \"\" \"In file included from:\" } */\n+#include \"syshdr1.h\"  \n+/* { dg-message \"\" \"In file included from:\" { target *-*-* } 0 } */\n #include \"syshdr2.h\""}, {"sha": "6d493a9ed1b1d1b2f605e6ba9c5e8f1d0d9e2bee", "filename": "gcc/testsuite/gcc.dg/cpp/sysmac2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fsysmac2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fsysmac2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fsysmac2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* Copyright (C) 2001 Free Software Foundation, Inc.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-std=gnu99 -pedantic -Wtraditional -fno-show-column\" } */\n+/* { dg-options \"-std=gnu99 -pedantic -Wtraditional\" } */\n \n /* Tests diagnostics are suppressed for some macros defined in system\n    headers.  */"}, {"sha": "37b5efe5df1c5da94709278b8b79f1609baab0cc", "filename": "gcc/testsuite/gcc.dg/cpp/tr-warn1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn1.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,6 +1,6 @@\n /* Test for warnings about nontraditional directives.  */\n /* { dg-do preprocess } */\n-/* { dg-options \"-pedantic -Wtraditional -fno-show-column\" } */\n+/* { dg-options \"-pedantic -Wtraditional\" } */\n \n /* Block 1: K+R directives should have the # indented.  */\n "}, {"sha": "33517188cd8cf0acced4f3a8affd4c2ba61dba24", "filename": "gcc/testsuite/gcc.dg/cpp/tr-warn3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn3.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -3,7 +3,7 @@\n    warnings inside unused clauses because they are often hidden this\n    way on purpose.  However they do still require indentation for K&R.  */\n /* { dg-do preprocess } */\n-/* { dg-options \"-pedantic -Wtraditional -fno-show-column\" } */\n+/* { dg-options \"-pedantic -Wtraditional\" } */\n \n #if 1\n "}, {"sha": "f5b5779bfd7f6f29a218ed93076b39c05e1db7aa", "filename": "gcc/testsuite/gcc.dg/cpp/tr-warn4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn4.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -2,7 +2,7 @@\n    Note, gcc should omit these warnings in system header files.\n    By Kaveh R. Ghazi <ghazi@caip.rutgers.edu> 8/22/2000.  */\n /* { dg-do preprocess } */\n-/* { dg-options \"-Wtraditional -fno-show-column\" } */\n+/* { dg-options \"-Wtraditional\" } */\n \n #if 1U /* { dg-warning \"traditional C rejects\" \"numeric constant suffix\" } */\n #endif"}, {"sha": "6867b88c219c98c98c47387f69af3ce8063f229f", "filename": "gcc/testsuite/gcc.dg/cpp/tr-warn5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn5.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -2,7 +2,7 @@\n    Note, gcc should omit these warnings in system header files.\n    By Kaveh R. Ghazi <ghazi@caip.rutgers.edu> 8/22/2000.  */\n /* { dg-do preprocess } */\n-/* { dg-options \"-Wtraditional -fno-show-column\" } */\n+/* { dg-options \"-Wtraditional\" } */\n \n #if +1 /* { dg-warning \"unary plus operator\" \"unary plus operator\" } */\n #endif"}, {"sha": "d95409ef8f9012d1f224788a2f49aab0ac6da7f2", "filename": "gcc/testsuite/gcc.dg/cpp/tr-warn6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn6.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -2,7 +2,7 @@\n    Note, gcc should omit these warnings in system header files.\n    By Kaveh R. Ghazi <ghazi@caip.rutgers.edu> 9/8/2000.  */\n /* { dg-do preprocess } */\n-/* { dg-options \"-Wtraditional -fno-show-column\" } */\n+/* { dg-options \"-Wtraditional\" } */\n \n #define foo1(h) sdf \"h3\" fds \"h\" /* { dg-warning \"macro argument \\\"h\\\" would be stringified\" \"traditional stringification\" } */\n #define foo2(h2) sdf \"h2\" fds \"h3\" /* { dg-warning \"macro argument \\\"h2\\\" would be stringified\" \"traditional stringification\" } */"}, {"sha": "190cfcfdee65f418903dfa56e6b69c5785e7f7df", "filename": "gcc/testsuite/gcc.dg/cpp/trad/trad.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ftrad.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ftrad.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Ftrad.exp?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -37,7 +37,7 @@ dg-init\n \n # Main loop.\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n-\t\"-fno-show-column\" $DEFAULT_TRADCPPFLAGS\n+\t\"\" $DEFAULT_TRADCPPFLAGS\n \n # All done.\n dg-finish"}, {"sha": "10c49e9d4db57cf5bba3d70ee76ec45328ad5497", "filename": "gcc/testsuite/gcc.dg/cpp/unc4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Func4.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,5 +1,4 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-fno-show-column\" } */\n \n /* Tests for un-terminated conditional diagnostics.\n    Copyright (c) 1999 Free Software Foundation."}, {"sha": "5614e039b22b2fea9daab2b97510748cf93c3bdc", "filename": "gcc/testsuite/gcc.dg/cpp/undef2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fundef2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fundef2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fundef2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,9 +1,7 @@\n /* C99 6.10.8 para 4: None of [the predefined macro names] shall be\n-   the subject of a #define or an #undef preprocessing directive.  We\n-   pass -fno-show-column as otherwise dejagnu gets confused.  */\n+   the subject of a #define or an #undef preprocessing directive.  */\n \n /* { dg-do preprocess } */\n-/* { dg-options \"-fno-show-column\" } */\n \n #undef __DATE__\t\t/* { dg-warning \"undefining\" \"__DATE__\" } */\n #undef __TIME__\t\t/* { dg-warning \"undefining\" \"__TIME__\" } */"}, {"sha": "14ce24909c8fa42e3e93ac4c8da2a2fed6150e3c", "filename": "gcc/testsuite/gcc.dg/pch/counter-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcounter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcounter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcounter-2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -8,7 +8,7 @@\n #endif\n \n #include \"counter-2.h\" /* { dg-warning \"not used because `__COUNTER__' is invalid\" } */\n-/* { dg-error \"counter-2.h: No such file or directory\" \"no such file\" { target *-*-* } 10 } */\n+/* { dg-error \"counter-2.h: No such file or directory\" \"no such file\" { target *-*-* } 0 } */\n /* { dg-error \"one or more PCH files were found, but they were invalid\" \"invalid files\" { target *-*-* } 10 } */\n /* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n "}, {"sha": "b7f22d0dc17a12cd32a69cafc046809b7a487394", "filename": "gcc/testsuite/gcc.dg/pch/valid-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-1.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,8 +1,8 @@\n /* { dg-options \"-I. -Winvalid-pch -g\" } */\n \n #include \"valid-1.h\"/* { dg-warning \"created with -gnone, but used with -g\" } */\n-/* { dg-error \"No such file\" \"no such file\" { target *-*-* } 3 } */\n-/* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 3 } */\n+/* { dg-error \"No such file\" \"no such file\" { target *-*-* } 0 } */\n+/* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 0 } */\n /* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n \n int x;"}, {"sha": "3d8cb1427f3627125181b3836b6c496ade943712", "filename": "gcc/testsuite/gcc.dg/pch/valid-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fvalid-2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,7 +1,7 @@\n /* { dg-options \"-I. -Winvalid-pch -fexceptions\" } */\n \n #include \"valid-2.h\" /* { dg-warning \"settings for -fexceptions do not match\" } */\n-/* { dg-error \"No such file\" \"no such file\" { target *-*-* } 3 } */\n-/* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 3 } */\n+/* { dg-error \"No such file\" \"no such file\" { target *-*-* } 0 } */\n+/* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 0 } */\n /* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n int x;"}, {"sha": "1d31cef0544228a92112a2891872199926aad7b6", "filename": "gcc/testsuite/gcc.dg/pch/warn-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fwarn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fwarn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fwarn-1.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -3,8 +3,8 @@\n #define DEFINED_VALUE 3\n \n #include \"warn-1.h\"/* { dg-warning \"not used because .DEFINED_VALUE. is defined\" } */\n-/* { dg-error \"No such file\" \"no such file\" { target *-*-* } 5 } */\n-/* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 5 } */\n+/* { dg-error \"No such file\" \"no such file\" { target *-*-* } 0 } */\n+/* { dg-error \"they were invalid\" \"invalid files\" { target *-*-* } 0 } */\n /* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */\n \n "}, {"sha": "e1c915ffc925ab81de8570f54d546b07efb09dbf", "filename": "gcc/testsuite/gcc.dg/va-arg-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-2.c?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -5,7 +5,7 @@\n \n #include <varargs.h>  /* { dg-bogus \"varargs.h\" \"missing file\" } */\n \n-/* { dg-message \"\" \"In file included from\" { target *-*-* } 6 } */\n+/* { dg-message \"file included from\" \"file included from\" { target *-*-* } 0 } */\n /* { dg-error \"no longer implements\" \"#error 1\" { target *-*-* } 4 } */\n /* { dg-error \"Revise your code\" \"#error 2\" { target *-*-* } 5 } */\n "}, {"sha": "e906265e40cc883bcf5274d1d5d9b031a36168fa", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -620,6 +620,17 @@ if { [info procs saved-dg-error] == [list] \\\n \n \tprocess-message saved-dg-error \"$gcc_error_prefix\" \"$args\"\n     }\n+\n+    # Override dg-bogus at the same time.  It doesn't handle a prefix\n+    # but its expression should include a column number.  Otherwise the\n+    # line number can match the column number for other messages, leading\n+    # to insanity.\n+    rename dg-bogus saved-dg-bogus\n+\n+    proc dg-bogus { args } {\n+\tupvar dg-messages dg-messages\n+\tprocess-message saved-dg-bogus \"\" $args\n+    }\n }\n \n # Modify the regular expression saved by a DejaGnu message directive to\n@@ -641,20 +652,26 @@ proc process-message { msgproc msgprefix dgargs } {\n \treturn;\n     }\n \n-    # Prepend the message prefix to the regular expression and make\n-    # it match a single line.\n+    # Get the entry for the new message.  Prepend the message prefix to\n+    # the regular expression and make it match a single line.\n     set newentry [lindex ${dg-messages} end]\n     set expmsg [lindex $newentry 2]\n \n-    # If we have a column...\n+    # Handle column numbers from the specified expression (if there is\n+    # one) and set up the search expression that will be used by DejaGnu.\n     if [regexp \"^(\\[0-9\\]+):\" $expmsg \"\" column] {\n-\t# Remove \"COLUMN:\"\n+\t# The expression in the directive included a column number.\n+\t# Remove \"COLUMN:\" from the original expression and move it\n+\t# to the proper place in the search expression.\n \tregsub \"^\\[0-9\\]+:\" $expmsg \"\" expmsg\n-\n-\t# Include the column in the search expression.\n-\tset expmsg \"$column: $msgprefix\\[^\\n]*$expmsg\"\n+\tset expmsg \"$column: $msgprefix\\[^\\n\\]*$expmsg\"\n+    } elseif [string match \"\" [lindex $newentry 0]] {\n+\t# The specified line number is 0; don't expect a column number.\n+\tset expmsg \"$msgprefix\\[^\\n\\]*$expmsg\"\n     } else {\n-\tset expmsg \"$msgprefix\\[^\\n]*$expmsg\"\n+\t# There is no column number in the search expression, but we\n+\t# should expect one in the message itself.\n+\tset expmsg \"\\[0-9\\]+: $msgprefix\\[^\\n\\]*$expmsg\"\n     }\n \n     set newentry [lreplace $newentry 2 2 $expmsg]"}, {"sha": "7023582784a975edffbac34ee90bcab3c8cc06bb", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -1,3 +1,7 @@\n+2009-06-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* include/line-map.h (LAST_SOURCE_COLUMN): New.\n+\n 2009-06-01  Ian Lance Taylor  <iant@google.com>\n \n \t* include/cpp-id-data.h: Add extern \"C\"."}, {"sha": "09e72f14d4b8454a98127aa5a291497861755fb1", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e74fe492f19c8a2bdf1077af1583c74a5ecd7c98/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=e74fe492f19c8a2bdf1077af1583c74a5ecd7c98", "patch": "@@ -158,6 +158,8 @@ extern const struct line_map *linemap_lookup\n    of the #include, or other directive, that caused a map change.  */\n #define LAST_SOURCE_LINE(MAP) \\\n   SOURCE_LINE (MAP, LAST_SOURCE_LINE_LOCATION (MAP))\n+#define LAST_SOURCE_COLUMN(MAP) \\\n+  SOURCE_COLUMN (MAP, LAST_SOURCE_LINE_LOCATION (MAP))\n #define LAST_SOURCE_LINE_LOCATION(MAP) \\\n   ((((MAP)[1].start_location - 1 - (MAP)->start_location) \\\n     & ~((1 << (MAP)->column_bits) - 1))\t\t\t  \\"}]}