{"sha": "6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIxOGIxYTM3YTc2M2IyODMwZjE0NDhlNWExN2NkMzIyNWY3OGViMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-16T13:36:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-16T13:36:07Z"}, "message": "tree-inline.c (insert_init_stmt): Do not call mark_symbols_for_renaming.\n\n2012-05-16  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-inline.c (insert_init_stmt): Do not call\n\tmark_symbols_for_renaming.\n\t(setup_one_parameter): Avoid initializing unused parameters.\n\t(declare_return_variable): Properly handle DECL_BY_REFERENCE\n\treturn vars in SSA form.\n\nFrom-SVN: r187593", "tree": {"sha": "752809a1f846941f2448e11b38d3c7b1eb14bac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/752809a1f846941f2448e11b38d3c7b1eb14bac5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b18b1a37a763b2830f1448e5a17cd3225f78eb3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00d9266fad559adc3b88c5cc311f5b933d9437cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d9266fad559adc3b88c5cc311f5b933d9437cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00d9266fad559adc3b88c5cc311f5b933d9437cb"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "239992be54d26266ddeaf03c763ca7c38bfefd26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b18b1a37a763b2830f1448e5a17cd3225f78eb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b18b1a37a763b2830f1448e5a17cd3225f78eb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "patch": "@@ -1,3 +1,11 @@\n+2012-05-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-inline.c (insert_init_stmt): Do not call\n+\tmark_symbols_for_renaming.\n+\t(setup_one_parameter): Avoid initializing unused parameters.\n+\t(declare_return_variable): Properly handle DECL_BY_REFERENCE\n+\treturn vars in SSA form.\n+\n 2012-05-16  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-flow.h (get_virtual_var): Remove."}, {"sha": "045f194d9725bbde0832b041ff4b01af2606ab85", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b18b1a37a763b2830f1448e5a17cd3225f78eb3/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b18b1a37a763b2830f1448e5a17cd3225f78eb3/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "patch": "@@ -2542,7 +2542,6 @@ insert_init_stmt (copy_body_data *id, basic_block bb, gimple init_stmt)\n \t}\n       gsi_insert_after (&si, init_stmt, GSI_NEW_STMT);\n       gimple_regimplify_operands (init_stmt, &si);\n-      mark_symbols_for_renaming (init_stmt);\n \n       if (!is_gimple_debug (init_stmt) && MAY_HAVE_DEBUG_STMTS)\n \t{\n@@ -2707,14 +2706,17 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n \n       STRIP_USELESS_TYPE_CONVERSION (rhs);\n \n-      /* We want to use MODIFY_EXPR, not INIT_EXPR here so that we\n-\t keep our trees in gimple form.  */\n-      if (def && gimple_in_ssa_p (cfun) && is_gimple_reg (p))\n+      /* If we are in SSA form properly remap the default definition\n+         or omit the initialization if the parameter is unused.  */\n+      if (gimple_in_ssa_p (cfun) && is_gimple_reg (p))\n \t{\n-\t  def = remap_ssa_name (def, id);\n-          init_stmt = gimple_build_assign (def, rhs);\n-\t  SSA_NAME_IS_DEFAULT_DEF (def) = 0;\n-\t  set_default_def (var, NULL);\n+\t  if (def)\n+\t    {\n+\t      def = remap_ssa_name (def, id);\n+\t      init_stmt = gimple_build_assign (def, rhs);\n+\t      SSA_NAME_IS_DEFAULT_DEF (def) = 0;\n+\t      set_default_def (var, NULL);\n+\t    }\n \t}\n       else\n         init_stmt = gimple_build_assign (var, rhs);\n@@ -2974,10 +2976,15 @@ declare_return_variable (copy_body_data *id, tree return_slot, tree modify_dest,\n       if (gimple_in_ssa_p (id->src_cfun))\n \tadd_referenced_var (temp);\n       insert_decl_map (id, result, temp);\n-      /* When RESULT_DECL is in SSA form, we need to use it's default_def\n-\t SSA_NAME.  */\n-      if (gimple_in_ssa_p (id->src_cfun) && gimple_default_def (id->src_cfun, result))\n-        temp = remap_ssa_name (gimple_default_def (id->src_cfun, result), id);\n+      /* When RESULT_DECL is in SSA form, we need to remap and initialize\n+\t it's default_def SSA_NAME.  */\n+      if (gimple_in_ssa_p (id->src_cfun)\n+\t  && is_gimple_reg (result))\n+\t{\n+\t  temp = make_ssa_name (temp, NULL);\n+\t  insert_decl_map (id, gimple_default_def (id->src_cfun, result),\n+\t\t\t   temp);\n+\t}\n       insert_init_stmt (id, entry_bb, gimple_build_assign (temp, var));\n     }\n   else"}]}