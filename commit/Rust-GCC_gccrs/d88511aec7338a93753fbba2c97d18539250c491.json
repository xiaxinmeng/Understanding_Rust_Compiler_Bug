{"sha": "d88511aec7338a93753fbba2c97d18539250c491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg4NTExYWVjNzMzOGE5Mzc1M2ZiYmEyYzk3ZDE4NTM5MjUwYzQ5MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-23T14:08:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-23T14:08:30Z"}, "message": "re PR c++/65879 (Bogus linkage errors for member class of anonymous class)\n\n\tPR c++/65879\n\t* decl.c (grokfndecl): Check the linkage of ctype, not just\n\tTYPE_ANONYMOUS_P.\n\t* tree.c (no_linkage_check): Skip the 'this' pointer.\n\nFrom-SVN: r224844", "tree": {"sha": "b64a9cc3052b051948ce2c2171bb946a4ac81d64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b64a9cc3052b051948ce2c2171bb946a4ac81d64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d88511aec7338a93753fbba2c97d18539250c491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88511aec7338a93753fbba2c97d18539250c491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d88511aec7338a93753fbba2c97d18539250c491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88511aec7338a93753fbba2c97d18539250c491/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "115ef7c52e7cae6101df2f062b4650c82e50072d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115ef7c52e7cae6101df2f062b4650c82e50072d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115ef7c52e7cae6101df2f062b4650c82e50072d"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "d08d02cd3a3ae59187f03957c5eb240e81bb1843", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d88511aec7338a93753fbba2c97d18539250c491", "patch": "@@ -1,5 +1,10 @@\n 2015-06-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/65879\n+\t* decl.c (grokfndecl): Check the linkage of ctype, not just\n+\tTYPE_ANONYMOUS_P.\n+\t* tree.c (no_linkage_check): Skip the 'this' pointer.\n+\n \tPR c++/66501\n \t* class.c (type_has_nontrivial_assignment): New.\n \t* init.c (build_vec_init): Use it."}, {"sha": "a8fc1a57a959f6b55fafb2a3ff91f54b77b601e5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d88511aec7338a93753fbba2c97d18539250c491", "patch": "@@ -7794,7 +7794,7 @@ grokfndecl (tree ctype,\n \n   /* Members of anonymous types and local classes have no linkage; make\n      them internal.  If a typedef is made later, this will be changed.  */\n-  if (ctype && (TYPE_ANONYMOUS_P (ctype)\n+  if (ctype && (!TREE_PUBLIC (TYPE_MAIN_DECL (ctype))\n \t\t|| decl_function_context (TYPE_MAIN_DECL (ctype))))\n     publicp = 0;\n "}, {"sha": "bc8428db0a4825004091851e1f13e17d81136c22", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=d88511aec7338a93753fbba2c97d18539250c491", "patch": "@@ -2299,14 +2299,14 @@ no_linkage_check (tree t, bool relaxed_p)\n       return no_linkage_check (TYPE_PTRMEM_CLASS_TYPE (t), relaxed_p);\n \n     case METHOD_TYPE:\n-      r = no_linkage_check (TYPE_METHOD_BASETYPE (t), relaxed_p);\n-      if (r)\n-\treturn r;\n-      /* Fall through.  */\n     case FUNCTION_TYPE:\n       {\n-\ttree parm;\n-\tfor (parm = TYPE_ARG_TYPES (t);\n+\ttree parm = TYPE_ARG_TYPES (t);\n+\tif (TREE_CODE (t) == METHOD_TYPE)\n+\t  /* The 'this' pointer isn't interesting; a method has the same\n+\t     linkage (or lack thereof) as its enclosing class.  */\n+\t  parm = TREE_CHAIN (parm);\n+\tfor (;\n \t     parm && parm != void_list_node;\n \t     parm = TREE_CHAIN (parm))\n \t  {"}, {"sha": "396edd3de8571785dcf9936563a688b84f31e158", "filename": "gcc/testsuite/g++.dg/abi/anon2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon2.C?ref=d88511aec7338a93753fbba2c97d18539250c491", "patch": "@@ -23,9 +23,9 @@ namespace N2 {\n     typedef struct { } B;\n     struct C {\n       // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N23._31C3fn1ENS0_1BE\" { target c++11 } } }\n-      static void fn1 (B) { } // { dg-error \"no linkage\" \"\" { target { ! c++11 } } }\n+      static void fn1 (B) { }\n       // { dg-final { scan-assembler-not \".weak\\(_definition\\)?\\[ \\t\\]_?_ZN2N23._31C3fn2ES1_\" { target c++11 } } }\n-      static void fn2 (C) { } // { dg-error \"no linkage\" \"\" { target { ! c++11 } } }\n+      static void fn2 (C) { }\n     };\n   } const D;\n "}, {"sha": "12c1ab2039cc272796d6d18fd05bb94db7d4378c", "filename": "gcc/testsuite/g++.dg/other/anon7.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d88511aec7338a93753fbba2c97d18539250c491/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon7.C?ref=d88511aec7338a93753fbba2c97d18539250c491", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/65879\n+\n+static struct\n+{\n+  void f();\n+  struct Inner\n+  {\n+    void g();\n+  };\n+} x;"}]}