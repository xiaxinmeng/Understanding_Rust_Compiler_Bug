{"sha": "a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyMjZkNmNmNjNjOWU0M2NmMzQ3ODMyNzhkZjRiODAzZjZmNWUxYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-25T10:19:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-25T10:19:59Z"}, "message": "[multiple changes]\n\n2013-04-25  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_util.adb (Is_Dependent_Component_Of_Mutable_Object): Test\n\tfor case of selecting from an unexpanded implicit dereference\n\tand do not make a recursive call on such a prefix.\n\n2013-04-25  Doug Rupp  <rupp@adacore.com>\n\n\t* targparm.adb (VXF{_Str}): New tag for vaxfloat.\n\t(Get_Target_Parameters): Handle VXF tag.\n\t* targparm.ads (VAX_Float_On_Target): New boolean.\n\t* system-vms-ia64.ads (VAX_Float): New boolean.\n\t* frontend.adb (Frontend): Handle VAX float boolean.\n\nFrom-SVN: r198284", "tree": {"sha": "bf16c1b2f4661f506fec58731f50f90e5617d96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf16c1b2f4661f506fec58731f50f90e5617d96d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/comments", "author": null, "committer": null, "parents": [{"sha": "42fdc85bfbf3b7eab8b860c2fcfdc3b7696acb2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fdc85bfbf3b7eab8b860c2fcfdc3b7696acb2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42fdc85bfbf3b7eab8b860c2fcfdc3b7696acb2e"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "ec3f06c26244d26d8e9b4eb640dd4c07bc4674d0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "patch": "@@ -1,3 +1,17 @@\n+2013-04-25  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_util.adb (Is_Dependent_Component_Of_Mutable_Object): Test\n+\tfor case of selecting from an unexpanded implicit dereference\n+\tand do not make a recursive call on such a prefix.\n+\n+2013-04-25  Doug Rupp  <rupp@adacore.com>\n+\n+\t* targparm.adb (VXF{_Str}): New tag for vaxfloat.\n+\t(Get_Target_Parameters): Handle VXF tag.\n+\t* targparm.ads (VAX_Float_On_Target): New boolean.\n+\t* system-vms-ia64.ads (VAX_Float): New boolean.\n+\t* frontend.adb (Frontend): Handle VAX float boolean.\n+\n 2013-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.ads, einfo.adb: Remove with and use clauses for Namet."}, {"sha": "08536c42bd7b904cd6d9f13b6d047ced1e45d141", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,6 +56,7 @@ with Sem_Ch8;  use Sem_Ch8;\n with Sem_SCIL;\n with Sem_Elab; use Sem_Elab;\n with Sem_Prag; use Sem_Prag;\n+with Sem_VFpt; use Sem_VFpt;\n with Sem_Warn; use Sem_Warn;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n@@ -181,6 +182,18 @@ begin\n          Config_Pragmas := Empty_List;\n       end if;\n \n+      --  Check for VAX Float\n+\n+      if Targparm.VAX_Float_On_Target then\n+         --  pragma Float_Representation (VAX_Float);\n+         Opt.Float_Format := 'V';\n+\n+         --  pragma Long_Float (G_Float);\n+         Opt.Float_Format_Long := 'G';\n+\n+         Set_Standard_Fpt_Formats;\n+      end if;\n+\n       --  Now deal with specified config pragmas files if there are any\n \n       if Opt.Config_File_Names /= null then"}, {"sha": "d95f69d691e735b17f92fd82ccf9f0db1938cfcb", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "patch": "@@ -8089,10 +8089,20 @@ package body Sem_Util is\n             then\n                return True;\n \n+            --  If the prefix is of an access type at this point, then we want\n+            --  to return False, rather than calling this function recursively\n+            --  on the access object (which itself might be a discriminant-\n+            --  dependent component of some other object, but that isn't\n+            --  relevant to checking the object passed to us). This avoids\n+            --  issuing wrong errors when compiling with -gnatc, where there\n+            --  can be implicit dereferences that have not been expanded.\n+\n+            elsif Is_Access_Type (Etype (Prefix (Object))) then\n+               return False;\n+\n             else\n                return\n                  Is_Dependent_Component_Of_Mutable_Object (Prefix (Object));\n-\n             end if;\n \n          elsif Nkind (Object) = N_Indexed_Component"}, {"sha": "2f1c27c9ff15f5d6eed7185a1929b6105d84eb3e", "filename": "gcc/ada/system-vms-ia64.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Fsystem-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Fsystem-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-ia64.ads?ref=a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --            (OpenVMS 64bit Itanium GCC_ZCX DEC Threads Version)           --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -144,6 +144,7 @@ private\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := True;\n+   VAX_Float                 : constant Boolean := False;\n    Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := True;"}, {"sha": "ce3da1cb73732a45c9ecdfcf3c5bc89239e66b13", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,6 +68,7 @@ package body Targparm is\n       SSL,  --   Suppress_Standard_Library\n       UAM,  --   Use_Ada_Main_Program_Name\n       VMS,  --   OpenVMS\n+      VXF,  --   VAX Float\n       ZCD); --   ZCX_By_Default\n \n    Targparm_Flags : array (Targparm_Tags) of Boolean := (others => False);\n@@ -105,6 +106,7 @@ package body Targparm is\n    SSL_Str : aliased constant Source_Buffer := \"Suppress_Standard_Library\";\n    UAM_Str : aliased constant Source_Buffer := \"Use_Ada_Main_Program_Name\";\n    VMS_Str : aliased constant Source_Buffer := \"OpenVMS\";\n+   VXF_Str : aliased constant Source_Buffer := \"VAX_Float\";\n    ZCD_Str : aliased constant Source_Buffer := \"ZCX_By_Default\";\n \n    --  The following defines a set of pointers to the above strings,\n@@ -142,6 +144,7 @@ package body Targparm is\n       SSL_Str'Access,\n       UAM_Str'Access,\n       VMS_Str'Access,\n+      VXF_Str'Access,\n       ZCD_Str'Access);\n \n    -----------------------\n@@ -600,6 +603,7 @@ package body Targparm is\n                      when SNZ => Signed_Zeros_On_Target              := Result;\n                      when UAM => Use_Ada_Main_Program_Name_On_Target := Result;\n                      when VMS => OpenVMS_On_Target                   := Result;\n+                     when VXF => VAX_Float_On_Target                 := Result;\n                      when ZCD => ZCX_By_Default_On_Target            := Result;\n \n                      goto Line_Loop_Continue;"}, {"sha": "094c340fbeba4a58641390f78b75091b5d2b8ce0", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5226d6cf63c9e43cf34783278df4b803f6f5e1a/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=a5226d6cf63c9e43cf34783278df4b803f6f5e1a", "patch": "@@ -206,6 +206,9 @@ package Targparm is\n    OpenVMS_On_Target : Boolean := False;\n    --  Set to True if target is OpenVMS\n \n+   VAX_Float_On_Target : Boolean := False;\n+   --  Set to True if target float format is VAX Float\n+\n    RTX_RTSS_Kernel_Module_On_Target : Boolean := False;\n    --  Set to True if target is RTSS module for RTX\n "}]}