{"sha": "f0c216e1162d40748b3bc085146f386ca2109f46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjMjE2ZTExNjJkNDA3NDhiM2JjMDg1MTQ2ZjM4NmNhMjEwOWY0Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-12T14:09:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-12T14:09:21Z"}, "message": "re PR tree-optimization/69728 (internal compiler error: in outer_projection_mupa, at graphite-sese-to-poly.c:1175)\n\n2017-10-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69728\n\tRevert\n\t2017-09-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69728\n\t* graphite-sese-to-poly.c (schedule_error): New global.\n\t(add_loop_schedule): Handle empty domain by failing the\n\tschedule.\n\t(build_original_schedule): Handle schedule_error.\n\n\t* graphite-sese-to-poly.c (add_loop_schedule): Handle empty\n\tdomain by returning an unchanged schedule.\n\n\t* gcc.dg/graphite/pr69728.c: Adjust to reflect we can handle\n\tthe loop now.  Remove unrelated undefined behavior.\n\nFrom-SVN: r253677", "tree": {"sha": "ab1faef55dd03278d6edc48d180770c687fdfb0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab1faef55dd03278d6edc48d180770c687fdfb0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0c216e1162d40748b3bc085146f386ca2109f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c216e1162d40748b3bc085146f386ca2109f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c216e1162d40748b3bc085146f386ca2109f46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c216e1162d40748b3bc085146f386ca2109f46/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b989ffb2937ba4b87423bf43ebe0666dd4b08cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b989ffb2937ba4b87423bf43ebe0666dd4b08cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b989ffb2937ba4b87423bf43ebe0666dd4b08cea"}], "stats": {"total": 47, "additions": 30, "deletions": 17}, "files": [{"sha": "cba344bc301d05865151ea5f70f1876ce070fa06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0c216e1162d40748b3bc085146f386ca2109f46", "patch": "@@ -1,3 +1,18 @@\n+2017-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69728\n+\tRevert\n+\t2017-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69728\n+\t* graphite-sese-to-poly.c (schedule_error): New global.\n+\t(add_loop_schedule): Handle empty domain by failing the\n+\tschedule.\n+\t(build_original_schedule): Handle schedule_error.\n+\n+\t* graphite-sese-to-poly.c (add_loop_schedule): Handle empty\n+\tdomain by returning an unchanged schedule.\n+\n 2017-10-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* genrecog.c (validate_pattern): For VEC_SELECT verify that"}, {"sha": "50b6fe8dbb29c570931e82ef8268448e54b088df", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=f0c216e1162d40748b3bc085146f386ca2109f46", "patch": "@@ -1066,8 +1066,6 @@ outer_projection_mupa (__isl_take isl_union_set *set, int n)\n   return isl_multi_union_pw_aff_from_union_pw_multi_aff (data.res);\n }\n \n-static bool schedule_error;\n-\n /* Embed SCHEDULE in the constraints of the LOOP domain.  */\n \n static isl_schedule *\n@@ -1082,11 +1080,9 @@ add_loop_schedule (__isl_take isl_schedule *schedule, loop_p loop,\n     return empty < 0 ? isl_schedule_free (schedule) : schedule;\n \n   isl_union_set *domain = isl_schedule_get_domain (schedule);\n-  /* We cannot apply an empty domain to pbbs in this loop so fail.\n-     ??? Somehow drop pbbs in the loop instead.  */\n+  /* We cannot apply an empty domain to pbbs in this loop so return early.  */\n   if (isl_union_set_is_empty (domain))\n     {\n-      schedule_error = true;\n       isl_union_set_free (domain);\n       return schedule;\n     }\n@@ -1216,8 +1212,6 @@ build_schedule_loop_nest (scop_p scop, int *index, loop_p context_loop)\n static bool\n build_original_schedule (scop_p scop)\n {\n-  schedule_error = false;\n-\n   int i = 0;\n   int n = scop->pbbs.length ();\n   while (i < n)\n@@ -1232,14 +1226,6 @@ build_original_schedule (scop_p scop)\n       scop->original_schedule = add_in_sequence (scop->original_schedule, s);\n     }\n \n-  if (schedule_error)\n-    {\n-      if (dump_file)\n-\tfprintf (dump_file, \"[sese-to-poly] failed to build \"\n-\t\t \"original schedule\\n\");\n-      return false;\n-    }\n-\n   if (dump_file)\n     {\n       fprintf (dump_file, \"[sese-to-poly] original schedule:\\n\");"}, {"sha": "29095e75a51988b555f53a62b74ce28f5b952ac5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0c216e1162d40748b3bc085146f386ca2109f46", "patch": "@@ -1,3 +1,9 @@\n+2017-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69728\n+\t* gcc.dg/graphite/pr69728.c: Adjust to reflect we can handle\n+\tthe loop now.  Remove unrelated undefined behavior.\n+\n 2017-10-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/82159"}, {"sha": "e8cd7bec0a1045e908e6605d8f2046907213fdcc", "filename": "gcc/testsuite/gcc.dg/graphite/pr69728.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c216e1162d40748b3bc085146f386ca2109f46/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c?ref=f0c216e1162d40748b3bc085146f386ca2109f46", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -floop-nest-optimize\" } */\n+/* { dg-options \"-O3 -floop-nest-optimize -fdump-tree-graphite-details\" } */\n \n-int a[1];\n+int a[9];\n int b, c, d, e;\n void\n fn1 ()\n@@ -19,3 +19,9 @@ fn1 ()\n \t}\n     }\n }\n+\n+/* At the moment only ISL figures that if (d) is always true.  We've\n+   run into scheduling issues before here, not being able to handle\n+   empty domains.  */\n+\n+/* { dg-final { scan-tree-dump \"loop nest optimized\" \"graphite\" } }  */"}]}