{"sha": "fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJjMWJjMDk4ZDJlNTdmMjhhMDMwYmExODgwYWRmYmZhMjljZWNhOA==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-05-07T01:08:27Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2005-05-07T01:08:27Z"}, "message": "configure.ac: Use AC_C_BIGENDIAN instead of AC_C_BIGENDIAN_CROSS.\n\n2005-05-06  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* configure.ac: Use AC_C_BIGENDIAN instead of AC_C_BIGENDIAN_CROSS.\n\tUse AC_CHECK_SIZEOF instead of AC_COMPILE_CHECK_SIZEOF.\n\t* aclocal.m4: Don't include accross.m4.\n\t* configure, config.in: Regenerate.\n\nFrom-SVN: r99343", "tree": {"sha": "ba622dba81a5cab0d07d3ba397b8ce4ace92a052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba622dba81a5cab0d07d3ba397b8ce4ace92a052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/comments", "author": null, "committer": null, "parents": [{"sha": "f9c8747643609a4469b59a796887ba7663c87b51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c8747643609a4469b59a796887ba7663c87b51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9c8747643609a4469b59a796887ba7663c87b51"}], "stats": {"total": 164, "additions": 92, "deletions": 72}, "files": [{"sha": "c1e01460a5ceeaae8b74b09ed867bdef5e4d6f37", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "patch": "@@ -1,3 +1,10 @@\n+2005-05-06  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* configure.ac: Use AC_C_BIGENDIAN instead of AC_C_BIGENDIAN_CROSS.\n+\tUse AC_CHECK_SIZEOF instead of AC_COMPILE_CHECK_SIZEOF.\n+\t* aclocal.m4: Don't include accross.m4.\n+\t* configure, config.in: Regenerate.\n+\n 2005-04-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fopen_unlocked.c (unlock_std_streams): New."}, {"sha": "99b50564065e11dca80a2d3b740f29bad7236976", "filename": "libiberty/aclocal.m4", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Faclocal.m4?ref=fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "patch": "@@ -1,4 +1,3 @@\n-sinclude(../config/accross.m4)\n sinclude(../config/acx.m4)\n sinclude(../config/no-executables.m4)\n "}, {"sha": "82643b7c32ddb1676869b0116e983cc5d126bfe3", "filename": "libiberty/config.in", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "patch": "@@ -1,8 +1,5 @@\n /* config.in.  Generated from configure.ac by autoheader.  */\n \n-/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\n-#undef BYTEORDER\n-\n /* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.\n    This function is required for alloca.c support on those systems. */\n #undef CRAY_STACKSEG_END\n@@ -343,10 +340,6 @@\n /* Define to 1 if you have the `__fsetlocking' function. */\n #undef HAVE___FSETLOCKING\n \n-/* Define if the host machine stores words of multi-word integers in\n-   big-endian order. */\n-#undef HOST_WORDS_BIG_ENDIAN\n-\n /* Define if canonicalize_file_name is not declared in system header files. */\n #undef NEED_DECLARATION_CANONICALIZE_FILE_NAME\n \n@@ -389,7 +382,8 @@\n /* Define to an unsigned 64-bit type available in the compiler. */\n #undef UNSIGNED_64BIT_TYPE\n \n-/* whether byteorder is bigendian */\n+/* Define to 1 if your processor stores words with the most significant byte\n+   first (like Motorola and SPARC, unlike Intel and VAX). */\n #undef WORDS_BIGENDIAN\n \n /* Define to empty if `const' does not conform to ANSI C. */"}, {"sha": "5745eb5c163b22f3ab89a82b08a2d767ac51df60", "filename": "libiberty/configure", "status": "modified", "additions": 82, "deletions": 62, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "patch": "@@ -3217,8 +3217,7 @@ echo $ECHO_N \"checking whether byte ordering is bigendian... $ECHO_C\" >&6\n if test \"${ac_cv_c_bigendian+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  ac_cv_c_bigendian=unknown\n-# See if sys/param.h defines the BYTE_ORDER macro.\n+  # See if sys/param.h defines the BYTE_ORDER macro.\n cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n@@ -3227,13 +3226,14 @@ cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n #include <sys/types.h>\n #include <sys/param.h>\n+\n int\n main ()\n {\n-\n #if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN\n  bogus endian macros\n #endif\n+\n   ;\n   return 0;\n }\n@@ -3269,13 +3269,14 @@ cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n #include <sys/types.h>\n #include <sys/param.h>\n+\n int\n main ()\n {\n-\n #if BYTE_ORDER != BIG_ENDIAN\n  not big endian\n #endif\n+\n   ;\n   return 0;\n }\n@@ -3314,19 +3315,79 @@ else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n+# It does not; compile a test program.\n+if test \"$cross_compiling\" = yes; then\n+  # try to guess the endianness by grepping values into an object file\n+  ac_cv_c_bigendian=unknown\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n+short ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\n+void _ascii () { char *s = (char *) ascii_mm; s = (char *) ascii_ii; }\n+short ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n+short ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\n+void _ebcdic () { char *s = (char *) ebcdic_mm; s = (char *) ebcdic_ii; }\n+int\n+main ()\n+{\n+ _ascii (); _ebcdic ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  if grep BIGenDianSyS conftest.$ac_objext >/dev/null ; then\n+  ac_cv_c_bigendian=yes\n+fi\n+if grep LiTTleEnDian conftest.$ac_objext >/dev/null ; then\n+  if test \"$ac_cv_c_bigendian\" = unknown; then\n+    ac_cv_c_bigendian=no\n+  else\n+    # finding both strings is unlikely to happen, but who knows?\n+    ac_cv_c_bigendian=unknown\n+  fi\n+fi\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n-if test $ac_cv_c_bigendian = unknown; then\n-if test \"$cross_compiling\" = yes; then\n-   echo $ac_n \"cross-compiling... \" 2>&6\n else\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-main () {\n+int\n+main ()\n+{\n   /* Are we little or big endian?  From Harbison&Steele.  */\n   union\n   {\n@@ -3360,67 +3421,26 @@ fi\n rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n echo \"$as_me:$LINENO: result: $ac_cv_c_bigendian\" >&5\n echo \"${ECHO_T}$ac_cv_c_bigendian\" >&6\n-if test $ac_cv_c_bigendian = unknown; then\n-echo \"$as_me:$LINENO: checking to probe for byte ordering\" >&5\n-echo $ECHO_N \"checking to probe for byte ordering... $ECHO_C\" >&6\n-\n-cat >conftest.c <<EOF\n-short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n-short ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };\n-void _ascii() { char* s = (char*) ascii_mm; s = (char*) ascii_ii; }\n-short ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };\n-short ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };\n-void _ebcdic() { char* s = (char*) ebcdic_mm; s = (char*) ebcdic_ii; }\n-int main() { _ascii (); _ebcdic (); return 0; }\n-EOF\n- if test -f conftest.c ; then\n-     if ${CC-cc} ${CFLAGS} -c conftest.c -o conftest.o && test -f conftest.o ; then\n-        if test `grep -l BIGenDianSyS conftest.o` ; then\n-           echo $ac_n ' big endian probe OK, ' 1>&6\n-           ac_cv_c_bigendian=yes\n-        fi\n-        if test `grep -l LiTTleEnDian conftest.o` ; then\n-           echo $ac_n ' little endian probe OK, ' 1>&6\n-           if test $ac_cv_c_bigendian = yes ; then\n-            ac_cv_c_bigendian=unknown;\n-           else\n-            ac_cv_c_bigendian=no\n-           fi\n-        fi\n-        echo $ac_n 'guessing bigendian ...  ' >&6\n-     fi\n-  fi\n-echo \"$as_me:$LINENO: result: $ac_cv_c_bigendian\" >&5\n-echo \"${ECHO_T}$ac_cv_c_bigendian\" >&6\n-fi\n-if test $ac_cv_c_bigendian = yes; then\n+case $ac_cv_c_bigendian in\n+  yes)\n \n cat >>confdefs.h <<\\_ACEOF\n #define WORDS_BIGENDIAN 1\n _ACEOF\n-\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HOST_WORDS_BIG_ENDIAN 1\n-_ACEOF\n-\n-  BYTEORDER=4321\n-else\n-  BYTEORDER=1234\n-fi\n-\n-cat >>confdefs.h <<_ACEOF\n-#define BYTEORDER $BYTEORDER\n-_ACEOF\n-\n-if test $ac_cv_c_bigendian = unknown; then\n-  { { echo \"$as_me:$LINENO: error: unknown endianess - sorry, please pre-set ac_cv_c_bigendian\" >&5\n-echo \"$as_me: error: unknown endianess - sorry, please pre-set ac_cv_c_bigendian\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n+ ;;\n+  no)\n+     ;;\n+  *)\n+    { { echo \"$as_me:$LINENO: error: unknown endianness\n+presetting ac_cv_c_bigendian=no (or yes) will help\" >&5\n+echo \"$as_me: error: unknown endianness\n+presetting ac_cv_c_bigendian=no (or yes) will help\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+esac\n \n \n "}, {"sha": "46a80d1ba8bbb78e9a00d35f76ea64dcb44439bd", "filename": "libiberty/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc1bc098d2e57f28a030ba1880adfbfa29ceca8/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=fbc1bc098d2e57f28a030ba1880adfbfa29ceca8", "patch": "@@ -130,7 +130,7 @@ AC_SUBST(OUTPUT_OPTION)\n \n AC_C_CONST\n AC_C_INLINE\n-AC_C_BIGENDIAN_CROSS\n+AC_C_BIGENDIAN\n \n dnl When we start using libtool:\n dnl Default to a non shared library.  This may be overridden by the"}]}