{"sha": "f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQwMWQwZjUyNjUzZmQzMTEyZDhiNmExMmRjNGQ0NzRhMGY5ZmFhYQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-04-11T18:30:52Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-04-11T18:30:52Z"}, "message": "install.texi (hppa): Update links for HP-UX patches.\n\n\t* doc/install.texi (hppa): Update links for HP-UX patches.  Revise\n\tnotes on linker selection and configuration for 64-bit HP-UX port.\n\t* doc/invoke.texi (hppa): Remove hppa text from description for\n\t-ffunction-sections and -fdata-sections.  Document -static, -nolibdld\n\tand -threads options.\n\t* pa-hpux10.h (LIB_SPEC): Add link options to resolve dependency of\n\tlibc.a on libdld.sl when -static is specified and -nolibdld is not\n\tspecified.\n\t* pa64-hpux.h (LIB_SPEC): Likewise.\n\t* pa-hpux11.h (LIB_SPEC): Likewise.\n\t(LINK_SPEC): Add __gcc_plt_call as an undefined symbol when -shared\n\tis not specified.\n\nFrom-SVN: r65471", "tree": {"sha": "8daa2e65d801684aae0137e389dd6168103bccc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8daa2e65d801684aae0137e389dd6168103bccc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/comments", "author": null, "committer": null, "parents": [{"sha": "43451169f8ab49a8c1c2b521eb81657c8cf23c35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43451169f8ab49a8c1c2b521eb81657c8cf23c35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43451169f8ab49a8c1c2b521eb81657c8cf23c35"}], "stats": {"total": 126, "additions": 101, "deletions": 25}, "files": [{"sha": "35c7a34b8b0d879fdff33cb72c3d47d4a1ba42d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "patch": "@@ -1,3 +1,19 @@\n+2003-04-11  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* doc/install.texi (hppa): Update links for HP-UX patches.  Revise\n+\tnotes on linker selection and configuration for 64-bit HP-UX port.\n+\t* doc/invoke.texi (hppa): Remove hppa text from description for\n+\t-ffunction-sections and -fdata-sections.  Document -static, -nolibdld\n+\tand -threads options.\n+\n+\t* pa-hpux10.h (LIB_SPEC): Add link options to resolve dependency of\n+\tlibc.a on libdld.sl when -static is specified and -nolibdld is not\n+\tspecified.\n+\t* pa64-hpux.h (LIB_SPEC): Likewise.\n+\t* pa-hpux11.h (LIB_SPEC): Likewise.\n+\t(LINK_SPEC): Add __gcc_plt_call as an undefined symbol when -shared\n+\tis not specified.\n+\n 2003-04-11  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/darwin-c.c (darwin_pragma_unused): Use lookup_name,"}, {"sha": "9cd7c1b9de760b402049e4405455e87db6fd4539", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "patch": "@@ -82,10 +82,12 @@ Boston, MA 02111-1307, USA.  */\n #define LIB_SPEC \\\n   \"%{!shared:\\\n      %{!p:%{!pg:\\\n-       %{!threads:-lc}\\\n+       %{!threads:-lc %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}\\\n        %{threads:-lcma -lc_r}}}\\\n-     %{p: -L/lib/libp/ -lc}\\\n-     %{pg: -L/lib/libp/ -lc}}\"\n+     %{p: -L/lib/libp/ -lc\\\n+       %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}\\\n+     %{pg: -L/lib/libp/ -lc\\\n+       %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}}\"\n \n #undef THREAD_MODEL_SPEC\n #define THREAD_MODEL_SPEC \"%{!threads:single}%{threads:dce}\""}, {"sha": "b567c982433f0dbb72232f4142167c1baf8b0e18", "filename": "gcc/config/pa/pa-hpux11.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h?ref=f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "patch": "@@ -72,21 +72,26 @@ Boston, MA 02111-1307, USA.  */\n #undef LINK_SPEC\n #if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 1)\n #define LINK_SPEC \\\n-  \"%{!mpa-risc-1-0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }} -z %{mlinker-opt:-O} %{!shared:-u main} %{static:-a archive} %{shared:-b}\"\n+  \"%{!mpa-risc-1-0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }} -z\\\n+   %{mlinker-opt:-O} %{!shared:-u main -u __gcc_plt_call}\\\n+   %{static:-a archive} %{shared:-b}\"\n #else\n #define LINK_SPEC \\\n-  \"-z %{mlinker-opt:-O} %{!shared:-u main} %{static:-a archive} %{shared:-b}\"\n+  \"-z %{mlinker-opt:-O} %{!shared:-u main -u __gcc_plt_call}\\\n+   %{static:-a archive} %{shared:-b}\"\n #endif\n \n /* Like the default, except no -lg.  */\n #undef LIB_SPEC\n #define LIB_SPEC \\\n   \"%{!shared:\\\n      %{!p:%{!pg:\\\n-       %{!threads:-lc}\\\n+       %{!threads:-lc %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}\\\n        %{threads:-lcma -lc_r}}}\\\n-     %{p: -L/lib/libp/ -lc}\\\n-     %{pg: -L/lib/libp/ -lc}}\"\n+     %{p: -L/lib/libp/ -lc\\\n+       %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}\\\n+     %{pg: -L/lib/libp/ -lc\\\n+       %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}}\"\n \n /* Under hpux11, the normal location of the `ld' and `as' programs is the\n    /usr/ccs/bin directory.  */"}, {"sha": "024d18955894d29862df25f463296c4e20d35db2", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "patch": "@@ -47,10 +47,12 @@ Boston, MA 02111-1307, USA.  */\n #undef LIB_SPEC\n #define LIB_SPEC \\\n   \"%{!shared:\\\n-     %{!p:\\\n-       %{!pg: %{!threads:-lc} %{threads:-lcma -lc_r}}\\\n-       %{pg: -L/usr/lib/pa20_64/libp/ -lgprof -lc}}\\\n-     %{p: -L/usr/lib/pa20_64/libp/ -lprof -lc}} /usr/lib/pa20_64/milli.a\"\n+     %{!p:%{!pg: -lc %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}}\\\n+     %{pg: -L/usr/lib/pa20_64/libp/ -lgprof -lc\\\n+       %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}\\\n+     %{p: -L/usr/lib/pa20_64/libp/ -lprof -lc\\\n+       %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}}\\\n+   /usr/lib/pa20_64/milli.a\"\n \n /* Under hpux11, the normal location of the `ld' and `as' programs is the\n    /usr/ccs/bin directory.  */"}, {"sha": "b379c749ff42d77757aa6f07e1d0c36bdad934b2", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "patch": "@@ -2177,15 +2177,15 @@ charge:\n @itemize @bullet\n @item\n @html\n-<a href=\"http://us-support.external.hp.com\">US, Canada, Asia-Pacific, and\n+<a href=\"http://us.itrc.hp.com/service/home/home.do\">US, Canada, Asia-Pacific, and\n Latin-America</a>\n @end html\n @ifnothtml\n-@uref{http://us-support.external.hp.com,,}US, Canada, Asia-Pacific, and\n-Latin-America\n+@uref{http://us.itrc.hp.com/service/home/home.do,,} US, Canada, Asia-Pacific,\n+and Latin-America.\n @end ifnothtml\n @item\n-@uref{http://europe-support.external.hp.com,,Europe}\n+@uref{http://europe.itrc.hp.com/service/home/home.do,,} Europe.\n @end itemize\n \n The HP assembler on these systems is much better than the hpux9 assembler,\n@@ -2211,6 +2211,13 @@ set your @env{PATH} or define @env{CC} so that configure finds an appropriate\n compiler for the initial bootstrap.  Different prefixes must be used if\n both ports are to be installed on the same system.\n \n+It is best to explicitly configure the @samp{hppa64-hp-hpux11*} target\n+with the @option{--with-ld=@dots{}} option.  We support both the HP\n+and GNU linkers for this target.  The two linkers require different\n+link commands.  Thus, it's not possible to switch linkers during a\n+GCC build.  This has been been reported to occur in a unified build\n+of binutils and GCC.\n+\n GCC 2.95.x is not supported under HP-UX 11 and cannot be used to\n compile GCC 3.0 and up.  Refer to @uref{binaries.html,,binaries} for\n information about obtaining precompiled GCC binaries for HP-UX.\n@@ -2244,10 +2251,29 @@ by the HP linker.  So, again a recent linker patch is recommended.\n The HP assembler has many limitations and is not recommended for either\n the 32 or 64-bit ports.  For example, it does not support weak symbols\n or alias definitions.  As a result, explicit template instantiations\n-are required when using C++.  You also can't generate debugging information\n-when using the HP assembler.  Either the HP or GNU linker can be used\n-with the 64-bit port but it may be necessary to use the GNU linker\n-when dwarf2 exception support is implemented.\n+are required when using C++.  This will make it difficult if not\n+impossible to build many C++ applications.  You also can't generate\n+debugging information when using the HP assembler with GCC.\n+\n+There are a number of issues to consider in selecting which linker to\n+use with the 64-bit port.  The  GNU 64-bit linker can only create dynamic\n+binaries.  The @option{-static} option causes linking with archive\n+libraries but doesn't produce a truly static binary.  Dynamic binaries\n+still require final binding by the dynamic loader to resolve a set of\n+dynamic-loader-defined symbols.  The default behavior of the HP linker\n+is the same as the GNU linker.  However, it can generate true 64-bit\n+static binaries using the @option{+compat} option.\n+\n+The HP 64-bit linker doesn't support linkonce semantics.  As a\n+result, C++ programs have many more sections than they should.\n+\n+The GNU 64-bit linker has some issues with shared library support\n+and exceptions.  As a result, we only support libgcc in archive\n+format.  For similar reasons, dwarf2 unwind and exception support\n+are disabled.  The GNU linker also has problems creating binaries\n+with @option{-static}.  It doesn't provide stubs for internal\n+calls to global functions in shared libraries, so these calls\n+can't be overloaded.\n \n There are several possible approaches to building the distribution.\n Binutils can be built first using the HP tools.  Then, the GCC"}, {"sha": "bfa38fb1941a4ff710839aded9657fa4ace281c0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "patch": "@@ -504,7 +504,8 @@ in the following sections.\n -mno-portable-runtime  -mno-soft-float @gol\n -mno-space-regs  -msoft-float  -mpa-risc-1-0 @gol\n -mpa-risc-1-1  -mpa-risc-2-0  -mportable-runtime @gol\n--mschedule=@var{cpu-type}  -mspace-regs  -msio  -mwsio}\n+-mschedule=@var{cpu-type}  -mspace-regs  -msio  -mwsio @gol\n+-nolibdld  -static  -threads}\n \n @emph{Intel 960 Options}\n @gccoptlist{-m@var{cpu-type}  -masm-compat  -mclean-linkage @gol\n@@ -4367,10 +4368,10 @@ function or the name of the data item determines the section's name\n in the output file.\n \n Use these options on systems where the linker can perform optimizations\n-to improve locality of reference in the instruction space.  HPPA\n-processors running HP-UX and SPARC processors running Solaris 2 have\n-linkers with such optimizations.  Other systems using the ELF object format\n-as well as AIX may have these optimizations in the future.\n+to improve locality of reference in the instruction space.  Most systems\n+using the ELF object format and SPARC processors running Solaris 2 have\n+linkers with such optimizations.  AIX may have these optimizations in\n+the future.\n \n Only use these options when there are significant benefits from doing\n so.  When you specify these options, the assembler and linker will\n@@ -8576,6 +8577,30 @@ symbol-difference or pc-relative calls should be relatively small.\n However, an indirect call is used on 32-bit ELF systems in pic code\n and it is quite long.\n \n+@item -nolibdld\n+@opindex nolibdld\n+Suppress the generation of link options to search libdld.sl when the\n+@option{-static} option is specified on HP-UX 10 and later.\n+\n+@item -static\n+@opindex static\n+The HP-UX implementation of setlocale in libc has a dependency on\n+libdld.sl.  There isn't an archive version of libdld.sl.  Thus,\n+when the @option{-static} option is specified, special link options\n+are needed to resolve this dependency.\n+\n+On HP-UX 10 and later, the GCC driver adds the necessary options to\n+link with libdld.sl when the @option{-static} option is specified.\n+This causes the resulting binary to be dynamic.  On the 64-bit port,\n+the linkers generate dynamic binaries by default in any case.  The\n+@option{-nolibdld} option can be used to prevent the GCC driver from\n+adding these link options.\n+\n+@item -threads\n+@opindex threads\n+Add support for multithreading with the @dfn{dce thread} library\n+under HP-UX.  This option sets flags for both the preprocessor and\n+linker.\n @end table\n \n @node Intel 960 Options"}]}