{"sha": "0c6072a3fc25e656c606247df51a448ab21326c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2MDcyYTNmYzI1ZTY1NmM2MDYyNDdkZjUxYTQ0OGFiMjEzMjZjMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-02-29T22:45:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-02-29T22:45:41Z"}, "message": "re PR tree-optimization/69999 (ICE in verify_loop_structure, at cfgloop.c:1639 (error: loop with header 3 not in loop tree) at -O3 or -Ofast)\n\n\tPR tree-optimization/69999\n\t* gimple-ssa-split-paths.c (split_paths): When duplicating a block\n\twith an outgoing edge marked with EDGE_IRREDUCIBLE_LOOP, schedule\n\tloop cleanups.\n\n\tPR tree-optimization/69999\n\t* gcc.c-torture/compile/pr69999.c: New test.\n\nFrom-SVN: r233824", "tree": {"sha": "ec4fb7504f0481f105f0de78e43f4a26a0986580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec4fb7504f0481f105f0de78e43f4a26a0986580"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c6072a3fc25e656c606247df51a448ab21326c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6072a3fc25e656c606247df51a448ab21326c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6072a3fc25e656c606247df51a448ab21326c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6072a3fc25e656c606247df51a448ab21326c0/comments", "author": null, "committer": null, "parents": [{"sha": "8cfb576a289ce5676d7fa07744aadc0107902718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfb576a289ce5676d7fa07744aadc0107902718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfb576a289ce5676d7fa07744aadc0107902718"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "653b51e764b26d20ce82003804080470a9db8c7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c6072a3fc25e656c606247df51a448ab21326c0", "patch": "@@ -1,3 +1,10 @@\n+2016-02-28  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/69999\n+\t* gimple-ssa-split-paths.c (split_paths): When duplicating a block\n+\twith an outgoing edge marked with EDGE_IRREDUCIBLE_LOOP, schedule\n+\tloop cleanups.\n+\n 2016-02-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69994"}, {"sha": "d566f64c70be4acc52582716d5637dcf9ff513df", "filename": "gcc/gimple-ssa-split-paths.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2Fgimple-ssa-split-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2Fgimple-ssa-split-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-split-paths.c?ref=0c6072a3fc25e656c606247df51a448ab21326c0", "patch": "@@ -294,6 +294,24 @@ split_paths ()\n \t  basic_block pred0 = EDGE_PRED (bb, 0)->src;\n \t  transform_duplicate (pred0, bb);\n \t  changed = true;\n+\n+\t  /* If BB has an outgoing edge marked as IRREDUCIBLE, then\n+\t     duplicating BB may result in an irreducible region turning\n+\t     into a natural loop.\n+\n+\t     Long term we might want to hook this into the block\n+\t     duplication code, but as we've seen with similar changes\n+\t     for edge removal, that can be somewhat risky.  */\n+\t  if (EDGE_SUCC (bb, 0)->flags & EDGE_IRREDUCIBLE_LOOP\n+\t      || EDGE_SUCC (bb, 1)->flags & EDGE_IRREDUCIBLE_LOOP)\n+\t    {\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t  fprintf (dump_file,\n+\t\t\t   \"Join block %d has EDGE_IRREDUCIBLE_LOOP set.  \"\n+\t\t\t   \"Scheduling loop fixups.\\n\",\n+\t\t\t   bb->index);\n+\t      loops_state_set (LOOPS_NEED_FIXUP);\n+\t    }\n \t}\n     }\n "}, {"sha": "49577ee87a3c3f21dc3c5b7857c81b9e8e16040b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c6072a3fc25e656c606247df51a448ab21326c0", "patch": "@@ -1,3 +1,8 @@\n+2016-02-29  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/69999\n+\t* gcc.c-torture/compile/pr69999.c: New test.\n+\n 2016-02-29  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/69652"}, {"sha": "5659ce48a17adf3cf584837fa46e2c746d1e15fd", "filename": "gcc/testsuite/gcc.c-torture/compile/pr69999.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69999.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6072a3fc25e656c606247df51a448ab21326c0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69999.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr69999.c?ref=0c6072a3fc25e656c606247df51a448ab21326c0", "patch": "@@ -0,0 +1,16 @@\n+int uh;\n+\n+void\n+ha(void)\n+{\n+  while (uh) {\n+    for (uh = 0; uh < 1; ++uh) {\n+      uh = 0;\n+      if (uh != 0)\n+ ts:\n+        uh %= uh;\n+    }\n+    ++uh;\n+  }\n+  goto ts;\n+}"}]}