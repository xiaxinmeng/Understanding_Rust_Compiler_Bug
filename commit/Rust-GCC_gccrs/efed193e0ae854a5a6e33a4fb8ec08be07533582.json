{"sha": "efed193e0ae854a5a6e33a4fb8ec08be07533582", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlZDE5M2UwYWU4NTRhNWE2ZTMzYTRmYjhlYzA4YmUwNzUzMzU4Mg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-08-16T23:10:46Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-08-16T23:10:46Z"}, "message": "re PR c/27697 (incorrect warning about constness of pointer to an array in a const struct)\n\n\tPR c/27697\n\t* c-typeck.c (build_component_ref): Combine qualifiers of\n\tstructure or union and field.\n\ntestsuite:\n\t* gcc.dg/qual-component-1.c: New test.\n\nFrom-SVN: r116194", "tree": {"sha": "6ac800b87107d1178c33b15e20698b980d2eb2b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ac800b87107d1178c33b15e20698b980d2eb2b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efed193e0ae854a5a6e33a4fb8ec08be07533582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efed193e0ae854a5a6e33a4fb8ec08be07533582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efed193e0ae854a5a6e33a4fb8ec08be07533582", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efed193e0ae854a5a6e33a4fb8ec08be07533582/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5d1d25696cfec7bbc88ff565ad8f444116031ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5d1d25696cfec7bbc88ff565ad8f444116031ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5d1d25696cfec7bbc88ff565ad8f444116031ec"}], "stats": {"total": 251, "additions": 250, "deletions": 1}, "files": [{"sha": "29fa23fa3c4ed4dc3734c2dbb96353da0161ff0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efed193e0ae854a5a6e33a4fb8ec08be07533582", "patch": "@@ -1,3 +1,9 @@\n+2006-08-16  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/27697\n+\t* c-typeck.c (build_component_ref): Combine qualifiers of\n+\tstructure or union and field.\n+\n 2006-08-16  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR rtl-optimization/28071"}, {"sha": "dee7414e43aea402cb5dd1af358d439f9b807fa9", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=efed193e0ae854a5a6e33a4fb8ec08be07533582", "patch": "@@ -1809,11 +1809,17 @@ build_component_ref (tree datum, tree component)\n       do\n \t{\n \t  tree subdatum = TREE_VALUE (field);\n+\t  int quals;\n+\t  tree subtype;\n \n \t  if (TREE_TYPE (subdatum) == error_mark_node)\n \t    return error_mark_node;\n \n-\t  ref = build3 (COMPONENT_REF, TREE_TYPE (subdatum), datum, subdatum,\n+\t  quals = TYPE_QUALS (strip_array_types (TREE_TYPE (subdatum)));\n+\t  quals |= TYPE_QUALS (TREE_TYPE (datum));\n+\t  subtype = c_build_qualified_type (TREE_TYPE (subdatum), quals);\n+\n+\t  ref = build3 (COMPONENT_REF, subtype, datum, subdatum,\n \t\t\tNULL_TREE);\n \t  if (TREE_READONLY (datum) || TREE_READONLY (subdatum))\n \t    TREE_READONLY (ref) = 1;"}, {"sha": "ce97baf796594042f0804fe03788a8fd0f9ffe8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efed193e0ae854a5a6e33a4fb8ec08be07533582", "patch": "@@ -1,3 +1,8 @@\n+2006-08-16  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/27697\n+\t* gcc.dg/qual-component-1.c: New test.\n+\n 2006-08-16  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/28593"}, {"sha": "58054348173e5bd10a971f1829f7324709236f7a", "filename": "gcc/testsuite/gcc.dg/qual-component-1.c", "status": "added", "additions": 232, "deletions": 0, "changes": 232, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2Ftestsuite%2Fgcc.dg%2Fqual-component-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efed193e0ae854a5a6e33a4fb8ec08be07533582/gcc%2Ftestsuite%2Fgcc.dg%2Fqual-component-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fqual-component-1.c?ref=efed193e0ae854a5a6e33a4fb8ec08be07533582", "patch": "@@ -0,0 +1,232 @@\n+/* Test qualification of components of qualified structures or unions:\n+   should have qualifiers from both the component and the structure or\n+   union.  Bug 27697 from Frank Victor Fischer.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct s {\n+  int a;\n+  int b[1];\n+  int c[2][3];\n+  const int d;\n+  const int e[1];\n+  const int f[2][3];\n+};\n+\n+union u {\n+  int a;\n+  int b[1];\n+  int c[2][3];\n+  const int d;\n+  const int e[1];\n+  const int f[2][3];\n+};\n+\n+struct cs {\n+  const struct s x;\n+};\n+\n+struct s v1;\n+union u *v2;\n+const struct s *v3;\n+const union u v4;\n+struct cs v5;\n+\n+void\n+f (void)\n+{\n+  v1.a = 0;\n+  v1.b[0] = 0;\n+  *v1.b = 0;\n+  v1.c[0][0] = 0;\n+  *v1.c[0] = 0;\n+  **v1.c = 0;\n+  v1.d = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v1.e[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v1.e = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v1.f[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v1.f[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v1.f = 0; /* { dg-error \"error: assignment of read-only\" } */\n+\n+  v2->a = 0;\n+  v2->b[0] = 0;\n+  *v2->b = 0;\n+  v2->c[0][0] = 0;\n+  *v2->c[0] = 0;\n+  **v2->c = 0;\n+  v2->d = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v2->e[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v2->e = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v2->f[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v2->f[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v2->f = 0; /* { dg-error \"error: assignment of read-only\" } */\n+\n+  v3->a = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v3->b[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v3->b = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v3->c[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v3->c[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v3->c = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v3->d = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v3->e[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v3->e = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v3->f[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v3->f[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v3->f = 0; /* { dg-error \"error: assignment of read-only\" } */\n+\n+  v4.a = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v4.b[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v4.b = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v4.c[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v4.c[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v4.c = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v4.d = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v4.e[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v4.e = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v4.f[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v4.f[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v4.f = 0; /* { dg-error \"error: assignment of read-only\" } */\n+\n+  v5.x.a = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v5.x.b[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v5.x.b = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v5.x.c[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v5.x.c[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v5.x.c = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v5.x.d = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v5.x.e[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v5.x.e = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  v5.x.f[0][0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  *v5.x.f[0] = 0; /* { dg-error \"error: assignment of read-only\" } */\n+  **v5.x.f = 0; /* { dg-error \"error: assignment of read-only\" } */\n+}\n+\n+void\n+g (void)\n+{\n+  {\n+    int *a = &v1.a;\n+    int (*b)[1] = &v1.b;\n+    int (*c)[2][3] = &v1.c;\n+    int (*cc)[3] = v1.c;\n+    const int (*ff)[3] = v1.c; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    a = &v1.a;\n+    b = &v1.b;\n+    c = &v1.c;\n+    cc = v1.c;\n+    ff = v1.c; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+  {\n+    const int *d = &v1.d;\n+    const int (*e)[1] = &v1.e;\n+    const int (*f)[2][3] = &v1.f;\n+    const int (*ff)[3] = v1.f;\n+    int (*cc)[3] = v1.f; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v1.d;\n+    e = &v1.e;\n+    f = &v1.f;\n+    ff = v1.f;\n+    cc = v1.f; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+\n+  {\n+    int *a = &v2->a;\n+    int (*b)[1] = &v2->b;\n+    int (*c)[2][3] = &v2->c;\n+    int (*cc)[3] = v2->c;\n+    const int (*ff)[3] = v2->c; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    a = &v2->a;\n+    b = &v2->b;\n+    c = &v2->c;\n+    cc = v2->c;\n+    ff = v2->c; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+  {\n+    const int *d = &v2->d;\n+    const int (*e)[1] = &v2->e;\n+    const int (*f)[2][3] = &v2->f;\n+    const int (*ff)[3] = v2->f;\n+    int (*cc)[3] = v2->f; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v2->d;\n+    e = &v2->e;\n+    f = &v2->f;\n+    ff = v2->f;\n+    cc = v2->f; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+\n+  {\n+    const int *d = &v3->a;\n+    const int (*e)[1] = &v3->b;\n+    const int (*f)[2][3] = &v3->c;\n+    const int (*ff)[3] = v3->c;\n+    int (*cc)[3] = v3->c; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v3->a;\n+    e = &v3->b;\n+    f = &v3->c;\n+    ff = v3->c;\n+    cc = v3->c; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+  {\n+    const int *d = &v3->d;\n+    const int (*e)[1] = &v3->e;\n+    const int (*f)[2][3] = &v3->f;\n+    const int (*ff)[3] = v3->f;\n+    int (*cc)[3] = v3->f; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v3->d;\n+    e = &v3->e;\n+    f = &v3->f;\n+    ff = v3->f;\n+    cc = v3->f; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+\n+  {\n+    const int *d = &v4.a;\n+    const int (*e)[1] = &v4.b;\n+    const int (*f)[2][3] = &v4.c;\n+    const int (*ff)[3] = v4.c;\n+    int (*cc)[3] = v4.c; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v4.a;\n+    e = &v4.b;\n+    f = &v4.c;\n+    ff = v4.c;\n+    cc = v4.c; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+  {\n+    const int *d = &v4.d;\n+    const int (*e)[1] = &v4.e;\n+    const int (*f)[2][3] = &v4.f;\n+    const int (*ff)[3] = v4.f;\n+    int (*cc)[3] = v4.f; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v4.d;\n+    e = &v4.e;\n+    f = &v4.f;\n+    ff = v4.f;\n+    cc = v4.f; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+\n+  {\n+    const int *d = &v5.x.a;\n+    const int (*e)[1] = &v5.x.b;\n+    const int (*f)[2][3] = &v5.x.c;\n+    const int (*ff)[3] = v5.x.c;\n+    int (*cc)[3] = v5.x.c; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v5.x.a;\n+    e = &v5.x.b;\n+    f = &v5.x.c;\n+    ff = v5.x.c;\n+    cc = v5.x.c; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+  {\n+    const int *d = &v5.x.d;\n+    const int (*e)[1] = &v5.x.e;\n+    const int (*f)[2][3] = &v5.x.f;\n+    const int (*ff)[3] = v5.x.f;\n+    int (*cc)[3] = v5.x.f; /* { dg-warning \"warning: initialization from incompatible pointer type\" } */\n+    d = &v5.x.d;\n+    e = &v5.x.e;\n+    f = &v5.x.f;\n+    ff = v5.x.f;\n+    cc = v5.x.f; /* { dg-warning \"warning: assignment from incompatible pointer type\" } */\n+  }\n+}"}]}