{"sha": "19b293bfa70872c850f2d399fc2facf4687e76ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTliMjkzYmZhNzA4NzJjODUwZjJkMzk5ZmMyZmFjZjQ2ODdlNzZlZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-08-24T08:06:06Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-08-24T08:06:06Z"}, "message": "PR 87073/bootstrap\n\n\tPR 87073/bootstrap\n\t* wide-int-range.cc (wide_int_range_div): Do not ignore result\n\tfrom wide_int_range_multiplicative_op.\n\nFrom-SVN: r263828", "tree": {"sha": "62ecfe9d7ef0cc3d7af74f085bf980a221544213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62ecfe9d7ef0cc3d7af74f085bf980a221544213"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19b293bfa70872c850f2d399fc2facf4687e76ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b293bfa70872c850f2d399fc2facf4687e76ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b293bfa70872c850f2d399fc2facf4687e76ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b293bfa70872c850f2d399fc2facf4687e76ee/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "17a4648c66299d42ae6b224fa8208f9f65443f59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a4648c66299d42ae6b224fa8208f9f65443f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17a4648c66299d42ae6b224fa8208f9f65443f59"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "7c757c0ef41330870aac41ef22959001d8542fc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19b293bfa70872c850f2d399fc2facf4687e76ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19b293bfa70872c850f2d399fc2facf4687e76ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19b293bfa70872c850f2d399fc2facf4687e76ee", "patch": "@@ -1,3 +1,9 @@\n+2018-08-24  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR 87073/bootstrap\n+\t* wide-int-range.cc (wide_int_range_div): Do not ignore result\n+\tfrom wide_int_range_multiplicative_op.\n+\n 2018-08-23  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* tree-vect-data-refs.c (vect_grouped_store_supported): Fix typo"}, {"sha": "3cdcede04cdaf588c3604d53f4f22144f595f664", "filename": "gcc/wide-int-range.cc", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19b293bfa70872c850f2d399fc2facf4687e76ee/gcc%2Fwide-int-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19b293bfa70872c850f2d399fc2facf4687e76ee/gcc%2Fwide-int-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fwide-int-range.cc?ref=19b293bfa70872c850f2d399fc2facf4687e76ee", "patch": "@@ -687,14 +687,11 @@ wide_int_range_div (wide_int &wmin, wide_int &wmax,\n \n   /* If we know we won't divide by zero, just do the division.  */\n   if (!wide_int_range_includes_zero_p (divisor_min, divisor_max, sign))\n-    {\n-      wide_int_range_multiplicative_op (wmin, wmax, code, sign, prec,\n-\t\t\t\t\tdividend_min, dividend_max,\n-\t\t\t\t\tdivisor_min, divisor_max,\n-\t\t\t\t\toverflow_undefined,\n-\t\t\t\t\toverflow_wraps);\n-      return true;\n-    }\n+    return wide_int_range_multiplicative_op (wmin, wmax, code, sign, prec,\n+\t\t\t\t\t     dividend_min, dividend_max,\n+\t\t\t\t\t     divisor_min, divisor_max,\n+\t\t\t\t\t     overflow_undefined,\n+\t\t\t\t\t     overflow_wraps);\n \n   /* If flag_non_call_exceptions, we must not eliminate a division\n      by zero.  */"}]}