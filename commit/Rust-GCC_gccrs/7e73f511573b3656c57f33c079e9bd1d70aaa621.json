{"sha": "7e73f511573b3656c57f33c079e9bd1d70aaa621", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3M2Y1MTE1NzNiMzY1NmM1N2YzM2MwNzllOWJkMWQ3MGFhYTYyMQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-05T00:16:42Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-05T00:16:42Z"}, "message": "Daily bump.", "tree": {"sha": "957d5c987382306bd5fed5b0f47f947e1a03df2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/957d5c987382306bd5fed5b0f47f947e1a03df2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e73f511573b3656c57f33c079e9bd1d70aaa621", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e73f511573b3656c57f33c079e9bd1d70aaa621", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e73f511573b3656c57f33c079e9bd1d70aaa621", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e73f511573b3656c57f33c079e9bd1d70aaa621/comments", "author": null, "committer": null, "parents": [{"sha": "a000eb5918e09d28838ef572f4eea924d32db09b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a000eb5918e09d28838ef572f4eea924d32db09b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a000eb5918e09d28838ef572f4eea924d32db09b"}], "stats": {"total": 258, "additions": 257, "deletions": 1}, "files": [{"sha": "11647e1ba93e2cb3caa41c865d850bcca9d5c174", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,7 @@\n+2021-01-04  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n+\n+\t* MAINTAINERS: Update my email address.\n+\n 2020-12-17  Marius Hillenbrand  <mhillen@linux.ibm.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "75493c3191ac2554d8177045d771846c803df27b", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,8 @@\n+2021-01-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* resolver.cc (module_resolver::cmi_response): Remove\n+\tstd::move of temporary.\n+\n 2020-12-23  Nathan Sidwell  <nathan@acm.org>\n \n \tPR bootstrap/98324"}, {"sha": "ffe6b8efbd0c686955aa9cfd7026a1df677eb2b6", "filename": "contrib/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,22 @@\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* update-copyright.py: Add AMD and Ulf Adams as external authors.\n+\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* update-copyright.py: Use 8 spaces instead of tab to indent.\n+\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Add --update-copyright option which adds:\n+\t\"Update copyright years.\" to ChangeLog files belonging\n+\tto a modified file.\n+\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Skip Update copyright\n+\tyears commits.\n+\n 2020-12-21  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Add new error for quoted"}, {"sha": "57dc689b3fd7bfdc8651f69c9fbb21beb22bf74f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,87 @@\n+2021-01-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/95401\n+\t* config/aarch64/aarch64-sve-builtins.cc\n+\t(gimple_folder::load_store_cookie): Use bits rather than bytes\n+\tfor the alignment argument to IFN_MASK_LOAD and IFN_MASK_STORE.\n+\t* gimple-fold.c (gimple_fold_mask_load_store_mem_ref): Likewise.\n+\t* tree-vect-stmts.c (vectorizable_store): Likewise.\n+\t(vectorizable_load): Likewise.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98308\n+\t* tree-vect-stmts.c (vectorizable_load): Set invariant mask\n+\tSLP vectype.\n+\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/95771\n+\t* tree-ssa-loop-niter.c (number_of_iterations_popcount): Handle types\n+\twith precision smaller than int's precision and types with precision\n+\ttwice as large as long long.  Formatting fixes.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98464\n+\t* tree-ssa-sccvn.c (vn_valueize_for_srt): Rename from ...\n+\t(vn_valueize_wrapper): ... this.  Temporarily adjust vn_context_bb.\n+\t(process_bb): Adjust.\n+\n+2021-01-04  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\tPR other/98437\n+\t* doc/invoke.texi (-fsanitize=address): Fix wording describing\n+\tclash with -fsanitize=hwaddress.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98282\n+\t* tree-ssa-sccvn.c (vn_get_stmt_kind): Classify tcc_reference on\n+\tinvariants as VN_NARY.\n+\n+2021-01-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/89057\n+\t* config/aarch64/aarch64-simd.md (aarch64_combine<mode>): Accept\n+\taarch64_simd_reg_or_zero for operand 2.  Use the combinez patterns\n+\tto handle zero operands.\n+\n+2021-01-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c (offset_6bit_signed_scaled_p): New function.\n+\t(offset_6bit_unsigned_scaled_p): Fix typo in comment.\n+\t(aarch64_sve_prefetch_operand_p): Accept MUL VLs in the range\n+\t[-32, 31].\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98393\n+\t* tree-vect-slp.c (vect_build_slp_tree): Properly zero matches\n+\twhen hitting the limit.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98291\n+\t* tree-vect-loop.c (vectorizable_reduction): Bypass\n+\tassociativity check for SLP reductions with VF 1.\n+\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96782\n+\t* match.pd (x == ~x -> false, x != ~x -> true): New simplifications.\n+\n+2021-01-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* collect-utils.c (collect_execute): Check dumppfx.\n+\t* collect2.c (maybe_run_lto_and_relink, do_link): Pass atsuffix\n+\tto collect_execute.\n+\t(do_link): Add new parameter atsuffix.\n+\t(main): Handle -dumpdir option.  Skip one argument for\n+\t-o, -isystem and -B options.\n+\t* gcc.c (make_at_file): New helper function.\n+\t(close_at_file): Use it.\n+\n 2021-01-02  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.h (MIN_LD64_NO_COAL_SECTS): Adjust."}, {"sha": "fc775264780db0acf00d5a7c06d51ced6b6a55c8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1 +1 @@\n-20210104\n+20210105"}, {"sha": "5298365896f5be397764d94a7a7f630376bb5500", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,7 @@\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* ChangeLog-2018: Remove duplicate ChangeLog entries.\n+\n 2021-01-01  Harald Anlauf  <anlauf@gmx.de>\n \n \t* class.c (gfc_find_vtab): Add check on attribute is_class."}, {"sha": "552c190b39fd325347e96c8425779e02d2af6998", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,130 @@\n+2021-01-04  Martin Uecker  <muecker@gwdg.de>\n+\n+\tPR c/98029\n+\t* gcc.dg/pr98029.c: New test.\n+\n+2021-01-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/modules/binding-1_a.H: New.\n+\t* g++.dg/modules/binding-1_b.H: New.\n+\t* g++.dg/modules/binding-1_c.C: New.\n+\t* g++.dg/modules/binding-2.H: New.\n+\t* g++.dg/modules/builtin-3_a.C: New.\n+\t* g++.dg/modules/global-2_a.C: New.\n+\t* g++.dg/modules/global-2_b.C: New.\n+\t* g++.dg/modules/global-3_a.C: New.\n+\t* g++.dg/modules/global-3_b.C: New.\n+\t* g++.dg/modules/hello-1_a.C: New.\n+\t* g++.dg/modules/hello-1_b.C: New.\n+\t* g++.dg/modules/iostream-1_a.H: New.\n+\t* g++.dg/modules/iostream-1_b.C: New.\n+\t* g++.dg/modules/part-5_a.C: New.\n+\t* g++.dg/modules/part-5_b.C: New.\n+\t* g++.dg/modules/part-5_c.C: New.\n+\t* g++.dg/modules/stdio-1_a.H: New.\n+\t* g++.dg/modules/stdio-1_b.C: New.\n+\t* g++.dg/modules/string-1_a.H: New.\n+\t* g++.dg/modules/string-1_b.C: New.\n+\t* g++.dg/modules/string-view1.C: New.\n+\t* g++.dg/modules/string-view2.C: New.\n+\t* g++.dg/modules/tinfo-1.C: New.\n+\t* g++.dg/modules/tinfo-2_a.H: New.\n+\t* g++.dg/modules/tinfo-2_b.C: New.\n+\t* g++.dg/modules/tname-spec-1_a.H: New.\n+\t* g++.dg/modules/tname-spec-1_b.C: New.\n+\t* g++.dg/modules/xtreme-header-1.h: New.\n+\t* g++.dg/modules/xtreme-header-1_a.H: New.\n+\t* g++.dg/modules/xtreme-header-1_b.C: New.\n+\t* g++.dg/modules/xtreme-header-1_c.C: New.\n+\t* g++.dg/modules/xtreme-header-2.h: New.\n+\t* g++.dg/modules/xtreme-header-2_a.H: New.\n+\t* g++.dg/modules/xtreme-header-2_b.C: New.\n+\t* g++.dg/modules/xtreme-header-2_c.C: New.\n+\t* g++.dg/modules/xtreme-header-3.h: New.\n+\t* g++.dg/modules/xtreme-header-3_a.H: New.\n+\t* g++.dg/modules/xtreme-header-3_b.C: New.\n+\t* g++.dg/modules/xtreme-header-3_c.C: New.\n+\t* g++.dg/modules/xtreme-header-4.h: New.\n+\t* g++.dg/modules/xtreme-header-4_a.H: New.\n+\t* g++.dg/modules/xtreme-header-4_b.C: New.\n+\t* g++.dg/modules/xtreme-header-4_c.C: New.\n+\t* g++.dg/modules/xtreme-header-5.h: New.\n+\t* g++.dg/modules/xtreme-header-5_a.H: New.\n+\t* g++.dg/modules/xtreme-header-5_b.C: New.\n+\t* g++.dg/modules/xtreme-header-5_c.C: New.\n+\t* g++.dg/modules/xtreme-header-6.h: New.\n+\t* g++.dg/modules/xtreme-header-6_a.H: New.\n+\t* g++.dg/modules/xtreme-header-6_b.C: New.\n+\t* g++.dg/modules/xtreme-header-6_c.C: New.\n+\t* g++.dg/modules/xtreme-header.h: New.\n+\t* g++.dg/modules/xtreme-header_a.H: New.\n+\t* g++.dg/modules/xtreme-header_b.C: New.\n+\t* g++.dg/modules/xtreme-tr1.h: New.\n+\t* g++.dg/modules/xtreme-tr1_a.H: New.\n+\t* g++.dg/modules/xtreme-tr1_b.C: New.\n+\n+2021-01-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/95401\n+\t* g++.dg/vect/pr95401.cc: New test.\n+\t* g++.dg/vect/pr95401a.cc: Likewise.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98308\n+\t* gcc.dg/vect/pr98308.c: New testcase.\n+\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/95771\n+\t* gcc.target/i386/pr95771.c: New test.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98464\n+\t* g++.dg/opt/pr98464.C: New testcase.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98282\n+\t* g++.dg/opt/pr98282.C: New testcase.\n+\n+2021-01-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/89057\n+\t* gcc.target/aarch64/pr89057.c: New test.\n+\n+2021-01-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/acle/asm/prfb.c: Test for a MUL VL range of\n+\t[-32, 31].\n+\t* gcc.target/aarch64/sve/acle/asm/prfh.c: Likewise.\n+\t* gcc.target/aarch64/sve/acle/asm/prfw.c: Likewise.\n+\t* gcc.target/aarch64/sve/acle/asm/prfd.c: Likewise.\n+\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* README: Convert to utf8 from iso8859.\n+\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.target/avr/avr.exp: Run dos2unix on the file.\n+\n+2021-01-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98291\n+\t* gcc.dg/vect/slp-reduc-11.c: New testcase.\n+\t* gcc.dg/vect/vect-reduc-in-order-4.c: Adjust.\n+\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96782\n+\t* gcc.dg/tree-ssa/pr96782.c: New test.\n+\n+2021-01-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* gcc.misc-tests/outputs.exp: Adjust testcase.\n+\n 2021-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* ChangeLog-2020: Rotate ChangeLog.  New file."}, {"sha": "a732024c7319fa0c9093dd847f59ef47a99f14bc", "filename": "libcody/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/libcody%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/libcody%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,12 @@\n+2021-01-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* client.cc (Client::ProcessResponse): Remove std::move\n+\tinside ?:\n+\n+2021-01-04  Mateusz Wajch\u0119prze\u0142\u00f3\u017c  <mati271828@gmail.com>\n+\n+\t* resolver.cc (IsAbsDir): Fix string indexing.\n+\n 2020-12-23  Nathan Sidwell  <nathan@acm.org>\n \n \t* Makefile.in (LDFLAGS): Drop -L.."}, {"sha": "a6f82ef6ec9daa5331b711fb63a1a3c81b56cb50", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e73f511573b3656c57f33c079e9bd1d70aaa621/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e73f511573b3656c57f33c079e9bd1d70aaa621/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=7e73f511573b3656c57f33c079e9bd1d70aaa621", "patch": "@@ -1,3 +1,7 @@\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* strverscmp.c: Convert to utf8 from iso8859.\n+\n 2020-12-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/67343"}]}