{"sha": "a7f64d523d457467e70367ae9745fe3a5eec49d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdmNjRkNTIzZDQ1NzQ2N2U3MDM2N2FlOTc0NWZlM2E1ZWVjNDlkNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-14T08:09:22Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-14T08:09:22Z"}, "message": "(finish_decl): Avoid cascading messages for tentative\ndefinitions with incomplete types.\n\nFrom-SVN: r1821", "tree": {"sha": "744bf0f826293a967ef49d793759afa589e173d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/744bf0f826293a967ef49d793759afa589e173d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7f64d523d457467e70367ae9745fe3a5eec49d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7f64d523d457467e70367ae9745fe3a5eec49d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7f64d523d457467e70367ae9745fe3a5eec49d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7f64d523d457467e70367ae9745fe3a5eec49d5/comments", "author": null, "committer": null, "parents": [{"sha": "8c31e6b602fe470308b4777289f3ce81e34f62a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c31e6b602fe470308b4777289f3ce81e34f62a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c31e6b602fe470308b4777289f3ce81e34f62a1"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "877754d81ecb38adbb97aa807145eb3381bb6fa6", "filename": "gcc/c-decl.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7f64d523d457467e70367ae9745fe3a5eec49d5/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7f64d523d457467e70367ae9745fe3a5eec49d5/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=a7f64d523d457467e70367ae9745fe3a5eec49d5", "patch": "@@ -3143,19 +3143,19 @@ finish_decl (decl, init, asmspec_tree)\n \n   if (TREE_CODE (decl) == VAR_DECL)\n     {\n-      if (TREE_STATIC (decl) && DECL_SIZE (decl) == 0)\n+      if (DECL_SIZE (decl) == 0\n+\t  && (TREE_STATIC (decl)\n+\t      ?\n+\t\t/* A static variable with an incomplete type\n+\t\t   is an error if it is initialized or `static'.\n+\t\t   Otherwise, let it through, but if it is not `extern'\n+\t\t   then it may cause an error message later.  */\n+\t\t!TREE_PUBLIC (decl) || DECL_INITIAL (decl)\n+\t      :\n+\t\t/* An automatic variable with an incomplete type\n+\t\t   is an error.  */\n+\t\t!TREE_EXTERNAL (decl)))\n \t{\n-\t  /* A static variable with an incomplete type:\n-\t     that is an error if it is initialized or `static'.\n-\t     Otherwise, let it through, but if it is not `extern'\n-\t     then it may cause an error message later.  */\n-\t  if (! (TREE_PUBLIC (decl) && DECL_INITIAL (decl) == 0))\n-\t    error_with_decl (decl, \"storage size of `%s' isn't known\");\n-\t}\n-      else if (!DECL_EXTERNAL (decl) && DECL_SIZE (decl) == 0)\n-\t{\n-\t  /* An automatic variable with an incomplete type:\n-\t     that is an error.  */\n \t  error_with_decl (decl, \"storage size of `%s' isn't known\");\n \t  TREE_TYPE (decl) = error_mark_node;\n \t}"}]}