{"sha": "891201a1c3a3f36154e8f25872282751860310fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkxMjAxYTFjM2EzZjM2MTU0ZThmMjU4NzIyODI3NTE4NjAzMTBmYQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-02-24T06:55:51Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-02-24T06:55:51Z"}, "message": "Add additional_sources_used\n\n2015-02-24  Tom de Vries  <tom@codesourcery.com>\n\n\tPR testsuite/65126\n\t* lib/gcc-defs.exp (additional_sources_used): Add new var.\n\t(dg-additional-files-options): Copy additional_sources to\n\tadditional_sources_used before emptying additional_sources.\n\t* lib/gcc-dg.exp (cleanup-coverage-files, cleanup-repo-files)\n\t(cleanup-stack-usage, cleanup-ada-spec, cleanup-dump)\n\t(cleanup-saved-temps): Use additional_sources_used instead of\n\tadditional_sources.\n\t(dg-test): Reset additional_sources_used.\n\nFrom-SVN: r220929", "tree": {"sha": "dbd98ce98afd136216b32912d5f096fff9b87b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbd98ce98afd136216b32912d5f096fff9b87b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/891201a1c3a3f36154e8f25872282751860310fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/891201a1c3a3f36154e8f25872282751860310fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/891201a1c3a3f36154e8f25872282751860310fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/891201a1c3a3f36154e8f25872282751860310fa/comments", "author": null, "committer": null, "parents": [{"sha": "781048da15875abd281cd35d2b0edcefed703bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/781048da15875abd281cd35d2b0edcefed703bbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/781048da15875abd281cd35d2b0edcefed703bbb"}], "stats": {"total": 47, "additions": 34, "deletions": 13}, "files": [{"sha": "a1d18bb2e40875cfa1782047a50b501d7deac04f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891201a1c3a3f36154e8f25872282751860310fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891201a1c3a3f36154e8f25872282751860310fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=891201a1c3a3f36154e8f25872282751860310fa", "patch": "@@ -1,3 +1,15 @@\n+2015-02-24  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/65126\n+\t* lib/gcc-defs.exp (additional_sources_used): Add new var.\n+\t(dg-additional-files-options): Copy additional_sources to\n+\tadditional_sources_used before emptying additional_sources.\n+\t* lib/gcc-dg.exp (cleanup-coverage-files, cleanup-repo-files)\n+\t(cleanup-stack-usage, cleanup-ada-spec, cleanup-dump)\n+\t(cleanup-saved-temps): Use additional_sources_used instead of\n+\tadditional_sources.\n+\t(dg-test): Reset additional_sources_used.\n+\n 2015-02-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR fortran/63427"}, {"sha": "a30b1765a94ea45eb8caf85d5306659a3f7b88ff", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891201a1c3a3f36154e8f25872282751860310fa/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891201a1c3a3f36154e8f25872282751860310fa/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=891201a1c3a3f36154e8f25872282751860310fa", "patch": "@@ -268,6 +268,7 @@ proc dg-additional-options { args } {\n # main source file.\n \n set additional_sources \"\"\n+set additional_sources_used \"\"\n \n proc dg-additional-sources { args } {\n     global additional_sources\n@@ -290,6 +291,7 @@ proc dg-additional-files { args } {\n \n proc dg-additional-files-options { options source } {\n     global additional_sources\n+    global additional_sources_used\n     global additional_files\n     set to_download [list]\n     if { $additional_sources != \"\" } then {\n@@ -301,6 +303,7 @@ proc dg-additional-files-options { options source } {\n \t    lappend options \"additional_flags=$additional_sources\"\n \t}\n \tset to_download [concat $to_download $additional_sources]\n+\tset additional_sources_used \"$additional_sources\"\n \tset additional_sources \"\"\n     }\n     if { $additional_files != \"\" } then { "}, {"sha": "5a9102e014407e0c76e63eff22107715da40f98b", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891201a1c3a3f36154e8f25872282751860310fa/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891201a1c3a3f36154e8f25872282751860310fa/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=891201a1c3a3f36154e8f25872282751860310fa", "patch": "@@ -495,30 +495,32 @@ proc cleanup-profile-file { } {\n \n # Remove compiler-generated coverage files for the current test.\n proc cleanup-coverage-files { } {\n+    global additional_sources_used\n     set testcase [testname-for-summary]\n     # The name might include a list of options; extract the file name.\n     set testcase [lindex $testcase 0]\n     remove-build-file \"[file rootname [file tail $testcase]].gc??\"\n \n     # Clean up coverage files for additional source files.\n-    if [info exists additional_sources] {\n-\tforeach srcfile $additional_sources {\n+    if [info exists additional_sources_used] {\n+\tforeach srcfile $additional_sources_used {\n \t    remove-build-file \"[file rootname [file tail $srcfile]].gc??\"\n \t}\n     }\n }\n \n # Remove compiler-generated files from -repo for the current test.\n proc cleanup-repo-files { } {\n+    global additional_sources_used\n     set testcase [testname-for-summary]\n     # The name might include a list of options; extract the file name.\n     set testcase [lindex $testcase 0]\n     remove-build-file \"[file rootname [file tail $testcase]].o\"\n     remove-build-file \"[file rootname [file tail $testcase]].rpo\"\n \n     # Clean up files for additional source files.\n-    if [info exists additional_sources] {\n-\tforeach srcfile $additional_sources {\n+    if [info exists additional_sources_used] {\n+\tforeach srcfile $additional_sources_used {\n \t    remove-build-file \"[file rootname [file tail $srcfile]].o\"\n \t    remove-build-file \"[file rootname [file tail $srcfile]].rpo\"\n \t}\n@@ -554,28 +556,30 @@ proc cleanup-stack-usage { } {\n     remove-build-file \"[file rootname [file tail $testcase]].su\"\n \n     # Clean up files for additional source files.\n-    if [info exists additional_sources] {\n-\tforeach srcfile $additional_sources {\n+    if [info exists additional_sources_used] {\n+\tforeach srcfile $additional_sources_used {\n \t    remove-build-file \"[file rootname [file tail $srcfile]].su\"\n \t}\n     }\n }\n \n # Remove an Ada spec file for the current test.\n proc cleanup-ada-spec { } {\n+    global additional_sources_used\n     set testcase [testname-for-summary]\n     remove-build-file \"[get_ada_spec_filename $testcase]\"\n \n     # Clean up files for additional source files.\n-    if [info exists additional_sources] {\n-\tforeach srcfile $additional_sources {\n+    if [info exists additional_sources_used] {\n+\tforeach srcfile $additional_sources_used {\n \t    remove-build-file \"[get_ada_spec_filename $srcfile]\"\n \t}\n     }\n }\n \n # Remove all dump files with the provided suffix.\n proc cleanup-dump { suffix } {\n+    global additional_sources_used\n     set testcase [testname-for-summary]\n     # The name might include a list of options; extract the file name.\n     set src [file tail [lindex $testcase 0]]\n@@ -586,8 +590,8 @@ proc cleanup-dump { suffix } {\n     remove-build-file \"[file tail $src].gk.$suffix\"\n \n     # Clean up dump files for additional source files.\n-    if [info exists additional_sources] {\n-\tforeach srcfile $additional_sources {\n+    if [info exists additional_sources_used] {\n+\tforeach srcfile $additional_sources_used {\n \t    remove-build-file \"[file tail $srcfile].$suffix\"\n \t    remove-build-file \"[file rootname [file tail $srcfile]].exe.$suffix\"\n \t    remove-build-file \"[file rootname [file tail $srcfile]].exe.ltrans\\[0-9\\]*.$suffix\"\n@@ -603,7 +607,7 @@ proc cleanup-dump { suffix } {\n # if there are tests generating them.\n # ARGS is a list of suffixes to NOT delete.\n proc cleanup-saved-temps { args } {\n-    global additional_sources\n+    global additional_sources_used\n     set suffixes {}\n \n     # add the to-be-kept suffixes\n@@ -625,8 +629,8 @@ proc cleanup-saved-temps { args } {\n     }\n \n     # Clean up saved temp files for additional source files.\n-    if [info exists additional_sources] {\n-\tforeach srcfile $additional_sources {\n+    if [info exists additional_sources_used] {\n+\tforeach srcfile $additional_sources_used {\n \t    foreach suffix $suffixes {\n \t\tremove-build-file \"[file rootname [file tail $srcfile]]$suffix\"\n \t\tremove-build-file \"[file rootname [file tail $srcfile]].exe$suffix\"\n@@ -746,6 +750,7 @@ if { [info procs saved-dg-test] == [list] } {\n \t    set saved_info $errorInfo\n \t    set additional_files \"\"\n \t    set additional_sources \"\"\n+\t    set additional_sources_used \"\"\n \t    set additional_prunes \"\"\n \t    set shouldfail 0\n \t    if [info exists compiler_conditional_xfail_data] {\n@@ -759,6 +764,7 @@ if { [info procs saved-dg-test] == [list] } {\n \t}\n \tset additional_files \"\"\n \tset additional_sources \"\"\n+\tset additional_sources_used \"\"\n \tset additional_prunes \"\"\n \tset shouldfail 0\n \tif [info exists set_target_env_var] {"}]}