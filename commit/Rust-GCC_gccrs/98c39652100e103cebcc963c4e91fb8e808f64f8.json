{"sha": "98c39652100e103cebcc963c4e91fb8e808f64f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjMzk2NTIxMDBlMTAzY2ViY2M5NjNjNGU5MWZiOGU4MDhmNjRmOA==", "commit": {"author": {"name": "Nicklas Bo Jensen", "email": "nbjensen@gmail.com", "date": "2016-02-08T16:35:24Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-02-08T16:35:24Z"}, "message": "tree-ssa.texi (Preserving the virtual SSA form): Remove outdated section.\n\n\t* doc/tree-ssa.texi (Preserving the virtual SSA form): Remove\n\toutdated section.\n\nFrom-SVN: r233221", "tree": {"sha": "0d1c77d873ad453ce45f7bdaaa0ffe7cca4da852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d1c77d873ad453ce45f7bdaaa0ffe7cca4da852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98c39652100e103cebcc963c4e91fb8e808f64f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c39652100e103cebcc963c4e91fb8e808f64f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c39652100e103cebcc963c4e91fb8e808f64f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c39652100e103cebcc963c4e91fb8e808f64f8/comments", "author": {"login": "nbjensen", "id": 548756, "node_id": "MDQ6VXNlcjU0ODc1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/548756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbjensen", "html_url": "https://github.com/nbjensen", "followers_url": "https://api.github.com/users/nbjensen/followers", "following_url": "https://api.github.com/users/nbjensen/following{/other_user}", "gists_url": "https://api.github.com/users/nbjensen/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbjensen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbjensen/subscriptions", "organizations_url": "https://api.github.com/users/nbjensen/orgs", "repos_url": "https://api.github.com/users/nbjensen/repos", "events_url": "https://api.github.com/users/nbjensen/events{/privacy}", "received_events_url": "https://api.github.com/users/nbjensen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eba9e839de0a585e55a92b4815e78a781ce32abb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eba9e839de0a585e55a92b4815e78a781ce32abb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eba9e839de0a585e55a92b4815e78a781ce32abb"}], "stats": {"total": 41, "additions": 6, "deletions": 35}, "files": [{"sha": "b0dd2c3842e1b888ea4725de546958acd713afe3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c39652100e103cebcc963c4e91fb8e808f64f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c39652100e103cebcc963c4e91fb8e808f64f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98c39652100e103cebcc963c4e91fb8e808f64f8", "patch": "@@ -1,3 +1,8 @@\n+2016-02-08  Nicklas Bo Jensen  <nbjensen@gmail.com>\n+\n+\t* doc/tree-ssa.texi (Preserving the virtual SSA form): Remove\n+\toutdated section.\n+\n 2016-02-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/69631"}, {"sha": "7ca607de9c5fe051d1028f114a00ca00dc0feceb", "filename": "gcc/doc/tree-ssa.texi", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c39652100e103cebcc963c4e91fb8e808f64f8/gcc%2Fdoc%2Ftree-ssa.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c39652100e103cebcc963c4e91fb8e808f64f8/gcc%2Fdoc%2Ftree-ssa.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftree-ssa.texi?ref=98c39652100e103cebcc963c4e91fb8e808f64f8", "patch": "@@ -432,7 +432,7 @@ dominator optimizations currently do this.\n \n When lazy updating is being used, the immediate use information is out of date\n and cannot be used reliably.  Lazy updating is achieved by simply marking\n-statements modified via calls to @code{mark_stmt_modified} instead of\n+statements modified via calls to @code{gimple_set_modified} instead of\n @code{update_stmt}.  When lazy updating is no longer required, all the\n modified statements must have @code{update_stmt} called in order to bring them\n up to date.  This must be done before the optimization is finished, or\n@@ -654,40 +654,6 @@ are explicitly destroyed and only the symbols marked for\n renaming are processed@.\n @end itemize\n \n-@subsection Preserving the virtual SSA form\n-@cindex preserving virtual SSA form\n-\n-The virtual SSA form is harder to preserve than the non-virtual SSA form\n-mainly because the set of virtual operands for a statement may change at\n-what some would consider unexpected times.  In general, statement\n-modifications should be bracketed between calls to\n-@code{push_stmt_changes} and @code{pop_stmt_changes}.  For example,\n-\n-@smallexample\n-    munge_stmt (tree stmt)\n-    @{\n-       push_stmt_changes (&stmt);\n-       @dots{} rewrite STMT @dots{}\n-       pop_stmt_changes (&stmt);\n-    @}\n-@end smallexample\n-\n-The call to @code{push_stmt_changes} saves the current state of the\n-statement operands and the call to @code{pop_stmt_changes} compares\n-the saved state with the current one and does the appropriate symbol\n-marking for the SSA renamer.\n-\n-It is possible to modify several statements at a time, provided that\n-@code{push_stmt_changes} and @code{pop_stmt_changes} are called in\n-LIFO order, as when processing a stack of statements.\n-\n-Additionally, if the pass discovers that it did not need to make\n-changes to the statement after calling @code{push_stmt_changes}, it\n-can simply discard the topmost change buffer by calling\n-@code{discard_stmt_changes}.  This will avoid the expensive operand\n-re-scan operation and the buffer comparison that determines if symbols\n-need to be marked for renaming.\n-\n @subsection Examining @code{SSA_NAME} nodes\n @cindex examining SSA_NAMEs\n "}]}