{"sha": "480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgwMTU2YjJhMzRiYjdmOTc5YjdmNGYxZjczMzljZjFhZDU2OWMwNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T12:58:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T12:58:03Z"}, "message": "[multiple changes]\n\n2014-07-30  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch6.adb: Add comments.\n\n2014-07-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-os_lib.ads (GM_Time_Of): Clarify documentation.\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb, sem_res.adb: Minor reformatting.\n\n2014-07-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case\n\tBit_Order): Set Reverse_Bit_Order on the base type of the\n\tspecified first subtype.\n\nFrom-SVN: r213261", "tree": {"sha": "7406fce72a4a40d2fcca250dd10f1b294e7d4580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7406fce72a4a40d2fcca250dd10f1b294e7d4580"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/comments", "author": null, "committer": null, "parents": [{"sha": "36428cc491c6948882ca8de83d7ba5b401666c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36428cc491c6948882ca8de83d7ba5b401666c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36428cc491c6948882ca8de83d7ba5b401666c95"}], "stats": {"total": 68, "additions": 57, "deletions": 11}, "files": [{"sha": "6986a473d293a2abd949fa92357dbc463bc18b99", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "patch": "@@ -1,3 +1,21 @@\n+2014-07-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch6.adb: Add comments.\n+\n+2014-07-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-os_lib.ads (GM_Time_Of): Clarify documentation.\n+\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb, sem_res.adb: Minor reformatting.\n+\n+2014-07-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case\n+\tBit_Order): Set Reverse_Bit_Order on the base type of the\n+\tspecified first subtype.\n+\n 2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n \n \t* inline.adb (Expand_Inlined_Call): Use a renaming declaration"}, {"sha": "d50d11f3276cc9aa10a88a9e4772aa3bd13361a6", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "patch": "@@ -160,8 +160,8 @@ package System.OS_Lib is\n       Minute : Minute_Type;\n       Second : Second_Type) return OS_Time;\n    --  Analogous to the Time_Of routine in Ada.Calendar, takes a set of time\n-   --  component parts and returns an OS_Time. Returns Invalid_Time if the\n-   --  creation fails.\n+   --  component parts to be interpreted in the local time zone, and returns\n+   --  an OS_Time. Returns Invalid_Time if the creation fails.\n \n    function Current_Time_String return String;\n    --  Returns current local time in the form YYYY-MM-DD HH:MM:SS. The result"}, {"sha": "bc0ed547a50b8ba0e108f1a19c6baf515ffa191f", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "patch": "@@ -111,7 +111,8 @@ package body Sem_Aggr is\n    --  Check that Expr is either not limited or else is one of the cases of\n    --  expressions allowed for a limited component association (namely, an\n    --  aggregate, function call, or <> notation). Report error for violations.\n-   --  Expression is also OK in an instance or inlining context.\n+   --  Expression is also OK in an instance or inlining context, because we\n+   --  have already analyzed and checked it.\n \n    procedure Check_Qualified_Aggregate (Level : Nat; Expr : Node_Id);\n    --  Given aggregate Expr, check that sub-aggregates of Expr that are nested"}, {"sha": "a9fa109e98c25e71f9a33e04595fd817886e3f48", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "patch": "@@ -4293,7 +4293,7 @@ package body Sem_Ch13 is\n \n                else\n                   if (Expr_Value (Expr) = 0) /= Bytes_Big_Endian then\n-                     Set_Reverse_Bit_Order (U_Ent, True);\n+                     Set_Reverse_Bit_Order (Base_Type (U_Ent), True);\n                   end if;\n                end if;\n             end if;"}, {"sha": "c7b01b4b368666c761f99f91b18525d62def0fdc", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "patch": "@@ -3031,16 +3031,44 @@ package body Sem_Ch6 is\n                --  We make two copies of the given spec, one for the new\n                --  declaration, and one for the body.\n \n-               --  This cannot be done for a compilation unit, which is not\n-               --  in a context where we can insert a new spec.\n-\n                if No (Spec_Id)\n                  and then GNATprove_Mode\n+\n+                 --  Under a debug flag until remaining issues are fixed\n+\n                  and then Debug_Flag_QQ\n+\n+                 --  Inlining does not apply during pre-analysis of code\n+\n                  and then Full_Analysis\n+\n+                 --  Inlining only applies to full bodies, not stubs\n+\n                  and then Nkind (N) /= N_Subprogram_Body_Stub\n+\n+                 --  Inlining only applies to bodies in the source code, not to\n+                 --  those generated by the compiler. In particular, expression\n+                 --  functions, whose body is generated by the compiler, are\n+                 --  treated specially by GNATprove.\n+\n                  and then Comes_From_Source (Body_Id)\n+\n+                 --  This cannot be done for a compilation unit, which is not\n+                 --  in a context where we can insert a new spec.\n+\n                  and then Is_List_Member (N)\n+\n+                 --  Inlining only applies to subprograms without contracts,\n+                 --  as a contract is a sign that GNATprove should perform a\n+                 --  modular analysis of the subprogram instead of a contextual\n+                 --  analysis at each call site. The same test is performed in\n+                 --  Inline.Can_Be_Inlined_In_GNATprove_Mode. It is repeated\n+                 --  here in another form (because the contract has not\n+                 --  been attached to the body) to avoid frontend errors in\n+                 --  case pragmas are used instead of aspects, because the\n+                 --  corresponding pragmas in the body would not be transferred\n+                 --  to the spec, leading to legality errors.\n+\n                  and then not Body_Has_Contract\n                then\n                   declare"}, {"sha": "e68310b9776dcdb8fa47e286ae77298c76ba059a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/480156b2a34bb7f979b7f4f1f7339cf1ad569c07/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "patch": "@@ -10686,10 +10686,9 @@ package body Sem_Res is\n       --  (In other contexts conversions cannot apply to literals).\n \n       if In_Inlined_Body\n-        and then\n-          (Opnd_Type = Any_Character or else\n-           Opnd_Type = Any_Integer   or else\n-           Opnd_Type = Any_Real)\n+        and then (Opnd_Type = Any_Character or else\n+                  Opnd_Type = Any_Integer   or else\n+                  Opnd_Type = Any_Real)\n       then\n          Set_Etype (Operand, Typ);\n       end if;"}]}