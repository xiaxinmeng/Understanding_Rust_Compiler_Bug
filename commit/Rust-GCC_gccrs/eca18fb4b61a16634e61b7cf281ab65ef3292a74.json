{"sha": "eca18fb4b61a16634e61b7cf281ab65ef3292a74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNhMThmYjRiNjFhMTY2MzRlNjFiN2NmMjgxYWI2NWVmMzI5MmE3NA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-11-02T21:01:54Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-11-02T21:01:54Z"}, "message": "re PR fortran/18157 (ice-on-valid code, pointer to user-defined type, fold-struct.c)\n\n2005-11-02  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR fortran/18157\n        * gfortran.fortran-torture/compile/defined_type_1.f90: New test.\n        * gfortran.fortran-torture/compile/defined_type_2.f90: New\n        test.   \n        * gfortran.fortran-torture/compile/defined_type_3.f90:\n        New test.\n\n2005-11-02  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR fortran/18157\n        * trans-array.c (gfc_conv_resolve_dependencies): Use the correct\n        type for the temporary array.\n        * trans-expr.c (gfc_trans_assignment): Pass lss\n        instead of lss_section\n        to gfc_conv_resolve_dependencies to get the\n        correct type.\n\nFrom-SVN: r106396", "tree": {"sha": "7c218f214ca42e611a74be01c9d0e04bc0df3d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c218f214ca42e611a74be01c9d0e04bc0df3d72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eca18fb4b61a16634e61b7cf281ab65ef3292a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca18fb4b61a16634e61b7cf281ab65ef3292a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca18fb4b61a16634e61b7cf281ab65ef3292a74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca18fb4b61a16634e61b7cf281ab65ef3292a74/comments", "author": null, "committer": null, "parents": [{"sha": "86414779a6d1a126eca6281af2dffada41e4fab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86414779a6d1a126eca6281af2dffada41e4fab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86414779a6d1a126eca6281af2dffada41e4fab3"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "8589e1c30bc3ab94c069dc30eb955cd48f913b06", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=eca18fb4b61a16634e61b7cf281ab65ef3292a74", "patch": "@@ -1,3 +1,13 @@\n+2005-11-02  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR fortran/18157\n+\t* trans-array.c (gfc_conv_resolve_dependencies): Use the correct\n+\ttype for the temporary array.\n+\t* trans-expr.c (gfc_trans_assignment): Pass lss\n+\tinstead of lss_section\n+\tto gfc_conv_resolve_dependencies to get the\n+\tcorrect type.\n+\n 2005-11-02  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* decl.c (gfc_match_entry): Function entries don't need an argument"}, {"sha": "20d3c67a0bb02bc7174f362482579e1b37ce758d", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=eca18fb4b61a16634e61b7cf281ab65ef3292a74", "patch": "@@ -2542,10 +2542,13 @@ gfc_conv_resolve_dependencies (gfc_loopinfo * loop, gfc_ss * dest,\n \n   if (nDepend == 1)\n     {\n+      tree base_type = gfc_typenode_for_spec (&dest->expr->ts);\n+      if (GFC_ARRAY_TYPE_P (base_type)\n+\t  || GFC_DESCRIPTOR_TYPE_P (base_type))\n+\tbase_type = gfc_get_element_type (base_type);\n       loop->temp_ss = gfc_get_ss ();\n       loop->temp_ss->type = GFC_SS_TEMP;\n-      loop->temp_ss->data.temp.type =\n-\tgfc_get_element_type (TREE_TYPE (dest->data.info.descriptor));\n+      loop->temp_ss->data.temp.type = base_type;\n       loop->temp_ss->string_length = dest->string_length;\n       loop->temp_ss->data.temp.dimen = loop->dimen;\n       loop->temp_ss->next = gfc_ss_terminator;"}, {"sha": "a0339af96c4e3f2605dc060734e8f53d7a792bb2", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=eca18fb4b61a16634e61b7cf281ab65ef3292a74", "patch": "@@ -2719,7 +2719,7 @@ gfc_trans_assignment (gfc_expr * expr1, gfc_expr * expr2)\n       /* Calculate the bounds of the scalarization.  */\n       gfc_conv_ss_startstride (&loop);\n       /* Resolve any data dependencies in the statement.  */\n-      gfc_conv_resolve_dependencies (&loop, lss_section, rss);\n+      gfc_conv_resolve_dependencies (&loop, lss, rss);\n       /* Setup the scalarizing loops.  */\n       gfc_conv_loop_setup (&loop);\n "}, {"sha": "0b9bd9276fed66a20e2ce2aa2f945e6c83f307ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eca18fb4b61a16634e61b7cf281ab65ef3292a74", "patch": "@@ -1,3 +1,12 @@\n+2005-11-02  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR fortran/18157\n+        * gfortran.fortran-torture/compile/defined_type_1.f90: New test.\n+\t* gfortran.fortran-torture/compile/defined_type_2.f90: New\n+\ttest.\n+\t* gfortran.fortran-torture/compile/defined_type_3.f90:\n+\tNew test.\n+\n 2005-11-02  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/24569"}, {"sha": "635727b6630f4360dd7a66fd9b4cb599ded437da", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/defined_type_1.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_1.f90?ref=eca18fb4b61a16634e61b7cf281ab65ef3292a74", "patch": "@@ -0,0 +1,10 @@\n+!This used to ICE as we chose the wrong type for the\n+! temporary to hold type%var\n+! fortran/18157\n+program testcase_fold\n+  type :: struct                            \n+     real      :: var       ! its julian sec  \n+  end type struct\n+  type(struct), dimension(:), pointer :: mystruct\n+  mystruct(:)%var = mystruct(:)%var\n+END Program testcase_fold"}, {"sha": "29515f5561e3d3dabf96e3cd98819909d63dbe2e", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/defined_type_2.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_2.f90?ref=eca18fb4b61a16634e61b7cf281ab65ef3292a74", "patch": "@@ -0,0 +1,17 @@\n+!This used to ICE as we chose the wrong type for the\n+! temporary to hold type%x\n+! fortran/18157\n+MODULE bug \n+ IMPLICIT NONE \n+ TYPE :: my_type \n+   REAL :: x \n+ END TYPE \n+ TYPE (my_type), DIMENSION(3) :: t \n+ CONTAINS \n+   SUBROUTINE foo \n+   INTEGER, DIMENSION(8)        :: c(3) \n+   t(c)%x = t(c)%x \n+   RETURN \n+  END SUBROUTINE foo \n+END MODULE bug \n+ "}, {"sha": "d31167cc49723c28af5796d9bf70cc559268e656", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/defined_type_3.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca18fb4b61a16634e61b7cf281ab65ef3292a74/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fdefined_type_3.f90?ref=eca18fb4b61a16634e61b7cf281ab65ef3292a74", "patch": "@@ -0,0 +1,10 @@\n+!This used to ICE as we chose the wrong type for the\n+! temporary to hold type%var\n+! fortran/18157\n+program testcase_fold\n+  type :: struct                            \n+     real      :: var       ! its julian sec  \n+  end type struct\n+  type(struct), dimension(:), pointer :: mystruct\n+  mystruct(1:2)%var = mystruct(2:3)%var\n+END Program testcase_fold"}]}