{"sha": "bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ1YTY5MTkxZjAyM2I5YmMyYTFmODNjNWY3ZDVlNTkxYzMzM2I5YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-07-13T09:17:40Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-07-13T09:17:40Z"}, "message": "vect: Pass reduc_info to get_initial_def_for_reduction\n\nSimilarly to the previous patch, this one passes the reduc_info\nto get_initial_def_for_reduction, rather than a stmt_vec_info that\nlacks the metadata.  This again becomes useful later.\n\ngcc/\n\t* tree-vect-loop.c (get_initial_def_for_reduction): Take the\n\treduc_info instead of the original stmt_vec_info.\n\t(vect_transform_cycle_phi): Update accordingly.", "tree": {"sha": "3829f0ef8a4af7e8999b9e27c5bc7ccee6b0e090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3829f0ef8a4af7e8999b9e27c5bc7ccee6b0e090"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "826c452e571884fcabbc73863eef5120e683d034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826c452e571884fcabbc73863eef5120e683d034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826c452e571884fcabbc73863eef5120e683d034"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a67036f92e0860715c3373796442c2262be8faec", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a", "patch": "@@ -4625,7 +4625,7 @@ vect_model_reduction_cost (loop_vec_info loop_vinfo,\n /* Function get_initial_def_for_reduction\n \n    Input:\n-   STMT_VINFO - a stmt that performs a reduction operation in the loop.\n+   REDUC_INFO - the info_for_reduction\n    INIT_VAL - the initial value of the reduction variable\n \n    Output:\n@@ -4667,7 +4667,7 @@ vect_model_reduction_cost (loop_vec_info loop_vinfo,\n \n static tree\n get_initial_def_for_reduction (loop_vec_info loop_vinfo,\n-\t\t\t       stmt_vec_info stmt_vinfo,\n+\t\t\t       stmt_vec_info reduc_info,\n \t\t\t       enum tree_code code, tree init_val,\n                                tree *adjustment_def)\n {\n@@ -4685,8 +4685,8 @@ get_initial_def_for_reduction (loop_vec_info loop_vinfo,\n   gcc_assert (POINTER_TYPE_P (scalar_type) || INTEGRAL_TYPE_P (scalar_type)\n \t      || SCALAR_FLOAT_TYPE_P (scalar_type));\n \n-  gcc_assert (nested_in_vect_loop_p (loop, stmt_vinfo)\n-\t      || loop == (gimple_bb (stmt_vinfo->stmt))->loop_father);\n+  gcc_assert (nested_in_vect_loop_p (loop, reduc_info)\n+\t      || loop == (gimple_bb (reduc_info->stmt))->loop_father);\n \n   /* ADJUSTMENT_DEF is NULL when called from\n      vect_create_epilog_for_reduction to vectorize double reduction.  */\n@@ -7556,7 +7556,7 @@ vect_transform_cycle_phi (loop_vec_info loop_vinfo,\n \t  if (STMT_VINFO_DEF_TYPE (stmt_info) == vect_double_reduction_def)\n \t    adjustment_defp = NULL;\n \t  vec_initial_def\n-\t    = get_initial_def_for_reduction (loop_vinfo, reduc_stmt_info, code,\n+\t    = get_initial_def_for_reduction (loop_vinfo, reduc_info, code,\n \t\t\t\t\t     initial_def, adjustment_defp);\n \t  STMT_VINFO_REDUC_EPILOGUE_ADJUSTMENT (reduc_info) = adjustment_def;\n \t  vec_initial_defs.create (ncopies);"}]}