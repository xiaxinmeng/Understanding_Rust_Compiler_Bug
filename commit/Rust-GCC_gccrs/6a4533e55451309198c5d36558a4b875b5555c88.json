{"sha": "6a4533e55451309198c5d36558a4b875b5555c88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0NTMzZTU1NDUxMzA5MTk4YzVkMzY1NThhNGI4NzViNTU1NWM4OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-06-13T07:35:22Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-06-13T07:35:22Z"}, "message": "array (array<>::assign): Do not define in C++0x mode, per DR 776...\n\n2008-06-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/tr1_impl/array (array<>::assign): Do not define in\n\tC++0x mode, per DR 776...\n\t(array<>::fill): ... define instead.\n\t* doc/xml/manual/intro.xml: Add an entry for DR 776.\n\t* testsuite/23_containers/array/requirements/fill.cc: New.\n\nFrom-SVN: r136741", "tree": {"sha": "6b936e95bb98471dbf016b73c78dc4956e81008a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b936e95bb98471dbf016b73c78dc4956e81008a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a4533e55451309198c5d36558a4b875b5555c88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4533e55451309198c5d36558a4b875b5555c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4533e55451309198c5d36558a4b875b5555c88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4533e55451309198c5d36558a4b875b5555c88/comments", "author": null, "committer": null, "parents": [{"sha": "c3e9b6abf80f91814ad173cafd0d6a5fb8151f11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e9b6abf80f91814ad173cafd0d6a5fb8151f11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e9b6abf80f91814ad173cafd0d6a5fb8151f11"}], "stats": {"total": 75, "additions": 71, "deletions": 4}, "files": [{"sha": "2d1681c5646468535621b6aa35348a646d4da048", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6a4533e55451309198c5d36558a4b875b5555c88", "patch": "@@ -1,3 +1,11 @@\n+2008-06-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/tr1_impl/array (array<>::assign): Do not define in\n+\tC++0x mode, per DR 776...\n+\t(array<>::fill): ... define instead.\n+\t* doc/xml/manual/intro.xml: Add an entry for DR 776.\n+\t* testsuite/23_containers/array/requirements/fill.cc: New.\n+\n 2008-06-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/complex (pow(const complex<>&, int)): Do not define in"}, {"sha": "fb23f3dd6030f00e51de64d4fa1d8368ba9ba913", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=6a4533e55451309198c5d36558a4b875b5555c88", "patch": "@@ -666,8 +666,15 @@\n     <listitem><para>Implement the int -> size_t replacements.\n     </para></listitem></varlistentry>\n \n+    <varlistentry><term><ulink url=\"../ext/lwg-active.html#776\">776</ulink>:\n+        <emphasis>Undescribed assign function of std::array</emphasis>\n+    </term>\n+    <listitem><para>In C++0x mode, remove assign, add fill.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry><term><ulink url=\"../ext/lwg-active.html#778\">778</ulink>:\n-        <emphasis>std::bitset does not have any constructor taking a string literal</emphasis>\n+        <emphasis>std::bitset does not have any constructor taking a string \n+\t          literal</emphasis>\n     </term>\n     <listitem><para>Add it.\n     </para></listitem></varlistentry>"}, {"sha": "66dc9a2c8ce0857703b9ee212e3820906f8cbab3", "filename": "libstdc++-v3/include/tr1_impl/array", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray?ref=6a4533e55451309198c5d36558a4b875b5555c88", "patch": "@@ -56,11 +56,16 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \n       // No explicit construct/copy/destroy for aggregate type.\n \n-      void \n+      void\n+#ifdef _GLIBCXX_INCLUDE_AS_CXX0X\n+      // DR 776.\n+      fill(const value_type& __u)\n+#else\n       assign(const value_type& __u)\n+#endif\n       { std::fill_n(begin(), size(), __u); }\n \n-      void \n+      void\n       swap(array& __other)\n       { std::swap_ranges(begin(), end(), __other.begin()); }\n \n@@ -74,7 +79,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       { return const_iterator(&_M_instance[0]); }\n \n       iterator\n-      end() \n+      end()\n       { return iterator(&_M_instance[_Nm]); }\n \n       const_iterator"}, {"sha": "45b81b66d6c501e0c725c68c7aaeee99d0f8ec5b", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/fill.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Ffill.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4533e55451309198c5d36558a4b875b5555c88/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Ffill.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Ffill.cc?ref=6a4533e55451309198c5d36558a4b875b5555c88", "patch": "@@ -0,0 +1,47 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-06-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <array>\n+#include <testsuite_hooks.h>\n+\n+// DR 776. Undescribed assign function of std::array.\n+void test01()\n+{ \n+  bool test __attribute__((unused)) = true;\n+\n+  const size_t len = 3;\n+  typedef std::array<int, len> array_type;\n+\n+  array_type a = { { 0, 1, 2 } };\n+  const int value = 5;\n+\n+  a.fill(value);\n+  VERIFY( a[0] == value );\n+  VERIFY( a[1] == value );\n+  VERIFY( a[2] == value );  \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}