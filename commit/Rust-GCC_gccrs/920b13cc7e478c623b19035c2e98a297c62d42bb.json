{"sha": "920b13cc7e478c623b19035c2e98a297c62d42bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIwYjEzY2M3ZTQ3OGM2MjNiMTkwMzVjMmU5OGEyOTdjNjJkNDJiYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T18:12:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T18:12:05Z"}, "message": "(L_bb, L_exit): Use 0 rather than NULL for null pointers.\n\nFrom-SVN: r13883", "tree": {"sha": "d70dc0dccef3297cb8799a648bb790a8d08da620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d70dc0dccef3297cb8799a648bb790a8d08da620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/920b13cc7e478c623b19035c2e98a297c62d42bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/920b13cc7e478c623b19035c2e98a297c62d42bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/920b13cc7e478c623b19035c2e98a297c62d42bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/920b13cc7e478c623b19035c2e98a297c62d42bb/comments", "author": null, "committer": null, "parents": [{"sha": "6780a54b7d83717091889bae6ba4aa31227244e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6780a54b7d83717091889bae6ba4aa31227244e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6780a54b7d83717091889bae6ba4aa31227244e1"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "338707029cebc81f8547646e9f8716f3ad06d04f", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/920b13cc7e478c623b19035c2e98a297c62d42bb/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/920b13cc7e478c623b19035c2e98a297c62d42bb/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=920b13cc7e478c623b19035c2e98a297c62d42bb", "patch": "@@ -1483,7 +1483,7 @@ __bb_exit_func (void)\n \t  /* If the file exists, and the number of counts in it is the same,\n \t     then merge them in.  */\n \t     \n-\t  if ((da_file = fopen (ptr->filename, \"r\")) != NULL)\n+\t  if ((da_file = fopen (ptr->filename, \"r\")) != 0)\n \t    {\n \t      long n_counts = 0;\n \t      unsigned char tmp;\n@@ -1855,7 +1855,7 @@ gclose (FILE *f)\n {\n   struct stat buf;\n \n-  if (f != NULL)\n+  if (f != 0)\n     {\n       if (!fstat (fileno (f), &buf) && S_ISFIFO (buf.st_mode))\n         return pclose (f);\n@@ -3022,7 +3022,7 @@ int _exit_dummy_decl = 0;\t/* prevent compiler & linker warnings */\n #ifdef NEED_ATEXIT\n # include <errno.h>\n \n-static func_ptr *atexit_chain = NULL;\n+static func_ptr *atexit_chain = 0;\n static long atexit_chain_length = 0;\n static volatile long last_atexit_chain_slot = -1;\n \n@@ -3068,10 +3068,10 @@ exit (int status)\n       for ( ; last_atexit_chain_slot-- >= 0; )\n \t{\n \t  (*atexit_chain[last_atexit_chain_slot + 1]) ();\n-\t  atexit_chain[last_atexit_chain_slot + 1] = NULL;\n+\t  atexit_chain[last_atexit_chain_slot + 1] = 0;\n \t}\n       free (atexit_chain);\n-      atexit_chain = NULL;\n+      atexit_chain = 0;\n     }\n #else /* No NEED_ATEXIT */\n   __do_global_dtors ();"}]}