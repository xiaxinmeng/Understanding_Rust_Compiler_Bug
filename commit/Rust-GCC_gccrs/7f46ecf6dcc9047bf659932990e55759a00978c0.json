{"sha": "7f46ecf6dcc9047bf659932990e55759a00978c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y0NmVjZjZkY2M5MDQ3YmY2NTk5MzI5OTBlNTU3NTlhMDA5NzhjMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-09-09T12:19:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-09T12:19:25Z"}, "message": "decl.c (gnat_to_gnu_entity): Apply the promotion to static memory earlier in the processing.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Apply the\n\tpromotion to static memory earlier in the processing.\n\nFrom-SVN: r251929", "tree": {"sha": "aae4903d9fab457d63da429eee4d4367ac948ed0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aae4903d9fab457d63da429eee4d4367ac948ed0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f46ecf6dcc9047bf659932990e55759a00978c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f46ecf6dcc9047bf659932990e55759a00978c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f46ecf6dcc9047bf659932990e55759a00978c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f46ecf6dcc9047bf659932990e55759a00978c0/comments", "author": null, "committer": null, "parents": [{"sha": "ea09ecc5c01685aec71da99f8949f8e403e21789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea09ecc5c01685aec71da99f8949f8e403e21789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea09ecc5c01685aec71da99f8949f8e403e21789"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "2c906b9b9e78feff8934a0c91664020249ca6e29", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f46ecf6dcc9047bf659932990e55759a00978c0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f46ecf6dcc9047bf659932990e55759a00978c0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7f46ecf6dcc9047bf659932990e55759a00978c0", "patch": "@@ -1,3 +1,8 @@\n+2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Apply the\n+\tpromotion to static memory earlier in the processing.\n+\n 2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Only set the TYPE_ALIGN_OK"}, {"sha": "0798a8f2da412ddcc7a60dd9fa1d13753db055df", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f46ecf6dcc9047bf659932990e55759a00978c0/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f46ecf6dcc9047bf659932990e55759a00978c0/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=7f46ecf6dcc9047bf659932990e55759a00978c0", "patch": "@@ -1423,6 +1423,19 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t    gnu_size = NULL_TREE;\n \t  }\n \n+\t/* If this is an aggregate constant initialized to a constant, force it\n+\t   to be statically allocated.  This saves an initialization copy.  */\n+\tif (!static_flag\n+\t    && const_flag\n+\t    && gnu_expr\n+\t    && TREE_CONSTANT (gnu_expr)\n+\t    && AGGREGATE_TYPE_P (gnu_type)\n+\t    && tree_fits_uhwi_p (TYPE_SIZE_UNIT (gnu_type))\n+\t    && !(TYPE_IS_PADDING_P (gnu_type)\n+\t\t && !tree_fits_uhwi_p (TYPE_SIZE_UNIT\n+\t\t\t\t       (TREE_TYPE (TYPE_FIELDS (gnu_type))))))\n+\t  static_flag = true;\n+\n \t/* If this is an aliased object with an unconstrained array nominal\n \t   subtype, we make its type a thin reference, i.e. the reference\n \t   counterpart of a thin pointer, so it points to the array part.\n@@ -1474,18 +1487,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\t&& No (Address_Clause (gnat_entity))))\n \t  gnu_ext_name = create_concat_name (gnat_entity, NULL);\n \n-\t/* If this is an aggregate constant initialized to a constant, force it\n-\t   to be statically allocated.  This saves an initialization copy.  */\n-\tif (!static_flag\n-\t    && const_flag\n-\t    && gnu_expr && TREE_CONSTANT (gnu_expr)\n-\t    && AGGREGATE_TYPE_P (gnu_type)\n-\t    && tree_fits_uhwi_p (TYPE_SIZE_UNIT (gnu_type))\n-\t    && !(TYPE_IS_PADDING_P (gnu_type)\n-\t\t && !tree_fits_uhwi_p (TYPE_SIZE_UNIT\n-\t\t\t\t       (TREE_TYPE (TYPE_FIELDS (gnu_type))))))\n-\t  static_flag = true;\n-\n \t/* Deal with a pragma Linker_Section on a constant or variable.  */\n \tif ((kind == E_Constant || kind == E_Variable)\n \t    && Present (Linker_Section_Pragma (gnat_entity)))"}]}