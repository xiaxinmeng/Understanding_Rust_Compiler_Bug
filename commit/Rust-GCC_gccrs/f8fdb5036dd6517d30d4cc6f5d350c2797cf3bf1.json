{"sha": "f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmZGI1MDM2ZGQ2NTE3ZDMwZDRjYzZmNWQzNTBjMjc5N2NmM2JmMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-01-17T22:27:26Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-17T22:27:26Z"}, "message": "mips-protos.h (mips_output_external): Make it return void.\n\ngcc/\n2007-01-17  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/mips/mips-protos.h (mips_output_external): Make it\n\treturn void.\n\t* config/mips/iris.h (TARGET_ASM_EXTERNAL_LIBCALL): Removed.\n\t* config/mips/mips.c (irix_output_external_libcall): Likewise.\n\t(extern_list): Likewise.\n\t(extern_head): Likewise.\n\t(TARGET_ASM_FILE_END): Likewise.\n\t(mips_file_end): Likewise.\n\t(mips_output_external): Rewritten.\n\nFrom-SVN: r120880", "tree": {"sha": "4f967f5492976e4918381d858c53db78ff1c9563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f967f5492976e4918381d858c53db78ff1c9563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "495fb8cdd8bda6162916d2da559c5af690cb1258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495fb8cdd8bda6162916d2da559c5af690cb1258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/495fb8cdd8bda6162916d2da559c5af690cb1258"}], "stats": {"total": 145, "additions": 40, "deletions": 105}, "files": [{"sha": "3cc70a128299d0da857d5368abe827ca1797c9d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "patch": "@@ -1,3 +1,15 @@\n+2007-01-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/mips/mips-protos.h (mips_output_external): Make it\n+\treturn void.\n+\t* config/mips/iris.h (TARGET_ASM_EXTERNAL_LIBCALL): Removed.\n+\t* config/mips/mips.c (irix_output_external_libcall): Likewise.\n+\t(extern_list): Likewise.\n+\t(extern_head): Likewise.\n+\t(TARGET_ASM_FILE_END): Likewise.\n+\t(mips_file_end): Likewise.\n+\t(mips_output_external): Rewritten.\n+\n 2007-01-18  Ben Elliston  <bje@au.ibm.com>\n \n \t* genpreds.c (write_insn_preds_c): Only write out the function"}, {"sha": "58775e798a869b08b61dd80891961871dbaf6a53", "filename": "gcc/config/mips/iris.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2Fconfig%2Fmips%2Firis.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2Fconfig%2Fmips%2Firis.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis.h?ref=f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "patch": "@@ -61,10 +61,6 @@ Boston, MA 02110-1301, USA.  */\n #undef ASM_FINISH_DECLARE_OBJECT\n #define ASM_FINISH_DECLARE_OBJECT mips_finish_declare_object\n \n-/* Also do this for libcalls.  */\n-#undef TARGET_ASM_EXTERNAL_LIBCALL\n-#define TARGET_ASM_EXTERNAL_LIBCALL irix_output_external_libcall\n-\n /* The linker needs a space after \"-o\".  */\n #define SWITCHES_NEED_SPACES \"o\"\n "}, {"sha": "e5716da4d03a7c81bd36ec9dbb3c16dbc4e06f2d", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "patch": "@@ -197,7 +197,7 @@ extern HOST_WIDE_INT mips_debugger_offset (rtx, HOST_WIDE_INT);\n \n extern void print_operand (FILE *, rtx, int);\n extern void print_operand_address (FILE *, rtx);\n-extern int mips_output_external (FILE *, tree, const char *);\n+extern void mips_output_external (FILE *, tree, const char *);\n extern void mips_output_filename (FILE *, const char *);\n extern void mips_output_ascii (FILE *, const char *, size_t, const char *);\n extern void mips_output_aligned_bss (FILE *, tree, const char *,"}, {"sha": "8c405790b5f6dcb348e9540bf612c4bc37c53c01", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 27, "deletions": 100, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=f8fdb5036dd6517d30d4cc6f5d350c2797cf3bf1", "patch": "@@ -303,11 +303,7 @@ static void mips_set_tune (const struct mips_cpu_info *);\n static bool mips_handle_option (size_t, const char *, int);\n static struct machine_function *mips_init_machine_status (void);\n static void print_operand_reloc (FILE *, rtx, const char **);\n-#if TARGET_IRIX\n-static void irix_output_external_libcall (rtx);\n-#endif\n static void mips_file_start (void);\n-static void mips_file_end (void);\n static bool mips_rewrite_small_data_p (rtx);\n static int mips_small_data_pattern_1 (rtx *, void *);\n static int mips_rewrite_small_data_1 (rtx *, void *);\n@@ -552,19 +548,6 @@ int sdb_label_count = 0;\n /* Next label # for each statement for Silicon Graphics IRIS systems.  */\n int sym_lineno = 0;\n \n-/* Linked list of all externals that are to be emitted when optimizing\n-   for the global pointer if they haven't been declared by the end of\n-   the program with an appropriate .comm or initialization.  */\n-\n-struct extern_list GTY (())\n-{\n-  struct extern_list *next;\t/* next external */\n-  const char *name;\t\t/* name of the external */\n-  int size;\t\t\t/* size in bytes */\n-};\n-\n-static GTY (()) struct extern_list *extern_head = 0;\n-\n /* Name of the file containing the current function.  */\n const char *current_function_file = \"\";\n \n@@ -1144,9 +1127,7 @@ static struct mips_rtx_cost_data const mips_rtx_cost_data[PROCESSOR_MAX] =\n #define TARGET_MACHINE_DEPENDENT_REORG mips_reorg\n \n #undef TARGET_ASM_FILE_START\n-#undef TARGET_ASM_FILE_END\n #define TARGET_ASM_FILE_START mips_file_start\n-#define TARGET_ASM_FILE_END mips_file_end\n #undef TARGET_ASM_FILE_START_FILE_DIRECTIVE\n #define TARGET_ASM_FILE_START_FILE_DIRECTIVE true\n \n@@ -5786,48 +5767,38 @@ print_operand_address (FILE *file, rtx x)\n    the -G limit but declared by the user to be in a section other\n    than .sbss or .sdata.  */\n \n-int\n-mips_output_external (FILE *file ATTRIBUTE_UNUSED, tree decl, const char *name)\n-{\n-  register struct extern_list *p;\n-\n-  if (!TARGET_EXPLICIT_RELOCS && mips_in_small_data_p (decl))\n-    {\n-      p = (struct extern_list *) ggc_alloc (sizeof (struct extern_list));\n-      p->next = extern_head;\n-      p->name = name;\n-      p->size = int_size_in_bytes (TREE_TYPE (decl));\n-      extern_head = p;\n-    }\n-\n-  if (TARGET_IRIX && mips_abi == ABI_32 && TREE_CODE (decl) == FUNCTION_DECL)\n-    {\n-      p = (struct extern_list *) ggc_alloc (sizeof (struct extern_list));\n-      p->next = extern_head;\n-      p->name = name;\n-      p->size = -1;\n-      extern_head = p;\n-    }\n-\n-  return 0;\n-}\n-\n-#if TARGET_IRIX\n-static void\n-irix_output_external_libcall (rtx fun)\n+void\n+mips_output_external (FILE *file, tree decl, const char *name)\n {\n-  register struct extern_list *p;\n+  default_elf_asm_output_external (file, decl, name);\n \n-  if (mips_abi == ABI_32)\n+  /* We output the name if and only if TREE_SYMBOL_REFERENCED is\n+     set in order to avoid putting out names that are never really\n+     used. */\n+  if (TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl)))\n     {\n-      p = (struct extern_list *) ggc_alloc (sizeof (struct extern_list));\n-      p->next = extern_head;\n-      p->name = XSTR (fun, 0);\n-      p->size = -1;\n-      extern_head = p;\n+      if (!TARGET_EXPLICIT_RELOCS && mips_in_small_data_p (decl))\n+\t{\n+\t  fputs (\"\\t.extern\\t\", file);\n+\t  assemble_name (file, name);\n+\t  fprintf (file, \", \" HOST_WIDE_INT_PRINT_DEC \"\\n\",\n+\t\t   int_size_in_bytes (TREE_TYPE (decl)));\n+\t}\n+      else if (TARGET_IRIX\n+\t       && mips_abi == ABI_32\n+\t       && TREE_CODE (decl) == FUNCTION_DECL)\n+\t{\n+\t  /* In IRIX 5 or IRIX 6 for the O32 ABI, we must output a\n+\t     `.global name .text' directive for every used but\n+\t     undefined function.  If we don't, the linker may perform\n+\t     an optimization (skipping over the insns that set $gp)\n+\t     when it is unsafe.  */\n+\t  fputs (\"\\t.globl \", file);\n+\t  assemble_name (file, name);\n+\t  fputs (\" .text\\n\", file);\n+\t}\n     }\n }\n-#endif\n \f\n /* Emit a new filename to a stream.  If we are smuggling stabs, try to\n    put out a MIPS ECOFF file and a stab.  */\n@@ -5989,50 +5960,6 @@ mips_output_aligned_bss (FILE *stream, tree decl, const char *name,\n }\n #endif\n \f\n-/* Implement TARGET_ASM_FILE_END.  When using assembler macros, emit\n-   .externs for any small-data variables that turned out to be external.  */\n-\n-static void\n-mips_file_end (void)\n-{\n-  tree name_tree;\n-  struct extern_list *p;\n-\n-  if (extern_head)\n-    {\n-      fputs (\"\\n\", asm_out_file);\n-\n-      for (p = extern_head; p != 0; p = p->next)\n-\t{\n-\t  name_tree = get_identifier (p->name);\n-\n-\t  /* Positively ensure only one .extern for any given symbol.  */\n-\t  if (!TREE_ASM_WRITTEN (name_tree)\n-\t      && TREE_SYMBOL_REFERENCED (name_tree))\n-\t    {\n-\t      TREE_ASM_WRITTEN (name_tree) = 1;\n-\t      /* In IRIX 5 or IRIX 6 for the O32 ABI, we must output a\n-\t\t `.global name .text' directive for every used but\n-\t\t undefined function.  If we don't, the linker may perform\n-\t\t an optimization (skipping over the insns that set $gp)\n-\t\t when it is unsafe.  */\n-\t      if (TARGET_IRIX && mips_abi == ABI_32 && p->size == -1)\n-\t\t{\n-\t\t  fputs (\"\\t.globl \", asm_out_file);\n-\t\t  assemble_name (asm_out_file, p->name);\n-\t\t  fputs (\" .text\\n\", asm_out_file);\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  fputs (\"\\t.extern\\t\", asm_out_file);\n-\t\t  assemble_name (asm_out_file, p->name);\n-\t\t  fprintf (asm_out_file, \", %d\\n\", p->size);\n-\t\t}\n-\t    }\n-\t}\n-    }\n-}\n-\n /* Implement ASM_OUTPUT_ALIGNED_DECL_COMMON.  This is usually the same as the\n    elfos.h version, but we also need to handle -muninit-const-in-rodata.  */\n "}]}