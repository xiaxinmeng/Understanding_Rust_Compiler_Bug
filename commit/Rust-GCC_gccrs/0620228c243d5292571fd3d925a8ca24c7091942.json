{"sha": "0620228c243d5292571fd3d925a8ca24c7091942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyMDIyOGMyNDNkNTI5MjU3MWZkM2Q5MjVhOGNhMjRjNzA5MTk0Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-19T23:40:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-19T23:40:30Z"}, "message": "New test from HJ.\n\nFrom-SVN: r19326", "tree": {"sha": "bf69821dc17a88a5852804126c5b9fa092e6416e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf69821dc17a88a5852804126c5b9fa092e6416e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0620228c243d5292571fd3d925a8ca24c7091942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0620228c243d5292571fd3d925a8ca24c7091942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0620228c243d5292571fd3d925a8ca24c7091942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0620228c243d5292571fd3d925a8ca24c7091942/comments", "author": null, "committer": null, "parents": [{"sha": "f77cc4ccb1b1eecbdef4fd0c0346208f79d79879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f77cc4ccb1b1eecbdef4fd0c0346208f79d79879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f77cc4ccb1b1eecbdef4fd0c0346208f79d79879"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "9646f6dd615a172917f5d0009f04cba58d92722b", "filename": "gcc/testsuite/gcc.dg/980414-1.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0620228c243d5292571fd3d925a8ca24c7091942/gcc%2Ftestsuite%2Fgcc.dg%2F980414-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0620228c243d5292571fd3d925a8ca24c7091942/gcc%2Ftestsuite%2Fgcc.dg%2F980414-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F980414-1.c?ref=0620228c243d5292571fd3d925a8ca24c7091942", "patch": "@@ -0,0 +1,76 @@\n+/* Test double on x86. */\n+\n+/* { dg-do run { target i?86-*-* } } */\n+/* { dg-options -O2 } */\n+\n+static __inline  double\n+mypow (double __x, double __y)\n+{\n+  register double __value, __exponent;\n+  long __p = (long) __y;\n+  if (__y == (double) __p)\n+    {\n+      double __r = 1.0;\n+      if (__p == 0)\n+\treturn 1.0;\n+      if (__p < 0)\n+\t{\n+\t  __p = -__p;\n+\t  __x = 1.0 / __x;\n+\t}\n+      while (1)\n+\t{\n+\t  if (__p & 1)\n+\t    __r *= __x;\n+\t  __p >>= 1;\n+\t  if (__p == 0)\n+\t    return __r;\n+\t  __x *= __x;\n+\t}\n+    }\n+  __asm __volatile__\n+    (\"fmul\t%%st(1)\t\t# y * log2(x)\\n\\t\"\n+     \"fstl\t%%st(1)\\n\\t\"\n+     \"frndint\t\t\t# int(y * log2(x))\\n\\t\"\n+     \"fxch\\n\\t\"\n+     \"fsub\t%%st(1)\t\t# fract(y * log2(x))\\n\\t\"\n+     \"f2xm1\t\t\t# 2^(fract(y * log2(x))) - 1\\n\\t\"\n+     : \"=t\" (__value), \"=u\" (__exponent) :  \"0\" (__x), \"1\" (__y));\n+  __value += 1.0;\n+  __asm __volatile__\n+    (\"fscale\"\n+     : \"=t\" (__value) : \"0\" (__value), \"u\" (__exponent));\n+  return __value;\n+}\n+\n+const double E1 = 2.71828182845904523536028747135;\n+\n+double fact (double x)\n+{\n+  double corr;\n+  corr = 1.0;\n+  return corr * mypow(x/E1, x);\n+}\n+\n+int main ()\n+{\n+  double y, z;\n+\n+  y = fact (46.2);\n+  z = mypow (46.2/E1, 46.2);\n+\n+#if 0\n+  printf (\"%26.19e, %26.19e\\n\", y, z);\n+#endif\n+\n+  if (y > z)\n+    y -= z;\n+  else\n+    y = z - y;\n+\n+  y /= z;\n+  if (y > 0.1)\n+    abort ();\n+ \n+  return 0;\n+}"}]}