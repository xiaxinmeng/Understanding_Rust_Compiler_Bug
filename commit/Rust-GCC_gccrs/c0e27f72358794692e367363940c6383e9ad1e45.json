{"sha": "c0e27f72358794692e367363940c6383e9ad1e45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlMjdmNzIzNTg3OTQ2OTJlMzY3MzYzOTQwYzYzODNlOWFkMWU0NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-25T08:36:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-25T11:12:20Z"}, "message": "tree-optimization/95271 - fix bswap vectorization invariant SLP type\n\nThis properly updates invariant SLP nodes vector types for bswap\nvectorization.\n\n2020-05-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/95271\n\t* tree-vect-stmts.c (vectorizable_bswap): Update invariant SLP\n\tchildren vector type.\n\t(vectorizable_call): Pass down slp ops.\n\n\t* gcc.dg/vect/bb-slp-pr95271.c: New testcase.", "tree": {"sha": "d6d197914bff904677925e5257a14b2da108745a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6d197914bff904677925e5257a14b2da108745a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0e27f72358794692e367363940c6383e9ad1e45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e27f72358794692e367363940c6383e9ad1e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e27f72358794692e367363940c6383e9ad1e45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e27f72358794692e367363940c6383e9ad1e45/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d31694544d2d805151899ab0a0bc654767035ad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d31694544d2d805151899ab0a0bc654767035ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d31694544d2d805151899ab0a0bc654767035ad6"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "1e037dabe4974b15e3a8a56d2a04577803f29eb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0e27f72358794692e367363940c6383e9ad1e45", "patch": "@@ -1,3 +1,10 @@\n+2020-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95271\n+\t* tree-vect-stmts.c (vectorizable_bswap): Update invariant SLP\n+\tchildren vector type.\n+\t(vectorizable_call): Pass down slp ops.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95297"}, {"sha": "abe0f32be3e464a0de086bb5e818770a39519a75", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0e27f72358794692e367363940c6383e9ad1e45", "patch": "@@ -1,3 +1,8 @@\n+2020-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95271\n+\t* gcc.dg/vect/bb-slp-pr95271.c: New testcase.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95297"}, {"sha": "2f23598040564791e34544717dcc11ba10ad9e85", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr95271.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr95271.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr95271.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr95271.c?ref=c0e27f72358794692e367363940c6383e9ad1e45", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-march=cooperlake\" { target x86_64-*-* i?86-*-* } } */\n+\n+int a;\n+struct b c;\n+long d;\n+struct b {\n+  unsigned long address;\n+  unsigned long e;\n+};\n+void f()\n+{\n+  d = (long)(&a)[0] << 56 | (long)((unsigned char *)&a)[1] << 48 |\n+      (long)((unsigned char *)&a)[2] << 40 |\n+      (long)((unsigned char *)&a)[3] << 32 |\n+      (long)((unsigned char *)&a)[4] << 24 | ((unsigned char *)&a)[5] << 16 |\n+      ((unsigned char *)&a)[6] << 8 | ((unsigned char *)&a)[7];\n+  c.address = c.e = d;\n+}"}, {"sha": "76c7b995817118fd53c290b36bb539f64ef3a9e0", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e27f72358794692e367363940c6383e9ad1e45/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=c0e27f72358794692e367363940c6383e9ad1e45", "patch": "@@ -3009,6 +3009,7 @@ static bool\n vectorizable_bswap (vec_info *vinfo,\n \t\t    stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t\t    stmt_vec_info *vec_stmt, slp_tree slp_node,\n+\t\t    slp_tree *slp_op,\n \t\t    tree vectype_in, stmt_vector_for_cost *cost_vec)\n {\n   tree op, vectype;\n@@ -3051,6 +3052,15 @@ vectorizable_bswap (vec_info *vinfo,\n \n   if (! vec_stmt)\n     {\n+      if (slp_node\n+\t  && !vect_maybe_update_slp_op_vectype (slp_op[0], vectype_in))\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t     \"incompatible vector types for invariants\\n\");\n+\t  return false;\n+\t}\n+\n       STMT_VINFO_TYPE (stmt_info) = call_vec_info_type;\n       DUMP_VECT_SCOPE (\"vectorizable_bswap\");\n       if (! slp_node)\n@@ -3377,7 +3387,7 @@ vectorizable_call (vec_info *vinfo,\n \t\t   || gimple_call_builtin_p (stmt, BUILT_IN_BSWAP32)\n \t\t   || gimple_call_builtin_p (stmt, BUILT_IN_BSWAP64)))\n \treturn vectorizable_bswap (vinfo, stmt_info, gsi, vec_stmt, slp_node,\n-\t\t\t\t   vectype_in, cost_vec);\n+\t\t\t\t   slp_op, vectype_in, cost_vec);\n       else\n \t{\n \t  if (dump_enabled_p ())"}]}