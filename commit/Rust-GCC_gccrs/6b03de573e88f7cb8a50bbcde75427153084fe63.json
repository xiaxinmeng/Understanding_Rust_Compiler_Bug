{"sha": "6b03de573e88f7cb8a50bbcde75427153084fe63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIwM2RlNTczZTg4ZjdjYjhhNTBiYmNkZTc1NDI3MTUzMDg0ZmU2Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-16T14:15:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-16T14:15:55Z"}, "message": "re PR tree-optimization/44545 (internal compiler error: in remove_unreachable_handlers, at tree-eh)\n\n2010-11-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/44545\n\t* tree-ssa-reassoc.c (linearize_expr_tree): Possibly throwing\n\tstatements are not reassociatable.\n\t(reassociate_bb): Likewise.\n\n\t* gcc.dg/pr44545.c: New testcase.\n\nFrom-SVN: r166799", "tree": {"sha": "78458f4d7ffc2e353bb0f301c6616d2c851ba959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78458f4d7ffc2e353bb0f301c6616d2c851ba959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b03de573e88f7cb8a50bbcde75427153084fe63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b03de573e88f7cb8a50bbcde75427153084fe63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b03de573e88f7cb8a50bbcde75427153084fe63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b03de573e88f7cb8a50bbcde75427153084fe63/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d61c486744841d15dd9131cbcbc7bd5c27a06eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61c486744841d15dd9131cbcbc7bd5c27a06eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d61c486744841d15dd9131cbcbc7bd5c27a06eaa"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "9bfc01bd56e4bc82673cc558474195410e35f075", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b03de573e88f7cb8a50bbcde75427153084fe63", "patch": "@@ -1,3 +1,10 @@\n+2010-11-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44545\n+\t* tree-ssa-reassoc.c (linearize_expr_tree): Possibly throwing\n+\tstatements are not reassociatable.\n+\t(reassociate_bb): Likewise.\n+\n 2010-11-16  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* bitmap.c: Delete unnecessary includes."}, {"sha": "1ffbb15a1f002a8df4f13b9755029c4bd17fdbb5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b03de573e88f7cb8a50bbcde75427153084fe63", "patch": "@@ -1,3 +1,8 @@\n+2010-11-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44545\n+\t* gcc.dg/pr44545.c: New testcase.\n+\n 2010-11-16  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/46366"}, {"sha": "51983ef76b977537716ce79511c9e0f3329fdc06", "filename": "gcc/testsuite/gcc.dg/pr44545.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44545.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44545.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44545.c?ref=6b03de573e88f7cb8a50bbcde75427153084fe63", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fnon-call-exceptions -ftrapv -fexceptions\" } */\n+int\n+DrawChunk(int *tabSize, int x) \n+{\n+  const int numEnds = 10;\n+  int ends[numEnds + 2];\n+  if (*tabSize > 0) {\n+      x -= 5;\n+      x = (x + *tabSize) / *tabSize;\n+  }\n+}\n+"}, {"sha": "197591e330f919f5936d0618d2a1af7458f2e56b", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b03de573e88f7cb8a50bbcde75427153084fe63/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=6b03de573e88f7cb8a50bbcde75427153084fe63", "patch": "@@ -1786,13 +1786,15 @@ linearize_expr_tree (VEC(operand_entry_t, heap) **ops, gimple stmt,\n   if (TREE_CODE (binlhs) == SSA_NAME)\n     {\n       binlhsdef = SSA_NAME_DEF_STMT (binlhs);\n-      binlhsisreassoc = is_reassociable_op (binlhsdef, rhscode, loop);\n+      binlhsisreassoc = (is_reassociable_op (binlhsdef, rhscode, loop)\n+\t\t\t && !stmt_could_throw_p (binlhsdef));\n     }\n \n   if (TREE_CODE (binrhs) == SSA_NAME)\n     {\n       binrhsdef = SSA_NAME_DEF_STMT (binrhs);\n-      binrhsisreassoc = is_reassociable_op (binrhsdef, rhscode, loop);\n+      binrhsisreassoc = (is_reassociable_op (binrhsdef, rhscode, loop)\n+\t\t\t && !stmt_could_throw_p (binrhsdef));\n     }\n \n   /* If the LHS is not reassociable, but the RHS is, we need to swap\n@@ -2027,7 +2029,8 @@ reassociate_bb (basic_block bb)\n     {\n       gimple stmt = gsi_stmt (gsi);\n \n-      if (is_gimple_assign (stmt))\n+      if (is_gimple_assign (stmt)\n+\t  && !stmt_could_throw_p (stmt))\n \t{\n \t  tree lhs, rhs1, rhs2;\n \t  enum tree_code rhs_code = gimple_assign_rhs_code (stmt);"}]}