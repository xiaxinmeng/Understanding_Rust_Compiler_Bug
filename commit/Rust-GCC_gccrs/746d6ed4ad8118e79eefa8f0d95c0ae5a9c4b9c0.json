{"sha": "746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ2ZDZlZDRhZDgxMThlNzllZWZhOGYwZDk1YzBhZTVhOWM0YjljMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-05-02T22:28:46Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-05-02T22:28:46Z"}, "message": "libgo: add support for the Nios II architecture\n    \n    Reviewed-on: https://go-review.googlesource.com/90775\n\nFrom-SVN: r259866", "tree": {"sha": "f758bdf5feaa7053b02002423457107591a69b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f758bdf5feaa7053b02002423457107591a69b03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/comments", "author": null, "committer": null, "parents": [{"sha": "e1aeb9bc9e8704c99a6fb8a83983e42ea8967637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1aeb9bc9e8704c99a6fb8a83983e42ea8967637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1aeb9bc9e8704c99a6fb8a83983e42ea8967637"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "09c10470b5473ee24685e8e175f9b1001945d4ff", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -1,4 +1,4 @@\n-380527c032f02446438c71b0ac0026bcab416be5\n+24cd2e0542cc227200c3f91b9e0eefaa726cbc1c\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "11e04aafc8bba672de7876992aec5e7a26bb25fe", "filename": "libgo/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -13653,10 +13653,10 @@ esac\n #   - libgo/go/syscall/endian_XX.go\n #   - possibly others\n # - possibly update files in libgo/go/internal/syscall/unix\n-ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le riscv64 s390 s390x sh shbe sparc sparc64\"\n+ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le nios2 ppc ppc64 ppc64le riscv64 s390 s390x sh shbe sparc sparc64\"\n \n # All known GOARCH family values.\n-ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 RISCV64 S390 S390X SH SPARC SPARC64\"\n+ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 NIOS2 PPC PPC64 RISCV64 S390 S390X SH SPARC SPARC64\"\n \n GOARCH=unknown\n case ${host} in\n@@ -13745,6 +13745,9 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n         ;;\n     esac\n     ;;\n+  nios2-*-*)\n+    GOARCH=nios2\n+    ;;\n   rs6000*-*-* | powerpc*-*-*)\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */"}, {"sha": "9f4bf50b22bc4c2535bd907097071ceedeb07574", "filename": "libgo/configure.ac", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -224,10 +224,10 @@ AC_SUBST(USE_DEJAGNU)\n #   - libgo/go/syscall/endian_XX.go\n #   - possibly others\n # - possibly update files in libgo/go/internal/syscall/unix\n-ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le riscv64 s390 s390x sh shbe sparc sparc64\"\n+ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le nios2 ppc ppc64 ppc64le riscv64 s390 s390x sh shbe sparc sparc64\"\n \n # All known GOARCH family values.\n-ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 RISCV64 S390 S390X SH SPARC SPARC64\"\n+ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 NIOS2 PPC PPC64 RISCV64 S390 S390X SH SPARC SPARC64\"\n \n GOARCH=unknown\n case ${host} in\n@@ -290,6 +290,9 @@ changequote([,])dnl\n         ;;\n     esac\n     ;;\n+  nios2-*-*)\n+    GOARCH=nios2\n+    ;;\n   rs6000*-*-* | powerpc*-*-*)\n     AC_COMPILE_IFELSE([\n #ifdef _ARCH_PPC64"}, {"sha": "890a365ceef088beb4022fc9a84ca5c3a5112fbd", "filename": "libgo/go/cmd/cgo/main.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -165,6 +165,7 @@ var ptrSizeMap = map[string]int64{\n \t\"mips64le\":    8,\n \t\"mips64p32\":   4,\n \t\"mips64p32le\": 4,\n+\t\"nios2\":       4,\n \t\"ppc\":         4,\n \t\"ppc64\":       8,\n \t\"ppc64le\":     8,\n@@ -190,6 +191,7 @@ var intSizeMap = map[string]int64{\n \t\"mips64le\":    8,\n \t\"mips64p32\":   8,\n \t\"mips64p32le\": 8,\n+\t\"nios2\":       4,\n \t\"ppc\":         4,\n \t\"ppc64\":       8,\n \t\"ppc64le\":     8,"}, {"sha": "0c3963463815ae9ca3c7bd87f688158858d44df8", "filename": "libgo/go/go/build/syslist.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -5,4 +5,4 @@\n package build\n \n const goosList = \"aix android darwin dragonfly freebsd linux nacl netbsd openbsd plan9 solaris windows zos \"\n-const goarchList = \"386 amd64 amd64p32 arm armbe arm64 arm64be alpha m68k ppc64 ppc64le mips mipsle mips64 mips64le mips64p32 mips64p32le ppc riscv64 s390 s390x sh shbe sparc sparc64\"\n+const goarchList = \"386 amd64 amd64p32 arm armbe arm64 arm64be alpha m68k ppc64 ppc64le mips mipsle mips64 mips64le mips64p32 mips64p32le nios2 ppc riscv64 s390 s390x sh shbe sparc sparc64\""}, {"sha": "2d513df28ddc32d18267c0102b814bb349cd546b", "filename": "libgo/go/internal/syscall/unix/getrandom_linux_generic.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_generic.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_generic.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fsyscall%2Funix%2Fgetrandom_linux_generic.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build arm64 riscv64\n+// +build arm64 nios2 riscv64\n \n package unix\n "}, {"sha": "344912711d95e430de7fecb584ea7bb0a01465a1", "filename": "libgo/go/runtime/hash32.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fruntime%2Fhash32.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fruntime%2Fhash32.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fhash32.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -6,7 +6,7 @@\n //   xxhash: https://code.google.com/p/xxhash/\n // cityhash: https://code.google.com/p/cityhash/\n \n-// +build 386 arm armbe m68k mips mipsle ppc s390 sh shbe sparc\n+// +build 386 arm armbe m68k mips mipsle nios2 ppc s390 sh shbe sparc\n \n package runtime\n "}, {"sha": "1288c1a2aaa0b170f907aa383cf1a2441a1facea", "filename": "libgo/go/runtime/lfstack_32bit.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build 386 arm nacl armbe m68k mips mipsle mips64p32 mips64p32le ppc s390 sh shbe sparc\n+// +build 386 arm nacl armbe m68k mips mipsle mips64p32 mips64p32le nios2 ppc s390 sh shbe sparc\n \n package runtime\n "}, {"sha": "9f52e8d264306aaed5fa1eb892760c400e13da15", "filename": "libgo/go/runtime/unaligned2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fruntime%2Funaligned2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fruntime%2Funaligned2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Funaligned2.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build arm mips mipsle mips64 mips64le armbe m68k sparc alpha ia64 mips64p32 mips64p32le sh shbe sparc64\n+// +build alpha arm armbe ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le nios2 sh shbe sparc sparc64\n \n package runtime\n "}, {"sha": "a5d32ae15f927b0472a476ca9aa23f0c85c43e76", "filename": "libgo/go/syscall/endian_little.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fsyscall%2Fendian_little.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fsyscall%2Fendian_little.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fendian_little.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n //\n-// +build 386 amd64 amd64p32 arm arm64 ppc64le mips64le mipsle alpha ia64 mips64p32le sh riscv64\n+// +build 386 alpha amd64 amd64p32 arm arm64 ia64 mips64le mipsle mips64p32le nios2 ppc64le riscv64 sh\n \n package syscall\n "}, {"sha": "f515fce35e9ccc705baabd508cd986ea7a28188c", "filename": "libgo/go/syscall/libcall_linux_ustat.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fsyscall%2Flibcall_linux_ustat.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgo%2Fsyscall%2Flibcall_linux_ustat.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux_ustat.go?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -4,7 +4,7 @@\n \n // GNU/Linux library ustat call.\n // This is not supported on some kernels, such as arm64.\n-// +build !arm64,!riscv64\n+// +build !arm64,!nios2,!riscv64\n \n package syscall\n "}, {"sha": "11bca7bb18f041986878b77489f3c400a54f9115", "filename": "libgo/goarch.sh", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgoarch.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fgoarch.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgoarch.sh?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -126,6 +126,13 @@ case $goarch in\n \t\t;;\n \tesac\n \t;;\n+    nios2)\n+        family=NIOS2\n+        cachelinesize=32\n+        minframesize=16\n+        pcquantum=4\n+        ptrsize=4\n+        ;;\n     ppc)\n \tfamily=PPC\n \tbigendian=true"}, {"sha": "fb800133c5eae8ad02c3497ce91ab90540e3e94a", "filename": "libgo/match.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fmatch.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Fmatch.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmatch.sh?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -116,7 +116,7 @@ for f in $gofiles; do\n \taix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t    tag1=nonmatchingtag\n \t    ;;\n-\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n+\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | nios2 | ppc | ppc64 | ppc64le | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n \t    tag1=nonmatchingtag\n \t    ;;\n     esac\n@@ -128,7 +128,7 @@ for f in $gofiles; do\n \taix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t    tag2=nonmatchingtag\n \t    ;;\n-\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n+\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | nios2 | ppc | ppc64 | ppc64le | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n \t    tag2=nonmatchingtag\n \t    ;;\n     esac"}, {"sha": "d9353d1481047c69196fd91e3c70a1501896346f", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=746d6ed4ad8118e79eefa8f0d95c0ae5a9c4b9c0", "patch": "@@ -314,7 +314,7 @@ x)\n \t    aix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t\ttag1=nonmatchingtag\n \t\t;;\n-\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n+\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le\u00b7| nios2 | ppc | ppc64 | ppc64le | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n \t\ttag1=nonmatchingtag\n \t\t;;\n \t    esac\n@@ -326,7 +326,7 @@ x)\n \t    aix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t\ttag2=nonmatchingtag\n \t\t;;\n-\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n+\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le\u00b7| nios2 | ppc | ppc64 | ppc64le | riscv64 | s390 | s390x | sh | shbe | sparc | sparc64)\n \t\ttag2=nonmatchingtag\n \t\t;;\n \t    esac"}]}