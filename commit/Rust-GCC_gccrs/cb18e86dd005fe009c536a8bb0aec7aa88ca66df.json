{"sha": "cb18e86dd005fe009c536a8bb0aec7aa88ca66df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IxOGU4NmRkMDA1ZmUwMDljNTM2YThiYjBhZWM3YWE4OGNhNjZkZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-07T18:43:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-07T18:43:01Z"}, "message": "[AArch64] Make SVE UNSPEC_COND_*s match the insn mnemonic\n\nThis patch makes the UNSPEC_COND* names match the instruction mnemonics,\nrather than having the previous mixture in which some used instructions\nwhile others used operator names.\n\n2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/iterators.md (UNSPEC_COND_ADD): Rename to...\n\t(UNSPEC_COND_FADD): ...this.\n\t(UNSPEC_COND_SUB): Rename to...\n\t(UNSPEC_COND_FSUB): ...this.\n\t(UNSPEC_COND_MUL): Rename to...\n\t(UNSPEC_COND_FMUL): ...this.\n\t(UNSPEC_COND_DIV): Rename to...\n\t(UNSPEC_COND_FDIV): ...this.\n\t(UNSPEC_COND_MAX): Rename to...\n\t(UNSPEC_COND_FMAXNM): ...this.\n\t(UNSPEC_COND_MIN): Rename to...\n\t(UNSPEC_COND_FMINNM): ...this.\n\t(UNSPEC_COND_LT): Rename to...\n\t(UNSPEC_COND_FCMLT): ...this.\n\t(UNSPEC_COND_LE): Rename to...\n\t(UNSPEC_COND_FCMLE): ...this.\n\t(UNSPEC_COND_EQ): Rename to...\n\t(UNSPEC_COND_FCMEQ): ...this.\n\t(UNSPEC_COND_NE): Rename to...\n\t(UNSPEC_COND_FCMNE): ...this.\n\t(UNSPEC_COND_GE): Rename to...\n\t(UNSPEC_COND_FCMGE): ...this.\n\t(UNSPEC_COND_GT): Rename to...\n\t(UNSPEC_COND_FCMGT): ...this.\n\t(SVE_COND_FP_BINARY, SVE_COND_FP_CMP, optab, cmp_op, sve_fp_op)\n\t(sve_fp_op_rev): Update accordingly.\n\t* config/aarch64/aarch64.c (aarch64_unspec_cond_code): Likewise.\n\nFrom-SVN: r274185", "tree": {"sha": "a3edcc14531612d68a218739af073bda31c09b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3edcc14531612d68a218739af073bda31c09b95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb18e86dd005fe009c536a8bb0aec7aa88ca66df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb18e86dd005fe009c536a8bb0aec7aa88ca66df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb18e86dd005fe009c536a8bb0aec7aa88ca66df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb18e86dd005fe009c536a8bb0aec7aa88ca66df/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "915d28fe74dbb30352702ab07ea5bf30747043bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/915d28fe74dbb30352702ab07ea5bf30747043bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/915d28fe74dbb30352702ab07ea5bf30747043bb"}], "stats": {"total": 138, "additions": 87, "deletions": 51}, "files": [{"sha": "aa0ad4aff3e499ec3aef4fded641c655331ba4ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb18e86dd005fe009c536a8bb0aec7aa88ca66df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb18e86dd005fe009c536a8bb0aec7aa88ca66df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb18e86dd005fe009c536a8bb0aec7aa88ca66df", "patch": "@@ -1,3 +1,33 @@\n+2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/iterators.md (UNSPEC_COND_ADD): Rename to...\n+\t(UNSPEC_COND_FADD): ...this.\n+\t(UNSPEC_COND_SUB): Rename to...\n+\t(UNSPEC_COND_FSUB): ...this.\n+\t(UNSPEC_COND_MUL): Rename to...\n+\t(UNSPEC_COND_FMUL): ...this.\n+\t(UNSPEC_COND_DIV): Rename to...\n+\t(UNSPEC_COND_FDIV): ...this.\n+\t(UNSPEC_COND_MAX): Rename to...\n+\t(UNSPEC_COND_FMAXNM): ...this.\n+\t(UNSPEC_COND_MIN): Rename to...\n+\t(UNSPEC_COND_FMINNM): ...this.\n+\t(UNSPEC_COND_LT): Rename to...\n+\t(UNSPEC_COND_FCMLT): ...this.\n+\t(UNSPEC_COND_LE): Rename to...\n+\t(UNSPEC_COND_FCMLE): ...this.\n+\t(UNSPEC_COND_EQ): Rename to...\n+\t(UNSPEC_COND_FCMEQ): ...this.\n+\t(UNSPEC_COND_NE): Rename to...\n+\t(UNSPEC_COND_FCMNE): ...this.\n+\t(UNSPEC_COND_GE): Rename to...\n+\t(UNSPEC_COND_FCMGE): ...this.\n+\t(UNSPEC_COND_GT): Rename to...\n+\t(UNSPEC_COND_FCMGT): ...this.\n+\t(SVE_COND_FP_BINARY, SVE_COND_FP_CMP, optab, cmp_op, sve_fp_op)\n+\t(sve_fp_op_rev): Update accordingly.\n+\t* config/aarch64/aarch64.c (aarch64_unspec_cond_code): Likewise.\n+\n 2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64-sve.md: Reorganize contents and add"}, {"sha": "b99d5ec0e2b06521bd5b59df22926a9a56d2688d", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb18e86dd005fe009c536a8bb0aec7aa88ca66df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb18e86dd005fe009c536a8bb0aec7aa88ca66df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=cb18e86dd005fe009c536a8bb0aec7aa88ca66df", "patch": "@@ -17097,17 +17097,17 @@ aarch64_unspec_cond_code (rtx_code code)\n   switch (code)\n     {\n     case NE:\n-      return UNSPEC_COND_NE;\n+      return UNSPEC_COND_FCMNE;\n     case EQ:\n-      return UNSPEC_COND_EQ;\n+      return UNSPEC_COND_FCMEQ;\n     case LT:\n-      return UNSPEC_COND_LT;\n+      return UNSPEC_COND_FCMLT;\n     case GT:\n-      return UNSPEC_COND_GT;\n+      return UNSPEC_COND_FCMGT;\n     case LE:\n-      return UNSPEC_COND_LE;\n+      return UNSPEC_COND_FCMLE;\n     case GE:\n-      return UNSPEC_COND_GE;\n+      return UNSPEC_COND_FCMGE;\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "fcd550ce7448279b3634d8b8cb2f1f70afcdd4de", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 51, "deletions": 45, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb18e86dd005fe009c536a8bb0aec7aa88ca66df/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb18e86dd005fe009c536a8bb0aec7aa88ca66df/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=cb18e86dd005fe009c536a8bb0aec7aa88ca66df", "patch": "@@ -468,22 +468,22 @@\n     UNSPEC_XORF\t\t; Used in aarch64-sve.md.\n     UNSPEC_SMUL_HIGHPART ; Used in aarch64-sve.md.\n     UNSPEC_UMUL_HIGHPART ; Used in aarch64-sve.md.\n-    UNSPEC_COND_ADD\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_SUB\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_MUL\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_DIV\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_MAX\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_MIN\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FADD\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FCMEQ\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FCMGE\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FCMGT\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FCMLE\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FCMLT\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FCMNE\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FDIV\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FMAXNM\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FMINNM\t; Used in aarch64-sve.md.\n     UNSPEC_COND_FMLA\t; Used in aarch64-sve.md.\n     UNSPEC_COND_FMLS\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FMUL\t; Used in aarch64-sve.md.\n     UNSPEC_COND_FNMLA\t; Used in aarch64-sve.md.\n     UNSPEC_COND_FNMLS\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_LT\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_LE\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_EQ\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_NE\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_GE\t; Used in aarch64-sve.md.\n-    UNSPEC_COND_GT\t; Used in aarch64-sve.md.\n+    UNSPEC_COND_FSUB\t; Used in aarch64-sve.md.\n     UNSPEC_LASTB\t; Used in aarch64-sve.md.\n     UNSPEC_FCADD90\t; Used in aarch64-simd.md.\n     UNSPEC_FCADD270\t; Used in aarch64-simd.md.\n@@ -1609,18 +1609,24 @@\n \n (define_int_iterator MUL_HIGHPART [UNSPEC_SMUL_HIGHPART UNSPEC_UMUL_HIGHPART])\n \n-(define_int_iterator SVE_COND_FP_BINARY [UNSPEC_COND_ADD UNSPEC_COND_SUB\n-\t\t\t\t\t UNSPEC_COND_MUL UNSPEC_COND_DIV\n-\t\t\t\t\t UNSPEC_COND_MAX UNSPEC_COND_MIN])\n+(define_int_iterator SVE_COND_FP_BINARY [UNSPEC_COND_FADD\n+\t\t\t\t\t UNSPEC_COND_FDIV\n+\t\t\t\t\t UNSPEC_COND_FMAXNM\n+\t\t\t\t\t UNSPEC_COND_FMINNM\n+\t\t\t\t\t UNSPEC_COND_FMUL\n+\t\t\t\t\t UNSPEC_COND_FSUB])\n \n (define_int_iterator SVE_COND_FP_TERNARY [UNSPEC_COND_FMLA\n \t\t\t\t\t  UNSPEC_COND_FMLS\n \t\t\t\t\t  UNSPEC_COND_FNMLA\n \t\t\t\t\t  UNSPEC_COND_FNMLS])\n \n-(define_int_iterator SVE_COND_FP_CMP [UNSPEC_COND_LT UNSPEC_COND_LE\n-\t\t\t\t      UNSPEC_COND_EQ UNSPEC_COND_NE\n-\t\t\t\t      UNSPEC_COND_GE UNSPEC_COND_GT])\n+(define_int_iterator SVE_COND_FP_CMP [UNSPEC_COND_FCMEQ\n+\t\t\t\t      UNSPEC_COND_FCMGE\n+\t\t\t\t      UNSPEC_COND_FCMGT\n+\t\t\t\t      UNSPEC_COND_FCMLE\n+\t\t\t\t      UNSPEC_COND_FCMLT\n+\t\t\t\t      UNSPEC_COND_FCMNE])\n \n (define_int_iterator FCADD [UNSPEC_FCADD90\n \t\t\t    UNSPEC_FCADD270])\n@@ -1657,16 +1663,16 @@\n \t\t\t(UNSPEC_ANDV \"and\")\n \t\t\t(UNSPEC_IORV \"ior\")\n \t\t\t(UNSPEC_XORV \"xor\")\n-\t\t\t(UNSPEC_COND_ADD \"add\")\n-\t\t\t(UNSPEC_COND_SUB \"sub\")\n-\t\t\t(UNSPEC_COND_MUL \"mul\")\n-\t\t\t(UNSPEC_COND_DIV \"div\")\n-\t\t\t(UNSPEC_COND_MAX \"smax\")\n-\t\t\t(UNSPEC_COND_MIN \"smin\")\n+\t\t\t(UNSPEC_COND_FADD \"add\")\n+\t\t\t(UNSPEC_COND_FDIV \"div\")\n+\t\t\t(UNSPEC_COND_FMAXNM \"smax\")\n+\t\t\t(UNSPEC_COND_FMINNM \"smin\")\n \t\t\t(UNSPEC_COND_FMLA \"fma\")\n \t\t\t(UNSPEC_COND_FMLS \"fnma\")\n+\t\t\t(UNSPEC_COND_FMUL \"mul\")\n \t\t\t(UNSPEC_COND_FNMLA \"fnms\")\n-\t\t\t(UNSPEC_COND_FNMLS \"fms\")])\n+\t\t\t(UNSPEC_COND_FNMLS \"fms\")\n+\t\t\t(UNSPEC_COND_FSUB \"sub\")])\n \n (define_int_attr  maxmin_uns [(UNSPEC_UMAXV \"umax\")\n \t\t\t      (UNSPEC_UMINV \"umin\")\n@@ -1888,26 +1894,26 @@\n \t\t\t  (UNSPEC_FMLAL2 \"a\") (UNSPEC_FMLSL2 \"s\")])\n \n ;; The condition associated with an UNSPEC_COND_<xx>.\n-(define_int_attr cmp_op [(UNSPEC_COND_LT \"lt\")\n-\t\t\t (UNSPEC_COND_LE \"le\")\n-\t\t\t (UNSPEC_COND_EQ \"eq\")\n-\t\t\t (UNSPEC_COND_NE \"ne\")\n-\t\t\t (UNSPEC_COND_GE \"ge\")\n-\t\t\t (UNSPEC_COND_GT \"gt\")])\n-\n-(define_int_attr sve_fp_op [(UNSPEC_COND_ADD \"fadd\")\n-\t\t\t    (UNSPEC_COND_SUB \"fsub\")\n-\t\t\t    (UNSPEC_COND_MUL \"fmul\")\n-\t\t\t    (UNSPEC_COND_DIV \"fdiv\")\n-\t\t\t    (UNSPEC_COND_MAX \"fmaxnm\")\n-\t\t\t    (UNSPEC_COND_MIN \"fminnm\")])\n-\n-(define_int_attr sve_fp_op_rev [(UNSPEC_COND_ADD \"fadd\")\n-\t\t\t        (UNSPEC_COND_SUB \"fsubr\")\n-\t\t\t        (UNSPEC_COND_MUL \"fmul\")\n-\t\t\t        (UNSPEC_COND_DIV \"fdivr\")\n-\t\t\t        (UNSPEC_COND_MAX \"fmaxnm\")\n-\t\t\t        (UNSPEC_COND_MIN \"fminnm\")])\n+(define_int_attr cmp_op [(UNSPEC_COND_FCMEQ \"eq\")\n+\t\t\t (UNSPEC_COND_FCMGE \"ge\")\n+\t\t\t (UNSPEC_COND_FCMGT \"gt\")\n+\t\t\t (UNSPEC_COND_FCMLE \"le\")\n+\t\t\t (UNSPEC_COND_FCMLT \"lt\")\n+\t\t\t (UNSPEC_COND_FCMNE \"ne\")])\n+\n+(define_int_attr sve_fp_op [(UNSPEC_COND_FADD \"fadd\")\n+\t\t\t    (UNSPEC_COND_FDIV \"fdiv\")\n+\t\t\t    (UNSPEC_COND_FMAXNM \"fmaxnm\")\n+\t\t\t    (UNSPEC_COND_FMINNM \"fminnm\")\n+\t\t\t    (UNSPEC_COND_FMUL \"fmul\")\n+\t\t\t    (UNSPEC_COND_FSUB \"fsub\")])\n+\n+(define_int_attr sve_fp_op_rev [(UNSPEC_COND_FADD \"fadd\")\n+\t\t\t\t(UNSPEC_COND_FDIV \"fdivr\")\n+\t\t\t\t(UNSPEC_COND_FMAXNM \"fmaxnm\")\n+\t\t\t\t(UNSPEC_COND_FMINNM \"fminnm\")\n+\t\t\t\t(UNSPEC_COND_FMUL \"fmul\")\n+\t\t\t\t(UNSPEC_COND_FSUB \"fsubr\")])\n \n (define_int_attr rot [(UNSPEC_FCADD90 \"90\")\n \t\t      (UNSPEC_FCADD270 \"270\")"}]}