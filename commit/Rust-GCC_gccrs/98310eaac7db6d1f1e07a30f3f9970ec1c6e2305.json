{"sha": "98310eaac7db6d1f1e07a30f3f9970ec1c6e2305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgzMTBlYWFjN2RiNmQxZjFlMDdhMzBmM2Y5OTcwZWMxYzZlMjMwNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-28T03:33:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-28T03:33:05Z"}, "message": "(expand_mult): Properly set ADD_TARGET for add_variant.\n\nFrom-SVN: r7802", "tree": {"sha": "4d254ab3adc014edb2bcde032121e8ca8ed08305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d254ab3adc014edb2bcde032121e8ca8ed08305"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98310eaac7db6d1f1e07a30f3f9970ec1c6e2305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98310eaac7db6d1f1e07a30f3f9970ec1c6e2305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98310eaac7db6d1f1e07a30f3f9970ec1c6e2305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98310eaac7db6d1f1e07a30f3f9970ec1c6e2305/comments", "author": null, "committer": null, "parents": [{"sha": "d772039ba7150f94f5305fbab4f46a6d7a3fec75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d772039ba7150f94f5305fbab4f46a6d7a3fec75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d772039ba7150f94f5305fbab4f46a6d7a3fec75"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "98019eeb2ed3093d6adc523b92160da33d759881", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98310eaac7db6d1f1e07a30f3f9970ec1c6e2305/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98310eaac7db6d1f1e07a30f3f9970ec1c6e2305/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=98310eaac7db6d1f1e07a30f3f9970ec1c6e2305", "patch": "@@ -2093,7 +2093,8 @@ expand_mult (mode, op0, op1, target, unsignedp)\n \talg = alg2, variant = negate_variant;\n \n       /* This proves very useful for division-by-constant.  */\n-      synth_mult (&alg2, val - 1, (alg.cost < mult_cost ? alg.cost : mult_cost) - add_cost);\n+      synth_mult (&alg2, val - 1,\n+\t\t  (alg.cost < mult_cost ? alg.cost : mult_cost) - add_cost);\n       if (alg2.cost + add_cost < alg.cost)\n \talg = alg2, variant = add_variant;\n \n@@ -2131,7 +2132,9 @@ expand_mult (mode, op0, op1, target, unsignedp)\n \t      int log = alg.log[opno];\n \t      int preserve = preserve_subexpressions_p ();\n \t      rtx shift_subtarget = preserve ? 0 : accum;\n-\t      rtx add_target = opno == alg.ops - 1 && target != 0 ? target : 0;\n+\t      rtx add_target\n+\t\t= (opno == alg.ops - 1 && target != 0 && variant != add_variant\n+\t\t  ? target : 0);\n \t      rtx accum_target = preserve ? 0 : accum;\n \t      \n \t      switch (alg.op[opno])"}]}