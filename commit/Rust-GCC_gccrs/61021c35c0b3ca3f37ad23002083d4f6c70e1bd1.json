{"sha": "61021c35c0b3ca3f37ad23002083d4f6c70e1bd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwMjFjMzVjMGIzY2EzZjM3YWQyMzAwMjA4M2Q0ZjZjNzBlMWJkMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-05-13T11:42:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-05-13T11:42:08Z"}, "message": "tree-vect-slp.c (vect_get_and_check_slp_defs): Handle VIEW_CONVERT_EXPR.\n\n2019-05-13  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_get_and_check_slp_defs): Handle\n\tVIEW_CONVERT_EXPR.\n\t(vect_build_slp_tree_1): Likewise.\n\nFrom-SVN: r271126", "tree": {"sha": "31f58149108695d17500fe7f0e9a6d7cca362c53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31f58149108695d17500fe7f0e9a6d7cca362c53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40289199ee725183a286f50cf448f6347267047e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40289199ee725183a286f50cf448f6347267047e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40289199ee725183a286f50cf448f6347267047e"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "3057c620e53361e83b44b0ec1003302ed9a3476f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61021c35c0b3ca3f37ad23002083d4f6c70e1bd1", "patch": "@@ -1,3 +1,9 @@\n+2019-05-13  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_get_and_check_slp_defs): Handle\n+\tVIEW_CONVERT_EXPR.\n+\t(vect_build_slp_tree_1): Likewise.\n+\n 2019-05-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90402"}, {"sha": "52c7b47d8095e80c83c60204539dff3fb2242616", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61021c35c0b3ca3f37ad23002083d4f6c70e1bd1/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=61021c35c0b3ca3f37ad23002083d4f6c70e1bd1", "patch": "@@ -333,7 +333,7 @@ vect_get_and_check_slp_defs (vec_info *vinfo, unsigned char *swap,\n       number_of_oprnds = gimple_num_ops (stmt) - 1;\n       /* Swap can only be done for cond_expr if asked to, otherwise we\n \t could result in different comparison code to the first stmt.  */\n-      if (gimple_assign_rhs_code (stmt) == COND_EXPR\n+      if (code == COND_EXPR\n \t  && COMPARISON_CLASS_P (gimple_assign_rhs1 (stmt)))\n \t{\n \t  first_op_cond = true;\n@@ -364,6 +364,8 @@ vect_get_and_check_slp_defs (vec_info *vinfo, unsigned char *swap,\n \t}\n       else\n \toprnd = gimple_op (stmt_info->stmt, first_op_idx + (swapped ? !i : i));\n+      if (TREE_CODE (oprnd) == VIEW_CONVERT_EXPR)\n+\toprnd = TREE_OPERAND (oprnd, 0);\n \n       oprnd_info = (*oprnds_info)[i];\n \n@@ -907,6 +909,7 @@ vect_build_slp_tree_1 (unsigned char *swap,\n \t      && TREE_CODE_CLASS (rhs_code) != tcc_unary\n \t      && TREE_CODE_CLASS (rhs_code) != tcc_expression\n \t      && TREE_CODE_CLASS (rhs_code) != tcc_comparison\n+\t      && rhs_code != VIEW_CONVERT_EXPR\n \t      && rhs_code != CALL_EXPR)\n \t    {\n \t      if (dump_enabled_p ())"}]}