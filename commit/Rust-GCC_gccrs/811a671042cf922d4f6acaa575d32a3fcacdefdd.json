{"sha": "811a671042cf922d4f6acaa575d32a3fcacdefdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODExYTY3MTA0MmNmOTIyZDRmNmFjYWE1NzVkMzJhM2ZjYWNkZWZkZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-28T10:38:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-28T10:38:29Z"}, "message": "re PR target/89073 (x86 __attribute__ ((target(\"sha\"))) not documented)\n\n\tPR target/89073\n\t* doc/invoke.texi (-mclwb, -mprfchw, -mrdpid, -mrdseed, -msgx,\n\t-madx, -mhle, -mavx5124fmaps, -mavx512vnni, -mavx5124vnniw): Document\n\tx86 ISA options.\n\t(bmi2): Add missing @opindex.\n\t* doc/extend.texi (x86 target attribute): Move fma4, lwp, ssse3\n\toptions alphabetically.  Add missing 3dnow, 3dnowa, adx, avx, avx2,\n\tavx5124fmaps, avx5124vnniw, avx512bitalg, avx512bw, avx512cd,\n\tavx512dq, avx512er, avx512f, avx512ifma, avx512pf, avx512vbmi,\n\tavx512vbmi2, avx512vl, avx512vnni, avx512vpopcntdq, bmi, bmi2,\n\tcldemote, clflushopt, clwb, clzero, crc32, cx16, f16c, fma, fsgsbase,\n\tfxsr, gfni, hle, lzcnt, movbe, movdir64b, movdiri, mwaitx, pconfig,\n\tpku, prefetchwt1, prfchw, ptwrite, rdpid, rdrnd, rdseed, rtm, sahf,\n\tsgx, sha, shstk, tbm, vaes, vpclmulqdq, waitpkg, wbnoinvd, xsave,\n\txsavec, xsaveopt and xsaves options.\n\nFrom-SVN: r268335", "tree": {"sha": "3d8e6e103f1d39ef3b7b9db3e642e71c29c48e92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8e6e103f1d39ef3b7b9db3e642e71c29c48e92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/811a671042cf922d4f6acaa575d32a3fcacdefdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811a671042cf922d4f6acaa575d32a3fcacdefdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/811a671042cf922d4f6acaa575d32a3fcacdefdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811a671042cf922d4f6acaa575d32a3fcacdefdd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44ed55d52a32b56a3cd5d2aa568c88ee713e3b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ed55d52a32b56a3cd5d2aa568c88ee713e3b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ed55d52a32b56a3cd5d2aa568c88ee713e3b80"}], "stats": {"total": 404, "additions": 381, "deletions": 23}, "files": [{"sha": "f4d620870c7eb7b59f0f48ba0a0f54422e5b5464", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811a671042cf922d4f6acaa575d32a3fcacdefdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811a671042cf922d4f6acaa575d32a3fcacdefdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=811a671042cf922d4f6acaa575d32a3fcacdefdd", "patch": "@@ -1,3 +1,21 @@\n+2019-01-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/89073\n+\t* doc/invoke.texi (-mclwb, -mprfchw, -mrdpid, -mrdseed, -msgx,\n+\t-madx, -mhle, -mavx5124fmaps, -mavx512vnni, -mavx5124vnniw): Document\n+\tx86 ISA options.\n+\t(bmi2): Add missing @opindex.\n+\t* doc/extend.texi (x86 target attribute): Move fma4, lwp, ssse3\n+\toptions alphabetically.  Add missing 3dnow, 3dnowa, adx, avx, avx2,\n+\tavx5124fmaps, avx5124vnniw, avx512bitalg, avx512bw, avx512cd,\n+\tavx512dq, avx512er, avx512f, avx512ifma, avx512pf, avx512vbmi,\n+\tavx512vbmi2, avx512vl, avx512vnni, avx512vpopcntdq, bmi, bmi2,\n+\tcldemote, clflushopt, clwb, clzero, crc32, cx16, f16c, fma, fsgsbase,\n+\tfxsr, gfni, hle, lzcnt, movbe, movdir64b, movdiri, mwaitx, pconfig,\n+\tpku, prefetchwt1, prfchw, ptwrite, rdpid, rdrnd, rdseed, rtm, sahf,\n+\tsgx, sha, shstk, tbm, vaes, vpclmulqdq, waitpkg, wbnoinvd, xsave,\n+\txsavec, xsaveopt and xsaves options.\n+\n 2019-01-28  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/89076"}, {"sha": "f41c7a88a57fc824e65cf85fd3d908aaa5aa218d", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 318, "deletions": 13, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811a671042cf922d4f6acaa575d32a3fcacdefdd/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811a671042cf922d4f6acaa575d32a3fcacdefdd/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=811a671042cf922d4f6acaa575d32a3fcacdefdd", "patch": "@@ -6021,36 +6021,306 @@ allows specification of target-specific compilation options.\n \n On the x86, the following options are allowed:\n @table @samp\n+@item 3dnow\n+@itemx no-3dnow\n+@cindex @code{target(\"3dnow\")} function attribute, x86\n+Enable/disable the generation of the 3DNow!@: instructions.\n+\n+@item 3dnowa\n+@itemx no-3dnowa\n+@cindex @code{target(\"3dnowa\")} function attribute, x86\n+Enable/disable the generation of the enhanced 3DNow!@: instructions.\n+\n @item abm\n @itemx no-abm\n @cindex @code{target(\"abm\")} function attribute, x86\n Enable/disable the generation of the advanced bit instructions.\n \n+@item adx\n+@itemx no-adx\n+@cindex @code{target(\"adx\")} function attribute, x86\n+Enable/disable the generation of the ADX instructions.\n+\n @item aes\n @itemx no-aes\n @cindex @code{target(\"aes\")} function attribute, x86\n Enable/disable the generation of the AES instructions.\n \n+@item avx\n+@itemx no-avx\n+@cindex @code{target(\"avx\")} function attribute, x86\n+Enable/disable the generation of the AVX instructions.\n+\n+@item avx2\n+@itemx no-avx2\n+@cindex @code{target(\"avx2\")} function attribute, x86\n+Enable/disable the generation of the AVX2 instructions.\n+\n+@item avx5124fmaps\n+@itemx no-avx5124fmaps\n+@cindex @code{target(\"avx5124fmaps\")} function attribute, x86\n+Enable/disable the generation of the AVX5124FMAPS instructions.\n+\n+@item avx5124vnniw\n+@itemx no-avx5124vnniw\n+@cindex @code{target(\"avx5124vnniw\")} function attribute, x86\n+Enable/disable the generation of the AVX5124VNNIW instructions.\n+\n+@item avx512bitalg\n+@itemx no-avx512bitalg\n+@cindex @code{target(\"avx512bitalg\")} function attribute, x86\n+Enable/disable the generation of the AVX512BITALG instructions.\n+\n+@item avx512bw\n+@itemx no-avx512bw\n+@cindex @code{target(\"avx512bw\")} function attribute, x86\n+Enable/disable the generation of the AVX512BW instructions.\n+\n+@item avx512cd\n+@itemx no-avx512cd\n+@cindex @code{target(\"avx512cd\")} function attribute, x86\n+Enable/disable the generation of the AVX512CD instructions.\n+\n+@item avx512dq\n+@itemx no-avx512dq\n+@cindex @code{target(\"avx512dq\")} function attribute, x86\n+Enable/disable the generation of the AVX512DQ instructions.\n+\n+@item avx512er\n+@itemx no-avx512er\n+@cindex @code{target(\"avx512er\")} function attribute, x86\n+Enable/disable the generation of the AVX512ER instructions.\n+\n+@item avx512f\n+@itemx no-avx512f\n+@cindex @code{target(\"avx512f\")} function attribute, x86\n+Enable/disable the generation of the AVX512F instructions.\n+\n+@item avx512ifma\n+@itemx no-avx512ifma\n+@cindex @code{target(\"avx512ifma\")} function attribute, x86\n+Enable/disable the generation of the AVX512IFMA instructions.\n+\n+@item avx512pf\n+@itemx no-avx512pf\n+@cindex @code{target(\"avx512pf\")} function attribute, x86\n+Enable/disable the generation of the AVX512PF instructions.\n+\n+@item avx512vbmi\n+@itemx no-avx512vbmi\n+@cindex @code{target(\"avx512vbmi\")} function attribute, x86\n+Enable/disable the generation of the AVX512VBMI instructions.\n+\n+@item avx512vbmi2\n+@itemx no-avx512vbmi2\n+@cindex @code{target(\"avx512vbmi2\")} function attribute, x86\n+Enable/disable the generation of the AVX512VBMI2 instructions.\n+\n+@item avx512vl\n+@itemx no-avx512vl\n+@cindex @code{target(\"avx512vl\")} function attribute, x86\n+Enable/disable the generation of the AVX512VL instructions.\n+\n+@item avx512vnni\n+@itemx no-avx512vnni\n+@cindex @code{target(\"avx512vnni\")} function attribute, x86\n+Enable/disable the generation of the AVX512VNNI instructions.\n+\n+@item avx512vpopcntdq\n+@itemx no-avx512vpopcntdq\n+@cindex @code{target(\"avx512vpopcntdq\")} function attribute, x86\n+Enable/disable the generation of the AVX512VPOPCNTDQ instructions.\n+\n+@item bmi\n+@itemx no-bmi\n+@cindex @code{target(\"bmi\")} function attribute, x86\n+Enable/disable the generation of the BMI instructions.\n+\n+@item bmi2\n+@itemx no-bmi2\n+@cindex @code{target(\"bmi2\")} function attribute, x86\n+Enable/disable the generation of the BMI2 instructions.\n+\n+@item cldemote\n+@itemx no-cldemote\n+@cindex @code{target(\"cldemote\")} function attribute, x86\n+Enable/disable the generation of the CLDEMOTE instructions.\n+\n+@item clflushopt\n+@itemx no-clflushopt\n+@cindex @code{target(\"clflushopt\")} function attribute, x86\n+Enable/disable the generation of the CLFLUSHOPT instructions.\n+\n+@item clwb\n+@itemx no-clwb\n+@cindex @code{target(\"clwb\")} function attribute, x86\n+Enable/disable the generation of the CLWB instructions.\n+\n+@item clzero\n+@itemx no-clzero\n+@cindex @code{target(\"clzero\")} function attribute, x86\n+Enable/disable the generation of the CLZERO instructions.\n+\n+@item crc32\n+@itemx no-crc32\n+@cindex @code{target(\"crc32\")} function attribute, x86\n+Enable/disable the generation of the CRC32 instructions.\n+\n+@item cx16\n+@itemx no-cx16\n+@cindex @code{target(\"cx16\")} function attribute, x86\n+Enable/disable the generation of the CMPXCHG16B instructions.\n+\n @item default\n @cindex @code{target(\"default\")} function attribute, x86\n @xref{Function Multiversioning}, where it is used to specify the\n default function version.\n \n+@item f16c\n+@itemx no-f16c\n+@cindex @code{target(\"f16c\")} function attribute, x86\n+Enable/disable the generation of the F16C instructions.\n+\n+@item fma\n+@itemx no-fma\n+@cindex @code{target(\"fma\")} function attribute, x86\n+Enable/disable the generation of the FMA instructions.\n+\n+@item fma4\n+@itemx no-fma4\n+@cindex @code{target(\"fma4\")} function attribute, x86\n+Enable/disable the generation of the FMA4 instructions.\n+\n+@item fsgsbase\n+@itemx no-fsgsbase\n+@cindex @code{target(\"fsgsbase\")} function attribute, x86\n+Enable/disable the generation of the FSGSBASE instructions.\n+\n+@item fxsr\n+@itemx no-fxsr\n+@cindex @code{target(\"fxsr\")} function attribute, x86\n+Enable/disable the generation of the FXSR instructions.\n+\n+@item gfni\n+@itemx no-gfni\n+@cindex @code{target(\"gfni\")} function attribute, x86\n+Enable/disable the generation of the GFNI instructions.\n+\n+@item hle\n+@itemx no-hle\n+@cindex @code{target(\"hle\")} function attribute, x86\n+Enable/disable the generation of the HLE instruction prefixes.\n+\n+@item lwp\n+@itemx no-lwp\n+@cindex @code{target(\"lwp\")} function attribute, x86\n+Enable/disable the generation of the LWP instructions.\n+\n+@item lzcnt\n+@itemx no-lzcnt\n+@cindex @code{target(\"lzcnt\")} function attribute, x86\n+Enable/disable the generation of the LZCNT instructions.\n+\n @item mmx\n @itemx no-mmx\n @cindex @code{target(\"mmx\")} function attribute, x86\n Enable/disable the generation of the MMX instructions.\n \n+@item movbe\n+@itemx no-movbe\n+@cindex @code{target(\"movbe\")} function attribute, x86\n+Enable/disable the generation of the MOVBE instructions.\n+\n+@item movdir64b\n+@itemx no-movdir64b\n+@cindex @code{target(\"movdir64b\")} function attribute, x86\n+Enable/disable the generation of the MOVDIR64B instructions.\n+\n+@item movdiri\n+@itemx no-movdiri\n+@cindex @code{target(\"movdiri\")} function attribute, x86\n+Enable/disable the generation of the MOVDIRI instructions.\n+\n+@item mwaitx\n+@itemx no-mwaitx\n+@cindex @code{target(\"mwaitx\")} function attribute, x86\n+Enable/disable the generation of the MWAITX instructions.\n+\n @item pclmul\n @itemx no-pclmul\n @cindex @code{target(\"pclmul\")} function attribute, x86\n Enable/disable the generation of the PCLMUL instructions.\n \n+@item pconfig\n+@itemx no-pconfig\n+@cindex @code{target(\"pconfig\")} function attribute, x86\n+Enable/disable the generation of the PCONFIG instructions.\n+\n+@item pku\n+@itemx no-pku\n+@cindex @code{target(\"pku\")} function attribute, x86\n+Enable/disable the generation of the PKU instructions.\n+\n @item popcnt\n @itemx no-popcnt\n @cindex @code{target(\"popcnt\")} function attribute, x86\n Enable/disable the generation of the POPCNT instruction.\n \n+@item prefetchwt1\n+@itemx no-prefetchwt1\n+@cindex @code{target(\"prefetchwt1\")} function attribute, x86\n+Enable/disable the generation of the PREFETCHWT1 instructions.\n+\n+@item prfchw\n+@itemx no-prfchw\n+@cindex @code{target(\"prfchw\")} function attribute, x86\n+Enable/disable the generation of the PREFETCHW instruction.\n+\n+@item ptwrite\n+@itemx no-ptwrite\n+@cindex @code{target(\"ptwrite\")} function attribute, x86\n+Enable/disable the generation of the PTWRITE instructions.\n+\n+@item rdpid\n+@itemx no-rdpid\n+@cindex @code{target(\"rdpid\")} function attribute, x86\n+Enable/disable the generation of the RDPID instructions.\n+\n+@item rdrnd\n+@itemx no-rdrnd\n+@cindex @code{target(\"rdrnd\")} function attribute, x86\n+Enable/disable the generation of the RDRND instructions.\n+\n+@item rdseed\n+@itemx no-rdseed\n+@cindex @code{target(\"rdseed\")} function attribute, x86\n+Enable/disable the generation of the RDSEED instructions.\n+\n+@item rtm\n+@itemx no-rtm\n+@cindex @code{target(\"rtm\")} function attribute, x86\n+Enable/disable the generation of the RTM instructions.\n+\n+@item sahf\n+@itemx no-sahf\n+@cindex @code{target(\"sahf\")} function attribute, x86\n+Enable/disable the generation of the SAHF instructions.\n+\n+@item sgx\n+@itemx no-sgx\n+@cindex @code{target(\"sgx\")} function attribute, x86\n+Enable/disable the generation of the SGX instructions.\n+\n+@item sha\n+@itemx no-sha\n+@cindex @code{target(\"sha\")} function attribute, x86\n+Enable/disable the generation of the SHA instructions.\n+\n+@item shstk\n+@itemx no-shstk\n+@cindex @code{target(\"shstk\")} function attribute, x86\n+Enable/disable the shadow stack built-in functions from CET.\n+\n @item sse\n @itemx no-sse\n @cindex @code{target(\"sse\")} function attribute, x86\n@@ -6087,25 +6357,60 @@ Enable/disable the generation of the sse4.2 instructions.\n @cindex @code{target(\"sse4a\")} function attribute, x86\n Enable/disable the generation of the SSE4A instructions.\n \n-@item fma4\n-@itemx no-fma4\n-@cindex @code{target(\"fma4\")} function attribute, x86\n-Enable/disable the generation of the FMA4 instructions.\n+@item ssse3\n+@itemx no-ssse3\n+@cindex @code{target(\"ssse3\")} function attribute, x86\n+Enable/disable the generation of the SSSE3 instructions.\n+\n+@item tbm\n+@itemx no-tbm\n+@cindex @code{target(\"tbm\")} function attribute, x86\n+Enable/disable the generation of the TBM instructions.\n+\n+@item vaes\n+@itemx no-vaes\n+@cindex @code{target(\"vaes\")} function attribute, x86\n+Enable/disable the generation of the VAES instructions.\n+\n+@item vpclmulqdq\n+@itemx no-vpclmulqdq\n+@cindex @code{target(\"vpclmulqdq\")} function attribute, x86\n+Enable/disable the generation of the VPCLMULQDQ instructions.\n+\n+@item waitpkg\n+@itemx no-waitpkg\n+@cindex @code{target(\"waitpkg\")} function attribute, x86\n+Enable/disable the generation of the WAITPKG instructions.\n+\n+@item wbnoinvd\n+@itemx no-wbnoinvd\n+@cindex @code{target(\"wbnoinvd\")} function attribute, x86\n+Enable/disable the generation of the WBNOINVD instructions.\n \n @item xop\n @itemx no-xop\n @cindex @code{target(\"xop\")} function attribute, x86\n Enable/disable the generation of the XOP instructions.\n \n-@item lwp\n-@itemx no-lwp\n-@cindex @code{target(\"lwp\")} function attribute, x86\n-Enable/disable the generation of the LWP instructions.\n-\n-@item ssse3\n-@itemx no-ssse3\n-@cindex @code{target(\"ssse3\")} function attribute, x86\n-Enable/disable the generation of the SSSE3 instructions.\n+@item xsave\n+@itemx no-xsave\n+@cindex @code{target(\"xsave\")} function attribute, x86\n+Enable/disable the generation of the XSAVE instructions.\n+\n+@item xsavec\n+@itemx no-xsavec\n+@cindex @code{target(\"xsavec\")} function attribute, x86\n+Enable/disable the generation of the XSAVEC instructions.\n+\n+@item xsaveopt\n+@itemx no-xsaveopt\n+@cindex @code{target(\"xsaveopt\")} function attribute, x86\n+Enable/disable the generation of the XSAVEOPT instructions.\n+\n+@item xsaves\n+@itemx no-xsaves\n+@cindex @code{target(\"xsaves\")} function attribute, x86\n+Enable/disable the generation of the XSAVES instructions.\n \n @item cld\n @itemx no-cld"}, {"sha": "580b48e1eb8ee0120d9ff7dc4429d5cc77fe34d0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 45, "deletions": 10, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/811a671042cf922d4f6acaa575d32a3fcacdefdd/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/811a671042cf922d4f6acaa575d32a3fcacdefdd/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=811a671042cf922d4f6acaa575d32a3fcacdefdd", "patch": "@@ -1266,12 +1266,14 @@ See RS/6000 and PowerPC Options.\n -mavx2  -mavx512f  -mavx512pf  -mavx512er  -mavx512cd  -mavx512vl @gol\n -mavx512bw  -mavx512dq  -mavx512ifma  -mavx512vbmi  -msha  -maes @gol\n -mpclmul  -mfsgsbase  -mrdrnd  -mf16c  -mfma  -mpconfig  -mwbnoinvd  @gol\n--mptwrite  -mprefetchwt1  -mclflushopt  -mxsavec  -mxsaves @gol\n+-mptwrite  -mprefetchwt1  -mclflushopt  -mclwb  -mxsavec  -mxsaves @gol\n -msse4a  -m3dnow  -m3dnowa  -mpopcnt  -mabm  -mbmi  -mtbm  -mfma4  -mxop @gol\n--mlzcnt  -mbmi2  -mfxsr  -mxsave  -mxsaveopt  -mrtm  -mlwp @gol\n+-madx  -mlzcnt  -mbmi2  -mfxsr  -mxsave  -mxsaveopt  -mrtm  -mhle  -mlwp @gol\n -mmwaitx  -mclzero  -mpku  -mthreads  -mgfni  -mvaes  -mwaitpkg @gol\n -mshstk -mmanual-endbr -mforce-indirect-call  -mavx512vbmi2 @gol\n -mvpclmulqdq  -mavx512bitalg  -mmovdiri  -mmovdir64b  -mavx512vpopcntdq @gol\n+-mavx5124fmaps  -mavx512vnni  -mavx5124vnniw  -mprfchw  -mrdpid @gol\n+-mrdseed  -msgx @gol\n -mcldemote  -mms-bitfields  -mno-align-stringops  -minline-all-stringops @gol\n -minline-stringops-dynamically  -mstringop-strategy=@var{alg} @gol\n -mmemcpy-strategy=@var{strategy}  -mmemset-strategy=@var{strategy} @gol\n@@ -27877,6 +27879,9 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @itemx -mclflushopt\n @opindex mclflushopt\n @need 200\n+@itemx -mclwb\n+@opindex mclwb\n+@need 200\n @itemx -mfsgsbase\n @opindex mfsgsbase\n @need 200\n@@ -27901,9 +27906,21 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @itemx -mfma4\n @opindex mfma4\n @need 200\n+@itemx -mprfchw\n+@opindex mprfchw\n+@need 200\n+@itemx -mrdpid\n+@opindex mrdpid\n+@need 200\n @itemx -mprefetchwt1\n @opindex mprefetchwt1\n @need 200\n+@itemx -mrdseed\n+@opindex mrdseed\n+@need 200\n+@itemx -msgx\n+@opindex msgx\n+@need 200\n @itemx -mxop\n @opindex mxop\n @need 200\n@@ -27922,10 +27939,14 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @itemx -mabm\n @opindex mabm\n @need 200\n+@itemx -madx\n+@opindex madx\n+@need 200\n @itemx -mbmi\n @opindex mbmi\n @need 200\n @itemx -mbmi2\n+@opindex mbmi2\n @need 200\n @itemx -mlzcnt\n @opindex mlzcnt\n@@ -27948,6 +27969,9 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @itemx -mrtm\n @opindex mrtm\n @need 200\n+@itemx -mhle\n+@opindex mhle\n+@need 200\n @itemx -mtbm\n @opindex mtbm\n @need 200\n@@ -27987,17 +28011,28 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @itemx -mavx512vpopcntdq\n @opindex mavx512vpopcntdq\n @need 200\n+@itemx -mavx5124fmaps\n+@opindex mavx5124fmaps\n+@need 200\n+@itemx -mavx512vnni\n+@opindex mavx512vnni\n+@need 200\n+@itemx -mavx5124vnniw\n+@opindex mavx5124vnniw\n+@need 200\n @itemx -mcldemote\n @opindex mcldemote\n These switches enable the use of instructions in the MMX, SSE,\n-SSE2, SSE3, SSSE3, SSE4.1, AVX, AVX2, AVX512F, AVX512PF, AVX512ER, AVX512CD,\n-SHA, AES, PCLMUL, FSGSBASE, PTWRITE, RDRND, F16C, FMA, SSE4A, FMA4, XOP, LWP, ABM,\n-AVX512VL, AVX512BW, AVX512DQ, AVX512IFMA, AVX512VBMI, BMI, BMI2, VAES, WAITPKG,\n-FXSR, XSAVE, XSAVEOPT, LZCNT, RTM, MWAITX, PKU, IBT, SHSTK, AVX512VBMI2,\n-GFNI, VPCLMULQDQ, AVX512BITALG, MOVDIRI, MOVDIR64B,\n-AVX512VPOPCNTDQ, CLDEMOTE, 3DNow!@: or enhanced 3DNow!@: extended instruction\n-sets. Each has a corresponding @option{-mno-} option to disable use of these\n-instructions.\n+SSE2, SSE3, SSSE3, SSE4, SSE4A, SSE4.1, SSE4.2, AVX, AVX2, AVX512F, AVX512PF,\n+AVX512ER, AVX512CD, AVX512VL, AVX512BW, AVX512DQ, AVX512IFMA, AVX512VBMI, SHA,\n+AES, PCLMUL, CLFLUSHOPT, CLWB, FSGSBASE, PTWRITE, RDRND, F16C, FMA, PCONFIG,\n+WBNOINVD, FMA4, PREFETCHW, RDPID, PREFETCHWT1, RDSEED, SGX, XOP, LWP,\n+3DNow!@:, enhanced 3DNow!@:, POPCNT, ABM, ADX, BMI, BMI2, LZCNT, FXSR, XSAVE,\n+XSAVEOPT, XSAVEC, XSAVES, RTM, HLE, TBM, MWAITX, CLZERO, PKU, AVX512VBMI2,\n+GFNI, VAES, WAITPKG, VPCLMULQDQ, AVX512BITALG, MOVDIRI, MOVDIR64B,\n+AVX512VPOPCNTDQ, AVX5124FMAPS, AVX512VNNI, AVX5124VNNIW, or CLDEMOTE\n+extended instruction sets.  Each has a corresponding @option{-mno-} option to\n+disable use of these instructions.\n \n These extensions are also available as built-in functions: see\n @ref{x86 Built-in Functions}, for details of the functions enabled and"}]}