{"sha": "11586ed9c96870a14fb417fe26eebe4504c3d60a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE1ODZlZDljOTY4NzBhMTRmYjQxN2ZlMjZlZWJlNDUwNGMzZDYwYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-12-09T11:21:22Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-12-09T11:21:22Z"}, "message": "libgomp/testsuite/*fortran \u2013 make 'stop' values unique\n\n        * testsuite/libgomp.fortran/use_device_addr-3.f90: Make 'stop' codes\n        unique.\n        * testsuite/libgomp.fortran/use_device_addr-4.f90: Ditto.\n        * testsuite/libgomp.fortran/use_device_ptr-optional-2.f90: Ditto.\n        * testsuite/libgomp.oacc-fortran/declare-5.f90: Ditto.\n        * testsuite/libgomp.oacc-fortran/optional-data-copyin-by-value.f90:\n        Ditto.\n        * testsuite/libgomp.oacc-fortran/optional-firstprivate.f90: Ditto.\n        * testsuite/libgomp.oacc-fortran/optional-update-host.f90: Ditto.\n\nFrom-SVN: r279117", "tree": {"sha": "7eea1ba7e99ac8f02d0f53c7a03d5e31491e5b89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eea1ba7e99ac8f02d0f53c7a03d5e31491e5b89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11586ed9c96870a14fb417fe26eebe4504c3d60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11586ed9c96870a14fb417fe26eebe4504c3d60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11586ed9c96870a14fb417fe26eebe4504c3d60a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11586ed9c96870a14fb417fe26eebe4504c3d60a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8cf86e14e8b74db0daaead7024ca345a5c8f9949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf86e14e8b74db0daaead7024ca345a5c8f9949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf86e14e8b74db0daaead7024ca345a5c8f9949"}], "stats": {"total": 688, "additions": 350, "deletions": 338}, "files": [{"sha": "a0bd25177d118023045f6c97273ee07dd7fcd499", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -1,3 +1,15 @@\n+2019-12-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/use_device_addr-3.f90: Make 'stop' codes\n+\tunique.\n+\t* testsuite/libgomp.fortran/use_device_addr-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/use_device_ptr-optional-2.f90: Ditto.\n+\t* testsuite/libgomp.oacc-fortran/declare-5.f90: Ditto.\n+\t* testsuite/libgomp.oacc-fortran/optional-data-copyin-by-value.f90:\n+\tDitto.\n+\t* testsuite/libgomp.oacc-fortran/optional-firstprivate.f90: Ditto.\n+\t* testsuite/libgomp.oacc-fortran/optional-update-host.f90: Ditto.\n+\n 2019-12-06  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* config/accel/proc.c (omp_get_num_procs): Apply ialias macro."}, {"sha": "a917d289fe8f3e3e07b1490d2e8ef716557e03ec", "filename": "libgomp/testsuite/libgomp.fortran/use_device_addr-3.f90", "status": "modified", "additions": 164, "deletions": 164, "changes": 328, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-3.f90?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -98,20 +98,20 @@ subroutine test_dummy_callee_1(aa, bb, cc, dd, ee, ff, N)\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n      call copy3_array(c_loc(aa), c_loc(bb), N)\n      !$omp end target data\n-     if (any(abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa))) stop 2\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 3\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_array(c_loc(cc), c_loc(dd), N)\n      !$omp end target data\n-     if (any(abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc))) stop 4\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 5\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_array(c_loc(ee), c_loc(ff), N)\n      !$omp end target data\n-     if (any(abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee))) stop 6\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 7\n   end subroutine test_dummy_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -167,28 +167,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, &\n      ! check c_loc ptr once\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 8\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 9\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_double\n      !$omp target update to(aa)\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 10\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 11\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_double\n      !$omp target update to(aa)\n      call copy3_array(c_loc(aptr), c_loc(bptr), N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 12\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 13\n      !$omp end target data\n \n-     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 14\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 15\n \n \n      !$omp target data map(to:cc) map(from:dd)\n@@ -202,28 +202,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, &\n      ! check c_loc ptr once\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 16\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 17\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_double\n      !$omp target update to(cc)\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 18\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 19\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_double\n      !$omp target update to(cc)\n      call copy3_array(c_loc(cptr), c_loc(dptr), N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 20\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 21\n      !$omp end target data\n \n-     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd))) stop 1\n+     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd))) stop 22\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd))) stop 23\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -237,28 +237,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, &\n      ! check c_loc ptr once\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 24\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 25\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_double\n      !$omp target update to(ee)\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 26\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 27\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_double\n      !$omp target update to(ee)\n      call copy3_array(c_loc(eptr), c_loc(fptr), N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff))) stop 1\n+     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 28\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff))) stop 29\n      !$omp end target data\n \n-     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 30\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 31\n   end subroutine test_dummy_callee_2\n end module test_dummies\n \n@@ -303,38 +303,38 @@ subroutine test_dummy_opt_callee_1(aa, bb, cc, dd, ee, ff, N)\n      integer, value :: N\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 32\n+     if (.not.present(cc) .or. .not.present(dd)) stop 33\n+     if (.not.present(ee) .or. .not.present(ff)) stop 34\n \n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 35\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 36\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 37\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 38\n      call copy3_array(c_loc(aa), c_loc(bb), N)\n      !$omp end target data\n-     if (any(abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa))) stop 39\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 40\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 41\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 42\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 43\n      call copy3_array(c_loc(cc), c_loc(dd), N)\n      !$omp end target data\n-     if (any(abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc))) stop 44\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 45\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 46\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 47\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 48\n      call copy3_array(c_loc(ee), c_loc(ff), N)\n      !$omp end target data\n-     if (any(abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee))) stop 49\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 50\n   end subroutine test_dummy_opt_callee_1\n \n   subroutine test_dummy_opt_callee_1_absent(aa, bb, cc, dd, ee, ff, N)\n@@ -346,20 +346,20 @@ subroutine test_dummy_opt_callee_1_absent(aa, bb, cc, dd, ee, ff, N)\n      integer, value :: N\n \n      ! All shall be absent\n-     if (present(aa) .or. present(bb)) stop 1\n-     if (present(cc) .or. present(dd)) stop 1\n-     if (present(ee) .or. present(ff)) stop 1\n+     if (present(aa) .or. present(bb)) stop 51\n+     if (present(cc) .or. present(dd)) stop 52\n+     if (present(ee) .or. present(ff)) stop 53\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (present(aa) .or. present(bb)) stop 1\n+     if (present(aa) .or. present(bb)) stop 54\n      !$omp end target data\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n-     if (present(cc) .or. present(dd)) stop 1\n+     if (present(cc) .or. present(dd)) stop 55\n      !$omp end target data\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (present(ee) .or. present(ff)) stop 1\n+     if (present(ee) .or. present(ff)) stop 56\n      !$omp end target data\n   end subroutine test_dummy_opt_callee_1_absent\n \n@@ -399,12 +399,12 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, &\n      real(c_double) :: dummy\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 57\n+     if (.not.present(cc) .or. .not.present(dd)) stop 58\n+     if (.not.present(ee) .or. .not.present(ff)) stop 59\n \n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 60\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 61\n \n      aa = 111.0_c_double\n      bb = 222.0_c_double\n@@ -415,134 +415,134 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, &\n \n      !$omp target data map(to:aa) map(from:bb)\n      !$omp target data map(alloc:dummy) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 62\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 63\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 64\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 65\n      !$omp end target data\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 66\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 67\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 68\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 69\n \n      ! check c_loc ptr once\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 70\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 71\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_double\n      !$omp target update to(aa)\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 72\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 73\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_double\n      !$omp target update to(aa)\n      call copy3_array(c_loc(aptr), c_loc(bptr), N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 74\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 75\n      !$omp end target data\n \n-     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa))) stop 76\n+     if (any(abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa))) stop 77\n \n      !$omp target data map(to:cc) map(from:dd)\n      !$omp target data map(alloc:dummy) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 78\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 79\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 80\n      c_cptr = c_loc(cc)\n      c_dptr = c_loc(dd)\n      cptr => cc\n      dptr => dd\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 81\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 82\n      !$omp end target data\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 83\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 84\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 85\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 86\n \n      ! check c_loc ptr once\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 87\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 88\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_double\n      !$omp target update to(cc)\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 89\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 90\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_double\n      !$omp target update to(cc)\n      call copy3_array(c_loc(cptr), c_loc(dptr), N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 91\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 92\n      !$omp end target data\n \n-     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd))) stop 1\n+     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd))) stop 93\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd))) stop 94\n \n \n      !$omp target data map(to:ee) map(from:ff)\n      !$omp target data map(alloc:dummy) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 95\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 96\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 97\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 98\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 99\n      !$omp end target data\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 100\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 101\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 102\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 103\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 104\n \n      ! check c_loc ptr once\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 105\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 106\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_double\n      !$omp target update to(ee)\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 107\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 108\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_double\n      !$omp target update to(ee)\n      call copy3_array(c_loc(eptr), c_loc(fptr), N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff))) stop 1\n+     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 109\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff))) stop 110\n      !$omp end target data\n \n-     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 111\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 112\n   end subroutine test_dummy_opt_callee_2\n end module test_dummies_opt\n \n@@ -569,33 +569,33 @@ subroutine test_nullptr_1()\n      ee => null()\n      ff => null()\n \n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (associated(aa) .or. associated(bb)) stop 113\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 1\n+     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 114\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 115\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 116\n+     if (associated(aa) .or. associated(bb)) stop 117\n      !$omp end target data\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 118\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 119\n+     if (associated(aa) .or. associated(bb)) stop 120\n \n-     if (allocated(gg)) stop 1\n+     if (allocated(gg)) stop 121\n      !$omp target data map(tofrom:gg) use_device_addr(gg)\n-     if (c_associated(c_loc(gg))) stop 1\n+     if (c_associated(c_loc(gg))) stop 122\n      c_gptr = c_loc(gg)\n      gptr => gg\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 123\n+     if (associated(gptr)) stop 124\n+     if (allocated(gg)) stop 125\n      !$omp end target data\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 126\n+     if (associated(gptr)) stop 127\n+     if (allocated(gg)) stop 128\n \n      call test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, eptr, fptr, hptr)\n   end subroutine test_nullptr_1\n@@ -608,36 +608,36 @@ subroutine test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, e\n      type(c_ptr), optional :: c_eptr, c_fptr, c_hptr\n      real(c_double), optional, pointer :: eptr(:), fptr(:), hptr(:)\n \n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 129\n+     if (associated(ee) .or. associated(ff)) stop 130\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n-     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 131\n+     if (associated(ee) .or. associated(ff)) stop 132\n+     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 133\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 134\n+     if (associated(eptr) .or. associated(fptr)) stop 135\n      !$omp end target data\n \n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 136\n+     if (associated(eptr) .or. associated(fptr)) stop 137\n \n-     if (allocated(hh)) stop 1\n+     if (allocated(hh)) stop 138\n      !$omp target data map(tofrom:hh) use_device_addr(hh)\n-     if (c_associated(c_loc(hh))) stop 1\n+     if (c_associated(c_loc(hh))) stop 139\n      c_hptr = c_loc(hh)\n      hptr => hh\n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 140\n+     if (associated(hptr)) stop 141\n+     if (allocated(hh)) stop 142\n      !$omp end target data\n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 143\n+     if (associated(hptr)) stop 144\n+     if (allocated(hh)) stop 145\n   end subroutine test_dummy_opt_nullptr_callee_1\n end module test_nullptr\n \n@@ -668,14 +668,14 @@ subroutine test_main_1()\n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_array(c_loc(cc), c_loc(dd), N)\n      !$omp end target data\n-     if (any(abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc))) stop 146\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 147\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_array(c_loc(ee), c_loc(ff), N)\n      !$omp end target data\n-     if (any(abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee))) stop 148\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 149\n \n      deallocate(ee, ff) ! pointers, only\n    end subroutine test_main_1\n@@ -709,28 +709,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 150\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 151\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_double\n      !$omp target update to(cc)\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 152\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 153\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_double\n      !$omp target update to(cc)\n      call copy3_array(c_loc(cptr), c_loc(dptr), N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc))) stop 154\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc))) stop 155\n      !$omp end target data\n \n-     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd))) stop 1\n-     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd))) stop 1\n+     if (any(abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd))) stop 156\n+     if (any(abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd))) stop 157\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -744,28 +744,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 158\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 159\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_double\n      !$omp target update to(ee)\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 160\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 161\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_double\n      !$omp target update to(ee)\n      call copy3_array(c_loc(eptr), c_loc(fptr), N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff))) stop 1\n+     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 162\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff))) stop 163\n      !$omp end target data\n \n-     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee))) stop 164\n+     if (any(abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee))) stop 165\n \n      deallocate(ee, ff)\n    end subroutine test_main_2"}, {"sha": "e7b6c624f4edd032c8c07dd6590166415daef347", "filename": "libgomp/testsuite/libgomp.fortran/use_device_addr-4.f90", "status": "modified", "additions": 164, "deletions": 164, "changes": 328, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-4.f90?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -98,20 +98,20 @@ subroutine test_dummy_callee_1(aa, bb, cc, dd, ee, ff, N)\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n      call copy3_array(c_loc(aa), c_loc(bb), N)\n      !$omp end target data\n-     if (any(abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa))) stop 2\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 3\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_array(c_loc(cc), c_loc(dd), N)\n      !$omp end target data\n-     if (any(abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc))) stop 4\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 5\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_array(c_loc(ee), c_loc(ff), N)\n      !$omp end target data\n-     if (any(abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee))) stop 6\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 7\n   end subroutine test_dummy_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -167,28 +167,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, &\n      ! check c_loc ptr once\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 8\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 9\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_float\n      !$omp target update to(aa)\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 10\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 11\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_float\n      !$omp target update to(aa)\n      call copy3_array(c_loc(aptr), c_loc(bptr), N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 12\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 13\n      !$omp end target data\n \n-     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 14\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 15\n \n \n      !$omp target data map(to:cc) map(from:dd)\n@@ -202,28 +202,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, &\n      ! check c_loc ptr once\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 16\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 17\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_float\n      !$omp target update to(cc)\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 18\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 19\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_float\n      !$omp target update to(cc)\n      call copy3_array(c_loc(cptr), c_loc(dptr), N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 20\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 21\n      !$omp end target data\n \n-     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd))) stop 1\n+     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd))) stop 22\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd))) stop 23\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -237,28 +237,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, &\n      ! check c_loc ptr once\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 24\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 25\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_float\n      !$omp target update to(ee)\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 26\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 27\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_float\n      !$omp target update to(ee)\n      call copy3_array(c_loc(eptr), c_loc(fptr), N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff))) stop 1\n+     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 28\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff))) stop 29\n      !$omp end target data\n \n-     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 30\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 31\n   end subroutine test_dummy_callee_2\n end module test_dummies\n \n@@ -303,38 +303,38 @@ subroutine test_dummy_opt_callee_1(aa, bb, cc, dd, ee, ff, N)\n      integer, value :: N\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 32\n+     if (.not.present(cc) .or. .not.present(dd)) stop 33\n+     if (.not.present(ee) .or. .not.present(ff)) stop 34\n \n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 35\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 36\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 37\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 38\n      call copy3_array(c_loc(aa), c_loc(bb), N)\n      !$omp end target data\n-     if (any(abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa))) stop 39\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 40\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 41\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 42\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 43\n      call copy3_array(c_loc(cc), c_loc(dd), N)\n      !$omp end target data\n-     if (any(abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc))) stop 44\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 45\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 46\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 47\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 48\n      call copy3_array(c_loc(ee), c_loc(ff), N)\n      !$omp end target data\n-     if (any(abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee))) stop 49\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 50\n   end subroutine test_dummy_opt_callee_1\n \n   subroutine test_dummy_opt_callee_1_absent(aa, bb, cc, dd, ee, ff, N)\n@@ -346,20 +346,20 @@ subroutine test_dummy_opt_callee_1_absent(aa, bb, cc, dd, ee, ff, N)\n      integer, value :: N\n \n      ! All shall be absent\n-     if (present(aa) .or. present(bb)) stop 1\n-     if (present(cc) .or. present(dd)) stop 1\n-     if (present(ee) .or. present(ff)) stop 1\n+     if (present(aa) .or. present(bb)) stop 51\n+     if (present(cc) .or. present(dd)) stop 52\n+     if (present(ee) .or. present(ff)) stop 53\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (present(aa) .or. present(bb)) stop 1\n+     if (present(aa) .or. present(bb)) stop 54\n      !$omp end target data\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n-     if (present(cc) .or. present(dd)) stop 1\n+     if (present(cc) .or. present(dd)) stop 55\n      !$omp end target data\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (present(ee) .or. present(ff)) stop 1\n+     if (present(ee) .or. present(ff)) stop 56\n      !$omp end target data\n   end subroutine test_dummy_opt_callee_1_absent\n \n@@ -399,12 +399,12 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, &\n      real(c_float) :: dummy\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 57\n+     if (.not.present(cc) .or. .not.present(dd)) stop 58\n+     if (.not.present(ee) .or. .not.present(ff)) stop 59\n \n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 60\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 61\n \n      aa = 111.0_c_float\n      bb = 222.0_c_float\n@@ -415,134 +415,134 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, &\n \n      !$omp target data map(to:aa) map(from:bb)\n      !$omp target data map(alloc:dummy) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 62\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 63\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 64\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 65\n      !$omp end target data\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 66\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 67\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 68\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 69\n \n      ! check c_loc ptr once\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 70\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 71\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_float\n      !$omp target update to(aa)\n      call copy3_array(c_aptr, c_bptr, N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 72\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 73\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_float\n      !$omp target update to(aa)\n      call copy3_array(c_loc(aptr), c_loc(bptr), N)\n      !$omp target update from(bb)\n-     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 74\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 75\n      !$omp end target data\n \n-     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 1\n-     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 1\n+     if (any(abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa))) stop 76\n+     if (any(abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa))) stop 77\n \n      !$omp target data map(to:cc) map(from:dd)\n      !$omp target data map(alloc:dummy) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 78\n+     if (.not.allocated(cc) .or. .not.allocated(dd)) stop 79\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 80\n      c_cptr = c_loc(cc)\n      c_dptr = c_loc(dd)\n      cptr => cc\n      dptr => dd\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 81\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 82\n      !$omp end target data\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 83\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 84\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 85\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 86\n \n      ! check c_loc ptr once\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 87\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 88\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_float\n      !$omp target update to(cc)\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 89\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 90\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_float\n      !$omp target update to(cc)\n      call copy3_array(c_loc(cptr), c_loc(dptr), N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 91\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 92\n      !$omp end target data\n \n-     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd))) stop 1\n+     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd))) stop 93\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd))) stop 94\n \n \n      !$omp target data map(to:ee) map(from:ff)\n      !$omp target data map(alloc:dummy) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 95\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 96\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 97\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 98\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 99\n      !$omp end target data\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 100\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 101\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 102\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 103\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 104\n \n      ! check c_loc ptr once\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 105\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 106\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_float\n      !$omp target update to(ee)\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 107\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 108\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_float\n      !$omp target update to(ee)\n      call copy3_array(c_loc(eptr), c_loc(fptr), N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff))) stop 1\n+     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 109\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff))) stop 110\n      !$omp end target data\n \n-     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 111\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 112\n   end subroutine test_dummy_opt_callee_2\n end module test_dummies_opt\n \n@@ -569,33 +569,33 @@ subroutine test_nullptr_1()\n      ee => null()\n      ff => null()\n \n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (associated(aa) .or. associated(bb)) stop 113\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 1\n+     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 114\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 115\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 116\n+     if (associated(aa) .or. associated(bb)) stop 117\n      !$omp end target data\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 118\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 119\n+     if (associated(aa) .or. associated(bb)) stop 120\n \n-     if (allocated(gg)) stop 1\n+     if (allocated(gg)) stop 121\n      !$omp target data map(tofrom:gg) use_device_addr(gg)\n-     if (c_associated(c_loc(gg))) stop 1\n+     if (c_associated(c_loc(gg))) stop 122\n      c_gptr = c_loc(gg)\n      gptr => gg\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 123\n+     if (associated(gptr)) stop 124\n+     if (allocated(gg)) stop 125\n      !$omp end target data\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 126\n+     if (associated(gptr)) stop 127\n+     if (allocated(gg)) stop 128\n \n      call test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, eptr, fptr, hptr)\n   end subroutine test_nullptr_1\n@@ -608,36 +608,36 @@ subroutine test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, e\n      type(c_ptr), optional :: c_eptr, c_fptr, c_hptr\n      real(c_float), optional, pointer :: eptr(:), fptr(:), hptr(:)\n \n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 129\n+     if (associated(ee) .or. associated(ff)) stop 130\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n-     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 131\n+     if (associated(ee) .or. associated(ff)) stop 132\n+     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 133\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 134\n+     if (associated(eptr) .or. associated(fptr)) stop 135\n      !$omp end target data\n \n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 136\n+     if (associated(eptr) .or. associated(fptr)) stop 137\n \n-     if (allocated(hh)) stop 1\n+     if (allocated(hh)) stop 138\n      !$omp target data map(tofrom:hh) use_device_addr(hh)\n-     if (c_associated(c_loc(hh))) stop 1\n+     if (c_associated(c_loc(hh))) stop 139\n      c_hptr = c_loc(hh)\n      hptr => hh\n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 140\n+     if (associated(hptr)) stop 141\n+     if (allocated(hh)) stop 142\n      !$omp end target data\n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 143\n+     if (associated(hptr)) stop 144\n+     if (allocated(hh)) stop 145\n   end subroutine test_dummy_opt_nullptr_callee_1\n end module test_nullptr\n \n@@ -668,14 +668,14 @@ subroutine test_main_1()\n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_array(c_loc(cc), c_loc(dd), N)\n      !$omp end target data\n-     if (any(abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc))) stop 146\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 147\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_array(c_loc(ee), c_loc(ff), N)\n      !$omp end target data\n-     if (any(abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee))) stop 148\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 149\n \n      deallocate(ee, ff) ! pointers, only\n    end subroutine test_main_1\n@@ -709,28 +709,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 150\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 151\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_float\n      !$omp target update to(cc)\n      call copy3_array(c_cptr, c_dptr, N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 152\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 153\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_float\n      !$omp target update to(cc)\n      call copy3_array(c_loc(cptr), c_loc(dptr), N)\n      !$omp target update from(dd)\n-     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 1\n+     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc))) stop 154\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc))) stop 155\n      !$omp end target data\n \n-     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd))) stop 1\n-     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd))) stop 1\n+     if (any(abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd))) stop 156\n+     if (any(abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd))) stop 157\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -744,28 +744,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 158\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 159\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_float\n      !$omp target update to(ee)\n      call copy3_array(c_eptr, c_fptr, N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 160\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 161\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_float\n      !$omp target update to(ee)\n      call copy3_array(c_loc(eptr), c_loc(fptr), N)\n      !$omp target update from(ff)\n-     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff))) stop 1\n+     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 162\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff))) stop 163\n      !$omp end target data\n \n-     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 1\n-     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 1\n+     if (any(abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee))) stop 164\n+     if (any(abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee))) stop 165\n \n      deallocate(ee, ff)\n    end subroutine test_main_2"}, {"sha": "d33b7d1cce00dbe3f6419677d00ce04ca1b64830", "filename": "libgomp/testsuite/libgomp.fortran/use_device_ptr-optional-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-optional-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-optional-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-optional-2.f90?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -37,8 +37,8 @@ subroutine foo(v, w, x, y, z, cptr, cptr_in)\n       if (present(z)) then; z(1) = 5; stop 15; endif\n       if (present(cptr)) then; cptr = c_loc(v); stop 16; endif\n       if (present(cptr_in)) then\n-        if (c_associated(cptr_in, c_loc(x))) stop 26\n-        stop 27\n+        if (c_associated(cptr_in, c_loc(x))) stop 17\n+        stop 18\n       endif\n     !$omp end target data\n "}, {"sha": "2fd25d611a9b3ca45e3dc190391b0b34b9b9fa18", "filename": "libgomp/testsuite/libgomp.oacc-fortran/declare-5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-5.f90?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -102,6 +102,6 @@ program test\n   if (.not. acc_is_present (y)) stop 7\n   if (.not. acc_is_present (z)) stop 8\n \n-  if (a /= 3.0) stop 3\n-  if (k /= -378) stop 3\n+  if (a /= 3.0) stop 30\n+  if (k /= -378) stop 31\n end program test"}, {"sha": "8e842980863857dd4d7dadc327fb0734a4d2a126", "filename": "libgomp/testsuite/libgomp.oacc-fortran/optional-data-copyin-by-value.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-data-copyin-by-value.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-data-copyin-by-value.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-data-copyin-by-value.f90?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -8,7 +8,7 @@ program test\n   integer :: res\n \n   if (foo(27) .ne. 27) stop 1\n-  if (foo(16, 18) .ne. 288) stop 1\n+  if (foo(16, 18) .ne. 288) stop 2\n contains\n   function foo(x, y)\n     integer, value :: x"}, {"sha": "b8ebd6e277e7dc47209231571a16ddb4234f37be", "filename": "libgomp/testsuite/libgomp.oacc-fortran/optional-firstprivate.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-firstprivate.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-firstprivate.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-firstprivate.f90?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -44,7 +44,7 @@ program test_firstprivate\n \n   call test_allocatable(res_alloc, a_alloc, b_alloc, c_alloc)\n   do i = 1, n\n-    if (res_alloc(i) .ne. a_alloc(i) * b_alloc(i) + c_alloc(i)) stop 2\n+    if (res_alloc(i) .ne. a_alloc(i) * b_alloc(i) + c_alloc(i)) stop 3\n   end do\n \n   deallocate(a_alloc)"}, {"sha": "dc2b5da3a6308fe9c11ec90bcec138de43403eaa", "filename": "libgomp/testsuite/libgomp.oacc-fortran/optional-update-host.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-update-host.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11586ed9c96870a14fb417fe26eebe4504c3d60a/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-update-host.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Foptional-update-host.f90?ref=11586ed9c96870a14fb417fe26eebe4504c3d60a", "patch": "@@ -29,12 +29,12 @@ program optional_update_host\n \n   call test_array(a_arr, b_arr)\n   do i = 1, n\n-    if (res_arr(i) .ne. 0) stop 1\n+    if (res_arr(i) .ne. 0) stop 3\n   end do\n \n   call test_array(a_arr, b_arr, res_arr)\n   do i = 1, n\n-    if (res_arr(i) .ne. a_arr(i) * b_arr(i)) stop 2\n+    if (res_arr(i) .ne. a_arr(i) * b_arr(i)) stop 4\n   end do\n \n   allocate(a_alloc(n))\n@@ -49,12 +49,12 @@ program optional_update_host\n \n   call test_allocatable(a_alloc, b_alloc)\n   do i = 1, n\n-    if (res_alloc(i) .ne. 0) stop 1\n+    if (res_alloc(i) .ne. 0) stop 5\n   end do\n \n   call test_allocatable(a_alloc, b_alloc, res_alloc)\n   do i = 1, n\n-    if (res_alloc(i) .ne. a_alloc(i) * b_alloc(i)) stop 2\n+    if (res_alloc(i) .ne. a_alloc(i) * b_alloc(i)) stop 6\n   end do\n \n   deallocate(a_alloc)"}]}