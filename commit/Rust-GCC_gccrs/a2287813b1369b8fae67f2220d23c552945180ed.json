{"sha": "a2287813b1369b8fae67f2220d23c552945180ed", "node_id": "C_kwDOANBUbNoAKGEyMjg3ODEzYjEzNjliOGZhZTY3ZjIyMjBkMjNjNTUyOTQ1MTgwZWQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-23T00:16:45Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-23T00:16:45Z"}, "message": "Daily bump.", "tree": {"sha": "7f1f45d6af96cfc1e5a5462a7f83f3205a7ea6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f1f45d6af96cfc1e5a5462a7f83f3205a7ea6a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2287813b1369b8fae67f2220d23c552945180ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2287813b1369b8fae67f2220d23c552945180ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2287813b1369b8fae67f2220d23c552945180ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2287813b1369b8fae67f2220d23c552945180ed/comments", "author": null, "committer": null, "parents": [{"sha": "5d2233f4033dfa37ad88dc2eab138524fe64242e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2233f4033dfa37ad88dc2eab138524fe64242e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2233f4033dfa37ad88dc2eab138524fe64242e"}], "stats": {"total": 270, "additions": 269, "deletions": 1}, "files": [{"sha": "a85a4ae1904fde9a73a31f1efea4df1f74a56021", "filename": "gcc/ChangeLog", "status": "modified", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1,3 +1,160 @@\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104925\n+\t* config/nvptx/nvptx.md (define_insn \"nvptx_uniform_warp_check\"):\n+\tUse % as register prefix.\n+\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.cc (nvptx_scalar_mode_supported_p)\n+\t(nvptx_libgcc_floating_mode_supported_p): Only enable HFmode for\n+\tmexperimental.\n+\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.opt (mexperimental): New option.\n+\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104957\n+\t* config/nvptx/nvptx-protos.h (nvptx_asm_output_def_from_decls): Declare.\n+\t* config/nvptx/nvptx.cc (write_fn_proto_1): Don't add function marker\n+\tfor alias.\n+\t(SET_ASM_OP, NVPTX_ASM_OUTPUT_DEF): New macro def.\n+\t(nvptx_asm_output_def_from_decls): New function.\n+\t* config/nvptx/nvptx.h (ASM_OUTPUT_DEF): New macro def, define to\n+\tgcc_unreachable ().\n+\t(ASM_OUTPUT_DEF_FROM_DECLS): New macro def, define to\n+\tnvptx_asm_output_def_from_decls.\n+\t* config/nvptx/nvptx.opt (malias): New opt.\n+\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104916\n+\tPR target/104783\n+\t* config/nvptx/nvptx.md (define_expand \"omp_simt_exit\"): Emit warp\n+\tsync (or uniform warp check for mptx < 6.0).\n+\n+2022-03-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105012\n+\t* tree-if-conv.cc (ifcvt_local_dce): Only call\n+\tdse_classify_store when we have a VDEF.\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/104902\n+\t* config/nvptx/nvptx.cc (handle_ptx_version_option):\n+\tFix option wrapping in an error message.\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/104903\n+\t* config/rs6000/rs6000-c.cc (altivec_resolve_overloaded_builtin):\n+\tWrap const keyword.\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/v850/v850-c.cc (pop_data_area): Fix typo in pragma\n+\tname.\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/104898\n+\t* config/rs6000/rs6000.cc (rs6000_option_override_internal):\n+\tUse %qs instead of (%qs).\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/104898\n+\t* config/i386/i386-options.cc (ix86_option_override_internal):\n+\t  Use '%qs' instead of '(%qs)'.\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/104898\n+\t* config/aarch64/aarch64.cc (aarch64_handle_attr_arch):\n+\tUse 'qs' and remove usage '(%qs)'.\n+\t(aarch64_handle_attr_cpu): Likewise.\n+\t(aarch64_handle_attr_tune): Likewise.\n+\t(aarch64_handle_attr_isa_flags): Likewise.\n+\n+2022-03-22  Tamar Christina  <tamar.christina@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/aarch64/aarch64.cc (neoversev1_regmove_cost): New tuning\n+\tstruct.\n+\t(neoversev1_tunings): Use neoversev1_regmove_cost and update store_int\n+\tcost.\n+\t(neoverse512tvb_tunings): Likewise.\n+\n+2022-03-22  Tamar Christina  <tamar.christina@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/aarch64/aarch64.cc (demeter_addrcost_table,\n+\tdemeter_regmove_cost, demeter_advsimd_vector_cost,\n+\tdemeter_sve_vector_cost, demeter_scalar_issue_info,\n+\tdemeter_advsimd_issue_info, demeter_sve_issue_info,\n+\tdemeter_vec_issue_info, demeter_vector_cost,\n+\tdemeter_tunings): New tuning structs.\n+\t(aarch64_ve_op_count::rename_cycles_per_iter): Enable for demeter\n+\ttuning.\n+\t* config/aarch64/aarch64-cores.def: Add entry for demeter.\n+\t* config/aarch64/aarch64-tune.md (tune): Add demeter to list.\n+\n+2022-03-22  Tamar Christina  <tamar.christina@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (struct cpu_memmov_cost): New struct.\n+\t(struct tune_params): Change type of memmov_cost to use cpu_memmov_cost.\n+\t* config/aarch64/aarch64.cc (aarch64_memory_move_cost): Update all\n+\ttunings to use cpu_memmov_cost struct.\n+\n+2022-03-22  Tamar Christina  <tamar.christina@arm.com>\n+\t    Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/aarch64/aarch64.cc (neoversen2_addrcost_table,\n+\tneoversen2_regmove_cost, neoversen2_advsimd_vector_cost,\n+\tneoversen2_sve_vector_cost, neoversen2_scalar_issue_info,\n+\tneoversen2_advsimd_issue_info, neoversen2_sve_issue_info,\n+\tneoversen2_vec_issue_info, neoversen2_tunings): New structs.\n+\t(neoversen2_tunings): Use new structs and update tuning flags.\n+\t(aarch64_vec_op_count::rename_cycles_per_iter): Enable for neoversen2\n+\ttuning.\n+\n+2022-03-22  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/aarch64/aarch64.h (AARCH64_FL_FOR_ARCH9): Add FP16 feature\n+\tbit.\n+\n+2022-03-22  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/104982\n+\t* config/i386/i386.md (*jcc_bt<mode>_mask): Extend the\n+\tfollowing splitter to reversed condition.\n+\n+2022-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/104989\n+\t* calls.cc (expand_call): Don't set ECF_NORETURN in flags after\n+\tsorry for passing too large argument, instead set sibcall_failure\n+\tfor pass == 0, or a new normal_failure flag otherwise.  If\n+\tnormal_failure is set, don't assert all stack has been deallocated\n+\tat the end and throw away the whole insn sequence.\n+\n+2022-03-22  Qian Jianhua  <qianjh@cn.fujitsu.com>\n+\n+\t* print-tree.cc: Change array length\n+\n+2022-03-22  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\tPR target/104978\n+\t* config/i386/sse.md\n+\t(avx512fp16_fmaddcsh_v8hf_mask1<round_expand_name):\n+\tUse avx512f_movsf_mask instead of vmovaps or vblend, and\n+\tforce_reg before lowpart_subreg.\n+\t(avx512fp16_fcmaddcsh_v8hf_mask1<round_expand_name): Likewise.\n+\n 2022-03-21  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/105000"}, {"sha": "8f50ebac6ff7b7ce2b11fb7c5210298eb84c84e5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1 +1 @@\n-20220322\n+20220323"}, {"sha": "ea25ddb88542cd543d25abf5cca4186d211e86de", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1,3 +1,13 @@\n+2022-03-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/82283\n+\tPR c/84685\n+\t* c-typeck.cc (struct initializer_stack): Add 'designated' member.\n+\t(start_init): Set it.\n+\t(finish_init): Restore constructor_designated.\n+\t(push_init_level): Set constructor_designated to the value of\n+\tconstructor_designated in the upper constructor_stack.\n+\n 2022-03-12  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR other/65095"}, {"sha": "2dfdf0608e1ed58868a3ed3b9765a8a2ffeb112e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1,3 +1,9 @@\n+2022-03-22  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104999\n+\t* simplify.cc (gfc_simplify_cshift): Ensure temporary holding\n+\tsource array stride is initialized.\n+\n 2022-03-19  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/104228"}, {"sha": "3e49f8b85ce2cc78a6054390e8980ea1c9710cf1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1,3 +1,73 @@\n+2022-03-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/82283\n+\tPR c/84685\n+\t* gcc.dg/Wmissing-field-initializers-1.c: New test.\n+\t* gcc.dg/Wmissing-field-initializers-2.c: New test.\n+\t* gcc.dg/Wmissing-field-initializers-3.c: New test.\n+\t* gcc.dg/Wmissing-field-initializers-4.c: New test.\n+\t* gcc.dg/Wmissing-field-initializers-5.c: New test.\n+\n+2022-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/102489\n+\t* g++.dg/coroutines/pr102489.C: New test.\n+\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gcc.target/nvptx/float16-1.c: Add additional-options -mexperimental.\n+\t* gcc.target/nvptx/float16-2.c: Same.\n+\t* gcc.target/nvptx/float16-3.c: Same.\n+\t* gcc.target/nvptx/float16-4.c: Same.\n+\t* gcc.target/nvptx/float16-5.c: Same.\n+\t* gcc.target/nvptx/float16-6.c: Same.\n+\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104957\n+\t* gcc.target/nvptx/alias-1.c: New test.\n+\t* gcc.target/nvptx/alias-2.c: New test.\n+\t* gcc.target/nvptx/alias-3.c: New test.\n+\t* gcc.target/nvptx/alias-4.c: New test.\n+\t* gcc.target/nvptx/nvptx.exp\n+\t(check_effective_target_runtime_ptx_isa_version_6_3): New proc.\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/104898\n+\t* gcc.target/i386/pr99753.c: Update test.\n+\t* gcc.target/i386/spellcheck-options-1.c: Likewise.\n+\t* gcc.target/i386/spellcheck-options-2.c: Likewise.\n+\t* gcc.target/i386/spellcheck-options-4.c: Likewise.\n+\n+2022-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/104898\n+\t* gcc.target/aarch64/branch-protection-attr.c:\n+\tUse 'qs' and remove usage '(%qs)'.\n+\t* gcc.target/aarch64/spellcheck_1.c: Likewise.\n+\t* gcc.target/aarch64/spellcheck_2.c: Likewise.\n+\t* gcc.target/aarch64/spellcheck_3.c: Likewise.\n+\n+2022-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/102645\n+\t* gcc.c-torture/compile/pr102645.c: New test.\n+\n+2022-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/104989\n+\t* g++.dg/other/pr104989.C: New test.\n+\n+2022-03-22  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\tPR target/104978\n+\t* gcc.target/i386/avx512fp16-vfcmaddcsh-1a.c: Adjust asm scan.\n+\t* gcc.target/i386/avx512fp16-vfmaddcsh-1a.c: Ditto.\n+\t* gcc.target/i386/avx512fp16-vfcmaddcsh-1c.c: Removed.\n+\t* gcc.target/i386/avx512fp16-vfmaddcsh-1c.c: Ditto.\n+\t* gcc.target/i386/pr104978.c: New test.\n+\n 2022-03-21  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/105000"}, {"sha": "30f6b7e355cd77cc679ba2bb74fd58f61c7c6e04", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1,3 +1,9 @@\n+2022-03-22  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/104916\n+\tPR target/104783\n+\t* testsuite/libgomp.c/pr104783-2.c: New test.\n+\n 2022-03-18  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/103039"}, {"sha": "27d0e8090b2a1dae8b06febc73703edb58f9fa97", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1,3 +1,8 @@\n+2022-03-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* testsuite/20_util/from_chars/6.cc (test01) [FE_DOWNWARD]:\n+\tConditionalize call to fesetround.\n+\n 2022-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/104990"}, {"sha": "89e0afb444ccbb1692bd99cf61671b247f7d5e7b", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2287813b1369b8fae67f2220d23c552945180ed/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2287813b1369b8fae67f2220d23c552945180ed/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=a2287813b1369b8fae67f2220d23c552945180ed", "patch": "@@ -1,3 +1,17 @@\n+2022-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR lto/102426\n+\t* configure.ac (LTO_PLUGIN_USE_SYMVER, LTO_PLUGIN_USE_SYMVER_GNU,\n+\tLTO_PLUGIN_USE_SYMVER_SUN): New test for symbol versioning support.\n+\t* Makefile.am (version_arg, version_dep): Set conditionally based\n+\ton LTO_PLUGIN_USE_SYMVER*.\n+\t(liblto_plugin_la_LDFLAGS): Use $(version_arg) instead of\n+\t-export-symbols-regex onload.\n+\t(liblto_plugin_la_DEPENDENCIES): Depend on $(version_dep).\n+\t* lto-plugin.map: New file.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2022-03-11  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* lto-plugin.c (all_symbols_read_handler): With -save-temps, use"}]}