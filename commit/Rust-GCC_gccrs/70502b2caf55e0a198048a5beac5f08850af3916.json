{"sha": "70502b2caf55e0a198048a5beac5f08850af3916", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA1MDJiMmNhZjU1ZTBhMTk4MDQ4YTViZWFjNWYwODg1MGFmMzkxNg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-07-25T23:21:12Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-07-25T23:21:12Z"}, "message": "Remove DOS line endings\n\nFrom-SVN: r85168", "tree": {"sha": "625364c6fdfe2768ef513e53d6ab894655deec74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/625364c6fdfe2768ef513e53d6ab894655deec74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70502b2caf55e0a198048a5beac5f08850af3916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70502b2caf55e0a198048a5beac5f08850af3916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70502b2caf55e0a198048a5beac5f08850af3916", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70502b2caf55e0a198048a5beac5f08850af3916/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7afec4b079f40ba7857ae1c898ed537b5c14313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7afec4b079f40ba7857ae1c898ed537b5c14313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7afec4b079f40ba7857ae1c898ed537b5c14313"}], "stats": {"total": 118, "additions": 59, "deletions": 59}, "files": [{"sha": "ff416daf84be2eb2e6981c9ec21082e4db3a96e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70502b2caf55e0a198048a5beac5f08850af3916/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70502b2caf55e0a198048a5beac5f08850af3916/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70502b2caf55e0a198048a5beac5f08850af3916", "patch": "@@ -1,28 +1,28 @@\n-2004-07-26  Niall Douglas  <s_fsfeurope2@nedprod.com>\r\n-\t    Brian Ryner  <bryner@brianryner.com>\r\n-\r\n-\tPR c++/9283\r\n-\tPR c++/15000\r\n-\t* c-common.c (c_common_attribute_table): Allow\r\n-\thandle_visibility_attribute to be called for types.\r\n-\t(handle_visibility_attribute) When given a type, set the visibility\r\n-\tbits on the TYPE_NAME.  When given a decl, don't set no_add_attrs\r\n-\tso that we can check later whether the attribute was present. Added\r\n-\twarning if attribute applied to non class type.\r\n-\t* c-decl.c (diagnose_mismatched_decls): Updated rules for merging\r\n-\tdecls and checking that they are consistent.\r\n-\t* common.opt: Added -fvisibility.\r\n-\t* c.opt, c-opts.c: Added -fvisibility-inlines-hidden.\r\n-\t* c-pragma.h, c-pragma.c: Added handle_pragma_visibility().\r\n-\t* flags.h, tree.h: Added assorted support defines for overall patch\r\n-\t* opts.c: Added parsing support for -fvisibility.\r\n-\t* tree.c (build_decl): Set visibility for all decls to be whatever\r\n-\tis in force at that time.\r\n-\t* varasm.c (default_binds_local_p_1): Reworked logic determining\r\n-\twhen to make a symbol locally bound.\r\n-\t* doc/invoke.texi: Added documentation for -fvisibility and\r\n-\t-fvisibility-inlines-hidden.\r\n-\r\n+2004-07-26  Niall Douglas  <s_fsfeurope2@nedprod.com>\n+\t    Brian Ryner  <bryner@brianryner.com>\n+\n+\tPR c++/9283\n+\tPR c++/15000\n+\t* c-common.c (c_common_attribute_table): Allow\n+\thandle_visibility_attribute to be called for types.\n+\t(handle_visibility_attribute) When given a type, set the visibility\n+\tbits on the TYPE_NAME.  When given a decl, don't set no_add_attrs\n+\tso that we can check later whether the attribute was present. Added\n+\twarning if attribute applied to non class type.\n+\t* c-decl.c (diagnose_mismatched_decls): Updated rules for merging\n+\tdecls and checking that they are consistent.\n+\t* common.opt: Added -fvisibility.\n+\t* c.opt, c-opts.c: Added -fvisibility-inlines-hidden.\n+\t* c-pragma.h, c-pragma.c: Added handle_pragma_visibility().\n+\t* flags.h, tree.h: Added assorted support defines for overall patch\n+\t* opts.c: Added parsing support for -fvisibility.\n+\t* tree.c (build_decl): Set visibility for all decls to be whatever\n+\tis in force at that time.\n+\t* varasm.c (default_binds_local_p_1): Reworked logic determining\n+\twhen to make a symbol locally bound.\n+\t* doc/invoke.texi: Added documentation for -fvisibility and\n+\t-fvisibility-inlines-hidden.\n+\n 2004-07-25  Bernardo Innocenti  <bernie@develer.com>\n \n \t* basic-block.h (reorder_block_def): Rename to reorder_block_def_p."}, {"sha": "e6e1a2482fdae0d472ed6ebaf4a30c9a3000422b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70502b2caf55e0a198048a5beac5f08850af3916/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70502b2caf55e0a198048a5beac5f08850af3916/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=70502b2caf55e0a198048a5beac5f08850af3916", "patch": "@@ -1,24 +1,24 @@\n-2004-07-26  Niall Douglas  <s_fsfeurope2@nedprod.com>\r\n-\t    Brian Ryner  <bryner@brianryner.com>\r\n-\r\n-\tPR c++/15000\r\n-\tPR c++/9283\r\n-\t* class.c (check_field_decls): Apply hidden visibility if\r\n-\t-fvisibility-inlines-hidden and inlined unless otherwise specified\r\n-\t(build_vtable): Set vtable visibility to class visibility.\r\n-\t(check_field_decls): Default static member visibility to class\r\n-\tvisibility.\r\n-\t(check_methods): Default method visibility to class visibility.\r\n-\t* cp-tree.h: Added CLASSTYPE_VISIBILITY and\r\n-\tCLASSTYPE_VISIBILITY_SPECIFIED macro.\r\n-\t* decl.c (duplicate_decls): New logic for merging definition decls\r\n-\twith declaration decls. Added ignore & warning when non default\r\n-\tapplied to global operator new or delete.\r\n-\t* method.c, optimize.c, rtti.c: Added setting of VISIBILITY_SPECIFIED\r\n-\twherever VISIBILITY was changed\r\n-\t* rtti.c (get_tinfo_decl): Set typeinfo visibility to class\r\n-\tvisibility.\r\n-\t(tinfo_base_init): Set typeinfo name visibility to class visibility.\r\n+2004-07-26  Niall Douglas  <s_fsfeurope2@nedprod.com>\n+\t    Brian Ryner  <bryner@brianryner.com>\n+\n+\tPR c++/15000\n+\tPR c++/9283\n+\t* class.c (check_field_decls): Apply hidden visibility if\n+\t-fvisibility-inlines-hidden and inlined unless otherwise specified\n+\t(build_vtable): Set vtable visibility to class visibility.\n+\t(check_field_decls): Default static member visibility to class\n+\tvisibility.\n+\t(check_methods): Default method visibility to class visibility.\n+\t* cp-tree.h: Added CLASSTYPE_VISIBILITY and\n+\tCLASSTYPE_VISIBILITY_SPECIFIED macro.\n+\t* decl.c (duplicate_decls): New logic for merging definition decls\n+\twith declaration decls. Added ignore & warning when non default\n+\tapplied to global operator new or delete.\n+\t* method.c, optimize.c, rtti.c: Added setting of VISIBILITY_SPECIFIED\n+\twherever VISIBILITY was changed\n+\t* rtti.c (get_tinfo_decl): Set typeinfo visibility to class\n+\tvisibility.\n+\t(tinfo_base_init): Set typeinfo name visibility to class visibility.\n \n 2004-07-25  Bernardo Innocenti  <bernie@develer.com>\n "}, {"sha": "e3a38beca4660f2bbac3addcd6da701156d40d70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70502b2caf55e0a198048a5beac5f08850af3916/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70502b2caf55e0a198048a5beac5f08850af3916/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70502b2caf55e0a198048a5beac5f08850af3916", "patch": "@@ -1,8 +1,8 @@\n-2004-07-26  Niall Douglas  <s_fsfeurope2@nedprod.com>\r\n-\t    Brian Ryner  <bryner@brianryner.com>\r\n-\r\n-\tPR c++/9283\r\n-\tPR c++/15000\r\n+2004-07-26  Niall Douglas  <s_fsfeurope2@nedprod.com>\n+\t    Brian Ryner  <bryner@brianryner.com>\n+\n+\tPR c++/9283\n+\tPR c++/15000\n \t* gcc.dg/visibility-9.c, gcc.dg/visibility-a.c: New tests.\n \t* g++.dg/ext/visibility/: New directory.\n \t* g++.dg/ext/visibility-1.C, g++.dg/ext/visibility-2.C\n@@ -11,14 +11,14 @@\n \tg++.dg/ext/visibility-7.C: Move to g++.dg/ext/visibility/.\n \t* g++.dg/ext/visibility/fvisibility.C,\n \tg++.dg/ext/visibility/fvisibility-inlines-hidden.C,\n-\tg++.dg/ext/visibility/fvisibility-override1.C\r\n-\tg++.dg/ext/visibility/fvisibility-override2.C\r\n-\tg++.dg/ext/visibility/memfuncts.C\r\n-\tg++.dg/ext/visibility/noPLT.C\r\n-\tg++.dg/ext/visibility/pragma.C\r\n-\tg++.dg/ext/visibility/pragma-override1.C\r\n-\tg++.dg/ext/visibility/pragma-override2.C\r\n-\tg++.dg/ext/visibility/staticmemfuncts.C\r\n+\tg++.dg/ext/visibility/fvisibility-override1.C\n+\tg++.dg/ext/visibility/fvisibility-override2.C\n+\tg++.dg/ext/visibility/memfuncts.C\n+\tg++.dg/ext/visibility/noPLT.C\n+\tg++.dg/ext/visibility/pragma.C\n+\tg++.dg/ext/visibility/pragma-override1.C\n+\tg++.dg/ext/visibility/pragma-override2.C\n+\tg++.dg/ext/visibility/staticmemfuncts.C\n \tg++.dg/ext/visibility/virtual.C: New tests.\n \n 2004-07-25  Joseph S. Myers  <jsm@polyomino.org.uk>"}]}