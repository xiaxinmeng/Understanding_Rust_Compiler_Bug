{"sha": "f88a74911f7a002ce8fea763783a7b2f3e7b9ff0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg4YTc0OTExZjdhMDAyY2U4ZmVhNzYzNzgzYTdiMmYzZTdiOWZmMA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-07-01T13:14:47Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-07-01T13:14:47Z"}, "message": "(HANDLE_SYSV_PRAGMA): Replaces HANDLE_PRAGMA\n\nFrom-SVN: r1371", "tree": {"sha": "9685f049926c1d3c83785b06a504b0a684564cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9685f049926c1d3c83785b06a504b0a684564cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f88a74911f7a002ce8fea763783a7b2f3e7b9ff0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88a74911f7a002ce8fea763783a7b2f3e7b9ff0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88a74911f7a002ce8fea763783a7b2f3e7b9ff0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88a74911f7a002ce8fea763783a7b2f3e7b9ff0/comments", "author": null, "committer": null, "parents": [{"sha": "a3100298b45f4e059f519c7e675330130c035ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3100298b45f4e059f519c7e675330130c035ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3100298b45f4e059f519c7e675330130c035ef0"}], "stats": {"total": 31, "additions": 2, "deletions": 29}, "files": [{"sha": "c551805bfc519900f7dc7e41e7356421007d7ef6", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f88a74911f7a002ce8fea763783a7b2f3e7b9ff0/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f88a74911f7a002ce8fea763783a7b2f3e7b9ff0/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=f88a74911f7a002ce8fea763783a7b2f3e7b9ff0", "patch": "@@ -100,7 +100,6 @@ extern enum attr_cpu m88k_cpu;\n extern int null_epilogue ();\n extern int integer_ok_for_set ();\n extern int m88k_debugger_offset ();\n-extern void m88k_handle_pragma_token ();\n \n extern void emit_bcnd ();\n extern void expand_block_move ();\n@@ -1429,34 +1428,8 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n /* Allow and ignore #sccs directives */\n #define SCCS_DIRECTIVE\n \n-/* Code to handle #pragma directives.  The interface is a bit messy,\n-   but there's no simpler way to do this while still using yylex.  */\n-#define HANDLE_PRAGMA(FILE)\t\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\\\n-    while (c == ' ' || c == '\\t')\t\t\t\t\\\n-      c = getc (FILE);\t\t\t\t\t\t\\\n-    if (c == '\\n' || c == EOF)\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\tm88k_handle_pragma_token (0, 0);\t\t\t\\\n-\treturn c;\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    ungetc (c, FILE);\t\t\t\t\t\t\\\n-    switch (yylex ())\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-      case IDENTIFIER:\t\t\t\t\t\t\\\n-      case TYPENAME:\t\t\t\t\t\t\\\n-      case STRING:\t\t\t\t\t\t\\\n-      case CONSTANT:\t\t\t\t\t\t\\\n-\tm88k_handle_pragma_token (token_buffer, yylval.ttype);\t\\\n-\tbreak;\t\t\t\t\t\t\t\\\n-      default:\t\t\t\t\t\t\t\\\n-\tm88k_handle_pragma_token (token_buffer, 0);\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    if (nextchar >= 0)\t\t\t\t\t\t\\\n-      c = nextchar, nextchar = -1;\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\\\n-      c = getc (FILE);\t\t\t\t\t\t\\\n-  } while (1)\n+/* Handle #pragma pack and sometimes #pragma weak.  */\n+#define HANDLE_SYSV_PRAGMA\n \n /* Tell when to handle #pragma weak.  This is only done for V.4.  */\n #define HANDLE_PRAGMA_WEAK TARGET_SVR4"}]}