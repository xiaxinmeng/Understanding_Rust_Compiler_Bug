{"sha": "41b21cfc17e6648120f83bad22cfb1df2a670b71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiMjFjZmMxN2U2NjQ4MTIwZjgzYmFkMjJjZmIxZGYyYTY3MGI3MQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-11-03T08:14:02Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-11-03T08:14:02Z"}, "message": "Make more robust in two places.\n\nFrom-SVN: r5978", "tree": {"sha": "86b359243ba885543e77f2cba6033e1e2ce4fa98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86b359243ba885543e77f2cba6033e1e2ce4fa98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41b21cfc17e6648120f83bad22cfb1df2a670b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b21cfc17e6648120f83bad22cfb1df2a670b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b21cfc17e6648120f83bad22cfb1df2a670b71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b21cfc17e6648120f83bad22cfb1df2a670b71/comments", "author": null, "committer": null, "parents": [{"sha": "c7bfb646244bff1568ff2b1d8615f139a61aac9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7bfb646244bff1568ff2b1d8615f139a61aac9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7bfb646244bff1568ff2b1d8615f139a61aac9f"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "c21f1c1ea0a8aab1e9a7142328f80dd81c8094d6", "filename": "gcc/fixproto", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b21cfc17e6648120f83bad22cfb1df2a670b71/gcc%2Ffixproto", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b21cfc17e6648120f83bad22cfb1df2a670b71/gcc%2Ffixproto", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixproto?ref=41b21cfc17e6648120f83bad22cfb1df2a670b71", "patch": "@@ -194,12 +194,17 @@ for code in ALL STD ; do\n \t\t  # Already seen $file; nothing to do\n \t\t  ;;\n \t\t*)\n-\t          new_files_to_check=\"$new_files_to_check `sed -n \\\n+\t\t  if test -f $src_dir_std/$file ; then\n+\t\t    rel_dir=`echo $file | sed -n -e 's|^\\(.*/\\)[^/]*$|\\1|p'`\n+\t\t    # For #include \"foo.h\", that might be either \"foo.h\"\n+\t\t    # or \"${rel_dir}foo.h (or something bogus).\n+\t            new_files_to_check=\"$new_files_to_check \"`sed -n \\\n \t\t\t-e 's@\t@ @g' \\\n-\t\t\t-e 's@^ *# *include *<\\([^>]*\\)>.*$@\\1@p' \\\n-\t\t\t-e 's@^ *# *include *\\\"\\([^\\\"]*\\)\\\".*$@\\1@p' \\\n-\t\t\t<$src_dir_std/$file`\"\n-\t          rel_source_files=\"$rel_source_files $file\"\n+\t\t        -e 's@^ *# *include *<\\([^>]*\\)>.*$@\\1@p' -e \\\n+\t\t        's@^ *# *include *\\\"\\([^\\\"]*\\)\\\".*$@\\1 '$rel_dir'\\1@p'\\\n+\t\t\t<$src_dir_std/$file`\n+\t            rel_source_files=\"$rel_source_files $file\"\n+\t\t  fi\n \t\t  ;;\n \t      esac\n \t    done\n@@ -260,7 +265,7 @@ for code in ALL STD ; do\n \t      required_list=\"kill raise\" ;;\n \t    stdio.h)\n \t      required_list=\"clearerr fclose feof ferror fflush fgetc fgetpos fgets fopen fprintf fputc fputs fread freopen fscanf fseek fsetpos ftell fwrite getc getchar gets perror printf putc putchar puts remove rename rewind scanf setbuf setvbuf sprintf sscanf tmpfile tmpnam ungetc vfprintf vprintf vsprintf\"\n-\t      if grep _flsbuf <$abs_source_file >/dev/null ; then\n+\t      if grep '[^_a-zA-Z0-9]_flsbuf' <$abs_source_file >/dev/null; then\n \t\trequired_list=\"$required_list _flsbuf _filbuf\"\n \t      fi\n \t      # Should perhaps also handle NULL, EOF, ... ?"}]}