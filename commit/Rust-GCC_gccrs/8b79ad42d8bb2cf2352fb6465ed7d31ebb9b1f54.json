{"sha": "8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3OWFkNDJkOGJiMmNmMjM1MmZiNjQ2NWVkN2QzMWViYjliMWY1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T08:41:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T08:41:30Z"}, "message": "adaint.c, [...]: Fix the Set_Read_Only Win32 implementation.\n\n2008-08-05  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c, adaint.h, s-os_lib.adb, s-os_lib.ads: Fix the\n\tSet_Read_Only Win32 implementation.\n\nFrom-SVN: r138676", "tree": {"sha": "98e8780cb32c9ae9f98d05ae4749128e492a59d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98e8780cb32c9ae9f98d05ae4749128e492a59d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/comments", "author": null, "committer": null, "parents": [{"sha": "38b181d6c0e6db96732eec43f8ae31fd7f3e0c71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b181d6c0e6db96732eec43f8ae31fd7f3e0c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b181d6c0e6db96732eec43f8ae31fd7f3e0c71"}], "stats": {"total": 136, "additions": 74, "deletions": 62}, "files": [{"sha": "a55bd8cc12c3af5e2da09f2ecae8ba184922eacf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "patch": "@@ -1,3 +1,14 @@\n+2008-08-05  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_util.adb (Collect_Interfaces_Info): Minor reformating.\n+\t* exp_ch3.adb (Build_Offset_To_Top_Functions): Code cleanup: the\n+\timplementation of this routine has been simplified.\n+\n+2008-08-05  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c, adaint.h, s-os_lib.adb, s-os_lib.ads: Fix the\n+\tSet_Read_Only Win32 implementation.\n+\n 2008-08-05  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_strm.adb: Minor reformatting (comments)"}, {"sha": "320d9b2f4e533c1b000690e493eb11cb492f60bc", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "patch": "@@ -1927,14 +1927,14 @@ __gnat_set_executable (char *name)\n }\n \n void\n-__gnat_set_readonly (char *name)\n+__gnat_set_non_writable (char *name)\n {\n #if defined (_WIN32) && !defined (RTX)\n   TCHAR wname [GNAT_MAX_PATH_LEN + 2];\n \n   S2WSU (wname, name, GNAT_MAX_PATH_LEN + 2);\n \n-  __gnat_set_OWNER_ACL (wname, SET_ACCESS, GENERIC_READ);\n+  __gnat_set_OWNER_ACL (wname, REVOKE_ACCESS, GENERIC_WRITE);\n   SetFileAttributes\n     (wname, GetFileAttributes (wname) | FILE_ATTRIBUTE_READONLY);\n #elif ! defined (__vxworks) && ! defined(__nucleus__)"}, {"sha": "423c7ece7dce61057c456884cf224044998e23b9", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "patch": "@@ -102,7 +102,7 @@ extern int    __gnat_is_directory\t\t   (char *);\n extern int    __gnat_is_writable_file\t\t   (char *);\n extern int    __gnat_is_readable_file\t\t   (char *name);\n extern int    __gnat_is_executable_file            (char *name);\n-extern void   __gnat_set_readonly                  (char *name);\n+extern void   __gnat_set_non_writable              (char *name);\n extern void   __gnat_set_writable                  (char *name);\n extern void   __gnat_set_executable                (char *name);\n extern int    __gnat_is_symbolic_link\t\t   (char *name);"}, {"sha": "8ba90aa13df1b5e67be8bfad3c03467d6632305e", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "patch": "@@ -589,9 +589,9 @@ package body System.OS_Lib is\n       Mode     : Copy_Mode := Copy;\n       Preserve : Attribute := Time_Stamps)\n    is\n-      Ada_Name : String_Access :=\n-                   To_Path_String_Access\n-                     (Name, C_String_Length (Name));\n+      Ada_Name     : String_Access :=\n+                       To_Path_String_Access\n+                         (Name, C_String_Length (Name));\n \n       Ada_Pathname : String_Access :=\n                        To_Path_String_Access\n@@ -648,9 +648,9 @@ package body System.OS_Lib is\n                      To_Path_String_Access\n                        (Source, C_String_Length (Source));\n \n-      Ada_Dest : String_Access :=\n-                   To_Path_String_Access\n-                     (Dest, C_String_Length (Dest));\n+      Ada_Dest   : String_Access :=\n+                     To_Path_String_Access\n+                       (Dest, C_String_Length (Dest));\n    begin\n       Copy_Time_Stamps (Ada_Source.all, Ada_Dest.all, Success);\n       Free (Ada_Source);\n@@ -872,7 +872,7 @@ package body System.OS_Lib is\n    ---------------------\n \n    function File_Time_Stamp (FD : File_Descriptor) return OS_Time is\n-      function File_Time (FD    : File_Descriptor) return OS_Time;\n+      function File_Time (FD : File_Descriptor) return OS_Time;\n       pragma Import (C, File_Time, \"__gnat_file_time_fd\");\n    begin\n       return File_Time (FD);\n@@ -1465,6 +1465,7 @@ package body System.OS_Lib is\n \n       if Path_Len = 0 then\n          return null;\n+\n       else\n          Result := To_Path_String_Access (Path_Addr, Path_Len);\n          Free (Path_Addr);\n@@ -2269,6 +2270,20 @@ package body System.OS_Lib is\n       Rename_File (C_Old_Name'Address, C_New_Name'Address, Success);\n    end Rename_File;\n \n+   ----------------------\n+   -- Set_Non_Writable --\n+   ----------------------\n+\n+   procedure Set_Non_Writable (Name : String) is\n+      procedure C_Set_Non_Writable (Name : C_File_Name);\n+      pragma Import (C, C_Set_Non_Writable, \"__gnat_set_non_writable\");\n+      C_Name : aliased String (Name'First .. Name'Last + 1);\n+   begin\n+      C_Name (Name'Range)  := Name;\n+      C_Name (C_Name'Last) := ASCII.NUL;\n+      C_Set_Non_Writable (C_Name (C_Name'First)'Address);\n+   end Set_Non_Writable;\n+\n    -----------------------\n    -- Set_Close_On_Exec --\n    -----------------------\n@@ -2300,20 +2315,6 @@ package body System.OS_Lib is\n       C_Set_Executable (C_Name (C_Name'First)'Address);\n    end Set_Executable;\n \n-   --------------------\n-   -- Set_Read_Only --\n-   --------------------\n-\n-   procedure Set_Read_Only (Name : String) is\n-      procedure C_Set_Read_Only (Name : C_File_Name);\n-      pragma Import (C, C_Set_Read_Only, \"__gnat_set_readonly\");\n-      C_Name : aliased String (Name'First .. Name'Last + 1);\n-   begin\n-      C_Name (Name'Range)  := Name;\n-      C_Name (C_Name'Last) := ASCII.NUL;\n-      C_Set_Read_Only (C_Name (C_Name'First)'Address);\n-   end Set_Read_Only;\n-\n    --------------------\n    -- Set_Writable --\n    --------------------\n@@ -2417,12 +2418,12 @@ package body System.OS_Lib is\n    end Spawn;\n \n    procedure Spawn\n-     (Program_Name  : String;\n-      Args          : Argument_List;\n-      Output_File   : String;\n-      Success       : out Boolean;\n-      Return_Code   : out Integer;\n-      Err_To_Out    : Boolean := True)\n+     (Program_Name : String;\n+      Args         : Argument_List;\n+      Output_File  : String;\n+      Success      : out Boolean;\n+      Return_Code  : out Integer;\n+      Err_To_Out   : Boolean := True)\n    is\n       FD : File_Descriptor;\n \n@@ -2468,16 +2469,16 @@ package body System.OS_Lib is\n          type Chars is array (Positive range <>) of aliased Character;\n          type Char_Ptr is access constant Character;\n \n-         Command_Len : constant Positive := Program_Name'Length + 1\n-                                              + Args_Length (Args);\n+         Command_Len  : constant Positive := Program_Name'Length + 1\n+                                               + Args_Length (Args);\n          Command_Last : Natural := 0;\n-         Command : aliased Chars (1 .. Command_Len);\n+         Command      : aliased Chars (1 .. Command_Len);\n          --  Command contains all characters of the Program_Name and Args, all\n          --  terminated by ASCII.NUL characters\n \n-         Arg_List_Len : constant Positive := Args'Length + 2;\n+         Arg_List_Len  : constant Positive := Args'Length + 2;\n          Arg_List_Last : Natural := 0;\n-         Arg_List : aliased array (1 .. Arg_List_Len) of Char_Ptr;\n+         Arg_List      : aliased array (1 .. Arg_List_Len) of Char_Ptr;\n          --  List with pointers to NUL-terminated strings of the Program_Name\n          --  and the Args and terminated with a null pointer. We rely on the\n          --  default initialization for the last null pointer.\n@@ -2571,9 +2572,8 @@ package body System.OS_Lib is\n       subtype Path_String is String (1 .. Path_Len);\n       type    Path_String_Access is access Path_String;\n \n-      function Address_To_Access is new\n-        Ada.Unchecked_Conversion (Source => Address,\n-                              Target => Path_String_Access);\n+      function Address_To_Access is new Ada.Unchecked_Conversion\n+        (Source => Address, Target => Path_String_Access);\n \n       Path_Access : constant Path_String_Access :=\n                       Address_To_Access (Path_Addr);"}, {"sha": "07fd3d9be586191494d5e135e8ca940d98c63237", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "patch": "@@ -149,9 +149,9 @@ package System.OS_Lib is\n       Hour   : out Hour_Type;\n       Minute : out Minute_Type;\n       Second : out Second_Type);\n-   --  Analogous to the Split routine in Ada.Calendar, takes an OS_Time\n-   --  and provides a representation of it as a set of component parts,\n-   --  to be interpreted as a date point in UTC.\n+   --  Analogous to the Split routine in Ada.Calendar, takes an OS_Time and\n+   --  provides a representation of it as a set of component parts, to be\n+   --  interpreted as a date point in UTC.\n \n    ----------------\n    -- File Stuff --\n@@ -238,11 +238,11 @@ package System.OS_Lib is\n    --  mode parameter is provided. Since this is a temporary file, there is no\n    --  point in doing text translation on it.\n    --\n-   --  On some OSes, the maximum number of temp files that can be created with\n-   --  this procedure may be limited. When the maximum is reached, this\n-   --  procedure returns Invalid_FD. On some OSes, there may be a race\n-   --  condition between processes trying to create temp files at the same\n-   --  time in the same directory using this procedure.\n+   --  On some operating systems, the maximum number of temp files that can be\n+   --  created with this procedure may be limited. When the maximum is reached,\n+   --  this procedure returns Invalid_FD. On some operating systems, there may\n+   --  be a race condition between processes trying to create temp files at the\n+   --  same time in the same directory using this procedure.\n \n    procedure Create_Temp_File\n      (FD   : out File_Descriptor;\n@@ -498,27 +498,29 @@ package System.OS_Lib is\n    --  span file systems and may refer to directories.\n \n    procedure Set_Writable (Name : String);\n-   --  Change the permissions on the named file to make it writable\n-   --  for its owner.\n+   --  Change permissions on the named file to make it writable for its owner\n \n-   procedure Set_Read_Only (Name : String);\n-   --  Change the permissions on the named file to make it non-writable\n-   --  for its owner.\n+   procedure Set_Non_Writable (Name : String);\n+   --  Change permissions on the named file to make it non-writable for its\n+   --  owner. The readable and executable permissions are not modified.\n+\n+   procedure Set_Read_Only (Name : String) renames Set_Non_Writable;\n+   --  This renaming is provided for backwards compatibility with previous\n+   --  versions. The use of Set_Non_Writable is preferred (clearer name).\n \n    procedure Set_Executable (Name : String);\n-   --  Change the permissions on the named file to make it executable\n-   --  for its owner.\n+   --  Change permissions on the named file to make it executable for its owner\n \n    function Locate_Exec_On_Path\n      (Exec_Name : String) return String_Access;\n    --  Try to locate an executable whose name is given by Exec_Name in the\n-   --  directories listed in the environment Path. If the Exec_Name doesn't\n+   --  directories listed in the environment Path. If the Exec_Name does not\n    --  have the executable suffix, it will be appended before the search.\n-   --  Otherwise works like Locate_Regular_File below.\n-   --  If the executable is not found, null is returned.\n+   --  Otherwise works like Locate_Regular_File below. If the executable is\n+   --  not found, null is returned.\n    --\n-   --  Note that this function allocates some memory for the returned value.\n-   --  This memory needs to be deallocated after use.\n+   --  Note that this function allocates memory for the returned value. This\n+   --  memory needs to be deallocated after use.\n \n    function Locate_Regular_File\n      (File_Name : String;\n@@ -544,10 +546,9 @@ package System.OS_Lib is\n    --  the heap and should be freed after use to avoid storage leaks.\n \n    function Get_Target_Debuggable_Suffix return String_Access;\n-   --  Return the target debuggable suffix convention. Usually this is the\n-   --  same as the convention for Get_Executable_Suffix. The result is\n-   --  allocated on the heap and should be freed after use to avoid storage\n-   --  leaks.\n+   --  Return the target debuggable suffix convention. Usually this is the same\n+   --  as the convention for Get_Executable_Suffix. The result is allocated on\n+   --  the heap and should be freed after use to avoid storage leaks.\n \n    function Get_Executable_Suffix return String_Access;\n    --  Return the executable suffix convention. The result is allocated on the"}]}