{"sha": "44a22bdb40386dd07306f2b8a3335ed360d99517", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRhMjJiZGI0MDM4NmRkMDczMDZmMmI4YTMzMzVlZDM2MGQ5OTUxNw==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2011-09-29T13:15:29Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2011-09-29T13:15:29Z"}, "message": "Use urandom in gcc.c too\n\ngcc also takes generates a random number in some special circumstances,\nso teach it about /dev/urandom too.\n\ngcc/:\n\n2011-09-27   Andi Kleen <ak@linux.intel.com>\n\n\t* gcc.c (get_local_tick). Rename to get_random_number.\n        Read from /dev/urandom.\n\tAdd getpid call.\n\t(compare_debug_dump_opt_spec_function): Drop getpid call.\n\nFrom-SVN: r179349", "tree": {"sha": "73e1b598941a7e65ca0952e6d3da7a8f1ab89fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73e1b598941a7e65ca0952e6d3da7a8f1ab89fe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44a22bdb40386dd07306f2b8a3335ed360d99517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a22bdb40386dd07306f2b8a3335ed360d99517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a22bdb40386dd07306f2b8a3335ed360d99517", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a22bdb40386dd07306f2b8a3335ed360d99517/comments", "author": null, "committer": null, "parents": [{"sha": "35f2a89d8ec65fe11c37f1c681f465229bc852e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f2a89d8ec65fe11c37f1c681f465229bc852e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f2a89d8ec65fe11c37f1c681f465229bc852e3"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "465ce0d03b0fea26fe48c13caf5449a50ebaf0c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a22bdb40386dd07306f2b8a3335ed360d99517/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a22bdb40386dd07306f2b8a3335ed360d99517/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44a22bdb40386dd07306f2b8a3335ed360d99517", "patch": "@@ -1,3 +1,10 @@\n+2011-09-27   Andi Kleen <ak@linux.intel.com>\n+\n+\t* gcc.c (get_local_tick). Rename to get_random_number.\n+        Read from /dev/urandom.\n+\tAdd getpid call.\n+\t(compare_debug_dump_opt_spec_function): Drop getpid call.\n+\n 2011-09-26   Andi Kleen <ak@linux.intel.com>\n \n \t* toplev.c (init_local_tick): Try reading random seed from /dev/urandom"}, {"sha": "3bfdf77b401939320137e4ae545aed0ea285cee3", "filename": "gcc/gcc.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a22bdb40386dd07306f2b8a3335ed360d99517/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a22bdb40386dd07306f2b8a3335ed360d99517/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=44a22bdb40386dd07306f2b8a3335ed360d99517", "patch": "@@ -8062,12 +8062,22 @@ print_asm_header_spec_function (int arg ATTRIBUTE_UNUSED,\n   return NULL;\n }\n \n-/* Compute a timestamp to initialize flag_random_seed.  */\n+/* Get a random number for -frandom-seed */\n \n-static unsigned\n-get_local_tick (void)\n+static unsigned HOST_WIDE_INT\n+get_random_number (void)\n {\n-  unsigned ret = 0;\n+  unsigned HOST_WIDE_INT ret = 0;\n+  int fd; \n+\n+  fd = open (\"/dev/urandom\", O_RDONLY); \n+  if (fd >= 0)\n+    {\n+      read (fd, &ret, sizeof (HOST_WIDE_INT));\n+      close (fd);\n+      if (ret)\n+        return ret;\n+    }\n \n   /* Get some more or less random data.  */\n #ifdef HAVE_GETTIMEOFDAY\n@@ -8086,7 +8096,7 @@ get_local_tick (void)\n   }\n #endif\n \n-  return ret;\n+  return ret ^ getpid();\n }\n \n /* %:compare-debug-dump-opt spec function.  Save the last argument,\n@@ -8145,7 +8155,7 @@ compare_debug_dump_opt_spec_function (int arg,\n \n   if (!which)\n     {\n-      unsigned HOST_WIDE_INT value = get_local_tick () ^ getpid ();\n+      unsigned HOST_WIDE_INT value = get_random_number ();\n \n       sprintf (random_seed, HOST_WIDE_INT_PRINT_HEX, value);\n     }"}]}