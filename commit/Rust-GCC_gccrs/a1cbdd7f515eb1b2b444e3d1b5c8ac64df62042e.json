{"sha": "a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjYmRkN2Y1MTVlYjFiMmI0NDRlM2QxYjVjOGFjNjRkZjYyMDQyZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-17T00:35:39Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-17T00:35:39Z"}, "message": "i386.md (test?i_1): Use \"nonmemory_operand\" predicate, simplify condition.\n\n\t* i386.md (test?i_1): Use \"nonmemory_operand\" predicate, simplify\n\tcondition.\n\t(one_cmpl?i*): Pass \"NOT\" to unary_operator_ok.\n\nFrom-SVN: r30984", "tree": {"sha": "8c55544ae39b990d134c1288ef9314cec852fad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c55544ae39b990d134c1288ef9314cec852fad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e/comments", "author": null, "committer": null, "parents": [{"sha": "607cf13135fdf7c664bb26f7cf2c5b3c18204f96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/607cf13135fdf7c664bb26f7cf2c5b3c18204f96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/607cf13135fdf7c664bb26f7cf2c5b3c18204f96"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "a2616195a43027611abcce097a644a049ff5c9f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e", "patch": "@@ -1,3 +1,9 @@\n+Fri Dec 17 01:32:38 MET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n+\n+\t* i386.md (test?i_1): Use \"nonmemory_operand\" predicate, simplify\n+\tcondition.\n+\t(one_cmpl?i*): Pass \"NOT\" to unary_operator_ok.\n+\n 1999-12-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* Makefile.in (INTREGRATE_H): Rename to INTEGRATE_H."}, {"sha": "d2b3945b55e5efcbe9ead94d0a65d2ad13a9b0ea", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a1cbdd7f515eb1b2b444e3d1b5c8ac64df62042e", "patch": "@@ -4195,29 +4195,29 @@\n (define_insn \"testsi_1\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO (and:SI (match_operand:SI 0 \"nonimmediate_operand\" \"%*a,r,rm\")\n-\t\t\t      (match_operand:SI 1 \"general_operand\" \"in,in,rin\"))\n+\t\t\t      (match_operand:SI 1 \"nonmemory_operand\" \"in,in,rin\"))\n \t\t      (const_int 0)))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"\"\n   \"test{l}\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"icmp\")\n    (set_attr \"pent_pair\" \"uv,np,uv\")])\n \n (define_insn \"*testhi_1\"\n   [(set (reg:CCNO 17)\n         (compare:CCNO (and:HI (match_operand:HI 0 \"nonimmediate_operand\" \"%*a,r,rm\")\n-\t\t\t      (match_operand:HI 1 \"general_operand\" \"n,n,rn\"))\n+\t\t\t      (match_operand:HI 1 \"nonmemory_operand\" \"n,n,rn\"))\n \t\t      (const_int 0)))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"\"\n   \"test{w}\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"icmp\")\n    (set_attr \"pent_pair\" \"uv,np,uv\")])\n \n (define_insn \"testqi_1\"\n   [(set (reg:CCNO 17)\n         (compare:CCNO (and:QI (match_operand:QI 0 \"nonimmediate_operand\" \"%*a,q,qm\")\n-\t\t\t      (match_operand:QI 1 \"general_operand\" \"n,n,qn\"))\n+\t\t\t      (match_operand:QI 1 \"nonmemory_operand\" \"n,n,qn\"))\n \t\t      (const_int 0)))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"\"\n   \"test{b}\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"icmp\")\n    (set_attr \"pent_pair\" \"uv,np,uv\")])\n@@ -5347,16 +5347,15 @@\n ;; One complement instructions\n \n (define_expand \"one_cmplsi2\"\n-  [(parallel [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (not:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC 17))])]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(not:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_unary_operator (NOT, SImode, operands); DONE;\")\n \n (define_insn \"*one_cmplsi2_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm\")\n \t(not:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\")))]\n-  \"ix86_unary_operator_ok (NEG, SImode, operands)\"\n+  \"ix86_unary_operator_ok (NOT, SImode, operands)\"\n   \"not{l}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n@@ -5366,7 +5365,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm\")\n \t(not:SI (match_dup 1)))]\n-  \"ix86_unary_operator_ok (NEG, SImode, operands)\"\n+  \"ix86_unary_operator_ok (NOT, SImode, operands)\"\n   \"#\"\n   [(set_attr \"type\" \"alu1\")])\n \n@@ -5385,16 +5384,15 @@\n   \"\")\n \n (define_expand \"one_cmplhi2\"\n-  [(parallel [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (not:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC 17))])]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(not:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_unary_operator (NOT, HImode, operands); DONE;\")\n \n (define_insn \"*one_cmplhi2_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm\")\n \t(not:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\")))]\n-  \"ix86_unary_operator_ok (NEG, HImode, operands)\"\n+  \"ix86_unary_operator_ok (NOT, HImode, operands)\"\n   \"not{w}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n@@ -5434,16 +5432,15 @@\n \n ;; %%% Potential partial reg stall on alternative 1.  What to do?\n (define_expand \"one_cmplqi2\"\n-  [(parallel [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (not:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC 17))])]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(not:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_unary_operator (NOT, QImode, operands); DONE;\")\n \n (define_insn \"*one_cmplqi2_1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,r\")\n \t(not:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")))]\n-  \"ix86_unary_operator_ok (NEG, QImode, operands)\"\n+  \"ix86_unary_operator_ok (NOT, QImode, operands)\"\n   \"@\n    not{b}\\\\t%0\n    not{l}\\\\t%k0\"\n@@ -5455,7 +5452,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm\")\n \t(not:QI (match_dup 1)))]\n-  \"ix86_unary_operator_ok (NEG, QImode, operands)\"\n+  \"ix86_unary_operator_ok (NOT, QImode, operands)\"\n   \"#\"\n   [(set_attr \"type\" \"alu1\")])\n "}]}