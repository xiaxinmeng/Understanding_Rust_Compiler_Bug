{"sha": "d84760c980076e1be72867dfcdc4cd1c92db2ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg0NzYwYzk4MDA3NmUxYmU3Mjg2N2RmY2RjNGNkMWM5MmRiMmZmNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-01-12T17:51:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-01-12T17:51:40Z"}, "message": "mn10300: Emit clr.\n\nFrom-SVN: r168722", "tree": {"sha": "0366b2c9b6d6e1f8f5da31171e2539e0cfa20a85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0366b2c9b6d6e1f8f5da31171e2539e0cfa20a85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d84760c980076e1be72867dfcdc4cd1c92db2ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84760c980076e1be72867dfcdc4cd1c92db2ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d84760c980076e1be72867dfcdc4cd1c92db2ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84760c980076e1be72867dfcdc4cd1c92db2ff5/comments", "author": null, "committer": null, "parents": [{"sha": "ec815d657b52efc88343bab229eb279a55696ad7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec815d657b52efc88343bab229eb279a55696ad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec815d657b52efc88343bab229eb279a55696ad7"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "8255b41231ab3d696ff1ff0e8a4490115785c2bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84760c980076e1be72867dfcdc4cd1c92db2ff5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84760c980076e1be72867dfcdc4cd1c92db2ff5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d84760c980076e1be72867dfcdc4cd1c92db2ff5", "patch": "@@ -1,5 +1,8 @@\n 2011-01-12  Richard Henderson  <rth@redhat.com>\n \n+\t* config/mn10300/mn10300.md (INT): New mode iterator.\n+\t(*mov<INT>_clr): New pattern, and peep2 to generate it.\n+\n \t* config/mn10300/mn10300.c (mn10300_option_override): Force enable\n \tflag_split_wide_types.\n "}, {"sha": "ecabaf950c9d41677e638849b8d2ac0906a38753", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84760c980076e1be72867dfcdc4cd1c92db2ff5/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84760c980076e1be72867dfcdc4cd1c92db2ff5/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=d84760c980076e1be72867dfcdc4cd1c92db2ff5", "patch": "@@ -68,8 +68,13 @@\n \t]\n \t(const_int 0))\n )\n+\n+(define_mode_iterator INT [QI HI SI])\n+\n \f\n+;; ----------------------------------------------------------------------\n ;; Pipeline description.\n+;; ----------------------------------------------------------------------\n \n ;; The AM33 only has a single pipeline.  It has five stages (fetch,\n ;; decode, execute, memory access, writeback) each of which normally\n@@ -1172,6 +1177,30 @@\n   [(set_attr \"timings\" \"11,11,11,11,11,11,22\")]\n )\n \n+;; If the flags register is not live, generate CLR instead of MOV 0.\n+;; For MN103, this is only legal for DATA_REGS; for AM33 this is legal\n+;; but not a win for ADDRESS_REGS.\n+(define_peephole2\n+  [(set (match_operand:INT 0 \"register_operand\" \"\") (const_int 0))]\n+  \"peep2_regno_dead_p (0, CC_REG)\n+   && (REGNO_DATA_P (REGNO (operands[0]), 1)\n+       || REGNO_EXTENDED_P (REGNO (operands[0]), 1))\"\n+  [(parallel [(set (match_dup 0) (const_int 0))\n+\t      (clobber (reg:CC CC_REG))])]\n+)\n+\n+(define_insn \"*mov<mode>_clr\"\n+  [(set (match_operand:INT 0 \"register_operand\" \"=D\")\n+\t(const_int 0))\n+   (clobber (reg:CC CC_REG))]\n+  \"\"\n+  \"clr %0\"\n+)\n+\f\n+;; ----------------------------------------------------------------------\n+;; ADD INSTRUCTIONS\n+;; ----------------------------------------------------------------------\n+\n (define_insn \"*mn10300_addsi3\"\n   [(set (match_operand:SI          0 \"register_operand\" \"=dx,a,a,dax,!*y,!dax\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0,0,0,0,dax\")"}]}