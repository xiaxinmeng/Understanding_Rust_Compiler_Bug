{"sha": "c45e5332cc03dc81591dfc409fdc224e4e1643c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1ZTUzMzJjYzAzZGM4MTU5MWRmYzQwOWZkYzIyNGU0ZTE2NDNjMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:59:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:59:53Z"}, "message": "[multiple changes]\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* a-witeio.adb: Minor code reorganization.\n\t* i-cstrea.ads: Add comment.\n\n2014-07-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c (NAME_MAX): Minor cleaup and comment\n\tclarifications.\n\nFrom-SVN: r212801", "tree": {"sha": "c3d124c2a5e2ba528889791ed31cd09ef593f7e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3d124c2a5e2ba528889791ed31cd09ef593f7e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c45e5332cc03dc81591dfc409fdc224e4e1643c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c45e5332cc03dc81591dfc409fdc224e4e1643c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c45e5332cc03dc81591dfc409fdc224e4e1643c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c45e5332cc03dc81591dfc409fdc224e4e1643c0/comments", "author": null, "committer": null, "parents": [{"sha": "adc1de25276100ea46ca23002c889f8b45fa22a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc1de25276100ea46ca23002c889f8b45fa22a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc1de25276100ea46ca23002c889f8b45fa22a0"}], "stats": {"total": 59, "additions": 44, "deletions": 15}, "files": [{"sha": "fc5a3bede2ffed51b6030b720e3c904cb5fdfa88", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c45e5332cc03dc81591dfc409fdc224e4e1643c0", "patch": "@@ -1,3 +1,13 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-witeio.adb: Minor code reorganization.\n+\t* i-cstrea.ads: Add comment.\n+\n+2014-07-18  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c (NAME_MAX): Minor cleaup and comment\n+\tclarifications.\n+\n 2014-07-18  Robert Dewar  <dewar@adacore.com>\n \n \t* g-memdum.adb, g-memdum.ads, exp_strm.adb: Minor reformatting."}, {"sha": "1f5e4622761f7805f861cdb4de144a911a0b6281", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=c45e5332cc03dc81591dfc409fdc224e4e1643c0", "patch": "@@ -1082,13 +1082,20 @@ package body Ada.Wide_Text_IO is\n       FIO.Check_Write_Status (AP (File));\n \n       for K in 1 .. Spacing loop\n+\n+         --  We use Put here (rather than Putc) so that we get the proper\n+         --  behavior on windows for output of Wide_String to the console.\n+\n          Put (File, Wide_Character'Val (LM));\n+\n          File.Line := File.Line + 1;\n \n-         if File.Page_Length /= 0\n-           and then File.Line > File.Page_Length\n-         then\n+         if File.Page_Length /= 0 and then File.Line > File.Page_Length then\n+\n+            --  Same situation as above, use Put instead of Putc\n+\n             Put (File, Wide_Character'Val (PM));\n+\n             File.Line := 1;\n             File.Page := File.Page + 1;\n          end if;\n@@ -1242,8 +1249,7 @@ package body Ada.Wide_Text_IO is\n          Putc (Character'Pos (C), File);\n       end Out_Char;\n \n-      R : int;\n-      pragma Unreferenced (R);\n+      Discard : int;\n \n    --  Start of processing for Put\n \n@@ -1252,7 +1258,7 @@ package body Ada.Wide_Text_IO is\n \n       if text_translation_required then\n          set_wide_text_mode (fileno (File.Stream));\n-         R := fputwc (Wide_Character'Pos (Item), File.Stream);\n+         Discard := fputwc (Wide_Character'Pos (Item), File.Stream);\n       else\n          WC_Out (Item, File.WC_Method);\n       end if;"}, {"sha": "020701ec62c4f99ad6f3c65e00662d7ebb762dad", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=c45e5332cc03dc81591dfc409fdc224e4e1643c0", "patch": "@@ -221,13 +221,18 @@ package Interfaces.C_Streams is\n    -- Control of Text/Binary Mode --\n    ---------------------------------\n \n+   --  Is the above section title good enough, given the new addition???\n+\n    --  If text_translation_required is true, then the following functions may\n    --  be used to dynamically switch a file from binary to text mode or vice\n    --  versa. These functions have no effect if text_translation_required is\n    --  false (i.e. in normal unix mode). Use fileno to get a stream handle.\n \n-   procedure set_binary_mode    (handle : int);\n-   procedure set_text_mode      (handle : int);\n+   procedure set_binary_mode (handle : int);\n+   procedure set_text_mode   (handle : int);\n+\n+   --  The following needs documentation ???\n+\n    procedure set_wide_text_mode (handle : int);\n \n    ----------------------------"}, {"sha": "7fef2455ecbc4bc35e7403ba99fffc8e0a22827f", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45e5332cc03dc81591dfc409fdc224e4e1643c0/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=c45e5332cc03dc81591dfc409fdc224e4e1643c0", "patch": "@@ -80,8 +80,11 @@ pragma Style_Checks (\"M32766\");\n \n /* Feature macro definitions */\n \n-/* Define _POSIX_SOURCE to get NAME_MAX, PATH_MAX */\n-#define _POSIX_SOURCE\n+/**\n+ ** Note: we deliberately do not define _POSIX_SOURCE / _POSIX_C_SOURCE\n+ ** unconditionally, as on many platforms these macros actually disable\n+ ** a number of non-POSIX but useful/required features.\n+ **/\n \n #if defined (__linux__) && !defined (_XOPEN_SOURCE)\n /* For Linux, define _XOPEN_SOURCE to get IOV_MAX */\n@@ -319,17 +322,22 @@ CND(IOV_MAX, \"Maximum writev iovcnt\")\n /* NAME_MAX is used to compute the allocation size for a struct dirent\n  * passed to readdir() / readdir_r(). However on some systems it is not\n  * defined, as it is technically a filesystem dependent property that\n- * we should retrieve through pathconf().\n+ * we should retrieve through pathconf(). In any case, we do not need a\n+ * precise value but only an upper limit.\n  */\n #ifndef NAME_MAX\n # ifdef MAXNAMELEN\n    /* Solaris has no NAME_MAX but defines MAXNAMELEN */\n #  define NAME_MAX MAXNAMELEN\n-# else\n-   /* PATH_MAX (maximum length of a full path name) is a safe last\n-    * chance fall back.\n-    */\n+# elif defined(PATH_MAX)\n+   /* PATH_MAX (maximum length of a full path name) is a safe fall back */\n #  define NAME_MAX PATH_MAX\n+# elif defined(FILENAME_MAX)\n+   /* Similarly FILENAME_MAX can provide a safe fall back */\n+#  define NAME_MAX FILENAME_MAX\n+# else\n+   /* Hardcode a reasonably large value as a last chance fallback */\n+#  define NAME_MAX 1024\n # endif\n #endif\n CND(NAME_MAX, \"Maximum file name length\")"}]}