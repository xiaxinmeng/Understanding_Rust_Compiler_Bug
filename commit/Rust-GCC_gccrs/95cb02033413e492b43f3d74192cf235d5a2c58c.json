{"sha": "95cb02033413e492b43f3d74192cf235d5a2c58c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjYjAyMDMzNDEzZTQ5MmI0M2YzZDc0MTkyY2YyMzVkNWEyYzU4Yw==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1998-10-20T03:01:10Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1998-10-20T03:01:10Z"}, "message": "c4x.md (repeat_block_top, [...]): Deleted.\n\n\t* config/c4x/c4x.md (repeat_block_top, repeat_block_end,\n \trepeat_block_filler): Deleted.\n\t(*ashlqi3_set, *ashrqi3_const_set, *ashrqi3_nonconst_clobber):\n \tCondition code not set if destination register from 'c' class.\n\t(*subbqi3_carry_clobber): Fix typo.\n\nFrom-SVN: r23195", "tree": {"sha": "a169d3c7ef2a733bc6861067cbaa14eacddcb54a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a169d3c7ef2a733bc6861067cbaa14eacddcb54a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95cb02033413e492b43f3d74192cf235d5a2c58c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cb02033413e492b43f3d74192cf235d5a2c58c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cb02033413e492b43f3d74192cf235d5a2c58c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cb02033413e492b43f3d74192cf235d5a2c58c/comments", "author": null, "committer": null, "parents": [{"sha": "c171c2878ddadedf507fad4ebccaa897d817ff5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c171c2878ddadedf507fad4ebccaa897d817ff5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c171c2878ddadedf507fad4ebccaa897d817ff5c"}], "stats": {"total": 73, "additions": 18, "deletions": 55}, "files": [{"sha": "8753149652fd7b8969c2638d8ed237423bcffea4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cb02033413e492b43f3d74192cf235d5a2c58c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cb02033413e492b43f3d74192cf235d5a2c58c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95cb02033413e492b43f3d74192cf235d5a2c58c", "patch": "@@ -1,3 +1,11 @@\n+Tue Oct 20 21:56:05 1998  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (repeat_block_top, repeat_block_end,\n+ \trepeat_block_filler): Deleted.\n+\t(*ashlqi3_set, *ashrqi3_const_set, *ashrqi3_nonconst_clobber):\n+ \tCondition code not set if destination register from 'c' class.\n+\t(*subbqi3_carry_clobber): Fix typo.\n+\n 1998-10-18 Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n \t* reorg.c (steal_delay_list_from_target) Check for insns that"}, {"sha": "58033f02c7a190fd23b4d59f59424a4c7454c61b", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 10, "deletions": 55, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cb02033413e492b43f3d74192cf235d5a2c58c/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cb02033413e492b43f3d74192cf235d5a2c58c/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=95cb02033413e492b43f3d74192cf235d5a2c58c", "patch": "@@ -1699,7 +1699,7 @@\n (define_insn \"*subqi3_carry_clobber\"\n   [(set (match_operand:QI 0 \"reg_operand\" \"=d,?d,d,d,c,?c,c,c\")\n         (minus:QI (match_operand:QI 1 \"src_operand\" \"rR,rS<>,0,g,rR,rS<>,0,g\")\n-                  (match_operand:QI 2 \"src_operand\" \"JR,rS<>,0,g,JR,rS<>,g,0\")))\n+                  (match_operand:QI 2 \"src_operand\" \"JR,rS<>,g,0,JR,rS<>,g,0\")))\n    (use (reg:CC_NOOV 21))\n    (clobber (reg:CC_NOOV 21))]\n   \"valid_operands (MINUS, operands, QImode)\"\n@@ -2353,21 +2353,18 @@\n (define_insn \"*ashlqi3_set\"\n   [(set (reg:CC 21)\n         (compare:CC\n-          (ashift:QI (match_operand:QI 1 \"src_operand\" \"rR,rS<>,0,rR,rS<>,0\")\n-                     (match_operand:QI 2 \"src_operand\" \"JR,rS<>,g,JR,rS<>,g\"))\n+          (ashift:QI (match_operand:QI 1 \"src_operand\" \"rR,rS<>,0\")\n+                     (match_operand:QI 2 \"src_operand\" \"JR,rS<>,g\"))\n           (const_int 0)))\n-   (set (match_operand:QI 0 \"reg_operand\" \"=d,?d,d,c,?c,c\")\n+   (set (match_operand:QI 0 \"reg_operand\" \"=d,?d,d\")\n         (ashift:QI (match_dup 1)\n                    (match_dup 2)))]\n   \"valid_operands (ASHIFT, operands, QImode)\"\n   \"@\n-   ash3\\\\t%2,%1,%0\n-   ash3\\\\t%2,%1,%0\n-   ash\\\\t%2,%0\n    ash3\\\\t%2,%1,%0\n    ash3\\\\t%2,%1,%0\n    ash\\\\t%2,%0\"\n-  [(set_attr \"type\" \"binarycc,binarycc,binarycc,binary,binary,binary\")])\n+  [(set_attr \"type\" \"binarycc,binarycc,binarycc\")])\n ; Default to int16 data attr.\n \n ; This is only used by lshrhi3_reg where we need a LSH insn that will\n@@ -2488,19 +2485,17 @@\n (define_insn \"*ashrqi3_const_set\"\n   [(set (reg:CC 21)\n         (compare:CC\n-          (ashiftrt:QI (match_operand:QI 1 \"src_operand\" \"0,0,r,r\")\n-                       (match_operand:QI 2 \"const_int_operand\" \"n,n,J,J\"))\n+          (ashiftrt:QI (match_operand:QI 1 \"src_operand\" \"0,r\")\n+                       (match_operand:QI 2 \"const_int_operand\" \"n,J\"))\n           (const_int 0)))\n-   (set (match_operand:QI 0 \"reg_operand\" \"=?d,?c,d,c\")\n+   (set (match_operand:QI 0 \"reg_operand\" \"=?d,d\")\n         (ashiftrt:QI (match_dup 1)\n                      (match_dup 2)))]\n   \"valid_operands (ASHIFTRT, operands, QImode)\"\n   \"@\n    ash\\\\t%n2,%0\n-   ash\\\\t%n2,%0\n-   ash3\\\\t%n2,%1,%0\n    ash3\\\\t%n2,%1,%0\"\n-  [(set_attr \"type\" \"binarycc,binarycc,binarycc,binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n (define_insn \"*ashrqi3_nonconst_clobber\"\n   [(set (match_operand:QI 0 \"reg_operand\" \"=d,?d,d,c,?c,c\")\n@@ -4520,46 +4515,6 @@\n   \"\n   [(set_attr \"type\" \"repeat_top\")])\n \n-; operand 0 is the loop depth\n-; operand 1 is the loop count\n-; operand 2 is the start label\n-; operand 3 is the end label\n-(define_expand \"repeat_block_top\"\n-  [(set (reg:QI 27) (match_operand:QI 1 \"src_operand\" \"\"))\n-   (use (match_operand:QI 0 \"immediate_operand\" \"\"))\n-   (parallel[(set (reg:QI 25) (label_ref (match_operand 2 \"\" \"\")))\n-             (set (reg:QI 26) (label_ref (match_operand 3 \"\" \"\")))])]\n-  \"\"\n-  \"if (CONSTANT_P (operands[1])\n-       && !const_operand (operands[1], QImode))\n-     operands[1] = force_const_mem (QImode, operands[1]);\"\n- )\n-\n-; operand 0 is the loop depth\n-(define_insn \"repeat_block_end\"\n-  [(set (pc)\n-        (if_then_else (ne (reg:QI 27) (const_int 0))\n-                      (label_ref (match_operand 1 \"\" \"\"))\n-                      (pc)))\n-   (use (match_operand:QI 0 \"immediate_operand\" \"\"))\n-   (use (reg:QI 25))\n-   (use (reg:QI 26))\n-   (set (reg:QI 27)\n-        (plus:QI (reg:QI 27)\n-                 (const_int -1)))]\n-  \"\"\n-  \"*\n-   return c4x_rptb_nop_p(insn) ? \\\"nop\\\" : \\\"\\\";\"\n-  [(set_attr \"type\" \"repeat\")])\n-\n-; to prevent labels being coalesced and to leave a space to sink insns\n-; out of a repeat block loop.\n-(define_insn \"repeat_block_filler\"\n-  [(unspec [(const_int 0)] 7)]\n-  \"\"\n-  \"\"\n-  [(set_attr \"type\" \"repeat\")])\n-\n \n (define_insn \"rptb_end\"\n   [(set (pc)\n@@ -4580,7 +4535,7 @@\n \n (define_expand \"decrement_and_branch_on_count\"\n   [(parallel [(set (pc)\n-                   (if_then_else (ge (match_operand:QI 0 \"rc_reg_operand\" \"v\")\n+                   (if_then_else (ge (match_operand:QI 0 \"rc_reg_operand\" \"\")\n                                      (const_int 0))\n                                  (label_ref (match_operand 1 \"\" \"\"))\n                                  (pc)))"}]}