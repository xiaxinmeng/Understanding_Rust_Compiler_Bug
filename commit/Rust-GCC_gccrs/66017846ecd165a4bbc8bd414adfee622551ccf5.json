{"sha": "66017846ecd165a4bbc8bd414adfee622551ccf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYwMTc4NDZlY2QxNjVhNGJiYzhiZDQxNGFkZmVlNjIyNTUxY2NmNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-22T22:19:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-22T22:19:01Z"}, "message": "gcc.c (driver_unknown_option_callback): Only permit and save unknown -Wno- options.\n\n\t* gcc.c (driver_unknown_option_callback): Only permit and save\n\tunknown -Wno- options.\n\t(driver_wrong_lang_callback): Save options directly instead of via\n\tdriver_unknown_option_callback.\n\nFrom-SVN: r171307", "tree": {"sha": "e7a92293cb8f4b6b6d4cc0cf3576affafacecb3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7a92293cb8f4b6b6d4cc0cf3576affafacecb3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66017846ecd165a4bbc8bd414adfee622551ccf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66017846ecd165a4bbc8bd414adfee622551ccf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66017846ecd165a4bbc8bd414adfee622551ccf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66017846ecd165a4bbc8bd414adfee622551ccf5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8b97ccd59010685e183b437b1f192e01e2809ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b97ccd59010685e183b437b1f192e01e2809ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8b97ccd59010685e183b437b1f192e01e2809ad"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "9503e8b822af63332e96fa28839447f231b26b26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66017846ecd165a4bbc8bd414adfee622551ccf5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66017846ecd165a4bbc8bd414adfee622551ccf5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66017846ecd165a4bbc8bd414adfee622551ccf5", "patch": "@@ -1,3 +1,10 @@\n+2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.c (driver_unknown_option_callback): Only permit and save\n+\tunknown -Wno- options.\n+\t(driver_wrong_lang_callback): Save options directly instead of via\n+\tdriver_unknown_option_callback.\n+\n 2011-03-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* combine.c (simplify_set): Try harder to find the best CC mode when"}, {"sha": "e6ddf41afd2fa0d68021b5f50dd3ecda8cabebc1", "filename": "gcc/gcc.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66017846ecd165a4bbc8bd414adfee622551ccf5/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66017846ecd165a4bbc8bd414adfee622551ccf5/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=66017846ecd165a4bbc8bd414adfee622551ccf5", "patch": "@@ -3080,16 +3080,24 @@ save_switch (const char *opt, size_t n_args, const char *const *args,\n }\n \n /* Handle an option DECODED that is unknown to the option-processing\n-   machinery, but may be known to specs.  */\n+   machinery.  */\n \n static bool\n driver_unknown_option_callback (const struct cl_decoded_option *decoded)\n {\n-  save_switch (decoded->canonical_option[0],\n-\t       decoded->canonical_option_num_elements - 1,\n-\t       &decoded->canonical_option[1], false);\n-\n-  return false;\n+  const char *opt = decoded->arg;\n+  if (opt[1] == 'W' && opt[2] == 'n' && opt[3] == 'o' && opt[4] == '-'\n+      && !(decoded->errors & CL_ERR_NEGATIVE))\n+    {\n+      /* Leave unknown -Wno-* options for the compiler proper, to be\n+\t diagnosed only if there are warnings.  */\n+      save_switch (decoded->canonical_option[0],\n+\t\t   decoded->canonical_option_num_elements - 1,\n+\t\t   &decoded->canonical_option[1], false);\n+      return false;\n+    }\n+  else\n+    return true;\n }\n \n /* Handle an option DECODED that is not marked as CL_DRIVER.\n@@ -3110,7 +3118,9 @@ driver_wrong_lang_callback (const struct cl_decoded_option *decoded,\n     error (\"unrecognized command line option %qs\",\n \t   decoded->orig_option_with_args_text);\n   else\n-    driver_unknown_option_callback (decoded);\n+    save_switch (decoded->canonical_option[0],\n+\t\t decoded->canonical_option_num_elements - 1,\n+\t\t &decoded->canonical_option[1], false);\n }\n \n /* Note that an option (index OPT_INDEX, argument ARG, value VALUE)"}]}