{"sha": "7c48ea6910b815e35b5f927d993564476ddaee85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M0OGVhNjkxMGI4MTVlMzViNWY5MjdkOTkzNTY0NDc2ZGRhZWU4NQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-01-25T06:48:52Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-01-25T06:48:52Z"}, "message": "Do not use a data ref with indices invalid in the loop of the close_phi.\n\n2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (dr_indices_valid_in_loop): New.\n\t(close_phi_written_to_memory): Call for_each_index with\n\tdr_indices_valid_in_loop.\n\n\t* gfortran.dg/graphite/id-24.f: New.\n\t* gfortran.dg/graphite/id-25.f: New.\n\nFrom-SVN: r169220", "tree": {"sha": "45762997365834e0a76445cabd4f640ee70b81b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45762997365834e0a76445cabd4f640ee70b81b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c48ea6910b815e35b5f927d993564476ddaee85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c48ea6910b815e35b5f927d993564476ddaee85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c48ea6910b815e35b5f927d993564476ddaee85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c48ea6910b815e35b5f927d993564476ddaee85/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38013f25bc66d8595de8359dd30a0a0e3e0713af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38013f25bc66d8595de8359dd30a0a0e3e0713af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38013f25bc66d8595de8359dd30a0a0e3e0713af"}], "stats": {"total": 103, "additions": 95, "deletions": 8}, "files": [{"sha": "25e2bc4e30e0ecc09b9d9cb295d9dfa23ba29954", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c48ea6910b815e35b5f927d993564476ddaee85", "patch": "@@ -1,3 +1,9 @@\n+2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (dr_indices_valid_in_loop): New.\n+\t(close_phi_written_to_memory): Call for_each_index with\n+\tdr_indices_valid_in_loop.\n+\n 2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (new_pbb_from_pbb): Only copy PBB_DOMAIN"}, {"sha": "7fc8402763b3c0ad80e5899fdcb9d0492440e501", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=7c48ea6910b815e35b5f927d993564476ddaee85", "patch": "@@ -1,3 +1,12 @@\n+2011-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (dr_indices_valid_in_loop): New.\n+\t(close_phi_written_to_memory): Call for_each_index with\n+\tdr_indices_valid_in_loop.\n+\n+\t* gfortran.dg/graphite/id-24.f: New.\n+\t* gfortran.dg/graphite/id-25.f: New.\n+\n 2011-01-19  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (new_pbb_from_pbb): Only copy PBB_DOMAIN"}, {"sha": "11a73b3f083b8feb19b39e7fe4a4fe2082809f3a", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 56, "deletions": 8, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=7c48ea6910b815e35b5f927d993564476ddaee85", "patch": "@@ -2999,6 +2999,35 @@ remove_phi (gimple phi)\n   remove_phi_node (&gsi, false);\n }\n \n+/* Helper function for for_each_index.  For each INDEX of the data\n+   reference REF, returns true when its indices are valid in the loop\n+   nest LOOP passed in as DATA.  */\n+\n+static bool\n+dr_indices_valid_in_loop (tree ref ATTRIBUTE_UNUSED, tree *index, void *data)\n+{\n+  loop_p loop;\n+  basic_block header, def_bb;\n+  gimple stmt;\n+\n+  if (TREE_CODE (*index) != SSA_NAME)\n+    return true;\n+\n+  loop = *((loop_p *) data);\n+  header = loop->header;\n+  stmt = SSA_NAME_DEF_STMT (*index);\n+\n+  if (!stmt)\n+    return true;\n+\n+  def_bb = gimple_bb (stmt);\n+\n+  if (!def_bb)\n+    return true;\n+\n+  return dominated_by_p (CDI_DOMINATORS, header, def_bb);\n+}\n+\n /* When the result of a CLOSE_PHI is written to a memory location,\n    return a pointer to that memory reference, otherwise return\n    NULL_TREE.  */\n@@ -3007,21 +3036,40 @@ static tree\n close_phi_written_to_memory (gimple close_phi)\n {\n   imm_use_iterator imm_iter;\n-  tree res, def = gimple_phi_result (close_phi);\n   use_operand_p use_p;\n   gimple stmt;\n+  tree res, def = gimple_phi_result (close_phi);\n \n   FOR_EACH_IMM_USE_FAST (use_p, imm_iter, def)\n     if ((stmt = USE_STMT (use_p))\n \t&& gimple_code (stmt) == GIMPLE_ASSIGN\n-\t&& (res = gimple_assign_lhs (stmt))\n-\t&& (TREE_CODE (res) == ARRAY_REF\n-\t    || TREE_CODE (res) == MEM_REF\n-\t    || TREE_CODE (res) == VAR_DECL\n-\t    || TREE_CODE (res) == PARM_DECL\n-\t    || TREE_CODE (res) == RESULT_DECL))\n-      return res;\n+\t&& (res = gimple_assign_lhs (stmt)))\n+      {\n+\tswitch (TREE_CODE (res))\n+\t  {\n+\t  case VAR_DECL:\n+\t  case PARM_DECL:\n+\t  case RESULT_DECL:\n+\t    return res;\n+\n+\t  case ARRAY_REF:\n+\t  case MEM_REF:\n+\t    {\n+\t      tree arg = gimple_phi_arg_def (close_phi, 0);\n+\t      loop_p nest = loop_containing_stmt (SSA_NAME_DEF_STMT (arg));\n+\n+\t      /* FIXME: this restriction is for id-{24,25}.f and\n+\t\t could be handled by duplicating the computation of\n+\t\t array indices before the loop of the close_phi.  */\n+\t      if (for_each_index (&res, dr_indices_valid_in_loop, &nest))\n+\t\treturn res;\n+\t    }\n+\t    /* Fallthru.  */\n \n+\t  default:\n+\t    continue;\n+\t  }\n+      }\n   return NULL_TREE;\n }\n "}, {"sha": "1b26d4a4aacff538eb38691e64f352611334373e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c48ea6910b815e35b5f927d993564476ddaee85", "patch": "@@ -1,3 +1,8 @@\n+2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* gfortran.dg/graphite/id-24.f: New.\n+\t* gfortran.dg/graphite/id-25.f: New.\n+\n 2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* gfortran.dg/graphite/id-23.f: New."}, {"sha": "20c40ee06e28c08212655882f20b83ed1900f98e", "filename": "gcc/testsuite/gfortran.dg/graphite/id-24.f", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-24.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-24.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-24.f?ref=7c48ea6910b815e35b5f927d993564476ddaee85", "patch": "@@ -0,0 +1,9 @@\n+      SUBROUTINE TFTRAB(A,NA)\n+      DIMENSION A(NA,NA)\n+      DO 160 K=1,NA\n+         DUM = DUM + A(K,I)\n+ 160  CONTINUE\n+      DO 180 I=1,NA\n+         A(I,J) = DUM\n+ 180  CONTINUE\n+      END"}, {"sha": "642ed6de7f5cd64ef1f0dfa0cf4b0e6dc5c0bab1", "filename": "gcc/testsuite/gfortran.dg/graphite/id-25.f", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-25.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c48ea6910b815e35b5f927d993564476ddaee85/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-25.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-25.f?ref=7c48ea6910b815e35b5f927d993564476ddaee85", "patch": "@@ -0,0 +1,10 @@\n+      SUBROUTINE TFTRAB(NA,NC,D,WRK)\n+      DIMENSION D(NA,NC), WRK(NA)\n+      DO 160 K=1,NA\n+         DUM = DUM + D(K,J)\n+ 160  CONTINUE\n+      WRK(I) = DUM\n+      DO 180 I=1,NA\n+         D(I,J) = WRK(I)\n+ 180  CONTINUE\n+      END"}]}