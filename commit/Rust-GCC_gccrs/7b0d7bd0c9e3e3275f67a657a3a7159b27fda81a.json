{"sha": "7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IwZDdiZDBjOWUzZTMyNzVmNjdhNjU3YTNhNzE1OWIyN2ZkYTgxYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-12T22:43:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-12T22:43:28Z"}, "message": "(refers_to_mem_p): Use rtx_equal_p to see if bases are equal.\n\nFrom-SVN: r3719", "tree": {"sha": "c90720a29d867b55c7c283292265ecc2f61066b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c90720a29d867b55c7c283292265ecc2f61066b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a/comments", "author": null, "committer": null, "parents": [{"sha": "6500fb4361724b16e65e6fd552256c4090ead3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6500fb4361724b16e65e6fd552256c4090ead3ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6500fb4361724b16e65e6fd552256c4090ead3ac"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6371998d424c58890d630670a476b221afe89b73", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=7b0d7bd0c9e3e3275f67a657a3a7159b27fda81a", "patch": "@@ -2307,7 +2307,7 @@ refers_to_mem_p (x, base, start, end)\n       /* refers_to_mem_p is never called with varying addresses. \n \t If the base addresses are not equal, there is no chance\n \t of the memory addresses conflicting.  */\n-      if (mybase != base)\n+      if (! rtx_equal_p (mybase, base))\n \treturn 0;\n \n       return myend > start && mystart < end;"}]}