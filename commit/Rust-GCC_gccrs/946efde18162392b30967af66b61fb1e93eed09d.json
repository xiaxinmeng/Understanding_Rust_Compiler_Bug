{"sha": "946efde18162392b30967af66b61fb1e93eed09d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ2ZWZkZTE4MTYyMzkyYjMwOTY3YWY2NmI2MWZiMWU5M2VlZDA5ZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-01-31T04:53:47Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-01-31T04:53:47Z"}, "message": "config.h.in: Rebuilt.\n\n\t* include/config.h.in: Rebuilt.\n\t* acconfig.h (HAVE_ICONV): Define.\n\t* configure: Rebuilt.\n\t* configure.in: Check for `iconv' function.\n\t* gnu/gcj/convert/BytesToUnicode.java (getDecoder): Try iconv if\n\tno specific encoder exists.\n\t* gnu/gcj/convert/UnicodeToBytes.java (getEncoder): Try iconv if\n\tno specific encoder exists.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (convert_source_files): Mention Input_iconv.java and\n\tOutput_iconv.java.\n\t(nat_source_files): Added natIconv.cc.\n\t* gnu/gcj/convert/natIconv.cc: New file.\n\t* gnu/gcj/convert/Input_iconv.java: New file.\n\t* gnu/gcj/convert/Output_iconv.java: New file.\n\nFrom-SVN: r31708", "tree": {"sha": "549c27b3dd3bfd05f06ae70ae2755570ba35eb91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/549c27b3dd3bfd05f06ae70ae2755570ba35eb91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/946efde18162392b30967af66b61fb1e93eed09d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946efde18162392b30967af66b61fb1e93eed09d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/946efde18162392b30967af66b61fb1e93eed09d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946efde18162392b30967af66b61fb1e93eed09d/comments", "author": null, "committer": null, "parents": [{"sha": "28531dd03ee0eb214fe946e6500964c7d7f4d021", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28531dd03ee0eb214fe946e6500964c7d7f4d021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28531dd03ee0eb214fe946e6500964c7d7f4d021"}], "stats": {"total": 350, "additions": 295, "deletions": 55}, "files": [{"sha": "1484947d8672ab7d23262a6978a060ced757b610", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -1,3 +1,21 @@\n+2000-01-30  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* include/config.h.in: Rebuilt.\n+\t* acconfig.h (HAVE_ICONV): Define.\n+\t* configure: Rebuilt.\n+\t* configure.in: Check for `iconv' function.\n+\t* gnu/gcj/convert/BytesToUnicode.java (getDecoder): Try iconv if\n+\tno specific encoder exists.\n+\t* gnu/gcj/convert/UnicodeToBytes.java (getEncoder): Try iconv if\n+\tno specific encoder exists.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (convert_source_files): Mention Input_iconv.java and\n+\tOutput_iconv.java.\n+\t(nat_source_files): Added natIconv.cc.\n+\t* gnu/gcj/convert/natIconv.cc: New file.\n+\t* gnu/gcj/convert/Input_iconv.java: New file.\n+\t* gnu/gcj/convert/Output_iconv.java: New file.\n+\n 2000-01-28  Tom Tromey  <tromey@cygnus.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "0c02d9e32b71ff1082141af0abafdb9bf7ad8296", "filename": "libjava/Makefile.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -447,11 +447,13 @@ gnu/gcj/convert/Input_EUCJIS.java \\\n gnu/gcj/convert/Input_JavaSrc.java \\\n gnu/gcj/convert/Input_SJIS.java \\\n gnu/gcj/convert/Input_UTF8.java\t\\\n+gnu/gcj/convert/Input_iconv.java \\\n gnu/gcj/convert/Output_8859_1.java \\\n gnu/gcj/convert/Output_EUCJIS.java \\\n gnu/gcj/convert/Output_JavaSrc.java \\\n gnu/gcj/convert/Output_SJIS.java \\\n gnu/gcj/convert/Output_UTF8.java \\\n+gnu/gcj/convert/Output_iconv.java \\\n gnu/gcj/convert/UnicodeToBytes.java\n \n ## List of all .java files for which the .h file is maintained by\n@@ -787,6 +789,7 @@ nat_source_files = \\\n gnu/gcj/convert/JIS0208_to_Unicode.cc \\\n gnu/gcj/convert/JIS0212_to_Unicode.cc \\\n gnu/gcj/convert/Unicode_to_JIS.cc \\\n+gnu/gcj/convert/natIconv.cc \\\n gnu/gcj/convert/natInput_EUCJIS.cc \\\n gnu/gcj/convert/natInput_SJIS.cc \\\n gnu/gcj/convert/natOutput_EUCJIS.cc \\"}, {"sha": "c53bb53d42689b7fdc6902d33fb9f6d9980e1f84", "filename": "libjava/Makefile.in", "status": "modified", "additions": 19, "deletions": 46, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -267,11 +267,13 @@ gnu/gcj/convert/Input_EUCJIS.java \\\n gnu/gcj/convert/Input_JavaSrc.java \\\n gnu/gcj/convert/Input_SJIS.java \\\n gnu/gcj/convert/Input_UTF8.java\t\\\n+gnu/gcj/convert/Input_iconv.java \\\n gnu/gcj/convert/Output_8859_1.java \\\n gnu/gcj/convert/Output_EUCJIS.java \\\n gnu/gcj/convert/Output_JavaSrc.java \\\n gnu/gcj/convert/Output_SJIS.java \\\n gnu/gcj/convert/Output_UTF8.java \\\n+gnu/gcj/convert/Output_iconv.java \\\n gnu/gcj/convert/UnicodeToBytes.java\n \n \n@@ -601,6 +603,7 @@ nat_source_files = \\\n gnu/gcj/convert/JIS0208_to_Unicode.cc \\\n gnu/gcj/convert/JIS0212_to_Unicode.cc \\\n gnu/gcj/convert/Unicode_to_JIS.cc \\\n+gnu/gcj/convert/natIconv.cc \\\n gnu/gcj/convert/natInput_EUCJIS.cc \\\n gnu/gcj/convert/natInput_SJIS.cc \\\n gnu/gcj/convert/natOutput_EUCJIS.cc \\\n@@ -725,8 +728,7 @@ LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n DATA =  $(data_DATA) $(toolexeclib_DATA)\n \n DIST_COMMON =  README COPYING.LIB ChangeLog Makefile.am Makefile.in NEWS \\\n-THANKS acconfig.h acinclude.m4 aclocal.m4 configure configure.in \\\n-include/config.h.in include/stamp-h.in libgcj.spec.in\n+THANKS acinclude.m4 aclocal.m4 configure configure.in libgcj.spec.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n@@ -742,10 +744,12 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/convert/Input_EUCJIS.P \\\n .deps/gnu/gcj/convert/Input_JavaSrc.P \\\n .deps/gnu/gcj/convert/Input_SJIS.P .deps/gnu/gcj/convert/Input_UTF8.P \\\n+.deps/gnu/gcj/convert/Input_iconv.P \\\n .deps/gnu/gcj/convert/Output_8859_1.P \\\n .deps/gnu/gcj/convert/Output_EUCJIS.P \\\n .deps/gnu/gcj/convert/Output_JavaSrc.P \\\n .deps/gnu/gcj/convert/Output_SJIS.P .deps/gnu/gcj/convert/Output_UTF8.P \\\n+.deps/gnu/gcj/convert/Output_iconv.P \\\n .deps/gnu/gcj/convert/UnicodeToBytes.P \\\n .deps/gnu/gcj/protocol/file/Connection.P \\\n .deps/gnu/gcj/protocol/file/Handler.P \\\n@@ -949,34 +953,6 @@ config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n $(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)\n \tcd $(srcdir) && $(AUTOCONF)\n-\n-include/config.h: include/stamp-h\n-\t@if test ! -f $@; then \\\n-\t\trm -f include/stamp-h; \\\n-\t\t$(MAKE) include/stamp-h; \\\n-\telse :; fi\n-include/stamp-h: $(srcdir)/include/config.h.in $(top_builddir)/config.status\n-\tcd $(top_builddir) \\\n-\t  && CONFIG_FILES= CONFIG_HEADERS=include/config.h \\\n-\t     $(SHELL) ./config.status\n-\t@echo timestamp > include/stamp-h 2> /dev/null\n-$(srcdir)/include/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/include/stamp-h.in\n-\t@if test ! -f $@; then \\\n-\t\trm -f $(srcdir)/include/stamp-h.in; \\\n-\t\t$(MAKE) $(srcdir)/include/stamp-h.in; \\\n-\telse :; fi\n-$(srcdir)/include/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n-\tcd $(top_srcdir) && $(AUTOHEADER)\n-\t@echo timestamp > $(srcdir)/include/stamp-h.in 2> /dev/null\n-\n-mostlyclean-hdr:\n-\n-clean-hdr:\n-\n-distclean-hdr:\n-\t-rm -f include/config.h\n-\n-maintainer-clean-hdr:\n libgcj.spec: $(top_builddir)/config.status libgcj.spec.in\n \tcd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status\n \n@@ -1415,33 +1391,31 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-mostlyclean-am:  mostlyclean-hdr mostlyclean-toolexeclibLIBRARIES \\\n-\t\tmostlyclean-compile mostlyclean-libtool \\\n-\t\tmostlyclean-toolexeclibLTLIBRARIES \\\n+mostlyclean-am:  mostlyclean-toolexeclibLIBRARIES mostlyclean-compile \\\n+\t\tmostlyclean-libtool mostlyclean-toolexeclibLTLIBRARIES \\\n \t\tmostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \\\n \t\tmostlyclean-tags mostlyclean-depend mostlyclean-generic\n \n mostlyclean: mostlyclean-recursive\n \n-clean-am:  clean-hdr clean-toolexeclibLIBRARIES clean-compile \\\n-\t\tclean-libtool clean-toolexeclibLTLIBRARIES \\\n-\t\tclean-binPROGRAMS clean-noinstPROGRAMS clean-tags \\\n-\t\tclean-depend clean-generic mostlyclean-am clean-local\n+clean-am:  clean-toolexeclibLIBRARIES clean-compile clean-libtool \\\n+\t\tclean-toolexeclibLTLIBRARIES clean-binPROGRAMS \\\n+\t\tclean-noinstPROGRAMS clean-tags clean-depend \\\n+\t\tclean-generic mostlyclean-am clean-local\n \n clean: clean-recursive\n \n-distclean-am:  distclean-hdr distclean-toolexeclibLIBRARIES \\\n-\t\tdistclean-compile distclean-libtool \\\n-\t\tdistclean-toolexeclibLTLIBRARIES distclean-binPROGRAMS \\\n-\t\tdistclean-noinstPROGRAMS distclean-tags \\\n-\t\tdistclean-depend distclean-generic clean-am\n+distclean-am:  distclean-toolexeclibLIBRARIES distclean-compile \\\n+\t\tdistclean-libtool distclean-toolexeclibLTLIBRARIES \\\n+\t\tdistclean-binPROGRAMS distclean-noinstPROGRAMS \\\n+\t\tdistclean-tags distclean-depend distclean-generic \\\n+\t\tclean-am\n \t-rm -f libtool\n \n distclean: distclean-recursive\n \t-rm -f config.status\n \n-maintainer-clean-am:  maintainer-clean-hdr \\\n-\t\tmaintainer-clean-toolexeclibLIBRARIES \\\n+maintainer-clean-am:  maintainer-clean-toolexeclibLIBRARIES \\\n \t\tmaintainer-clean-compile maintainer-clean-libtool \\\n \t\tmaintainer-clean-toolexeclibLTLIBRARIES \\\n \t\tmaintainer-clean-binPROGRAMS \\\n@@ -1454,8 +1428,7 @@ maintainer-clean-am:  maintainer-clean-hdr \\\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f config.status\n \n-.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n-mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n+.PHONY: mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n clean-toolexeclibLIBRARIES maintainer-clean-toolexeclibLIBRARIES \\\n uninstall-toolexeclibLIBRARIES install-toolexeclibLIBRARIES \\\n mostlyclean-compile distclean-compile clean-compile \\"}, {"sha": "a3a2ea22a2a55bb1f0662d692c93b6e3cb8b88b1", "filename": "libjava/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Facconfig.h?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -134,3 +134,6 @@\n \n /* Define if g++ has a bug preventing us from inlining math routines.  */\n #undef __NO_MATH_INLINES\n+\n+/* Define if you have working iconv() function.  */\n+#undef HAVE_ICONV"}, {"sha": "86d0c123c602d147b2734cbbf7461866c8cbbf79", "filename": "libjava/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -2741,7 +2741,7 @@ else\n fi\n done\n \n-   for ac_func in access stat mkdir rename rmdir unlink realpath\n+   for ac_func in access stat mkdir rename rmdir unlink realpath iconv\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n echo \"configure:2748: checking for $ac_func\" >&5"}, {"sha": "fb52c43a2a612b7c60675ccb4bcbe0a5c13d5e77", "filename": "libjava/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -372,7 +372,7 @@ if test -n \"${with_cross_host}\"; then\n else\n    AC_CHECK_FUNCS(strerror ioctl select fstat open fsync sleep)\n    AC_CHECK_FUNCS(gmtime_r localtime_r readdir_r getpwuid_r getcwd)\n-   AC_CHECK_FUNCS(access stat mkdir rename rmdir unlink realpath)\n+   AC_CHECK_FUNCS(access stat mkdir rename rmdir unlink realpath iconv)\n    AC_CHECK_FUNCS(inet_aton inet_addr, break)\n    AC_CHECK_FUNCS(inet_pton uname inet_ntoa)\n    AC_CHECK_FUNCS(backtrace fork execvp pipe)"}, {"sha": "1d96409f372beaa8451f3495c3c8745dd15b33a6", "filename": "libjava/gnu/gcj/convert/BytesToUnicode.java", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FBytesToUnicode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FBytesToUnicode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FBytesToUnicode.java?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Red Hat, Inc.\n+/* Copyright (C) 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -69,8 +69,15 @@ public static BytesToUnicode getDecoder (String encoding)\n       } \n     catch (Throwable ex) \n       { \n-\tthrow new java.io.UnsupportedEncodingException(encoding\n-\t\t\t\t\t\t       + \" (\" + ex + ')');\n+\ttry\n+\t  {\n+\t    return new Input_iconv (encoding);\n+\t  }\n+\tcatch (Throwable _)\n+\t  {\n+\t    throw new java.io.UnsupportedEncodingException(encoding\n+\t\t\t\t\t\t\t   + \" (\" + ex + ')');\n+\t  }\n       }\n   }\n "}, {"sha": "7b5fb03a54bf605e07e4a39875b6bd3c8b1eba2a", "filename": "libjava/gnu/gcj/convert/Input_iconv.java", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_iconv.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_iconv.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_iconv.java?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -0,0 +1,42 @@\n+// Input_iconv.java -- Java side of iconv() reader.\n+\n+/* Copyright (C) 2000  Red Hat, Inc.\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.convert;\n+import gnu.gcj.RawData;\n+import java.io.UnsupportedEncodingException;\n+\n+/**\n+ * Convert bytes in some iconv-supported encoding to Unicode.\n+ * @author Tom Tromey <tromey@redhat.com>\n+ * @date January 30, 2000\n+ */\n+\n+public class Input_iconv extends BytesToUnicode\n+{\n+  public Input_iconv (String encoding) throws UnsupportedEncodingException\n+  {\n+    this.encoding = encoding;\n+    this.handle = null;\n+    init (encoding);\n+  }\n+\n+  public String getName() { return encoding; }\n+\n+  public native void finalize ();\n+  private native void init (String encoding)\n+    throws UnsupportedEncodingException;\n+  public native int read (char[] outbuffer, int outpos, int count);\n+\n+  // The encoding we're using.\n+  private String encoding;\n+\n+  // The iconv handle.\n+  private RawData handle;\n+}"}, {"sha": "386028aee111c38b0c07eb363d3e83123fc1b17f", "filename": "libjava/gnu/gcj/convert/Output_iconv.java", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_iconv.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_iconv.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_iconv.java?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -0,0 +1,42 @@\n+// Output_iconv.java -- Java side of iconv() writer.\n+\n+/* Copyright (C) 2000  Red Hat, Inc.\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.convert;\n+import gnu.gcj.RawData;\n+import java.io.UnsupportedEncodingException;\n+\n+/**\n+ * Convert Unicode to bytes in some iconv-supported encoding.\n+ * @author Tom Tromey <tromey@redhat.com>\n+ * @date January 30, 2000\n+ */\n+\n+public class Output_iconv extends UnicodeToBytes\n+{\n+  public Output_iconv (String encoding) throws UnsupportedEncodingException\n+  {\n+    this.encoding = encoding;\n+    this.handle = null;\n+    init (encoding);\n+  }\n+\n+  public String getName() { return encoding; }\n+\n+  public native void finalize ();\n+  private native void init (String encoding)\n+    throws UnsupportedEncodingException;\n+  public native int write (char[] inbuffer, int inpos, int count);\n+\n+  // The encoding we're using.\n+  private String encoding;\n+\n+  // The iconv handle.\n+  private RawData handle;\n+}"}, {"sha": "b91a8cc8489d3df5a602ed1b11ce48eaec532749", "filename": "libjava/gnu/gcj/convert/UnicodeToBytes.java", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Red Hat, Inc.\n+/* Copyright (C) 1999, 2000  Red Hat, Inc.\n \n    This file is part of libgcj.\n \n@@ -67,8 +67,16 @@ public static UnicodeToBytes getEncoder (String encoding)\n       } \n     catch (Throwable ex) \n       { \n-\tthrow new java.io.UnsupportedEncodingException(encoding + \" (\"\n-\t\t\t\t\t\t       + ex + ')');\n+\ttry\n+\t  {\n+\t    return new Output_iconv (encoding);\n+\t  }\n+\tcatch (Throwable _)\n+\t  {\n+\t    // Put the original exception in the throwable.\n+\t    throw new java.io.UnsupportedEncodingException(encoding + \" (\"\n+\t\t\t\t\t\t\t   + ex + ')');\n+\t  }\n       }\n   }\n \n@@ -105,5 +113,4 @@ public int write (String str, int inpos, int inlength, char[] work)\n     str.getChars(inpos, srcEnd, work, 0);\n     return write(work, inpos, inlength);\n   }\n-\n }"}, {"sha": "129db7ecf0530e09d9567b6dad20ca4134678679", "filename": "libjava/gnu/gcj/convert/natIconv.cc", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -0,0 +1,142 @@\n+// Input_iconv.java -- Java side of iconv() reader.\n+\n+/* Copyright (C) 2000  Red Hat, Inc.\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+/* Author: Tom Tromey <tromey@redhat.com>.  */\n+\n+#include <config.h>\n+\n+#include <gcj/cni.h>\n+#include <jvm.h>\n+\n+#include <gnu/gcj/convert/Input_iconv.h>\n+#include <gnu/gcj/convert/Output_iconv.h>\n+#include <java/io/UnsupportedEncodingException.h>\n+\n+#ifdef HAVE_ICONV\n+#include <iconv.h>\n+#endif\n+\n+void\n+gnu::gcj::convert::Input_iconv::init (jstring encoding)\n+{\n+#ifdef HAVE_ICONV\n+  jsize len = _Jv_GetStringUTFLength (encoding);\n+  char buffer[len];\n+  _Jv_GetStringUTFRegion (encoding, 0, len, buffer);\n+\n+  iconv_t h = iconv_open (\"UCS-2\", buffer);\n+  if (h == (iconv_t) -1)\n+    JvThrow (new java::io::UnsupportedEncodingException);\n+\n+  JvAssert (h != NULL);\n+  handle = reinterpret_cast<gnu::gcj::RawData *> (h);\n+#else /* HAVE_ICONV */\n+  // If no iconv, just throw an exception.\n+  JvThrow (new java::io::UnsupportedEncodingException);\n+#endif /* HAVE_ICONV */\n+}\n+\n+void\n+gnu::gcj::convert::Input_iconv::finalize (void)\n+{\n+#ifdef HAVE_ICONV\n+  if (handle == NULL)\n+    {\n+      iconv_close ((iconv_t) handle);\n+      handle = NULL;\n+    }\n+#endif /* HAVE_ICONV */\n+}\n+\n+jint\n+gnu::gcj::convert::Input_iconv::read (jcharArray outbuffer,\n+\t\t\t\t      jint outpos, jint count)\n+{\n+#ifdef HAVE_ICONV\n+  jint origpos = outpos;\n+\n+  jbyte *bytes = elements (inbuffer);\n+  jchar *out = elements (outbuffer);\n+  size_t inavail = inlength - inpos;\n+  size_t old_in = inavail;\n+  size_t outavail = count;\n+  size_t old_out = outavail;\n+\n+  size_t r = iconv ((iconv_t) handle,\n+\t\t    &bytes[inpos], &inavail,\n+\t\t    &out[outpos], &outavail);\n+  // FIXME: what if R==-1?\n+\n+  inpos += old_in - inavail;\n+  return old_out - outavail;\n+#else /* HAVE_ICONV */\n+  return -1;\n+#endif /* HAVE_ICONV */\n+}\n+\n+void\n+gnu::gcj::convert::Output_iconv::init (jstring encoding)\n+{\n+#ifdef HAVE_ICONV\n+  jsize len = _Jv_GetStringUTFLength (encoding);\n+  char buffer[len];\n+  _Jv_GetStringUTFRegion (encoding, 0, len, buffer);\n+\n+  iconv_t h = iconv_open (buffer, \"UCS-2\");\n+  if (h == (iconv_t) -1)\n+    JvThrow (new java::io::UnsupportedEncodingException);\n+\n+  JvAssert (h != NULL);\n+  handle = reinterpret_cast<gnu::gcj::RawData *> (h);\n+#else /* HAVE_ICONV */\n+  // If no iconv, just throw an exception.\n+  JvThrow (new java::io::UnsupportedEncodingException);\n+#endif /* HAVE_ICONV */\n+}\n+\n+void\n+gnu::gcj::convert::Output_iconv::finalize (void)\n+{\n+#ifdef HAVE_ICONV\n+  if (handle == NULL)\n+    {\n+      iconv_close ((iconv_t) handle);\n+      handle = NULL;\n+    }\n+#endif /* HAVE_ICONV */\n+}\n+\n+jint\n+gnu::gcj::convert::Output_iconv::write (jcharArray inbuffer,\n+\t\t\t\t\tjint inpos, jint count)\n+{\n+#ifdef HAVE_ICONV\n+  jint origpos = outpos;\n+\n+  jchar *chars = elements (inbuffer);\n+  jbyte *out = elements (buf);\n+\n+  size_t inavail = count;\n+  size_t old_in = count;\n+\n+  size_t outavail = buf->length - count;\n+  size_t old_out = outavail;\n+\n+  size_t r = iconv ((iconv_t) handle,\n+\t\t    &chars[inpos], &inavail,\n+\t\t    &out[count], &outavail);\n+  // FIXME: what if R==-1?\n+\n+  count += old_out - outavail;\n+  return old_in - inavail;\n+#else /* HAVE_ICONV */\n+  return -1;\n+#endif /* HAVE_ICONV */\n+}"}, {"sha": "42740c4a17e63d1394b586b187123c3da8723304", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946efde18162392b30967af66b61fb1e93eed09d/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=946efde18162392b30967af66b61fb1e93eed09d", "patch": "@@ -194,6 +194,9 @@\n /* Define if you have the gmtime_r function.  */\n #undef HAVE_GMTIME_R\n \n+/* Define if you have the iconv function.  */\n+#undef HAVE_ICONV\n+\n /* Define if you have the inet_addr function.  */\n #undef HAVE_INET_ADDR\n "}]}