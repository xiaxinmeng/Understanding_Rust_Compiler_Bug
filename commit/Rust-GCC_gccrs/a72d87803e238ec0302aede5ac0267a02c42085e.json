{"sha": "a72d87803e238ec0302aede5ac0267a02c42085e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcyZDg3ODAzZTIzOGVjMDMwMmFlZGU1YWMwMjY3YTAyYzQyMDg1ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-06T17:18:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-06T17:18:46Z"}, "message": "re PR middle-end/56548 (ICE in emit_move_insn, at expr.c:3486 with -march=pentium{pro,2,3} -O3)\n\n\tPR middle-end/56548\n\t* expr.c (expand_cond_expr_using_cmove): When expanding cmove in\n\tpromoted mode, convert the result back to the original mode.\n\n\t* gcc.dg/pr56548.c: New test.\n\nFrom-SVN: r196498", "tree": {"sha": "ed41f33979c0edc53fadd53f349690eabb055f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed41f33979c0edc53fadd53f349690eabb055f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a72d87803e238ec0302aede5ac0267a02c42085e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a72d87803e238ec0302aede5ac0267a02c42085e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a72d87803e238ec0302aede5ac0267a02c42085e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a72d87803e238ec0302aede5ac0267a02c42085e/comments", "author": null, "committer": null, "parents": [{"sha": "28937f1196166ef33c303ff09f0d7f4936faec81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28937f1196166ef33c303ff09f0d7f4936faec81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28937f1196166ef33c303ff09f0d7f4936faec81"}], "stats": {"total": 68, "additions": 48, "deletions": 20}, "files": [{"sha": "1f428c5bc187dc5cdd51abd029d21619c93f9aa2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a72d87803e238ec0302aede5ac0267a02c42085e", "patch": "@@ -1,3 +1,9 @@\n+2013-03-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56548\n+\t* expr.c (expand_cond_expr_using_cmove): When expanding cmove in\n+\tpromoted mode, convert the result back to the original mode.\n+\n 2013-03-06  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56294\n@@ -84,7 +90,7 @@\n \t* sdbout.c (sdbout_one_type): Switch to current function's section\n \tsupporting cold/hot.\n \n-2013-03-05  David Holsgrove <david.holsgrove@xilinx.com>\n+2013-03-05  David Holsgrove  <david.holsgrove@xilinx.com>\n \n \t* doc/invoke.texi (MicroBlaze): Add -mbig-endian, -mlittle-endian,\n \t-mxl-reorder.\n@@ -213,7 +219,7 @@\n \t* ipa-split.c (split_function): Do not set the RSO flag if result is\n \tnot by reference and its type is a register type.\n \n-2013-03-04  David Holsgrove <david.holsgrove@xilinx.com>\n+2013-03-04  David Holsgrove  <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/microblaze.c (microblaze_valid_pic_const): New \n \t(microblaze_legitimate_pic_operand): Likewise\n@@ -222,11 +228,11 @@\n \t* config/microblaze/microblaze-protos.h\n \t(microblaze_legitimate_pic_operand): Declare.\n \n-2013-03-04  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n+2013-03-04  Edgar E. Iglesias  <edgar.iglesias@gmail.com>\n \n-\t*  config/microblaze/predicates.md (call_insn_simple_operand):\n+\t* config/microblaze/predicates.md (call_insn_simple_operand):\n \tNew predicate for supported rtx code types.\n-\t*  config/microblaze/microblaze.md (call_internal1): Use\n+\t* config/microblaze/microblaze.md (call_internal1): Use\n \tcall_insn_simple_operand predicate.\n \n 2013-03-04  Jakub Jelinek  <jakub@redhat.com>\n@@ -598,10 +604,10 @@\n \t2013-02-24  Catherine Moore  <clm@codesourcery.com>\n \t    Maciej W. Rozycki  <macro@codesourcery.com>\n \t    Tom de Vries  <tom@codesourcery.com>\n-\t    Nathan Sidwell <nathan@codesourcery.com>\n+\t    Nathan Sidwell  <nathan@codesourcery.com>\n \t    Iain Sandoe  <iain@codesourcery.com>\n \t    Nathan Froyd  <froydnj@codesourcery.com>\n-\t    Chao-ying Fu <fu@mips.com>\n+\t    Chao-ying Fu  <fu@mips.com>\n \t* doc/extend.texi: (micromips, nomicromips, nocompression):\n \tDocument new function attributes. \n \t* doc/invoke.texi (minterlink-compressed, mmicromips,\n@@ -747,10 +753,10 @@\n 2013-02-24  Catherine Moore  <clm@codesourcery.com>\n \t    Maciej W. Rozycki  <macro@codesourcery.com>\n \t    Tom de Vries  <tom@codesourcery.com>\n-\t    Nathan Sidwell <nathan@codesourcery.com>\n+\t    Nathan Sidwell  <nathan@codesourcery.com>\n \t    Iain Sandoe  <iain@codesourcery.com>\n \t    Nathan Froyd  <froydnj@codesourcery.com>\n-\t    Chao-ying Fu <fu@mips.com>\n+\t    Chao-ying Fu  <fu@mips.com>\n \n \t* doc/extend.texi: (micromips, nomicromips, nocompression):\n \tDocument new function attributes. \n@@ -1053,17 +1059,17 @@\n \t* config/i386/i386.c (initial_ix86_tune_features): Turn on fp\n \treassociation for avx2 targets.\n \n-2012-02-19  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n+2012-02-19  Edgar E. Iglesias  <edgar.iglesias@gmail.com>\n \n \t* config/microblaze/microblaze.c: microblaze_has_clz = 0\n \tAdd version check for v8.10.a to enable microblaze_has_clz\n \t* config/microblaze/microblaze.h: Add TARGET_HAS_CLZ as combined \n \tversion and TARGET_PATTERN_COMPARE check\n \t* config/microblaze/microblaze.md: New clzsi2 instruction\n \n-2012-02-19  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n+2012-02-19  Edgar E. Iglesias  <edgar.iglesias@gmail.com>\n \n-\t*  config/microblaze/microblaze.md (call_value_intern): Check symbol is \n+\t* config/microblaze/microblaze.md (call_value_intern): Check symbol is\n \tfunction before branching.\n \n 2012-02-19  Andrey Belevantsev  <abel@ispras.ru>\n@@ -1343,7 +1349,7 @@\n \t* config/avr/avr-dimode.md (umulsidi3, mulsidi3): New expanders.\n \t(umulsidi3_insn, mulsidi3_insn): New insns.\n \n-2013-02-12  Christophe Lyon <christophe.lyon@linaro.org>\n+2013-02-12  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* config/arm/arm-protos.h (struct cpu_vec_costs): New struct type.\n \t(struct tune_params): Add vec_costs field.\n@@ -1397,7 +1403,7 @@\n \tdefine ENDFILE_SPEC as TM_DESTRUCTOR.\n \t* config/i386/darwin.h (ENDFILE_SPEC): Use TM_DESTRUCTOR.\n \n-2013-02-11  Alexander Potapenko <glider@google.com>\n+2013-02-11  Alexander Potapenko  <glider@google.com>\n \t    Jack Howarth  <howarth@bromo.med.uc.edu>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "e3fb0b63bff2b64bded3a28f326a36b34a42db2f", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a72d87803e238ec0302aede5ac0267a02c42085e", "patch": "@@ -7884,6 +7884,7 @@ expand_cond_expr_using_cmove (tree treeop0 ATTRIBUTE_UNUSED,\n   tree type = TREE_TYPE (treeop1);\n   int unsignedp = TYPE_UNSIGNED (type);\n   enum machine_mode mode = TYPE_MODE (type);\n+  enum machine_mode orig_mode = mode;\n \n   /* If we cannot do a conditional move on the mode, try doing it\n      with the promoted mode. */\n@@ -7949,7 +7950,7 @@ expand_cond_expr_using_cmove (tree treeop0 ATTRIBUTE_UNUSED,\n       rtx seq = get_insns ();\n       end_sequence ();\n       emit_insn (seq);\n-      return temp;\n+      return convert_modes (orig_mode, mode, temp, 0);\n     }\n \n   /* Otherwise discard the sequence and fall back to code with"}, {"sha": "df583d6a03bb44e6e6f9e76ab20bfbd3a34c7cb9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a72d87803e238ec0302aede5ac0267a02c42085e", "patch": "@@ -1,3 +1,8 @@\n+2013-03-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56548\n+\t* gcc.dg/pr56548.c: New test.\n+\n 2013-03-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR debug/53363\n@@ -147,7 +152,7 @@\n \n \tRevert:\n \t2013-02-24  Catherine Moore  <clm@codesourcery.com>\n-\tRichard Sandiford <rdsandiford@googlemail.com>\n+\tRichard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/mips.exp: Add microMIPS support.\n \t* gcc.target/mips/umips-movep-2.c: New test.\n@@ -175,7 +180,7 @@\n \t* gcc.target/mips/umips-swp-4.c: New test.\n \n 2013-02-24  Catherine Moore  <clm@codesourcery.com>\n-\t    Richard Sandiford <rdsandiford@googlemail.com>\n+\t    Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/mips.exp: Add microMIPS support.\n \t* gcc.target/mips/umips-movep-2.c: New test.\n@@ -495,7 +500,7 @@\n \t* gcc.target/powerpc/ppc-stackalign-1.c: Likewise.\n \t* gcc.target/powerpc/ppc-ldstruct.c: Likewise.\n \n-2013-02-11  Alexander Potapenko <glider@google.com>\n+2013-02-11  Alexander Potapenko  <glider@google.com>\n \t    Jack Howarth  <howarth@bromo.med.uc.edu>\n \t    Jakub Jelinek  <jakub@redhat.com>\n \n@@ -720,7 +725,7 @@\n \tPR fortran/47517\n \t* gfortran.dg/realloc_on _assign_17.f90 : New test.\n \n-2013-02-04  Alexander Potapenko <glider@google.com>\n+2013-02-04  Alexander Potapenko  <glider@google.com>\n \t    Jack Howarth  <howarth@bromo.med.uc.edu>\n \t    Jakub Jelinek  <jakub@redhat.com>\n \n@@ -843,7 +848,7 @@\n \t* gfortran.dg/allocatable_function_6.f90: New.\n \n 2013-01-29  Janus Weil  <janus@gcc.gnu.org>\n-\t    Mikael Morin <mikael@gcc.gnu.org>\n+\t    Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/54107\n \t* gfortran.dg/proc_ptr_comp_36.f90: New."}, {"sha": "2aa61d9cc605e84683a454155c71452ba45ba31e", "filename": "gcc/testsuite/gcc.dg/pr56548.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56548.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72d87803e238ec0302aede5ac0267a02c42085e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56548.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56548.c?ref=a72d87803e238ec0302aede5ac0267a02c42085e", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/56548 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-additional-options \"-march=pentium3\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+\n+short\n+foo (short x)\n+{\n+  int i;\n+\n+  for (i = 0; i < 3; i++)\n+    if (x > 0)\n+      x--;\n+\n+  return x;\n+}"}]}