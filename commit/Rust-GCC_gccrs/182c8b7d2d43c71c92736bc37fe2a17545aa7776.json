{"sha": "182c8b7d2d43c71c92736bc37fe2a17545aa7776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyYzhiN2QyZDQzYzcxYzkyNzM2YmMzN2ZlMmExNzU0NWFhNzc3Ng==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-12-12T10:02:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-12T10:02:38Z"}, "message": "[Ada] Handling up-level references in protected entries and freeze nodes\n\n2019-12-12  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch9.adb (Build_Protected_Entry): Analyze the block created\n\tto hold the declarations and statements of the protected entry\n\tbody right after it's created, and then call Reset_Scopes_To on\n\tthat block to reset the Scope of nested entities to the block\n\tscope.\n\t(Reset_Scope): Add handling for N_Freeze_Entity nodes, calling\n\tReset_Scopes recursively on the Actions of such nodes. Also, for\n\tsubprogram bodies that are encountered that might not have a\n\tseparate declaration (such as type init procedures), reset the\n\tScope of the subprogram's entity.\n\nFrom-SVN: r279289", "tree": {"sha": "25b8f7441ac3dd6e8750a6c7d59f94f54e400879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25b8f7441ac3dd6e8750a6c7d59f94f54e400879"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/182c8b7d2d43c71c92736bc37fe2a17545aa7776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182c8b7d2d43c71c92736bc37fe2a17545aa7776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/182c8b7d2d43c71c92736bc37fe2a17545aa7776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182c8b7d2d43c71c92736bc37fe2a17545aa7776/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c171199011ac0d37df67ff99ea7286fa3455efcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c171199011ac0d37df67ff99ea7286fa3455efcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c171199011ac0d37df67ff99ea7286fa3455efcf"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "f28fa45be5c5e0562b546e2efb57010e0e94a131", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182c8b7d2d43c71c92736bc37fe2a17545aa7776/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182c8b7d2d43c71c92736bc37fe2a17545aa7776/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=182c8b7d2d43c71c92736bc37fe2a17545aa7776", "patch": "@@ -1,3 +1,16 @@\n+2019-12-12  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Protected_Entry): Analyze the block created\n+\tto hold the declarations and statements of the protected entry\n+\tbody right after it's created, and then call Reset_Scopes_To on\n+\tthat block to reset the Scope of nested entities to the block\n+\tscope.\n+\t(Reset_Scope): Add handling for N_Freeze_Entity nodes, calling\n+\tReset_Scopes recursively on the Actions of such nodes. Also, for\n+\tsubprogram bodies that are encountered that might not have a\n+\tseparate declaration (such as type init procedures), reset the\n+\tScope of the subprogram's entity.\n+\n 2019-12-12  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute): Add error message for"}, {"sha": "6e34de131ffb23e8a09bc8eec8ab905084ce0ce8", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182c8b7d2d43c71c92736bc37fe2a17545aa7776/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182c8b7d2d43c71c92736bc37fe2a17545aa7776/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=182c8b7d2d43c71c92736bc37fe2a17545aa7776", "patch": "@@ -48,6 +48,7 @@ with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n+with Sem_Ch5;  use Sem_Ch5;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch9;  use Sem_Ch9;\n@@ -3722,6 +3723,14 @@ package body Exp_Ch9 is\n             Declarations               => Decls,\n             Handled_Statement_Sequence => Handled_Statement_Sequence (N)));\n \n+      --  Analyze now and reset scopes for declarations so that Scope fields\n+      --  currently denoting the entry will now denote the block scope.\n+\n+      Analyze_Statements (Bod_Stmts);\n+\n+      Reset_Scopes_To\n+        (First (Bod_Stmts), Entity (Identifier (First (Bod_Stmts))));\n+\n       case Corresponding_Runtime_Package (Pid) is\n          when System_Tasking_Protected_Objects_Entries =>\n             Append_To (Bod_Stmts,\n@@ -14977,7 +14986,27 @@ package body Exp_Ch9 is\n                Next (Decl);\n             end loop;\n \n+         elsif Nkind (N) = N_Freeze_Entity then\n+\n+            --  Scan the actions associated with a freeze node, which may\n+            --  actually be declarations with entities that need to have\n+            --  their scopes reset.\n+\n+            Decl := First (Actions (N));\n+            while Present (Decl) loop\n+               Reset_Scopes (Decl);\n+               Next (Decl);\n+            end loop;\n+\n          elsif N /= Bod and then Nkind (N) in N_Proper_Body then\n+\n+            --  A subprogram without a separate declaration may be encountered,\n+            --  and we need to reset the subprogram's entity's scope.\n+\n+            if Nkind (N) = N_Subprogram_Body then\n+               Set_Scope (Defining_Entity (Specification (N)), E);\n+            end if;\n+\n             return Skip;\n          end if;\n "}]}