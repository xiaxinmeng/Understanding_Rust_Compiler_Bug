{"sha": "38d396e511338696ce8953e36b0fa838e9f3ce7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhkMzk2ZTUxMTMzODY5NmNlODk1M2UzNmIwZmE4MzhlOWYzY2U3YQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-04-17T06:53:44Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-04-17T06:53:44Z"}, "message": "opts.c (decode_options): Do not enable flag_rename_registers and flag_web at -O3.\n\n2004-04-17  Paolo Bonzini  <bonzini@gnu.org>\n\n        * opts.c (decode_options): Do not enable flag_rename_registers\n        and flag_web at -O3.\n        * toplev.c (flag_rename_registers): Initialize\n        flag_rename_registers and flag_web to\n        AUTODETECT_FLAG_VAR_TRACKING.\n        (default_debug_hooks): New global.\n        (process_options): Initialize default_debug_hooks.  Warn if\n        -fvar-tracking specified but not supported by the current\n        debug format.  Do not run var tracking at -O0 or if not\n        supported by the current debug format, even if\n        -fvar-tracking was given.  If -fno-rename-registers\n        is not specified, always run register renaming if var\n        tracking is supported by the default debugging information\n        format for the target, and we are at -O1 or higher; similarly\n        for -fweb, but only at -O2 or higher.\n        * doc/invoke.texi (Optimize Options): Document this.\n\nFrom-SVN: r80789", "tree": {"sha": "2ce9a097e3a430f0b4f2c5c400ae2a13887facf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ce9a097e3a430f0b4f2c5c400ae2a13887facf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38d396e511338696ce8953e36b0fa838e9f3ce7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38d396e511338696ce8953e36b0fa838e9f3ce7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38d396e511338696ce8953e36b0fa838e9f3ce7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38d396e511338696ce8953e36b0fa838e9f3ce7a/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82e923f6ff5365803d17e85f9999a1e8f6da9ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e923f6ff5365803d17e85f9999a1e8f6da9ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82e923f6ff5365803d17e85f9999a1e8f6da9ad9"}], "stats": {"total": 110, "additions": 92, "deletions": 18}, "files": [{"sha": "0a29202d65b853b1c5ff6b889c6233004dbc089b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38d396e511338696ce8953e36b0fa838e9f3ce7a", "patch": "@@ -1,3 +1,22 @@\n+2004-04-17  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* opts.c (decode_options): Do not enable flag_rename_registers\n+\tand flag_web at -O3.\n+\t* toplev.c (flag_rename_registers): Initialize\n+\tflag_rename_registers and flag_web to\n+\tAUTODETECT_FLAG_VAR_TRACKING.\n+\t(default_debug_hooks): New global.\n+\t(process_options): Initialize default_debug_hooks.  Warn if\n+\t-fvar-tracking specified but not supported by the current\n+\tdebug format.  Do not run var tracking at -O0 or if not\n+\tsupported by the current debug format, even if\n+\t-fvar-tracking was given.  If -fno-rename-registers\n+\tis not specified, always run register renaming if var\n+\ttracking is supported by the default debugging information\n+\tformat for the target, and we are at -O1 or higher; similarly\n+\tfor -fweb, but only at -O2 or higher.\n+\t* doc/invoke.texi (Optimize Options): Document this.\n+\n 2004-04-17  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* configure.ac (gcc_cv_ld_as_needed): Use AC_CACHE_CHECK."}, {"sha": "152919406d8699fe6db925154b0f735d4a7306b9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=38d396e511338696ce8953e36b0fa838e9f3ce7a", "patch": "@@ -4346,11 +4346,14 @@ Enabled at levels @option{-O2}, @option{-O3}.\n @opindex frename-registers\n Attempt to avoid false dependencies in scheduled code by making use\n of registers left over after register allocation.  This optimization\n-will most benefit processors with lots of registers.  It can, however,\n+will most benefit processors with lots of registers.  Depending on the\n+debug information format adopted by the target, however, it can\n make debugging impossible, since variables will no longer stay in\n a ``home register''.\n \n-Enabled at levels @option{-O3}.\n+Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os},\n+on targets where the default format for debugging information supports\n+variable tracking.\n \n @item -fweb\n @opindex fweb\n@@ -4361,7 +4364,9 @@ passes, such as CSE, loop optimizer and trivial dead code remover.  It can,\n however, make debugging impossible, since variables will no longer stay in a\n ``home register''.\n \n-Enabled at levels @option{-O3}.\n+Enabled at levels @option{-O2}, @option{-O3}, @option{-Os},\n+on targets where the default format for debugging information supports\n+variable tracking.\n \n @item -fno-cprop-registers\n @opindex fno-cprop-registers"}, {"sha": "fb04b8fbb41dacecfb923e9786ce547f9f9eee5b", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=38d396e511338696ce8953e36b0fa838e9f3ce7a", "patch": "@@ -571,9 +571,7 @@ decode_options (unsigned int argc, const char **argv)\n   if (optimize >= 3)\n     {\n       flag_inline_functions = 1;\n-      flag_rename_registers = 1;\n       flag_unswitch_loops = 1;\n-      flag_web = 1;\n       flag_gcse_after_reload = 1;\n     }\n "}, {"sha": "faf177af55f4727807589066fd6a1e7a3d78a3d2", "filename": "gcc/toplev.c", "status": "modified", "additions": 65, "deletions": 13, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38d396e511338696ce8953e36b0fa838e9f3ce7a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=38d396e511338696ce8953e36b0fa838e9f3ce7a", "patch": "@@ -138,6 +138,10 @@ static const char **save_argv;\n \n const char *main_input_filename;\n \n+/* Used to enable -fvar-tracking, -fweb and -frename-registers according\n+   to optimize and default_debug_hooks in process_options ().  */\n+#define AUTODETECT_FLAG_VAR_TRACKING 2\n+\n /* Current position in real source file.  */\n \n location_t input_location;\n@@ -177,6 +181,10 @@ int target_flags_explicit;\n \n const struct gcc_debug_hooks *debug_hooks;\n \n+/* Debug hooks - target default.  */\n+\n+static const struct gcc_debug_hooks *default_debug_hooks;\n+\n /* Other flags saying which kinds of debugging dump have been requested.  */\n \n int rtl_dump_and_exit;\n@@ -258,9 +266,10 @@ int flag_reorder_blocks_and_partition = 0;\n \n int flag_reorder_functions = 0;\n \n-/* Nonzero if registers should be renamed.  */\n-\n-int flag_rename_registers = 0;\n+/* Nonzero if registers should be renamed.  When\n+   flag_rename_registers == AUTODETECT_FLAG_VAR_TRACKING it will be set\n+   according to optimize and default_debug_hooks in process_options ().  */\n+int flag_rename_registers = AUTODETECT_FLAG_VAR_TRACKING;\n int flag_cprop_registers = 0;\n \n /* Nonzero for -pedantic switch: warn about anything\n@@ -485,9 +494,11 @@ int flag_complex_divide_method = 0;\n \n int flag_syntax_only = 0;\n \n-/* Nonzero means performs web construction pass.  */\n+/* Nonzero means performs web construction pass.  When flag_web ==\n+   AUTODETECT_FLAG_VAR_TRACKING it will be set according to optimize\n+   and default_debug_hooks in process_options ().  */\n \n-int flag_web;\n+int flag_web = AUTODETECT_FLAG_VAR_TRACKING;\n \n /* Nonzero means perform loop optimizer.  */\n \n@@ -800,8 +811,6 @@ int flag_unit_at_a_time = 0;\n /* Nonzero if we should track variables.  When\n    flag_var_tracking == AUTODETECT_FLAG_VAR_TRACKING it will be set according\n    to optimize, debug_info_level and debug_hooks in process_options ().  */\n- \n-#define AUTODETECT_FLAG_VAR_TRACKING 2\n int flag_var_tracking = AUTODETECT_FLAG_VAR_TRACKING;\n \n /* Values of the -falign-* flags: how much to align labels in code.\n@@ -2335,6 +2344,30 @@ process_options (void)\n \n   /* Now we know write_symbols, set up the debug hooks based on it.\n      By default we do nothing for debug output.  */\n+  if (PREFERRED_DEBUGGING_TYPE == NO_DEBUG)\n+    default_debug_hooks = &do_nothing_debug_hooks;\n+#if defined(DBX_DEBUGGING_INFO)\n+  else if (PREFERRED_DEBUGGING_TYPE == DBX_DEBUG)\n+    default_debug_hooks = &dbx_debug_hooks;\n+#endif\n+#if defined(XCOFF_DEBUGGING_INFO)\n+  else if (PREFERRED_DEBUGGING_TYPE == XCOFF_DEBUG)\n+    default_debug_hooks = &xcoff_debug_hooks;\n+#endif\n+#ifdef SDB_DEBUGGING_INFO\n+  else if (PREFERRED_DEBUGGING_TYPE == SDB_DEBUG)\n+    default_debug_hooks = &sdb_debug_hooks;\n+#endif\n+#ifdef DWARF2_DEBUGGING_INFO\n+  else if (PREFERRED_DEBUGGING_TYPE == DWARF2_DEBUG)\n+    default_debug_hooks = &dwarf2_debug_hooks;\n+#endif\n+#ifdef VMS_DEBUGGING_INFO\n+  else if (PREFERRED_DEBUGGING_TYPE == VMS_DEBUG\n+\t   || PREFERRED_DEBUGGING_TYPE == VMS_AND_DWARF2_DEBUG)\n+    default_debug_hooks = &vmsdbg_debug_hooks;\n+#endif\n+\n   if (write_symbols == NO_DEBUG)\n     debug_hooks = &do_nothing_debug_hooks;\n #if defined(DBX_DEBUGGING_INFO)\n@@ -2362,15 +2395,34 @@ process_options (void)\n \t   debug_type_names[write_symbols]);\n \n   /* Now we know which debug output will be used so we can set\n-     flag_var_tracking if user has not specified it.  */\n-  if (flag_var_tracking == AUTODETECT_FLAG_VAR_TRACKING)\n+     flag_var_tracking, flag_rename_registers and flag_web if the user has\n+     not specified them.  */\n+  if (debug_info_level < DINFO_LEVEL_NORMAL\n+      || debug_hooks->var_location == do_nothing_debug_hooks.var_location)\n     {\n-      /* User has not specified -f(no-)var-tracking so autodetect it.  */\n-      flag_var_tracking\n-\t= (optimize >= 1 && debug_info_level >= DINFO_LEVEL_NORMAL\n-\t   && debug_hooks->var_location != do_nothing_debug_hooks.var_location);\n+      if (flag_var_tracking == 1)\n+        {\n+\t  if (debug_info_level < DINFO_LEVEL_NORMAL)\n+\t    warning (\"variable tracking requested, but useless unless \"\n+\t\t     \"producing debug info\");\n+\t  else\n+\t    warning (\"variable tracking requested, but not supported \"\n+\t\t     \"by this debug format\");\n+\t}\n+      flag_var_tracking = 0;\n     }\n \n+  if (flag_rename_registers == AUTODETECT_FLAG_VAR_TRACKING)\n+    flag_rename_registers = default_debug_hooks->var_location\n+\t    \t\t    != do_nothing_debug_hooks.var_location;\n+\n+  if (flag_web == AUTODETECT_FLAG_VAR_TRACKING)\n+    flag_web = optimize >= 2 && (default_debug_hooks->var_location\n+\t    \t\t         != do_nothing_debug_hooks.var_location);\n+\n+  if (flag_var_tracking == AUTODETECT_FLAG_VAR_TRACKING)\n+    flag_var_tracking = optimize >= 1;\n+\n   /* If auxiliary info generation is desired, open the output file.\n      This goes in the same directory as the source file--unlike\n      all the other output files.  */"}]}