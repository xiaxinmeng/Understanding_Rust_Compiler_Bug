{"sha": "c94a3f9f6580097dfc9279132a312780e5fa5405", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk0YTNmOWY2NTgwMDk3ZGZjOTI3OTEzMmEzMTI3ODBlNWZhNTQwNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-03-03T17:48:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-03-03T17:48:23Z"}, "message": "re PR c++/71464 (ICE on invalid code (with redeclared constructor) at -Os: Segmentation fault)\n\n/cp\n2018-03-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/71464\n\t* optimize.c (maybe_thunk_body): Bail out immediately if either\n\tfns[0] or fns[1] is null.\n\n/testsuite\n2018-03-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/71464\n\t* g++.dg/torture/pr71464.C: New.\n\nFrom-SVN: r258216", "tree": {"sha": "b1618f991ce2c75dc596dcf5b77a0f893d66894c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1618f991ce2c75dc596dcf5b77a0f893d66894c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c94a3f9f6580097dfc9279132a312780e5fa5405", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94a3f9f6580097dfc9279132a312780e5fa5405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94a3f9f6580097dfc9279132a312780e5fa5405", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94a3f9f6580097dfc9279132a312780e5fa5405/comments", "author": null, "committer": null, "parents": [{"sha": "6855fa2131d6e9fbe147cad5121d9b2ac9800921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6855fa2131d6e9fbe147cad5121d9b2ac9800921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6855fa2131d6e9fbe147cad5121d9b2ac9800921"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "391aa5f11fe831564a4c100c3b1600a798e7591d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c94a3f9f6580097dfc9279132a312780e5fa5405", "patch": "@@ -1,3 +1,9 @@\n+2018-03-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/71464\n+\t* optimize.c (maybe_thunk_body): Bail out immediately if either\n+\tfns[0] or fns[1] is null.\n+\n 2018-03-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/84578"}, {"sha": "fdb1650939e9c5d89a0435e000f463987967f173", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=c94a3f9f6580097dfc9279132a312780e5fa5405", "patch": "@@ -261,8 +261,12 @@ maybe_thunk_body (tree fn, bool force)\n \n   populate_clone_array (fn, fns);\n \n+  /* Can happen during error recovery (c++/71464).  */\n+  if (!fns[0] || !fns[1])\n+    return 0;\n+\n   /* Don't use thunks if the base clone omits inherited parameters.  */\n-  if (fns[0] && ctor_omit_inherited_parms (fns[0]))\n+  if (ctor_omit_inherited_parms (fns[0]))\n     return 0;\n \n   DECL_ABSTRACT_P (fn) = false;"}, {"sha": "b5b57798c410f7728b4862b2145e52bcae4ad553", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c94a3f9f6580097dfc9279132a312780e5fa5405", "patch": "@@ -1,3 +1,8 @@\n+2018-03-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/71464\n+\t* g++.dg/torture/pr71464.C: New.\n+\n 2018-03-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/80965"}, {"sha": "0ed7de79e8841e7432dc73616f0d3fe42fa6e607", "filename": "gcc/testsuite/g++.dg/torture/pr71464.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr71464.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94a3f9f6580097dfc9279132a312780e5fa5405/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr71464.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr71464.C?ref=c94a3f9f6580097dfc9279132a312780e5fa5405", "patch": "@@ -0,0 +1,7 @@\n+struct A {}; \n+\n+struct B : virtual A\n+{\n+  B () {};\n+  B () {};  // { dg-error \"cannot be overloaded\" }\n+};"}]}