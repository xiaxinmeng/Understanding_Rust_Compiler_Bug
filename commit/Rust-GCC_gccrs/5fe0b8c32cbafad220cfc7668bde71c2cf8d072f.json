{"sha": "5fe0b8c32cbafad220cfc7668bde71c2cf8d072f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZlMGI4YzMyY2JhZmFkMjIwY2ZjNzY2OGJkZTcxYzJjZjhkMDcyZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-25T09:03:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:03:09Z"}, "message": "[Ada] Refine checks for uplevel references\n\n2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Visit_Node): Restrict check for uplevel references in\n\tprefixes of array attributes, to prefixes that are entity names whose\n\ttype is constrained.\n\t(Note_Uplevel_Bound): Verify that the bound is declared in an enclosing\n\tsubprogram, as itype created for loops in pre/postcondition may appear\n\tin loops at the library level.\n\nFrom-SVN: r260717", "tree": {"sha": "1b91f81318a1fd8d623be5df5c497629f10826be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b91f81318a1fd8d623be5df5c497629f10826be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "a4730773bcb947a92f85df5c07c38e11d6d8dcc4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5fe0b8c32cbafad220cfc7668bde71c2cf8d072f", "patch": "@@ -1,3 +1,12 @@\n+2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_unst.adb (Visit_Node): Restrict check for uplevel references in\n+\tprefixes of array attributes, to prefixes that are entity names whose\n+\ttype is constrained.\n+\t(Note_Uplevel_Bound): Verify that the bound is declared in an enclosing\n+\tsubprogram, as itype created for loops in pre/postcondition may appear\n+\tin loops at the library level.\n+\n 2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Build_Predicate_Functions): The predicate function"}, {"sha": "ec4539a98412c2addd221441cddbb2636646a984", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe0b8c32cbafad220cfc7668bde71c2cf8d072f/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=5fe0b8c32cbafad220cfc7668bde71c2cf8d072f", "patch": "@@ -401,9 +401,14 @@ package body Exp_Unst is\n                procedure Note_Uplevel_Bound (N : Node_Id) is\n                begin\n                   --  Entity name case\n+                  --  Make sure that that the entity is declared in a\n+                  --  subprogram. THis may not be the case for an type\n+                  --  in a loop appearing in a precondition.\n \n                   if Is_Entity_Name (N) then\n-                     if Present (Entity (N)) then\n+                     if Present (Entity (N))\n+                        and then Present (Enclosing_Subprogram (Entity (N)))\n+                     then\n                         Note_Uplevel_Ref\n                           (E      => Entity (N),\n                            Caller => Current_Subprogram,\n@@ -616,11 +621,25 @@ package body Exp_Unst is\n                         | Attribute_Last\n                         | Attribute_Length\n                      =>\n-                        declare\n-                           DT : Boolean := False;\n-                        begin\n-                           Check_Static_Type (Etype (Prefix (N)), DT);\n-                        end;\n+                        --  Special-case attributes of array objects\n+                        --  whose bounds may be uplevel references.\n+                        --  More complex prefixes are handled during\n+                        --  full traversal. Note that if the nominal\n+                        --  subtype of the prefix is unconstrained, the\n+                        --  bound must be obtained from the object, not\n+                        --  from the (possibly) uplevel reference,\n+\n+                        if Is_Entity_Name (Prefix (N))\n+                          and then Is_Constrained (Etype (Prefix (N)))\n+                        then\n+                           declare\n+                              DT : Boolean := False;\n+                           begin\n+                              Check_Static_Type (Etype (Prefix (N)), DT);\n+                           end;\n+\n+                           return OK;\n+                        end if;\n \n                      when others =>\n                         null;"}]}