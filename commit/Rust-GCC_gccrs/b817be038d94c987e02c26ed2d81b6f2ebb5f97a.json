{"sha": "b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgxN2JlMDM4ZDk0Yzk4N2UwMmMyNmVkMmQ4MWI2ZjJlYmI1Zjk3YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-02-01T00:28:10Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-02-02T20:30:21Z"}, "message": "c++: Fix ICE on invalid alignas in a template [PR93530]\n\nThis fixes an ICE taking place in cp_default_conversion because we got\na SCOPE_REF that doesn't have a type and so checking\nINTEGRAL_OR_UNSCOPED_ENUMERATION_TYPE_P (TREE_TYPE (exp)) will crash.\nThis happens since the recent Joseph's change in decl_attributes whereby\nwe don't skip C++11 attributes on types.\n\n[dcl.align] is clear that alignas applied to a function is ill-formed.\nThat should be fixed, and we have PR90847 for that.  But I think a more\nappropriate fix at this stage would be the following: in a template we\nwant to splice dependent attributes and save them for later, and by\ndoing so avoid this crash.\n\n\tPR c++/93530 - ICE on invalid alignas in a template.\n\t* decl.c (grokdeclarator): Call cplus_decl_attributes instead of\n\tdecl_attributes.\n\n\t* g++.dg/cpp0x/alignas18.C: New test.", "tree": {"sha": "27df3e30ed3b738aee3e2a5f319c560bcd25bdb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27df3e30ed3b738aee3e2a5f319c560bcd25bdb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26a591f2a47e1238951cce42e1a14c05ee166d7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a591f2a47e1238951cce42e1a14c05ee166d7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a591f2a47e1238951cce42e1a14c05ee166d7e"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "ed1c64f18fb728f693cc3e066f11240c04dae8d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "patch": "@@ -1,3 +1,9 @@\n+2020-02-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93530 - ICE on invalid alignas in a template.\n+\t* decl.c (grokdeclarator): Call cplus_decl_attributes instead of\n+\tdecl_attributes.\n+\n 2020-01-31  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/86216"}, {"sha": "859fd1bb9317cdba81077c5d0d0f7f7c93a85a57", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "patch": "@@ -12318,7 +12318,7 @@ grokdeclarator (const cp_declarator *declarator,\n \n \t\t The optional attribute-specifier-seq appertains to\n \t\t the function type.  */\n-\t      decl_attributes (&type, attrs, 0);\n+\t      cplus_decl_attributes (&type, attrs, 0);\n \n \t    if (raises)\n \t      type = build_exception_variant (type, raises);"}, {"sha": "74cbead32fb0ab88686a9d447fa9f031fa052f97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "patch": "@@ -1,3 +1,8 @@\n+2020-02-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93530 - ICE on invalid alignas in a template.\n+\t* g++.dg/cpp0x/alignas18.C: New test.\n+\n 2020-02-02  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.target/powerpc/darwin-abi-12.c: Add '-fcommon' to the"}, {"sha": "820bdd2d7cab33693c6f0561aa9c53f264d0502b", "filename": "gcc/testsuite/g++.dg/cpp0x/alignas18.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b817be038d94c987e02c26ed2d81b6f2ebb5f97a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas18.C?ref=b817be038d94c987e02c26ed2d81b6f2ebb5f97a", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/93530 - ICE on invalid alignas in a template.\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T> struct S {\n+  using U = S;\n+  // FIXME: This is ill-formed; see PR90847.\n+  void fn() alignas(U::X);\n+};"}]}