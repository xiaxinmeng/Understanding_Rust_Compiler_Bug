{"sha": "1e5bdc40951e1ff33e3198ee95e0dab94f2c7946", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1YmRjNDA5NTFlMWZmMzNlMzE5OGVlOTVlMGRhYjk0ZjJjNzk0Ng==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-05T13:19:16Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-05T13:19:16Z"}, "message": "h8300.c (shift_alg_si): Optimize ashift:HI and lshiftrt:SI by 28, 29, and 30 bits when !TARGET_H8300.\n\n\t* config/h8300/h8300.c (shift_alg_si): Optimize ashift:HI and\n\tlshiftrt:SI by 28, 29, and 30 bits when !TARGET_H8300.\n\t(get_shift_alg): Return optimal assembly instructions for the\n\tshifts mentioned above.\n\nFrom-SVN: r59859", "tree": {"sha": "b6f0b572f9f30062ec98eb3a4f78cb1f162aa8c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6f0b572f9f30062ec98eb3a4f78cb1f162aa8c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946/comments", "author": null, "committer": null, "parents": [{"sha": "d8f2e87b7727707c23476f97224c5fd7756fab0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f2e87b7727707c23476f97224c5fd7756fab0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f2e87b7727707c23476f97224c5fd7756fab0a"}], "stats": {"total": 87, "additions": 83, "deletions": 4}, "files": [{"sha": "4a46107d6ca449da100230ff0466be14e7d6a39b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e5bdc40951e1ff33e3198ee95e0dab94f2c7946", "patch": "@@ -1,3 +1,10 @@\n+2002-12-05  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (shift_alg_si): Optimize ashift:HI and\n+\tlshiftrt:SI by 28, 29, and 30 bits when !TARGET_H8300.\n+\t(get_shift_alg): Return optimal assembly instructions for the\n+\tshifts mentioned above.\n+\n 2002-12-04  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (h8300_init_once): Do not use loop to"}, {"sha": "eac88bde469059f9df26a11033d5093702252d67", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 76, "deletions": 4, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5bdc40951e1ff33e3198ee95e0dab94f2c7946/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=1e5bdc40951e1ff33e3198ee95e0dab94f2c7946", "patch": "@@ -242,11 +242,11 @@ static enum shift_alg shift_alg_si[3][3][32] = {\n     { INL, INL, INL, INL, INL, LOP, LOP, LOP,\n       SPC, LOP, LOP, LOP, LOP, LOP, LOP, SPC,\n       SPC, SPC, SPC, SPC, LOP, LOP, LOP, LOP,\n-      SPC, LOP, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_ASHIFT   */\n+      SPC, LOP, LOP, LOP, SPC, SPC, SPC, SPC }, /* SHIFT_ASHIFT   */\n     { INL, INL, INL, INL, INL, LOP, LOP, LOP,\n       SPC, LOP, LOP, LOP, LOP, LOP, LOP, SPC,\n       SPC, SPC, SPC, SPC, LOP, LOP, LOP, LOP,\n-      SPC, LOP, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_LSHIFTRT */\n+      SPC, LOP, LOP, LOP, SPC, SPC, SPC, SPC }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, LOP, LOP, LOP,\n       SPC, LOP, LOP, LOP, LOP, LOP, LOP, LOP,\n       SPC, SPC, SPC, SPC, LOP, LOP, LOP, LOP,\n@@ -261,11 +261,11 @@ static enum shift_alg shift_alg_si[3][3][32] = {\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, SPC,\n       SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n-      SPC, SPC, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_ASHIFT   */\n+      SPC, SPC, LOP, LOP, SPC, SPC, SPC, SPC }, /* SHIFT_ASHIFT   */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, SPC,\n       SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n-      SPC, SPC, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_LSHIFTRT */\n+      SPC, SPC, LOP, LOP, SPC, SPC, SPC, SPC }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n       SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n@@ -2725,6 +2725,78 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      goto end;\n \t    }\n \t}\n+      else if (!TARGET_H8300 && count == 28)\n+\t{\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      if (TARGET_H8300H)\n+\t\tinfo->special = \"sub.w\\t%e0,%e0\\n\\trotr.l\\t%S0\\n\\trotr.l\\t%S0\\n\\trotr.l\\t%S0\\n\\trotr.l\\t%S0\\n\\tsub.w\\t%f0,%f0\";\n+\t      else\n+\t\tinfo->special = \"sub.w\\t%e0,%e0\\n\\trotr.l\\t#2,%S0\\n\\trotr.l\\t#2,%S0\\n\\tsub.w\\t%f0,%f0\";\n+\t      info->shift1  = \"\";\n+\t      info->shift2  = \"\";\n+\t      goto end;\n+\t    case SHIFT_LSHIFTRT:\n+\t      if (TARGET_H8300H)\n+\t\tinfo->special = \"sub.w\\t%f0,%f0\\n\\trotl.l\\t%S0\\n\\trotl.l\\t%S0\\n\\trotl.l\\t%S0\\n\\trotl.l\\t%S0\\n\\tsub.w\\t%e0,%e0\";\n+\t      else\n+\t\tinfo->special = \"sub.w\\t%f0,%f0\\n\\trotl.l\\t#2,%S0\\n\\trotl.l\\t#2,%S0\\n\\tsub.w\\t%e0,%e0\";\n+\t      info->shift1  = \"\";\n+\t      info->shift2  = \"\";\n+\t      goto end;\n+\t    case SHIFT_ASHIFTRT:\n+\t      abort ();\n+\t    }\n+\t}\n+      else if (!TARGET_H8300 && count == 29)\n+\t{\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      if (TARGET_H8300H)\n+\t\tinfo->special = \"sub.w\\t%e0,%e0\\n\\trotr.l\\t%S0\\n\\trotr.l\\t%S0\\n\\trotr.l\\t%S0\\n\\tsub.w\\t%f0,%f0\";\n+\t      else\n+\t\tinfo->special = \"sub.w\\t%e0,%e0\\n\\trotr.l\\t#2,%S0\\n\\trotr.l\\t%S0\\n\\tsub.w\\t%f0,%f0\";\n+\t      info->shift1  = \"\";\n+\t      info->shift2  = \"\";\n+\t      goto end;\n+\t    case SHIFT_LSHIFTRT:\n+\t      if (TARGET_H8300H)\n+\t\tinfo->special = \"sub.w\\t%f0,%f0\\n\\trotl.l\\t%S0\\n\\trotl.l\\t%S0\\n\\trotl.l\\t%S0\\n\\tsub.w\\t%e0,%e0\";\n+\t      else\n+\t\tinfo->special = \"sub.w\\t%f0,%f0\\n\\trotl.l\\t#2,%S0\\n\\trotl.l\\t%S0\\n\\tsub.w\\t%e0,%e0\";\n+\t      info->shift1  = \"\";\n+\t      info->shift2  = \"\";\n+\t      goto end;\n+\t    case SHIFT_ASHIFTRT:\n+\t      abort ();\n+\t    }\n+\t}\n+      else if (!TARGET_H8300 && count == 30)\n+\t{\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      if (TARGET_H8300H)\n+\t\tinfo->special = \"sub.w\\t%e0,%e0\\n\\trotr.l\\t%S0\\n\\trotr.l\\t%S0\\n\\tsub.w\\t%f0,%f0\";\n+\t      else\n+\t\tinfo->special = \"sub.w\\t%e0,%e0\\n\\trotr.l\\t#2,%S0\\n\\tsub.w\\t%f0,%f0\";\n+\t      info->shift1  = \"\";\n+\t      info->shift2  = \"\";\n+\t      goto end;\n+\t    case SHIFT_LSHIFTRT:\n+\t      if (TARGET_H8300H)\n+\t\tinfo->special = \"sub.w\\t%f0,%f0\\n\\trotl.l\\t%S0\\n\\trotl.l\\t%S0\\n\\tsub.w\\t%e0,%e0\";\n+\t      else\n+\t\tinfo->special = \"sub.w\\t%f0,%f0\\n\\trotl.l\\t#2,%S0\\n\\tsub.w\\t%e0,%e0\";\n+\t      info->shift1  = \"\";\n+\t      info->shift2  = \"\";\n+\t      goto end;\n+\t    case SHIFT_ASHIFTRT:\n+\t      abort ();\n+\t    }\n+\t}\n       else if (count == 31)\n \t{\n \t  if (TARGET_H8300)"}]}