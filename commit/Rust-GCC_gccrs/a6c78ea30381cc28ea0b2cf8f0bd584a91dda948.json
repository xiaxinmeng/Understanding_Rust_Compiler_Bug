{"sha": "a6c78ea30381cc28ea0b2cf8f0bd584a91dda948", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjNzhlYTMwMzgxY2MyOGVhMGIyY2Y4ZjBiZDU4NGE5MWRkYTk0OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-01T15:38:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-01T15:38:14Z"}, "message": "re PR target/68491 (libgcc calls __get_cpuid with 0 level breaks on early 486)\n\n\tPR target/68491\n\t* config/i386/cpuid.h (__get_cpuid): Always return 0 when\n\t__get_cpuid_max returns 0.\n\t(__get_cpuid_count): Ditto.\n\nFrom-SVN: r247439", "tree": {"sha": "49a39e8cce8ab3c31b76d4abbc5c9224cfec8930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49a39e8cce8ab3c31b76d4abbc5c9224cfec8930"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948/comments", "author": null, "committer": null, "parents": [{"sha": "723f4140da3d33c70b25941382bf345dd60ed18f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/723f4140da3d33c70b25941382bf345dd60ed18f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/723f4140da3d33c70b25941382bf345dd60ed18f"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "c58e4173880df908cbb6e928fa4c49b60c29ec09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6c78ea30381cc28ea0b2cf8f0bd584a91dda948", "patch": "@@ -1,3 +1,10 @@\n+2017-05-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/68491\n+\t* config/i386/cpuid.h (__get_cpuid): Always return 0 when\n+\t__get_cpuid_max returns 0.\n+\t(__get_cpuid_count): Ditto.\n+\n 2017-05-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree.c (substitute_in_expr) <tcc_vl_exp>: Also inline a call if the\n@@ -79,7 +86,7 @@\n \t(init_target_to_host_charmap, target_to_host, target_strtol10): New\n \tfunctions.\n \t(maybe_warn, format_directive, parse_directive): Use new functions.\n-\t(pass_sprintf_length::execute): Call init_target_to_host_charmap.\t\n+\t(pass_sprintf_length::execute): Call init_target_to_host_charmap.\n \n 2017-04-28  Marc Glisse  <marc.glisse@inria.fr>\n \n@@ -106,7 +113,7 @@\n \t* ipa-inline-analysis.c (estimate_node_size_and_time,\n \testimate_ipcp_clone_size_and_time, do_estimate_edge_time): Likewise.\n \t(estimate_time_after_inlining): Remove.\n-\t\n+\n 2017-04-28  Martin Liska  <mliska@suse.cz>\n \n \t* doc/gcov.texi: Enhance documentation of gcov."}, {"sha": "f915d2dbd5a58a850772f9c869a5b5017c17ca2d", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c78ea30381cc28ea0b2cf8f0bd584a91dda948/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=a6c78ea30381cc28ea0b2cf8f0bd584a91dda948", "patch": "@@ -246,8 +246,9 @@ __get_cpuid (unsigned int __leaf,\n \t     unsigned int *__ecx, unsigned int *__edx)\n {\n   unsigned int __ext = __leaf & 0x80000000;\n+  unsigned int __maxlevel = __get_cpuid_max (__ext, 0);\n \n-  if (__get_cpuid_max (__ext, 0) < __leaf)\n+  if (__maxlevel == 0 || __maxlevel < __leaf)\n     return 0;\n \n   __cpuid (__leaf, *__eax, *__ebx, *__ecx, *__edx);\n@@ -262,8 +263,9 @@ __get_cpuid_count (unsigned int __leaf, unsigned int __subleaf,\n \t\t   unsigned int *__ecx, unsigned int *__edx)\n {\n   unsigned int __ext = __leaf & 0x80000000;\n+  unsigned int __maxlevel = __get_cpuid_max (__ext, 0);\n \n-  if (__get_cpuid_max (__ext, 0) < __leaf)\n+  if (__maxlevel == 0 || __maxlevel < __leaf)\n     return 0;\n \n   __cpuid_count (__leaf, __subleaf, *__eax, *__ebx, *__ecx, *__edx);"}]}