{"sha": "eaba57fb0a6e78750c116ff716071f6f46a0db2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFiYTU3ZmIwYTZlNzg3NTBjMTE2ZmY3MTYwNzFmNmY0NmEwZGIyYw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-02T08:58:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T08:58:37Z"}, "message": "sem_ch12.adb, [...]: New calling sequence for Analyze_Aspect_Specifications\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch12.adb, sem_ch11.adb: New calling sequence for\n\tAnalyze_Aspect_Specifications\n\t* sem_ch13.adb\n\t(Analyze_Aspect_Specifications): New handling for boolean aspects\n\t* sem_ch13.ads (Analyze_Aspect_Specifications): New calling sequence\n\t* sem_ch3.adb, sem_ch6.adb, sem_ch7.adb, sem_ch9.adb: New calling\n\tsequence for Analyze_Aspect_Specifications\n\t* sem_prag.adb (Analyze_Pragma): Remove use of Aspect_Cancel entirely\n\t* sinfo.ads, sinfo.adb (Aspect_Cancel): Remove, no longer used\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Remove handling of delayed boolean\n\taspects, since these no longer exist.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch13.adb (Aspect_Specifications_Present): Always return false on\n\tsemicolon, do not try to see if there are aspects following it.\n\t* par-ch3.adb (P_Declarative_Items): Better message for unexpected\n\taspect spec.\n\nFrom-SVN: r177095", "tree": {"sha": "a78073d9929183ac16f0ad682c43b827f7601339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a78073d9929183ac16f0ad682c43b827f7601339"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaba57fb0a6e78750c116ff716071f6f46a0db2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaba57fb0a6e78750c116ff716071f6f46a0db2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaba57fb0a6e78750c116ff716071f6f46a0db2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaba57fb0a6e78750c116ff716071f6f46a0db2c/comments", "author": null, "committer": null, "parents": [{"sha": "8830d1d2a25268b60eba9b47d62f4ddabec6d428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8830d1d2a25268b60eba9b47d62f4ddabec6d428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8830d1d2a25268b60eba9b47d62f4ddabec6d428"}], "stats": {"total": 610, "additions": 298, "deletions": 312}, "files": [{"sha": "02238304889968c81aaafe783619f973ce900fb9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -1,3 +1,27 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch12.adb, sem_ch11.adb: New calling sequence for\n+\tAnalyze_Aspect_Specifications\n+\t* sem_ch13.adb\n+\t(Analyze_Aspect_Specifications): New handling for boolean aspects\n+\t* sem_ch13.ads (Analyze_Aspect_Specifications): New calling sequence\n+\t* sem_ch3.adb, sem_ch6.adb, sem_ch7.adb, sem_ch9.adb: New calling\n+\tsequence for Analyze_Aspect_Specifications\n+\t* sem_prag.adb (Analyze_Pragma): Remove use of Aspect_Cancel entirely\n+\t* sinfo.ads, sinfo.adb (Aspect_Cancel): Remove, no longer used\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Remove handling of delayed boolean\n+\taspects, since these no longer exist.\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch13.adb (Aspect_Specifications_Present): Always return false on\n+\tsemicolon, do not try to see if there are aspects following it.\n+\t* par-ch3.adb (P_Declarative_Items): Better message for unexpected\n+\taspect spec.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch8.adb, aspects.ads: Minor reformatting."}, {"sha": "98a6571abdfbf607f032c0d20fffa47255eef281", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -2395,10 +2395,6 @@ package body Freeze is\n       --  is required to be delayed to the freeze point, so we evaluate the\n       --  pragma or attribute definition clause in the tree at this point.\n \n-      --  We also have to deal with the case of Boolean aspects, where the\n-      --  value of the Boolean expression is represented by the setting of\n-      --  the Aspect_Cancel flag on the pragma.\n-\n       if Has_Delayed_Aspects (E) then\n          declare\n             Ritem : Node_Id;\n@@ -2415,34 +2411,6 @@ package body Freeze is\n                then\n                   Aitem := Aspect_Rep_Item (Ritem);\n                   Set_Parent (Aitem, Ritem);\n-\n-                  --  Deal with Boolean case, if no expression, True, otherwise\n-                  --  analyze the expression, check it is static, and if its\n-                  --  value is False, set Aspect_Cancel for the related pragma.\n-\n-                  if Is_Boolean_Aspect (Ritem) then\n-                     declare\n-                        Expr : constant Node_Id := Expression (Ritem);\n-\n-                     begin\n-                        if Present (Expr) then\n-                           Analyze_And_Resolve (Expr, Standard_Boolean);\n-\n-                           if not Is_OK_Static_Expression (Expr) then\n-                              Error_Msg_Name_1 := Chars (Identifier (Ritem));\n-                              Error_Msg_N\n-                                (\"expression for % aspect must be static\",\n-                                 Expr);\n-\n-                           elsif Is_False (Expr_Value (Expr)) then\n-                              Set_Aspect_Cancel (Aitem);\n-                           end if;\n-                        end if;\n-                     end;\n-                  end if;\n-\n-                  --  Analyze the pragma after possibly setting Aspect_Cancel\n-\n                   Analyze (Aitem);\n                end if;\n "}, {"sha": "55dd75fb701af1cd9cd19e452109f3eca4bdd876", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -46,30 +46,18 @@ package body Ch13 is\n       Result     : Boolean;\n \n    begin\n-      Save_Scan_State (Scan_State);\n-\n-      --  If we have a semicolon, test for semicolon followed by Aspect\n-      --  Specifications, in which case we decide the semicolon is accidental.\n-\n-      if Token = Tok_Semicolon then\n-         Scan; -- past semicolon\n+      --  Definitely must have WITH to consider aspect specs to be present\n \n-         --  The recursive test is set Strict, since we already have one\n-         --  error (the unexpected semicolon), so we will ignore that semicolon\n-         --  only if we absolutely definitely have an aspect specification\n-         --  following it.\n+      --  Note that this means that if we have a semicolon, we immediately\n+      --  return False. There is a case in which this is not optimal, namely\n+      --  something like\n \n-         if Aspect_Specifications_Present (Strict => True) then\n-            Error_Msg_SP (\"|extra \"\";\"\" ignored\");\n-            return True;\n+      --    type R is new Integer;\n+      --      with bla bla;\n \n-         else\n-            Restore_Scan_State (Scan_State);\n-            return False;\n-         end if;\n-      end if;\n-\n-      --  Definitely must have WITH to consider aspect specs to be present\n+      --  where the semicolon is redundant, but scanning forward for it would\n+      --  be too expensive. Instead we pick up the aspect specifications later\n+      --  as a bogus declaration, and diagnose the semicolon at that point.\n \n       if Token /= Tok_With then\n          return False;"}, {"sha": "89617e61cc14abac07fcf5d940c40e10f7a7076c", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -4274,8 +4274,42 @@ package body Ch3 is\n \n          when Tok_With =>\n             Check_Bad_Layout;\n-            Error_Msg_SC (\"WITH can only appear in context clause\");\n-            raise Error_Resync;\n+\n+            if Aspect_Specifications_Present then\n+\n+               --  If we are after a semicolon, complain that it was ignored.\n+               --  But we don't really ignore it, since we dump the aspects,\n+               --  so we make the error message a normal fatal message which\n+               --  will inhibit semantic analysis anyway).\n+\n+               if Prev_Token = Tok_Semicolon then\n+                  Error_Msg_SP -- CODEFIX\n+                    (\"extra \"\";\"\" ignored\");\n+\n+               --  If not just past semicolon, just complain that aspects are\n+               --  not allowed at this point.\n+\n+               else\n+                  Error_Msg_SC (\"aspect specifications not allowed here\");\n+               end if;\n+\n+               declare\n+                  Dummy_Node : constant Node_Id :=\n+                                 New_Node (N_Package_Specification, Token_Ptr);\n+                  pragma Warnings (Off, Dummy_Node);\n+                  --  Dummy node to attach aspect specifications to. We will\n+                  --  then throw them away.\n+\n+               begin\n+                  P_Aspect_Specifications (Dummy_Node, Semicolon => True);\n+               end;\n+\n+            --  Here if not aspect specifications case\n+\n+            else\n+               Error_Msg_SC (\"WITH can only appear in context clause\");\n+               raise Error_Resync;\n+            end if;\n \n          --  BEGIN terminates the scan of a sequence of declarations unless\n          --  there is a missing subprogram body, see section on handling"}, {"sha": "35d55599d7cd8826ce23009b30e99c6cc491a8f0", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Checks;   use Checks;\n with Einfo;    use Einfo;\n@@ -65,7 +64,10 @@ package body Sem_Ch11 is\n       Set_Etype                   (Id, Standard_Exception_Type);\n       Set_Is_Statically_Allocated (Id);\n       Set_Is_Pure                 (Id, PF);\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Exception_Declaration;\n \n    --------------------------------"}, {"sha": "e688485fb597b3a7345430f18821ef2f909fb9fb", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -1925,7 +1925,9 @@ package body Sem_Ch12 is\n          end if;\n       end if;\n \n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Formal_Object_Declaration;\n \n    ----------------------------------------------\n@@ -2280,8 +2282,10 @@ package body Sem_Ch12 is\n       Set_Scope (Pack_Id, Scope (Formal));\n       Set_Has_Completion (Pack_Id, True);\n \n-      <<Leave>>\n-         Analyze_Aspect_Specifications (N, Pack_Id, Aspect_Specifications (N));\n+   <<Leave>>\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Pack_Id);\n+      end if;\n    end Analyze_Formal_Package_Declaration;\n \n    ---------------------------------\n@@ -2501,8 +2505,11 @@ package body Sem_Ch12 is\n          end if;\n       end if;\n \n-      <<Leave>>\n-         Analyze_Aspect_Specifications (N, Nam, Aspect_Specifications (N));\n+   <<Leave>>\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Nam);\n+      end if;\n+\n    end Analyze_Formal_Subprogram_Declaration;\n \n    -------------------------------------\n@@ -2576,7 +2583,10 @@ package body Sem_Ch12 is\n       end case;\n \n       Set_Is_Generic_Type (T);\n-      Analyze_Aspect_Specifications (N, T, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, T);\n+      end if;\n    end Analyze_Formal_Type_Declaration;\n \n    ------------------------------------\n@@ -2754,7 +2764,9 @@ package body Sem_Ch12 is\n          end if;\n       end if;\n \n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Generic_Package_Declaration;\n \n    --------------------------------------------\n@@ -2882,7 +2894,10 @@ package body Sem_Ch12 is\n       Generate_Reference_To_Formals (Id);\n \n       List_Inherited_Pre_Post_Aspects (Id);\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Generic_Subprogram_Declaration;\n \n    -----------------------------------\n@@ -3556,9 +3571,10 @@ package body Sem_Ch12 is\n          Set_Defining_Identifier (N, Act_Decl_Id);\n       end if;\n \n-      <<Leave>>\n-         Analyze_Aspect_Specifications\n-           (N, Act_Decl_Id, Aspect_Specifications (N));\n+   <<Leave>>\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Act_Decl_Id);\n+      end if;\n \n    exception\n       when Instantiation_Error =>\n@@ -4336,9 +4352,10 @@ package body Sem_Ch12 is\n          Generic_Renamings_HTable.Reset;\n       end if;\n \n-      <<Leave>>\n-         Analyze_Aspect_Specifications\n-           (N, Act_Decl_Id, Aspect_Specifications (N));\n+   <<Leave>>\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Act_Decl_Id);\n+      end if;\n \n    exception\n       when Instantiation_Error =>"}, {"sha": "d5d7bfac18bb71882ad3fc44cc204bc0e20c0f88", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 91, "deletions": 56, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -78,16 +78,6 @@ package body Sem_Ch13 is\n    --  inherited from a derived type that is no longer appropriate for the\n    --  new Esize value. In this case, we reset the Alignment to unknown.\n \n-   procedure Analyze_Non_Null_Aspect_Specifications\n-     (N : Node_Id;\n-      E : Entity_Id;\n-      L : List_Id);\n-   --  This procedure is called to analyze aspect specifications for node N.\n-   --  E is the corresponding entity declared by the declaration node N, and\n-   --  L is the list of aspect specifications for this node. This procedure\n-   --  does the real work, as opposed to Analyze_Aspect_Specifications which\n-   --  is inlined to fast-track the common case.\n-\n    procedure Build_Predicate_Function (Typ : Entity_Id; N : Node_Id);\n    --  If Typ has predicates (indicated by Has_Predicates being set for Typ,\n    --  then either there are pragma Invariant entries on the rep chain for the\n@@ -693,34 +683,13 @@ package body Sem_Ch13 is\n    -- Analyze_Aspect_Specifications --\n    -----------------------------------\n \n-   procedure Analyze_Aspect_Specifications\n-     (N : Node_Id;\n-      E : Entity_Id;\n-      L : List_Id)\n-   is\n-   begin\n-      --  Return if no aspects\n-\n-      if L = No_List then\n-         return;\n-      end if;\n-\n-      Analyze_Non_Null_Aspect_Specifications (N, E, L);\n-   end Analyze_Aspect_Specifications;\n-\n-   --------------------------------------------\n-   -- Analyze_Non_Null_Aspect_Specifications --\n-   --------------------------------------------\n-\n-   procedure Analyze_Non_Null_Aspect_Specifications\n-     (N : Node_Id;\n-      E : Entity_Id;\n-      L : List_Id)\n-   is\n+   procedure Analyze_Aspect_Specifications (N : Node_Id; E : Entity_Id) is\n       Aspect : Node_Id;\n       Aitem  : Node_Id;\n       Ent    : Node_Id;\n \n+      L : constant List_Id := Aspect_Specifications (N);\n+\n       Ins_Node : Node_Id := N;\n       --  Insert pragmas (except Pre/Post/Invariant/Predicate) after this node\n \n@@ -744,10 +713,12 @@ package body Sem_Ch13 is\n       --  Set True if delay is required\n \n    begin\n+      pragma Assert (Present (L));\n+\n       --  Loop through aspects\n \n       Aspect := First (L);\n-      while Present (Aspect) loop\n+      Aspect_Loop : while Present (Aspect) loop\n          declare\n             Loc  : constant Source_Ptr := Sloc (Aspect);\n             Id   : constant Node_Id    := Identifier (Aspect);\n@@ -759,6 +730,72 @@ package body Sem_Ch13 is\n             Eloc : Source_Ptr := Sloc (Expr);\n             --  Source location of expression, modified when we split PPC's\n \n+            procedure Check_False_Aspect_For_Derived_Type;\n+            --  This procedure checks for the case of a false aspect for a\n+            --  derived type, which improperly tries to cancel an aspect\n+            --  inherited from the parent;\n+\n+            -----------------------------------------\n+            -- Check_False_Aspect_For_Derived_Type --\n+            -----------------------------------------\n+\n+            procedure Check_False_Aspect_For_Derived_Type is\n+            begin\n+               --  We are only checking derived types\n+\n+               if not Is_Derived_Type (E) then\n+                  return;\n+               end if;\n+\n+               case A_Id is\n+                  when Aspect_Atomic | Aspect_Shared =>\n+                     if not Is_Atomic (E) then\n+                        return;\n+                     end if;\n+\n+                  when Aspect_Atomic_Components =>\n+                     if not Has_Atomic_Components (E) then\n+                        return;\n+                     end if;\n+\n+                  when Aspect_Discard_Names =>\n+                     if not Discard_Names (E) then\n+                        return;\n+                     end if;\n+\n+                  when Aspect_Pack =>\n+                     if not Is_Packed (E) then\n+                        return;\n+                     end if;\n+\n+                  when Aspect_Unchecked_Union =>\n+                     if not Is_Unchecked_Union (E) then\n+                        return;\n+                     end if;\n+\n+                  when Aspect_Volatile =>\n+                     if not Is_Volatile (E) then\n+                        return;\n+                     end if;\n+\n+                  when Aspect_Volatile_Components =>\n+                     if not Has_Volatile_Components (E) then\n+                        return;\n+                     end if;\n+\n+                  when others =>\n+                     return;\n+               end case;\n+\n+               --  Fall through means we are canceling an inherited aspect\n+\n+               Error_Msg_Name_1 := Nam;\n+               Error_Msg_NE\n+                 (\"derived type& inherits aspect%, cannot cancel\", Expr, E);\n+            end Check_False_Aspect_For_Derived_Type;\n+\n+         --  Start of processing for Aspect_Loop\n+\n          begin\n             --  Skip aspect if already analyzed (not clear if this is needed)\n \n@@ -837,39 +874,37 @@ package body Sem_Ch13 is\n                   raise Program_Error;\n \n                --  Aspects taking an optional boolean argument. For all of\n-               --  these we just create a matching pragma and insert it. When\n-               --  the aspect is processed to insert the pragma, the expression\n-               --  is analyzed, setting Cancel_Aspect if the value is False.\n+               --  these we just create a matching pragma and insert it, if\n+               --  the expression is missing or set to True. If the expression\n+               --  is False, we can ignore the aspect with the exception that\n+               --  in the case of a derived type, we must check for an illegal\n+               --  attempt to cancel an inherited aspect.\n \n                when Boolean_Aspects =>\n                   Set_Is_Boolean_Aspect (Aspect);\n \n-                  --  Build corresponding pragma node\n+                  if Present (Expr)\n+                    and then Is_False (Static_Boolean (Expr))\n+                  then\n+                     Check_False_Aspect_For_Derived_Type;\n+                     goto Continue;\n+                  end if;\n+\n+                  --  If True, build corresponding pragma node\n \n                   Aitem :=\n                     Make_Pragma (Loc,\n                       Pragma_Argument_Associations => New_List (Ent),\n                       Pragma_Identifier            =>\n                         Make_Identifier (Sloc (Id), Chars (Id)));\n \n-                  --  No delay required if no expression (nothing to delay!)\n-\n-                  if No (Expr) then\n-                     Delay_Required := False;\n-\n-                  --  Expression is present, delay is required. Note that\n-                  --  even if the expression is \"True\", some idiot might\n-                  --  define True as False before the freeze point!\n+                  --  Never need to delay for boolean aspects\n \n-                  else\n-                     Delay_Required := True;\n-                     Set_Is_Delayed_Aspect (Aspect);\n-                  end if;\n+                  Delay_Required := False;\n \n                --  Library unit aspects. These are boolean aspects, but we\n-               --  always evaluate the expression right away if it is present\n-               --  and just ignore the aspect if the expression is False. We\n-               --  never delay expression evaluation in this case.\n+               --  have to do special things with the insertion, since the\n+               --  pragma belongs inside the declarations of a package.\n \n                when Library_Unit_Aspects =>\n                   if Present (Expr)\n@@ -1220,8 +1255,8 @@ package body Sem_Ch13 is\n \n          <<Continue>>\n             Next (Aspect);\n-      end loop;\n-   end Analyze_Non_Null_Aspect_Specifications;\n+      end loop Aspect_Loop;\n+   end Analyze_Aspect_Specifications;\n \n    -----------------------\n    -- Analyze_At_Clause --"}, {"sha": "742b88dc7d83bd6fa55ee2cd02ca07cf8def75e9", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -36,17 +36,10 @@ package Sem_Ch13 is\n    procedure Analyze_Record_Representation_Clause       (N : Node_Id);\n    procedure Analyze_Code_Statement                     (N : Node_Id);\n \n-   procedure Analyze_Aspect_Specifications\n-     (N : Node_Id;\n-      E : Entity_Id;\n-      L : List_Id);\n-   --  This procedure is called to analyze aspect specifications for node N.\n-   --  E is the corresponding entity declared by the declaration node N, and\n-   --  L is the list of aspect specifications for this node. If L is No_List,\n-   --  the call is ignored. Note that we can't use a simpler interface of just\n-   --  passing the node N, since the analysis of the node may cause it to be\n-   --  rewritten to a node not permitting aspect specifications.\n-   pragma Inline (Analyze_Aspect_Specifications);\n+   procedure Analyze_Aspect_Specifications (N : Node_Id; E : Entity_Id);\n+   --  This procedure is called to analyze aspect specifications for node N. E\n+   --  is the corresponding entity declared by the declaration node N. Callers\n+   --  should check that Has_Aspects (N) is True before calling this routine.\n \n    procedure Adjust_Record_For_Reverse_Bit_Order (R : Entity_Id);\n    --  Called from Freeze where R is a record entity for which reverse bit"}, {"sha": "ec1ff216080269d5ff48b5cb4e7d08315759ca8e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Checks;   use Checks;\n with Debug;    use Debug;\n@@ -2016,7 +2015,10 @@ package body Sem_Ch3 is\n       end if;\n \n       Set_Original_Record_Component (Id, Id);\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Component_Declaration;\n \n    --------------------------\n@@ -2491,7 +2493,9 @@ package body Sem_Ch3 is\n       Set_Optimize_Alignment_Flags (Def_Id);\n       Check_Eliminated (Def_Id);\n \n-      Analyze_Aspect_Specifications (N, Def_Id, Aspect_Specifications (N));\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Def_Id);\n+      end if;\n    end Analyze_Full_Type_Declaration;\n \n    ----------------------------------\n@@ -3704,7 +3708,9 @@ package body Sem_Ch3 is\n       end if;\n \n    <<Leave>>\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Object_Declaration;\n \n    ---------------------------\n@@ -3943,8 +3949,10 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n-      <<Leave>>\n-         Analyze_Aspect_Specifications (N, T, Aspect_Specifications (N));\n+   <<Leave>>\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, T);\n+      end if;\n    end Analyze_Private_Extension_Declaration;\n \n    ---------------------------------\n@@ -4413,7 +4421,9 @@ package body Sem_Ch3 is\n       Check_Eliminated (Id);\n \n    <<Leave>>\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Subtype_Declaration;\n \n    --------------------------------"}, {"sha": "8d0edcc2128749f7de11214a79324a7fad597a7c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Checks;   use Checks;\n with Debug;    use Debug;\n@@ -263,7 +262,10 @@ package body Sem_Ch6 is\n \n       Generate_Reference_To_Formals (Designator);\n       Check_Eliminated (Designator);\n-      Analyze_Aspect_Specifications (N, Designator, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Designator);\n+      end if;\n    end Analyze_Abstract_Subprogram_Declaration;\n \n    ---------------------------------\n@@ -3067,7 +3069,10 @@ package body Sem_Ch6 is\n       end if;\n \n       List_Inherited_Pre_Post_Aspects (Designator);\n-      Analyze_Aspect_Specifications (N, Designator, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Designator);\n+      end if;\n    end Analyze_Subprogram_Declaration;\n \n    --------------------------------------"}, {"sha": "b36c60069a565bdcebf6331f4bf71e1bc3427265", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -28,7 +28,6 @@\n --  handling of private and full declarations, and the construction of dispatch\n --  tables for tagged types.\n \n-with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n@@ -763,7 +762,9 @@ package body Sem_Ch7 is\n       --  Analye aspect specifications immediately, since we need to recognize\n       --  things like Pure early enough to diagnose violations during analysis.\n \n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n \n       --  Ada 2005 (AI-217): Check if the package has been erroneously named\n       --  in a limited-with clause of its own context. In this case the error\n@@ -1405,7 +1406,10 @@ package body Sem_Ch7 is\n \n       New_Private_Type (N, Id, N);\n       Set_Depends_On_Private (Id);\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Private_Type_Declaration;\n \n    ----------------------------------"}, {"sha": "280c0e91fcb66120bfeeae25cfd2ce6979b8ec36", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -976,7 +976,10 @@ package body Sem_Ch9 is\n       end if;\n \n       Generate_Reference_To_Formals (Def_Id);\n-      Analyze_Aspect_Specifications (N, Def_Id, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Def_Id);\n+      end if;\n    end Analyze_Entry_Declaration;\n \n    ---------------------------------------\n@@ -1336,8 +1339,10 @@ package body Sem_Ch9 is\n          end if;\n       end if;\n \n-      <<Leave>>\n-         Analyze_Aspect_Specifications (N, Def_Id, Aspect_Specifications (N));\n+   <<Leave>>\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Def_Id);\n+      end if;\n    end Analyze_Protected_Type_Declaration;\n \n    ---------------------\n@@ -1806,7 +1811,10 @@ package body Sem_Ch9 is\n       --  disastrous result.\n \n       Analyze_Protected_Type_Declaration (N);\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Single_Protected_Declaration;\n \n    -------------------------------------\n@@ -1873,7 +1881,10 @@ package body Sem_Ch9 is\n       --  disastrous result.\n \n       Analyze_Task_Type_Declaration (N);\n-      Analyze_Aspect_Specifications (N, Id, Aspect_Specifications (N));\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Single_Task_Declaration;\n \n    -----------------------\n@@ -2152,7 +2163,9 @@ package body Sem_Ch9 is\n          end if;\n       end if;\n \n-      Analyze_Aspect_Specifications (N, Def_Id, Aspect_Specifications (N));\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Def_Id);\n+      end if;\n    end Analyze_Task_Type_Declaration;\n \n    -----------------------------------"}, {"sha": "9b68124181ffe938c4fd971650ee48dfb7802d93", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 48, "deletions": 122, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -270,13 +270,6 @@ package body Sem_Prag is\n       Pname   : constant Name_Id    := Pragma_Name (N);\n       Prag_Id : Pragma_Id;\n \n-      Sense : constant Boolean := not Aspect_Cancel (N);\n-      --  Sense is True if we have the normal case of a pragma that is active\n-      --  and turns the corresponding aspect on. It is false only for the case\n-      --  of a pragma coming from an aspect which is explicitly turned off by\n-      --  using aspect => False. If Sense is False, the effect of the pragma\n-      --  is to turn the corresponding aspect off.\n-\n       Pragma_Exit : exception;\n       --  This exception is used to exit pragma processing completely. It is\n       --  used when an error is detected, and no further processing is\n@@ -2461,9 +2454,9 @@ package body Sem_Prag is\n \n          procedure Set_Atomic (E : Entity_Id) is\n          begin\n-            Set_Is_Atomic (E, Sense);\n+            Set_Is_Atomic (E);\n \n-            if Sense and then not Has_Alignment_Clause (E) then\n+            if not Has_Alignment_Clause (E) then\n                Set_Alignment (E, Uint_0);\n             end if;\n          end Set_Atomic;\n@@ -2510,11 +2503,11 @@ package body Sem_Prag is\n             --  Attribute belongs on the base type. If the view of the type is\n             --  currently private, it also belongs on the underlying type.\n \n-            Set_Is_Volatile (Base_Type (E), Sense);\n-            Set_Is_Volatile (Underlying_Type (E), Sense);\n+            Set_Is_Volatile (Base_Type (E));\n+            Set_Is_Volatile (Underlying_Type (E));\n \n-            Set_Treat_As_Volatile (E, Sense);\n-            Set_Treat_As_Volatile (Underlying_Type (E), Sense);\n+            Set_Treat_As_Volatile (E);\n+            Set_Treat_As_Volatile (Underlying_Type (E));\n \n          elsif K = N_Object_Declaration\n            or else (K = N_Component_Declaration\n@@ -2525,15 +2518,14 @@ package body Sem_Prag is\n             end if;\n \n             if Prag_Id /= Pragma_Volatile then\n-               Set_Is_Atomic (E, Sense);\n+               Set_Is_Atomic (E);\n \n                --  If the object declaration has an explicit initialization, a\n                --  temporary may have to be created to hold the expression, to\n                --  ensure that access to the object remain atomic.\n \n                if Nkind (Parent (E)) = N_Object_Declaration\n                  and then Present (Expression (Parent (E)))\n-                 and then Sense\n                then\n                   Set_Has_Delayed_Freeze (E);\n                end if;\n@@ -2554,7 +2546,7 @@ package body Sem_Prag is\n                    Get_Source_File_Index (Sloc (E)) =\n                    Get_Source_File_Index (Sloc (Underlying_Type (Etype (E))))\n                then\n-                  Set_Is_Atomic (Underlying_Type (Etype (E)), Sense);\n+                  Set_Is_Atomic (Underlying_Type (Etype (E)));\n                end if;\n             end if;\n \n@@ -4155,7 +4147,10 @@ package body Sem_Prag is\n          Subp_Id   : Node_Id;\n          Subp      : Entity_Id;\n          Applies   : Boolean;\n+\n          Effective : Boolean := False;\n+         --  Set True if inline has some effect, i.e. if there is at least one\n+         --  subprogram set as inlined as a result of the use of the pragma.\n \n          procedure Make_Inline (Subp : Entity_Id);\n          --  Subp is the defining unit name of the subprogram declaration. Set\n@@ -4299,11 +4294,6 @@ package body Sem_Prag is\n             --  entity (if declared in the same unit) is inlined.\n \n             if Is_Subprogram (Subp) then\n-\n-               if not Sense then\n-                  return;\n-               end if;\n-\n                Inner_Subp := Ultimate_Alias (Inner_Subp);\n \n                if In_Same_Source_Unit (Subp, Inner_Subp) then\n@@ -4364,16 +4354,16 @@ package body Sem_Prag is\n          procedure Set_Inline_Flags (Subp : Entity_Id) is\n          begin\n             if Active then\n-               Set_Is_Inlined (Subp, Sense);\n+               Set_Is_Inlined (Subp);\n             end if;\n \n             if not Has_Pragma_Inline (Subp) then\n-               Set_Has_Pragma_Inline (Subp, Sense);\n+               Set_Has_Pragma_Inline (Subp);\n                Effective := True;\n             end if;\n \n             if Prag_Id = Pragma_Inline_Always then\n-               Set_Has_Pragma_Inline_Always (Subp, Sense);\n+               Set_Has_Pragma_Inline_Always (Subp);\n             end if;\n          end Set_Inline_Flags;\n \n@@ -5846,12 +5836,7 @@ package body Sem_Prag is\n \n                --  Now set appropriate Ada mode\n \n-               if Sense then\n-                  Ada_Version := Ada_2005;\n-               else\n-                  Ada_Version := Ada_Version_Default;\n-               end if;\n-\n+               Ada_Version          := Ada_2005;\n                Ada_Version_Explicit := Ada_2005;\n             end if;\n          end;\n@@ -5899,12 +5884,7 @@ package body Sem_Prag is\n \n                --  Now set appropriate Ada mode\n \n-               if Sense then\n-                  Ada_Version := Ada_2012;\n-               else\n-                  Ada_Version := Ada_Version_Default;\n-               end if;\n-\n+               Ada_Version          := Ada_2012;\n                Ada_Version_Explicit := Ada_2012;\n             end if;\n          end;\n@@ -6378,10 +6358,10 @@ package body Sem_Prag is\n                   E := Base_Type (E);\n                end if;\n \n-               Set_Has_Volatile_Components (E, Sense);\n+               Set_Has_Volatile_Components (E);\n \n                if Prag_Id = Pragma_Atomic_Components then\n-                  Set_Has_Atomic_Components (E, Sense);\n+                  Set_Has_Atomic_Components (E);\n                end if;\n \n             else\n@@ -7398,7 +7378,7 @@ package body Sem_Prag is\n                   --  defined in the current declarative part, and recursively\n                   --  to any nested scope.\n \n-                  Set_Discard_Names (Current_Scope, Sense);\n+                  Set_Discard_Names (Current_Scope);\n                   return;\n \n                else\n@@ -7419,7 +7399,7 @@ package body Sem_Prag is\n                         (Is_Enumeration_Type (E) or else Is_Tagged_Type (E)))\n                     or else Ekind (E) = E_Exception\n                   then\n-                     Set_Discard_Names (E, Sense);\n+                     Set_Discard_Names (E);\n                   else\n                      Error_Pragma_Arg\n                        (\"inappropriate entity for pragma%\", Arg1);\n@@ -8256,9 +8236,7 @@ package body Sem_Prag is\n             --  subtype), set the flag on that type.\n \n             if Is_Access_Subprogram_Type (Named_Entity) then\n-               if Sense then\n-                  Set_Can_Use_Internal_Rep (Named_Entity, False);\n-               end if;\n+               Set_Can_Use_Internal_Rep (Named_Entity, False);\n \n             --  Otherwise it's an error (name denotes the wrong sort of entity)\n \n@@ -10928,43 +10906,11 @@ package body Sem_Prag is\n \n                   else\n                      if not Ignore then\n-                        Set_Is_Packed            (Base_Type (Typ), Sense);\n-                        Set_Has_Non_Standard_Rep (Base_Type (Typ), Sense);\n+                        Set_Is_Packed            (Base_Type (Typ));\n+                        Set_Has_Non_Standard_Rep (Base_Type (Typ));\n                      end if;\n \n-                     Set_Has_Pragma_Pack (Base_Type (Typ), Sense);\n-\n-                     --  Complete reset action for Aspect_Cancel case\n-\n-                     if Sense = False then\n-\n-                        --  Cancel size unless explicitly set\n-\n-                        if not Has_Size_Clause (Typ)\n-                           and then not Has_Object_Size_Clause (Typ)\n-                        then\n-                           Set_Esize     (Typ, Uint_0);\n-                           Set_RM_Size   (Typ, Uint_0);\n-                           Set_Alignment (Typ, Uint_0);\n-                           Set_Packed_Array_Type (Typ, Empty);\n-                        end if;\n-\n-                        --  Reset component size unless explicitly set\n-\n-                        if not Has_Component_Size_Clause (Typ) then\n-                           if Known_Static_Esize (Ctyp)\n-                             and then Known_Static_RM_Size (Ctyp)\n-                             and then Esize (Ctyp) = RM_Size (Ctyp)\n-                             and then Addressable (Esize (Ctyp))\n-                           then\n-                              Set_Component_Size\n-                                (Base_Type (Typ), Esize (Ctyp));\n-                           else\n-                              Set_Component_Size\n-                                (Base_Type (Typ), Uint_0);\n-                           end if;\n-                        end if;\n-                     end if;\n+                     Set_Has_Pragma_Pack (Base_Type (Typ));\n                   end if;\n                end if;\n \n@@ -10985,23 +10931,9 @@ package body Sem_Prag is\n                   --  Normal case of pack request active\n \n                   else\n-                     Set_Is_Packed            (Base_Type (Typ), Sense);\n-                     Set_Has_Pragma_Pack      (Base_Type (Typ), Sense);\n-                     Set_Has_Non_Standard_Rep (Base_Type (Typ), Sense);\n-\n-                     --  Complete reset action for Aspect_Cancel case\n-\n-                     if Sense = False then\n-\n-                        --  Cancel size if not explicitly given\n-\n-                        if not Has_Size_Clause (Typ)\n-                          and then not Has_Object_Size_Clause (Typ)\n-                        then\n-                           Set_Esize     (Typ, Uint_0);\n-                           Set_Alignment (Typ, Uint_0);\n-                        end if;\n-                     end if;\n+                     Set_Is_Packed            (Base_Type (Typ));\n+                     Set_Has_Pragma_Pack      (Base_Type (Typ));\n+                     Set_Has_Non_Standard_Rep (Base_Type (Typ));\n                   end if;\n                end if;\n             end if;\n@@ -11145,13 +11077,11 @@ package body Sem_Prag is\n \n                Check_Duplicate_Pragma (Ent);\n \n-               if Sense then\n-                  Prag :=\n-                    Make_Linker_Section_Pragma\n-                      (Ent, Sloc (N), \".persistent.bss\");\n-                  Insert_After (N, Prag);\n-                  Analyze (Prag);\n-               end if;\n+               Prag :=\n+                 Make_Linker_Section_Pragma\n+                   (Ent, Sloc (N), \".persistent.bss\");\n+               Insert_After (N, Prag);\n+               Analyze (Prag);\n \n             --  Case of use as configuration pragma with no arguments\n \n@@ -11310,11 +11240,11 @@ package body Sem_Prag is\n \n             if Present (Ent)\n               and then not (Pk = N_Package_Specification\n-                              and then Present (Generic_Parent (Pa)))\n+                             and then Present (Generic_Parent (Pa)))\n             then\n                if not Debug_Flag_U then\n-                  Set_Is_Preelaborated (Ent, Sense);\n-                  Set_Suppress_Elaboration_Warnings (Ent, Sense);\n+                  Set_Is_Preelaborated (Ent);\n+                  Set_Suppress_Elaboration_Warnings (Ent);\n                end if;\n             end if;\n          end Preelaborate;\n@@ -11897,19 +11827,19 @@ package body Sem_Prag is\n                        (\"pragma% requires a function name\", Arg1);\n                   end if;\n \n-                  Set_Is_Pure (Def_Id, Sense);\n+                  Set_Is_Pure (Def_Id);\n \n                   if not Has_Pragma_Pure_Function (Def_Id) then\n-                     Set_Has_Pragma_Pure_Function (Def_Id, Sense);\n-                     Effective := Sense;\n+                     Set_Has_Pragma_Pure_Function (Def_Id);\n+                     Effective := True;\n                   end if;\n \n                   exit when From_Aspect_Specification (N);\n                   E := Homonym (E);\n                   exit when No (E) or else Scope (E) /= Current_Scope;\n                end loop;\n \n-               if Sense and then not Effective\n+               if not Effective\n                  and then Warn_On_Redundant_Constructs\n                then\n                   Error_Msg_NE\n@@ -12685,7 +12615,7 @@ package body Sem_Prag is\n             Check_Arg_Count (1);\n             Check_Optional_Identifier (Arg1, Name_Entity);\n             Check_Arg_Is_Local_Name (Arg1);\n-            Set_Debug_Info_Off (Entity (Get_Pragma_Arg (Arg1)), Sense);\n+            Set_Debug_Info_Off (Entity (Get_Pragma_Arg (Arg1)));\n \n          ----------------------------------\n          -- Suppress_Exception_Locations --\n@@ -13129,14 +13059,10 @@ package body Sem_Prag is\n                end loop;\n             end if;\n \n-            Set_Is_Unchecked_Union  (Typ, Sense);\n-\n-            if Sense then\n-               Set_Convention (Typ, Convention_C);\n-            end if;\n-\n-            Set_Has_Unchecked_Union (Base_Type (Typ), Sense);\n-            Set_Is_Unchecked_Union  (Base_Type (Typ), Sense);\n+            Set_Is_Unchecked_Union  (Typ);\n+            Set_Convention (Typ, Convention_C);\n+            Set_Has_Unchecked_Union (Base_Type (Typ));\n+            Set_Is_Unchecked_Union  (Base_Type (Typ));\n          end Unchecked_Union;\n \n          ------------------------\n@@ -13195,7 +13121,7 @@ package body Sem_Prag is\n                Error_Pragma_Arg (\"pragma% requires type\", Arg1);\n             end if;\n \n-            Set_Universal_Aliasing (Implementation_Base_Type (E_Id), Sense);\n+            Set_Universal_Aliasing (Implementation_Base_Type (E_Id));\n          end Universal_Alias;\n \n          --------------------\n@@ -13263,7 +13189,7 @@ package body Sem_Prag is\n                        (\"pragma% can only be applied to a variable\",\n                         Arg_Expr);\n                   else\n-                     Set_Has_Pragma_Unmodified (Arg_Ent, Sense);\n+                     Set_Has_Pragma_Unmodified (Arg_Ent);\n                   end if;\n                end if;\n \n@@ -13358,7 +13284,7 @@ package body Sem_Prag is\n                         Generate_Reference (Arg_Ent, N);\n                      end if;\n \n-                     Set_Has_Pragma_Unreferenced (Arg_Ent, Sense);\n+                     Set_Has_Pragma_Unreferenced (Arg_Ent);\n                   end if;\n \n                   Next (Arg_Node);\n@@ -13393,7 +13319,7 @@ package body Sem_Prag is\n                     (\"argument for pragma% must be type or subtype\", Arg_Node);\n                end if;\n \n-               Set_Has_Pragma_Unreferenced_Objects (Entity (Arg_Expr), Sense);\n+               Set_Has_Pragma_Unreferenced_Objects (Entity (Arg_Expr));\n                Next (Arg_Node);\n             end loop;\n          end Unreferenced_Objects;"}, {"sha": "571541af26e33ab371710b30678f307dc4de8bca", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -256,14 +256,6 @@ package body Sinfo is\n       return Node3 (N);\n    end Array_Aggregate;\n \n-   function Aspect_Cancel\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      return Flag11 (N);\n-   end Aspect_Cancel;\n-\n    function Aspect_Rep_Item\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -3317,14 +3309,6 @@ package body Sinfo is\n       Set_Node3_With_Parent (N, Val);\n    end Set_Array_Aggregate;\n \n-   procedure Set_Aspect_Cancel\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      Set_Flag11 (N, Val);\n-   end Set_Aspect_Cancel;\n-\n    procedure Set_Aspect_Rep_Item\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "cdf71bc51cafa958ed2736f172fe36e3f5723c99", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba57fb0a6e78750c116ff716071f6f46a0db2c/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=eaba57fb0a6e78750c116ff716071f6f46a0db2c", "patch": "@@ -584,14 +584,6 @@ package Sinfo is\n    --    is used for translation of the at end handler into a normal exception\n    --    handler.\n \n-   --  Aspect_Cancel (Flag11-Sem)\n-   --    Processing of aspect specifications typically generates pragmas and\n-   --    attribute definition clauses that are inserted into the tree after\n-   --    the declaration node to get the desired aspect effect. In the case\n-   --    of Boolean aspects that use \"=> False\" to cancel the effect of an\n-   --    aspect (i.e. turn if off), the generated pragma has the Aspect_Cancel\n-   --    flag set to indicate that the pragma operates in the opposite sense.\n-\n    --  Aspect_Rep_Item (Node2-Sem)\n    --    Present in N_Aspect_Specification nodes. Points to the corresponding\n    --    pragma/attribute definition node used to process the aspect.\n@@ -2085,7 +2077,6 @@ package Sinfo is\n       --  From_Aspect_Specification (Flag13-Sem)\n       --  Is_Delayed_Aspect (Flag14-Sem)\n       --  Import_Interface_Present (Flag16-Sem)\n-      --  Aspect_Cancel (Flag11-Sem)\n       --  Split_PPC (Flag17) set if corresponding aspect had Split_PPC set\n       --  Class_Present (Flag6) set if from Aspect with 'Class\n       --  From_Dynamic_Predicate (Flag7-Sem) Set if Dynamic_Predicate aspect\n@@ -8076,9 +8067,6 @@ package Sinfo is\n    function Array_Aggregate\n      (N : Node_Id) return Node_Id;    -- Node3\n \n-   function Aspect_Cancel\n-     (N : Node_Id) return Boolean;    -- Flag11\n-\n    function Aspect_Rep_Item\n      (N : Node_Id) return Node_Id;    -- Node2\n \n@@ -9054,9 +9042,6 @@ package Sinfo is\n    procedure Set_Array_Aggregate\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n-   procedure Set_Aspect_Cancel\n-     (N : Node_Id; Val : Boolean := True);    -- Flag11\n-\n    procedure Set_Aspect_Rep_Item\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n@@ -11709,7 +11694,6 @@ package Sinfo is\n    pragma Inline (Alternatives);\n    pragma Inline (Ancestor_Part);\n    pragma Inline (Array_Aggregate);\n-   pragma Inline (Aspect_Cancel);\n    pragma Inline (Aspect_Rep_Item);\n    pragma Inline (Assignment_OK);\n    pragma Inline (Associated_Node);\n@@ -12032,7 +12016,6 @@ package Sinfo is\n    pragma Inline (Set_Alternatives);\n    pragma Inline (Set_Ancestor_Part);\n    pragma Inline (Set_Array_Aggregate);\n-   pragma Inline (Set_Aspect_Cancel);\n    pragma Inline (Set_Aspect_Rep_Item);\n    pragma Inline (Set_Assignment_OK);\n    pragma Inline (Set_Associated_Node);"}]}