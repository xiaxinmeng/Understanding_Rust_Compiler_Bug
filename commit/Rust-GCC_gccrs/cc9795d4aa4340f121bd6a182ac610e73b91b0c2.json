{"sha": "cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M5Nzk1ZDRhYTQzNDBmMTIxYmQ2YTE4MmFjNjEwZTczYjkxYjBjMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-29T19:38:34Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-29T19:38:34Z"}, "message": "cgraphunit.c, [...]: Fix typos and follow spelling conventions in error/dump messages.\n\n\t* cgraphunit.c, ipa-inline.c, loop-iv.c, modulo-sched.c,\n\topts.c, postreload-gcse.c, tree-browser.def, tree-eh.c,\n\ttree-ssa-copyrename.c, tree-vect-analyze.c: Fix typos and\n\tfollow spelling conventions in error/dump messages.\n\nFrom-SVN: r100330", "tree": {"sha": "346c11fbeaa60e2d6a27520ff73355a3f0cdd1ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/346c11fbeaa60e2d6a27520ff73355a3f0cdd1ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/comments", "author": null, "committer": null, "parents": [{"sha": "cb275d32f7a80e46acd02ff1b1be6678e42dd292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb275d32f7a80e46acd02ff1b1be6678e42dd292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb275d32f7a80e46acd02ff1b1be6678e42dd292"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "773b2d57a560f846d281d66d959efe570db76b87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -1,3 +1,10 @@\n+2005-05-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cgraphunit.c, ipa-inline.c, loop-iv.c, modulo-sched.c,\n+\topts.c, postreload-gcse.c, tree-browser.def, tree-eh.c,\n+\ttree-ssa-copyrename.c, tree-vect-analyze.c: Fix typos and\n+\tfollow spelling conventions in error/dump messages.\n+\n 2005-05-29  Roger Sayle  <roger@eyesopen.com>\n \t    Richard Henderson  <rth@redhat.com>\n "}, {"sha": "67c3c22118d67392deb67789e526c50653a73cc4", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -610,7 +610,7 @@ verify_cgraph_node (struct cgraph_node *node)\n     }\n   if (node->global.inlined_to == node)\n     {\n-      error (\"Inlined_to pointer reffers to itself\");\n+      error (\"Inlined_to pointer refers to itself\");\n       error_found = true;\n     }\n "}, {"sha": "e58ac0f0cfa6cde08f954109c052c6fde0460b63", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -630,7 +630,7 @@ cgraph_decide_inlining_of_small_functions (void)\n \t      edge->inline_failed\n \t\t= (edge->callee->local.disregard_inline_limits ? N_(\"recursive inlining\") : \"\");\n \t      if (dump_file)\n-\t\tfprintf (dump_file, \" inline_failed:Recursive inlining perfomed only for function itself.\\n\");\n+\t\tfprintf (dump_file, \" inline_failed:Recursive inlining performed only for function itself.\\n\");\n \t      continue;\n \t    }\n \t}"}, {"sha": "ba0d64c78f34e2214cd62f1df8f1271fb7766569", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -844,7 +844,7 @@ iv_analyze_biv (rtx def, struct rtx_iv *iv)\n \n   if (dump_file)\n     {\n-      fprintf (dump_file, \"Analysing \");\n+      fprintf (dump_file, \"Analyzing \");\n       print_rtl (dump_file, def);\n       fprintf (dump_file, \" for bivness.\\n\");\n     }\n@@ -927,7 +927,7 @@ iv_analyze_op (rtx insn, rtx op, struct rtx_iv *iv)\n \n   if (dump_file)\n     {\n-      fprintf (dump_file, \"Analysing operand \");\n+      fprintf (dump_file, \"Analyzing operand \");\n       print_rtl (dump_file, op);\n       fprintf (dump_file, \" of insn \");\n       print_rtl_single (dump_file, insn);\n@@ -1012,7 +1012,7 @@ iv_analyze (rtx insn, rtx def, struct rtx_iv *iv)\n \n   if (dump_file)\n     {\n-      fprintf (dump_file, \"Analysing def of \");\n+      fprintf (dump_file, \"Analyzing def of \");\n       print_rtl (dump_file, def);\n       fprintf (dump_file, \" in insn \");\n       print_rtl_single (dump_file, insn);"}, {"sha": "4fc57c546f75ca7f9b2177dd81175bb1b2c46e8b", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -1283,7 +1283,7 @@ sms_schedule (FILE *dump_file)\n \t      /* SMS is not profitable so undo the permutation and reg move generation\n \t         and return the kernel to its original state.  */\n \t      if (dump_file)\n-\t\tfprintf (dump_file, \"Undoing SMS becuase it is not profitable.\\n\");\n+\t\tfprintf (dump_file, \"Undoing SMS because it is not profitable.\\n\");\n \n \t    }\n \t  else"}, {"sha": "44ed37bad4c919cf7f287769fb623ae9f8a41d31", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -927,7 +927,7 @@ common_handle_option (size_t scode, const char *arg, int value)\n         else if (!strcmp(arg, \"protected\"))\n           default_visibility = VISIBILITY_PROTECTED;\n         else\n-          error (\"unrecognised visibility value \\\"%s\\\"\", arg);\n+          error (\"unrecognized visibility value \\\"%s\\\"\", arg);\n       }\n       break;\n "}, {"sha": "b821db1a122a48472102e95e68d58ca7711587bf", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -439,7 +439,7 @@ dump_hash_table_entry (void **slot, void *filep)\n   fprintf (file, \"expr: \");\n   print_rtl (file, expr->expr);\n   fprintf (file,\"\\nhashcode: %u\\n\", expr->hash);\n-  fprintf (file,\"list of occurences:\\n\");\n+  fprintf (file,\"list of occurrences:\\n\");\n   occr = expr->avail_occr;\n   while (occr)\n     {"}, {"sha": "ef14492d83f5381823fcc731aa0461ad2e5dc072", "filename": "gcc/tree-browser.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-browser.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-browser.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-browser.def?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -33,7 +33,7 @@ DEFTBCODE (TB_UPDATE_UP,        \"update\", \"Update information about parent expre\n DEFTBCODE (TB_VERBOSE,          \"verbose\", \"Sets/unsets verbose mode (default is on).\")\n \n /* Walking commands.  */\n-DEFTBCODE (TB_FUN,\t\t\"fun\",\t\"Go to the curent function declaration.\")\n+DEFTBCODE (TB_FUN,\t\t\"fun\",\t\"Go to the current function declaration.\")\n DEFTBCODE (TB_NEXT,\t\t\"nx\",\t\"Go to the next expression in a BIND_EXPR.\")\n DEFTBCODE (TB_PREV,\t\t\"pr\",   \"Go to the previous expression in a BIND_EXPR.\")\n DEFTBCODE (TB_UP,\t\t\"up\",\t\"Go to the parent tree node.\")"}, {"sha": "573a5ddf9d5728721a5997e00ea36d0f2e4879be", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -1826,7 +1826,7 @@ verify_eh_edges (tree stmt)\n     {\n       if ((e->flags & EDGE_EH) && !e->aux)\n \t{\n-\t  error (\"Unnecesary EH edge %i->%i\", bb->index, e->dest->index);\n+\t  error (\"Unnecessary EH edge %i->%i\", bb->index, e->dest->index);\n \t  mark_eh_edge_found_error = true;\n \t  return true;\n \t}"}, {"sha": "6656e6ee54321d8f2a9a523782f1adcd860917dc", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -253,7 +253,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n           != get_alias_set (TREE_TYPE (TREE_TYPE (root2))))\n     {\n       if (debug)\n-\tfprintf (debug, \" : 2 different alasing sets. No coalesce.\\n\");\n+\tfprintf (debug, \" : 2 different aliasing sets. No coalesce.\\n\");\n       return;\n     }\n "}, {"sha": "7128c491132ba8e9e635d02ffe8e8bb5f08e1690", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9795d4aa4340f121bd6a182ac610e73b91b0c2/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=cc9795d4aa4340f121bd6a182ac610e73b91b0c2", "patch": "@@ -2466,7 +2466,7 @@ vect_analyze_loop_form (struct loop *loop)\n   if (!empty_block_p (loop->latch))\n     {\n       if (vect_print_dump_info (REPORT_BAD_FORM_LOOPS, loop_loc))\n-        fprintf (vect_dump, \"not vectorized: unexpectd loop form.\");\n+        fprintf (vect_dump, \"not vectorized: unexpected loop form.\");\n       return NULL;\n     }\n "}]}