{"sha": "57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTczMTdkMmEyYzFmOWIxODNmM2NlOWE2ZmE3YjkzMTllZTYzNjM3NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-05-26T02:19:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-05-26T02:19:57Z"}, "message": "tuple: Ifndef __GXX_EXPERIMENTAL_CXX0X__ just error out.\n\n2008-05-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/tuple: Ifndef __GXX_EXPERIMENTAL_CXX0X__ just error out.\n\t* include/std/date_time: Likewise.\n\t* include/std/system_error: Likewise.\n\t* include/std/type_traits: Likewise; fix typo in macro name.\n\t* include/std/regex: Likewise.\n\t* include/std/random: Likewise.\n\t* include/std/unordered_map: Likewise.\n\t* include/std/condition_variable: Likewise.\n\t* include/std/unordered_set: Likewise.\n\t* include/std/mutex: Likewise.\n\t* include/std/array: Likewise.\n\n\t* include/c_std/cmath: Fix obsolete comment.\n\t* include/c_global/cmath: Likewise.\n\nFrom-SVN: r135890", "tree": {"sha": "e5dcd8edd3cb91ff276d94dd9fa90b18fc5179ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5dcd8edd3cb91ff276d94dd9fa90b18fc5179ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/comments", "author": null, "committer": null, "parents": [{"sha": "73d1a02168e712a96170e9ee93d1b6509f141f0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d1a02168e712a96170e9ee93d1b6509f141f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d1a02168e712a96170e9ee93d1b6509f141f0c"}], "stats": {"total": 102, "additions": 69, "deletions": 33}, "files": [{"sha": "6fae3e258dfdbc094d0dc4ca7165789f14333155", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -1,3 +1,20 @@\n+2008-05-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/tuple: Ifndef __GXX_EXPERIMENTAL_CXX0X__ just error out.\n+\t* include/std/date_time: Likewise.\n+\t* include/std/system_error: Likewise.\n+\t* include/std/type_traits: Likewise; fix typo in macro name.\n+\t* include/std/regex: Likewise.\n+\t* include/std/random: Likewise.\n+\t* include/std/unordered_map: Likewise.\n+\t* include/std/condition_variable: Likewise.\n+\t* include/std/unordered_set: Likewise.\n+\t* include/std/mutex: Likewise.\n+\t* include/std/array: Likewise.\n+\n+\t* include/c_std/cmath: Fix obsolete comment.\n+\t* include/c_global/cmath: Likewise.\n+\n 2008-05-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/complex (complex<>::real(_Tp), complex<>::imag(_Tp),"}, {"sha": "21e21507b08de3dd14c9a3956d03df9285b62c49", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -476,11 +476,8 @@ _GLIBCXX_END_NAMESPACE\n \n #if _GLIBCXX_USE_C99_MATH\n #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC\n-// These are possible macros imported from C99-land. For strict\n-// conformance, remove possible C99-injected names from the global\n-// namespace, and sequester them in the __gnu_cxx extension namespace.\n \n-// Only undefine the C99 FP macros, if actually captured for namespace movement\n+// These are possible macros imported from C99-land.\n #undef fpclassify\n #undef isfinite\n #undef isinf"}, {"sha": "948a0bece2943c2d298386a7518cb82fac475681", "filename": "libstdc++-v3/include/c_std/cmath", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -458,11 +458,8 @@ _GLIBCXX_END_NAMESPACE\n \n #if _GLIBCXX_USE_C99_MATH\n #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC\n-// These are possible macros imported from C99-land. For strict\n-// conformance, remove possible C99-injected names from the global\n-// namespace, and sequester them in the __gnu_cxx extension namespace.\n \n-// Only undefine the C99 FP macros, if actually captured for namespace movement\n+// These are possible macros imported from C99-land.\n #undef fpclassify\n #undef isfinite\n #undef isinf"}, {"sha": "fc3552aa8f911badd2c48fa8608c208c7163906d", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -1,6 +1,6 @@\n // <array> -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #if defined(_GLIBCXX_INCLUDE_AS_TR1)\n #  error C++0x header cannot be included from TR1 header\n@@ -60,4 +60,6 @@\n #  undef _GLIBCXX_INCLUDE_AS_CXX0X\n #endif\n \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif // _GLIBCXX_ARRAY"}, {"sha": "1dfb77894995a7d98d8a7f862c4c55290909b0d8", "filename": "libstdc++-v3/include/std/condition_variable", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #include <mutex> // unique_lock\n \n@@ -159,4 +159,6 @@ namespace std\n \n }\n \n-#endif\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n+#endif // _GLIBCXX_CONDITION_VARIABLE"}, {"sha": "2ad9516971546a2720eb9ef012d0d65dc56c3fed", "filename": "libstdc++-v3/include/std/date_time", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #include <ctime>\n \n@@ -206,8 +206,8 @@ namespace std\n     operator!=(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n   \n   template<class _LhsDuration, class _RhsDuration>\n-     bool\n-     operator<(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n+    bool\n+    operator<(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n   template<class _LhsDuration, class _RhsDuration>\n     bool\n     operator<=(const _LhsDuration& __lhs, const _RhsDuration& __rhs);\n@@ -240,4 +240,6 @@ namespace std\n     operator/(_Duration __lhs, long __rhs);\n }\n \n-#endif /* _GLIBCXX_DATE_TIME */\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n+#endif // _GLIBCXX_DATE_TIME"}, {"sha": "5d4e52105f8fccf877fbea49aacc57a2c389620c", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -39,7 +39,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #include <exception>\n #include <cstddef>\n@@ -363,5 +363,6 @@ namespace std\n     }\n }\n \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n \n-#endif\n+#endif // _GLIBCXX_MUTEX"}, {"sha": "395604b246a75ebaa3c73bdd5ac1b47731607d59", "filename": "libstdc++-v3/include/std/random", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Frandom?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -1,6 +1,6 @@\n // <random> -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #if defined(_GLIBCXX_INCLUDE_AS_TR1)\n #  error C++0x header cannot be included from TR1 header\n@@ -70,4 +70,6 @@\n #  undef _GLIBCXX_INCLUDE_AS_CXX0X\n #endif\n \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif // _GLIBCXX_RANDOM"}, {"sha": "00d6f696a55a0c15455698ca75a7ea1b65c44c13", "filename": "libstdc++-v3/include/std/regex", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -1,6 +1,6 @@\n // <regex> -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #if defined(_GLIBCXX_INCLUDE_AS_TR1)\n #  error C++0x header cannot be included from TR1 header\n@@ -67,4 +67,6 @@\n #  undef _GLIBCXX_INCLUDE_AS_CXX0X\n #endif\n \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif // _GLIBCXX_REGEX"}, {"sha": "343eb6e83f71cf641e4889efc94b3cb71275dd8b", "filename": "libstdc++-v3/include/std/system_error", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #include <bits/c++config.h>\n #include <bits/error_constants.h>\n@@ -185,7 +185,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template<typename charT, typename traits>\n     basic_ostream<charT,traits>&\n-    operator<<(basic_ostream<charT,traits>& os, const error_code& __code);\n+    operator<<(basic_ostream<charT, traits>& os, const error_code& __code);\n \n \n   /// error_condition\n@@ -198,14 +198,18 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     : _M_value(__v), _M_cat(__cat) { }\n \n     template<typename _ErrorEnum>\n-      error_condition(typename enable_if<is_error_condition_enum<_ErrorEnum>::value, _ErrorEnum>::type __v) : _M_value(__v), _M_cat(system_category) { }\n+      error_condition(typename enable_if<\n+\t\t      is_error_condition_enum<_ErrorEnum>::value,\n+\t\t      _ErrorEnum>::type __v)\n+      : _M_value(__v), _M_cat(system_category) { }\n \n     void \n     assign(int val, const error_category& cat);\n \n     template<typename _ErrorEnum>\n       error_condition&\n-      operator=(typename enable_if<is_error_condition_enum<_ErrorEnum>::value, _ErrorEnum>::type __v)\n+      operator=(typename enable_if<is_error_condition_enum<_ErrorEnum>::value,\n+\t\t                   _ErrorEnum>::type __v)\n       { _M_value = __v; }\n \n     void \n@@ -317,5 +321,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n+#endif // _GLIBCXX_SYSTEM_ERROR\n "}, {"sha": "a295e4ef9371b65a227c546cb72620999cf2ddc9", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #include <utility>\n \n@@ -645,4 +645,6 @@ namespace std\n   }; // anonymous namespace\n }\n \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif // _GLIBCXX_TUPLE"}, {"sha": "5fdc95ecad98875cd93f09fa8730d47c0a0f39a6", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -36,9 +36,9 @@\n \n #pragma GCC system_header\n \n-#ifndef __GXX_EXPERIMENTAL__\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #if defined(_GLIBCXX_INCLUDE_AS_TR1)\n #  error C++0x header cannot be included from TR1 header\n@@ -553,5 +553,7 @@ namespace std\n     struct make_signed<bool>;\n }\n \n+#endif  // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif  // _GLIBCXX_TYPE_TRAITS \n "}, {"sha": "e338ef7805cbaa091da1f3d0a0cba51183bc5a5e", "filename": "libstdc++-v3/include/std/unordered_map", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_map?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #if defined(_GLIBCXX_INCLUDE_AS_TR1)\n #  error C++0x header cannot be included from TR1 header\n@@ -77,4 +77,6 @@\n # include <debug/unordered_map>\n #endif\n \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif // _GLIBCXX_UNORDERED_MAP"}, {"sha": "13b412b1eb5e9e0bd57a8e6d8a3a278ffe1e87b8", "filename": "libstdc++-v3/include/std/unordered_set", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57317d2a2c1f9b183f3ce9a6fa7b9319ee636375/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Funordered_set?ref=57317d2a2c1f9b183f3ce9a6fa7b9319ee636375", "patch": "@@ -1,6 +1,6 @@\n // <unordered_set> -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n # include <c++0x_warning.h>\n-#endif\n+#else\n \n #if defined(_GLIBCXX_INCLUDE_AS_TR1)\n #  error C++0x header cannot be included from TR1 header\n@@ -77,4 +77,6 @@\n # include <debug/unordered_set>\n #endif\n \n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif // _GLIBCXX_UNORDERED_SET"}]}