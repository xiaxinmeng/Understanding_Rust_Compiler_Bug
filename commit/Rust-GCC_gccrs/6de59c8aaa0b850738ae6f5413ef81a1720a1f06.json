{"sha": "6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRlNTljOGFhYTBiODUwNzM4YWU2ZjU0MTNlZjgxYTE3MjBhMWYwNg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2015-07-16T08:36:02Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-07-16T08:36:02Z"}, "message": "linux-common.h (LINK_MPX): New.\n\ngcc/\n\n\t* config/i386/linux-common.h (LINK_MPX): New.\n\t(MPX_SPEC): Use LINK_MPX instead of %(link_mpx).\n\t* configure.ac: Add HAVE_LD_BNDPLT_SUPPORT macro\n\tindicating '-z bndplt' support by linker.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\nlibmpx/\n\n\t* configure.ac: Remove link_mpx.\n\t* libmpx.spec.in: Likewise.\n\t* configure: Regenerate.\n\nFrom-SVN: r225862", "tree": {"sha": "7706ecb501d46fdbf8b14b786c1abd6648f91c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7706ecb501d46fdbf8b14b786c1abd6648f91c52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/comments", "author": null, "committer": null, "parents": [{"sha": "79d4f7c66e9c8462aee46a3488f589969851bd80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d4f7c66e9c8462aee46a3488f589969851bd80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d4f7c66e9c8462aee46a3488f589969851bd80"}], "stats": {"total": 128, "additions": 86, "deletions": 42}, "files": [{"sha": "8e2dc6120732692818b91bda9810e66fdc7e66c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -1,3 +1,12 @@\n+2015-07-16  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* config/i386/linux-common.h (LINK_MPX): New.\n+\t(MPX_SPEC): Use LINK_MPX instead of %(link_mpx).\n+\t* configure.ac: Add HAVE_LD_BNDPLT_SUPPORT macro\n+\tindicating '-z bndplt' support by linker.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2015-07-16  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (fold_widened_comparison): Remove."}, {"sha": "b35b0ee075a6e706d0acc3a85a63cb982ca3784e", "filename": "gcc/config.in", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -574,6 +574,12 @@\n #endif\n \n \n+/* Define if your assembler supports relocs needed by -fpic. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_SMALL_PIC_RELOCS\n+#endif\n+\n+\n /* Define if your assembler supports SPARC4 instructions. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_SPARC4\n@@ -606,12 +612,6 @@\n #endif\n \n \n-/* Define if your assembler supports relocs needed by -fpic. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_SMALL_PIC_RELOCS\n-#endif\n-\n-\n /* Define if your assembler and linker support thread-local storage. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_TLS\n@@ -1369,6 +1369,12 @@\n #endif\n \n \n+/* Define if your linker supports -z bndplt */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_LD_BNDPLT_SUPPORT\n+#endif\n+\n+\n /* Define if your linker supports --build-id. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_LD_BUILDID"}, {"sha": "63dd8d87152a12aac5faa780415d104958b508e0", "filename": "gcc/config/i386/linux-common.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfig%2Fi386%2Flinux-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfig%2Fi386%2Flinux-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-common.h?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -59,9 +59,20 @@ along with GCC; see the file COPYING3.  If not see\n  %:include(libmpx.spec)%(link_libmpx)\"\n #endif\n \n+#ifndef LINK_MPX\n+#if defined (HAVE_LD_BNDPLT_SUPPORT)\n+#define LINK_MPX \"-z bndplt \"\n+#else\n+#define LINK_MPX \\\n+  \"%nGCC was configured with a linker with no '-z bndplt' support. \" \\\n+  \"It significantly reduces MPX coverage for dynamic codes. \" \\\n+  \"It is strongly recommended to use GCC properly configured for MPX.\"\n+#endif\n+#endif\n+\n #ifndef MPX_SPEC\n #define MPX_SPEC \"\\\n- %{mmpx:%{fcheck-pointer-bounds:%{!static:%:include(libmpx.spec)%(link_mpx)}}}\"\n+ %{mmpx:%{fcheck-pointer-bounds:%{!static:\" LINK_MPX \"}}}\"\n #endif\n \n #ifndef LIBMPX_SPEC"}, {"sha": "3d55bdab63e7deee73493a3c1822c6427f4ebd47", "filename": "gcc/configure", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -28852,6 +28852,30 @@ if test \"$gcc_cv_no_pie\" = \"yes\"; then\n fi\n \n \n+# Check linker supports '-z bndplt'\n+ld_bndplt_support=no\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker -z bndplt option\" >&5\n+$as_echo_n \"checking linker -z bndplt option... \" >&6; }\n+if test x\"$ld_is_gold\" = xno; then\n+  if test $in_tree_ld = yes ; then\n+    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 25 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n+      ld_bndplt_support=yes\n+    fi\n+  elif test x$gcc_cv_ld != x; then\n+    # Check if linker supports -a bndplt option\n+    if $gcc_cv_ld --help 2>/dev/null | grep -- '-z bndplt' > /dev/null; then\n+      ld_bndplt_support=yes\n+    fi\n+  fi\n+fi\n+if test x\"$ld_bndplt_support\" = xyes; then\n+\n+$as_echo \"#define HAVE_LD_BNDPLT_SUPPORT 1\" >>confdefs.h\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_bndplt_support\" >&5\n+$as_echo \"$ld_bndplt_support\" >&6; }\n+\n # Configure the subdirectories\n # AC_CONFIG_SUBDIRS($subdirs)\n "}, {"sha": "583324f87a84439a45a767fec7e5f899f6cd6adb", "filename": "gcc/configure.ac", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -5865,6 +5865,27 @@ if test \"$gcc_cv_no_pie\" = \"yes\"; then\n fi\n AC_SUBST([NO_PIE_FLAG])\n \n+# Check linker supports '-z bndplt'\n+ld_bndplt_support=no\n+AC_MSG_CHECKING(linker -z bndplt option)\n+if test x\"$ld_is_gold\" = xno; then\n+  if test $in_tree_ld = yes ; then\n+    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 25 -o \"$gcc_cv_gld_major_version\" -gt 2; then\n+      ld_bndplt_support=yes\n+    fi\n+  elif test x$gcc_cv_ld != x; then\n+    # Check if linker supports -a bndplt option\n+    if $gcc_cv_ld --help 2>/dev/null | grep -- '-z bndplt' > /dev/null; then\n+      ld_bndplt_support=yes\n+    fi\n+  fi\n+fi\n+if test x\"$ld_bndplt_support\" = xyes; then\n+  AC_DEFINE(HAVE_LD_BNDPLT_SUPPORT, 1,\n+\t[Define if your linker supports -z bndplt])\n+fi\n+AC_MSG_RESULT($ld_bndplt_support)\n+\n # Configure the subdirectories\n # AC_CONFIG_SUBDIRS($subdirs)\n "}, {"sha": "450b7d36e8c0b4b7264b3441933f99a427c8f2e6", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -1,3 +1,9 @@\n+2015-07-16  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* configure.ac: Remove link_mpx.\n+\t* libmpx.spec.in: Likewise.\n+\t* configure: Regenerate.\n+\n 2015-05-13  Michael Haubenwallner  <michael.haubenwallner@ssi-schaefer.com>\n \n \t* Makefile.in: Regenerated with automake-1.11.6."}, {"sha": "16d0dd85d3d705f5d02488015c8c6fe2568066e1", "filename": "libmpx/configure", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -666,7 +666,6 @@ am__isrc\n INSTALL_DATA\n INSTALL_SCRIPT\n INSTALL_PROGRAM\n-link_mpx\n link_libmpx\n LIBMPX_SUPPORTED_FALSE\n LIBMPX_SUPPORTED_TRUE\n@@ -2364,25 +2363,6 @@ fi\n \n \n link_libmpx=\"-lpthread\"\n-link_mpx=\"\"\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ld accepts -z bndplt\" >&5\n-$as_echo_n \"checking whether ld accepts -z bndplt... \" >&6; }\n-echo \"int main() {};\" > conftest.c\n-if { ac_try='${CC} ${CFLAGS} -Wl,-z,bndplt -o conftest conftest.c 1>&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-    link_mpx=\"$link_mpx -z bndplt\"\n-else\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n \n \n am__api_version='1.11'\n@@ -11250,7 +11230,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11253 \"configure\"\n+#line 11233 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11356,7 +11336,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11359 \"configure\"\n+#line 11339 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "18ba6872035b13786e67f0de2e625e2335d0efca", "filename": "libmpx/configure.ac", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure.ac?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -39,18 +39,7 @@ AC_MSG_RESULT($LIBMPX_SUPPORTED)\n AM_CONDITIONAL(LIBMPX_SUPPORTED, [test \"x$LIBMPX_SUPPORTED\" = \"xyes\"])\n \n link_libmpx=\"-lpthread\"\n-link_mpx=\"\"\n-AC_MSG_CHECKING([whether ld accepts -z bndplt])\n-echo \"int main() {};\" > conftest.c\n-if AC_TRY_COMMAND([${CC} ${CFLAGS} -Wl,-z,bndplt -o conftest conftest.c 1>&AS_MESSAGE_LOG_FD])\n-then\n-    AC_MSG_RESULT([yes])\n-    link_mpx=\"$link_mpx -z bndplt\"\n-else\n-    AC_MSG_RESULT([no])\n-fi\n AC_SUBST(link_libmpx)\n-AC_SUBST(link_mpx)\n \n AM_INIT_AUTOMAKE(foreign no-dist no-dependencies)\n AM_ENABLE_MULTILIB(, ..)"}, {"sha": "a80bba71123e7a1134990f3a5e527be5d3533a82", "filename": "libmpx/libmpx.spec.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2Flibmpx.spec.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de59c8aaa0b850738ae6f5413ef81a1720a1f06/libmpx%2Flibmpx.spec.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Flibmpx.spec.in?ref=6de59c8aaa0b850738ae6f5413ef81a1720a1f06", "patch": "@@ -1,5 +1,3 @@\n # This spec file is read by gcc when linking.  It is used to specify the\n # standard libraries we need in order to link with libmpx.\n *link_libmpx: @link_libmpx@\n-\n-*link_mpx: @link_mpx@"}]}