{"sha": "17f0f8fac745e2713017636cfb4adcc609227a09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdmMGY4ZmFjNzQ1ZTI3MTMwMTc2MzZjZmI0YWRjYzYwOTIyN2EwOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2000-09-14T18:09:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-09-14T18:09:16Z"}, "message": "invoke.texi (H8/300 Options): Add -ms2600.\n\n        * invoke.texi (H8/300 Options): Add -ms2600.\n        * config/h8300.c (h8300_init_once): Output an error when -ms2600\n        is used without -ms.\n        * config/h8300.h (TARGET_MAC): New.\n        (TARGET_SWITCHES): Add -ms2600 and -mno-s2600.\n        (CONDITIONA_REGISTER_USAGE): Disable the mac register on any\n        machine other than H8/S2600.\n        * config/h8300.md: Accept mac instructions on the H8/S2600 instead\n        of the H8/S2000.\n\nFrom-SVN: r36414", "tree": {"sha": "8f9fa9e4072a5ff274103afbad1e46fad4b09780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f9fa9e4072a5ff274103afbad1e46fad4b09780"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17f0f8fac745e2713017636cfb4adcc609227a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f0f8fac745e2713017636cfb4adcc609227a09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f0f8fac745e2713017636cfb4adcc609227a09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f0f8fac745e2713017636cfb4adcc609227a09/comments", "author": null, "committer": null, "parents": [{"sha": "9e8f528cd437be7bd63318326caeb26e702ce9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8f528cd437be7bd63318326caeb26e702ce9f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e8f528cd437be7bd63318326caeb26e702ce9f5"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "8aa78abb09a3a9f3fbd5d1ea5fd88bc4ab7b3a9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17f0f8fac745e2713017636cfb4adcc609227a09", "patch": "@@ -1,3 +1,15 @@\n+2000-09-14  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* invoke.texi (H8/300 Options): Add -ms2600.\n+\t* config/h8300.c (h8300_init_once): Output an error when -ms2600\n+\tis used without -ms.\n+\t* config/h8300.h (TARGET_MAC): New.\n+\t(TARGET_SWITCHES): Add -ms2600 and -mno-s2600.\n+\t(CONDITIONA_REGISTER_USAGE): Disable the mac register on any\n+\tmachine other than H8/S2600.\n+\t* config/h8300.md: Accept mac instructions on the H8/S2600 instead\n+\tof the H8/S2000.\n+\n 2000-09-14  Alexandre Oliva  <aoliva@redhat.com>, Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* reload.c (find_reloads_address_1): Generate reloads for auto_inc"}, {"sha": "c81cac95b0d9f7d01026760e33c74deb674aac37", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=17f0f8fac745e2713017636cfb4adcc609227a09", "patch": "@@ -107,6 +107,9 @@ h8300_init_once ()\n   h8_push_op = h8_push_ops[cpu_type];\n   h8_pop_op = h8_pop_ops[cpu_type];\n   h8_mov_op = h8_mov_ops[cpu_type];\n+\n+  if (!TARGET_H8300S && TARGET_MAC)\n+    fatal (\"-ms2600 is used without -ms.\");\n }\n \n const char *"}, {"sha": "4a1d9e3022a665b36d8a2ef8cbfbc7ffc6184f93", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=17f0f8fac745e2713017636cfb4adcc609227a09", "patch": "@@ -88,6 +88,9 @@ extern int target_flags;\n #define TARGET_H8300H\t(target_flags & 4096)\n #define TARGET_H8300S\t(target_flags & 1)\n \n+/* mac register and relevant instructions are available.  */\n+#define TARGET_MAC    (target_flags & 2)\n+\n /* Align all values on the H8/300H the same way as the H8/300.  Specifically,\n    32 bit and larger values are aligned on 16 bit boundaries.\n    This is all the hardware requires, but the default is 32 bits for the 300H.\n@@ -104,6 +107,8 @@ extern int target_flags;\n #define TARGET_SWITCHES  \\\n   { {\"s\",\t\t1,     N_(\"Generate H8/S code\")},\t\t\\\n     {\"no-s\",\t\t-1,    N_(\"Do not generate H8/S code\")},\t\\\n+    {\"s2600\",\t\t2,     N_(\"Generate H8/S2600 code\")},           \\\n+    {\"no-s2600\",\t-2,    N_(\"Do not generate H8/S2600 code\")},    \\\n     {\"int32\",\t\t8,     N_(\"Make integers 32 bits wide\")},\t\\\n     {\"addresses\",\t64,    NULL},\t\t\t\t\t\\\n     {\"quickcall\",\t128,\t\t\t\t\t\t\\\n@@ -280,10 +285,10 @@ extern int target_flags;\n #define REG_ALLOC_ORDER \\\n   { 2, 3, 0, 1, 4, 5, 6, 8, 7, 9}\n \n-#define CONDITIONAL_REGISTER_USAGE\t\\\n-{\t\t\t\t\t\\\n-  if (!TARGET_H8300S)\t\t\t\\\n-    fixed_regs[8] = call_used_regs[8] = 1;\\\n+#define CONDITIONAL_REGISTER_USAGE\t\t\\\n+{\t\t\t\t\t\t\\\n+  if (!TARGET_MAC)\t\t\t\t\\\n+    fixed_regs[8] = call_used_regs[8] = 1;\t\\\n }\n \n /* Return number of consecutive hard regs needed starting at reg REGNO"}, {"sha": "f75fad509f4592c5d6707022875e19bc17180dd7", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=17f0f8fac745e2713017636cfb4adcc609227a09", "patch": "@@ -819,7 +819,7 @@\n \t    (mem:HI (post_inc:SI (match_operand:SI 1 \"register_operand\" \"r\"))))\n \t  (sign_extend:SI\n \t    (mem:HI (post_inc:SI (match_operand:SI 2 \"register_operand\" \"r\"))))))]\n-  \"TARGET_H8300S\"\n+  \"TARGET_MAC\"\n   \"clrmac\\;mac\t@%2+,@%1+\"\n   [(set_attr \"length\" \"6\")\n    (set_attr \"cc\" \"none_0hit\")])\n@@ -832,7 +832,7 @@\n \t  (sign_extend:SI (mem:HI\n \t    (post_inc:SI (match_operand:SI 2 \"register_operand\" \"r\")))))\n \t      (match_operand:SI 3 \"register_operand\" \"0\")))]\n-  \"TARGET_H8300S\"\n+  \"TARGET_MAC\"\n   \"mac\t@%2+,@%1+\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")])"}, {"sha": "be42ad540ea2c6c08c18cf7a9c243b515d06585e", "filename": "gcc/invoke.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17f0f8fac745e2713017636cfb4adcc609227a09/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=17f0f8fac745e2713017636cfb4adcc609227a09", "patch": "@@ -6681,6 +6681,9 @@ Generate code for the H8/300H.\n @item -ms\n Generate code for the H8/S.\n \n+@item -ms2600\n+Generate code for the H8/S2600.  This switch must be used with -ms.\n+\n @item -mint32\n Make @code{int} data 32 bits by default.\n "}]}