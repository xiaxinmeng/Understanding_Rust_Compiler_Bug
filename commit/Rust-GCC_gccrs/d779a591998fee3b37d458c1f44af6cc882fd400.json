{"sha": "d779a591998fee3b37d458c1f44af6cc882fd400", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc3OWE1OTE5OThmZWUzYjM3ZDQ1OGMxZjQ0YWY2Y2M4ODJmZDQwMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-02-16T16:01:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-02-16T16:01:23Z"}, "message": "unique_ptr.h: (unique_ptr<>:: unique_ptr(const unique_ptr<_Up...\n\n2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/unique_ptr.h: (unique_ptr<>::\n\tunique_ptr(const unique_ptr<_Up, _Up_Deleter>&),\n\toperator=(const unique_ptr<_Up, _Up_Deleter>&)): Remove, redundant,\n\tper DR 1303.\n\t* include/bits/shared_ptr.h (shared_ptr<>::\n\tshared_ptr(const unique_ptr<_Up, _Up_Deleter>&),\n\toperator=(const unique_ptr<_Up, _Up_Deleter>&)): Likewise.\n\t* include/bits/shared_ptr_base.h (__shared_ptr<>::\n\t__shared_ptr(const unique_ptr<_Up, _Up_Deleter>&),\n\toperator=(const unique_ptr<_Up, _Up_Deleter>&)): Likewise.\n\t* testsuite/20_util/unique_ptr/modifiers/reset_neg.cc: Adjust.\n\t* testsuite/20_util/unique_ptr/assign/assign_neg.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/unique_ptr_neg.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/unique_ptr_lvalue_neg.cc:\n\tLikewise.\n\nFrom-SVN: r156807", "tree": {"sha": "4b8abcfd66e61bc57f9967f05aca35b814d2df30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b8abcfd66e61bc57f9967f05aca35b814d2df30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d779a591998fee3b37d458c1f44af6cc882fd400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d779a591998fee3b37d458c1f44af6cc882fd400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d779a591998fee3b37d458c1f44af6cc882fd400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d779a591998fee3b37d458c1f44af6cc882fd400/comments", "author": null, "committer": null, "parents": [{"sha": "7c7580ef15045e36a9cfacf8f300c69f071abd41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7580ef15045e36a9cfacf8f300c69f071abd41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c7580ef15045e36a9cfacf8f300c69f071abd41"}], "stats": {"total": 66, "additions": 32, "deletions": 34}, "files": [{"sha": "183a4ccb8012e952d73366a548ee9a5b7e6f7641", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -1,3 +1,21 @@\n+2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/unique_ptr.h: (unique_ptr<>::\n+\tunique_ptr(const unique_ptr<_Up, _Up_Deleter>&),\n+\toperator=(const unique_ptr<_Up, _Up_Deleter>&)): Remove, redundant,\n+\tper DR 1303.\n+\t* include/bits/shared_ptr.h (shared_ptr<>::\n+\tshared_ptr(const unique_ptr<_Up, _Up_Deleter>&),\n+\toperator=(const unique_ptr<_Up, _Up_Deleter>&)): Likewise.\n+\t* include/bits/shared_ptr_base.h (__shared_ptr<>::\n+\t__shared_ptr(const unique_ptr<_Up, _Up_Deleter>&),\n+\toperator=(const unique_ptr<_Up, _Up_Deleter>&)): Likewise.\n+\t* testsuite/20_util/unique_ptr/modifiers/reset_neg.cc: Adjust.\n+\t* testsuite/20_util/unique_ptr/assign/assign_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/unique_ptr_lvalue_neg.cc:\n+\tLikewise.\n+\n 2010-02-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/ext/median.cc: Adjust."}, {"sha": "3e909f53f9fef5043ceeb04dbea04a54e80f5d22", "filename": "libstdc++-v3/include/bits/shared_ptr.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -60,7 +60,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   /// 2.2.3.7 shared_ptr I/O\n   template<typename _Ch, typename _Tr, typename _Tp, _Lock_policy _Lp>\n-    std::basic_ostream<_Ch, _Tr>&\n+    inline std::basic_ostream<_Ch, _Tr>&\n     operator<<(std::basic_ostream<_Ch, _Tr>& __os,\n \t       const __shared_ptr<_Tp, _Lp>& __p)\n     {\n@@ -119,7 +119,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *\n        *  __shared_ptr will release __p by calling __d(__p)\n        */\n-\ttemplate<typename _Tp1, typename _Deleter>\n+      template<typename _Tp1, typename _Deleter>\n \tshared_ptr(_Tp1* __p, _Deleter __d) : __shared_ptr<_Tp>(__p, __d) { }\n \n       /**\n@@ -209,9 +209,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t: __shared_ptr<_Tp>(std::move(__r)) { }\n #endif\n \n-      template<typename _Tp1, typename _Del>\n-\texplicit shared_ptr(const std::unique_ptr<_Tp1, _Del>&) = delete;\n-\n       template<typename _Tp1, typename _Del>\n \texplicit shared_ptr(std::unique_ptr<_Tp1, _Del>&& __r)\n \t: __shared_ptr<_Tp>(std::move(__r)) { }\n@@ -249,10 +246,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t  return *this;\n \t}\n \n-      template<typename _Tp1, typename _Del>\n-\tshared_ptr&\n-\toperator=(const std::unique_ptr<_Tp1, _Del>& __r) = delete;\n-\n       template<typename _Tp1, typename _Del>\n \tshared_ptr&\n \toperator=(std::unique_ptr<_Tp1, _Del>&& __r)"}, {"sha": "51bd51d471856a3096041c3a4233f856e1ddeb48", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -1,6 +1,6 @@\n // shared_ptr and weak_ptr implementation details -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -606,9 +606,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t  _M_ptr = __r._M_ptr;\n \t}\n \n-      template<typename _Tp1, typename _Del>\n-\texplicit __shared_ptr(const std::unique_ptr<_Tp1, _Del>&) = delete;\n-\n       // If an exception is thrown this constructor has no effect.\n       template<typename _Tp1, typename _Del>\n \texplicit __shared_ptr(std::unique_ptr<_Tp1, _Del>&& __r)\n@@ -668,10 +665,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t  return *this;\n \t}\n \n-      template<typename _Tp1, typename _Del>\n-\t__shared_ptr&\n-\toperator=(const std::unique_ptr<_Tp1, _Del>& __r) = delete;\n-\n       template<typename _Tp1, typename _Del>\n \t__shared_ptr&\n \toperator=(std::unique_ptr<_Tp1, _Del>&& __r)"}, {"sha": "71348650ee66b53c636a033830af9e2ebf09709e", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -149,7 +149,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       }\n \n       // Observers.\n-      typename std::add_lvalue_reference<element_type>::type operator*() const\n+      typename std::add_lvalue_reference<element_type>::type\n+      operator*() const\n       {\n \t_GLIBCXX_DEBUG_ASSERT(get() != 0);\n \treturn *get();\n@@ -207,15 +208,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n       // Disable copy from lvalue.\n       unique_ptr(const unique_ptr&) = delete;\n-\n-      template<typename _Up, typename _Up_Deleter> \n-        unique_ptr(const unique_ptr<_Up, _Up_Deleter>&) = delete;\n-\n       unique_ptr& operator=(const unique_ptr&) = delete;\n \n-      template<typename _Up, typename _Up_Deleter> \n-        unique_ptr& operator=(const unique_ptr<_Up, _Up_Deleter>&) = delete;\n-\n     private:\n       __tuple_type _M_t;\n   };"}, {"sha": "dae967bfd5deb5b9e0208750e76ae703dae97f8f", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/unique_ptr_lvalue_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_lvalue_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_lvalue_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Funique_ptr_lvalue_neg.cc?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2008, 2009 Free Software Foundation\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,7 +35,7 @@ test01()\n \n   std::shared_ptr<A> a;\n   std::unique_ptr<A> u;\n-  a = u; // { dg-error \"used here\" }\n+  a = u; // { dg-error \"cannot bind\" }\n \n   return 0;\n }\n@@ -46,4 +46,4 @@ main()\n   test01();\n   return 0;\n }\n-// { dg-excess-errors \"deleted function\" }\n+// { dg-excess-errors \"initializing argument\" }"}, {"sha": "0e2fd68d570484f685ad676e9c7d59511e3d66b0", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/unique_ptr_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Funique_ptr_neg.cc?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2008, 2009 Free Software Foundation\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,7 +34,7 @@ test01()\n   bool test __attribute__((unused)) = true;\n \n   std::unique_ptr<A> a;\n-  std::shared_ptr<A> p(a); // { dg-error \"used here\" }\n+  std::shared_ptr<A> p(a); // { dg-error \"cannot bind\" }\n \n   return 0;\n }\n@@ -45,4 +45,4 @@ main()\n   test01();\n   return 0;\n }\n-// { dg-excess-errors \"deleted function\" }\n+// { dg-excess-errors \"initializing argument\" }"}, {"sha": "181323954431e7e404039673bcaaa3653c9ad500", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -49,13 +49,13 @@ test03()\n   std::unique_ptr<int[2]> p2 = p1;\n }\n \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 354 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 348 }\n // { dg-error \"used here\" \"\" { target *-*-* } 42 }\n // { dg-error \"no matching\" \"\" { target *-*-* } 48 }\n // { dg-warning \"candidates are\" \"\" { target *-*-* } 115 }\n // { dg-warning \"note\" \"\" { target *-*-* } 108 }\n // { dg-warning \"note\" \"\" { target *-*-* } 103 }\n // { dg-warning \"note\" \"\" { target *-*-* } 98 }\n // { dg-warning \"note\" \"\" { target *-*-* } 92 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 209 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 210 }\n // { dg-error \"used here\" \"\" { target *-*-* } 49 }"}, {"sha": "61b7ae9aff57edb887594f2f37c375b3f5d840e2", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/modifiers/reset_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d779a591998fee3b37d458c1f44af6cc882fd400/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc?ref=d779a591998fee3b37d458c1f44af6cc882fd400", "patch": "@@ -36,4 +36,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 35 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 344 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 338 }"}]}