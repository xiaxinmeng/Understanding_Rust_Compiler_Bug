{"sha": "aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE2YWQxYTY4YmY5NDY3MmNiYzlmNGMzYWVmNjA2NDBjYmM5NWEwYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-11-19T11:28:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-11-19T11:28:52Z"}, "message": "cppmacro.c (_cpp_backup_tokens): Pop cur_run before decrementing cur_token, not after.\n\n        * cppmacro.c (_cpp_backup_tokens): Pop cur_run before decrementing\n        cur_token, not after.\n\n        * config/clipper/clix.h, config/h8300/elf.h, config/mips/linux.h:\n        Lose ASM_OUTPUT_CONSTRUCTOR.\n        * system.h: Poison it and INT_ASM_OP.\n        * c-lang.c (finish_file): Don't check for it.\n        * libgcc2.c (L_ctors): Check TARGET_ASM_CONSTRUCTOR instead.\n\nFrom-SVN: r47169", "tree": {"sha": "4656c8e74eb6eaa6a7769cb24904b1f293ae4ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4656c8e74eb6eaa6a7769cb24904b1f293ae4ef4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55d56a9096cc459870a18fdef5c8fcfdd270ba9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d56a9096cc459870a18fdef5c8fcfdd270ba9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d56a9096cc459870a18fdef5c8fcfdd270ba9a"}], "stats": {"total": 55, "additions": 20, "deletions": 35}, "files": [{"sha": "cdce1b94397e29c0584f1165ca9735e8690323b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -1,3 +1,14 @@\n+2001-11-19  Jason Merrill  <jason@redhat.com>\n+\n+\t* cppmacro.c (_cpp_backup_tokens): Pop cur_run before decrementing\n+\tcur_token, not after.\n+\n+\t* config/clipper/clix.h, config/h8300/elf.h, config/mips/linux.h:\n+\tLose ASM_OUTPUT_CONSTRUCTOR.\n+\t* system.h: Poison it and INT_ASM_OP.\n+\t* c-lang.c (finish_file): Don't check for it.\n+\t* libgcc2.c (L_ctors): Check TARGET_ASM_CONSTRUCTOR instead.\n+\n 2001-11-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* mmix.c (mmix_cc1_ignored_option): Const-ify."}, {"sha": "54f86dfab12095e6fbd9ce3d7a2cb40ae07b6d87", "filename": "gcc/c-lang.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -203,7 +203,6 @@ lookup_objc_ivar (id)\n   return 0;\n }\n \n-#if !defined(ASM_OUTPUT_CONSTRUCTOR) || !defined(ASM_OUTPUT_DESTRUCTOR)\n extern tree static_ctors;\n extern tree static_dtors;\n \n@@ -253,7 +252,6 @@ finish_cdtor (body)\n \n   finish_function (0);\n }\n-#endif\n \n /* Register a function tree, so that its optimization and conversion\n    to RTL is only done at the end of the compilation.  */\n@@ -307,7 +305,6 @@ finish_file ()\n \n   VARRAY_FREE (deferred_fns);\n \n-#ifndef ASM_OUTPUT_CONSTRUCTOR\n   if (static_ctors)\n     {\n       tree body = start_cdtor ('I');\n@@ -318,8 +315,6 @@ finish_file ()\n \n       finish_cdtor (body);\n     }\n-#endif\n-#ifndef ASM_OUTPUT_DESTRUCTOR\n   if (static_dtors)\n     {\n       tree body = start_cdtor ('D');\n@@ -330,7 +325,6 @@ finish_file ()\n \n       finish_cdtor (body);\n     }\n-#endif\n \n   if (back_end_hook)\n     (*back_end_hook) (getdecls ());"}, {"sha": "b066754d4d49a2442cbdbe2d6c1d0508d475bb4a", "filename": "gcc/config/clipper/clix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fconfig%2Fclipper%2Fclix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fconfig%2Fclipper%2Fclix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclix.h?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -83,7 +83,7 @@ do {\t\t\t\t\t\t\t\\\n    and CTOR_LIST_END to contribute to the .init section an instruction to\n    push a word containing 0 (or some equivalent of that).\n \n-   ASM_OUTPUT_CONSTRUCTOR should be defined to push the address of the\n+   TARGET_ASM_CONSTRUCTOR should be defined to push the address of the\n    constructor.  */\n \n #define CTOR_LIST_BEGIN\t\t\t\t\\"}, {"sha": "dcfb5e9f8a044721cf92fbca121dba13b059f675", "filename": "gcc/config/h8300/elf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fconfig%2Fh8300%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fconfig%2Fh8300%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Felf.h?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -10,8 +10,6 @@\n #undef DTORS_SECTION_ASM_OP\n #undef INIT_SECTION_ASM_OP\n #undef READONLY_DATA_SECTION\n-#undef ASM_OUTPUT_CONSTRUCTOR\n-#undef ASM_OUTPUT_DESTRUCTOR\n #undef TARGET_ASM_NAMED_SECTION\n #undef TARGET_MEM_FUNCTIONS\n #undef PREFERRED_DEBUGGING_TYPE"}, {"sha": "2dad6a0a6e4384adabbc150cb09d7a0c70b26a44", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -117,29 +117,6 @@ void FN ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n-/* A C statement (sans semicolon) to output an element in the table of\n-   global constructors.  */\n-#undef ASM_OUTPUT_CONSTRUCTOR\n-#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t  \\\n-  do {\t\t\t\t\t\t\t\t  \\\n-    ctors_section ();\t\t\t\t\t\t  \\\n-    fprintf (FILE, \"\\t%s\\t\", TARGET_LONG64 ? \".dword\" : \".word\"); \\\n-    assemble_name (FILE, NAME);\t\t\t\t\t  \\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t  \\\n-  } while (0)\n-\n-\n-/* A C statement (sans semicolon) to output an element in the table of\n-   global destructors.  */\n-#undef ASM_OUTPUT_DESTRUCTOR\n-#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)\t\t\t  \\\n-  do {\t\t\t\t\t\t\t\t  \\\n-    dtors_section ();\t\t\t\t\t\t  \\\n-    fprintf (FILE, \"\\t%s\\t\", TARGET_LONG64 ? \".dword\" : \".word\"); \\\n-    assemble_name (FILE, NAME);\t\t\t\t\t  \\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t  \\\n-  } while (0)\n-\n #undef TARGET_VERSION\n #if TARGET_ENDIAN_DEFAULT == 0\n #define TARGET_VERSION fprintf (stderr, \" (MIPSel GNU/Linux with ELF)\");"}, {"sha": "dbee62d887ba1dff3ba9a89dd331ee1da62a9d2f", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -1087,12 +1087,12 @@ _cpp_backup_tokens (pfile, count)\n       pfile->lookaheads += count;\n       while (count--)\n \t{\n-\t  pfile->cur_token--;\n \t  if (pfile->cur_token == pfile->cur_run->base)\n \t    {\n \t      pfile->cur_run = pfile->cur_run->prev;\n \t      pfile->cur_token = pfile->cur_run->limit;\n \t    }\n+\t  pfile->cur_token--;\n \t}\n     }\n   else"}, {"sha": "5d424360d99152eb465bbc7c4fa982f8566ab6fb", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -2834,7 +2834,7 @@ SYMBOL__MAIN ()\n \n    Long term no port should use those extensions.  But many still do.  */\n #if !defined(INIT_SECTION_ASM_OP) && !defined(CTOR_LISTS_DEFINED_EXTERNALLY)\n-#if defined (ASM_OUTPUT_CONSTRUCTOR) || defined (USE_COLLECT2)\n+#if defined (TARGET_ASM_CONSTRUCTOR) || defined (USE_COLLECT2)\n func_ptr __CTOR_LIST__[2] = {0, 0};\n func_ptr __DTOR_LIST__[2] = {0, 0};\n #else"}, {"sha": "03c3223b05449fa79f57dae27c0f6b915f5f943f", "filename": "gcc/system.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=aa6ad1a68bf94672cbc9f4c3aef60640cbc95a0a", "patch": "@@ -603,7 +603,12 @@ typedef union tree_node *tree;\n \tVALID_MACHINE_DECL_ATTRIBUTE VALID_MACHINE_TYPE_ATTRIBUTE\t\\\n \tSET_DEFAULT_TYPE_ATTRIBUTES SET_DEFAULT_DECL_ATTRIBUTES\t\t\\\n \tMERGE_MACHINE_TYPE_ATTRIBUTES MERGE_MACHINE_DECL_ATTRIBUTES\t\\\n-\tMD_INIT_BUILTINS MD_EXPAND_BUILTIN\n+\tMD_INIT_BUILTINS MD_EXPAND_BUILTIN ASM_OUTPUT_CONSTRUCTOR\t\\\n+\tASM_OUTPUT_DESTRUCTOR\n+\n+/* And other obsolete target macros.  */\n+ #pragma GCC poison INT_ASM_OP\n+\n #endif /* IN_GCC */\n \n /* Note: not all uses of the `index' token (e.g. variable names and"}]}