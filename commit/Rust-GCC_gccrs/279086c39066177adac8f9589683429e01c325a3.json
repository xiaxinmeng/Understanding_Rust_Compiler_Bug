{"sha": "279086c39066177adac8f9589683429e01c325a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc5MDg2YzM5MDY2MTc3YWRhYzhmOTU4OTY4MzQyOWUwMWMzMjVhMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-21T16:18:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-21T16:18:38Z"}, "message": "re PR c++/36871 (__has_nothrow_copy(T) false for T with a template ctor)\n\n/cp\n2008-07-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/36871\n\tPR c++/36872\n\t* semantics.c (classtype_has_nothrow_assign_or_copy_p): Only check\n\tcopy constructors and copy assignment operators proper.\n\n/testsuite\n2008-07-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n        PR c++/36871\n\tPR c++/36872\n        * g++.dg/ext/has_nothrow_copy.C: Rename to...\n        * g++.dg/ext/has_nothrow_copy-1.C: ... this.\n        * g++.dg/ext/has_nothrow_copy-2.C: New.\n        * g++.dg/ext/has_nothrow_copy-3.C: Likewise.\n        * g++.dg/ext/has_nothrow_copy-4.C: Likewise.\n        * g++.dg/ext/has_nothrow_copy-5.C: Likewise.\n        * g++.dg/ext/has_nothrow_copy-6.C: Likewise.\n        * g++.dg/ext/has_nothrow_copy-7.C: Likewise.\n\nFrom-SVN: r138034", "tree": {"sha": "33a80a666b17715e8060cd31b2e1722080dc01e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33a80a666b17715e8060cd31b2e1722080dc01e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/279086c39066177adac8f9589683429e01c325a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/279086c39066177adac8f9589683429e01c325a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/279086c39066177adac8f9589683429e01c325a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/279086c39066177adac8f9589683429e01c325a3/comments", "author": null, "committer": null, "parents": [{"sha": "099735e9d6d8dfd80142c816232bcdc42f9a3046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/099735e9d6d8dfd80142c816232bcdc42f9a3046", "html_url": "https://github.com/Rust-GCC/gccrs/commit/099735e9d6d8dfd80142c816232bcdc42f9a3046"}], "stats": {"total": 112, "additions": 110, "deletions": 2}, "files": [{"sha": "4f9e10c709d0e3159cd322d84c826391b2ddb134", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -1,3 +1,10 @@\n+2008-07-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/36871\n+\tPR c++/36872\n+\t* semantics.c (classtype_has_nothrow_assign_or_copy_p): Only check\n+\tcopy constructors and copy assignment operators proper.\n+\n 2008-07-21  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* parser.c (cp_token): Remove in_system_header."}, {"sha": "ffa6493ced494f07bcdea074693b9ba033c9ff76", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -4677,8 +4677,20 @@ classtype_has_nothrow_assign_or_copy_p (tree type, bool assign_p)\n     return false;\n \n   for (; fns; fns = OVL_NEXT (fns))\n-    if (!TYPE_NOTHROW_P (TREE_TYPE (OVL_CURRENT (fns))))\n-      return false;\n+    {\n+      tree fn = OVL_CURRENT (fns);\n+ \n+      if (assign_p)\n+\t{\n+\t  if (copy_fn_p (fn) == 0)\n+\t    continue;\n+\t}\n+      else if (copy_fn_p (fn) <= 0)\n+\tcontinue;\n+\n+      if (!TYPE_NOTHROW_P (TREE_TYPE (fn)))\n+\treturn false;\n+    }\n \n   return true;\n }"}, {"sha": "3f15e3890966a8ac7ecac6df0f09385d0c4cf31f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -1,3 +1,16 @@\n+2008-07-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+        PR c++/36871\n+\tPR c++/36872\n+        * g++.dg/ext/has_nothrow_copy.C: Rename to...\n+        * g++.dg/ext/has_nothrow_copy-1.C: ... this.\n+        * g++.dg/ext/has_nothrow_copy-2.C: New.\n+        * g++.dg/ext/has_nothrow_copy-3.C: Likewise.\n+        * g++.dg/ext/has_nothrow_copy-4.C: Likewise.\n+        * g++.dg/ext/has_nothrow_copy-5.C: Likewise.\n+        * g++.dg/ext/has_nothrow_copy-6.C: Likewise.\n+        * g++.dg/ext/has_nothrow_copy-7.C: Likewise.\n+\n 2008-07-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/36773"}, {"sha": "e8507cf582c4b152de647938736e9d6599d5c2bf", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-1.C", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-1.C?ref=279086c39066177adac8f9589683429e01c325a3", "previous_filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy.C"}, {"sha": "276b11d574c61ae93174170b59b61205e14381b2", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-2.C?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/36871\n+// { dg-do \"run\" }\n+#include <cassert>\n+\n+struct A { template <class T> A (T) throw (int); };\n+struct B { B (B&) throw (); template <class T> B (T) throw (int); };\n+\n+int main ()\n+{\n+  assert (__has_nothrow_copy (A));\n+  assert (__has_nothrow_copy (B));\n+}"}, {"sha": "2fbcf8c80968c3de9c328e588c35f6ec609b3dd5", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-3.C?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/36871\n+// { dg-do \"run\" }\n+#include <cassert>\n+\n+struct F {\n+    F (const F&) throw () { }\n+    template <class T> F (T) throw () { }\n+};\n+\n+int main ()\n+{\n+  assert (__has_nothrow_copy (F));\n+}"}, {"sha": "4bd7475ea7ce390db781fd9f38b0b03f726eca0f", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-4.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-4.C?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/36872\n+// { dg-do \"run\" }\n+#include <cassert>\n+\n+struct S {\n+    S (const S&) throw ();\n+    S (...) throw (int);\n+};\n+\n+int main ()\n+{\n+  assert (__has_nothrow_copy (S));\n+}"}, {"sha": "051675c4d00d5c2b86e976322d0b3f7abbf35301", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-5.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-5.C?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/36872\n+// { dg-do \"run\" }\n+#include <cassert>\n+\n+struct S {\n+    S (const S&) throw ();\n+    S (int) throw (int);\n+};\n+\n+int main ()\n+{\n+  assert (__has_nothrow_copy (S));\n+}"}, {"sha": "4330edd29414594215dae8e1583c49c2d65972d5", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-6.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-6.C?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do \"run\" }\n+#include <cassert>\n+\n+struct S {\n+    S (S&) throw ();\n+    S (const S&, int) throw (int);\n+};\n+\n+int main ()\n+{\n+  assert (__has_nothrow_copy (S));\n+}"}, {"sha": "a85224c3abcc980ad5950b2bd07b72784f4612ed", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-7.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/279086c39066177adac8f9589683429e01c325a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-7.C?ref=279086c39066177adac8f9589683429e01c325a3", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do \"run\" }\n+// { dg-options \"-std=c++0x\" }\n+#include <cassert>\n+\n+struct S {\n+    S (const S&) throw ();\n+    S (S&&) throw (int);\n+};\n+\n+int main ()\n+{\n+  assert (__has_nothrow_copy (S));\n+}"}]}