{"sha": "0af7ef050aed9f678d70d79931ede38374fde863", "node_id": "C_kwDOANBUbNoAKDBhZjdlZjA1MGFlZDlmNjc4ZDcwZDc5OTMxZWRlMzgzNzRmZGU4NjM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-08T08:30:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-08T08:30:17Z"}, "message": "libgomp: Fix segfault with posthumous orphan tasks [PR104385]\n\nThe following patch fixes crashes with posthumous orphan tasks.\nWhen a parent task finishes, gomp_clear_parent clears the parent\npointers of its children tasks present in the parent->children_queue.\nBut children that are still waiting for dependencies aren't in that\nqueue yet, they will be added there only when the sibling they are\nwaiting for exits.  Unfortunately we were adding those tasks into\nthe queues with the original task->parent which then causes crashes\nbecause that task is gone and freed.  The following patch fixes that\nby clearing the parent field when we schedule such task for running\nby adding it into the queues and we know that the sibling task which\nis about to finish has NULL parent.\n\n2022-02-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR libgomp/104385\n\t* task.c (gomp_task_run_post_handle_dependers): If parent is NULL,\n\tclear task->parent.\n\t* testsuite/libgomp.c/pr104385.c: New test.", "tree": {"sha": "c105f2acc20ab08dd9dc3befad16e9c92512a7ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c105f2acc20ab08dd9dc3befad16e9c92512a7ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0af7ef050aed9f678d70d79931ede38374fde863", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af7ef050aed9f678d70d79931ede38374fde863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af7ef050aed9f678d70d79931ede38374fde863", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af7ef050aed9f678d70d79931ede38374fde863/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a362158097352e9f2e4140d58a85ea3c0d95d3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a362158097352e9f2e4140d58a85ea3c0d95d3e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a362158097352e9f2e4140d58a85ea3c0d95d3e4"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "828348c4cf4815a3d71e531ae1100392126bd43a", "filename": "libgomp/task.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af7ef050aed9f678d70d79931ede38374fde863/libgomp%2Ftask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af7ef050aed9f678d70d79931ede38374fde863/libgomp%2Ftask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftask.c?ref=0af7ef050aed9f678d70d79931ede38374fde863", "patch": "@@ -1248,6 +1248,8 @@ gomp_task_run_post_handle_dependers (struct gomp_task *child_task,\n \t\t}\n \t    }\n \t}\n+      else\n+\ttask->parent = NULL;\n       if (taskgroup)\n \t{\n \t  priority_queue_insert (PQ_TASKGROUP, &taskgroup->taskgroup_queue,"}, {"sha": "07495e65e58090ac43c33e81b93029172da3816c", "filename": "libgomp/testsuite/libgomp.c/pr104385.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af7ef050aed9f678d70d79931ede38374fde863/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr104385.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af7ef050aed9f678d70d79931ede38374fde863/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr104385.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr104385.c?ref=0af7ef050aed9f678d70d79931ede38374fde863", "patch": "@@ -0,0 +1,26 @@\n+/* PR libgomp/104385 */\n+\n+#include <unistd.h>\n+\n+int\n+main ()\n+{\n+  int j = 0;\n+  #pragma omp parallel shared(j) num_threads(2)\n+  {\n+    #pragma omp barrier\n+    #pragma omp master\n+    #pragma omp task shared(j)\n+    {\n+      #pragma omp task depend(out: j) shared(j)\n+      {\n+        usleep (10000);\n+        j = 1;\n+      }\n+\n+      #pragma omp task depend(inout: j) shared(j)\n+      j += 1;\n+    }\n+  }\n+  return j - 2;\n+}"}]}