{"sha": "90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkNmI3YmMzYTYxZTc3MzYzMzc3ZWY2ZTVkZmM3MWNmOGVjZmY3MQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-05-22T10:14:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:14:35Z"}, "message": "sem_util.ads: Minor addition of ??? comment.\n\n2015-05-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.ads: Minor addition of ??? comment.\n\t* sem_prag.adb, sem_util.adb: Minor reformatting.\n\t* sem_ch13.adb: minor reformatting.\n\nFrom-SVN: r223532", "tree": {"sha": "43007e00f7f14ed8cf14316a8f02210509c1bce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43007e00f7f14ed8cf14316a8f02210509c1bce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/comments", "author": null, "committer": null, "parents": [{"sha": "eb9008b7557ace9f273c3fa2372dbe99a9b2b9b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb9008b7557ace9f273c3fa2372dbe99a9b2b9b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb9008b7557ace9f273c3fa2372dbe99a9b2b9b3"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "8f1acdb816d63dcdcaf56453d7423f28f61424ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "patch": "@@ -1,3 +1,9 @@\n+2015-05-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.ads: Minor addition of ??? comment.\n+\t* sem_prag.adb, sem_util.adb: Minor reformatting.\n+\t* sem_ch13.adb: minor reformatting.\n+\n 2015-05-22  Robert Dewar  <dewar@adacore.com>\n \n \t* a-reatim.ads: Add Compile_Time_Error to ensure Duration"}, {"sha": "edb1c796df18454daa21408ee5eee8477ad339ec", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "patch": "@@ -3893,6 +3893,9 @@ package body Sem_Ch13 is\n                  (\"indexing function must have at least two parameters\");\n                return;\n \n+            --  For a derived type, check that no indexing aspect is\n+            --  specified for the type if it is also inherited\n+\n             elsif Is_Derived_Type (Ent) then\n                declare\n                   Inherited : Node_Id;\n@@ -3901,13 +3904,12 @@ package body Sem_Ch13 is\n                   if Attr = Name_Constant_Indexing then\n                      Inherited :=\n                        Find_Aspect (Etype (Ent), Aspect_Constant_Indexing);\n+\n                   elsif Attr = Name_Variable_Indexing then\n                      Inherited :=\n                         Find_Aspect (Etype (Ent), Aspect_Variable_Indexing);\n                   end if;\n \n-                  --  What if neither branch taken above ???\n-\n                   if Present (Inherited) then\n                      if Debug_Flag_Dot_XX then\n                         null;"}, {"sha": "5ab6f50211399e95f742323a7fd5f3ee283ced67", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "patch": "@@ -2710,7 +2710,7 @@ package body Sem_Prag is\n          Legal   : out Boolean);\n       --  Subsidiary to the analysis of pragmas Abstract_State and Part_Of.\n       --  Perform full analysis of indicator Part_Of. Item_Id is the entity of\n-      --  an abstract state, object or package instantiation. State is the\n+      --  an abstract state, object, or package instantiation. State is the\n       --  encapsulating state. Indic is the Part_Of indicator. Flag Legal is\n       --  set when the indicator is legal.\n "}, {"sha": "3b91465229c28873a19f8cfbc2005487812d6384", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "patch": "@@ -9323,7 +9323,6 @@ package body Sem_Util is\n \n    function Has_Variable_Input (Const_Id : Entity_Id) return Boolean is\n       Expr : constant Node_Id := Expression (Declaration_Node (Const_Id));\n-\n    begin\n       return\n         Present (Expr) and then not Compile_Time_Known_Value_Or_Aggr (Expr);"}, {"sha": "17dced9cefbbc7f98a0c129b357d8ac8e39de274", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "patch": "@@ -1050,6 +1050,9 @@ package Sem_Util is\n    --  Determine whether the initialization expression of constant Const_Id has\n    --  \"variable input\" (SPARK RM 7.1.1(2)). This roughly maps to the semantic\n    --  concept of a compile-time known value.\n+   --  How can a defined concept in SPARK mapped to an undefined predicate in\n+   --  the compiler (which can change at any moment if the compiler feels like\n+   --  getting more clever about what is compile-time known) ???\n \n    function Has_Volatile_Component (Typ : Entity_Id) return Boolean;\n    --  Given an arbitrary type, determine whether it contains at least one"}]}