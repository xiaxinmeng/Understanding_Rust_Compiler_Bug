{"sha": "a0005b2e7b9186eb071bb44ad5d80559bac82222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAwMDViMmU3YjkxODZlYjA3MWJiNDRhZDVkODA1NTliYWM4MjIyMg==", "commit": {"author": {"name": "Jose Ruiz", "email": "ruiz@adacore.com", "date": "2008-08-20T12:36:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T12:36:24Z"}, "message": "errno.c (__get_errno for MaRTE): Use the MaRTE function pthread_errno to get access to the per-task errno variable.\n\n2008-08-20  Jose Ruiz  <ruiz@adacore.com>\n\n\t* errno.c (__get_errno for MaRTE): Use the MaRTE function pthread_errno\n\tto get access to the per-task errno variable.\n\t(__set_errno for MaRTE): Do not redefine this function here since it is\n\talready defined in MaRTE.\n\nFrom-SVN: r139284", "tree": {"sha": "7ee5b30e090dce17b8b3dcb50c428cf67de2c77f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ee5b30e090dce17b8b3dcb50c428cf67de2c77f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0005b2e7b9186eb071bb44ad5d80559bac82222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0005b2e7b9186eb071bb44ad5d80559bac82222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0005b2e7b9186eb071bb44ad5d80559bac82222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0005b2e7b9186eb071bb44ad5d80559bac82222/comments", "author": {"login": "JoseRuizAdaCore", "id": 22770339, "node_id": "MDQ6VXNlcjIyNzcwMzM5", "avatar_url": "https://avatars.githubusercontent.com/u/22770339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoseRuizAdaCore", "html_url": "https://github.com/JoseRuizAdaCore", "followers_url": "https://api.github.com/users/JoseRuizAdaCore/followers", "following_url": "https://api.github.com/users/JoseRuizAdaCore/following{/other_user}", "gists_url": "https://api.github.com/users/JoseRuizAdaCore/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoseRuizAdaCore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoseRuizAdaCore/subscriptions", "organizations_url": "https://api.github.com/users/JoseRuizAdaCore/orgs", "repos_url": "https://api.github.com/users/JoseRuizAdaCore/repos", "events_url": "https://api.github.com/users/JoseRuizAdaCore/events{/privacy}", "received_events_url": "https://api.github.com/users/JoseRuizAdaCore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3b1401d07ff4874964a8b534dfd8cd94dc978ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b1401d07ff4874964a8b534dfd8cd94dc978ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3b1401d07ff4874964a8b534dfd8cd94dc978ae"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "1f3497dad9e9cdfd9e5d3a1f954877510fdbbda1", "filename": "gcc/ada/errno.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0005b2e7b9186eb071bb44ad5d80559bac82222/gcc%2Fada%2Ferrno.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0005b2e7b9186eb071bb44ad5d80559bac82222/gcc%2Fada%2Ferrno.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrno.c?ref=a0005b2e7b9186eb071bb44ad5d80559bac82222", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 1992-2005, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 1992-2008, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -41,6 +41,21 @@\n #define _THREAD_SAFE\n #define _SGI_MP_SOURCE\n \n+#ifdef MaRTE\n+\n+/* Function that returns a pointer to the per-task errno variable */\n+extern int *pthread_errno (void);\n+\n+int\n+__get_errno (void)\n+{\n+  return *pthread_errno ();\n+}\n+\n+/* Function __set_errno is already defined in package MaRTE.POSIX_Pthread */\n+\n+#else\n+\n #include <errno.h>\n int\n __get_errno(void)\n@@ -53,3 +68,5 @@ __set_errno(int err)\n {\n   errno = err;\n }\n+\n+#endif"}]}