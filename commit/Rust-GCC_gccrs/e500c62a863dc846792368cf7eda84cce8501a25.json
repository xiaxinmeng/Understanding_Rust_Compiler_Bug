{"sha": "e500c62a863dc846792368cf7eda84cce8501a25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwMGM2MmE4NjNkYzg0Njc5MjM2OGNmN2VkYTg0Y2NlODUwMWEyNQ==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2013-08-23T07:33:00Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-08-23T07:33:00Z"}, "message": "predicates.md (ext_sse_reg_operand): New.\n\n* gcc/config/i386/predicates.md (ext_sse_reg_operand): New.\n* gcc/config/i386/i386.md (*movti_internal): Use\npredicate to determine if EVEX is needed.\n(*movsi_internal): Ditto.\n(*movdf_internal): Ditto.\n(*movsf_internal): Ditto.\n* gcc/config/i386/mmx.md (*mov<mode>_internal): Ditto.\n\nFrom-SVN: r201936", "tree": {"sha": "e834f3387f87e2ca2f390ee92c4ebd939466e136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e834f3387f87e2ca2f390ee92c4ebd939466e136"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e500c62a863dc846792368cf7eda84cce8501a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e500c62a863dc846792368cf7eda84cce8501a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e500c62a863dc846792368cf7eda84cce8501a25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e500c62a863dc846792368cf7eda84cce8501a25/comments", "author": null, "committer": null, "parents": [{"sha": "6b00d7dd17673acaf9a34f136345000d473ba6ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b00d7dd17673acaf9a34f136345000d473ba6ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b00d7dd17673acaf9a34f136345000d473ba6ba"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "e571e55169de82f371183effc481035f32ed50fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e500c62a863dc846792368cf7eda84cce8501a25", "patch": "@@ -1,3 +1,13 @@\n+2013-08-23  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* gcc/config/i386/predicates.md (ext_sse_reg_operand): New.\n+\t* gcc/config/i386/i386.md (*movti_internal): Use\n+\tpredicate to determine if EVEX is needed.\n+\t(*movsi_internal): Ditto.\n+\t(*movdf_internal): Ditto.\n+\t(*movsf_internal): Ditto.\n+\t* gcc/config/i386/mmx.md (*mov<mode>_internal): Ditto.\n+\n 2013-08-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/58209"}, {"sha": "3d7533a12f190466c778fe618ce3974054c8f075", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e500c62a863dc846792368cf7eda84cce8501a25", "patch": "@@ -2059,9 +2059,8 @@\n      (cond [(eq_attr \"alternative\" \"2\")\n \t      (const_string \"SI\")\n \t    (eq_attr \"alternative\" \"12,13\")\n-\t      (cond [(ior (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[0]))\")\n-\t\t\t  (and (match_test \"REG_P (operands[1])\")\n-\t\t\t       (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[1]))\")))\n+\t      (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n+\t\t\t  (match_operand 1 \"ext_sse_reg_operand\"))\n \t\t       (const_string \"XI\")\n \t\t     (ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t  (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n@@ -2192,9 +2191,8 @@\n      (cond [(eq_attr \"alternative\" \"2,3\")\n \t      (const_string \"DI\")\n \t    (eq_attr \"alternative\" \"6,7\")\n-\t      (cond [(ior (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[0]))\")\n-\t\t\t  (and (match_test \"REG_P (operands[1])\")\n-\t\t\t       (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[1]))\")))\n+\t      (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n+\t\t\t  (match_operand 1 \"ext_sse_reg_operand\"))\n \t\t       (const_string \"XI\")\n \t\t     (ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t  (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n@@ -2923,9 +2921,8 @@\n \n \t       /* movaps is one byte shorter for non-AVX targets.  */\n \t       (eq_attr \"alternative\" \"10,14\")\n-\t\t (cond [(ior (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[0]))\")\n-\t\t\t     (and (match_test \"REG_P (operands[1])\")\n-\t\t\t\t  (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[1]))\")))\n+\t\t (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n+\t\t\t     (match_operand 1 \"ext_sse_reg_operand\"))\n \t\t\t  (const_string \"V8DF\")\n \t\t\t(ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t     (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n@@ -3072,9 +3069,8 @@\n \t\t  better to maintain the whole registers in single format\n \t\t  to avoid problems on using packed logical operations.  */\n \t       (eq_attr \"alternative\" \"6\")\n-\t\t (cond [(ior (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[0]))\")\n-\t\t\t     (and (match_test \"REG_P (operands[1])\")\n-\t\t\t\t  (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[1]))\")))\n+\t\t (cond [(ior  (match_operand 0 \"ext_sse_reg_operand\")\n+\t\t\t      (match_operand 1 \"ext_sse_reg_operand\"))\n \t\t\t  (const_string \"V16SF\")\n \t\t\t(ior (match_test \"TARGET_SSE_PARTIAL_REG_DEPENDENCY\")\n \t\t\t     (match_test \"TARGET_SSE_SPLIT_REGS\"))"}, {"sha": "17e24999258cb3c55a399681e2410b4c0969e3c1", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=e500c62a863dc846792368cf7eda84cce8501a25", "patch": "@@ -185,9 +185,8 @@\n      (cond [(eq_attr \"alternative\" \"2\")\n \t      (const_string \"SI\")\n \t    (eq_attr \"alternative\" \"11,12,15,16\")\n-\t      (cond [(ior (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[0]))\")\n-\t\t\t  (and (match_test \"REG_P (operands[1])\")\n-\t\t\t       (match_test \"EXT_REX_SSE_REGNO_P (REGNO (operands[1]))\")))\n+\t      (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n+\t\t\t  (match_operand 1 \"ext_sse_reg_operand\"))\n \t\t\t(const_string \"XI\")\n \t\t     (match_test \"<MODE>mode == V2SFmode\")\n \t\t       (const_string \"V4SF\")"}, {"sha": "3959c3892e425845bca6253f15f1f5bb47be12a7", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e500c62a863dc846792368cf7eda84cce8501a25/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=e500c62a863dc846792368cf7eda84cce8501a25", "patch": "@@ -47,6 +47,12 @@\n   (and (match_code \"reg\")\n        (match_test \"SSE_REGNO_P (REGNO (op))\")))\n \n+;; True if the operand is an AVX-512 new register.\n+(define_predicate \"ext_sse_reg_operand\"\n+  (and (match_code \"reg\")\n+       (match_test \"EXT_REX_SSE_REGNO_P (REGNO (op))\")))\n+\n+\n ;; True if the operand is a Q_REGS class register.\n (define_predicate \"q_regs_operand\"\n   (match_operand 0 \"register_operand\")"}]}