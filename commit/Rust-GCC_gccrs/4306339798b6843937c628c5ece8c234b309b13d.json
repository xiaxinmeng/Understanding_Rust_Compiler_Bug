{"sha": "4306339798b6843937c628c5ece8c234b309b13d", "node_id": "C_kwDOANBUbNoAKDQzMDYzMzk3OThiNjg0MzkzN2M2MjhjNWVjZThjMjM0YjMwOWIxM2Q", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-06-21T23:08:56Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-06-21T23:08:56Z"}, "message": "PR target/105991: Recognize PLUS and XOR forms of rldimi in rs6000.md.\n\nThis patch addresses PR target/105991 where a change to prefer representing\nshifts and adds at the tree-level as multiplications, causes problems for\nthe rldimi patterns in the powerpc backend.  The issue is that rs6000.md\nmodels this pattern using IOR, and some variants that have the equivalent\nPLUS or XOR in the RTL fail to match some *rotl<mode>4_insert patterns.\nThis is fixed in this patch by adding a define_insn_and_split to locally\ncanonicalize the PLUS and XOR forms to the backend's preferred IOR form.\n\nAn alternative fix might be for the RTL optimizers to define a canonical\nform for these plus_xor_ior equivalent expressions, but the logical\nchoice might be plus (which may appear in an addressing mode), and such\na change may require a number of tweaks to update various backends\n(i.e.  a more intrusive change than the one proposed here).\n\nMany thanks for Marek Polacek for bootstrapping and regression testing\nthis change without problems.\n\n2022-06-22  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Marek Polacek  <polacek@redhat.com>\n\t    Segher Boessenkool  <segher@kernel.crashing.org>\n\t    Kewen Lin  <linkw@linux.ibm.com>\n\ngcc/ChangeLog\n\tPR target/105991\n\t* config/rs6000/rs6000.md (rotl<mode>3_insert_3): Check that\n\texact_log2 doesn't return -1 (or zero).\n\t(plus_xor): New code iterator.\n\t(*rotl<mode>3_insert_3_<code>): New define_insn_and_split.\n\ngcc/testsuite/ChangeLog\n\tPR target/105991\n\t* gcc.target/powerpc/pr105991.c: New test case.", "tree": {"sha": "6d525c4bc91cc3acd0f01497ba0cabac0ba35e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d525c4bc91cc3acd0f01497ba0cabac0ba35e3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4306339798b6843937c628c5ece8c234b309b13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4306339798b6843937c628c5ece8c234b309b13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4306339798b6843937c628c5ece8c234b309b13d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4306339798b6843937c628c5ece8c234b309b13d/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85d613da341b76308edea48359a5dbc7061937c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d613da341b76308edea48359a5dbc7061937c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d613da341b76308edea48359a5dbc7061937c4"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "090dbcff61d437e397d46ff882ea97651fc2bb0d", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4306339798b6843937c628c5ece8c234b309b13d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4306339798b6843937c628c5ece8c234b309b13d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4306339798b6843937c628c5ece8c234b309b13d", "patch": "@@ -4179,7 +4179,8 @@\n \t\t\t  (match_operand:GPR 4 \"const_int_operand\" \"n\"))\n \t\t (ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n \t\t\t     (match_operand:SI 2 \"const_int_operand\" \"n\"))))]\n-  \"INTVAL (operands[2]) == exact_log2 (UINTVAL (operands[4]) + 1)\"\n+  \"INTVAL (operands[2]) > 0\n+   && INTVAL (operands[2]) == exact_log2 (UINTVAL (operands[4]) + 1)\"\n {\n   if (<MODE>mode == SImode)\n     return \"rlwimi %0,%1,%h2,0,31-%h2\";\n@@ -4188,6 +4189,24 @@\n }\n   [(set_attr \"type\" \"insert\")])\n \n+; Canonicalize the PLUS and XOR forms to IOR for rotl<mode>3_insert_3\n+(define_code_iterator plus_xor [plus xor])\n+\n+(define_insn_and_split \"*rotl<mode>3_insert_3_<code>\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(plus_xor:GPR\n+\t  (and:GPR (match_operand:GPR 3 \"gpc_reg_operand\" \"0\")\n+\t\t   (match_operand:GPR 4 \"const_int_operand\" \"n\"))\n+\t  (ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n+\t\t      (match_operand:SI 2 \"const_int_operand\" \"n\"))))]\n+  \"INTVAL (operands[2]) > 0\n+   && INTVAL (operands[2]) == exact_log2 (UINTVAL (operands[4]) + 1)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(set (match_dup 0)\n+\t(ior:GPR (and:GPR (match_dup 3) (match_dup 4))\n+\t\t (ashift:GPR (match_dup 1) (match_dup 2))))])\n+\n (define_code_iterator plus_ior_xor [plus ior xor])\n \n (define_split"}, {"sha": "439d10f41a386b0f462b2036765af85af9efa711", "filename": "gcc/testsuite/gcc.target/powerpc/pr105991.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4306339798b6843937c628c5ece8c234b309b13d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr105991.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4306339798b6843937c628c5ece8c234b309b13d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr105991.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr105991.c?ref=4306339798b6843937c628c5ece8c234b309b13d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target lp64 } */\n+unsigned long long\n+foo (unsigned long long value)\n+{\n+  value &= 0xffffffff;\n+  value |= value << 32;\n+  return value;\n+}\n+/* { dg-final { scan-assembler {\\mrldimi\\M} } } */"}]}