{"sha": "5177634148aab7a7b193eaa9b8c73ce00a38c481", "node_id": "C_kwDOANBUbNoAKDUxNzc2MzQxNDhhYWI3YTdiMTkzZWFhOWI4YzczY2UwMGEzOGM0ODE", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-03-21T08:16:14Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-03-21T08:17:12Z"}, "message": "RISC-V: Implement misc macro for vector extensions.\n\nSee also:\nhttps://github.com/riscv-non-isa/riscv-c-api-doc/pull/21\n\ngcc/ChangeLog:\n\n\t* common/config/riscv/riscv-common.cc (riscv_ext_flag_table):\n\tUpdate flag name and mask name.\n\t* config/riscv/riscv-c.cc (riscv_cpu_cpp_builtins): Define\n\tmisc macro for vector extensions.\n\t* config/riscv/riscv-opts.h (MASK_VECTOR_EEW_32): Rename to ...\n\t(MASK_VECTOR_ELEN_32): ... this.\n\t(MASK_VECTOR_EEW_64): Rename to ...\n\t(MASK_VECTOR_ELEN_64): ... this.\n\t(MASK_VECTOR_EEW_FP_32): Rename to ...\n\t(MASK_VECTOR_ELEN_FP_32): ... this.\n\t(MASK_VECTOR_EEW_FP_64): Rename to ...\n\t(MASK_VECTOR_ELEN_FP_64): ... this.\n\t(TARGET_VECTOR_ELEN_32): New.\n\t(TARGET_VECTOR_ELEN_64): Ditto.\n\t(TARGET_VECTOR_ELEN_FP_32): Ditto.\n\t(TARGET_VECTOR_ELEN_FP_64): Ditto.\n\t(TARGET_MIN_VLEN): Ditto.\n\t* config/riscv/riscv.opt (riscv_vector_eew_flags): Rename to ...\n\t(riscv_vector_elen_flags): ... this.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/arch-13.c: New.\n\t* gcc.target/riscv/arch-14.c: Ditto.\n\t* gcc.target/riscv/arch-15.c: Ditto.\n\t* gcc.target/riscv/predef-18.c: Ditto.\n\t* gcc.target/riscv/predef-19.c: Ditto.\n\t* gcc.target/riscv/predef-20.c: Ditto.", "tree": {"sha": "f107ae1dbc9b8e1440f46197a50f5ca90647bd88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f107ae1dbc9b8e1440f46197a50f5ca90647bd88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5177634148aab7a7b193eaa9b8c73ce00a38c481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5177634148aab7a7b193eaa9b8c73ce00a38c481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5177634148aab7a7b193eaa9b8c73ce00a38c481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5177634148aab7a7b193eaa9b8c73ce00a38c481/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e767da23de12ceb1bf3aece4dae0ae20bf605b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e767da23de12ceb1bf3aece4dae0ae20bf605b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e767da23de12ceb1bf3aece4dae0ae20bf605b04"}], "stats": {"total": 332, "additions": 319, "deletions": 13}, "files": [{"sha": "1501242e2960e600b15e0866a78619aae27397e0", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -1116,16 +1116,16 @@ static const riscv_ext_flag_table_t riscv_ext_flag_table[] =\n   {\"zve64f\",   &gcc_options::x_target_flags, MASK_VECTOR},\n   {\"zve64d\",   &gcc_options::x_target_flags, MASK_VECTOR},\n \n-  /* We don't need to put complete EEW/EEW_FP info here, due to the\n+  /* We don't need to put complete ELEN/ELEN_FP info here, due to the\n      implication relation of vector extension.\n-     e.g. v -> zve64d ... zve32x, so v has set MASK_VECTOR_EEW_FP_64,\n-     MASK_VECTOR_EEW_FP_32, MASK_VECTOR_EEW_64 and MASK_VECTOR_EEW_32\n+     e.g. v -> zve64d ... zve32x, so v has set MASK_VECTOR_ELEN_FP_64,\n+     MASK_VECTOR_ELEN_FP_32, MASK_VECTOR_ELEN_64 and MASK_VECTOR_ELEN_32\n      due to the extension implication.  */\n-  {\"zve32x\",   &gcc_options::x_riscv_vector_eew_flags, MASK_VECTOR_EEW_32},\n-  {\"zve32f\",   &gcc_options::x_riscv_vector_eew_flags, MASK_VECTOR_EEW_FP_32},\n-  {\"zve64x\",   &gcc_options::x_riscv_vector_eew_flags, MASK_VECTOR_EEW_64},\n-  {\"zve64f\",   &gcc_options::x_riscv_vector_eew_flags, MASK_VECTOR_EEW_FP_32},\n-  {\"zve64d\",   &gcc_options::x_riscv_vector_eew_flags, MASK_VECTOR_EEW_FP_64},\n+  {\"zve32x\",   &gcc_options::x_riscv_vector_elen_flags, MASK_VECTOR_ELEN_32},\n+  {\"zve32f\",   &gcc_options::x_riscv_vector_elen_flags, MASK_VECTOR_ELEN_FP_32},\n+  {\"zve64x\",   &gcc_options::x_riscv_vector_elen_flags, MASK_VECTOR_ELEN_64},\n+  {\"zve64f\",   &gcc_options::x_riscv_vector_elen_flags, MASK_VECTOR_ELEN_FP_32},\n+  {\"zve64d\",   &gcc_options::x_riscv_vector_elen_flags, MASK_VECTOR_ELEN_FP_64},\n \n   {\"zvl32b\",    &gcc_options::x_riscv_zvl_flags, MASK_ZVL32B},\n   {\"zvl64b\",    &gcc_options::x_riscv_zvl_flags, MASK_ZVL64B},"}, {"sha": "eb7ef09297e9dd0fc3ee9c15b0aa5c6cadadad00", "filename": "gcc/config/riscv/riscv-c.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fconfig%2Friscv%2Friscv-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fconfig%2Friscv%2Friscv-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-c.cc?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -104,6 +104,24 @@ riscv_cpu_cpp_builtins (cpp_reader *pfile)\n \n     }\n \n+  if (TARGET_MIN_VLEN != 0)\n+    builtin_define_with_int_value (\"__riscv_v_min_vlen\", TARGET_MIN_VLEN);\n+\n+  if (TARGET_VECTOR_ELEN_64)\n+    builtin_define_with_int_value (\"__riscv_v_elen\", 64);\n+  else if (TARGET_VECTOR_ELEN_32)\n+    builtin_define_with_int_value (\"__riscv_v_elen\", 32);\n+\n+  if (TARGET_VECTOR_ELEN_FP_64)\n+    builtin_define_with_int_value (\"__riscv_v_elen_fp\", 64);\n+  else if (TARGET_VECTOR_ELEN_FP_32)\n+    builtin_define_with_int_value (\"__riscv_v_elen_fp\", 32);\n+  else if (TARGET_MIN_VLEN != 0)\n+    builtin_define_with_int_value (\"__riscv_v_elen_fp\", 0);\n+\n+  if (TARGET_MIN_VLEN)\n+    builtin_define (\"__riscv_vector\");\n+\n   /* Define architecture extension test macros.  */\n   builtin_define_with_int_value (\"__riscv_arch_test\", 1);\n "}, {"sha": "15bb5e76854cce9eca66246547bdedda0e9e9e82", "filename": "gcc/config/riscv/riscv-opts.h", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fconfig%2Friscv%2Friscv-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fconfig%2Friscv%2Friscv-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-opts.h?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -105,10 +105,19 @@ enum stack_protector_guard {\n #define TARGET_ZKSH   ((riscv_zk_subext & MASK_ZKSH) != 0)\n #define TARGET_ZKT    ((riscv_zk_subext & MASK_ZKT) != 0)\n \n-#define MASK_VECTOR_EEW_32    (1 << 0)\n-#define MASK_VECTOR_EEW_64    (1 << 1)\n-#define MASK_VECTOR_EEW_FP_32 (1 << 2)\n-#define MASK_VECTOR_EEW_FP_64 (1 << 3)\n+#define MASK_VECTOR_ELEN_32    (1 << 0)\n+#define MASK_VECTOR_ELEN_64    (1 << 1)\n+#define MASK_VECTOR_ELEN_FP_32 (1 << 2)\n+#define MASK_VECTOR_ELEN_FP_64 (1 << 3)\n+\n+#define TARGET_VECTOR_ELEN_32 \\\n+  ((riscv_vector_elen_flags & MASK_VECTOR_ELEN_32) != 0)\n+#define TARGET_VECTOR_ELEN_64 \\\n+  ((riscv_vector_elen_flags & MASK_VECTOR_ELEN_64) != 0)\n+#define TARGET_VECTOR_ELEN_FP_32 \\\n+  ((riscv_vector_elen_flags & MASK_VECTOR_ELEN_FP_32) != 0)\n+#define TARGET_VECTOR_ELEN_FP_64 \\\n+  ((riscv_vector_elen_flags & MASK_VECTOR_ELEN_FP_64) != 0)\n \n #define MASK_ZVL32B    (1 <<  0)\n #define MASK_ZVL64B    (1 <<  1)\n@@ -136,4 +145,12 @@ enum stack_protector_guard {\n #define TARGET_ZVL32768B ((riscv_zvl_flags & MASK_ZVL32768B) != 0)\n #define TARGET_ZVL65536B ((riscv_zvl_flags & MASK_ZVL65536B) != 0)\n \n+/* Bit of riscv_zvl_flags will set contintuly, N-1 bit will set if N-bit is\n+   set, e.g. MASK_ZVL64B has set then MASK_ZVL32B is set, so we can use\n+   popcount to caclulate the minimal VLEN.  */\n+#define TARGET_MIN_VLEN \\\n+  ((riscv_zvl_flags == 0) \\\n+   ? 0 \\\n+   : 32 << (__builtin_popcount (riscv_zvl_flags) - 1))\n+\n #endif /* ! GCC_RISCV_OPTS_H */"}, {"sha": "492aad1232404c2711811c3d04f2e02902d1b740", "filename": "gcc/config/riscv/riscv.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fconfig%2Friscv%2Friscv.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Fconfig%2Friscv%2Friscv.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.opt?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -204,7 +204,7 @@ TargetVariable\n int riscv_zk_subext\n \n TargetVariable\n-int riscv_vector_eew_flags\n+int riscv_vector_elen_flags\n \n TargetVariable\n int riscv_zvl_flags"}, {"sha": "59a1a03d790924ddc4c5abf9ec5d368f27fd9020", "filename": "gcc/testsuite/gcc.target/riscv/arch-13.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-13.c?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv32gcv -mabi=ilp32 -mcmodel=medlow\" } */\n+int foo()\n+{\n+}"}, {"sha": "8a911a67dee47b0d345a9181bbd1ca3644a475e3", "filename": "gcc/testsuite/gcc.target/riscv/arch-14.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-14.c?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv32gc_zve64f_zvl128b -mabi=ilp32 -mcmodel=medlow\" } */\n+int foo()\n+{\n+}"}, {"sha": "dc494476dcc0600a026ba66693cb5dcd901839b9", "filename": "gcc/testsuite/gcc.target/riscv/arch-15.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-15.c?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv32gcv_zvl128b -mabi=ilp32 -mcmodel=medlow\" } */\n+int foo()\n+{\n+}"}, {"sha": "0f53b41cedef186ef3c79ead4e7295d24e80ef59", "filename": "gcc/testsuite/gcc.target/riscv/predef-18.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-18.c?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -0,0 +1,84 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv64gcv -mabi=lp64d -mcmodel=medlow -misa-spec=2.2\" } */\n+\n+int main () {\n+\n+#ifndef __riscv_arch_test\n+#error \"__riscv_arch_test\"\n+#endif\n+\n+#if __riscv_xlen != 64\n+#error \"__riscv_xlen\"\n+#endif\n+\n+#if !defined(__riscv_i)\n+#error \"__riscv_i\"\n+#endif\n+\n+#if !defined(__riscv_c)\n+#error \"__riscv_c\"\n+#endif\n+\n+#if defined(__riscv_e)\n+#error \"__riscv_e\"\n+#endif\n+\n+#if !defined(__riscv_a)\n+#error \"__riscv_a\"\n+#endif\n+\n+#if !defined(__riscv_m)\n+#error \"__riscv_m\"\n+#endif\n+\n+#if !defined(__riscv_f)\n+#error \"__riscv_f\"\n+#endif\n+\n+#if !defined(__riscv_d)\n+#error \"__riscv_d\"\n+#endif\n+\n+#if !defined(__riscv_v)\n+#error \"__riscv_v\"\n+#endif\n+\n+#if !defined(__riscv_zvl128b)\n+#error \"__riscv_zvl128b\"\n+#endif\n+\n+#if !defined(__riscv_zvl64b)\n+#error \"__riscv_zvl64b\"\n+#endif\n+\n+#if !defined(__riscv_zvl32b)\n+#error \"__riscv_zvl32b\"\n+#endif\n+\n+#if !defined(__riscv_vector)\n+#error \"__riscv_vector\"\n+#endif\n+\n+#if !defined(__riscv_v_min_vlen)\n+#error \"__riscv_v_min_vlen\"\n+#if __riscv_v_min_vlen != 128\n+#error \"__riscv_v_elen != 128\"\n+#endif\n+#endif\n+\n+#if !defined(__riscv_v_elen)\n+#error \"__riscv_v_elen\"\n+#if __riscv_v_elen != 64\n+#error \"__riscv_v_elen != 64\"\n+#endif\n+#endif\n+\n+#if !defined(__riscv_v_elen_fp)\n+#error \"__riscv_v_elen_fp\"\n+#if __riscv_v_elen_fp != 64\n+#error \"__riscv_v_elen_fp != 64\"\n+#endif\n+#endif\n+\n+  return 0;\n+}"}, {"sha": "2b90702192ba194539027457865c3a4f1ee2c7b9", "filename": "gcc/testsuite/gcc.target/riscv/predef-19.c", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-19.c?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -0,0 +1,88 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv64gc_zve32x -mabi=lp64d -mcmodel=medlow -misa-spec=2.2\" } */\n+\n+int main () {\n+\n+#ifndef __riscv_arch_test\n+#error \"__riscv_arch_test\"\n+#endif\n+\n+#if __riscv_xlen != 64\n+#error \"__riscv_xlen\"\n+#endif\n+\n+#if !defined(__riscv_i)\n+#error \"__riscv_i\"\n+#endif\n+\n+#if !defined(__riscv_c)\n+#error \"__riscv_c\"\n+#endif\n+\n+#if defined(__riscv_e)\n+#error \"__riscv_e\"\n+#endif\n+\n+#if !defined(__riscv_a)\n+#error \"__riscv_a\"\n+#endif\n+\n+#if !defined(__riscv_m)\n+#error \"__riscv_m\"\n+#endif\n+\n+#if !defined(__riscv_f)\n+#error \"__riscv_f\"\n+#endif\n+\n+#if !defined(__riscv_d)\n+#error \"__riscv_d\"\n+#endif\n+\n+#if defined(__riscv_v)\n+#error \"__riscv_v\"\n+#endif\n+\n+#if defined(__riscv_zvl128b)\n+#error \"__riscv_zvl128b\"\n+#endif\n+\n+#if defined(__riscv_zvl64b)\n+#error \"__riscv_zvl64b\"\n+#endif\n+\n+#if !defined(__riscv_zvl32b)\n+#error \"__riscv_zvl32b\"\n+#endif\n+\n+#if !defined(__riscv_zve32x)\n+#error \"__riscv_zve32x\"\n+#endif\n+\n+#if !defined(__riscv_vector)\n+#error \"__riscv_vector\"\n+#endif\n+\n+#if !defined(__riscv_v_min_vlen)\n+#error \"__riscv_v_min_vlen\"\n+#if __riscv_v_min_vlen != 32\n+#error \"__riscv_v_elen != 32\"\n+#endif\n+#endif\n+\n+#if !defined(__riscv_v_elen)\n+#error \"__riscv_v_elen\"\n+#if __riscv_v_elen != 32\n+#error \"__riscv_v_elen != 32\"\n+#endif\n+#endif\n+\n+#if !defined(__riscv_v_elen_fp)\n+#error \"__riscv_v_elen_fp\"\n+#if __riscv_v_elen_fp != 0\n+#error \"__riscv_v_elen_fp != 0\"\n+#endif\n+#endif\n+\n+  return 0;\n+}"}, {"sha": "927d25ffc411f01989522233e92db79675f44463", "filename": "gcc/testsuite/gcc.target/riscv/predef-20.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5177634148aab7a7b193eaa9b8c73ce00a38c481/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-20.c?ref=5177634148aab7a7b193eaa9b8c73ce00a38c481", "patch": "@@ -0,0 +1,84 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv64gcv_zvl512b -mabi=lp64d -mcmodel=medlow -misa-spec=2.2\" } */\n+\n+int main () {\n+\n+#ifndef __riscv_arch_test\n+#error \"__riscv_arch_test\"\n+#endif\n+\n+#if __riscv_xlen != 64\n+#error \"__riscv_xlen\"\n+#endif\n+\n+#if !defined(__riscv_i)\n+#error \"__riscv_i\"\n+#endif\n+\n+#if !defined(__riscv_c)\n+#error \"__riscv_c\"\n+#endif\n+\n+#if defined(__riscv_e)\n+#error \"__riscv_e\"\n+#endif\n+\n+#if !defined(__riscv_a)\n+#error \"__riscv_a\"\n+#endif\n+\n+#if !defined(__riscv_m)\n+#error \"__riscv_m\"\n+#endif\n+\n+#if !defined(__riscv_f)\n+#error \"__riscv_f\"\n+#endif\n+\n+#if !defined(__riscv_d)\n+#error \"__riscv_d\"\n+#endif\n+\n+#if !defined(__riscv_v)\n+#error \"__riscv_v\"\n+#endif\n+\n+#if !defined(__riscv_zvl128b)\n+#error \"__riscv_zvl128b\"\n+#endif\n+\n+#if !defined(__riscv_zvl64b)\n+#error \"__riscv_zvl64b\"\n+#endif\n+\n+#if !defined(__riscv_zvl32b)\n+#error \"__riscv_zvl32b\"\n+#endif\n+\n+#if !defined(__riscv_vector)\n+#error \"__riscv_vector\"\n+#endif\n+\n+#if !defined(__riscv_v_min_vlen)\n+#error \"__riscv_v_min_vlen\"\n+#if __riscv_v_min_vlen != 512\n+#error \"__riscv_v_elen != 512\"\n+#endif\n+#endif\n+\n+#if !defined(__riscv_v_elen)\n+#error \"__riscv_v_elen\"\n+#if __riscv_v_elen != 64\n+#error \"__riscv_v_elen != 64\"\n+#endif\n+#endif\n+\n+#if !defined(__riscv_v_elen_fp)\n+#error \"__riscv_v_elen_fp\"\n+#if __riscv_v_elen_fp != 64\n+#error \"__riscv_v_elen_fp != 64\"\n+#endif\n+#endif\n+\n+  return 0;\n+}"}]}