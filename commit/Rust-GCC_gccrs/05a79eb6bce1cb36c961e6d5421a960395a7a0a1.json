{"sha": "05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVhNzllYjZiY2UxY2IzNmM5NjFlNmQ1NDIxYTk2MDM5NWE3YTBhMQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@normalesup.org", "date": "2006-05-10T15:43:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-05-10T15:43:20Z"}, "message": "pool_allocator.h: Add missing std:: qualifications.\n\n2006-05-10  Marc Glisse  <marc.glisse@normalesup.org>\n\n\t* include/ext/pool_allocator.h: Add missing std:: qualifications.\n\t* include/ext/mt_allocator.h: Likewise.\n\t* include/ext/pb_assoc/detail/resize_policy/\n\thash_load_check_resize_trigger_imp.hpp: Likewise.\n\t* include/ext/pb_assoc/detail/resize_policy/\n\thash_standard_resize_policy_imp.hpp: Likewise.\n\t* include/ext/pb_assoc/detail/lu_policy/\n\tcounter_lu_metadata_imp.hpp: Likewise.\n\t* include/ext/pb_assoc/detail/map_debug_base.hpp: Likewise.\n\t* libsupc++/eh_alloc.cc: Typo: memcpy -> memset.\n\nFrom-SVN: r113673", "tree": {"sha": "9a8eb468d3bcaabcfc417dd5b19c3ecd90be4bba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a8eb468d3bcaabcfc417dd5b19c3ecd90be4bba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7fdf6c6980312969655e4c7e90eaba31ec53d16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fdf6c6980312969655e4c7e90eaba31ec53d16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fdf6c6980312969655e4c7e90eaba31ec53d16f"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "b2694b9aa7d9d576be10238feb9d3d1e048d2acc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -1,3 +1,16 @@\n+2006-05-10  Marc Glisse  <marc.glisse@normalesup.org>\n+\n+\t* include/ext/pool_allocator.h: Add missing std:: qualifications.\n+\t* include/ext/mt_allocator.h: Likewise.\n+\t* include/ext/pb_assoc/detail/resize_policy/\n+\thash_load_check_resize_trigger_imp.hpp: Likewise.\n+\t* include/ext/pb_assoc/detail/resize_policy/\n+\thash_standard_resize_policy_imp.hpp: Likewise.\n+\t* include/ext/pb_assoc/detail/lu_policy/\n+\tcounter_lu_metadata_imp.hpp: Likewise.\n+\t* include/ext/pb_assoc/detail/map_debug_base.hpp: Likewise.\n+\t* libsupc++/eh_alloc.cc: Typo: memcpy -> memset.\n+\n 2006-05-07  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits (integral_constant<>::value): Define."}, {"sha": "07de3eddea2a5ab0b6a97e76b0066a985d8d9448", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -1,6 +1,6 @@\n // MT-optimized allocator -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -111,7 +111,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       : _M_align(_S_align), _M_max_bytes(_S_max_bytes), _M_min_bin(_S_min_bin),\n       _M_chunk_size(_S_chunk_size), _M_max_threads(_S_max_threads), \n       _M_freelist_headroom(_S_freelist_headroom), \n-      _M_force_new(getenv(\"GLIBCXX_FORCE_NEW\") ? true : false)\n+      _M_force_new(std::getenv(\"GLIBCXX_FORCE_NEW\") ? true : false)\n       { }\n \n       explicit\n@@ -480,7 +480,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \t\t\t     sizeof(_Tp) * size_t(_Tune::_S_chunk_size),\n \t\t\t     _Tune::_S_max_threads,\n \t\t\t     _Tune::_S_freelist_headroom,\n-\t\t\t     getenv(\"GLIBCXX_FORCE_NEW\") ? true : false);\n+\t\t\t     std::getenv(\"GLIBCXX_FORCE_NEW\") ? true : false);\n \tstatic pool_type _S_pool(_S_tune);\n \treturn _S_pool;\n       }"}, {"sha": "446b1d6c9f37ae2cdd07921224f409e70147edb1", "filename": "libstdc++-v3/include/ext/pb_assoc/detail/lu_policy/counter_lu_metadata_imp.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Flu_policy%2Fcounter_lu_metadata_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Flu_policy%2Fcounter_lu_metadata_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Flu_policy%2Fcounter_lu_metadata_imp.hpp?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,7 +48,7 @@ counter_lu_metadata<\n PB_ASSOC_CLASS_C_DEC::\n operator()(size_type m_max_count) const\n {\n-  return (counter_lu_metadata<Size_Type>(rand() % m_max_count));\n+  return (counter_lu_metadata<Size_Type>(std::rand() % m_max_count));\n }\n \n PB_ASSOC_CLASS_T_DEC"}, {"sha": "1f7dbc07fbdebb703749a98f6be45eeb68ad56d6", "filename": "libstdc++-v3/include/ext/pb_assoc/detail/map_debug_base.hpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fmap_debug_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fmap_debug_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fmap_debug_base.hpp?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -154,7 +154,7 @@ namespace pb_assoc\n \tset_throw_prob(0);\n \n       if (m_key_set.find(r_key) != m_key_set.end())\n-\tabort();\n+\tstd::abort();\n \n       try\n \t{\n@@ -178,12 +178,12 @@ namespace pb_assoc\n     erase_existing(const_key_reference r_key)\n     {\n       if (m_key_set.find(r_key) == m_key_set.end())\n-\tabort();\n+\tstd::abort();\n \n       m_key_set.erase(r_key);\n \n       if (m_key_set.find(r_key) != m_key_set.end())\n-\tabort();\n+\tstd::abort();\n     }\n \n     PB_ASSOC_CLASS_T_DEC\n@@ -200,7 +200,7 @@ namespace pb_assoc\n     check_key_exists(const_key_reference r_key) const\n     {\n       if (m_key_set.find(r_key) == m_key_set.end())\n-\tabort();\n+\tstd::abort();\n     }\n \n     PB_ASSOC_CLASS_T_DEC\n@@ -209,7 +209,7 @@ namespace pb_assoc\n     check_key_does_not_exist(const_key_reference r_key) const\n     {\n       if (m_key_set.find(r_key) != m_key_set.end())\n-\tabort();\n+\tstd::abort();\n     }\n \n     PB_ASSOC_CLASS_T_DEC\n@@ -220,7 +220,7 @@ namespace pb_assoc\n       const size_type key_set_size = m_key_set.size();\n \n       if (size != key_set_size)\n-\tabort();\n+\tstd::abort();\n     }\n \n     PB_ASSOC_CLASS_T_DEC"}, {"sha": "e17f9c2f588aa86631d486d75b9a424091d88809", "filename": "libstdc++-v3/include/ext/pb_assoc/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -336,7 +336,7 @@ void\n PB_ASSOC_CLASS_C_DEC::\n do_resize(size_type /*new_size*/)\n {\n-  abort();\n+  std::abort();\n }\n \n #ifdef PB_ASSOC_HT_LOAD_CHECK_RESIZE_TRIGGER_DEBUG"}, {"sha": "c1df321071bec9dc28b95d3cb1f759eecfc4aafb", "filename": "libstdc++-v3/include/ext/pb_assoc/detail/resize_policy/hash_standard_resize_policy_imp.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fresize_policy%2Fhash_standard_resize_policy_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fresize_policy%2Fhash_standard_resize_policy_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_assoc%2Fdetail%2Fresize_policy%2Fhash_standard_resize_policy_imp.hpp?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -306,7 +306,7 @@ PB_ASSOC_CLASS_C_DEC::\n do_resize(size_type /*new_size*/)\n {\n   // Tmp Ami\n-  abort();\n+  std::abort();\n }\n \n PB_ASSOC_CLASS_T_DEC"}, {"sha": "0d6333660036cbd87f0d923c7a73d64697e343f7", "filename": "libstdc++-v3/include/ext/pool_allocator.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -1,6 +1,7 @@\n // Allocators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -204,7 +205,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \t  // to efficiently support threading found in basic_string.h.\n \t  if (_S_force_new == 0)\n \t    {\n-\t      if (getenv(\"GLIBCXX_FORCE_NEW\"))\n+\t      if (std::getenv(\"GLIBCXX_FORCE_NEW\"))\n \t\t__atomic_add(&_S_force_new, 1);\n \t      else\n \t\t__atomic_add(&_S_force_new, -1);"}, {"sha": "97ecd6dadd58e4aa07f9485de60fec280584adea", "filename": "libstdc++-v3/libsupc++/eh_alloc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05a79eb6bce1cb36c961e6d5421a960395a7a0a1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc?ref=05a79eb6bce1cb36c961e6d5421a960395a7a0a1", "patch": "@@ -44,7 +44,7 @@\n #if _GLIBCXX_HOSTED\n using std::free;\n using std::malloc;\n-using std::memcpy;\n+using std::memset;\n #else\n // In a freestanding environment, these functions may not be available\n // -- but for now, we assume that they are."}]}