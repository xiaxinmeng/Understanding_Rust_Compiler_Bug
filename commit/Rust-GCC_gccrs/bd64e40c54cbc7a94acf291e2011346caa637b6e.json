{"sha": "bd64e40c54cbc7a94acf291e2011346caa637b6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ2NGU0MGM1NGNiYzdhOTRhY2YyOTFlMjAxMTM0NmNhYTYzN2I2ZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-01T06:05:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-01T06:05:05Z"}, "message": "Initial revision\n\nFrom-SVN: r19505", "tree": {"sha": "f5531f8f5908358be970ee3ea5493c4c43a9e7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5531f8f5908358be970ee3ea5493c4c43a9e7db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd64e40c54cbc7a94acf291e2011346caa637b6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd64e40c54cbc7a94acf291e2011346caa637b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd64e40c54cbc7a94acf291e2011346caa637b6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd64e40c54cbc7a94acf291e2011346caa637b6e/comments", "author": null, "committer": null, "parents": [{"sha": "c1879238e72a2cec10d6f4af36165c2e4127171b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1879238e72a2cec10d6f4af36165c2e4127171b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1879238e72a2cec10d6f4af36165c2e4127171b"}], "stats": {"total": 226, "additions": 226, "deletions": 0}, "files": [{"sha": "28d38c76fd68364a19f8ef42601e0421bd9039f1", "filename": "gcc/ABOUT-NLS", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd64e40c54cbc7a94acf291e2011346caa637b6e/gcc%2FABOUT-NLS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd64e40c54cbc7a94acf291e2011346caa637b6e/gcc%2FABOUT-NLS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FABOUT-NLS?ref=bd64e40c54cbc7a94acf291e2011346caa637b6e", "patch": "@@ -0,0 +1,226 @@\n+Notes on the Free Translation Project\n+*************************************\n+\n+   Free software is going international!  The Free Translation Project\n+is a way to get maintainers of free software, translators, and users all\n+together, so that will gradually become able to speak many languages.\n+A few packages already provide translations for their messages.\n+\n+   If you found this `ABOUT-NLS' file inside a distribution, you may\n+assume that the distributed package does use GNU `gettext' internally,\n+itself available at your nearest GNU archive site.  But you do *not*\n+need to install GNU `gettext' prior to configuring, installing or using\n+this package with messages translated.\n+\n+   Installers will find here some useful hints.  These notes also\n+explain how users should proceed for getting the programs to use the\n+available translations.  They tell how people wanting to contribute and\n+work at translations should contact the appropriate team.\n+\n+   When reporting bugs in the `intl/' directory or bugs which may be\n+related to internationalization, you should tell about the version of\n+`gettext' which is used.  The information can be found in the\n+`intl/VERSION' file, in internationalized packages.\n+\n+One advise in advance\n+=====================\n+\n+   If you want to exploit the full power of internationalization, you\n+should configure it using\n+\n+     ./configure --with-included-gettext\n+\n+to force usage of internationalizing routines provided within this\n+package, despite the existence of internationalizing capabilities in the\n+operating system where this package is being installed.  So far, only\n+the `gettext' implementation in the GNU C library version 2 provides as\n+many features (such as locale alias or message inheritance) as the\n+implementation here.  It is also not possible to offer this additional\n+functionality on top of a `catgets' implementation.  Future versions of\n+GNU `gettext' will very likely convey even more functionality.  So it\n+might be a good idea to change to GNU `gettext' as soon as possible.\n+\n+   So you need not provide this option if you are using GNU libc 2 or\n+you have installed a recent copy of the GNU gettext package with the\n+included `libintl'.\n+\n+INSTALL Matters\n+===============\n+\n+   Some packages are \"localizable\" when properly installed; the\n+programs they contain can be made to speak your own native language.\n+Most such packages use GNU `gettext'.  Other packages have their own\n+ways to internationalization, predating GNU `gettext'.\n+\n+   By default, this package will be installed to allow translation of\n+messages.  It will automatically detect whether the system provides\n+usable `catgets' (if using this is selected by the installer) or\n+`gettext' functions.  If neither is available, the GNU `gettext' own\n+library will be used.  This library is wholly contained within this\n+package, usually in the `intl/' subdirectory, so prior installation of\n+the GNU `gettext' package is *not* required.  Installers may use\n+special options at configuration time for changing the default\n+behaviour.  The commands:\n+\n+     ./configure --with-included-gettext\n+     ./configure --with-catgets\n+     ./configure --disable-nls\n+\n+will respectively bypass any pre-existing `catgets' or `gettext' to use\n+the internationalizing routines provided within this package, enable\n+the use of the `catgets' functions (if found on the locale system), or\n+else, *totally* disable translation of messages.\n+\n+   When you already have GNU `gettext' installed on your system and run\n+configure without an option for your new package, `configure' will\n+probably detect the previously built and installed `libintl.a' file and\n+will decide to use this.  This might be not what is desirable.  You\n+should use the more recent version of the GNU `gettext' library.  I.e.\n+if the file `intl/VERSION' shows that the library which comes with this\n+package is more recent, you should use\n+\n+     ./configure --with-included-gettext\n+\n+to prevent auto-detection.\n+\n+   By default the configuration process will not test for the `catgets'\n+function and therefore they will not be used.  The reasons are already\n+given above: the emulation on top of `catgets' cannot provide all the\n+extensions provided by the GNU `gettext' library.  If you nevertheless\n+want to use the `catgets' functions use\n+\n+     ./configure --with-catgets\n+\n+to enable the test for `catgets' (this causes no harm if `catgets' is\n+not available on your system).  If you really select this option we\n+would like to hear about the reasons because we cannot think of any\n+good one ourself.\n+\n+   Internationalized packages have usually many `po/LL.po' files, where\n+LL gives an ISO 639 two-letter code identifying the language.  Unless\n+translations have been forbidden at `configure' time by using the\n+`--disable-nls' switch, all available translations are installed\n+together with the package.  However, the environment variable `LINGUAS'\n+may be set, prior to configuration, to limit the installed set.\n+`LINGUAS' should then contain a space separated list of two-letter\n+codes, stating which languages are allowed.\n+\n+Using This Package\n+==================\n+\n+   As a user, if your language has been installed for this package, you\n+only have to set the `LANG' environment variable to the appropriate\n+ISO 639 `LL' two-letter code prior to using the programs in the\n+package.  For example, let's suppose that you speak German.  At the\n+shell prompt, merely execute `setenv LANG de' (in `csh'),\n+`export LANG; LANG=de' (in `sh') or `export LANG=de' (in `bash').  This\n+can be done from your `.login' or `.profile' file, once and for all.\n+\n+   An operating system might already offer message localization for\n+many of its programs, while other programs have been installed locally\n+with the full capabilities of GNU `gettext'.  Just using `gettext'\n+extended syntax for `LANG' would break proper localization of already\n+available operating system programs.  In this case, users should set\n+both `LANGUAGE' and `LANG' variables in their environment, as programs\n+using GNU `gettext' give preference to `LANGUAGE'.  For example, some\n+Swedish users would rather read translations in German than English for\n+when Swedish is not available.  This is easily accomplished by setting\n+`LANGUAGE' to `sv:de' while leaving `LANG' to `sv'.\n+\n+Translating Teams\n+=================\n+\n+   For the Free Translation Project to be a success, we need interested\n+people who like their own language and write it well, and who are also\n+able to synergize with other translators speaking the same language.\n+Each translation team has its own mailing list, courtesy of Linux\n+International.  You may reach your translation team at the address\n+`LL@li.org', replacing LL by the two-letter ISO 639 code for your\n+language.  Language codes are *not* the same as the country codes given\n+in ISO 3166.  The following translation teams exist, as of December\n+1997:\n+\n+     Chinese `zh', Czech `cs', Danish `da', Dutch `nl', English `en',\n+     Esperanto `eo', Finnish `fi', French `fr', German `de', Hungarian\n+     `hu', Irish `ga', Italian `it', Indonesian `id', Japanese `ja',\n+     Korean `ko', Latin `la', Norwegian `no', Persian `fa', Polish\n+     `pl', Portuguese `pt', Russian `ru', Slovenian `sl', Spanish `es',\n+     Swedish `sv', and Turkish `tr'.\n+\n+For example, you may reach the Chinese translation team by writing to\n+`zh@li.org'.\n+\n+   If you'd like to volunteer to *work* at translating messages, you\n+should become a member of the translating team for your own language.\n+The subscribing address is *not* the same as the list itself, it has\n+`-request' appended.  For example, speakers of Swedish can send a\n+message to `sv-request@li.org', having this message body:\n+\n+     subscribe\n+\n+   Keep in mind that team members are expected to participate\n+*actively* in translations, or at solving translational difficulties,\n+rather than merely lurking around.  If your team does not exist yet and\n+you want to start one, or if you are unsure about what to do or how to\n+get started, please write to `translation@iro.umontreal.ca' to reach the\n+coordinator for all translator teams.\n+\n+   The English team is special.  It works at improving and uniformizing\n+the terminology in use.  Proven linguistic skill are praised more than\n+programming skill, here.\n+\n+Available Packages\n+==================\n+\n+   Languages are not equally supported in all packages.  The following\n+matrix shows the current state of internationalization, as of December\n+1997.  The matrix shows, in regard of each package, for which languages\n+PO files have been submitted to translation coordination.\n+\n+     Ready PO files    cs da de en es fi fr it ja ko nl no pl pt ru sl sv\n+                     .----------------------------------------------------.\n+     bash            |       []          []          []                   |  3\n+     bison           |       []          []          []                   |  3\n+     clisp           |       [] [] []    []                               |  4\n+     cpio            |       []    []    []       [] []    []             |  6\n+     diffutils       |       []    []    []                []          [] |  5\n+     enscript        |       []    [] [] []          []             []    |  6\n+     fileutils       | []    []    []    []       [] []    [] []    [] [] | 10\n+     findutils       |       []    []    [] []    [] []    []    []    [] |  9\n+     flex            |             []    []       []                   [] |  4\n+     gcal            |       []          []          []    []          [] |  5\n+     gettext         |    [] []    []    []       [] [] [] [] []    [] [] | 12\n+     grep            |       []    []    []       [] [] [] []    [] [] [] | 10\n+     hello           |    [] []    []    []       [] [] [] [] []    [] [] | 11\n+     id-utils        |       []          []                []             |  3\n+     indent          |    [] []                   []       []    []       |  5\n+     libc            |       []    []    []       [] []    []          [] |  7\n+     m4              |       []          []    []    []          []    [] |  6\n+     make            |       []    []    []       [] []    []             |  6\n+     music           |                   []                []             |  2\n+     ptx             |       []    []    []          [] [] [] []       [] |  8\n+     recode          |    [] []    []    []          []    [] []    [] [] |  9\n+     sh-utils        |       []    []    []          [] [] [] []       [] |  8\n+     sharutils       | []    []    []    []          []                [] |  6\n+     tar             | []    []          [] []    [] [] [] [] []    [] [] | 11\n+     texinfo         | []    []          []                               |  3\n+     textutils       | []    []    []    []       [] [] [] []          [] |  9\n+     wdiff           | []    []    []    []          [] [] []          [] |  8\n+                     `----------------------------------------------------'\n+       17 languages    cs da de en es fi fr it ja ko nl no pl pt ru sl sv\n+       27 packages      6  4 25  1 18  1 26  2  1 12 20  9 19  7  4  7 17  179\n+\n+   Some counters in the preceding matrix are higher than the number of\n+visible blocks let us expect.  This is because a few extra PO files are\n+used for implementing regional variants of languages, or language\n+dialects.\n+\n+   For a PO file in the matrix above to be effective, the package to\n+which it applies should also have been internationalized and\n+distributed as such by its maintainer.  There might be an observable\n+lag between the mere existence a PO file and its wide availability in a\n+distribution.\n+\n+   If December 1997 seems to be old, you may fetch a more recent copy\n+of this `ABOUT-NLS' file on most GNU archive sites.\n+"}]}