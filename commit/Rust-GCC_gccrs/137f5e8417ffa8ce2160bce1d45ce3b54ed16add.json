{"sha": "137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM3ZjVlODQxN2ZmYThjZTIxNjBiY2UxZDQ1Y2UzYjU0ZWQxNmFkZA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-09T18:01:08Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-09T18:01:08Z"}, "message": "SelectorImpl.java (register): Use ServerSocketChannelSelectionKey for server socket channels...\n\n2003-10-09  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/SelectorImpl.java (register):\n\tUse ServerSocketChannelSelectionKey for server socket channels,\n\tremoved unneeded comments.\n\t* gnu/java/nio/ServerSocketChannelImpl.java\n\t(ServerSocketChannelImpl): Made class public final.\n\t(impl): New member variable.\n\t(ServerSocketChannelImpl): Initialize member variables correctly.\n\t(initServerSocket): New method.\n\t(getNativeFD): Likewise.\n\t* gnu/java/nio/ServerSocketChannelSelectionKey.java,\n\tgnu/java/nio/natServerSocketChannelImpl.cc: New files.\n\t* Makefile.am (ordinary_java_source_files):\n\tAdded gnu/java/nio/ServerSocketChannelSelectionKey.java.\n\t(nat_source_files): Added gnu/java/nio/natServerSocketChannelImpl.cc.\n\t* Makefile.in: Regenrated.\n\nFrom-SVN: r72277", "tree": {"sha": "5eb89b9d4b6823133af7a8e54c008a6ed38522c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eb89b9d4b6823133af7a8e54c008a6ed38522c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "html_url": "https://github.com/Rust-GCC/gccrs/commit/137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/comments", "author": null, "committer": null, "parents": [{"sha": "4e3cb200a543c0a52b4a8ec8f1a1518bfcb08ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e3cb200a543c0a52b4a8ec8f1a1518bfcb08ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e3cb200a543c0a52b4a8ec8f1a1518bfcb08ce2"}], "stats": {"total": 143, "additions": 132, "deletions": 11}, "files": [{"sha": "f652234fb4524fede8c2f5b24cb7d2711993b8b1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "patch": "@@ -1,3 +1,21 @@\n+2003-10-09  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/SelectorImpl.java (register):\n+\tUse ServerSocketChannelSelectionKey for server socket channels,\n+\tremoved unneeded comments.\n+\t* gnu/java/nio/ServerSocketChannelImpl.java\n+\t(ServerSocketChannelImpl): Made class public final.\n+\t(impl): New member variable.\n+\t(ServerSocketChannelImpl): Initialize member variables correctly.\n+\t(initServerSocket): New method.\n+\t(getNativeFD): Likewise.\n+\t* gnu/java/nio/ServerSocketChannelSelectionKey.java,\n+\tgnu/java/nio/natServerSocketChannelImpl.cc: New files.\n+\t* Makefile.am (ordinary_java_source_files):\n+\tAdded gnu/java/nio/ServerSocketChannelSelectionKey.java.\n+\t(nat_source_files): Added gnu/java/nio/natServerSocketChannelImpl.cc.\n+\t* Makefile.in: Regenrated.\n+\n 2003-10-09  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/channels/spi/AbstractSelectableChannel.java"}, {"sha": "c2588eb2bb63e2d1ec8701245f2debcdaaf9c7e9", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "patch": "@@ -2193,6 +2193,7 @@ gnu/java/nio/SelectionKeyImpl.java \\\n gnu/java/nio/SelectorImpl.java \\\n gnu/java/nio/SelectorProviderImpl.java \\\n gnu/java/nio/ServerSocketChannelImpl.java \\\n+gnu/java/nio/ServerSocketChannelSelectionKey.java \\\n gnu/java/nio/SocketChannelImpl.java \\\n gnu/java/nio/SocketChannelSelectionKey.java \\\n gnu/java/nio/charset/ISO_8859_1.java \\\n@@ -2658,6 +2659,7 @@ gnu/java/net/natPlainSocketImpl.cc \\\n gnu/java/net/protocol/core/natCoreInputStream.cc \\\n gnu/java/nio/natFileLockImpl.cc \\\n gnu/java/nio/natSelectorImpl.cc \\\n+gnu/java/nio/natServerSocketChannelImpl.cc \\\n java/io/natFile.cc \\\n java/io/natFileDescriptor.cc \\\n java/io/natObjectInputStream.cc \\"}, {"sha": "cbebfe6dbb151bdc57f80f046b416c9c43f0212c", "filename": "libjava/Makefile.in", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "patch": "@@ -1912,6 +1912,7 @@ gnu/java/nio/SelectionKeyImpl.java \\\n gnu/java/nio/SelectorImpl.java \\\n gnu/java/nio/SelectorProviderImpl.java \\\n gnu/java/nio/ServerSocketChannelImpl.java \\\n+gnu/java/nio/ServerSocketChannelSelectionKey.java \\\n gnu/java/nio/SocketChannelImpl.java \\\n gnu/java/nio/SocketChannelSelectionKey.java \\\n gnu/java/nio/charset/ISO_8859_1.java \\\n@@ -2376,6 +2377,7 @@ gnu/java/net/natPlainSocketImpl.cc \\\n gnu/java/net/protocol/core/natCoreInputStream.cc \\\n gnu/java/nio/natFileLockImpl.cc \\\n gnu/java/nio/natSelectorImpl.cc \\\n+gnu/java/nio/natServerSocketChannelImpl.cc \\\n java/io/natFile.cc \\\n java/io/natFileDescriptor.cc \\\n java/io/natObjectInputStream.cc \\\n@@ -2553,12 +2555,13 @@ gnu/java/net/natPlainDatagramSocketImpl.lo \\\n gnu/java/net/natPlainSocketImpl.lo \\\n gnu/java/net/protocol/core/natCoreInputStream.lo \\\n gnu/java/nio/natFileLockImpl.lo gnu/java/nio/natSelectorImpl.lo \\\n-java/io/natFile.lo java/io/natFileDescriptor.lo \\\n-java/io/natObjectInputStream.lo java/io/natVMObjectStreamClass.lo \\\n-java/lang/natCharacter.lo java/lang/natClass.lo \\\n-java/lang/natClassLoader.lo java/lang/natConcreteProcess.lo \\\n-java/lang/natDouble.lo java/lang/natFloat.lo java/lang/natMath.lo \\\n-java/lang/natObject.lo java/lang/natRuntime.lo java/lang/natString.lo \\\n+gnu/java/nio/natServerSocketChannelImpl.lo java/io/natFile.lo \\\n+java/io/natFileDescriptor.lo java/io/natObjectInputStream.lo \\\n+java/io/natVMObjectStreamClass.lo java/lang/natCharacter.lo \\\n+java/lang/natClass.lo java/lang/natClassLoader.lo \\\n+java/lang/natConcreteProcess.lo java/lang/natDouble.lo \\\n+java/lang/natFloat.lo java/lang/natMath.lo java/lang/natObject.lo \\\n+java/lang/natRuntime.lo java/lang/natString.lo \\\n java/lang/natStringBuffer.lo java/lang/natSystem.lo \\\n java/lang/natThread.lo java/lang/natVMSecurityManager.lo \\\n java/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n@@ -3037,6 +3040,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/nio/SelectorImpl.P \\\n .deps/gnu/java/nio/SelectorProviderImpl.P \\\n .deps/gnu/java/nio/ServerSocketChannelImpl.P \\\n+.deps/gnu/java/nio/ServerSocketChannelSelectionKey.P \\\n .deps/gnu/java/nio/SocketChannelImpl.P \\\n .deps/gnu/java/nio/SocketChannelSelectionKey.P \\\n .deps/gnu/java/nio/charset/ISO_8859_1.P \\\n@@ -3049,6 +3053,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/nio/charset/UTF_16LE.P \\\n .deps/gnu/java/nio/charset/UTF_8.P .deps/gnu/java/nio/natFileLockImpl.P \\\n .deps/gnu/java/nio/natSelectorImpl.P \\\n+.deps/gnu/java/nio/natServerSocketChannelImpl.P \\\n .deps/gnu/java/rmi/RMIMarshalledObjectInputStream.P \\\n .deps/gnu/java/rmi/RMIMarshalledObjectOutputStream.P \\\n .deps/gnu/java/rmi/dgc/DGCImpl.P .deps/gnu/java/rmi/dgc/DGCImpl_Skel.P \\"}, {"sha": "60a81f984587f34383d5ec57b8110ebdaa0ca836", "filename": "libjava/gnu/java/nio/SelectorImpl.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java?ref=137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "patch": "@@ -253,17 +253,17 @@ protected final SelectionKey register (AbstractSelectableChannel ch, int ops,\n     if (ch instanceof SocketChannelImpl)\n       {\n         SocketChannelImpl sc = (SocketChannelImpl) ch;\n-        result = new SocketChannelSelectionKey (ch, this); // FIXME: last argument\n+        result = new SocketChannelSelectionKey (ch, this);\n       }\n     else if (ch instanceof DatagramChannelImpl)\n       {\n         DatagramChannelImpl dc = (DatagramChannelImpl) ch;\n-        result = new DatagramChannelSelectionKey (ch, this); // FIXME: last argument\n+        result = new DatagramChannelSelectionKey (ch, this);\n       }\n     else if (ch instanceof ServerSocketChannelImpl)\n       {\n         ServerSocketChannelImpl ssc = (ServerSocketChannelImpl) ch;\n-        result = new SocketChannelSelectionKey (ch, this); // FIXME: last argument\n+        result = new ServerSocketChannelSelectionKey (ch, this);\n       }\n     else\n       {"}, {"sha": "3ee0ae0849b4208856962918ae88b25f58bb40c5", "filename": "libjava/gnu/java/nio/ServerSocketChannelImpl.java", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java?ref=137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.java.nio;\n \n+import gnu.java.net.PlainSocketImpl;\n import java.io.IOException;\n import java.net.InetSocketAddress;\n import java.net.ServerSocket;\n@@ -47,17 +48,31 @@\n import java.nio.channels.SocketChannel;\n import java.nio.channels.spi.SelectorProvider;\n \n-class ServerSocketChannelImpl extends ServerSocketChannel\n+public final class ServerSocketChannelImpl extends ServerSocketChannel\n {\n   ServerSocket serverSocket;\n+  PlainSocketImpl impl;\n   boolean blocking = true;\n   boolean connected = false;\n \n   protected ServerSocketChannelImpl (SelectorProvider provider)\n     throws IOException\n   {\n     super (provider);\n-    serverSocket = new ServerSocket ();\n+    impl = new PlainSocketImpl();\n+    initServerSocket();\n+  }\n+\n+  /*\n+   * This method is only need to call a package private constructor\n+   * of java.net.ServerSocket. It only initializes the member variables\n+   * \"serverSocket\".\n+   */\n+  private native void initServerSocket() throws IOException;\n+\n+  public int getNativeFD()\n+  {\n+    return impl.getNativeFD();\n   }\n  \n   public void finalizer()"}, {"sha": "55847e49a26d5d4937d8351b10b15b105e53750a", "filename": "libjava/gnu/java/nio/ServerSocketChannelSelectionKey.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelSelectionKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelSelectionKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelSelectionKey.java?ref=137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "patch": "@@ -0,0 +1,56 @@\n+/* ServerSocketChannelSelectionKey.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.nio;\n+\n+import java.nio.channels.spi.AbstractSelectableChannel;\n+\n+public final class ServerSocketChannelSelectionKey\n+  extends SelectionKeyImpl\n+{\n+  public ServerSocketChannelSelectionKey (AbstractSelectableChannel channel,\n+                                          SelectorImpl selector)\n+  {\n+    super (channel, selector);\n+  }\n+\n+  public int getNativeFD()\n+  {\n+    return ((ServerSocketChannelImpl) ch).getNativeFD();\n+  }\n+}"}, {"sha": "a4b1ba4df01741c175d9ed7277c3837b3e63c11f", "filename": "libjava/gnu/java/nio/natServerSocketChannelImpl.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FnatServerSocketChannelImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/137f5e8417ffa8ce2160bce1d45ce3b54ed16add/libjava%2Fgnu%2Fjava%2Fnio%2FnatServerSocketChannelImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatServerSocketChannelImpl.cc?ref=137f5e8417ffa8ce2160bce1d45ce3b54ed16add", "patch": "@@ -0,0 +1,25 @@\n+// natServerSocketChannelImpl.cc\n+\n+/* Copyright (C) 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <config.h>\n+#include <platform.h>\n+\n+#include <errno.h>\n+#include <string.h>\n+\n+#include <gnu/java/net/PlainSocketImpl.h>\n+#include <gnu/java/nio/ServerSocketChannelImpl.h>\n+#include <java/net/ServerSocket.h>\n+\n+void\n+gnu::java::nio::ServerSocketChannelImpl::initServerSocket()\n+{\n+  serverSocket = new ::java::net::ServerSocket (impl);\n+}"}]}