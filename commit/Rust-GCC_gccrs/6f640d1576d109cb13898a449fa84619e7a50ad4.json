{"sha": "6f640d1576d109cb13898a449fa84619e7a50ad4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY2NDBkMTU3NmQxMDljYjEzODk4YTQ0OWZhODQ2MTllN2E1MGFkNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-11-25T16:10:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-11-25T16:10:29Z"}, "message": "re PR c++/58810 (ICE with invalid function typedef)\n\n/cp\n2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58810\n\t* decl.c (grokdeclarator): Don't handle qualified free functions here,\n\tleave the diagnostic to grokfndecl.\n\n/testsuite\n2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58810\n\t* g++.dg/other/cv_func3.C: New.\n\t* g++.dg/other/cv_func.C: Adjust.\n\t* g++.dg/parse/fn-typedef2.C: Likewise.\n\nFrom-SVN: r205356", "tree": {"sha": "3f0f6551c76f559bd6e55ffe94a919e04ae6bbd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f0f6551c76f559bd6e55ffe94a919e04ae6bbd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f640d1576d109cb13898a449fa84619e7a50ad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f640d1576d109cb13898a449fa84619e7a50ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f640d1576d109cb13898a449fa84619e7a50ad4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f640d1576d109cb13898a449fa84619e7a50ad4/comments", "author": null, "committer": null, "parents": [{"sha": "80e87457803f7c77ced5ff80f86b146f53625e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e87457803f7c77ced5ff80f86b146f53625e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80e87457803f7c77ced5ff80f86b146f53625e65"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "8118471f60f4f089cd1a9067754ba9d5b30ac886", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f640d1576d109cb13898a449fa84619e7a50ad4", "patch": "@@ -1,3 +1,9 @@\n+2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58810\n+\t* decl.c (grokdeclarator): Don't handle qualified free functions here,\n+\tleave the diagnostic to grokfndecl.\n+\n 2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59080"}, {"sha": "75e29f4bfa229c79589aca438bed96cef0369548", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6f640d1576d109cb13898a449fa84619e7a50ad4", "patch": "@@ -10256,21 +10256,6 @@ grokdeclarator (const cp_declarator *declarator,\n \n       if (decl_context != TYPENAME)\n \t{\n-\t  /* A cv-qualifier-seq shall only be part of the function type\n-\t     for a non-static member function. A ref-qualifier shall only\n-\t     .... /same as above/ [dcl.fct] */\n-\t  if ((type_memfn_quals (type) != TYPE_UNQUALIFIED\n-\t       || type_memfn_rqual (type) != REF_QUAL_NONE)\n-\t      && (current_class_type == NULL_TREE || staticp) )\n-\t    {\n-\t      error (staticp\n-                     ? G_(\"qualified function types cannot be used to \"\n-                          \"declare static member functions\")\n-                     : G_(\"qualified function types cannot be used to \"\n-                          \"declare free functions\"));\n-\t      type = TYPE_MAIN_VARIANT (type);\n-\t    }\n-\n \t  /* The qualifiers on the function type become the qualifiers on\n \t     the non-static member function. */\n \t  memfn_quals |= type_memfn_quals (type);"}, {"sha": "50e72f4c8803877700cabc2dd640faacd5177f50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f640d1576d109cb13898a449fa84619e7a50ad4", "patch": "@@ -1,3 +1,10 @@\n+2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58810\n+\t* g++.dg/other/cv_func3.C: New.\n+\t* g++.dg/other/cv_func.C: Adjust.\n+\t* g++.dg/parse/fn-typedef2.C: Likewise.\n+\n 2013-11-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/59250\n@@ -20,9 +27,9 @@\n \n \tPR c++/59112\n \tPR c++/59113\n-\tg++.dg/cpp1y/pr58533.C: Updated testcase.\n-\tg++.dg/cpp1y/pr59112.C: New testcase.\n-\tg++.dg/cpp1y/pr59113.C: New testcase.\n+\t* g++.dg/cpp1y/pr58533.C: Updated testcase.\n+\t* g++.dg/cpp1y/pr59112.C: New testcase.\n+\t* g++.dg/cpp1y/pr59113.C: New testcase.\n \n 2013-11-25  Terry Guo  <terry.guo@arm.com>\n "}, {"sha": "2eb9f039a5a8cde73c3008d95897ea5fb0308105", "filename": "gcc/testsuite/g++.dg/other/cv_func.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func.C?ref=6f640d1576d109cb13898a449fa84619e7a50ad4", "patch": "@@ -3,7 +3,7 @@\n typedef int FIC(int) const;\n typedef int FI(int);\n \n-FIC f; // { dg-error \"qualified\" }\n+FIC f; // { dg-error \"cv-qualifier\" }\n struct S {\n   FIC f; // OK\n "}, {"sha": "0fd47882f2aa296e96e4dac1aa699e1573462355", "filename": "gcc/testsuite/g++.dg/other/cv_func3.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func3.C?ref=6f640d1576d109cb13898a449fa84619e7a50ad4", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/58810\n+\n+typedef int F() const;\n+\n+F f;           // { dg-error \"cv-qualifier\" }\n+\n+struct A\n+{\n+  friend F f;  // { dg-error \"cv-qualifier\" }\n+};"}, {"sha": "6bb83024b9f8ee87ebb949edc43d2801573805ef", "filename": "gcc/testsuite/g++.dg/parse/fn-typedef2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffn-typedef2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f640d1576d109cb13898a449fa84619e7a50ad4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffn-typedef2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffn-typedef2.C?ref=6f640d1576d109cb13898a449fa84619e7a50ad4", "patch": "@@ -4,4 +4,4 @@ typedef void ft() const;\n typedef void V;\n typedef V ft() const;\n \n-ft f;\t\t\t\t// { dg-error \"qualified\" }\n+ft f;\t\t\t\t// { dg-error \"cv-qualifier\" }"}]}