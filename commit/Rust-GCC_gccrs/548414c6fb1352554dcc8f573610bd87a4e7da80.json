{"sha": "548414c6fb1352554dcc8f573610bd87a4e7da80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ4NDE0YzZmYjEzNTI1NTRkY2M4ZjU3MzYxMGJkODdhNGU3ZGE4MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-01-20T22:39:41Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-01-20T22:39:41Z"}, "message": "tree-cfg.c (tree_verify_flow_info): Check that a nonlocal label is first in a sequence of labels.\n\n\t* tree-cfg.c (tree_verify_flow_info): Check that a nonlocal\n\tlabel is first in a sequence of labels.\n\nFrom-SVN: r93993", "tree": {"sha": "24e0703176bce23418652b842250ea6d14c1ffbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24e0703176bce23418652b842250ea6d14c1ffbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/548414c6fb1352554dcc8f573610bd87a4e7da80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548414c6fb1352554dcc8f573610bd87a4e7da80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548414c6fb1352554dcc8f573610bd87a4e7da80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548414c6fb1352554dcc8f573610bd87a4e7da80/comments", "author": null, "committer": null, "parents": [{"sha": "35fdf04e91648740cbbff8087d7269fef02a678b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fdf04e91648740cbbff8087d7269fef02a678b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35fdf04e91648740cbbff8087d7269fef02a678b"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "be4bfddfb3f6795f0d9486195ed7eba97d6ae0a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/548414c6fb1352554dcc8f573610bd87a4e7da80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/548414c6fb1352554dcc8f573610bd87a4e7da80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=548414c6fb1352554dcc8f573610bd87a4e7da80", "patch": "@@ -1,3 +1,8 @@\n+2005-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-cfg.c (tree_verify_flow_info): Check that a nonlocal\n+\tlabel is first in a sequence of labels.\n+\n 2005-01-20  Janis Johnson  <janis187@us.ibm.com>\n \t    Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n "}, {"sha": "e7abf97de48ecfc81121af88903563bf49f9d27f", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/548414c6fb1352554dcc8f573610bd87a4e7da80/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/548414c6fb1352554dcc8f573610bd87a4e7da80/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=548414c6fb1352554dcc8f573610bd87a4e7da80", "patch": "@@ -3595,25 +3595,38 @@ tree_verify_flow_info (void)\n     {\n       bool found_ctrl_stmt = false;\n \n+      stmt = NULL_TREE;\n+\n       /* Skip labels on the start of basic block.  */\n       for (bsi = bsi_start (bb); !bsi_end_p (bsi); bsi_next (&bsi))\n \t{\n-\t  if (TREE_CODE (bsi_stmt (bsi)) != LABEL_EXPR)\n+\t  tree prev_stmt = stmt;\n+\n+\t  stmt = bsi_stmt (bsi);\n+\n+\t  if (TREE_CODE (stmt) != LABEL_EXPR)\n \t    break;\n \n-\t  if (label_to_block (LABEL_EXPR_LABEL (bsi_stmt (bsi))) != bb)\n+\t  if (prev_stmt && DECL_NONLOCAL (LABEL_EXPR_LABEL (stmt)))\n+\t    {\n+\t      error (\"Nonlocal label %s is not first \"\n+\t\t     \"in a sequence of labels in bb %d\"\",\n+\t\t     IDENTIFIER_POINTER (DECL_NAME (LABEL_EXPR_LABEL (stmt))),\n+\t\t     bb->index);\n+\t      err = 1;\n+\t    }\n+\n+\t  if (label_to_block (LABEL_EXPR_LABEL (stmt)) != bb)\n \t    {\n-\t      tree stmt = bsi_stmt (bsi);\n \t      error (\"Label %s to block does not match in bb %d\\n\",\n \t\t     IDENTIFIER_POINTER (DECL_NAME (LABEL_EXPR_LABEL (stmt))),\n \t\t     bb->index);\n \t      err = 1;\n \t    }\n \n-\t  if (decl_function_context (LABEL_EXPR_LABEL (bsi_stmt (bsi)))\n+\t  if (decl_function_context (LABEL_EXPR_LABEL (stmt))\n \t      != current_function_decl)\n \t    {\n-\t      tree stmt = bsi_stmt (bsi);\n \t      error (\"Label %s has incorrect context in bb %d\\n\",\n \t\t     IDENTIFIER_POINTER (DECL_NAME (LABEL_EXPR_LABEL (stmt))),\n \t\t     bb->index);"}]}