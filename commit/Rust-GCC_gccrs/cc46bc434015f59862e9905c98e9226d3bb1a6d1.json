{"sha": "cc46bc434015f59862e9905c98e9226d3bb1a6d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M0NmJjNDM0MDE1ZjU5ODYyZTk5MDVjOThlOTIyNmQzYmIxYTZkMQ==", "commit": {"author": {"name": "Andrew Burgess", "email": "andrew.burgess@embecosm.com", "date": "2016-11-30T11:38:46Z"}, "committer": {"name": "Andrew Burgess", "email": "aburgess@gcc.gnu.org", "date": "2016-11-30T11:38:46Z"}, "message": "arm/gcc: Tighten checks in check_effective_target_freorder\n\nIn check_effective_target_freorder we check to see if the target\nsupports -freorder-blocks-and-partition.  However we disable\n-freorder-blocks-and-partition when -fprofile-use is not supplied so for\nsome targets we'll not see any message about lack of support for\n-freorder-blocks-and-partition unless -fprofile-use is also passed.\n\nThis commit extends check_effective_target_freorder to first try\n-freorder-blocks-and-partition on its own, then try -fprofile-use and\n-freorder-blocks-and-partition.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/target-supports.exp (check_effective_target_freorder): Check\n\tadditional case.\n\nFrom-SVN: r243009", "tree": {"sha": "012a743dab7490f57b4aea335d87806cf990875d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/012a743dab7490f57b4aea335d87806cf990875d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc46bc434015f59862e9905c98e9226d3bb1a6d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc46bc434015f59862e9905c98e9226d3bb1a6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc46bc434015f59862e9905c98e9226d3bb1a6d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc46bc434015f59862e9905c98e9226d3bb1a6d1/comments", "author": {"login": "T-J-Teru", "id": 475372, "node_id": "MDQ6VXNlcjQ3NTM3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-J-Teru", "html_url": "https://github.com/T-J-Teru", "followers_url": "https://api.github.com/users/T-J-Teru/followers", "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}", "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions", "organizations_url": "https://api.github.com/users/T-J-Teru/orgs", "repos_url": "https://api.github.com/users/T-J-Teru/repos", "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}", "received_events_url": "https://api.github.com/users/T-J-Teru/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c8bf066581fe8bbd53e5967a49b6edd622f63b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8bf066581fe8bbd53e5967a49b6edd622f63b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c8bf066581fe8bbd53e5967a49b6edd622f63b8"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "e89bca598d643d1d795266bbf3b21c20ab7ad77f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc46bc434015f59862e9905c98e9226d3bb1a6d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc46bc434015f59862e9905c98e9226d3bb1a6d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc46bc434015f59862e9905c98e9226d3bb1a6d1", "patch": "@@ -1,3 +1,8 @@\n+2016-11-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_freorder): Check\n+\tadditional case.\n+\n 2016-11-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gcc.target/arc/arc700-stld-hazard.c: New file."}, {"sha": "ace080e9c471f8ce66ae76294747f57221d7e03b", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc46bc434015f59862e9905c98e9226d3bb1a6d1/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc46bc434015f59862e9905c98e9226d3bb1a6d1/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=cc46bc434015f59862e9905c98e9226d3bb1a6d1", "patch": "@@ -1011,12 +1011,19 @@ proc check_effective_target_fstack_protector {} {\n }\n \n # Return 1 if compilation with -freorder-blocks-and-partition is error-free\n-# for trivial code, 0 otherwise.\n+# for trivial code, 0 otherwise.  As some targets (ARM for example) only\n+# warn when -fprofile-use is also supplied we test that combination too.\n \n proc check_effective_target_freorder {} {\n-    return [check_no_compiler_messages freorder object {\n+    if { [check_no_compiler_messages freorder object {\n \tvoid foo (void) { }\n     } \"-freorder-blocks-and-partition\"]\n+    && [check_no_compiler_messages fprofile_use_freorder object {\n+\tvoid foo (void) { }\n+    } \"-fprofile-use -freorder-blocks-and-partition\"] } {\n+\treturn 1\n+    }\n+    return 0\n }\n \n # Return 1 if -fpic and -fPIC are supported, as in no warnings or errors"}]}