{"sha": "7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QzYzZjZDhmNGVhMDBiOTg0Y2UxMWNjOGFhZDMyODJkYTFiNjQwOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-07-05T17:08:58Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-07-05T17:08:58Z"}, "message": "ia64: Remove dead code in process_epilogue.\n\n        * config/ia64/ia64.c (ia64_emit_deleted_label_after_insn): Remove.\n        (IA64_CHANGE_CFA_IN_EPILOGUE): Remove.\n        (process_epilogue): Don't call dwarf2out_def_cfa.\n\nFrom-SVN: r175874", "tree": {"sha": "74abf2939d445a95229b6954eeaebbd2378a238e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74abf2939d445a95229b6954eeaebbd2378a238e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408/comments", "author": null, "committer": null, "parents": [{"sha": "5f7409731ea5a9ffecfb27527adeae31fb2353a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7409731ea5a9ffecfb27527adeae31fb2353a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f7409731ea5a9ffecfb27527adeae31fb2353a0"}], "stats": {"total": 39, "additions": 6, "deletions": 33}, "files": [{"sha": "079b95a68a547533b728fe94262e6204aef4f584", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "patch": "@@ -1,5 +1,9 @@\n 2011-07-05  Richard Henderson  <rth@redhat.com>\n \n+\t* config/ia64/ia64.c (ia64_emit_deleted_label_after_insn): Remove.\n+\t(IA64_CHANGE_CFA_IN_EPILOGUE): Remove.\n+\t(process_epilogue): Don't call dwarf2out_def_cfa.\n+\n \t* config/ia64/ia64.c (ia64_expand_prologue): Use pc_rtx to\n \tindicate the return address save.\n \t(process_cfa_register): Likewise."}, {"sha": "bdabe82126c215c20e0eeab655a30e821bf380b5", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 2, "deletions": 33, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "patch": "@@ -9620,29 +9620,6 @@ static bool need_copy_state;\n # define MAX_ARTIFICIAL_LABEL_BYTES 30\n #endif\n \n-/* Emit a debugging label after a call-frame-related insn.  We'd\n-   rather output the label right away, but we'd have to output it\n-   after, not before, the instruction, and the instruction has not\n-   been output yet.  So we emit the label after the insn, delete it to\n-   avoid introducing basic blocks, and mark it as preserved, such that\n-   it is still output, given that it is referenced in debug info.  */\n-\n-static const char *\n-ia64_emit_deleted_label_after_insn (rtx insn)\n-{\n-  char label[MAX_ARTIFICIAL_LABEL_BYTES];\n-  rtx lb = gen_label_rtx ();\n-  rtx label_insn = emit_label_after (lb, insn);\n-\n-  LABEL_PRESERVE_P (lb) = 1;\n-\n-  delete_insn (label_insn);\n-\n-  ASM_GENERATE_INTERNAL_LABEL (label, \"L\", CODE_LABEL_NUMBER (label_insn));\n-\n-  return xstrdup (label);\n-}\n-\n /* All we need to do here is avoid a crash in the generic dwarf2\n    processing.  The real CFA definition is set up above.  */\n \n@@ -9654,16 +9631,11 @@ ia64_dwarf_handle_frame_unspec (const char * ARG_UNUSED (label),\n   gcc_assert (index == UNSPECV_ALLOC);\n }\n \n-/* The generic dwarf2 frame debug info generator does not define a\n-   separate region for the very end of the epilogue, so refrain from\n-   doing so in the IA64-specific code as well.  */\n-\n-#define IA64_CHANGE_CFA_IN_EPILOGUE 0\n-\n /* The function emits unwind directives for the start of an epilogue.  */\n \n static void\n-process_epilogue (FILE *asm_out_file, rtx insn, bool unwind, bool frame)\n+process_epilogue (FILE *asm_out_file, rtx insn ATTRIBUTE_UNUSED,\n+\t\t  bool unwind, bool frame ATTRIBUTE_UNUSED)\n {\n   /* If this isn't the last block of the function, then we need to label the\n      current state, and copy it back in at the start of the next block.  */\n@@ -9678,9 +9650,6 @@ process_epilogue (FILE *asm_out_file, rtx insn, bool unwind, bool frame)\n \n   if (unwind)\n     fprintf (asm_out_file, \"\\t.restore sp\\n\");\n-  if (IA64_CHANGE_CFA_IN_EPILOGUE && frame)\n-    dwarf2out_def_cfa (ia64_emit_deleted_label_after_insn (insn),\n-\t\t       STACK_POINTER_REGNUM, INCOMING_FRAME_SP_OFFSET);\n }\n \n /* This function processes a SET pattern for REG_CFA_ADJUST_CFA.  */"}]}