{"sha": "14a8763670981928cef330b7bf8c0244bb982a29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhODc2MzY3MDk4MTkyOGNlZjMzMGI3YmY4YzAyNDRiYjk4MmEyOQ==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@linaro.org", "date": "2013-07-30T06:53:31Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2013-07-30T06:53:31Z"}, "message": "re PR rtl-optimization/57637 (Miscompare on 178.galgel in SPEC2000 on arm)\n\ngcc/\n2013-07-30  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n\n\tPR rtl-optimization/57637\n\t* function.c (move_insn_for_shrink_wrap): Also check the\n\tGEN set of the LIVE problem for the liveness analysis\n\tif it exists, otherwise give up.\n\ngcc/testsuite/\n2013-07-30  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n\n\t* gcc.target/arm/pr57637.c: New testcase.\n\nFrom-SVN: r201326", "tree": {"sha": "cddc971ff059f063a09fd2eca1f25f0cdfba0a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cddc971ff059f063a09fd2eca1f25f0cdfba0a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a8763670981928cef330b7bf8c0244bb982a29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a8763670981928cef330b7bf8c0244bb982a29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a8763670981928cef330b7bf8c0244bb982a29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a8763670981928cef330b7bf8c0244bb982a29/comments", "author": null, "committer": null, "parents": [{"sha": "0100cd3f7e52acbf862e6c46e5d56c348fffb88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0100cd3f7e52acbf862e6c46e5d56c348fffb88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0100cd3f7e52acbf862e6c46e5d56c348fffb88c"}], "stats": {"total": 266, "additions": 253, "deletions": 13}, "files": [{"sha": "d073a190471464108b3315d5c492fa9800e90398", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14a8763670981928cef330b7bf8c0244bb982a29", "patch": "@@ -1,3 +1,10 @@\n+2013-07-30  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n+\n+\tPR rtl-optimization/57637\n+\t* function.c (move_insn_for_shrink_wrap): Also check the\n+\tGEN set of the LIVE problem for the liveness analysis\n+\tif it exists, otherwise give up.\n+\n 2013-07-29  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n \n \tPR tree-optimization/57993"}, {"sha": "953fd48b2ad21e10e81f6e93c86a121ef08a9002", "filename": "gcc/function.c", "status": "modified", "additions": 36, "deletions": 13, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=14a8763670981928cef330b7bf8c0244bb982a29", "patch": "@@ -5506,22 +5506,45 @@ move_insn_for_shrink_wrap (basic_block bb, rtx insn,\n \t except for any part that overlaps SRC (next loop).  */\n       bb_uses = &DF_LR_BB_INFO (bb)->use;\n       bb_defs = &DF_LR_BB_INFO (bb)->def;\n-      for (i = dregno; i < end_dregno; i++)\n+      if (df_live)\n \t{\n-\t  if (REGNO_REG_SET_P (bb_uses, i) || REGNO_REG_SET_P (bb_defs, i))\n-\t    next_block = NULL;\n-\t  CLEAR_REGNO_REG_SET (live_out, i);\n-\t  CLEAR_REGNO_REG_SET (live_in, i);\n-\t}\n+\t  for (i = dregno; i < end_dregno; i++)\n+\t    {\n+\t      if (REGNO_REG_SET_P (bb_uses, i) || REGNO_REG_SET_P (bb_defs, i)\n+\t\t  || REGNO_REG_SET_P (&DF_LIVE_BB_INFO (bb)->gen, i))\n+\t\tnext_block = NULL;\n+\t      CLEAR_REGNO_REG_SET (live_out, i);\n+\t      CLEAR_REGNO_REG_SET (live_in, i);\n+\t    }\n \n-      /* Check whether BB clobbers SRC.  We need to add INSN to BB if so.\n-\t Either way, SRC is now live on entry.  */\n-      for (i = sregno; i < end_sregno; i++)\n+\t  /* Check whether BB clobbers SRC.  We need to add INSN to BB if so.\n+\t     Either way, SRC is now live on entry.  */\n+\t  for (i = sregno; i < end_sregno; i++)\n+\t    {\n+\t      if (REGNO_REG_SET_P (bb_defs, i)\n+\t\t  || REGNO_REG_SET_P (&DF_LIVE_BB_INFO (bb)->gen, i))\n+\t\tnext_block = NULL;\n+\t      SET_REGNO_REG_SET (live_out, i);\n+\t      SET_REGNO_REG_SET (live_in, i);\n+\t    }\n+\t}\n+      else\n \t{\n-\t  if (REGNO_REG_SET_P (bb_defs, i))\n-\t    next_block = NULL;\n-\t  SET_REGNO_REG_SET (live_out, i);\n-\t  SET_REGNO_REG_SET (live_in, i);\n+\t  /* DF_LR_BB_INFO (bb)->def does not comprise the DF_REF_PARTIAL and\n+\t     DF_REF_CONDITIONAL defs.  So if DF_LIVE doesn't exist, i.e.\n+\t     at -O1, just give up searching NEXT_BLOCK.  */\n+\t  next_block = NULL;\n+\t  for (i = dregno; i < end_dregno; i++)\n+\t    {\n+\t      CLEAR_REGNO_REG_SET (live_out, i);\n+\t      CLEAR_REGNO_REG_SET (live_in, i);\n+\t    }\n+\n+\t  for (i = sregno; i < end_sregno; i++)\n+\t    {\n+\t      SET_REGNO_REG_SET (live_out, i);\n+\t      SET_REGNO_REG_SET (live_in, i);\n+\t    }\n \t}\n \n       /* If we don't need to add the move to BB, look for a single"}, {"sha": "3c6e5e8203992db475473e596715fd3193117fe9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14a8763670981928cef330b7bf8c0244bb982a29", "patch": "@@ -1,3 +1,7 @@\n+2013-07-30  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n+\n+\t* gcc.target/arm/pr57637.c: New testcase.\n+\n 2013-07-29  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n \n \tPR tree-optimization/57993"}, {"sha": "2b9bfdded7f6ac70814d57620eda4b44bbc8cd75", "filename": "gcc/testsuite/gcc.target/arm/pr57637.c", "status": "added", "additions": 206, "deletions": 0, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr57637.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a8763670981928cef330b7bf8c0244bb982a29/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr57637.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr57637.c?ref=14a8763670981928cef330b7bf8c0244bb982a29", "patch": "@@ -0,0 +1,206 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-inline\" } */\n+\n+typedef struct _GtkCssStyleProperty GtkCssStyleProperty;\n+\n+struct _GtkCssStyleProperty\n+{\n+  int *initial_value;\n+  unsigned int id;\n+  unsigned int inherit :1;\n+  unsigned int animated :1;\n+  unsigned int affects_size :1;\n+  unsigned int affects_font :1;\n+\n+  int * parse_value;\n+  int * query_value;\n+  int * assign_value;\n+};\n+\n+void\n+g_assertion_message_expr (const char *domain,\n+\t\t\t  const char *file,\n+\t\t\t  int line,\n+\t\t\t  const char *func,\n+\t\t\t  const char *expr) __attribute__((__noreturn__));\n+\n+void\n+g_assertion_message_expr (const char *domain,\n+\t\t\t  const char *file,\n+\t\t\t  int line,\n+\t\t\t  const char *func,\n+\t\t\t  const char *expr)\n+{\n+  __builtin_abort ();\n+}\n+int\n+get_id (GtkCssStyleProperty *property)\n+{\n+  return 1;\n+}\n+int\n+_gtk_css_style_property_get_type ()\n+{\n+  return 1;\n+}\n+\n+GtkCssStyleProperty *\n+g_object_new (int object_type,\n+            const char *first_property_name,\n+            ...)\n+{\n+  return (GtkCssStyleProperty *) __builtin_malloc (sizeof (GtkCssStyleProperty));\n+}\n+\n+typedef enum {\n+  INHERIT = (1 << 0),\n+  ANIMATED = (1 << 1),\n+  RESIZE = (1 << 2),\n+  FONT = (1 << 3)\n+} GtkStylePropertyFlags;\n+\n+int t = 0;\n+void\n+gtk_css_style_property_register (const char * name,\n+\t\t\t\t int expected_id,\n+\t\t\t\t int value_type,\n+\t\t\t\t int flags,\n+\t\t\t\t int *parse_value,\n+\t\t\t\t int *query_value,\n+\t\t\t\t int *assign_value,\n+\t\t\t\t int *initial_value)\n+{\n+  GtkCssStyleProperty *node;\n+\n+  do\n+    {\n+      if (__builtin_expect (__extension__ (\n+\t\t\t\t\t   {\n+\t\t\t\t\t     int _g_boolean_var_;\n+\t\t\t\t\t     if (initial_value != ((void *)0))\n+\t\t\t\t\t       _g_boolean_var_ = 1;\n+\t\t\t\t\t     else\n+\t\t\t\t\t       _g_boolean_var_ = 0;\n+\t\t\t\t\t     _g_boolean_var_;\n+\t\t\t\t\t   }),\n+\t\t\t    1))\n+\t;\n+      else\n+        g_assertion_message_expr (\"Gtk\",\n+\t\t\t\t  \"gtkcssstylepropertyimpl.c\",\n+\t\t\t\t  85,\n+\t\t\t\t  ((const char*) (__PRETTY_FUNCTION__)),\n+\t\t\t\t  \"initial_value != NULL\");\n+    } while (0);\n+\n+  do\n+    {\n+      if (__builtin_expect (__extension__ (\n+\t\t\t\t\t   {\n+\t\t\t\t\t     int _g_boolean_var_;\n+\t\t\t\t\t     if (parse_value != ((void *)0))\n+\t\t\t\t\t       _g_boolean_var_ = 1;\n+\t\t\t\t\t     else\n+\t\t\t\t\t       _g_boolean_var_ = 0;\n+\t\t\t\t\t     _g_boolean_var_;\n+\t\t\t\t\t   }),\n+\t\t\t    1))\n+\t;\n+      else\n+\tg_assertion_message_expr (\"Gtk\",\n+\t\t\t\t  \"gtkcssstylepropertyimpl.c\",\n+\t\t\t\t  86,\n+\t\t\t\t  ((const char*) (__PRETTY_FUNCTION__)),\n+\t\t\t\t  \"parse_value != NULL\");\n+    } while (0);\n+\n+  do\n+    {\n+      if (__builtin_expect (__extension__ (\n+\t\t\t\t\t   {\n+\t\t\t\t\t     int _g_boolean_var_;\n+\t\t\t\t\t     if (value_type == ((int) ((1) << (2)))\n+\t\t\t\t\t\t || query_value != ((void *)0))\n+\t\t\t\t\t       _g_boolean_var_ = 1;\n+\t\t\t\t\t     else\n+\t\t\t\t\t       _g_boolean_var_ = 0;\n+\t\t\t\t\t     _g_boolean_var_;\n+\t\t\t\t\t   }),\n+\t\t\t    1))\n+\t;\n+      else\n+\tg_assertion_message_expr (\"Gtk\",\n+\t\t\t\t  \"gtkcssstylepropertyimpl.c\",\n+\t\t\t\t  87, ((const char*) (__PRETTY_FUNCTION__)),\n+\t\t\t\t  \"value_type == NONE || query_value != NULL\");\n+    } while (0);\n+\n+  /* FLAGS is changed in a cond_exec instruction with pr57637.  */\n+  if (flags  == 15)\n+    t = 15;\n+\n+  do\n+    {\n+      if (__builtin_expect (__extension__ (\n+\t\t\t\t\t   {\n+\t\t\t\t\t     int _g_boolean_var_;\n+\t\t\t\t\t     if (value_type == ((1) << (2))\n+\t\t\t\t\t\t || assign_value != ((void *)0))\n+\t\t\t\t\t       _g_boolean_var_ = 1;\n+\t\t\t\t\t     else\n+\t\t\t\t\t       _g_boolean_var_ = 0;\n+\t\t\t\t\t     _g_boolean_var_;\n+\t\t\t\t\t   }),\n+\t\t\t    1))\n+\t;\n+      else\n+\tg_assertion_message_expr (\"Gtk\",\n+\t\t\t\t  \"gtkcssstylepropertyimpl.c\",\n+\t\t\t\t  88, ((const char*) (__PRETTY_FUNCTION__)),\n+\t\t\t\t  \"value_type == NONE || assign_value != NULL\");\n+    } while (0);\n+\n+  node = g_object_new ((_gtk_css_style_property_get_type ()),\n+\t\t\t\"value-type\", value_type,\n+\t\t\t\"affects-size\", (flags & RESIZE) ? (0) : (!(0)),\n+\t\t\t\"affects-font\", (flags & FONT) ? (!(0)) : (0),\n+\t\t\t\"animated\", (flags & ANIMATED) ? (!(0)) : (0),\n+\t\t\t\"inherit\", (flags & INHERIT) ? (!(0)) : (0),\n+\t\t\t\"initial-value\", initial_value,\n+\t\t\t\"name\", name,\n+\t\t\t((void *)0));\n+\n+  node->parse_value = parse_value;\n+  node->query_value = query_value;\n+  node->assign_value = assign_value;\n+\n+  do\n+    {\n+      if (__builtin_expect (__extension__ (\n+\t\t\t\t\t   {\n+\t\t\t\t\t     int _g_boolean_var_;\n+\t\t\t\t\t     if (get_id (node) == expected_id)\n+\t\t\t\t\t       _g_boolean_var_ = 1;\n+\t\t\t\t\t     else\n+\t\t\t\t\t       _g_boolean_var_ = 0;\n+\t\t\t\t\t     _g_boolean_var_;\n+\t\t\t\t\t   }),\n+\t\t\t    1))\n+\t;\n+      else\n+\tg_assertion_message_expr (\"Gtk\",\n+\t\t\t\t  \"gtkcssstylepropertyimpl.c\",\n+\t\t\t\t  106,\n+\t\t\t\t  ((const char*) (__PRETTY_FUNCTION__)),\n+\t\t\t\t  \"get_id (node) == expected_id\");\n+    } while (0);\n+}\n+\n+int main ()\n+{\n+  gtk_css_style_property_register (\"test\", 1, 4, 15, &t, &t, &t, &t);\n+\n+  if (t != 15)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}