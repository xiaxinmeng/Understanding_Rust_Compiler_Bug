{"sha": "04b7c941e90c9f6df2c35121b36264941ec28dd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRiN2M5NDFlOTBjOWY2ZGYyYzM1MTIxYjM2MjY0OTQxZWMyOGRkNQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-03-27T21:41:36Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-03-27T21:41:36Z"}, "message": "Intro.3: Date tweak.\n\n2002-03-27  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/doxygen/Intro.3:  Date tweak.\n\t* docs/doxygen/TODO:  Update.\n\t* docs/doxygen/doxygroups.cc:  Point to tables.html.\n\t* docs/doxygen/mainpage.html:  Date tweak.\n\t* docs/doxygen/run_doxygen:  Version tweak.  Copy tables.html over.\n\t* docs/doxygen/tables.html:  Fill in the blanks.\n\n\t* docs/doxygen/user.cfg.in (ALIASES):  Remove maint and endmaint.\n\t* include/bits/stl_algo.h:  Likewise; use expanded form.\n\t* include/bits/stl_alloc.h:  Likewise.\n\t* include/bits/stl_construct.h:  Likewise.\n\t* include/bits/stl_deque.h:  Likewise.\n\t* include/bits/stl_iterator_base_types.h:  Likewise.\n\t* include/bits/stl_list.h:  Likewise.\n\t* include/bits/stl_relops.h:  Likewise.\n\t* include/bits/stl_tempbuf.h:  Likewise.\n\t* include/bits/stl_vector.h:  Likewise.\n\t* include/std/std_memory.h:  Likewise.\n\n\t* include/bits/stl_deque.h:  Point into tables.html and add @ingroup.\n\t* include/bits/stl_list.h:  Likewise.\n\t* include/bits/stl_vector.h:  Likewise.\n\nFrom-SVN: r51471", "tree": {"sha": "0e3d7dd60cff63506900f69b03ab54b8c380f073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e3d7dd60cff63506900f69b03ab54b8c380f073"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04b7c941e90c9f6df2c35121b36264941ec28dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b7c941e90c9f6df2c35121b36264941ec28dd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b7c941e90c9f6df2c35121b36264941ec28dd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b7c941e90c9f6df2c35121b36264941ec28dd5/comments", "author": null, "committer": null, "parents": [{"sha": "8a12f34cfca8cfcd5c7e5904ab283c73565e8be6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a12f34cfca8cfcd5c7e5904ab283c73565e8be6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a12f34cfca8cfcd5c7e5904ab283c73565e8be6"}], "stats": {"total": 1106, "additions": 763, "deletions": 343}, "files": [{"sha": "f7a7d8ee1b2195f24a9bf359c14e2443d2dfb0e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 99, "deletions": 74, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,11 +1,36 @@\n+2002-03-27  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* docs/doxygen/Intro.3:  Date tweak.\n+\t* docs/doxygen/TODO:  Update.\n+\t* docs/doxygen/doxygroups.cc:  Point to tables.html.\n+\t* docs/doxygen/mainpage.html:  Date tweak.\n+\t* docs/doxygen/run_doxygen:  Version tweak.  Copy tables.html over.\n+\t* docs/doxygen/tables.html:  Fill in the blanks.\n+\n+\t* docs/doxygen/user.cfg.in (ALIASES):  Remove maint and endmaint.\n+\t* include/bits/stl_algo.h:  Likewise; use expanded form.\n+\t* include/bits/stl_alloc.h:  Likewise.\n+\t* include/bits/stl_construct.h:  Likewise.\n+\t* include/bits/stl_deque.h:  Likewise.\n+\t* include/bits/stl_iterator_base_types.h:  Likewise.\n+\t* include/bits/stl_list.h:  Likewise.\n+\t* include/bits/stl_relops.h:  Likewise.\n+\t* include/bits/stl_tempbuf.h:  Likewise.\n+\t* include/bits/stl_vector.h:  Likewise.\n+\t* include/std/std_memory.h:  Likewise.\n+\n+\t* include/bits/stl_deque.h:  Point into tables.html and add @ingroup.\n+\t* include/bits/stl_list.h:  Likewise.\n+\t* include/bits/stl_vector.h:  Likewise.\n+\n 2002-03-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c/: Guard with _CPP_.\n \t* include/c_std/: Same.\n \t* include/Makefile.am: Fixup install, link routines for null\n \tc_base_headers_extra scenarios.\n \t* include/Makefile.in: Regerate.\n-\t\n+\n 2002-03-25  Paolo Carlini <pcarlini@unitus.it>\n             Richard Henderson  <rth@redhat.com>\n \n@@ -29,11 +54,11 @@\n \n 2002-03-25  Benjamin Kosnik  <bkoz@redhat.com>\n             Jakub Jelinek  <jakub@redhat.com>\n-\t\n+\n \t* config/locale/gnu/messages_members.h: Correct conditional.\n \t* config/locale/gnu/messages_members.cc: Same.\n \t* config/locale/gnu/time_members.cc: Same.\n-\t\n+\n 2002-03-25  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n             Paolo Carlini  <pcarlini@unitus.it>\n \n@@ -58,15 +83,15 @@\n \n \t* include/c/*: Formatting tweaks, cleanups.\n \t* include/c_std/*: Same.\n-\t\n+\n 2002-03-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/locale/gnu/messages_members.h: Add __uselocale bits.\n \t* config/locale/gnu/messages_members.cc: Same.\n \t* config/locale/gnu/time_members.cc: Same.\n-\t\n+\n 2002-03-22  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* src/vterminate.cc: Format, -fno-exceptions cleanup.\n \n 2002-03-21  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n@@ -102,11 +127,11 @@\n \t--enable-libunwind-exceptions is set.\n \t* configure.in (GLIBCPP_ENABLE_LIBUNWIND_EXCEPTIONS): Call new\n \tmacro to check for libunwind.\n-\t* configure: Regenerate.\t\n+\t* configure: Regenerate.\n \t* src/Makefile.am (libstdc___la_LDFLAGS): Add\n \tLIBUNWIND_FLAG to libstdc link line.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2002-03-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/html/faq/index.html: Add OS X workaround.\n@@ -137,7 +162,7 @@\n \thash_multimap are in namespace __gnu_cxx.\n \tinclude/backward/hash_set.h: hash, hashtable, hash_set and\n \thash_multiset are in namespace __gnu_cxx.\n-\tinclude/backward/hashtable.h: hash and hashtable are in \n+\tinclude/backward/hashtable.h: hash and hashtable are in\n \tnamespace __gnu_cxx.\n \tinclude/backward/rope.h: char_producer, sequence_buffer,\n \trope, crope and wrope are in namespace __gnu_cxx.\n@@ -180,7 +205,7 @@\n \n 2002-03-12  Benjamin Kosnik  <bkoz@redhat.com>\n             Per Liboriussen  <liborius@stofanet.dk>\n-\t\n+\n \t* config/os/gnu-linux/bits/ctype_noninline.h: Cast to\n \tunsigned char.\n \t* config/os/gnu-linux/bits/ctype_inline.h: Same.\n@@ -197,7 +222,7 @@\n \t* config/os/solaris/solaris2.7/bits/ctype_noninline.h: Same.\n \n \t* testsuite/22_locale/ctype_members_char.cc (main): Add tests.\n-\t\n+\n 2002-03-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/basic_string.tcc (string::_S_construct(_InIter,\n@@ -206,7 +231,7 @@\n \t* testsuite/21_strings/ctor_copy_dtor.cc (test01): Re-enable, now\n \tthat memory limits are in place.\n \t(test03): Add tests.\n-\t\n+\n 2002-03-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_WCHAR_T_SUPPORT): Check for wctype.h.\n@@ -319,7 +344,7 @@\n \t* messages_members_ieee_1003.1-200x.cc: Move to...\n \t* ieee_1003.1-2001/messages_members.cc\n \t* messages_members_ieee_1003.1-200x.h: Move to...\n-\t* ieee_1003.1-2001/messages_members.h\t\n+\t* ieee_1003.1-2001/messages_members.h\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Make consistent.\n \t* aclocal.m4: Regenerate.\n@@ -343,7 +368,7 @@\n \t* src/limits.cc: Add definitions.\n \t* config/linker-map.gnu: Add __numeric_limits_base.\n \t* testsuite/18_support/numeric_limits.cc: Declare test in scope.\n-\t\n+\n 2002-03-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/stl_alloc.h: Add extern implicit allocator\n@@ -368,9 +393,9 @@\n \t(__stl_threshold): _M_threshold, enum.\n \t* src/stl-inst.cc: Same.\n \t* config/linker-map.gnu: Remove.\n-\t\n+\n \t* testsuite/23_containers/vector_bool.cc: New.\n-\t\n+\n 2002-03-06  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/doxygen/user.cfg.in:  Also document deprecated entries.\n@@ -433,7 +458,7 @@\n \n 2002-03-04  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n-\t* docs/html/17_intro/porting-howto.xml: Refer to \n+\t* docs/html/17_intro/porting-howto.xml: Refer to\n \thttp://www.oasis-open.org for docbookx.dtd.\n \t* docs/html/17_intro/porting-howto.html: Regenerated.\n \n@@ -482,7 +507,7 @@\n \t* include/bits/basic_ios.h (basic_ios::_M_fill): Make mutable.\n \t(basic_ios::_M_fill_init): New.\n \t(basic_ios::fill()): Delay dealing with _M_fill.\n-\tAdjust comment. \n+\tAdjust comment.\n \t* ios.cc (ios_base::ios_base()): Initialize _M_callbacks, _M_words.\n \t(ios_base::_M_call_callbacks): Adjust.\n \t* testsuite/27_io/ios_init.cc (test02): Adjust testcase.\n@@ -535,7 +560,7 @@\n \n \t* configure.in (target_alias): Default to yes.\n \t* acinclude.m4 (GLIBCPP_ENABLE_SYMVERS): Add check for shared\n-\tlibgcc to default case. \n+\tlibgcc to default case.\n \n 2002-02-20  Phil Edwards  <pme@gcc.gnu.org>\n \n@@ -548,19 +573,19 @@\n \n 2002-02-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* testsuite/22_locale/money_put_members_char.cc: Fix.\t\n+\t* testsuite/22_locale/money_put_members_char.cc: Fix.\n \t* testsuite/22_locale/money_put_members_wchar_t.cc: Fix.\n \n \t* testsuite/27_io/standard_manipulators.cc: New file.\n \n \t* testsuite/27_io/ios_manip_basefield.cc: Check results, now failing.\n \t* testsuite/27_io/ios_manip_fmtflags.cc: Use locale::classic().\n-\t\n+\n 2002-02-20  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/os/mingw32/bits/ctype_noninline.h\n \t(ctype<char>::ctype): Remove default args from parm list.\n-\t* config/os/djgpp/bits/ctype_noninline.h: Same. \n+\t* config/os/djgpp/bits/ctype_noninline.h: Same.\n \n 2002-02-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -573,7 +598,7 @@\n \t* testsuite/22_locale/money_get_members_wchar_t.cc (test07): Same.\n \n 2002-02-19  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* config/linker-map.gnu: Export global vtable, typeinfo, guard\n \tvariable, and thunk info as per CXXABI docs.\n \n@@ -612,7 +637,7 @@\n \n 2002-02-16   Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* include/bits/locale_facets.tcc: Add pragma GCC system_header.\t\n+\t* include/bits/locale_facets.tcc: Add pragma GCC system_header.\n \t* include/bits/fstream.tcc: Same.\n \t* include/bits/sstream.tcc: Same.\n \t* include/bits/ostream.tcc: Same.\n@@ -631,7 +656,7 @@\n \n \t* src/locale.cc (moneypunct_byname): Remove definitions.\n \t* include/std/std_streambuf.h (streambuf::operator=): Return.\n-\t\n+\n 2002-02-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tTune for size.\n@@ -655,7 +680,7 @@\n \tAdd iomanip instantiations for wide streams.\n \t* include/std/std_iomanip.h: Same.\n \t* include/bits/locale_facets.tcc: Same.\n-\t\n+\n \t* include/std/std_streambuf.h: Correct\n \t_GLIBCPP_FULLY_COMPLIANT_HEADERS guard.\n \t* include/std/std_sstream.h: Same.\n@@ -672,7 +697,7 @@\n \n \t* include/bits/basic_ios.h (basic_ios::clear): Don't inline.\n \t* include/bits/basic_ios.tcc (basic_ios::clear): Move definition here.\n-\t\n+\n 2002-02-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/linker-map.gnu: Change tag from GCC_3.1 to GLIBCPP_3.1.\n@@ -708,7 +733,7 @@\n \n 2002-02-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* include/bits/stl_algo (__stl_threshold): Declare external.\t\n+\t* include/bits/stl_algo (__stl_threshold): Declare external.\n \t(__stl_chunk_size): Same.\n \t* include/bits/stl_bvector.h (__WORD_BIT): Same.\n \t* include/bits/stl_tree.h (_S_rb_tree_red): Same.\n@@ -718,27 +743,27 @@\n \t(__WORD_BIT): Same.\n \t(_S_rb_tree_red): Same.\n \t(_S_rb_tree_black): Same.\n-\t\n+\n \t* config/io/basic_file_libio.h (__basic_file): Add declarations.\n \t* include/bits/basic_file.h: Remove.\n \t* config/io/c_io_stdio.h: Remove _GLIBCPP_BASIC_FILE_ENCAPSULATION\n \tDeclare generic types, specialization.\n-\t* config/io/basic_file_stdio.cc: Definitions.   \n+\t* config/io/basic_file_stdio.cc: Definitions.\n \t* config/io/c_io_libio.h: Remove _GLIBCPP_BASIC_FILE_INHERITANCE.\n \tDeclare generic types.\n \t* include/Makefile.am (bits_headers): Remove basic_file.h.\n \t(extra_target_headers): Change basic_file_model.h to basic_file.h.\n \t(stamp-target): Same.\n \n \t* include/bits/stl_alloc.h: Tweaks.\n-\t* include/bits/localefwd.h: Same.\t\n+\t* include/bits/localefwd.h: Same.\n \n 2002-02-11  Aaron W LaFramboise  <AWLaFramboise@aol.com>\n \n \t* include/bits/locale_facets.tcc (collate::do_hash): Fix.\n \t* testsuite/22_locale/collate_members_char.cc (test03): New test.\n \t* testsuite/22_locale/collate_members_wchar_t.cc (test03): Same.\n-\t\n+\n 2002-02-10  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/bits/stl_algo.h (transform (both signatures), generate_n):\n@@ -763,7 +788,7 @@\n \t* include/bits/fstream.tcc (filebuf::underflow): Remove\n \t__codecvt_type typedef.\n \t(filebuf::_M_convert_to_external): Same.\n-\t\n+\n 2002-02-08  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/doxygen/TODO:  Update.\n@@ -793,7 +818,7 @@\n \tcodecvt bits for wide streams.\n \t(filebuf::_M_really_overflow): Use it.\n \t(filebuf::underflow): Use codecvt.\n-\t* config/locale/codecvt_specializations_ieee_1003.1-200x.h: \n+\t* config/locale/codecvt_specializations_ieee_1003.1-200x.h:\n \t(codecvt<__enc_traits>::do_out): Deal with partial.\n \t(codecvt<__enc_traits>::do_encoding): Return something useful.\n \t* src/codecvt.cc (codecvt<wchar_t>::do_encoding): Return sizeof\n@@ -806,7 +831,7 @@\n \n 2002-02-07  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Wolfgang Bangerth  <wolfgang.bangerth@iwr.uni-heidelberg.de>\n-\t\n+\n \t* include/bits/basic_ios.tcc (basic_ios::narrow): Add default value.\n \t(basic_ios::widen): Same.\n \n@@ -903,7 +928,7 @@\n \t* include/std/std_streambuf.h: Tweak.\n \t* include/bits/streambuf.tcc: Same.\n \t* include/bits/sstream.tcc: Same.\n-\t* include/bits/fstream.tcc: Same.\t\n+\t* include/bits/fstream.tcc: Same.\n \n 2002-01-31  Loren Rittle <ljrittle@acm.org>\n \n@@ -940,7 +965,7 @@\n \t* docs/html/17_intro/RELEASE-NOTES: Update.\n \t* docs/html/17_intro/TODO: Update.\n \t* README (file): Update.\n-\t\n+\n 2002-01-30  Loren Rittle <ljrittle@acm.org>\n \n \t* config/locale/c_locale_generic.cc: Check errno for ERANGE\n@@ -1068,20 +1093,20 @@\n \n 2002-01-24  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* testsuite/27_io/ostream_inserter_char.cc (test07): New. \n-\t\n+\t* testsuite/27_io/ostream_inserter_char.cc (test07): New.\n+\n 2002-01-24  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/basic_ios.h (basic_ios::_M_check_facet): Make\n \tconst, tweak.\n-\t(basic_ios::fill(char_type)): Use fill().\t\n+\t(basic_ios::fill(char_type)): Use fill().\n \t* include/bits/basic_ios.tcc (basic_ios::widen): Use _M_check_facet.\n \t(basic_ios::narrow): Same.\n \t(basic_ios::_M_cache_facets): Explicitly set cached facets to zero\n \tif they are invalid.\n \t(basic_ios::init): Comment.\n \t* testsuite/27_io/ios_init.cc (test02): New.\n-\t\n+\n 2002-01-24  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/bits/stl_tempbuf.h (_Temporary_buffer):  Add doxygen hook.\n@@ -1134,7 +1159,7 @@\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* config.h.in: Regenerate.\n-\t\n+\n 2002-01-23  Loren Rittle <ljrittle@acm.org>\n \n \t* testsuite/thread/pthread1.cc: New test.\n@@ -1162,7 +1187,7 @@\n \t* include/bits/locale_facets.tcc (__convert_to_v): Change template\n \tparameter to _Tv.\n \t(__convert_from_v): Same.\n-\t\n+\n 2002-01-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h (num_get::_M_extract_int): Change\n@@ -1183,7 +1208,7 @@\n \n \t* docs/html/22_locale/messages.html: Remove angle brackets.\n \t* docs/html/17_intro/TODO: Add.\n-\t\n+\n 2002-01-22  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/ios_manip_basefield.cc: Enable test02.\n@@ -1202,13 +1227,13 @@\n \t(num_put::_M_convert_float): Use.\n \t(num_put::_M_convert_int): Same.\n \t(money_put::do_put): Same.\n-\t\n+\n \t* src/locale-inst.cc: Add instantiations for __convert_from_v.\n \t* config/locale/time_members_gnu.cc: Cleanup setlocale usage.\n-\t* config/locale/time_members_generic.cc: \n+\t* config/locale/time_members_generic.cc:\n \t* config/locale/messages_members_gnu.cc: Same.\n \t* config/locale/messages_members_gnu.h: Same.\n-\t\n+\n \t* testsuite/22_locale/codecvt_members_wchar_t_char.cc (test02): New.\n \t* testsuite/22_locale/codecvt_members_char_char.cc (test02): New.\n \t* testsuite/22_locale/collate_members_wchar_t.cc (test02): New.\n@@ -1236,7 +1261,7 @@\n \t* testsuite/22_locale/time_get_members_char.cc: Fixups for global\n \tlocale issues.\n \t* testsuite/22_locale/time_get_members_char.cc: Same.\n-\t\n+\n 2002-01-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/5280\n@@ -1254,7 +1279,7 @@\n \t(num_get::do_get(unsigned long long)): Same.\n \t* config/locale/c_locale_gnu.cc (__convert_to_v): Specialize.\n \t* config/locale/c_locale_generic.cc: Same.\n-\t\n+\n 2002-01-22  Loren Rittle <ljrittle@acm.org>\n \n \t* include/Makefile.am (c_base_builddir): Remove redundant slash.\n@@ -1318,7 +1343,7 @@\n \tlimiting is only attempted if _GLIBCPP_MEM_LIMIT is defined.\n \n 2002-01-17  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n-\t\n+\n \t* testsuite/22_locale/ctor_copy_dtor.cc: Remove check.\n \n 2002-01-17  David Edelsohn  <edelsohn@gnu.org>\n@@ -1340,7 +1365,7 @@\n \tSECTION_LDFLAGS and OPT_LDFLAGS.  Fix ac_sectionLDflags type.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/Makefile.am (c_base_headers_rename): New.\n@@ -1357,23 +1382,23 @@\n \tcstdio ctime cwctype]: Move to..\n \t* include/c_std/std_*: Here.\n \n-\tAlexandre Oliva  <aoliva@redhat.com>\t\n+\tAlexandre Oliva  <aoliva@redhat.com>\n \t* include/Makefile.am (.PRECIOUS): Add rule.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n-\t\n+\n \t* include/bits/stl_iterator.h (reverse_iterator::_M_current):\n \tDeuglify, should be current.\n \t(back_insert_iterator::_M_container): Deuglify, should be container.\n-\t(front_insert_iterator::_M_container): Same.\t\n+\t(front_insert_iterator::_M_container): Same.\n \t(insert_iterator::_M_container): Same.\n \t* testsuite/24_iterators/reverse_iterator.cc: Add check.\n-\t* testsuite/24_iterators/back_insert_iterator.cc: Add check.\t\n+\t* testsuite/24_iterators/back_insert_iterator.cc: Add check.\n \t* testsuite/24_iterators/front_insert_iterator.cc: Same.\n \t* testsuite/24_iterators/insert_iterator.cc: Same.\n-\t\n+\n 2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h (ctype<char>::classic_table): Make\n@@ -1391,14 +1416,14 @@\n \t* config/os/bsd/netbsd/bits/ctype_noninline.h: Same.\n \t* config/os/bsd/freebsd/bits/ctype_noninline.h: Same.\n \t* config/os/aix/bits/ctype_noninline.h: Same.\n-\t\n-\tTestcase by Dietmar K\ufffdhl via Peter Schmid \n+\n+\tTestcase by Dietmar K\ufffdhl via Peter Schmid\n \t* testsuite/22_locale/ctype_members_char.cc (char>): Add test for\n \tclassic_table().\n \n 2002-01-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* libmath/signbitl.c: Copyright years as list, not range.\t\n+\t* libmath/signbitl.c: Copyright years as list, not range.\n \t* libmath/Makefile.am: Same.\n \t* libmath/Makefie.in: Regenerate.\n \t* libmath/signbit.c: Same.\n@@ -1446,7 +1471,7 @@\n \n \t* testsuite/22_locale/num_put_members_wchar_t.cc (test02): Same.\n \t* testsuite/22_locale/num_put_members_char.cc (test01): Tweak.\n-\t* testsuite/22_locale/ctype_members_char.cc: Tweak.\t\n+\t* testsuite/22_locale/ctype_members_char.cc: Tweak.\n \n 2002-01-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -1457,7 +1482,7 @@\n \t* testsuite/22_locale/num_get_members_char.cc (test02): Add\n \tlong double, void, bool types.\n \t* testsuite/22_locale/num_get_members_wchar_t.cc (test02): Add.\n-\t\n+\n 2002-01-15  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -1505,20 +1530,20 @@\n \n \t* include/bits/basic_string.h (insert(__pos, __s, __n)):\n \tAdjust comparison wrt overflow.\n-\t\n+\n 2002-01-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/Makefile.am (std_headers_rename): New variable.\n \t(install-data-local): Use it.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2002-01-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.tcc (money_put::do_put(string):\n \tCorrect output iterator value.\n \t* testsuite/22_locale/money_put_members_char.cc (test03): Add.\n \t* testsuite/22_locale/money_put_members_wchar_t.cc: Same.\n-\t\n+\n 2002-01-11  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/Makefile.am, include/Makefile.in (stamp-std):  Fix typo from\n@@ -1576,7 +1601,7 @@\n \t* testsuite/22_locale/money_get_members_char.cc (test02): Add\n \titerator checks.\n \t* testsuite/22_locale/money_get_members_wchar_t.cc: Same.\n-\t\n+\n 2002-01-10  David Seymour  <seymour_dj@yahoo.com>\n \n \tlibstdc++/5331\n@@ -1616,7 +1641,7 @@\n \n \t* include/Makefile.am (c_base_srcdir): Remove duplicate '/'.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2002-01-09  Bo Thorsen  <bo@suse.co.uk>\n \n \t* config/cpu/x86-64/bits/cpu_limits.h (__glibcpp_long_bits): Add\n@@ -1634,9 +1659,9 @@\n \n 2002-01-08  John Fardo  <jfardo@laurelnetworks.com>\n \t    Brad Garcia  <garsh@attbi.com>\n-\t\n+\n \t* testsuite/27_io/filebuf_members.cc: Add test.\n-\t\n+\n 2002-01-07  Benjamin Kosnik  <bkoz@redhat.com>\n  \t    Craig Rodrigues  <rodrigc@mediaone.net>\n \n@@ -1666,12 +1691,12 @@\n \t(c_base_headers): Adjust names, add ciso646.\n \t(bits_headers): Remove std_xxx.h headers.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n \t* include/ext/iterator: Adjust includes.\n \t* include/ext/ropeimpl.h: Same.\n \t* include/ext/stl_hash_fun.h: Same.\n \t* include/ext/algorithm: Same.\n-\t\n+\n \t* include/backward/bvector.h: Adjust includes.\n \t* include/backward/vector.h: Same.\n \t* include/backward/strstream: Same.\n@@ -1700,7 +1725,7 @@\n \tstd_queue.h, std_valarray.h, std_functional.h, std_limits.h,\n \tstd_set.h, std_vector.h, std_iomanip.h, std_list.h, std_sstream.h:\n \tSame.\n-\t\n+\n \t* include/c_std/bits/std_cassert.h: Move to...\n \t* include/c_std/cassert: Here.\n \t* include/c_std/std_cctype.h, std_cerrno.h, std_cfloat.h,\n@@ -1715,7 +1740,7 @@\n \t* include/c_std/cstring: Same.\n \t* include/c_std/cstdio: Same.\n \t* include/c_std/bits: Remove directory.\n-\t\n+\n \t* include/c/bits/std_cassert.h: Move to...\n \t* include/c/cassert: Here.\n \t* include/c/std_cctype.h, std_cerrno.h, std_cfloat.h,\n@@ -1724,7 +1749,7 @@\n \tstd_cstdlib.h, std_cstring.h, std_ctime.h, std_cwchar.h,\n \tstd_cwctype.h: Same.\n \t* include/c/bits: Remove directory.\n-\t\n+\n \t* include/std/cwctype: Remove.\n \t* include/std/cwchar: Remove.\n \t* include/std/ctime: Remove."}, {"sha": "fc44025c0c30718403286c09a8971d97680517a7", "filename": "libstdc++-v3/docs/doxygen/Intro.3", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FIntro.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FIntro.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FIntro.3?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,6 +1,6 @@\n .\\\" t\n .\\\" This man page is released under the FDL as part of libstdc++-v3.\n-.TH Intro 3 \"27 September 2001\" \"GNU libstdc++-v3\" \"Standard C++ Library\"\n+.TH Intro 3 \"27 March 2002\" \"GNU libstdc++-v3\" \"Standard C++ Library\"\n .SH NAME\n Intro \\- Introduction to the GNU libstdc++-v3 man pages\n .SH DESCRIPTION\n@@ -48,7 +48,7 @@ SGIextensions\tA list of the extensions from the SGI STL subset.\n Sequences\tLinear containers.\n .TE\n .P\n-The HTML documentation goes into more depth.\n+The HTML documentation typically goes into much more depth.\n .SH FILES\n Lots!\n .SS Standard Headers"}, {"sha": "662993396e2daeeda417f4e33c00c1a42f2a9e6e", "filename": "libstdc++-v3/docs/doxygen/TODO", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FTODO", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FTODO", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FTODO?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -48,10 +48,10 @@ do not have the C code (to which the doxygen comments would be attached),\n this would need to be done in entirely separate files, a la doxygroups.cc.\n \n B)  Huge chunks of containers and strings are described in common \"Tables\"\n-in the standard.  These are being pseudo-duplicated in tables.html.  We can\n+in the standard.  These are pseudo-duplicated in tables.html.  We can\n use doxygen hooks like @pre and @see to reference the tables.  Then the\n-individual classes would do like the standard does, and only document\n-members for which additional info is available.\n+individual classes do like the standard does, and only document members for\n+which additional info is available.\n \n \n STYLE:"}, {"sha": "c6139f375478b3a79f21db928a2dacceafda7f94", "filename": "libstdc++-v3/docs/doxygen/doxygroups.cc", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,5 +1,8 @@\n \n /*\n+   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+   See license.html for license.\n+\n    This just provides documentation for stuff that doesn't need to be in the\n    source headers themselves.  It is a \".cc\" file for the sole cheesy reason\n    that it triggers many different text editors into doing Nice Things when\n@@ -67,9 +70,8 @@ storing your objects.  The objects are destroyed when the container is\n itself destroyed.  Note that if you are storing pointers in a container,\n @c delete is @e not automatically called on the pointers before destroying them.\n \n-All containers must meet certain requirements.  They would be listed here\n-except I'm not certain how much of 14882 can be reproduced without a\n-copyright violation.  Reproducing Tables 65 through 69 is a lot of typing...\n+All containers must meet certain requirements, summarized in\n+<a href=\"tables.html\">tables</a>.\n \n The standard containers are further refined into\n @link Sequences Sequences@endlink and\n@@ -92,13 +94,21 @@ the second category of differences, algorithmic complexity.  For example, if\n you need to perform many inserts and removals from the middle of a sequence,\n @c list would be ideal.  But if you need to perform constant-time access to\n random elements of the sequence, then @c list should not be used.\n+\n+All sequences must meet certain requirements, summarized in\n+<a href=\"tables.html\">tables</a>.\n */\n \n /** @addtogroup Assoc_containers Associative Containers\n Associative containers allow fast retrieval of data based on keys.\n \n Each container type is parameterized on a @c Key type, and an ordering\n relation used to sort the elements of the container.\n+\n+There should be more text here.\n+\n+All associative containers must meet certain requirements, summarized in\n+<a href=\"tables.html\">tables</a>.\n */\n \n // // // // // // // // // // // // // // // // // // // // // // // //"}, {"sha": "431344b972e398ca43f5f7b7ee65d1e3d924192a", "filename": "libstdc++-v3/docs/doxygen/mainpage.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.html?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -16,16 +16,16 @@\n      directly; it all gets run through Doxygen and re-output.)  So lots of\n      tags were all being mangled.\n \n-     Funk 'dat.  Now we let Doxygen do whateer it feels like doing for the\n+     Funk 'dat.  Now we let Doxygen do whatever it feels like doing for the\n      index page, and then we just flat copy this over top of it.  Voila!\n-     Tags actually work like they're supposed to.\n+     Tags actually work like they're supposed to in HTML.\n -->\n \n <h1>libstdc++-v3 Source Documentation</h1>\n \n <h2> Documentation Overview </h2>\n \n-<p class=\"smallertext\">Generated 2002-02-08.</p>\n+<p class=\"smallertext\">Generated 2002-03-27.</p>\n \n <p>There are two types of documentation for libstdc++-v3.  One is the\n    distribution documentation, which can be read online at\n@@ -122,8 +122,8 @@ <h2> License, Copyright, and Other Lawyerly Verbosity </h2>\n    Hewlett-Packard Company\n    </blockquote>\n </p>\n-<p>Part of the generated documentation is quoted from the C++ standard, which\n-   is copyright 1998 by Information Technology Industry Council.\n+<p>Part of the generated documentation is quoted from the ISO C++ Standard,\n+   which is Copyright &copy; 1998 by Information Technology Industry Council.\n </p>\n \n </body>"}, {"sha": "7b3b7f5b2917f48c692ee6a65dd1712b9f1f3674", "filename": "libstdc++-v3/docs/doxygen/run_doxygen", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,14 +1,15 @@\n #!/bin/sh\n \n # Runs doxygen and massages the output files.\n+# Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n #\n # Synopsis:  run_doxygen --mode=[user|maint|man]  v3srcdir  v3builddir\n #\n # Originally hacked together by Phil Edwards <pme@gcc.gnu.org>\n \n \n # We can check now that the version of doxygen is >= this variable.\n-DOXYVER=1.2.12\n+DOXYVER=1.2.14\n doxygen=\n \n find_doxygen() {\n@@ -147,6 +148,7 @@ set +e\n \n test $do_html = yes && {\n     cp ${srcdir}/docs/doxygen/mainpage.html ${outdir}/html_${mode}/index.html\n+    cp ${srcdir}/docs/doxygen/tables.html ${outdir}/html_${mode}/tables.html\n     echo ::\n     echo :: HTML pages begin with\n     echo :: ${outdir}/html_${mode}/index.html\n@@ -185,7 +187,8 @@ mv iterator_tags.3          Iterator_types.3\n find . -name \"[a-z]*\" -a ! -name \"std_*\" -print | xargs rm\n rm -f *.h.3 *config* *.cc.3 *.tcc.3\n rm -f *_t.3  # workaround doxygen template parsing bug for now\n-#mkdir trash  # this is used to examine what we would have deleted\n+# this is used to examine what we would have deleted, for debugging\n+#mkdir trash\n #find . -name \"[a-z]*\" -a ! -name \"std_*\" -print | xargs -i mv {} trash\n #mv *.h.3 *config* *.cc.3 *.tcc.3 *_t.3  trash\n "}, {"sha": "2382d25c70b79bf3f9094bd128f5810d92cfaa14", "filename": "libstdc++-v3/docs/doxygen/tables.html", "status": "modified", "additions": 473, "deletions": 103, "changes": 576, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Ftables.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Ftables.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Ftables.html?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -6,110 +6,281 @@\n </head>\n \n <body bgcolor=\"#ffffff\">\n-<!--\n-     Tables can be jumped to with their number, e.g., \"tables.html#67\".\n--->\n \n <h1>Tables</h1>\n \n <p>Most of the requirements on containers are presented in the ISO standard\n-   in the form of tables.  In order to avoid massive duplication of effort,\n-   we follow the standard's lead and present the information here.\n-   Individual classes will only document their departures from these tables\n-   (removed functions, additional functions, changes, etc).\n+   in the form of tables.  In order to avoid massive duplication of effort\n+   while documenting all the classes, we follow the standard's lead and\n+   present the base information here.  Individual classes will only document\n+   their departures from these tables (removed functions, additional functions,\n+   changes, etc).\n </p>\n \n-<p>The numbers are the same as those used in the standard.\n+<p>We will not try to duplicate all of the surrounding text (footnotes,\n+   explanations, etc) from the standard, because that would also entail a\n+   duplication of effort.  Some of the surrounding text has been paraphrased\n+   here for clarity.  If you are uncertain about the meaning or interpretation\n+   of these notes, consult a good textbook, and/or purchase your own copy of\n+   the standard (it's cheap, see our FAQ).\n </p>\n \n+<p>The table numbers are the same as those used in the standard.  Tables can\n+   be jumped to using their number, e.g., &quot;tables.html#67&quot;.  Only\n+   Tables 65 through 69 are presented.  Some of the active Defect Reports\n+   are also noted or incorporated.\n+</p>\n+\n+<p class=\"smallertext\">This will probably be incomplete for a while because\n+filling out the tables is mind-frothingly boring.  Also, the HTML table\n+rendering is ugly.  (Update:  mozilla 0.9.9 looks MUCH better.)</p>\n+\n <hr />\n \n <a name=\"65\"><p>\n <table cellpadding=\"3\" cellspacing=\"5\" align=\"center\" rules=\"rows\" border=\"3\"\n-       cols=\"3\" title=\"Table 65\">\n+       cols=\"4\" title=\"Table 65\">\n <caption><h2>Table 65 --- Container Requirements</h2></caption>\n <tr><th colspan=\"4\">\n Anything calling itself a container must meet these minimum requirements.\n </th></tr>\n <tr>\n <td><strong>expression</strong></td>\n <td><strong>result type</strong></td>\n-<td><strong>notes</strong></td>\n+<td><strong>notes, pre-/post-conditions, assertions</strong></td>\n <td><strong>complexity</strong></td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>X::value_type</td>\n+<td>T</td>\n+<td>T is Assignable</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::reference</td>\n+<td>lvalue of T</td>\n+<td>&nbsp;</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::const_reference</td>\n+<td>const lvalue of T</td>\n+<td>&nbsp;</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::iterator</td>\n+<td>iterator type pointing to T</td>\n+<td>Any iterator category except output iterator.\n+    Convertible to X::const_iterator.</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::const_iterator</td>\n+<td>iterator type pointing to const T</td>\n+<td>Any iterator category except output iterator.</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::difference_type</td>\n+<td>signed integral type</td>\n+<td>identical to the difference type of X::iterator and X::const_iterator</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::size_type</td>\n+<td>unsigned integral type</td>\n+<td>size_type can represent any non-negative value of difference_type</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X u;</td>\n+<td>&nbsp;</td>\n+<td>post: u.size() == 0</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>X();</td>\n+<td>&nbsp;</td>\n+<td>X().size == 0</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>X(a);</td>\n+<td>&nbsp;</td>\n+<td>a == X(a)</td>\n+<td>linear</td>\n+</tr>\n+\n+<tr>\n+<td>X u(a);<br />X u = a;</td>\n+<td>&nbsp;</td>\n+<td>post: u == a.  Equivalent to: X u; u = a;</td>\n+<td>linear</td>\n+</tr>\n+\n+<tr>\n+<td>(&amp;a)-&gt;~X();</td>\n+<td>void</td>\n+<td>dtor is applied to every element of a; all the memory is deallocated</td>\n+<td>linear</td>\n+</tr>\n+\n+<tr>\n+<td>a.begin()</td>\n+<td>iterator; const_iterator for constant a</td>\n+<td>&nbsp;</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>a.end()</td>\n+<td>iterator; const_iterator for constant a</td>\n+<td>&nbsp;</td>\n+<td>constant</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a == b</td>\n+<td>convertible to bool</td>\n+<td>== is an equivalence relation.  a.size()==b.size() &amp;&amp;\n+    equal(a.begin(),a.end(),b.begin())</td>\n+<td>linear</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a != b</td>\n+<td>convertible to bool</td>\n+<td>equivalent to !(a==b)</td>\n+<td>linear</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.swap(b)</td>\n+<td>void</td>\n+<td>swap(a,b)</td>\n+<td>may or may not have constant complexity</td>\n+</tr>\n+\n+<tr>\n+<td>r = a</td>\n+<td>X&amp;</td>\n+<td>r == a</td>\n+<td>linear</td>\n+</tr>\n+\n+<!-- a fifth column, \"operation semantics,\" magically appears in the table\n+     at this point... wtf?  -->\n+<tr>\n+<td>a.size()</td>\n+<td>size_type</td>\n+<!--<td>a.end() - a.begin()</td>-->\n+<td>&nbsp;</td>\n+<td>may or may not have constant complexity</td>\n+</tr>\n+\n+<tr>\n+<td>a.max_size()</td>\n+<td>size_type</td>\n+<!--<td>size() of the largest possible container</td>-->\n+<td>&nbsp;</td>\n+<td>may or may not have constant complexity</td>\n+</tr>\n+\n+<tr>\n+<td>a.empty()</td>\n+<td>convertible to bool</td>\n+<!--<td>a.size() == 0</td>-->\n+<td>&nbsp;</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>a &lt; b</td>\n+<td>convertible to bool</td>\n+<!--<td>lexographical_compare(a.begin,a.end(),b.begin(),b.end())</td>-->\n+<td>pre: &lt; is defined for T and is a total ordering relation</td>\n+<td>linear</td>\n+</tr>\n+\n+<tr>\n+<td>a &gt; b</td>\n+<td>convertible to bool</td>\n+<!--<td>b &lt; a</td>-->\n+<td>&nbsp;</td>\n+<td>linear</td>\n+</tr>\n+\n+<tr>\n+<td>a &lt;= b</td>\n+<td>convertible to bool</td>\n+<!--<td>!(a &gt; b)</td>-->\n+<td>&nbsp;</td>\n+<td>linear</td>\n+</tr>\n+\n+<tr>\n+<td>a &gt;= b</td>\n+<td>convertible to bool</td>\n+<!--<td>!(a &lt; b)</td>-->\n+<td>&nbsp;</td>\n+<td>linear</td>\n </tr>\n </table title=\"Table 65\"></p></a>\n \n \n <a name=\"66\"><p>\n <table cellpadding=\"3\" cellspacing=\"5\" align=\"center\" rules=\"rows\" border=\"3\"\n-       cols=\"3\" title=\"Table 66\">\n+       cols=\"4\" title=\"Table 66\">\n <caption><h2>Table 66 --- Reversible Container Requirements</h2></caption>\n <tr><th colspan=\"4\">\n If a container's iterator is bidirectional or random-access, then the\n container also meets these requirements.\n-Foo, bar, and baz are such containers.\n+Deque, list, vector, map, multimap, set, and multiset are such containers.\n </th></tr>\n <tr>\n <td><strong>expression</strong></td>\n <td><strong>result type</strong></td>\n-<td><strong>notes</strong></td>\n+<td><strong>notes, pre-/post-conditions, assertions</strong></td>\n <td><strong>complexity</strong></td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>X::reverse_iterator</td>\n+<td>iterator type pointing to T</td>\n+<td>reverse_iterator&lt;iterator&gt;</td>\n+<td>compile time</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>X::const_reverse_iterator</td>\n+<td>iterator type pointing to const T</td>\n+<td>reverse_iterator&lt;const_iterator&gt;</td>\n+<td>compile time</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.rbegin()</td>\n+<td>reverse_iterator; const_reverse_iterator for constant a</td>\n+<td>reverse_iterator(end())</td>\n+<td>constant</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.rend()</td>\n+<td>reverse_iterator; const_reverse_iterator for constant a</td>\n+<td>reverse_iterator(begin())</td>\n+<td>constant</td>\n </tr>\n </table title=\"Table 66\"></p></a>\n \n@@ -118,140 +289,339 @@ <h1>Tables</h1>\n <table cellpadding=\"3\" cellspacing=\"5\" align=\"center\" rules=\"rows\" border=\"3\"\n        cols=\"3\" title=\"Table 67\">\n <caption><h2>Table 67 --- Sequence Requirements</h2></caption>\n-<tr><th colspan=\"4\">\n+<tr><th colspan=\"3\">\n These are in addition to the requirements of <a href=\"#65\">containers</a>.\n-Foo, bar, and baz are such containers.\n+Deque, list, and vector are such containers.\n </th></tr>\n <tr>\n <td><strong>expression</strong></td>\n <td><strong>result type</strong></td>\n-<td><strong>notes</strong></td>\n-<td><strong>complexity</strong></td>\n+<td><strong>notes, pre-/post-conditions, assertions</strong></td>\n+</tr>\n+\n+<tr>\n+<td>X(n,t)<br />X a(n,t)</td>\n+<td>&nbsp;</td>\n+<td>constructs a sequence with n copies of t<br />post: size() == n</td>\n+</tr>\n+\n+<tr>\n+<td>X(i,j)<br />X a(i,j)</td>\n+<td>&nbsp;</td>\n+<td>constructs a sequence equal to the range [i,j)<br />\n+    post: size() == distance(i,j)</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.insert(p,t)</td>\n+<td>iterator (points to the inserted copy of t)</td>\n+<td>inserts a copy of t before p</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.insert(p,n,t)</td>\n+<td>void</td>\n+<td>inserts n copies of t before p</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.insert(p,i,j)</td>\n+<td>void</td>\n+<td>inserts copies of elements in [i,j) before p<br />\n+    pre: i, j are not iterators into a</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.erase(q)</td>\n+<td>iterator (points to the element following q (prior to erasure))</td>\n+<td>erases the element pointed to by q</td>\n+</tr>\n+\n+<tr>\n+<td>a.erase(q1,q1)</td>\n+<td>iterator (points to the element pointed to by q2 (prior to erasure))</td>\n+<td>erases the elements in the range [q1,q2)</td>\n+</tr>\n+\n+<tr>\n+<td>a.clear()</td>\n+<td>void</td>\n+<td>erase(begin(),end())<br />post: size() == 0</td>\n </tr>\n </table title=\"Table 67\"></p></a>\n \n \n <a name=\"68\"><p>\n <table cellpadding=\"3\" cellspacing=\"5\" align=\"center\" rules=\"rows\" border=\"3\"\n-       cols=\"3\" title=\"Table 68\">\n+       cols=\"4\" title=\"Table 68\">\n <caption><h2>Table 68 --- Optional Sequence Operations</h2></caption>\n <tr><th colspan=\"4\">\n These operations are only included in containers when the operation can be\n done in constant time.\n-Foo, bar, and baz are such containers.\n </th></tr>\n <tr>\n <td><strong>expression</strong></td>\n <td><strong>result type</strong></td>\n-<td><strong>notes</strong></td>\n-<td><strong>complexity</strong></td>\n+<td><strong>operational semantics</strong></td>\n+<td><strong>container</strong></td>\n+</tr>\n+\n+<tr>\n+<td>a.front()</td>\n+<td>reference; const_reference for constant a</td>\n+<td>*a.begin()</td>\n+<td>vector, list, deque</td>\n+</tr>\n+\n+<tr>\n+<td>a.back()</td>\n+<td>reference; const_reference for constant a</td>\n+<td>*--a.end()</td>\n+<td>vector, list, deque</td>\n+</tr>\n+\n+<tr>\n+<td>a.push_front(x)</td>\n+<td>void</td>\n+<td>a.insert(a.begin(),x)</td>\n+<td>list, deque</td>\n+</tr>\n+\n+<tr>\n+<td>a.push_back(x)</td>\n+<td>void</td>\n+<td>a.insert(a.end(),x)</td>\n+<td>vector, list, deque</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.pop_front()</td>\n+<td>void</td>\n+<td>a.erase(a.begin())</td>\n+<td>list, deque</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.pop_back()</td>\n+<td>void</td>\n+<td>a.erase(--a.end())</td>\n+<td>vector, list, deque</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a[n]</td>\n+<td>reference; const_reference for constant a</td>\n+<td>*(a.begin() + n)</td>\n+<td>vector, deque</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.at(n)</td>\n+<td>reference; const_reference for constant a</td>\n+<td>*(a.begin() + n)<br />throws out_of_range if n&gt;=a.size()</td>\n+<td>vector, deque</td>\n </tr>\n </table title=\"Table 68\"></p></a>\n \n \n <a name=\"69\"><p>\n <table cellpadding=\"3\" cellspacing=\"5\" align=\"center\" rules=\"rows\" border=\"3\"\n-       cols=\"3\" title=\"Table 69\">\n+       cols=\"4\" title=\"Table 69\">\n <caption><h2>Table 69 --- Associative Container Requirements</h2></caption>\n <tr><th colspan=\"4\">\n These are in addition to the requirements of <a href=\"#65\">containers</a>.\n+Map, multimap, set, and multiset are such containers.  An associative\n+container supports <em>unique keys</em> (and is written as\n+<code>a_uniq</code> instead of <code>a</code>) if it may contain at most\n+one element for each key.  Otherwise it supports <em>equivalent keys</em>\n+(and is written <code>a_eq</code>).  Examples of the former are set and map,\n+examples of the latter are multiset and multimap.\n </th></tr>\n <tr>\n <td><strong>expression</strong></td>\n <td><strong>result type</strong></td>\n-<td><strong>notes</strong></td>\n+<td><strong>notes, pre-/post-conditions, assertions</strong></td>\n <td><strong>complexity</strong></td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>X::key_type</td>\n+<td>Key</td>\n+<td>Key is Assignable</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::key_compare</td>\n+<td>Compare</td>\n+<td>defaults to less&lt;key_type&gt;</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X::value_compare</td>\n+<td>a binary predicate type</td>\n+<td>same as key_compare for set and multiset; an ordering relation on\n+    pairs induced by the first component (Key) for map and multimap</td>\n+<td>compile time</td>\n+</tr>\n+\n+<tr>\n+<td>X(c)<br />X a(c)</td>\n+<td>&nbsp;</td>\n+<td>constructs an empty container which uses c as a comparison object</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>X()<br />X a</td>\n+<td>&nbsp;</td>\n+<td>constructs an empty container using Compare() as a comparison object</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>X(i,j,c)<br />X a(i,j,c)</td>\n+<td>&nbsp;</td>\n+<td>constructs an empty container and inserts elements from the range [i,j)\n+    into it; uses c as a comparison object</td>\n+<td>NlogN in general where N is distance(i,j); linear if [i,j) is\n+    sorted with value_comp()</td>\n+</tr>\n+\n+<tr>\n+<td>X(i,j)<br />X a(i,j)</td>\n+<td>&nbsp;</td>\n+<td>same as previous, but uses Compare() as a comparison object</td>\n+<td>same as previous</td>\n+</tr>\n+\n+<tr>\n+<td>a.key_comp()</td>\n+<td>X::key_compare</td>\n+<td>returns the comparison object out of which a was constructed</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>a.value_comp()</td>\n+<td>X::value_compare</td>\n+<td>returns an object constructed out of the comparison object</td>\n+<td>constant</td>\n+</tr>\n+\n+<tr>\n+<td>a_uniq.insert(t)</td>\n+<td>pair&lt;iterator,bool&gt;</td>\n+<td>&quot;Inserts t if and only if there is no element in the container with\n+    key equivalent to the key of t. The bool component of the returned pair\n+    is true -iff- the insertion took place, and the iterator component of\n+    the pair points to the element with key equivalent to the key of\n+    t.&quot;</td> <!-- DR 316 -->\n+<td>logarithmic</td>\n+</tr>\n+\n+<tr>\n+<td>a_eq.insert(t)</td>\n+<td>iterator</td>\n+<td>inserts t, returns the iterator pointing to the inserted element</td>\n+<td>logarithmic</td>\n+</tr>\n+\n+<tr>\n+<td>a.insert(p,t)</td>\n+<td>iterator</td>\n+<td>possibly inserts t (depending on whether a_uniq or a_eq); returns iterator\n+    pointing to the element with key equivalent to the key of t; iterator p\n+    is a hint pointing to where the insert should start to search</td>\n+<td>logarithmic in general, amortized constant if t is inserted right\n+    after p<br />\n+    <strong>[but see DR 233 and <a href=\"\n+    http://gcc.gnu.org/onlinedocs/libstdc++/23_containers/howto.html#4\">our\n+    specific notes</a>]</strong></td>\n+</tr>\n+\n+<tr>\n+<td>a.insert(i,j)</td>\n+<td>void</td>\n+<td>pre: i, j are not iterators into a.  possibly inserts each element from\n+    the range [i,j) (depending on whether a_uniq or a_eq)</td>\n+<td>Nlog(size()+N) where N is distance(i,j) in general</td> <!-- DR 264 -->\n+</tr>\n+\n+<tr>\n+<td>a.erase(k)</td>\n+<td>size_type</td>\n+<td>erases all elements with key equivalent to k; returns number of erased\n+    elements</td>\n+<td>log(size()) + count(k)</td>\n+</tr>\n+\n+<tr>\n+<td>a.erase(q)</td>\n+<td>void</td>\n+<td>erases the element pointed to by q</td>\n+<td>amortized constant</td>\n+</tr>\n+\n+<tr>\n+<td>a.erase(q1,q2)</td>\n+<td>void</td>\n+<td>erases all the elements in the range [q1,q2)</td>\n+<td>log(size()) + distance(q1,q2)</td>\n+</tr>\n+\n+<tr>\n+<td>a.clear()</td>\n+<td>void</td>\n+<td>erases everthing; post: size() == 0</td>\n+<td>linear</td> <!-- DR 224 -->\n+</tr>\n+\n+<tr>\n+<td>a.find(k)</td>\n+<td>iterator; const_iterator for constant a</td>\n+<td>returns iterator pointing to element with key equivalent to k, or\n+    a.end() if no such element found</td>\n+<td>logarithmic</td>\n+</tr>\n+\n+<tr>\n+<td>a.count(k)</td>\n+<td>size_type</td>\n+<td>returns number of elements with key equivalent to k</td>\n+<td>log(size()) + count(k)</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.lower_bound(k)</td>\n+<td>iterator; const_iterator for constant a</td>\n+<td>returns iterator pointing to the first element with key not less than k</td>\n+<td>logarithmic</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.upper_bound(k)</td>\n+<td>iterator; const_iterator for constant a</td>\n+<td>returns iterator pointing to the first element with key greater than k</td>\n+<td>logarithmic</td>\n </tr>\n \n <tr>\n-<td></td>\n-<td></td>\n-<td></td>\n-<td></td>\n+<td>a.equal_range(k)</td>\n+<td>pair&lt;iterator,iterator&gt;;\n+    pair&lt;const_iterator, const_iterator&gt; for constant a</td>\n+<td>equivalent to make_pair(a.lower_bound(k), a.upper_bound(k))</td>\n+<td>logarithmic</td>\n </tr>\n </table title=\"Table 69\"></p></a>\n \n \n <hr />\n <p class=\"smallertext\"><em>\n See <a href=\"mainpage.html\">mainpage.html</a> for copying conditions.\n+See <a href=\"http://gcc.gnu.org/libstdc++/\">the libstdc++-v3 homepage</a>\n+for more information.\n </em></p>\n \n "}, {"sha": "bb9809ab90115d2717b18333e8ee361051fec39e", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -222,9 +222,7 @@ GENERATE_BUGLIST       = YES\n # will result in a user defined paragraph with heading \"Side Effects:\". \n # You can put \\n's in the value part of an alias to insert newlines.\n \n-ALIASES                = \"maint=@if maint\" \\\n-                         \"endmaint=@endif\" \\\n-\t\"doctodo=@todo\\nDoc me!  See docs/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more.\"\n+ALIASES                = \"doctodo=@todo\\nDoc me!  See docs/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more.\"\n \n # The ENABLED_SECTIONS tag can be used to enable conditional \n # documentation sections, marked by \\if sectionname ... \\endif."}, {"sha": "35832c3e1d9157e0e58e48e40b6a869eb7b13473", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -159,9 +159,9 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an overload used by find() for the Input Iterator case.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _InputIter, typename _Tp>\n     inline _InputIter\n@@ -175,9 +175,9 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an overload used by find_if() for the Input Iterator case.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _InputIter, typename _Predicate>\n     inline _InputIter\n@@ -191,9 +191,9 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an overload used by find() for the RAI case.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Tp>\n     _RandomAccessIter\n@@ -235,9 +235,9 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an overload used by find_if() for the RAI case.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Predicate>\n     _RandomAccessIter\n@@ -1087,10 +1087,10 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an uglified unique_copy(_InputIter, _InputIter, _OutputIter)\n    *  overloaded for output iterators.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _InputIter, typename _OutputIter>\n     _OutputIter\n@@ -1110,10 +1110,10 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an uglified unique_copy(_InputIter, _InputIter, _OutputIter)\n    *  overloaded for forward iterators.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _InputIter, typename _ForwardIter>\n     _ForwardIter\n@@ -1159,11 +1159,11 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an uglified\n    *  unique_copy(_InputIter, _InputIter, _OutputIter, _BinaryPredicate)\n    *  overloaded for output iterators.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _InputIter, typename _OutputIter, typename _BinaryPredicate>\n     _OutputIter\n@@ -1188,11 +1188,11 @@ namespace std\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an uglified\n    *  unique_copy(_InputIter, _InputIter, _OutputIter, _BinaryPredicate)\n    *  overloaded for forward iterators.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _InputIter, typename _ForwardIter, typename _BinaryPredicate>\n     _ForwardIter\n@@ -1301,10 +1301,10 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an uglified reverse(_BidirectionalIter, _BidirectionalIter)\n    *  overloaded for bidirectional iterators.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _BidirectionalIter>\n     void\n@@ -1319,10 +1319,10 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is an uglified reverse(_BidirectionalIter, _BidirectionalIter)\n    *  overloaded for bidirectional iterators.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter>\n     void\n@@ -1389,9 +1389,9 @@ __result, __binary_pred, _IterType());\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the rotate algorithm specialized on RAIs.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _EuclideanRingElement>\n     _EuclideanRingElement\n@@ -1406,9 +1406,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the rotate algorithm.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _ForwardIter>\n     void\n@@ -1439,9 +1439,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the rotate algorithm.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _BidirectionalIter>\n     void\n@@ -1472,9 +1472,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the rotate algorithm.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter>\n     void\n@@ -1582,13 +1582,13 @@ __result, __binary_pred, _IterType());\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  Return a random number in the range [0, __n).  This function encapsulates\n    *  whether we're using rand (part of the standard C library) or lrand48\n    *  (not standard, but a much better choice whenever it's available).\n    *\n    *  XXX There is no corresponding encapsulation fn to seed the generator.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _Distance>\n     inline _Distance\n@@ -1648,9 +1648,9 @@ __result, __binary_pred, _IterType());\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function...\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _ForwardIter, typename _Predicate>\n     _ForwardIter\n@@ -1675,9 +1675,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function...\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _BidirectionalIter, typename _Predicate>\n     _BidirectionalIter\n@@ -1730,9 +1730,9 @@ __result, __binary_pred, _IterType());\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function...\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _ForwardIter, typename _Predicate, typename _Distance>\n     _ForwardIter\n@@ -1755,9 +1755,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function...\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _ForwardIter, typename _Pointer, typename _Predicate,\n \t   typename _Distance>\n@@ -1837,9 +1837,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function...\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Tp>\n     _RandomAccessIter\n@@ -1860,9 +1860,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function...\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Tp, typename _Compare>\n     _RandomAccessIter\n@@ -1884,17 +1884,17 @@ __result, __binary_pred, _IterType());\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  @doctodo\n    *  This controls some aspect of the sort routines.\n-   *  @endmaint\n+   *  @endif\n   */\n   enum { _M_threshold = 16 };\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Tp>\n     void\n@@ -1911,9 +1911,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Tp, typename _Compare>\n     void\n@@ -1930,9 +1930,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter>\n     void\n@@ -1953,9 +1953,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Compare>\n     void\n@@ -1977,9 +1977,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter>\n     inline void\n@@ -1992,9 +1992,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Compare>\n     inline void\n@@ -2008,9 +2008,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter>\n     void\n@@ -2025,9 +2025,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Compare>\n     void\n@@ -2043,9 +2043,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _Size>\n     inline _Size\n@@ -2057,9 +2057,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Size>\n     void\n@@ -2085,9 +2085,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the sort routine.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Size, typename _Compare>\n     void\n@@ -2166,9 +2166,9 @@ __result, __binary_pred, _IterType());\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the stable sorting routines.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter>\n     void\n@@ -2187,9 +2187,9 @@ __result, __binary_pred, _IterType());\n     }\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function for the stable sorting routines.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _RandomAccessIter, typename _Compare>\n     void"}, {"sha": "e193297513c33219eb404e63bef3527b5b186b5f", "filename": "libstdc++-v3/include/bits/stl_alloc.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -50,7 +50,7 @@\n \n /**\n  *  @defgroup Allocators Memory Allocators\n- *  @maint\n+ *  @if maint\n  *  stl_alloc.h implements some node allocators.  These are NOT the same as\n  *  allocators in the C++ standard, nor in the original H-P STL.  They do not\n  *  encapsulate different pointer types; we assume that there is only one\n@@ -72,7 +72,7 @@\n  *\n  *  \"SGI\" allocators may be wrapped in __allocator to convert the interface\n  *  into a \"standard\" one.\n- *  @endmaint\n+ *  @endif\n  *\n  *  The canonical description of these classes is in docs/html/ext/howto.html\n  *  or online at http://gcc.gnu.org/onlinedocs/libstdc++/ext/howto.html#3\n@@ -88,11 +88,11 @@\n namespace std\n {\n   /**\n-   *  @maint\n+   *  @if maint\n    *  A new-based allocator, as required by the standard.  Allocation and\n    *  deallocation forward to global new and delete.  \"SGI\" style, minus\n    *  reallocate().\n-   *  @endmaint\n+   *  @endif\n    *  (See @link Allocators allocators info @endlink for more.)\n   */\n   class __new_alloc \n@@ -109,13 +109,13 @@ namespace std\n   \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  A malloc-based allocator.  Typically slower than the\n    *  __default_alloc_template (below).  Typically thread-safe and more\n    *  storage efficient.  The template argument is unused and is only present\n    *  to permit multiple instantiations (but see __default_alloc_template\n    *  for caveats).  \"SGI\" style, plus __set_malloc_handler for OOM conditions.\n-   *  @endmaint\n+   *  @endif\n    *  (See @link Allocators allocators info @endlink for more.)\n   */\n   template <int __inst>\n@@ -207,13 +207,13 @@ namespace std\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is used primarily (only?) in _Alloc_traits and other places to\n    *  help provide the _Alloc_type typedef.\n    *\n    *  This is neither \"standard\"-conforming nor \"SGI\".  The _Alloc parameter\n    *  must be \"SGI\" style.\n-   *  @endmaint\n+   *  @endif\n    *  (See @link Allocators allocators info @endlink for more.)\n   */\n   template<class _Tp, class _Alloc>\n@@ -235,7 +235,7 @@ namespace std\n \n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  An adaptor for an underlying allocator (_Alloc) to check the size\n    *  arguments for debugging.  Errors are reported using assert; these\n    *  checks can be disabled via NDEBUG, but the space penalty is still\n@@ -245,7 +245,7 @@ namespace std\n    *  \"There is some evidence that this can confuse Purify.\" - SGI comment\n    *\n    *  This adaptor is \"SGI\" style.  The _Alloc parameter must also be \"SGI\".\n-   *  @endmaint\n+   *  @endif\n    *  (See @link Allocators allocators info @endlink for more.)\n   */\n   template <class _Alloc>\n@@ -293,7 +293,7 @@ typedef __mem_interface __single_client_alloc;\n \n \n /**\n- *  @maint\n+ *  @if maint\n  *  Default node allocator.  \"SGI\" style.  Uses __mem_interface for its\n  *  underlying requests (and makes as few requests as possible).\n  *  **** Currently __mem_interface is always __new_alloc, never __malloc*.\n@@ -318,7 +318,7 @@ typedef __mem_interface __single_client_alloc;\n  *  approach.  If you do not wish to share the free lists with the main\n  *  default_alloc instance, instantiate this with a non-zero __inst.\n  *\n- *  @endmaint\n+ *  @endif\n  *  (See @link Allocators allocators info @endlink for more.)\n */\n template<bool __threads, int __inst>\n@@ -682,14 +682,14 @@ inline bool operator!=(const allocator<_T1>&, const allocator<_T2>&)\n \n \n /**\n- *  @maint\n+ *  @if maint\n  *  Allocator adaptor to turn an \"SGI\" style allocator (e.g., __alloc,\n  *  __malloc_alloc_template) into a \"standard\" conforming allocator.  Note\n  *  that this adaptor does *not* assume that all objects of the underlying\n  *  alloc class are identical, nor does it assume that all of the underlying\n  *  alloc's member functions are static member functions.  Note, also, that\n  *  __allocator<_Tp, __alloc> is essentially the same thing as allocator<_Tp>.\n- *  @endmaint\n+ *  @endif\n  *  (See @link Allocators allocators info @endlink for more.)\n */\n template <class _Tp, class _Alloc>\n@@ -800,7 +800,7 @@ inline bool operator!=(const __debug_alloc<_Alloc>&,\n \n \n /**\n- *  @maint\n+ *  @if maint\n  *  Another allocator adaptor:  _Alloc_traits.  This serves two purposes.\n  *  First, make it possible to write containers that can use either \"SGI\"\n  *  style allocators or \"standard\" allocators.  Second, provide a mechanism\n@@ -832,7 +832,7 @@ inline bool operator!=(const __debug_alloc<_Alloc>&,\n  *  The size_t parameters are \"standard\" style (see top of stl_alloc.h) in\n  *  that they take counts, not sizes.\n  *\n- *  @endmaint\n+ *  @endif\n  *  (See @link Allocators allocators info @endlink for more.)\n */\n //@{"}, {"sha": "685913888c855fe4c82a8f7da66121c81289e557", "filename": "libstdc++-v3/include/bits/stl_construct.h", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,6 +1,6 @@\n // nonstandard construct and destroy functions -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -67,69 +67,69 @@\n namespace std\n {\n   /**\n-   * @maint\n+   * @if maint\n    * Constructs an object in existing memory by invoking an allocated\n    * object's constructor with an initializer.\n-   * @endmaint\n+   * @endif\n    */\n   template <class _T1, class _T2>\n     inline void\n     _Construct(_T1* __p, const _T2& __value)\n     { new (static_cast<void*>(__p)) _T1(__value); }\n   \n   /**\n-   * @maint\n+   * @if maint\n    * Constructs an object in existing memory by invoking an allocated\n    * object's default constructor (no initializers).\n-   * @endmaint\n+   * @endif\n    */\n   template <class _T1>\n     inline void\n     _Construct(_T1* __p)\n     { new (static_cast<void*>(__p)) _T1(); }\n \n   /**\n-   * @maint\n+   * @if maint\n    * Destroy a range of objects with nontrivial destructors.  \n    *\n    * This is a helper function used only by _Destroy().\n-   * @endmaint\n+   * @endif\n    */\n   template <class _ForwardIterator>\n     inline void\n     __destroy_aux(_ForwardIterator __first, _ForwardIterator __last, __false_type)\n     { for ( ; __first != __last; ++__first) _Destroy(&*__first); }\n \n   /**\n-   * @maint\n+   * @if maint\n    * Destroy a range of objects with trivial destructors.  Since the destructors\n    * are trivial, there's nothing to do and hopefully this function will be\n    * entirely optimized away.\n    *\n    * This is a helper function used only by _Destroy().\n-   * @endmaint\n+   * @endif\n    */\n   template <class _ForwardIterator> \n     inline void\n     __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)\n     { }\n \n   /**\n-   * @maint\n+   * @if maint\n    * Destroy the object pointed to by a pointer type.\n-   * @endmaint\n+   * @endif\n    */\n   template <class _Tp>\n     inline void\n     _Destroy(_Tp* __pointer)\n     { __pointer->~_Tp(); }\n   \n   /**\n-   * @maint\n+   * @if maint\n    * Destroy a range of objects.  If the value_type of the object has\n    * a trivial destructor, the compiler should optimize all of this\n    * away, otherwise the objects' destructors must be invoked.\n-   * @endmaint\n+   * @endif\n    */\n   template <class _ForwardIterator>\n     inline void\n@@ -146,6 +146,3 @@ namespace std\n \n #endif /* _CPP_BITS_STL_CONSTRUCT_H */\n \n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "5cd62b7291f5b6d3c2291e95753403ad0a7d38b2", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 31, "deletions": 27, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,6 +1,6 @@\n // deque implementation -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -73,14 +73,14 @@ namespace std\n { \n \n /**\n- *  @maint\n+ *  @if maint\n  *  @brief This function controls the size of memory nodes.\n  *  @param  size  The size of an element.\n  *  @return   The number (not bytesize) of elements per node.\n  *\n  *  This function started off as a compiler kludge from SGI, but seems to\n  *  be a useful wrapper around a repeated constant expression.\n- *  @endmaint\n+ *  @endif\n */\n inline size_t \n __deque_buf_size(size_t __size) \n@@ -94,9 +94,9 @@ __deque_buf_size(size_t __size)\n  *  marking its valid range.  Access to elements is done as offsets of either\n  *  of those two, relying on operator overloading in this class.\n  *\n- *  @maint\n+ *  @if maint\n  *  All the functions are op overloads except for _M_set_node.\n- *  @endmaint\n+ *  @endif\n */\n template <class _Tp, class _Ref, class _Ptr>\n struct _Deque_iterator\n@@ -204,11 +204,11 @@ struct _Deque_iterator\n   bool operator<=(const _Self& __x) const { return !(__x < *this); }\n   bool operator>=(const _Self& __x) const { return !(*this < __x); }\n \n-  /** @maint\n+  /** @if maint\n    *  Prepares to traverse new_node.  Sets everything except _M_cur, which\n    *  should therefore be set by the caller immediately afterwards, based on\n    *  _M_first and _M_last.\n-   *  @endmaint\n+   *  @endif\n   */\n   void _M_set_node(_Map_pointer __new_node) {\n     _M_node = __new_node;\n@@ -225,16 +225,16 @@ operator+(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)\n }\n \n \n-/// @maint Primary default version.  @endmaint\n+/// @if maint Primary default version.  @endif\n /**\n- *  @maint\n+ *  @if maint\n  *  Deque base class.  It has two purposes.  First, its constructor\n  *  and destructor allocate (but don't initialize) storage.  This makes\n  *  exception safety easier.  Second, the base class encapsulates all of\n  *  the differences between SGI-style allocators and standard-conforming\n  *  allocators.  There are two versions:  this ordinary one, and the\n  *  space-saving specialization for instanceless allocators.\n- *  @endmaint\n+ *  @endif\n */\n template <class _Tp, class _Alloc, bool __is_static>\n class _Deque_alloc_base\n@@ -270,7 +270,7 @@ class _Deque_alloc_base\n   size_t _M_map_size;\n };\n \n-/// Specialization for instanceless allocators.\n+/// @if maint Specialization for instanceless allocators.  @endif\n template <class _Tp, class _Alloc>\n class _Deque_alloc_base<_Tp, _Alloc, true>\n {\n@@ -301,14 +301,14 @@ class _Deque_alloc_base<_Tp, _Alloc, true>\n \n \n /**\n- *  @maint\n+ *  @if maint\n  *  Deque base class.  Using _Alloc_traits in the instantiation of the parent\n  *  class provides the compile-time dispatching mentioned in the parent's docs.\n  *  This class provides the unified face for deque's allocation.\n  *\n  *  Nothing in this class ever constructs or destroys an actual Tp element.\n  *  (Deque handles that itself.)  Only/All memory management is performed here.\n- *  @endmaint\n+ *  @endif\n */\n template <class _Tp, class _Alloc>\n class _Deque_base\n@@ -352,13 +352,13 @@ _Deque_base<_Tp,_Alloc>::~_Deque_base()\n }\n \n /**\n- *  @maint\n+ *  @if maint\n  *  @brief Layout storage.\n  *  @param  num_elements  The count of T's for which to allocate space at first.\n  *  @return   Nothing.\n  *\n  *  The initial underlying memory layout is a bit complicated...\n- *  @endmaint\n+ *  @endif\n */\n template <class _Tp, class _Alloc>\n void\n@@ -415,14 +415,22 @@ _Deque_base<_Tp,_Alloc>::_M_destroy_nodes(_Tp** __nstart, _Tp** __nfinish)\n \n \n /**\n+ *  @ingroup Containers\n+ *  @ingroup Sequences\n+ *\n+ *  Meets the requirements of a <a href=\"tables.html#65\">container</a>, a\n+ *  <a href=\"tables.html#66\">reversible container</a>, and a\n+ *  <a href=\"tables.html#67\">sequence</a>, including the\n+ *  <a href=\"tables.html#68\">optional sequence requirements</a>.\n+ *\n  *  Placeholder:  see http://www.sgi.com/tech/stl/Deque.html for now.\n  *\n  *  In previous HP/SGI versions of deque, there was an extra template parameter\n  *  so users could control the node size.  This extension turned out to violate\n  *  the C++ standard (it can be detected using template template parameters),\n  *  and it was removed.\n  *\n- *  @maint\n+ *  @if maint\n  *  Here's how a deque<Tp> manages memory.  Each deque has 4 members:\n  *  \n  *  - Tp**        _M_map\n@@ -483,8 +491,7 @@ _Deque_base<_Tp,_Alloc>::_M_destroy_nodes(_Tp** __nstart, _Tp** __nfinish)\n  *  the implementation routines for deque itself work only through the start\n  *  and finish iterators.  This keeps the routines simple and sane, and we can\n  *  use other standard algorithms as well.\n- *\n- *  @endmaint\n+ *  @endif\n */\n template <class _Tp, class _Alloc = allocator<_Tp> >\n class deque : protected _Deque_base<_Tp, _Alloc>\n@@ -524,11 +531,11 @@ class deque : protected _Deque_base<_Tp, _Alloc>\n   using _Base::_M_allocate_map;\n   using _Base::_M_deallocate_map;\n \n-  /** @maint\n+  /** @if maint\n    *  A total of four data members accumulated down the heirarchy.  If the\n    *  _Alloc type requires separate instances, then two of them will also be\n    *  included in each deque.\n-   *  @endmaint\n+   *  @endif\n   */\n   using _Base::_M_map;\n   using _Base::_M_map_size;\n@@ -1035,7 +1042,7 @@ void deque<_Tp,_Alloc>::clear()\n }\n \n /**\n- *  @maint\n+ *  @if maint\n  *  @brief Fills the deque with copies of value.\n  *  @param  value  Initial value.\n  *  @return   Nothing.\n@@ -1044,7 +1051,7 @@ void deque<_Tp,_Alloc>::clear()\n  *\n  *  This function is called only when the user provides an explicit size (with\n  *  or without an explicit exemplar value).\n- *  @endmaint\n+ *  @endif\n */\n template <class _Tp, class _Alloc>\n void deque<_Tp,_Alloc>::_M_fill_initialize(const value_type& __value)\n@@ -1063,7 +1070,7 @@ void deque<_Tp,_Alloc>::_M_fill_initialize(const value_type& __value)\n }\n \n /** @{\n- *  @maint\n+ *  @if maint\n  *  @brief Fills the deque with whatever is in [first,last).\n  *  @param  first  An input iterator.\n  *  @param  last  An input iterator.\n@@ -1072,7 +1079,7 @@ void deque<_Tp,_Alloc>::_M_fill_initialize(const value_type& __value)\n  *  If the iterators are actually forward iterators (or better), then the\n  *  memory layout can be done all at once.  Else we move forward using\n  *  push_back on each value from the iterator.\n- *  @endmaint\n+ *  @endif\n */\n template <class _Tp, class _Alloc> template <class _InputIterator>\n void deque<_Tp,_Alloc>::_M_range_initialize(_InputIterator __first,\n@@ -1570,6 +1577,3 @@ inline void swap(deque<_Tp,_Alloc>& __x, deque<_Tp,_Alloc>& __y) {\n   \n #endif /* __GLIBCPP_INTERNAL_DEQUE_H */\n \n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "5dff8fc3f447e6b7de4d4e0932535f18ab6c9c45", "filename": "libstdc++-v3/include/bits/stl_iterator_base_types.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -146,10 +146,10 @@ namespace std\n     };\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This function is not a part of the C++ standard but is syntactic\n    *  sugar for internal library use only.\n-   *  @endmaint\n+   *  @endif\n   */\n   template<typename _Iter>\n     inline typename iterator_traits<_Iter>::iterator_category\n@@ -160,7 +160,3 @@ namespace std\n \n #endif /* __GLIBCPP_INTERNAL_ITERATOR_BASE_TYPES_H */\n \n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "3d470b1f25f0d8bbfc2473b1168f107a5f72ed97", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,6 +1,6 @@\n // List implementation -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -273,7 +273,19 @@ namespace std\n       void clear();\n     };\n \n-\n+  /**\n+   *  @ingroup Containers\n+   *  @ingroup Sequences\n+   *\n+   *  Meets the requirements of a <a href=\"tables.html#65\">container</a>, a\n+   *  <a href=\"tables.html#66\">reversible container</a>, and a\n+   *  <a href=\"tables.html#67\">sequence</a>, including the\n+   *  <a href=\"tables.html#68\">optional sequence requirements</a> with the\n+   *  %exception of @c at and @c operator[].\n+   *\n+   *  @doctodo\n+   *\n+  */\n   template<typename _Tp, typename _Alloc = allocator<_Tp> >\n     class list : protected _List_base<_Tp, _Alloc>\n     {"}, {"sha": "ce3dc0b9b393fc858ae62ee5e7dc5ab0ce8bcc91", "filename": "libstdc++-v3/include/bits/stl_relops.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_relops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_relops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_relops.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -57,15 +57,15 @@\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  *\n- *  @maint\n+ *  @if maint\n  *  Inclusion of this file has been removed from\n  *  all of the other STL headers for safety reasons, except std_utility.h.\n  *  For more information, see the thread of about twenty messages starting\n  *  with http://gcc.gnu.org/ml/libstdc++/2001-01/msg00223.html , or the\n  *  FAQ at http://gcc.gnu.org/onlinedocs/libstdc++/faq/index.html#4_4 .\n  *\n  *  Short summary:  the rel_ops operators should be avoided for the present.\n- *  @endmaint\n+ *  @endif\n  */\n \n #ifndef _CPP_BITS_STL_RELOPS_H"}, {"sha": "7b88f9333ec76cbc3071a14b815d79db2ad874de", "filename": "libstdc++-v3/include/bits/stl_tempbuf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -65,11 +65,11 @@ namespace std\n {\n \n /**\n- *  @maint\n+ *  @if maint\n  *  This class is used in two places:  stl_algo.h and ext/memory, where it\n  *  is wrapped as the temporary_buffer class.  See temporary_buffer docs for\n  *  more notes.\n- *  @endmaint\n+ *  @endif\n */\n template <class _ForwardIterator, class _Tp>\n   class _Temporary_buffer"}, {"sha": "81bb9752453f223b6b1fe346f3c83ae5ae50796c", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -1,6 +1,6 @@\n // Vector implementation -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -148,6 +148,15 @@ struct _Vector_base\n  *  @brief  A standard container which offers fixed time access to individual\n  *  elements in any order.\n  *\n+ *  @ingroup Containers\n+ *  @ingroup Sequences\n+ *\n+ *  Meets the requirements of a <a href=\"tables.html#65\">container</a>, a\n+ *  <a href=\"tables.html#66\">reversible container</a>, and a\n+ *  <a href=\"tables.html#67\">sequence</a>, including the\n+ *  <a href=\"tables.html#68\">optional sequence requirements</a> with the\n+ *  %exception of @c push_front and @c pop_front.\n+ *\n  *  In some terminology a vector can be described as a dynamic C-style array,\n  *  it offers fast and efficient access to individual elements in any order\n  *  and saves the user from worrying about memory and size allocation."}, {"sha": "b7feb37aa45767f3744ca07e761e89ea5e29228f", "filename": "libstdc++-v3/include/std/std_memory.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b7c941e90c9f6df2c35121b36264941ec28dd5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h?ref=04b7c941e90c9f6df2c35121b36264941ec28dd5", "patch": "@@ -62,10 +62,10 @@ namespace std\n {\n \n   /**\n-   *  @maint\n+   *  @if maint\n    *  This is a helper function.  The unused second parameter exists to\n    *  permit the real get_temporary_buffer to use template parameter deduction.\n-   *  @endmaint\n+   *  @endif\n   */\n   template <class _Tp>\n   pair<_Tp*, ptrdiff_t> \n@@ -202,7 +202,3 @@ template <class _Tp>\n \n #endif /* _CPP_MEMORY */\n \n-\n-// Local Variables:\n-// mode:C++\n-// End:"}]}