{"sha": "748e241eab69462ae57751a8b8ce58bba4ceb520", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ4ZTI0MWVhYjY5NDYyYWU1Nzc1MWE4YjhjZTU4YmJhNGNlYjUyMA==", "commit": {"author": {"name": "Mohan Embar", "email": "gnustuff@thisiscool.com", "date": "2003-10-31T03:31:54Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2003-10-31T03:31:54Z"}, "message": "win32.cc: (dirExists) Internal helper function to test for directory existence.\n\n\t* win32.cc: (dirExists) Internal helper function to\n\ttest for directory existence.\n\t(getUserHome) New helper function refactored out\n\tof _Jv_platform_initProperties. Uses USERPROFILE\n\tinstead of HOMEDIR and attempts to support Win9X and NT.\n\t(_Jv_platform_initProperties) Use getUserHome.\n\nFrom-SVN: r73117", "tree": {"sha": "a991ca992425c4d0d66b399e0ec3738db663b536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a991ca992425c4d0d66b399e0ec3738db663b536"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/748e241eab69462ae57751a8b8ce58bba4ceb520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748e241eab69462ae57751a8b8ce58bba4ceb520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/748e241eab69462ae57751a8b8ce58bba4ceb520", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748e241eab69462ae57751a8b8ce58bba4ceb520/comments", "author": null, "committer": null, "parents": [{"sha": "76506a3ee30287c5fa06eab73e9bece391c4b89c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76506a3ee30287c5fa06eab73e9bece391c4b89c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76506a3ee30287c5fa06eab73e9bece391c4b89c"}], "stats": {"total": 85, "additions": 54, "deletions": 31}, "files": [{"sha": "7385af65418a024d54508c36435b9a5117e095da", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/748e241eab69462ae57751a8b8ce58bba4ceb520/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/748e241eab69462ae57751a8b8ce58bba4ceb520/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=748e241eab69462ae57751a8b8ce58bba4ceb520", "patch": "@@ -1,3 +1,12 @@\n+2003-10-30  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* win32.cc: (dirExists) Internal helper function to\n+\ttest for directory existence.\n+\t(getUserHome) New helper function refactored out\n+\tof _Jv_platform_initProperties. Uses USERPROFILE\n+\tinstead of HOMEDIR and attempts to support Win9X and NT.\n+\t(_Jv_platform_initProperties) Use getUserHome.\n+\n 2003-10-30  Mohan Embar  <gnustuff@thisiscool.com>\n \n \tPR libgcj/11521:"}, {"sha": "3bf1391016e9dba8a88326b5798f3010520590aa", "filename": "libjava/win32.cc", "status": "modified", "additions": 45, "deletions": 31, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/748e241eab69462ae57751a8b8ce58bba4ceb520/libjava%2Fwin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/748e241eab69462ae57751a8b8ce58bba4ceb520/libjava%2Fwin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32.cc?ref=748e241eab69462ae57751a8b8ce58bba4ceb520", "patch": "@@ -177,6 +177,43 @@ __mingwthr_key_dtor (DWORD, void (*) (void *))\n   return 0;\n }\n \n+static bool dirExists (const char* dir)\n+{\n+  DWORD dwAttrs = ::GetFileAttributes (dir);\n+  return dwAttrs != 0xFFFFFFFF &&\n+    (dwAttrs & FILE_ATTRIBUTE_DIRECTORY) != 0;\n+}\n+\n+static void getUserHome(char* userHome, const char* userId)\n+{\n+  char* uh = ::getenv (\"USERPROFILE\");\n+  if (uh)\n+    {\n+      strcpy(userHome, uh);\n+    }\n+  else\n+    {\n+      // Make a half-hearted attempt to support this\n+      // legacy version of Windows. Try %WINDIR%\\Profiles\\%USERNAME%\n+      // and failing this, use %WINDIR%.\n+      //\n+      // See:http://java.sun.com/docs/books/tutorial/security1.2/summary/files.html#UserPolicy\n+      //\n+      // To do this correctly, we'd have to factor in the\n+      // Windows version, but if we did that, then this attempt\n+      // wouldn't be half-hearted.\n+      char userHomePath[MAX_PATH], winHome[MAX_PATH];\n+      ::GetWindowsDirectory(winHome, MAX_PATH);\n+        // assume this call always succeeds\n+\n+      sprintf(userHomePath, \"%s\\\\Profiles\\\\%s\", winHome, userId);\n+      if (dirExists (userHomePath))\n+        strcpy(userHome, userHomePath);\n+      else\n+        strcpy(userHome, winHome);\n+    }\n+}\n+\n // Set platform-specific System properties.\n void\n _Jv_platform_initProperties (java::util::Properties* newprops)\n@@ -205,37 +242,14 @@ _Jv_platform_initProperties (java::util::Properties* newprops)\n \n   // Use GetUserName to set 'user.name'.\n   buflen = 257;  // UNLEN + 1\n-  buffer = (char *) _Jv_MallocUnchecked (buflen);\n-  if (buffer != NULL)\n-    {\n-      if (GetUserName (buffer, &buflen))\n-        SET (\"user.name\", buffer);\n-      _Jv_Free (buffer);\n-    }\n-\n-  // According to the api documentation for 'GetWindowsDirectory()', the\n-  // environmental variable HOMEPATH always specifies the user's home\n-  // directory or a default directory.  On the 3 windows machines I checked\n-  // only 1 had it set.  If it's not set, JDK1.3.1 seems to set it to\n-  // the windows directory, so we'll do the same.\n-  char *userHome = NULL;\n-  if ((userHome = ::getenv (\"HOMEPATH\")) == NULL )\n-    {\n-      // Check HOME since it's what I use.\n-      if ((userHome = ::getenv (\"HOME\")) == NULL )\n-        {\n-          // Not found - use the windows directory like JDK1.3.1 does.\n-          char *winHome = (char *) _Jv_MallocUnchecked (MAX_PATH);\n-          if (winHome != NULL)\n-            {\n-              if (GetWindowsDirectory (winHome, MAX_PATH))\n-        SET (\"user.home\", winHome);\n-              _Jv_Free (winHome);\n-            }\n-        }\n-     }\n-  if (userHome != NULL)\n-    SET (\"user.home\", userHome);\n+  char userName[buflen];\n+  if (GetUserName (userName, &buflen))\n+    SET (\"user.name\", userName);\n+\n+  // Set user.home\n+  char userHome[MAX_PATH];\n+  getUserHome(userHome, userName);\n+  SET (\"user.home\", userHome);\n \n   // Get and set some OS info.\n   OSVERSIONINFO osvi;"}]}