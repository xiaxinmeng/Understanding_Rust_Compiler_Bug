{"sha": "b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJmYmJmNTY0ZjM0NjRhYjY5ODI2ZTVlNjJjZjhjNmQ5ODczZmUzNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-12-19T10:00:02Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-19T10:00:02Z"}, "message": "NumberFormat.java: Sorted imports.\n\n2003-12-19  Michael Koch  <konqueror@gmx.de>\n\n\t* java/text/NumberFormat.java: Sorted imports.\n\t(getCurrency): New method.\n\t(setCurrency): New method.\n\nFrom-SVN: r74830", "tree": {"sha": "1f83bf4410eddd53b6a86a3c5cd5c62229f06fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f83bf4410eddd53b6a86a3c5cd5c62229f06fcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35/comments", "author": null, "committer": null, "parents": [{"sha": "edf7cee87ba8f572dd2b41df41441542ad135f0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf7cee87ba8f572dd2b41df41441542ad135f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf7cee87ba8f572dd2b41df41441542ad135f0c"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "367264728943899a2900913a6109fdf1e88471f0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "patch": "@@ -1,3 +1,10 @@\n+2003-12-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/text/NumberFormat.java: Sorted imports.\n+\t(getCurrency): New method.\n+\t(setCurrency): New method.\n+\t\n+\n 2003-12-19  Michael Koch  <konqueror@gmx.de>\n \n \t* java/text/MessageFormat.java"}, {"sha": "568018ffdf4e95567eeae95d5cfbfe730f3d36bf", "filename": "libjava/java/text/NumberFormat.java", "status": "modified", "additions": 46, "deletions": 5, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35/libjava%2Fjava%2Ftext%2FNumberFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35/libjava%2Fjava%2Ftext%2FNumberFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FNumberFormat.java?ref=b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "patch": "@@ -38,13 +38,14 @@\n \n package java.text;\n \n-import java.util.Locale;\n-import java.util.ResourceBundle;\n-import java.util.MissingResourceException;\n+import java.io.InvalidObjectException;\n+import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.IOException;\n-import java.io.InvalidObjectException;\n+import java.util.Currency;\n+import java.util.Locale;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n \n /**\n  * This is the abstract superclass of all classes which format and \n@@ -760,4 +761,44 @@ private void writeObject(ObjectOutputStream stream) throws IOException\n     serialVersionOnStream = 1;\n     stream.defaultWriteObject();\n   }\n+\n+  /**\n+   * Returns the currency used by this number format when formatting currency\n+   * values.\n+   *\n+   * The default implementation throws UnsupportedOperationException.\n+   *\n+   * @return The used currency object, or null.\n+   *\n+   * @throws UnsupportedOperationException If the number format class doesn't\n+   * implement currency formatting.\n+   *\n+   * @since 1.4\n+   */\n+  public Currency getCurrency()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  /**\n+   * Sets the currency used by this number format when formatting currency\n+   * values.\n+   *\n+   * The default implementation throws UnsupportedOperationException.\n+   *\n+   * @param currency The new currency to be used by this number format.\n+   *\n+   * @throws NullPointerException If currenc is null.\n+   * @throws UnsupportedOperationException If the number format class doesn't\n+   * implement currency formatting.\n+   *\n+   * @since 1.4\n+   */\n+  public void setCurreny(Currency currency)\n+  {\n+    if (currency == null)\n+      throw new NullPointerException(\"currency may not be null\");\n+    \n+    throw new UnsupportedOperationException();\n+  }\n }"}]}