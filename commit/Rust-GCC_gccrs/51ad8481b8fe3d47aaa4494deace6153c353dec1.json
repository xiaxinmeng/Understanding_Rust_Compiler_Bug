{"sha": "51ad8481b8fe3d47aaa4494deace6153c353dec1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFhZDg0ODFiOGZlM2Q0N2FhYTQ0OTRkZWFjZTYxNTNjMzUzZGVjMQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-08-13T15:55:40Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-08-13T15:55:40Z"}, "message": "PR c/80619 - bad fix-it hint for GCC %lu directive with int argument: %wu\n\ngcc/c-family/ChangeLog:\n\n\tPR c/80619\n\t* c-format.c (printf_length_specs): Set FMT_LEN_w for \"w\".\n\t(asm_fprintf_length_spec): Same.\n\t* c-format.h (format_lengths): Add FMT_LEN_w.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/80619\n\t* gcc.dg/format/pr80619.c: New test.\n\nFrom-SVN: r274385", "tree": {"sha": "a515e0e078bacaad2c48cb0859c79ac59b123a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a515e0e078bacaad2c48cb0859c79ac59b123a03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51ad8481b8fe3d47aaa4494deace6153c353dec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ad8481b8fe3d47aaa4494deace6153c353dec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51ad8481b8fe3d47aaa4494deace6153c353dec1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ad8481b8fe3d47aaa4494deace6153c353dec1/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "547d5d22e96b900907889a2b49f8c9b09b035dac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547d5d22e96b900907889a2b49f8c9b09b035dac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/547d5d22e96b900907889a2b49f8c9b09b035dac"}], "stats": {"total": 106, "additions": 104, "deletions": 2}, "files": [{"sha": "cd7cccb8eb1adf2e41300e5ebde420b918325f7b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=51ad8481b8fe3d47aaa4494deace6153c353dec1", "patch": "@@ -1,3 +1,10 @@\n+2019-08-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/80619\n+\t* c-format.c (printf_length_specs): Set FMT_LEN_w for \"w\".\n+\t(asm_fprintf_length_spec): Same.\n+\t* c-format.h (format_lengths): Add FMT_LEN_w.\n+\n 2019-08-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-pragma.h (enum pragma_omp_clause): Add"}, {"sha": "6b059969e670a25203de193c65d02d2906644e08", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=51ad8481b8fe3d47aaa4494deace6153c353dec1", "patch": "@@ -497,15 +497,15 @@ static const format_length_info printf_length_specs[] =\n static const format_length_info asm_fprintf_length_specs[] =\n {\n   { \"l\", FMT_LEN_l, STD_C89, \"ll\", FMT_LEN_ll, STD_C89, 0 },\n-  { \"w\", FMT_LEN_none, STD_C89, NO_FMT, 0 },\n+  { \"w\", FMT_LEN_w, STD_C89, NO_FMT, 0 },\n   { NO_FMT, NO_FMT, 0 }\n };\n \n /* Length specifiers valid for GCC diagnostics.  */\n static const format_length_info gcc_diag_length_specs[] =\n {\n   { \"l\", FMT_LEN_l, STD_C89, \"ll\", FMT_LEN_ll, STD_C89, 0 },\n-  { \"w\", FMT_LEN_none, STD_C89, NO_FMT, 0 },\n+  { \"w\", FMT_LEN_w, STD_C89, NO_FMT, 0 },\n   { NO_FMT, NO_FMT, 0 }\n };\n "}, {"sha": "6aa68dfe88364c1d421c0dd7d2a108a126b94cd0", "filename": "gcc/c-family/c-format.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Fc-family%2Fc-format.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Fc-family%2Fc-format.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.h?ref=51ad8481b8fe3d47aaa4494deace6153c353dec1", "patch": "@@ -36,6 +36,7 @@ enum format_lengths\n   FMT_LEN_H,\n   FMT_LEN_D,\n   FMT_LEN_DD,\n+  FMT_LEN_w,   /* GCC's HOST_WIDE_INT.  */\n   FMT_LEN_MAX\n };\n "}, {"sha": "d577f7ed089e16aa204c7e487925b109938cf07d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51ad8481b8fe3d47aaa4494deace6153c353dec1", "patch": "@@ -1,3 +1,8 @@\n+2019-08-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/80619\n+\t* gcc.dg/format/pr80619.c: New test.\n+\n 2019-08-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90473 - wrong code with nullptr in default argument."}, {"sha": "c9f0496a1c2ac6488da5328f7fd15313bcde14fd", "filename": "gcc/testsuite/gcc.dg/format/pr80619.c", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr80619.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51ad8481b8fe3d47aaa4494deace6153c353dec1/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr80619.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fpr80619.c?ref=51ad8481b8fe3d47aaa4494deace6153c353dec1", "patch": "@@ -0,0 +1,89 @@\n+/* PR c/80619 - bad fix-it hint for GCC %lu directive with int argument: %wu\n+   { dg-do compile }\n+   { dg-options \"-Wall -fdiagnostics-show-caret\" } */\n+\n+void T (const char*, ...) __attribute__ ((format (__gcc_diag__, 1, 2)));\n+\n+void test_suggested_modifier (void)\n+{\n+  T (\"%ld\", 0);     // { dg-warning \"format '%ld' expects argument of type 'long int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%ld\", 0);\n+       ~~^   ~\n+         |   |\n+         |   int\n+         long int\n+       %d\n+   { dg-end-multiline-output \"\" } */\n+\n+  T (\"%li\", 0);     // { dg-warning \"format '%li' expects argument of type 'long int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%li\", 0);\n+       ~~^   ~\n+         |   |\n+         |   int\n+         long int\n+       %i\n+       { dg-end-multiline-output \"\" } */\n+\n+  T (\"%lu\", 0);     // { dg-warning \"format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%lu\", 0);\n+       ~~^   ~\n+         |   |\n+         |   int\n+         long unsigned int\n+       %u\n+       { dg-end-multiline-output \"\" } */\n+\n+  T (\"%lx\", 0);     // { dg-warning \"format '%lx' expects argument of type 'long unsigned int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%lx\", 0);\n+       ~~^   ~\n+         |   |\n+         |   int\n+         long unsigned int\n+       %x\n+       { dg-end-multiline-output \"\" } */\n+\n+  T (\"%lli\", 0);    // { dg-warning \"format '%lli' expects argument of type 'long long int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%lli\", 0);\n+       ~~~^   ~\n+          |   |\n+          |   int\n+          long long int\n+       %i\n+       { dg-end-multiline-output \"\" } */\n+\n+  T (\"%llo\", 0);    // { dg-warning \"format '%llo' expects argument of type 'long long unsigned int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%llo\", 0);\n+       ~~~^   ~\n+          |   |\n+          |   int\n+          long long unsigned int\n+       %o\n+       { dg-end-multiline-output \"\" } */\n+\n+  T (\"%llu\", 0);    // { dg-warning \"format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%llu\", 0);\n+       ~~~^   ~\n+          |   |\n+          |   int\n+          long long unsigned int\n+       %u\n+       { dg-end-multiline-output \"\" } */\n+\n+  T (\"%llx\", 0);    // { dg-warning \"format '%llx' expects argument of type 'long long unsigned int', but argument 2 has type 'int'\" }\n+  /* { dg-begin-multiline-output \"\" }\n+   T (\"%llx\", 0);\n+       ~~~^   ~\n+          |   |\n+          |   int\n+          long long unsigned int\n+       %x\n+       { dg-end-multiline-output \"\" } */\n+}\n+"}]}