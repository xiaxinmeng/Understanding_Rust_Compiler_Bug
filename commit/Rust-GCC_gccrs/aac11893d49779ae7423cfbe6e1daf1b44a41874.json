{"sha": "aac11893d49779ae7423cfbe6e1daf1b44a41874", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFjMTE4OTNkNDk3NzlhZTc0MjNjZmJlNmUxZGFmMWI0NGE0MTg3NA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-11-07T08:11:54Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-11-07T08:11:54Z"}, "message": "[arm] Remove semicolon after while {} do (0) in HANDLE_NARROW_SHIFT_ARITH\n\n2017-11-07  Tom de Vries  <tom@codesourcery.com>\n\n\tPR other/82784\n\t* config/arm/arm.c (HANDLE_NARROW_SHIFT_ARITH): Remove semicolon after\n\t\"while {} do (0)\".\n\t(arm_rtx_costs_internal): Add missing semicolon after\n\tHANDLE_NARROW_SHIFT_ARITH call.\n\nFrom-SVN: r254490", "tree": {"sha": "8b3128e5399e94bff093595d47cdadabee0b519d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b3128e5399e94bff093595d47cdadabee0b519d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aac11893d49779ae7423cfbe6e1daf1b44a41874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac11893d49779ae7423cfbe6e1daf1b44a41874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aac11893d49779ae7423cfbe6e1daf1b44a41874", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac11893d49779ae7423cfbe6e1daf1b44a41874/comments", "author": null, "committer": null, "parents": [{"sha": "2a321acb02d5b678f7fd4a4aadc31e586acac84a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a321acb02d5b678f7fd4a4aadc31e586acac84a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a321acb02d5b678f7fd4a4aadc31e586acac84a"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "105f222e7894956987c728dbecf7678cb87fd88e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac11893d49779ae7423cfbe6e1daf1b44a41874/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac11893d49779ae7423cfbe6e1daf1b44a41874/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aac11893d49779ae7423cfbe6e1daf1b44a41874", "patch": "@@ -1,3 +1,11 @@\n+2017-11-07  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR other/82784\n+\t* config/arm/arm.c (HANDLE_NARROW_SHIFT_ARITH): Remove semicolon after\n+\t\"while {} do (0)\".\n+\t(arm_rtx_costs_internal): Add missing semicolon after\n+\tHANDLE_NARROW_SHIFT_ARITH call.\n+\n 2017-11-06  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (rs6000_option_override_internal): Don't"}, {"sha": "c2a3e9ccbbfa46c31712cd6d0312a515ac127561", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac11893d49779ae7423cfbe6e1daf1b44a41874/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac11893d49779ae7423cfbe6e1daf1b44a41874/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=aac11893d49779ae7423cfbe6e1daf1b44a41874", "patch": "@@ -9222,7 +9222,7 @@ arm_unspec_cost (rtx x, enum rtx_code /* outer_code */, bool speed_p, int *cost)\n \t        return true;\t\t\t\t\t\t\\\n \t      }\t\t\t\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n-\twhile (0);\n+\twhile (0)\n \n /* RTX costs.  Make an estimate of the cost of executing the operation\n    X, which is contained with an operation with code OUTER_CODE.\n@@ -9654,8 +9654,8 @@ arm_rtx_costs_internal (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t  /* We check both sides of the MINUS for shifter operands since,\n \t     unlike PLUS, it's not commutative.  */\n \n-\t  HANDLE_NARROW_SHIFT_ARITH (MINUS, 0)\n-\t  HANDLE_NARROW_SHIFT_ARITH (MINUS, 1)\n+\t  HANDLE_NARROW_SHIFT_ARITH (MINUS, 0);\n+\t  HANDLE_NARROW_SHIFT_ARITH (MINUS, 1);\n \n \t  /* Slightly disparage, as we might need to widen the result.  */\n \t  *cost += 1;\n@@ -9766,7 +9766,7 @@ arm_rtx_costs_internal (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t  rtx shift_op, shift_reg;\n \t  shift_reg = NULL;\n \n-\t  HANDLE_NARROW_SHIFT_ARITH (PLUS, 0)\n+\t  HANDLE_NARROW_SHIFT_ARITH (PLUS, 0);\n \n \t  if (CONST_INT_P (XEXP (x, 1)))\n \t    {"}]}