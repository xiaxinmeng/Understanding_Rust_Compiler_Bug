{"sha": "2f30407b611769efc98967fd9e5070305df752e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzMDQwN2I2MTE3NjllZmM5ODk2N2ZkOWU1MDcwMzA1ZGY3NTJlOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-05-18T17:04:25Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-05-18T17:04:25Z"}, "message": "Makefile.in: Add ipa-predicate.o and ipa-predicate.h\n\n\n\t* Makefile.in: Add ipa-predicate.o and ipa-predicate.h\n\t* ipa-inline-analysis.c (NUM_CONDITIONS): turn into\n\tpredicate::num_conditions\n\t(IS_NOT_CONSTANT): turn into predicate::is_not_constant.\n\t(CHANGED): turn into predicate::changed.\n\t(agg_position_info): Move to ipa-predicate.h\n\t(add_condition, predicate::add_clause, predicate::operator &=,\n\tpredicate::or_with, predicate::evaluate, predicate::probability,\n\tdump_condition, dump_clause, predicate::dump,\n\tpredicate::remap_after_duplication, predicate::remap_after_inlining,\n\tpredicate::stream_in, predicate::stream_out): Move to ipa-predicate.c\n\t(evaluate_conditions_for_known_args): Update.\n\t(set_cond_stmt_execution_predicate): Update.\n\t* ipa-inline.h: Include ipa-predicate.h\n\t(condition, inline_param_summary, conditions, agg_position_info,\n\tpredicate): Move to ipa-predicate.h\n\t* ipa-predicate.c: New file.\n\t* ipa-predicate.h: New file.\n\nFrom-SVN: r248243", "tree": {"sha": "4c2e859ed48e0eb7934ddee4108338e67aade21c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c2e859ed48e0eb7934ddee4108338e67aade21c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f30407b611769efc98967fd9e5070305df752e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f30407b611769efc98967fd9e5070305df752e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f30407b611769efc98967fd9e5070305df752e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f30407b611769efc98967fd9e5070305df752e9/comments", "author": null, "committer": null, "parents": [{"sha": "6ecd23394a6cdc5de261943e480845ac4900c401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ecd23394a6cdc5de261943e480845ac4900c401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ecd23394a6cdc5de261943e480845ac4900c401"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "615145617a8b4eb3ce729d52f42a7d77833e0b36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f30407b611769efc98967fd9e5070305df752e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f30407b611769efc98967fd9e5070305df752e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f30407b611769efc98967fd9e5070305df752e9", "patch": "@@ -1,3 +1,24 @@\n+2017-05-18  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* Makefile.in: Add ipa-predicate.o and ipa-predicate.h\n+\t* ipa-inline-analysis.c (NUM_CONDITIONS): turn into\n+\tpredicate::num_conditions\n+\t(IS_NOT_CONSTANT): turn into predicate::is_not_constant.\n+\t(CHANGED): turn into predicate::changed.\n+\t(agg_position_info): Move to ipa-predicate.h\n+\t(add_condition, predicate::add_clause, predicate::operator &=,\n+\tpredicate::or_with, predicate::evaluate, predicate::probability,\n+\tdump_condition, dump_clause, predicate::dump,\n+\tpredicate::remap_after_duplication, predicate::remap_after_inlining,\n+\tpredicate::stream_in, predicate::stream_out): Move to ipa-predicate.c\n+\t(evaluate_conditions_for_known_args): Update.\n+\t(set_cond_stmt_execution_predicate): Update.\n+\t* ipa-inline.h: Include ipa-predicate.h\n+\t(condition, inline_param_summary, conditions, agg_position_info,\n+\tpredicate): Move to ipa-predicate.h\n+\t* ipa-predicate.c: New file.\n+\t* ipa-predicate.h: New file.\n+\n 2017-05-18  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* final.c (leaf_function_p): Check we are not in a sequence."}]}