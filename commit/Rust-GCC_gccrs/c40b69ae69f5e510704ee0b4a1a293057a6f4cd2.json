{"sha": "c40b69ae69f5e510704ee0b4a1a293057a6f4cd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQwYjY5YWU2OWY1ZTUxMDcwNGVlMGI0YTFhMjkzMDU3YTZmNGNkMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-03-30T17:32:06Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-03-30T17:32:06Z"}, "message": "compiler: implement Go 1 unsafe.Pointer conversion rules\n\nAny type whose underlying type is uintptr can be converted\nto unsafe.Pointer, and vice versa.\n\nFixes golang/go#10284.\n\nFrom-SVN: r221774", "tree": {"sha": "e319dd01e8bab96b8da54527fdd51675252ba7b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e319dd01e8bab96b8da54527fdd51675252ba7b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c40b69ae69f5e510704ee0b4a1a293057a6f4cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c40b69ae69f5e510704ee0b4a1a293057a6f4cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c40b69ae69f5e510704ee0b4a1a293057a6f4cd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c40b69ae69f5e510704ee0b4a1a293057a6f4cd2/comments", "author": null, "committer": null, "parents": [{"sha": "233b9db6fb3aef2ec39fd66c54ac064a7737732c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233b9db6fb3aef2ec39fd66c54ac064a7737732c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233b9db6fb3aef2ec39fd66c54ac064a7737732c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e93c6811d08f169eb04f0ab3ded05eadca69e8be", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c40b69ae69f5e510704ee0b4a1a293057a6f4cd2/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c40b69ae69f5e510704ee0b4a1a293057a6f4cd2/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=c40b69ae69f5e510704ee0b4a1a293057a6f4cd2", "patch": "@@ -772,16 +772,16 @@ Type::are_convertible(const Type* lhs, const Type* rhs, std::string* reason)\n     }\n \n   // An unsafe.Pointer type may be converted to any pointer type or to\n-  // uintptr, and vice-versa.\n+  // a type whose underlying type is uintptr, and vice-versa.\n   if (lhs->is_unsafe_pointer_type()\n       && (rhs->points_to() != NULL\n \t  || (rhs->integer_type() != NULL\n-\t      && rhs->forwarded() == Type::lookup_integer_type(\"uintptr\"))))\n+\t      && rhs->integer_type() == Type::lookup_integer_type(\"uintptr\")->real_type())))\n     return true;\n   if (rhs->is_unsafe_pointer_type()\n       && (lhs->points_to() != NULL\n \t  || (lhs->integer_type() != NULL\n-\t      && lhs->forwarded() == Type::lookup_integer_type(\"uintptr\"))))\n+\t      && lhs->integer_type() == Type::lookup_integer_type(\"uintptr\")->real_type())))\n     return true;\n \n   // Give a better error message."}]}