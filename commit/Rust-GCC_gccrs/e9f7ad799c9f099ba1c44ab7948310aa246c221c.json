{"sha": "e9f7ad799c9f099ba1c44ab7948310aa246c221c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlmN2FkNzk5YzlmMDk5YmExYzQ0YWI3OTQ4MzEwYWEyNDZjMjIxYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-12-07T10:43:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-12-07T10:43:38Z"}, "message": "re PR tree-optimization/46726 (x*x has different cost than pow(x,2) with -ffast-math)\n\n2010-12-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46726\n\t* tree-inline.c (estimate_num_insns): Special case pow (x, 2.0).\n\nFrom-SVN: r167531", "tree": {"sha": "4232b30bfdd925a7422000dd58f28e1a77d3495b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4232b30bfdd925a7422000dd58f28e1a77d3495b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9f7ad799c9f099ba1c44ab7948310aa246c221c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f7ad799c9f099ba1c44ab7948310aa246c221c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f7ad799c9f099ba1c44ab7948310aa246c221c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f7ad799c9f099ba1c44ab7948310aa246c221c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b238a9b8757b72cbac3cb24600b7230f8bdd12b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b238a9b8757b72cbac3cb24600b7230f8bdd12b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b238a9b8757b72cbac3cb24600b7230f8bdd12b"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "192d16ffcec6d8b4902ef46a5a95686f5979f396", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f7ad799c9f099ba1c44ab7948310aa246c221c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f7ad799c9f099ba1c44ab7948310aa246c221c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9f7ad799c9f099ba1c44ab7948310aa246c221c", "patch": "@@ -1,3 +1,8 @@\n+2010-12-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46726\n+\t* tree-inline.c (estimate_num_insns): Special case pow (x, 2.0).\n+\n 2010-12-07  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-math-opts.c (execute_optimize_widening_mul): Unlink"}, {"sha": "def733fe4669317de5ea5467a20e485dc18e366a", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f7ad799c9f099ba1c44ab7948310aa246c221c/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f7ad799c9f099ba1c44ab7948310aa246c221c/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=e9f7ad799c9f099ba1c44ab7948310aa246c221c", "patch": "@@ -3496,16 +3496,37 @@ estimate_num_insns (gimple stmt, eni_weights *weights)\n \t/* Do not special case builtins where we see the body.\n \t   This just confuse inliner.  */\n \tif (!decl || cgraph_node (decl)->analyzed)\n-\t  cost = weights->call_cost;\n+\t  ;\n \t/* For buitins that are likely expanded to nothing or\n \t   inlined do not account operand costs.  */\n \telse if (is_simple_builtin (decl))\n \t  return 0;\n \telse if (is_inexpensive_builtin (decl))\n \t  return weights->target_builtin_call_cost;\n-\telse\n-\t  cost = weights->call_cost;\n+\telse if (DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL)\n+\t  {\n+\t    /* We canonicalize x * x to pow (x, 2.0) with -ffast-math, so\n+\t       specialize the cheap expansion we do here.\n+\t       ???  This asks for a more general solution.  */\n+\t    switch (DECL_FUNCTION_CODE (decl))\n+\t      {\n+\t\tcase BUILT_IN_POW:\n+\t\tcase BUILT_IN_POWF:\n+\t\tcase BUILT_IN_POWL:\n+\t\t  if (TREE_CODE (gimple_call_arg (stmt, 1)) == REAL_CST\n+\t\t      && REAL_VALUES_EQUAL\n+\t\t\t   (TREE_REAL_CST (gimple_call_arg (stmt, 1)), dconst2))\n+\t\t    return estimate_operator_cost (MULT_EXPR, weights,\n+\t\t\t\t\t\t   gimple_call_arg (stmt, 0),\n+\t\t\t\t\t\t   gimple_call_arg (stmt, 0));\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  break;\n+\t      }\n+\t  }\n \n+\tcost = weights->call_cost;\n \tif (decl)\n \t  funtype = TREE_TYPE (decl);\n "}]}