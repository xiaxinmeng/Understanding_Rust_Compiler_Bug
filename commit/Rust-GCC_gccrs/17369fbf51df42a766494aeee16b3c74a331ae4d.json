{"sha": "17369fbf51df42a766494aeee16b3c74a331ae4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczNjlmYmY1MWRmNDJhNzY2NDk0YWVlZTE2YjNjNzRhMzMxYWU0ZA==", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2015-06-28T20:46:01Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-06-28T20:46:01Z"}, "message": "regrename.h (regrename_do_replace): Change to return bool.\n\n2015-06-28  Chung-Lin Tang <cltang@codesourcery.com>\n\t    Sandra Loosemore <sandra@codesourcery.com>\n\n\tgcc/\n\t* regrename.h (regrename_do_replace): Change to return bool.\n\t* regrename.c (rename_chains): Check return value of\n\tregname_do_replace.\n\t(regrename_do_replace): Re-validate the modified insns and\n\treturn bool status.\n\t* config/aarch64/cortex-a57-fma-steering.c (rename_single_chain):\n\tUpdate to match rename_chains changes.\n\t* config/c6x/c6x.c (try_rename_operands): Assert that\n\tregrename_do_replace returns true.\n\nCo-Authored-By: Sandra Loosemore <sandra@codesourcery.com>\n\nFrom-SVN: r225106", "tree": {"sha": "376b7bd32f48b41a9ab62d24a7d1a92fbe4e6588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/376b7bd32f48b41a9ab62d24a7d1a92fbe4e6588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17369fbf51df42a766494aeee16b3c74a331ae4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17369fbf51df42a766494aeee16b3c74a331ae4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17369fbf51df42a766494aeee16b3c74a331ae4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17369fbf51df42a766494aeee16b3c74a331ae4d/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2aee355b5a77c60e3c43294ee9469a35a5b95a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aee355b5a77c60e3c43294ee9469a35a5b95a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aee355b5a77c60e3c43294ee9469a35a5b95a9c"}], "stats": {"total": 77, "additions": 58, "deletions": 19}, "files": [{"sha": "39209f0c4d8ded7c33437ae86020d929073fcc16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17369fbf51df42a766494aeee16b3c74a331ae4d", "patch": "@@ -1,3 +1,16 @@\n+2015-06-28  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Sandra Loosemore <sandra@codesourcery.com>\n+\n+\t* regrename.h (regrename_do_replace): Change to return bool.\n+\t* regrename.c (rename_chains): Check return value of\n+\tregname_do_replace.\n+\t(regrename_do_replace): Re-validate the modified insns and\n+\treturn bool status.\n+\t* config/aarch64/cortex-a57-fma-steering.c (rename_single_chain):\n+\tUpdate to match rename_chains changes.\n+\t* config/c6x/c6x.c (try_rename_operands): Assert that\n+\tregrename_do_replace returns true.\n+\n 2015-06-27  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* print-tree.c (print_node) [TREE_VEC]: Print its length."}, {"sha": "14ef927a43c480f5cabd4a40889b6b95b0f952ac", "filename": "gcc/config/aarch64/cortex-a57-fma-steering.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fconfig%2Faarch64%2Fcortex-a57-fma-steering.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fconfig%2Faarch64%2Fcortex-a57-fma-steering.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fcortex-a57-fma-steering.c?ref=17369fbf51df42a766494aeee16b3c74a331ae4d", "patch": "@@ -289,11 +289,19 @@ rename_single_chain (du_head_p head, HARD_REG_SET *unavailable)\n       return false;\n     }\n \n-  if (dump_file)\n-    fprintf (dump_file, \", renamed as %s\\n\", reg_names[best_new_reg]);\n-\n-  regrename_do_replace (head, best_new_reg);\n-  df_set_regs_ever_live (best_new_reg, true);\n+  if (regrename_do_replace (head, best_new_reg))\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \", renamed as %s\\n\", reg_names[best_new_reg]);\n+      df_set_regs_ever_live (best_new_reg, true);\n+    }\n+  else\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \", renaming as %s failed\\n\",\n+\t\t reg_names[best_new_reg]);\n+      return false;\n+    }\n   return true;\n }\n "}, {"sha": "b76a268ddb40a575743f67980ebc3ecbe37771a7", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=17369fbf51df42a766494aeee16b3c74a331ae4d", "patch": "@@ -3516,7 +3516,7 @@ try_rename_operands (rtx_insn *head, rtx_insn *tail, unit_req_table reqs,\n   best_reg =\n     find_rename_reg (this_head, super_class, &unavailable, old_reg, true);\n \n-  regrename_do_replace (this_head, best_reg);\n+  gcc_assert (regrename_do_replace (this_head, best_reg));\n \n   count_unit_reqs (new_reqs, head, PREV_INSN (tail));\n   merge_unit_reqs (new_reqs);\n@@ -3529,7 +3529,7 @@ try_rename_operands (rtx_insn *head, rtx_insn *tail, unit_req_table reqs,\n \t       unit_req_imbalance (reqs), unit_req_imbalance (new_reqs));\n     }\n   if (unit_req_imbalance (new_reqs) > unit_req_imbalance (reqs))\n-    regrename_do_replace (this_head, old_reg);\n+    gcc_assert (regrename_do_replace (this_head, old_reg));\n   else\n     memcpy (reqs, new_reqs, sizeof (unit_req_table));\n "}, {"sha": "6c7d650ea836ed38c8af2fbd94c49bf1f34d4106", "filename": "gcc/regrename.c", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=17369fbf51df42a766494aeee16b3c74a331ae4d", "patch": "@@ -496,12 +496,20 @@ rename_chains (void)\n \t  continue;\n \t}\n \n-      if (dump_file)\n-\tfprintf (dump_file, \", renamed as %s\\n\", reg_names[best_new_reg]);\n-\n-      regrename_do_replace (this_head, best_new_reg);\n-      tick[best_new_reg] = ++this_tick;\n-      df_set_regs_ever_live (best_new_reg, true);\n+      if (regrename_do_replace (this_head, best_new_reg))\n+\t{\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \", renamed as %s\\n\", reg_names[best_new_reg]);\n+\t  tick[best_new_reg] = ++this_tick;\n+\t  df_set_regs_ever_live (best_new_reg, true);\n+\t}\n+      else\n+\t{\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \", renaming as %s failed\\n\",\n+\t\t     reg_names[best_new_reg]);\n+\t  tick[reg] = ++this_tick;\n+\t}\n     }\n }\n \n@@ -927,7 +935,13 @@ regrename_analyze (bitmap bb_mask)\n     bb->aux = NULL;\n }\n \n-void\n+/* Attempt to replace all uses of the register in the chain beginning with\n+   HEAD with REG.  Returns true on success and false if the replacement is\n+   rejected because the insns would not validate.  The latter can happen\n+   e.g. if a match_parallel predicate enforces restrictions on register\n+   numbering in its subpatterns.  */\n+\n+bool\n regrename_do_replace (struct du_head *head, int reg)\n {\n   struct du_chain *chain;\n@@ -941,22 +955,26 @@ regrename_do_replace (struct du_head *head, int reg)\n       int reg_ptr = REG_POINTER (*chain->loc);\n \n       if (DEBUG_INSN_P (chain->insn) && REGNO (*chain->loc) != base_regno)\n-\tINSN_VAR_LOCATION_LOC (chain->insn) = gen_rtx_UNKNOWN_VAR_LOC ();\n+\tvalidate_change (chain->insn, &(INSN_VAR_LOCATION_LOC (chain->insn)),\n+\t\t\t gen_rtx_UNKNOWN_VAR_LOC (), true);\n       else\n \t{\n-\t  *chain->loc = gen_raw_REG (GET_MODE (*chain->loc), reg);\n+\t  validate_change (chain->insn, chain->loc, \n+\t\t\t   gen_raw_REG (GET_MODE (*chain->loc), reg), true);\n \t  if (regno >= FIRST_PSEUDO_REGISTER)\n \t    ORIGINAL_REGNO (*chain->loc) = regno;\n \t  REG_ATTRS (*chain->loc) = attr;\n \t  REG_POINTER (*chain->loc) = reg_ptr;\n \t}\n-\n-      df_insn_rescan (chain->insn);\n     }\n \n+  if (!apply_change_group ())\n+    return false;\n+\n   mode = GET_MODE (*head->first->loc);\n   head->regno = reg;\n   head->nregs = hard_regno_nregs[reg][mode];\n+  return true;\n }\n \n "}, {"sha": "bbe156dbc4e865794730bd76a4fc6f632850c817", "filename": "gcc/regrename.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fregrename.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17369fbf51df42a766494aeee16b3c74a331ae4d/gcc%2Fregrename.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.h?ref=17369fbf51df42a766494aeee16b3c74a331ae4d", "patch": "@@ -91,6 +91,6 @@ extern void regrename_analyze (bitmap);\n extern du_head_p regrename_chain_from_id (unsigned int);\n extern int find_rename_reg (du_head_p, enum reg_class, HARD_REG_SET *, int,\n \t\t\t    bool);\n-extern void regrename_do_replace (du_head_p, int);\n+extern bool regrename_do_replace (du_head_p, int);\n \n #endif"}]}