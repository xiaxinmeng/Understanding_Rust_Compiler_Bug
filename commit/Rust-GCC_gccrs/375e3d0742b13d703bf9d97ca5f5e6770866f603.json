{"sha": "375e3d0742b13d703bf9d97ca5f5e6770866f603", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1ZTNkMDc0MmIxM2Q3MDNiZjlkOTdjYTVmNWU2NzcwODY2ZjYwMw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2012-08-02T00:34:26Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2012-08-02T00:34:26Z"}, "message": "re PR debug/52983 (internal compiler error: in df_uses_record, at df-scan.c:3243)\n\nPR debug/52983\n* valtrack.c (cleanup_auto_inc_dec): Implement unconditionally,\nfalling back to copy_rtx on non-autoinc machines.\n(propagate_for_debug_subst): Always use cleanup_auto_inc_dec.\n\nFrom-SVN: r190062", "tree": {"sha": "400b5c27620a72ea21ab7c9450076d0c1b8ac22e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/400b5c27620a72ea21ab7c9450076d0c1b8ac22e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375e3d0742b13d703bf9d97ca5f5e6770866f603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375e3d0742b13d703bf9d97ca5f5e6770866f603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375e3d0742b13d703bf9d97ca5f5e6770866f603", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375e3d0742b13d703bf9d97ca5f5e6770866f603/comments", "author": null, "committer": null, "parents": [{"sha": "08df6c0db1dbdeda1e22b16eb83c77ad05f8ba32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08df6c0db1dbdeda1e22b16eb83c77ad05f8ba32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08df6c0db1dbdeda1e22b16eb83c77ad05f8ba32"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "631f2eeb1c35d64bc49a7791df7dfa3355a552ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375e3d0742b13d703bf9d97ca5f5e6770866f603/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375e3d0742b13d703bf9d97ca5f5e6770866f603/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=375e3d0742b13d703bf9d97ca5f5e6770866f603", "patch": "@@ -1,3 +1,10 @@\n+2012-08-01  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/52983\n+\t* valtrack.c (cleanup_auto_inc_dec): Implement unconditionally,\n+\tfalling back to copy_rtx on non-autoinc machines.\n+\t(propagate_for_debug_subst): Always use cleanup_auto_inc_dec.\n+\n 2012-08-01  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/52983"}, {"sha": "9119cb96744f016e94ebeb6846897019452b088e", "filename": "gcc/valtrack.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375e3d0742b13d703bf9d97ca5f5e6770866f603/gcc%2Fvaltrack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375e3d0742b13d703bf9d97ca5f5e6770866f603/gcc%2Fvaltrack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvaltrack.c?ref=375e3d0742b13d703bf9d97ca5f5e6770866f603", "patch": "@@ -32,11 +32,11 @@ along with GCC; see the file COPYING3.  If not see\n /* Replace auto-increment addressing modes with explicit operations to access\n    the same addresses without modifying the corresponding registers.  */\n \n-#ifdef AUTO_INC_DEC\n static rtx\n cleanup_auto_inc_dec (rtx src, enum machine_mode mem_mode ATTRIBUTE_UNUSED)\n {\n   rtx x = src;\n+#ifdef AUTO_INC_DEC\n   const RTX_CODE code = GET_CODE (x);\n   int i;\n   const char *fmt;\n@@ -117,9 +117,12 @@ cleanup_auto_inc_dec (rtx src, enum machine_mode mem_mode ATTRIBUTE_UNUSED)\n \t    = cleanup_auto_inc_dec (XVECEXP (src, i, j), mem_mode);\n       }\n \n+#else /* !AUTO_INC_DEC */\n+  x = copy_rtx (x);\n+#endif /* !AUTO_INC_DEC */\n+\n   return x;\n }\n-#endif\n \n /* Auxiliary data structure for propagate_for_debug_stmt.  */\n \n@@ -142,11 +145,7 @@ propagate_for_debug_subst (rtx from, const_rtx old_rtx, void *data)\n   if (!pair->adjusted)\n     {\n       pair->adjusted = true;\n-#ifdef AUTO_INC_DEC\n       pair->to = cleanup_auto_inc_dec (pair->to, VOIDmode);\n-#else\n-      pair->to = copy_rtx (pair->to);\n-#endif\n       pair->to = make_compound_operation (pair->to, SET);\n       return pair->to;\n     }"}]}