{"sha": "e4ae405a3508cd881d708465fd9fd167a7cc1c28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRhZTQwNWEzNTA4Y2Q4ODFkNzA4NDY1ZmQ5ZmQxNjdhN2NjMWMyOA==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2008-05-20T20:24:33Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-05-20T20:24:33Z"}, "message": "re PR ada/30740 (Improper semantics in gnat's compilation of certain expressions involving modular arithmetic)\n\n    gcc/testsuite/\n\tPR ada/30740\n\t* gnat.dg/modular.adb: New test.\n\nFrom-SVN: r135675", "tree": {"sha": "494f8d2e83a30da4b21430267af318af77f1fbf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/494f8d2e83a30da4b21430267af318af77f1fbf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4ae405a3508cd881d708465fd9fd167a7cc1c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ae405a3508cd881d708465fd9fd167a7cc1c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ae405a3508cd881d708465fd9fd167a7cc1c28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ae405a3508cd881d708465fd9fd167a7cc1c28/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9857228c4ca42e03fb12177065a14b5dadaf7e00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9857228c4ca42e03fb12177065a14b5dadaf7e00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9857228c4ca42e03fb12177065a14b5dadaf7e00"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "c49408661e6715a24493750c92d22d7c55b58eea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae405a3508cd881d708465fd9fd167a7cc1c28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae405a3508cd881d708465fd9fd167a7cc1c28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4ae405a3508cd881d708465fd9fd167a7cc1c28", "patch": "@@ -1,3 +1,8 @@\n+2008-05-20  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\tPR ada/30740\n+\t* gnat.dg/modular.adb: New test.\n+\n 2008-05-20  Jan Sjodin  <jan.sjodin@amd.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n "}, {"sha": "1eff33327085d0548dd8b971382e73c1633976ac", "filename": "gcc/testsuite/gnat.dg/modular.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ae405a3508cd881d708465fd9fd167a7cc1c28/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ae405a3508cd881d708465fd9fd167a7cc1c28/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular.adb?ref=e4ae405a3508cd881d708465fd9fd167a7cc1c28", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do run }\n+with Ada.Text_IO;\n+procedure Modular is\n+   type T1 is mod 9;\n+   package T1_IO is new Ada.Text_IO.Modular_IO(T1);\n+   X: T1 := 8;\n+   J1: constant := 5;\n+begin\n+   for J2 in 5..5 loop\n+      pragma Assert(X*(2**J1) = X*(2**J2));\n+      if X*(2**J1) /= X*(2**J2) then\n+         Ada.Text_IO.Put_Line(\"Failed\");\n+         raise Program_Error;\n+      end if;\n+   end loop;\n+end Modular;"}]}