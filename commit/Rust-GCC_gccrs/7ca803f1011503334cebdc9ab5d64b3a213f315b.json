{"sha": "7ca803f1011503334cebdc9ab5d64b3a213f315b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NhODAzZjEwMTE1MDMzMzRjZWJkYzlhYjVkNjRiM2EyMTNmMzE1Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-08T15:58:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2020-01-08T15:58:20Z"}, "message": "re PR target/93174 (ICE building glibc __sha512_process_block for i686)\n\n\tPR target/93174\n\t* config/i386/i386.md (addcarry<mode>_0): Use nonimmediate_operand\n\tpredicate for output operand instead of register_operand.\n\t(addcarry<mode>, addcarry<mode>_1): Likewise.  Add alternative with\n\tmemory destination and non-memory operands[2].\n\n\t* gcc.c-torture/compile/pr93174.c: New test.\n\nFrom-SVN: r280011", "tree": {"sha": "04a8baca190831e65feec3eb14dd9f15a2f4e772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04a8baca190831e65feec3eb14dd9f15a2f4e772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ca803f1011503334cebdc9ab5d64b3a213f315b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca803f1011503334cebdc9ab5d64b3a213f315b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca803f1011503334cebdc9ab5d64b3a213f315b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca803f1011503334cebdc9ab5d64b3a213f315b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80d803aefb82f336abd3ff421c1a7edcbd24c9ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d803aefb82f336abd3ff421c1a7edcbd24c9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d803aefb82f336abd3ff421c1a7edcbd24c9ae"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "cb1f7cb6dc31037197a9e13ba4399404b2c41c40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ca803f1011503334cebdc9ab5d64b3a213f315b", "patch": "@@ -1,3 +1,11 @@\n+2020-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93174\n+\t* config/i386/i386.md (addcarry<mode>_0): Use nonimmediate_operand\n+\tpredicate for output operand instead of register_operand.\n+\t(addcarry<mode>, addcarry<mode>_1): Likewise.  Add alternative with\n+\tmemory destination and non-memory operands[2].\n+\n 2020-01-08  Martin Liska  <mliska@suse.cz>\n \n \t* cgraph.c (cgraph_node::dump): Use ::dump_name or"}, {"sha": "3daf7205d91ad81642cc6dcb19ec8ebb8231d386", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7ca803f1011503334cebdc9ab5d64b3a213f315b", "patch": "@@ -6786,13 +6786,13 @@\n \t      (plus:SWI48\n \t\t(match_operator:SWI48 5 \"ix86_carry_flag_operator\"\n \t\t  [(match_operand 3 \"flags_reg_operand\") (const_int 0)])\n-\t\t(match_operand:SWI48 1 \"nonimmediate_operand\" \"%0\"))\n-\t      (match_operand:SWI48 2 \"nonimmediate_operand\" \"rm\")))\n+\t\t(match_operand:SWI48 1 \"nonimmediate_operand\" \"%0,0\"))\n+\t      (match_operand:SWI48 2 \"nonimmediate_operand\" \"r,rm\")))\n \t  (plus:<DWI>\n \t    (zero_extend:<DWI> (match_dup 2))\n \t    (match_operator:<DWI> 4 \"ix86_carry_flag_operator\"\n \t      [(match_dup 3) (const_int 0)]))))\n-   (set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+   (set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(plus:SWI48 (plus:SWI48 (match_op_dup 5\n \t\t\t\t [(match_dup 3) (const_int 0)])\n \t\t\t\t(match_dup 1))\n@@ -6812,7 +6812,7 @@\n \t       (match_operand:SWI48 1 \"nonimmediate_operand\")\n \t       (match_operand:SWI48 2 \"x86_64_general_operand\"))\n \t     (match_dup 1)))\n-      (set (match_operand:SWI48 0 \"register_operand\")\n+      (set (match_operand:SWI48 0 \"nonimmediate_operand\")\n \t   (plus:SWI48 (match_dup 1) (match_dup 2)))])]\n   \"ix86_binary_operator_ok (PLUS, <MODE>mode, operands)\")\n \n@@ -6830,7 +6830,7 @@\n \t    (match_operand:<DWI> 6 \"const_scalar_int_operand\" \"\")\n \t    (match_operator:<DWI> 4 \"ix86_carry_flag_operator\"\n \t      [(match_dup 3) (const_int 0)]))))\n-   (set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+   (set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=rm\")\n \t(plus:SWI48 (plus:SWI48 (match_op_dup 5\n \t\t\t\t [(match_dup 3) (const_int 0)])\n \t\t\t\t(match_dup 1))"}, {"sha": "88708582afb2f166a590631456506b97c0a6c3c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ca803f1011503334cebdc9ab5d64b3a213f315b", "patch": "@@ -1,3 +1,8 @@\n+2020-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93174\n+\t* gcc.c-torture/compile/pr93174.c: New test.\n+\n 2020-01-08  Olivier Hainque  <hainque@adacore.com>\n             Alexandre Oliva  <oliva@adacore.com>\n "}, {"sha": "653a470ebfc2b8602abdfaf3450c83040debb88c", "filename": "gcc/testsuite/gcc.c-torture/compile/pr93174.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93174.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca803f1011503334cebdc9ab5d64b3a213f315b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93174.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93174.c?ref=7ca803f1011503334cebdc9ab5d64b3a213f315b", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/93174 */\n+\n+unsigned long long a[2];\n+void bar (void);\n+\n+void\n+foo (int c)\n+{\n+  int e = c >> 2;\n+  a[0] += c;\n+  a[1] = a[0] < c;\n+  while (e--)\n+    bar ();\n+}"}]}