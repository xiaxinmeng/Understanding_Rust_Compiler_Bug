{"sha": "2892e2f70287f961e3bac990b926232cc2a5b123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg5MmUyZjcwMjg3Zjk2MWUzYmFjOTkwYjkyNjIzMmNjMmE1YjEyMw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-22T00:18:42Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-03-26T15:14:12Z"}, "message": "d: Add windows support for D compiler [PR91595]\n\ngcc/ChangeLog:\n\n\tPR d/91595\n\t* config.gcc (*-*-cygwin*): Add winnt-d.o\n\t(*-*-mingw*): Likewise.\n\t* config/i386/cygwin.h (EXTRA_TARGET_D_OS_VERSIONS): New macro.\n\t* config/i386/mingw32.h (EXTRA_TARGET_D_OS_VERSIONS): Likewise.\n\t* config/i386/t-cygming: Add winnt-d.o.\n\t* config/i386/winnt-d.c: New file.", "tree": {"sha": "977172cf3f5d6d3f7fe59071424717fba0968b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/977172cf3f5d6d3f7fe59071424717fba0968b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2892e2f70287f961e3bac990b926232cc2a5b123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2892e2f70287f961e3bac990b926232cc2a5b123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2892e2f70287f961e3bac990b926232cc2a5b123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2892e2f70287f961e3bac990b926232cc2a5b123/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74ed3fc27966b07d701e1dead1cc37b53af227b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ed3fc27966b07d701e1dead1cc37b53af227b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ed3fc27966b07d701e1dead1cc37b53af227b4"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "997a9f61a5ce62ab0d481c861c7b8e2f221251f3", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=2892e2f70287f961e3bac990b926232cc2a5b123", "patch": "@@ -2123,6 +2123,8 @@ i[34567]86-*-cygwin*)\n \textra_objs=\"${extra_objs} winnt.o winnt-stubs.o\"\n \tc_target_objs=\"${c_target_objs} msformat-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} winnt-cxx.o msformat-c.o\"\n+\td_target_objs=\"${d_target_objs} winnt-d.o\"\n+\ttarget_has_targetdm=\"yes\"\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \tfi\n@@ -2139,6 +2141,8 @@ x86_64-*-cygwin*)\n \textra_objs=\"${extra_objs} winnt.o winnt-stubs.o\"\n \tc_target_objs=\"${c_target_objs} msformat-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} winnt-cxx.o msformat-c.o\"\n+\td_target_objs=\"${d_target_objs} winnt-d.o\"\n+\ttarget_has_targetdm=\"yes\"\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \tfi\n@@ -2151,7 +2155,9 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \txm_file=i386/xm-mingw32.h\n \tc_target_objs=\"${c_target_objs} winnt-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} winnt-c.o\"\n+\td_target_objs=\"${d_target_objs} winnt-d.o\"\n \ttarget_has_targetcm=\"yes\"\n+\ttarget_has_targetdm=\"yes\"\n \tcase ${target} in\n \t\tx86_64-*-* | *-w64-*)\n \t\t\tneed_64bit_isa=yes"}, {"sha": "71fb6135c2c6463d6c001df1a7d4d9e5eb84c5c4", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=2892e2f70287f961e3bac990b926232cc2a5b123", "patch": "@@ -29,6 +29,15 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+#define EXTRA_TARGET_D_OS_VERSIONS()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      builtin_version (\"Cygwin\");\t\t\t\t\\\n+      builtin_version (\"Posix\");\t\t\t\t\\\n+      builtin_version (\"CRuntime_Newlib\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n #undef CPP_SPEC\n #define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n   %{!ansi:-Dunix} \\"}, {"sha": "36e7bae5e1b8db85d4f94a051fa97077b8828a30", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=2892e2f70287f961e3bac990b926232cc2a5b123", "patch": "@@ -53,6 +53,18 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+#define EXTRA_TARGET_D_OS_VERSIONS()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      builtin_version (\"MinGW\");\t\t\t\t\\\n+      if (TARGET_64BIT && ix86_abi == MS_ABI)\t\t\t\\\n+\tbuiltin_version (\"Win64\");\t\t\t\t\\\n+      else if (!TARGET_64BIT)\t\t\t\t\t\\\n+\tbuiltin_version (\"Win32\");\t\t\t\t\\\n+      builtin_version (\"CRuntime_Microsoft\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n #ifndef TARGET_USE_PTHREAD_BY_DEFAULT\n #define SPEC_PTHREAD1 \"pthread\"\n #define SPEC_PTHREAD2 \"!no-pthread\""}, {"sha": "38e2f0be237dcba29c5cbb84c1c1d26d23d95c8f", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=2892e2f70287f961e3bac990b926232cc2a5b123", "patch": "@@ -39,6 +39,10 @@ winnt-stubs.o: $(srcdir)/config/i386/winnt-stubs.c $(CONFIG_H) $(SYSTEM_H) coret\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/winnt-stubs.c\n \n+winnt-d.o: $(srcdir)/config/i386/winnt-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n msformat-c.o: $(srcdir)/config/i386/msformat-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n   $(TM_P_H) $(HASHTAB_H) $(GGC_H)"}, {"sha": "8a6b9c57d8df1f7223dc9f1addc688280d0d415d", "filename": "gcc/config/i386/winnt-d.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Fwinnt-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2892e2f70287f961e3bac990b926232cc2a5b123/gcc%2Fconfig%2Fi386%2Fwinnt-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-d.c?ref=2892e2f70287f961e3bac990b926232cc2a5b123", "patch": "@@ -0,0 +1,56 @@\n+/* Windows support needed only by D front-end.\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#define IN_TARGET_CODE 1\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"target.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+#include \"tm_p.h\"\n+\n+/* Implement TARGET_D_OS_VERSIONS for Windows targets.  */\n+\n+static void\n+winnt_d_os_builtins (void)\n+{\n+  d_add_builtin_version (\"Windows\");\n+\n+#define builtin_version(TXT) d_add_builtin_version (TXT)\n+\n+#ifdef EXTRA_TARGET_D_OS_VERSIONS\n+  EXTRA_TARGET_D_OS_VERSIONS ();\n+#endif\n+}\n+\n+#undef TARGET_D_OS_VERSIONS\n+#define TARGET_D_OS_VERSIONS winnt_d_os_builtins\n+\n+/* Define TARGET_D_MINFO_SECTION for Windows targets.  */\n+\n+#undef TARGET_D_MINFO_SECTION\n+#define TARGET_D_MINFO_SECTION \"minfo\"\n+\n+#undef TARGET_D_MINFO_START_NAME\n+#define TARGET_D_MINFO_START_NAME \"__start_minfo\"\n+\n+#undef TARGET_D_MINFO_END_NAME\n+#define TARGET_D_MINFO_END_NAME \"__stop_minfo\"\n+\n+struct gcc_targetdm targetdm = TARGETDM_INITIALIZER;"}]}