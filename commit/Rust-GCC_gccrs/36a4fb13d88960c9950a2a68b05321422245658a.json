{"sha": "36a4fb13d88960c9950a2a68b05321422245658a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZhNGZiMTNkODg5NjBjOTk1MGEyYTY4YjA1MzIxNDIyMjQ1NjU4YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-03-27T10:01:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-03-27T10:01:46Z"}, "message": "re PR testsuite/84004 (gcc.dg/vect/vect-95.c XPASSes)\n\n2018-03-27  Richard Biener  <rguenther@suse.de>\n\n\tPR testsuite/84004\n\t* gcc.dg/vect/vect-95.c: Never expect the loop to be peeled for\n\talignment.\n\nFrom-SVN: r258872", "tree": {"sha": "ec8e2e82156243753bdfe742135e6a671b964341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec8e2e82156243753bdfe742135e6a671b964341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36a4fb13d88960c9950a2a68b05321422245658a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a4fb13d88960c9950a2a68b05321422245658a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36a4fb13d88960c9950a2a68b05321422245658a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a4fb13d88960c9950a2a68b05321422245658a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b39036d2348b5a9aa3fb57eccb2fc0b080465759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b39036d2348b5a9aa3fb57eccb2fc0b080465759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b39036d2348b5a9aa3fb57eccb2fc0b080465759"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "be30a45ebe807bb25051bf4471b72d59b5e1687a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a4fb13d88960c9950a2a68b05321422245658a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a4fb13d88960c9950a2a68b05321422245658a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36a4fb13d88960c9950a2a68b05321422245658a", "patch": "@@ -1,3 +1,9 @@\n+2018-03-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/84004\n+\t* gcc.dg/vect/vect-95.c: Never expect the loop to be peeled for\n+\talignment.\n+\n 2018-03-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "6639213778e96a0e0d819cb7df875a24e828e7bb", "filename": "gcc/testsuite/gcc.dg/vect/vect-95.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a4fb13d88960c9950a2a68b05321422245658a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-95.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a4fb13d88960c9950a2a68b05321422245658a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-95.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-95.c?ref=36a4fb13d88960c9950a2a68b05321422245658a", "patch": "@@ -56,7 +56,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail {vect_element_align} } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n \n /* For targets that support unaligned loads we version for the two unaligned \n    stores and generate misaligned accesses for the loads. For targets that "}]}