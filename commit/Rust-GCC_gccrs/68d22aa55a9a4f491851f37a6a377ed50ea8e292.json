{"sha": "68d22aa55a9a4f491851f37a6a377ed50ea8e292", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhkMjJhYTU1YTlhNGY0OTE4NTFmMzdhNmEzNzdlZDUwZWE4ZTI5Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-04T03:03:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-04T03:03:00Z"}, "message": "ia64.c (spill_xfmode_operand): Use assign_stack_temp instead of gen_mem_addressof.\n\n        * config/ia64/ia64.c (spill_xfmode_operand): Use assign_stack_temp\n        instead of gen_mem_addressof.\n        * config/ia64/ia64.md (movxf): Use assign_stack_temp to handle\n        TImode output register.\n\nFrom-SVN: r84071", "tree": {"sha": "73a30a6dcffb59862e4d2223eb5401f1705817cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73a30a6dcffb59862e4d2223eb5401f1705817cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68d22aa55a9a4f491851f37a6a377ed50ea8e292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d22aa55a9a4f491851f37a6a377ed50ea8e292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d22aa55a9a4f491851f37a6a377ed50ea8e292", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d22aa55a9a4f491851f37a6a377ed50ea8e292/comments", "author": null, "committer": null, "parents": [{"sha": "bdecd3343c71b1edce5f7069f63979d26e1b9f5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdecd3343c71b1edce5f7069f63979d26e1b9f5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdecd3343c71b1edce5f7069f63979d26e1b9f5e"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "cf04490f85537751e59d3ba2902bc582021452b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d22aa55a9a4f491851f37a6a377ed50ea8e292/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d22aa55a9a4f491851f37a6a377ed50ea8e292/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68d22aa55a9a4f491851f37a6a377ed50ea8e292", "patch": "@@ -1,3 +1,10 @@\n+2004-07-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.c (spill_xfmode_operand): Use assign_stack_temp\n+\tinstead of gen_mem_addressof.\n+\t* config/ia64/ia64.md (movxf): Use assign_stack_temp to handle\n+\tTImode output register.\n+\n 2004-07-03  Richard Henderson  <rth@redhat.com>\n \n \tPR tree-optimization/16341"}, {"sha": "90d4a1f9302096fca8df6a16e4a22355895a181b", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d22aa55a9a4f491851f37a6a377ed50ea8e292/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d22aa55a9a4f491851f37a6a377ed50ea8e292/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=68d22aa55a9a4f491851f37a6a377ed50ea8e292", "patch": "@@ -1640,17 +1640,16 @@ spill_xfmode_operand (rtx in, int force)\n       && GET_MODE (SUBREG_REG (in)) == TImode\n       && GET_CODE (SUBREG_REG (in)) == REG)\n     {\n-      rtx mem = gen_mem_addressof (SUBREG_REG (in), NULL_TREE, /*rescan=*/true);\n-      return gen_rtx_MEM (XFmode, copy_to_reg (XEXP (mem, 0)));\n+      rtx memt = assign_stack_temp (TImode, 16, 0);\n+      emit_move_insn (memt, SUBREG_REG (in));\n+      return adjust_address (memt, XFmode, 0);\n     }\n   else if (force && GET_CODE (in) == REG)\n     {\n-      rtx mem = gen_mem_addressof (in, NULL_TREE, /*rescan=*/true);\n-      return gen_rtx_MEM (XFmode, copy_to_reg (XEXP (mem, 0)));\n+      rtx memx = assign_stack_temp (XFmode, 16, 0);\n+      emit_move_insn (memx, in);\n+      return memx;\n     }\n-  else if (GET_CODE (in) == MEM\n-\t   && GET_CODE (XEXP (in, 0)) == ADDRESSOF)\n-    return change_address (in, XFmode, copy_to_reg (XEXP (in, 0)));\n   else\n     return in;\n }"}, {"sha": "08a6d6c059cd5c742d005546a004b63fa21989e6", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d22aa55a9a4f491851f37a6a377ed50ea8e292/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d22aa55a9a4f491851f37a6a377ed50ea8e292/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=68d22aa55a9a4f491851f37a6a377ed50ea8e292", "patch": "@@ -746,9 +746,25 @@\n \n   if (! reload_in_progress && ! reload_completed)\n     {\n-      operands[0] = spill_xfmode_operand (operands[0], 0);\n       operands[1] = spill_xfmode_operand (operands[1], 0);\n \n+      if (GET_MODE (op0) == TImode && GET_CODE (op0) == REG)\n+\t{\n+\t  rtx memt, memx, in = operands[1];\n+\t  if (CONSTANT_P (in))\n+\t    in = validize_mem (force_const_mem (XFmode, in));\n+\t  if (GET_CODE (in) == MEM)\n+\t    memt = adjust_address (in, TImode, 0);\n+\t  else\n+\t    {\n+\t      memt = assign_stack_temp (TImode, 16, 0);\n+\t      memx = adjust_address (memt, XFmode, 0);\n+\t      emit_move_insn (memx, in);\n+\t    }\n+\t  emit_move_insn (op0, memt);\n+\t  DONE;\n+\t}\n+\n       if (! ia64_move_ok (operands[0], operands[1]))\n \toperands[1] = force_reg (XFmode, operands[1]);\n     }"}]}