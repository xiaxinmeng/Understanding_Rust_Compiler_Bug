{"sha": "4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ5Y2ZjN2IwNWIwZTJiY2E0OWQ0YTE0MTQ3ZTdmNDZjZDhkN2MyYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-15T09:12:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-15T09:12:16Z"}, "message": "(expand_field_assignment): Take SUBREG_WORD into account when have STRICT_LOW_PART.\n\n(expand_field_assignment): Take SUBREG_WORD into account when have\nSTRICT_LOW_PART.\n(make_extraction): Make a STRICT_LOW_PART at any low-order word.\n\nFrom-SVN: r11775", "tree": {"sha": "8ffc59dd5516d6775b3aec8ad56af9f42b4fd20a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ffc59dd5516d6775b3aec8ad56af9f42b4fd20a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a/comments", "author": null, "committer": null, "parents": [{"sha": "cf4403481dd67ecec1f1faabd8492421d3680a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf4403481dd67ecec1f1faabd8492421d3680a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf4403481dd67ecec1f1faabd8492421d3680a76"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "cf5ba4a1ff84aa27f85fdcd7d9e4226a19226c23", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4d9cfc7b05b0e2bca49d4a14147e7f46cd8d7c2a", "patch": "@@ -4957,7 +4957,7 @@ expand_field_assignment (x)\n \t{\n \t  inner = SUBREG_REG (XEXP (SET_DEST (x), 0));\n \t  len = GET_MODE_BITSIZE (GET_MODE (XEXP (SET_DEST (x), 0)));\n-\t  pos = const0_rtx;\n+\t  pos = GEN_INT (BITS_PER_WORD * SUBREG_WORD (XEXP (SET_DEST (x), 0)));\n \t}\n       else if (GET_CODE (SET_DEST (x)) == ZERO_EXTRACT\n \t       && GET_CODE (XEXP (SET_DEST (x), 1)) == CONST_INT)\n@@ -5133,7 +5133,8 @@ make_extraction (mode, inner, pos, pos_rtx, len,\n \n   if (tmode != BLKmode\n       && ! (spans_byte && inner_mode != tmode)\n-      && ((pos_rtx == 0 && pos == 0 && GET_CODE (inner) != MEM\n+      && ((pos_rtx == 0 && (pos % BITS_PER_WORD) == 0\n+\t   && GET_CODE (inner) != MEM\n \t   && (! in_dest\n \t       || (GET_CODE (inner) == REG\n \t\t   && (movstrict_optab->handlers[(int) tmode].insn_code\n@@ -5153,8 +5154,8 @@ make_extraction (mode, inner, pos, pos_rtx, len,\n \t field.  If the original and current mode are the same, we need not\n \t adjust the offset.  Otherwise, we do if bytes big endian.  \n \n-\t If INNER is not a MEM, get a piece consisting of the just the field\n-\t of interest (in this case POS must be 0).  */\n+\t If INNER is not a MEM, get a piece consisting of just the field\n+\t of interest (in this case POS % BITS_PER_WORD must be 0).  */\n \n       if (GET_CODE (inner) == MEM)\n \t{\n@@ -5178,10 +5179,11 @@ make_extraction (mode, inner, pos, pos_rtx, len,\n \t    new = gen_rtx (SUBREG, tmode, inner,\n \t\t\t   (WORDS_BIG_ENDIAN\n \t\t\t    && GET_MODE_SIZE (inner_mode) > UNITS_PER_WORD\n-\t\t\t    ? ((GET_MODE_SIZE (inner_mode)\n-\t\t\t\t- GET_MODE_SIZE (tmode))\n-\t\t\t       / UNITS_PER_WORD)\n-\t\t\t    : 0));\n+\t\t\t    ? (((GET_MODE_SIZE (inner_mode)\n+\t\t\t\t - GET_MODE_SIZE (tmode))\n+\t\t\t\t/ UNITS_PER_WORD)\n+\t\t\t       - pos / BITS_PER_WORD)\n+\t\t\t    : pos / BITS_PER_WORD));\n \t  else\n \t    new = inner;\n \t}"}]}