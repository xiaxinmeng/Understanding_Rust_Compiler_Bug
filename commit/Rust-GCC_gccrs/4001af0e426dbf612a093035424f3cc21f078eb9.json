{"sha": "4001af0e426dbf612a093035424f3cc21f078eb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwMWFmMGU0MjZkYmY2MTJhMDkzMDM1NDI0ZjNjYzIxZjA3OGViOQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2001-12-27T17:59:21Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-12-27T17:59:21Z"}, "message": "linux64.h (ASM_DECLARE_FUNCTION_NAME): Simplify.\n\n2001-12-27  Alan Modra  <amodra@bigpond.net.au>\n            David Edelsohn  <edelsohn@gnu.org>\n\n        * config/rs6000/linux64.h (ASM_DECLARE_FUNCTION_NAME): Simplify.\n\nCo-Authored-By: David Edelsohn <edelsohn@gnu.org>\n\nFrom-SVN: r48330", "tree": {"sha": "857436d2e080b3bc396efe2908bf55048a65fccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/857436d2e080b3bc396efe2908bf55048a65fccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4001af0e426dbf612a093035424f3cc21f078eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4001af0e426dbf612a093035424f3cc21f078eb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4001af0e426dbf612a093035424f3cc21f078eb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4001af0e426dbf612a093035424f3cc21f078eb9/comments", "author": null, "committer": null, "parents": [{"sha": "3db83e3261db251ac8a80391bce64e43263bdf5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db83e3261db251ac8a80391bce64e43263bdf5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db83e3261db251ac8a80391bce64e43263bdf5f"}], "stats": {"total": 174, "additions": 98, "deletions": 76}, "files": [{"sha": "e42d64be1ffa45bd9443bd8771322c65ffbc4f63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4001af0e426dbf612a093035424f3cc21f078eb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4001af0e426dbf612a093035424f3cc21f078eb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4001af0e426dbf612a093035424f3cc21f078eb9", "patch": "@@ -1,3 +1,8 @@\n+2001-12-27  Alan Modra  <amodra@bigpond.net.au>\n+\t    David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/linux64.h (ASM_DECLARE_FUNCTION_NAME): Simplify.\n+\n 2001-12-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* toplev.c (independent_decode_option): Re-add -aux-info option"}, {"sha": "d014afe3bd54ad3168d34e533f2dff59ed958103", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 93, "deletions": 76, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4001af0e426dbf612a093035424f3cc21f078eb9/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4001af0e426dbf612a093035424f3cc21f078eb9/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=4001af0e426dbf612a093035424f3cc21f078eb9", "patch": "@@ -24,11 +24,43 @@ Boston, MA 02111-1307, USA.  */\n #undef  DEFAULT_ABI\n #define DEFAULT_ABI ABI_AIX\n \n-#undef  TARGET_AIX\n+#undef TARGET_AIX\n #define TARGET_AIX 1\n \n-#undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_POWERPC | MASK_POWERPC64 | MASK_64BIT | MASK_NEW_MNEMONICS)\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT \\\n+  (MASK_POWERPC | MASK_POWERPC64 | MASK_64BIT | MASK_NEW_MNEMONICS)\n+\n+#undef  CPP_DEFAULT_SPEC\n+#define CPP_DEFAULT_SPEC \"-D_ARCH_PPC64\"\n+\n+#undef  ASM_DEFAULT_SPEC\n+#define ASM_DEFAULT_SPEC \"-mppc64\"\n+\n+/* 64-bit PowerPC Linux always has a TOC.  */\n+#undef  TARGET_NO_TOC\n+#define TARGET_NO_TOC\t\t0\n+#undef  TARGET_TOC\n+#define\tTARGET_TOC\t\t1\n+\n+/* We use glibc _mcount for profiling.  */\n+#define NO_PROFILE_COUNTERS 1\n+#undef  PROFILE_BEFORE_PROLOGUE\n+\n+/* Define this for kernel profiling, which just saves LR then calls\n+   _mcount without worrying about arg saves.  The idea is to change\n+   the function prologue as little as possible as it isn't easy to\n+   account for arg save/restore code added just for _mcount.  */\n+/* #define PROFILE_KERNEL 1 */\n+#if PROFILE_KERNEL\n+#define PROFILE_BEFORE_PROLOGUE 1\n+#undef  PROFILE_HOOK\n+#else\n+#define PROFILE_HOOK(LABEL) output_profile_hook (LABEL)\n+#endif\n+\n+/* We don't need to generate entries in .fixup.  */\n+#undef RELOCATABLE_NEEDS_FIXUP\n \n #define USER_LABEL_PREFIX  \"\"\n \n@@ -59,12 +91,6 @@ Boston, MA 02111-1307, USA.  */\n #undef  FP_SAVE_INLINE\n #define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) == 62 || (FIRST_REG) == 63)\n \n-/* 64-bit PowerPC Linux always has a TOC.  */\n-#undef  TARGET_NO_TOC\n-#define TARGET_NO_TOC\t\t0\n-#undef  TARGET_TOC\n-#define\tTARGET_TOC\t\t1\n-\n /* 64-bit PowerPC Linux always has GPR13 fixed.  */\n #define FIXED_R13\t\t1\n \n@@ -75,22 +101,20 @@ Boston, MA 02111-1307, USA.  */\n    So we have to squirrel it away with this.  */\n #define SETUP_FRAME_ADDRESSES() rs6000_aix_emit_builtin_unwind_init ()\n \n-#define PROFILE_HOOK(LABEL)   output_profile_hook (LABEL)\n-\n /* Don't assume anything about the header files.  */\n #define NO_IMPLICIT_EXTERN_C\n \n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n \n-#undef CPP_PREDEFINES\n+#undef  CPP_PREDEFINES\n #define CPP_PREDEFINES \\\n  \"-D_PPC_ -D__PPC__ -D_PPC64_ -D__PPC64__ -D__powerpc__ -D__powerpc64__ \\\n   -D_PIC_ -D__PIC__ -D_BIG_ENDIAN -D__BIG_ENDIAN__ -D__ELF__ \\\n   -D__LONG_MAX__=9223372036854775807L \\\n   -Acpu=powerpc64 -Amachine=powerpc64\"\n \n-#undef\tCPP_OS_DEFAULT_SPEC\n+#undef  CPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux)\"\n \n /* The GNU C++ standard library currently requires _GNU_SOURCE being\n@@ -102,10 +126,10 @@ Boston, MA 02111-1307, USA.  */\n #undef  LINK_SHLIB_SPEC\n #define LINK_SHLIB_SPEC \"%{shared:-shared} %{!shared: %{static:-static}}\"\n \n-#undef\tLIB_DEFAULT_SPEC\n+#undef  LIB_DEFAULT_SPEC\n #define LIB_DEFAULT_SPEC \"%(lib_linux)\"\n \n-#undef\tSTARTFILE_DEFAULT_SPEC\n+#undef  STARTFILE_DEFAULT_SPEC\n #define STARTFILE_DEFAULT_SPEC \"%(startfile_linux)\"\n \n #undef\tENDFILE_DEFAULT_SPEC\n@@ -126,7 +150,7 @@ Boston, MA 02111-1307, USA.  */\n #define TOC_SECTION_ASM_OP \"\\t.section\\t\\\".toc\\\",\\\"aw\\\"\"\n \n #undef  MINIMAL_TOC_SECTION_ASM_OP\n-#define MINIMAL_TOC_SECTION_ASM_OP \"\\t.section\\t\\\".toc1\\\",\\\"aw\\\"\\n\\t.align 3\"\n+#define MINIMAL_TOC_SECTION_ASM_OP \"\\t.section\\t\\\".toc1\\\",\\\"aw\\\"\"\n \n #undef  TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (PowerPC64 GNU/Linux)\");\n@@ -156,7 +180,7 @@ Boston, MA 02111-1307, USA.  */\n #define RS6000_CALL_GLUE \"nop\"\n \n #undef  RS6000_MCOUNT\n-#define RS6000_MCOUNT \".__mcount\"\n+#define RS6000_MCOUNT \"_mcount\"\n \n /* FP save and restore routines.  */\n #undef  SAVE_FP_PREFIX\n@@ -170,25 +194,37 @@ Boston, MA 02111-1307, USA.  */\n \n /* Dwarf2 debugging.  */\n #undef  PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE  DWARF2_DEBUG\n+#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n+\n+/* If we are referencing a function that is static or is known to be\n+   in this file, make the SYMBOL_REF special.  We can use this to indicate\n+   that we can branch to this function without emitting a no-op after the\n+   call.  Do not set this flag if the function is weakly defined.  */\n+\n+#undef  ENCODE_SECTION_INFO\n+#define ENCODE_SECTION_INFO(DECL)\t\t\t\t\\\n+  if (TREE_CODE (DECL) == FUNCTION_DECL\t\t\t\t\\\n+      && (TREE_ASM_WRITTEN (DECL) || ! TREE_PUBLIC (DECL))\t\\\n+      && ! DECL_WEAK (DECL))\t\t\t\t\t\\\n+    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\n \n /* This macro gets just the user-specified name\n    out of the string in a SYMBOL_REF.  Discard\n    a leading * or @.  */\n-#define\tSTRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  const char *_name = SYMBOL_NAME;\t\t\t\t\t\\\n-  while (*_name == '*' || *_name == '@')\t\t\t\t\\\n-    _name++;\t\t\t\t\t\t\t\t\\\n-  (VAR) = _name;\t\t\t\t\t\t\t\\\n+#define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\\\n+do {\t\t\t\t\t\t\\\n+  const char *_name = (SYMBOL_NAME);\t\t\\\n+  while (*_name == '*' || *_name == '@')\t\\\n+    _name++;\t\t\t\t\t\\\n+  (VAR) = _name;\t\t\t\t\\\n } while (0)\n \n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */\n \n /* Override elfos.h definition.  */\n-#undef\tASM_OUTPUT_LABELREF\n-#define\tASM_OUTPUT_LABELREF(FILE,NAME)\t\t\\\n+#undef  ASM_OUTPUT_LABELREF\n+#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\t\\\n do {\t\t\t\t\t\t\\\n   const char *_name = NAME;\t\t\t\\\n   if (*_name == '@')\t\t\t\t\\\n@@ -202,52 +238,38 @@ do {\t\t\t\t\t\t\\\n \n #undef  ASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_RELOCATABLE && (get_pool_size () != 0 || profile_flag)\t\\\n-\t&& uses_TOC())\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar buf[256];\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tASM_OUTPUT_INTERNAL_LABEL (FILE, \"LCL\", rs6000_pic_labelno);\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 1);\t\t\t\\\n-\tfputs (\"\\t.quad \", FILE);\t\t\t\t\t\\\n-\tassemble_name (FILE, buf);\t\t\t\t\t\\\n-\tputc ('-', FILE);\t\t\t\t\t\t\\\n-\tASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\t\\\n-\tassemble_name (FILE, buf);\t\t\t\t\t\\\n-\tputc ('\\n', FILE);\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fputs (\"\\t.section\\t\\\".opd\\\",\\\"aw\\\"\\n\\t.align 3\\n\", (FILE));\t\\\n+      ASM_OUTPUT_LABEL ((FILE), (NAME));\t\t\t\t\\\n+      fputs (DOUBLE_INT_ASM_OP, (FILE));\t\t\t\t\\\n+      putc ('.', (FILE));\t\t\t\t\t\t\\\n+      assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n+      putc ('\\n', (FILE));\t\t\t\t\t\t\\\n+      fputs (DOUBLE_INT_ASM_OP, (FILE));\t\t\t\t\\\n+      fputs (\".TOC.@tocbase, 0\\n\\t.previous\\n\", (FILE));\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-    putc (',', FILE);\t\t\t\t\t\t\t\\\n-    fprintf (FILE, TYPE_OPERAND_FMT, \"function\");\t\t\t\\\n-    putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n-    ASM_DECLARE_RESULT (FILE, DECL_RESULT (DECL));\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-    if (DEFAULT_ABI == ABI_AIX)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tconst char *desc_name, *orig_name;\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-        STRIP_NAME_ENCODING (orig_name, NAME);\t\t\t\t\\\n-        desc_name = orig_name;\t\t\t\t\t\t\\\n-\twhile (*desc_name == '.')\t\t\t\t\t\\\n-\t  desc_name++;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tif (TREE_PUBLIC (DECL))\t\t\t\t\t\t\\\n-\t  fprintf (FILE, \"\\t.globl %s\\n\", desc_name);\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tfputs (\"\\t.section\\t\\\".opd\\\",\\\"aw\\\"\\n\", FILE);\t\t\t\\\n-\tfprintf (FILE, \"%s:\\n\", desc_name);\t\t\t\t\\\n-\tfprintf (FILE, \"\\t.quad %s\\n\", orig_name);\t\t\t\\\n-\tfputs (\"\\t.quad .TOC.@tocbase\\n\", FILE);\t\t\t\\\n-\tif (DEFAULT_ABI == ABI_AIX)\t\t\t\t\t\\\n-\t  fputs (\"\\t.quad 0\\n\", FILE);\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\t.previous\\n\");\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-  } while (0)\n+      if (TREE_PUBLIC (DECL))\t\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+\t  if (DECL_WEAK (DECL))\t\t\t\t\t\t\\\n+\t    fputs (\"\\t.weak\\t\", (FILE));\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\t\\\n+\t    fputs (\"\\t.globl\\t\", (FILE));\t\t\t\t\\\n+\t  putc ('.', (FILE));\t\t\t\t\t\t\\\n+\t  assemble_name ((FILE), (NAME));\t\t\t\t\\\n+\t  putc ('\\n', (FILE));\t\t\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      fputs (TYPE_ASM_OP, (FILE));\t\t\t\t\t\\\n+      putc ('.', (FILE));\t\t\t\t\t\t\\\n+      assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n+      putc (',', (FILE));\t\t\t\t\t\t\\\n+      fprintf ((FILE), TYPE_OPERAND_FMT, \"function\");\t\t\t\\\n+      putc ('\\n', (FILE));\t\t\t\t\t\t\\\n+      ASM_DECLARE_RESULT ((FILE), DECL_RESULT (DECL));\t\t\t\\\n+      putc ('.', (FILE));\t\t\t\t\t\t\\\n+      ASM_OUTPUT_LABEL ((FILE), (NAME));\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* Return non-zero if this entry is to be written into the constant\n    pool in a special way.  We do so if this is a SYMBOL_REF, LABEL_REF\n@@ -274,8 +296,3 @@ do {\t\t\t\t\t\t\\\n \t       || (GET_MODE_CLASS (GET_MODE (X)) == MODE_FLOAT\t\t\\\n \t\t   && ! TARGET_NO_FP_IN_TOC)))))\n \n-#undef  ASM_DEFAULT_SPEC\n-#define\tASM_DEFAULT_SPEC \"-mppc64\"\n-\n-/* We don't need to generate entries in .fixup.  */\n-#undef RELOCATABLE_NEEDS_FIXUP"}]}