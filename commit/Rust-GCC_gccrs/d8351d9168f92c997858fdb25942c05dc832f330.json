{"sha": "d8351d9168f92c997858fdb25942c05dc832f330", "node_id": "C_kwDOANBUbNoAKGQ4MzUxZDkxNjhmOTJjOTk3ODU4ZmRiMjU5NDJjMDVkYzgzMmYzMzA", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-24T16:22:29Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-24T16:39:12Z"}, "message": "Decouple the HIR::OperatorExpr from resolving operator overloads\n\nThis means we can reuse the same code for operations that are not\nHIR::OperatorExpr's such as ArrayIndexExpr which can resolve to\ncore::ops::index lang items.", "tree": {"sha": "c5937fb363281a91eb7230141f308b932528fc09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5937fb363281a91eb7230141f308b932528fc09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8351d9168f92c997858fdb25942c05dc832f330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8351d9168f92c997858fdb25942c05dc832f330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8351d9168f92c997858fdb25942c05dc832f330", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8351d9168f92c997858fdb25942c05dc832f330/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d5396d52277be5e2c82249f889a78d909f29084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d5396d52277be5e2c82249f889a78d909f29084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d5396d52277be5e2c82249f889a78d909f29084"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "dfe523106a76b80a8a6cebff850ecdda943f4ab6", "filename": "gcc/rust/backend/rust-compile-expr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc?ref=d8351d9168f92c997858fdb25942c05dc832f330", "patch": "@@ -790,7 +790,7 @@ CompileExpr::resolve_method_address (TyTy::FnType *fntype, HirId ref,\n \n tree\n CompileExpr::resolve_operator_overload (\n-  Analysis::RustLangItem::ItemType lang_item_type, HIR::OperatorExpr &expr,\n+  Analysis::RustLangItem::ItemType lang_item_type, HIR::OperatorExprMeta expr,\n   tree lhs, tree rhs, HIR::Expr *lhs_expr, HIR::Expr *rhs_expr)\n {\n   TyTy::FnType *fntype;"}, {"sha": "f2b4df894ca7aa10fe2608dc0141cf0ecac70107", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=d8351d9168f92c997858fdb25942c05dc832f330", "patch": "@@ -799,7 +799,7 @@ class CompileExpr : public HIRCompileBase\n \n   tree\n   resolve_operator_overload (Analysis::RustLangItem::ItemType lang_item_type,\n-\t\t\t     HIR::OperatorExpr &expr, tree lhs, tree rhs,\n+\t\t\t     HIR::OperatorExprMeta expr, tree lhs, tree rhs,\n \t\t\t     HIR::Expr *lhs_expr, HIR::Expr *rhs_expr);\n \n   tree compile_bool_literal (const HIR::LiteralExpr &expr,"}, {"sha": "6ec8d524ae198c3508acdc01bbc63a98a3692a53", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=d8351d9168f92c997858fdb25942c05dc832f330", "patch": "@@ -4029,6 +4029,36 @@ class AsyncBlockExpr : public ExprWithBlock\n     return new AsyncBlockExpr (*this);\n   }\n };\n+\n+// this is a utility helper class for type-checking and code-generation\n+class OperatorExprMeta\n+{\n+public:\n+  OperatorExprMeta (HIR::CompoundAssignmentExpr &expr)\n+    : node_mappings (expr.get_mappings ()), locus (expr.get_locus ())\n+  {}\n+\n+  OperatorExprMeta (HIR::ArithmeticOrLogicalExpr &expr)\n+    : node_mappings (expr.get_mappings ()), locus (expr.get_locus ())\n+  {}\n+\n+  OperatorExprMeta (HIR::NegationExpr &expr)\n+    : node_mappings (expr.get_mappings ()), locus (expr.get_locus ())\n+  {}\n+\n+  OperatorExprMeta (HIR::DereferenceExpr &expr)\n+    : node_mappings (expr.get_mappings ()), locus (expr.get_locus ())\n+  {}\n+\n+  const Analysis::NodeMapping &get_mappings () const { return node_mappings; }\n+\n+  Location get_locus () const { return locus; }\n+\n+private:\n+  const Analysis::NodeMapping node_mappings;\n+  Location locus;\n+};\n+\n } // namespace HIR\n } // namespace Rust\n "}, {"sha": "7ae2b57f67e9d3b6b31fd9f70fbeda3dbde4087c", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc?ref=d8351d9168f92c997858fdb25942c05dc832f330", "patch": "@@ -288,7 +288,7 @@ TypeCheckExpr::visit (HIR::ArrayIndexExpr &expr)\n \n bool\n TypeCheckExpr::resolve_operator_overload (\n-  Analysis::RustLangItem::ItemType lang_item_type, HIR::OperatorExpr &expr,\n+  Analysis::RustLangItem::ItemType lang_item_type, HIR::OperatorExprMeta expr,\n   TyTy::BaseType *lhs, TyTy::BaseType *rhs)\n {\n   // look up lang item for arithmetic type"}, {"sha": "93aa868505c0ebc3ea582cdc01c842c3d16df5a1", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8351d9168f92c997858fdb25942c05dc832f330/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=d8351d9168f92c997858fdb25942c05dc832f330", "patch": "@@ -1239,7 +1239,7 @@ class TypeCheckExpr : public TypeCheckBase\n protected:\n   bool\n   resolve_operator_overload (Analysis::RustLangItem::ItemType lang_item_type,\n-\t\t\t     HIR::OperatorExpr &expr, TyTy::BaseType *lhs,\n+\t\t\t     HIR::OperatorExprMeta expr, TyTy::BaseType *lhs,\n \t\t\t     TyTy::BaseType *rhs);\n \n private:"}]}