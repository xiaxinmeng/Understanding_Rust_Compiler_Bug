{"sha": "a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM3OGY4NWM1NDE2YWFmN2ZmZWE3ZWUxMTRlZTE2NmZmNGRkOTJkYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-03T13:20:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-03T13:20:02Z"}, "message": "re PR tree-optimization/85615 (ICE at -O2 and above on valid code on x86_64-linux-gnu: in dfs_enumerate_from, at cfganal.c:1197)\n\n2018-05-03  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/85615\n\t* tree-ssa-threadupdate.c (thread_block_1): Only allow exits\n\tto loops not nested in BBs loop father to avoid creating multi-entry\n\tloops.\n\n\t* gcc.dg/torture/pr85615.c: New testcase.\n\nFrom-SVN: r259891", "tree": {"sha": "68a04fc7dd5d757a880144521e04223c13eb5ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68a04fc7dd5d757a880144521e04223c13eb5ba5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7244ccba711298c906d4c7ca51f9f49bf2438c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7244ccba711298c906d4c7ca51f9f49bf2438c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7244ccba711298c906d4c7ca51f9f49bf2438c7"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "893a459e09a3a6c12b2bba7043fb59c02ec6a185", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "patch": "@@ -1,3 +1,10 @@\n+2018-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85615\n+\t* tree-ssa-threadupdate.c (thread_block_1): Only allow exits\n+\tto loops not nested in BBs loop father to avoid creating multi-entry\n+\tloops.\n+\n 2018-05-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR tree-optimization/70291"}, {"sha": "6d135894c271e08bb17e316a0dc71369b85d4168", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "patch": "@@ -1,3 +1,8 @@\n+2018-05-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85615\n+\t* gcc.dg/torture/pr85615.c: New testcase.\n+\n 2018-05-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR tree-optimization/70291"}, {"sha": "1695c2e7d1d774d750e626800c81cc91a1087b31", "filename": "gcc/testsuite/gcc.dg/torture/pr85615.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85615.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85615.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85615.c?ref=a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+\n+long a, d;\n+int b, c;\n+void fn1()\n+{\n+  int e = -1L, f = 2, g = 8;\n+  for (;;)\n+    {\n+      for (; b; g++)\n+\t;\n+      int i;\n+      for (; c;)\n+\t{\n+\t  i = 5;\n+\t  for (; e >= 1; i--)\n+\t    ;\n+\t}\n+      d = f ?: a;\n+      if (d)\n+\t{\n+\t  e = 0;\n+\t  for (; i;)\n+\t    for (; g < 3; f++)\n+\t      ;\n+\t}\n+    }\n+}"}, {"sha": "b6bc5fcf17593bd66af019975b69b47d273dd828", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a378f85c5416aaf7ffea7ee114ee166ff4dd92da/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=a378f85c5416aaf7ffea7ee114ee166ff4dd92da", "patch": "@@ -1309,7 +1309,9 @@ thread_block_1 (basic_block bb, bool noloop_only, bool joiners)\n \t     and thread this elsewhere, so just cancel the jump threading\n \t     request by clearing the AUX field now.  */\n \t  if (bb->loop_father != e2->src->loop_father\n-\t      && !loop_exit_edge_p (e2->src->loop_father, e2))\n+\t      && (!loop_exit_edge_p (e2->src->loop_father, e2)\n+\t\t  || flow_loop_nested_p (bb->loop_father,\n+\t\t\t\t\t e2->dest->loop_father)))\n \t    {\n \t      /* Since this case is not handled by our special code\n \t\t to thread through a loop header, we must explicitly"}]}