{"sha": "56c779bcc9047047c33a90d1994b94a7fb0df0d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZjNzc5YmNjOTA0NzA0N2MzM2E5MGQxOTk0Yjk0YTdmYjBkZjBkMw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-12-18T23:32:52Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-12-18T23:32:52Z"}, "message": "darwin.h: Don't include darwin-sections.def to declare global variables...\n\n\t* config/darwin.h: Don't include darwin-sections.def to declare\n\tglobal variables; instead create darwin_section_enum.\n\t(darwin_section_enum): New.\n\t(darwin_sections): New.\n\t* config/darwin.c: Don't include darwin-sections.def to define\n\tglobal variables.\n\t(darwin_sections): New.\n\t(output_objc_section_asm_op): Rewrite to take advantage of\n\tdarwin_sections.\n\t(darwin_init_sections): Rewrite to use darwin_sections.\n\t(machopic_output_indirection): Update for darwin_sections array.\n\t(machopic_select_section): Likewise.\n\t(machopic_select_rtx_section): Likewise.\n\t(machopic_asm_out_constructor): Likewise.\n\t(machopic_asm_out_destructor): Likewise.\n\t(darwin_file_end): Likewise.\n\t* config/rs6000/rs6000.c (machopic_output_stub): Likewise.\n\t* config/i386/i386.c (machopic_output_stub): Likewise.\n\nFrom-SVN: r108765", "tree": {"sha": "e556b486f30ee668856ec4ff63feda7d67af2942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e556b486f30ee668856ec4ff63feda7d67af2942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56c779bcc9047047c33a90d1994b94a7fb0df0d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c779bcc9047047c33a90d1994b94a7fb0df0d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56c779bcc9047047c33a90d1994b94a7fb0df0d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c779bcc9047047c33a90d1994b94a7fb0df0d3/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04743a370f720221d93f28807ec3349a6faf21ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04743a370f720221d93f28807ec3349a6faf21ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04743a370f720221d93f28807ec3349a6faf21ac"}], "stats": {"total": 209, "additions": 120, "deletions": 89}, "files": [{"sha": "176c4b705d3c840f13f091969f9ed5ce25b424aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56c779bcc9047047c33a90d1994b94a7fb0df0d3", "patch": "@@ -1,3 +1,24 @@\n+2005-12-18  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/darwin.h: Don't include darwin-sections.def to declare\n+\tglobal variables; instead create darwin_section_enum.\n+\t(darwin_section_enum): New.\n+\t(darwin_sections): New.\n+\t* config/darwin.c: Don't include darwin-sections.def to define\n+\tglobal variables.\n+\t(darwin_sections): New.\n+\t(output_objc_section_asm_op): Rewrite to take advantage of\n+\tdarwin_sections.\n+\t(darwin_init_sections): Rewrite to use darwin_sections.\n+\t(machopic_output_indirection): Update for darwin_sections array.\n+\t(machopic_select_section): Likewise.\n+\t(machopic_select_rtx_section): Likewise.\n+\t(machopic_asm_out_constructor): Likewise.\n+\t(machopic_asm_out_destructor): Likewise.\n+\t(darwin_file_end): Likewise.\n+\t* config/rs6000/rs6000.c (machopic_output_stub): Likewise.\n+\t* config/i386/i386.c (machopic_output_stub): Likewise.\n+\n 2005-12-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/25481"}, {"sha": "b216c8c560989f8f3bd2b3c68bfbd1680856bf3a", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 88, "deletions": 82, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=56c779bcc9047047c33a90d1994b94a7fb0df0d3", "patch": "@@ -76,44 +76,49 @@ Boston, MA 02110-1301, USA.  */\n    of MACHO_SYMBOL_STATIC for the code that handles @code{static}\n    symbol indirection.  */\n \n-/* Define the individual section variables.  */\n-#define DEF_SECTION(NAME, FLAGS, DIRECTIVE, OBJC) section *NAME;\n-#include \"config/darwin-sections.def\"\n-#undef DEF_SECTION\n+/* Section names.  */\n+section * darwin_sections[NUM_DARWIN_SECTIONS];\n \n /* A get_unnamed_section callback used to switch to an ObjC section.\n    DIRECTIVE is as for output_section_asm_op.  */\n \n static void\n output_objc_section_asm_op (const void *directive)\n {\n-  static int been_here = 0;\n+  static bool been_here = false;\n \n-  if (been_here == 0)\n+  if (! been_here)\n     {\n-      been_here = 1;\n-      /* written, cold -> hot */\n-      switch_to_section (objc_cat_cls_meth_section);\n-      switch_to_section (objc_cat_inst_meth_section);\n-      switch_to_section (objc_string_object_section);\n-      switch_to_section (objc_constant_string_object_section);\n-      switch_to_section (objc_selector_refs_section);\n-      switch_to_section (objc_selector_fixup_section);\n-      switch_to_section (objc_cls_refs_section);\n-      switch_to_section (objc_class_section);\n-      switch_to_section (objc_meta_class_section);\n-      /* shared, hot -> cold */\n-      switch_to_section (objc_cls_meth_section);\n-      switch_to_section (objc_inst_meth_section);\n-      switch_to_section (objc_protocol_section);\n-      switch_to_section (objc_class_names_section);\n-      switch_to_section (objc_meth_var_types_section);\n-      switch_to_section (objc_meth_var_names_section);\n-      switch_to_section (objc_category_section);\n-      switch_to_section (objc_class_vars_section);\n-      switch_to_section (objc_instance_vars_section);\n-      switch_to_section (objc_module_info_section);\n-      switch_to_section (objc_symbols_section);\n+      static const enum darwin_section_enum tomark[] = \n+\t{\n+\t  /* written, cold -> hot */\n+\t  objc_cat_cls_meth_section,\n+\t  objc_cat_inst_meth_section,\n+\t  objc_string_object_section,\n+\t  objc_constant_string_object_section,\n+\t  objc_selector_refs_section,\n+\t  objc_selector_fixup_section,\n+\t  objc_cls_refs_section,\n+\t  objc_class_section,\n+\t  objc_meta_class_section,\n+\t  /* shared, hot -> cold */\n+\t  objc_cls_meth_section,\n+\t  objc_inst_meth_section,\n+\t  objc_protocol_section,\n+\t  objc_class_names_section,\n+\t  objc_meth_var_types_section,\n+\t  objc_meth_var_names_section,\n+\t  objc_category_section,\n+\t  objc_class_vars_section,\n+\t  objc_instance_vars_section,\n+\t  objc_module_info_section,\n+\t  objc_symbols_section\n+\t};\n+      size_t i;\n+      \n+      been_here = true;\n+      for (i = 0; i < ARRAY_SIZE (tomark); i++)\n+\tswitch_to_section (darwin_sections[tomark[i]]);\n     }\n   output_section_asm_op (directive);\n }\n@@ -123,17 +128,18 @@ output_objc_section_asm_op (const void *directive)\n void\n darwin_init_sections (void)\n {\n-#define DEF_SECTION(NAME, FLAGS, DIRECTIVE, OBJC) \\\n-  NAME = get_unnamed_section (FLAGS, (OBJC \\\n-\t\t\t\t      ? output_objc_section_asm_op \\\n-\t\t\t\t      : output_section_asm_op), \\\n-\t\t\t      \"\\t\" DIRECTIVE);\n-#include \"darwin-sections.def\"\n+#define DEF_SECTION(NAME, FLAGS, DIRECTIVE, OBJC)\t\t\\\n+  darwin_sections[NAME] =\t\t\t\t\t\\\n+    get_unnamed_section (FLAGS, (OBJC\t\t\t\t\\\n+\t\t\t\t ? output_objc_section_asm_op\t\\\n+\t\t\t\t : output_section_asm_op),\t\\\n+\t\t\t \"\\t\" DIRECTIVE);\n+#include \"config/darwin-sections.def\"\n #undef DEF_SECTION\n \n-  readonly_data_section = const_section;\n-  exception_section = darwin_exception_section;\n-  eh_frame_section = darwin_eh_frame_section;\n+  readonly_data_section = darwin_sections[const_section];\n+  exception_section = darwin_sections[darwin_exception_section];\n+  eh_frame_section = darwin_sections[darwin_eh_frame_section];\n }\n \n int\n@@ -979,7 +985,7 @@ machopic_output_indirection (void **slot, void *data)\n     {\n       rtx init = const0_rtx;\n \n-      switch_to_section (machopic_nl_symbol_ptr_section);\n+      switch_to_section (darwin_sections[machopic_nl_symbol_ptr_section]);\n       assemble_name (asm_out_file, ptr_name);\n       fprintf (asm_out_file, \":\\n\");\n       \n@@ -1095,22 +1101,22 @@ machopic_select_section (tree exp, int reloc,\n     {\n       if (reloc == 1)\n \tbase_section = (weak_p\n-\t\t\t? text_unlikely_coal_section\n+\t\t\t? darwin_sections[text_unlikely_coal_section]\n \t\t\t: unlikely_text_section ());\n       else\n-\tbase_section = weak_p ? text_coal_section : text_section;\n+\tbase_section = weak_p ? darwin_sections[text_coal_section] : text_section;\n     }\n   else if (decl_readonly_section_1 (exp, reloc, MACHOPIC_INDIRECT))\n-    base_section = weak_p ? const_coal_section : const_section;\n+    base_section = weak_p ? darwin_sections[const_coal_section] : darwin_sections[const_section];\n   else if (TREE_READONLY (exp) || TREE_CONSTANT (exp))\n-    base_section = weak_p ? const_data_coal_section : const_data_section;\n+    base_section = weak_p ? darwin_sections[const_data_coal_section] : darwin_sections[const_data_section];\n   else\n-    base_section = weak_p ? data_coal_section : data_section;\n+    base_section = weak_p ? darwin_sections[data_coal_section] : data_section;\n \n   if (TREE_CODE (exp) == STRING_CST\n       && ((size_t) TREE_STRING_LENGTH (exp)\n \t  == strlen (TREE_STRING_POINTER (exp)) + 1))\n-    return cstring_section;\n+    return darwin_sections[cstring_section];\n   else if ((TREE_CODE (exp) == INTEGER_CST || TREE_CODE (exp) == REAL_CST)\n \t   && flag_merge_constants)\n     {\n@@ -1119,11 +1125,11 @@ machopic_select_section (tree exp, int reloc,\n       if (TREE_CODE (size) == INTEGER_CST &&\n \t  TREE_INT_CST_LOW (size) == 4 &&\n \t  TREE_INT_CST_HIGH (size) == 0)\n-\treturn literal4_section;\n+\treturn darwin_sections[literal4_section];\n       else if (TREE_CODE (size) == INTEGER_CST &&\n \t       TREE_INT_CST_LOW (size) == 8 &&\n \t       TREE_INT_CST_HIGH (size) == 0)\n-\treturn literal8_section;\n+\treturn darwin_sections[literal8_section];\n       else\n \treturn base_section;\n     }\n@@ -1139,9 +1145,9 @@ machopic_select_section (tree exp, int reloc,\n       if (!strcmp (IDENTIFIER_POINTER (name), \"__builtin_ObjCString\"))\n \t{\n \t  if (flag_next_runtime)\n-\t    return objc_constant_string_object_section;\n+\t    return darwin_sections[objc_constant_string_object_section];\n \t  else\n-\t    return objc_string_object_section;\n+\t    return darwin_sections[objc_string_object_section];\n \t}\n       else\n \treturn base_section;\n@@ -1155,51 +1161,51 @@ machopic_select_section (tree exp, int reloc,\n       const char *name = IDENTIFIER_POINTER (DECL_NAME (exp));\n \n       if (!strncmp (name, \"_OBJC_CLASS_METHODS_\", 20))\n-\treturn objc_cls_meth_section;\n+\treturn darwin_sections[objc_cls_meth_section];\n       else if (!strncmp (name, \"_OBJC_INSTANCE_METHODS_\", 23))\n-\treturn objc_inst_meth_section;\n+\treturn darwin_sections[objc_inst_meth_section];\n       else if (!strncmp (name, \"_OBJC_CATEGORY_CLASS_METHODS_\", 20))\n-\treturn objc_cat_cls_meth_section;\n+\treturn darwin_sections[objc_cat_cls_meth_section];\n       else if (!strncmp (name, \"_OBJC_CATEGORY_INSTANCE_METHODS_\", 23))\n-\treturn objc_cat_inst_meth_section;\n+\treturn darwin_sections[objc_cat_inst_meth_section];\n       else if (!strncmp (name, \"_OBJC_CLASS_VARIABLES_\", 22))\n-\treturn objc_class_vars_section;\n+\treturn darwin_sections[objc_class_vars_section];\n       else if (!strncmp (name, \"_OBJC_INSTANCE_VARIABLES_\", 25))\n-\treturn objc_instance_vars_section;\n+\treturn darwin_sections[objc_instance_vars_section];\n       else if (!strncmp (name, \"_OBJC_CLASS_PROTOCOLS_\", 22))\n-\treturn objc_cat_cls_meth_section;\n+\treturn darwin_sections[objc_cat_cls_meth_section];\n       else if (!strncmp (name, \"_OBJC_CLASS_NAME_\", 17))\n-\treturn objc_class_names_section;\n+\treturn darwin_sections[objc_class_names_section];\n       else if (!strncmp (name, \"_OBJC_METH_VAR_NAME_\", 20))\n-\treturn objc_meth_var_names_section;\n+\treturn darwin_sections[objc_meth_var_names_section];\n       else if (!strncmp (name, \"_OBJC_METH_VAR_TYPE_\", 20))\n-\treturn objc_meth_var_types_section;\n+\treturn darwin_sections[objc_meth_var_types_section];\n       else if (!strncmp (name, \"_OBJC_CLASS_REFERENCES\", 22))\n-\treturn objc_cls_refs_section;\n+\treturn darwin_sections[objc_cls_refs_section];\n       else if (!strncmp (name, \"_OBJC_CLASS_\", 12))\n-\treturn objc_class_section;\n+\treturn darwin_sections[objc_class_section];\n       else if (!strncmp (name, \"_OBJC_METACLASS_\", 16))\n-\treturn objc_meta_class_section;\n+\treturn darwin_sections[objc_meta_class_section];\n       else if (!strncmp (name, \"_OBJC_CATEGORY_\", 15))\n-\treturn objc_category_section;\n+\treturn darwin_sections[objc_category_section];\n       else if (!strncmp (name, \"_OBJC_SELECTOR_REFERENCES\", 25))\n-\treturn objc_selector_refs_section;\n+\treturn darwin_sections[objc_selector_refs_section];\n       else if (!strncmp (name, \"_OBJC_SELECTOR_FIXUP\", 20))\n-\treturn objc_selector_fixup_section;\n+\treturn darwin_sections[objc_selector_fixup_section];\n       else if (!strncmp (name, \"_OBJC_SYMBOLS\", 13))\n-\treturn objc_symbols_section;\n+\treturn darwin_sections[objc_symbols_section];\n       else if (!strncmp (name, \"_OBJC_MODULES\", 13))\n-\treturn objc_module_info_section;\n+\treturn darwin_sections[objc_module_info_section];\n       else if (!strncmp (name, \"_OBJC_IMAGE_INFO\", 16))\n-\treturn objc_image_info_section;\n+\treturn darwin_sections[objc_image_info_section];\n       else if (!strncmp (name, \"_OBJC_PROTOCOL_INSTANCE_METHODS_\", 32))\n-\treturn objc_cat_inst_meth_section;\n+\treturn darwin_sections[objc_cat_inst_meth_section];\n       else if (!strncmp (name, \"_OBJC_PROTOCOL_CLASS_METHODS_\", 29))\n-\treturn objc_cat_cls_meth_section;\n+\treturn darwin_sections[objc_cat_cls_meth_section];\n       else if (!strncmp (name, \"_OBJC_PROTOCOL_REFS_\", 20))\n-\treturn objc_cat_cls_meth_section;\n+\treturn darwin_sections[objc_cat_cls_meth_section];\n       else if (!strncmp (name, \"_OBJC_PROTOCOL_\", 15))\n-\treturn objc_protocol_section;\n+\treturn darwin_sections[objc_protocol_section];\n       else\n \treturn base_section;\n     }\n@@ -1217,27 +1223,27 @@ machopic_select_rtx_section (enum machine_mode mode, rtx x,\n   if (GET_MODE_SIZE (mode) == 8\n       && (GET_CODE (x) == CONST_INT\n \t  || GET_CODE (x) == CONST_DOUBLE))\n-    return literal8_section;\n+    return darwin_sections[literal8_section];\n   else if (GET_MODE_SIZE (mode) == 4\n \t   && (GET_CODE (x) == CONST_INT\n \t       || GET_CODE (x) == CONST_DOUBLE))\n-    return literal4_section;\n+    return darwin_sections[literal4_section];\n   else if (MACHOPIC_INDIRECT\n \t   && (GET_CODE (x) == SYMBOL_REF\n \t       || GET_CODE (x) == CONST\n \t       || GET_CODE (x) == LABEL_REF))\n-    return const_data_section;\n+    return darwin_sections[const_data_section];\n   else\n-    return const_section;\n+    return darwin_sections[const_section];\n }\n \n void\n machopic_asm_out_constructor (rtx symbol, int priority ATTRIBUTE_UNUSED)\n {\n   if (MACHOPIC_INDIRECT)\n-    switch_to_section (mod_init_section);\n+    switch_to_section (darwin_sections[mod_init_section]);\n   else\n-    switch_to_section (constructor_section);\n+    switch_to_section (darwin_sections[constructor_section]);\n   assemble_align (POINTER_SIZE);\n   assemble_integer (symbol, POINTER_SIZE / BITS_PER_UNIT, POINTER_SIZE, 1);\n \n@@ -1249,9 +1255,9 @@ void\n machopic_asm_out_destructor (rtx symbol, int priority ATTRIBUTE_UNUSED)\n {\n   if (MACHOPIC_INDIRECT)\n-    switch_to_section (mod_term_section);\n+    switch_to_section (darwin_sections[mod_term_section]);\n   else\n-    switch_to_section (destructor_section);\n+    switch_to_section (darwin_sections[destructor_section]);\n   assemble_align (POINTER_SIZE);\n   assemble_integer (symbol, POINTER_SIZE / BITS_PER_UNIT, POINTER_SIZE, 1);\n \n@@ -1443,8 +1449,8 @@ darwin_file_end (void)\n   machopic_finish (asm_out_file);\n   if (strcmp (lang_hooks.name, \"GNU C++\") == 0)\n     {\n-      switch_to_section (constructor_section);\n-      switch_to_section (destructor_section);\n+      switch_to_section (darwin_sections[constructor_section]);\n+      switch_to_section (darwin_sections[destructor_section]);\n       ASM_OUTPUT_ALIGN (asm_out_file, 1);\n     }\n   fprintf (asm_out_file, \"\\t.subsections_via_symbols\\n\");"}, {"sha": "757bedc57e156bb6ba3f370f0b225925852ddb28", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=56c779bcc9047047c33a90d1994b94a7fb0df0d3", "patch": "@@ -611,9 +611,13 @@ Boston, MA 02110-1301, USA.  */\n \n /* Declare the section variables.  */\n #ifndef USED_FOR_TARGET\n-#define DEF_SECTION(NAME, FLAGS, DIRECTIVE, OBJC) extern section *NAME;\n+enum darwin_section_enum {\n+#define DEF_SECTION(NAME, FLAGS, DIRECTIVE, OBJC) NAME,\n #include \"darwin-sections.def\"\n #undef DEF_SECTION\n+  NUM_DARWIN_SECTIONS\n+};\n+extern GTY(()) section * darwin_sections[NUM_DARWIN_SECTIONS];\n #endif\n \n #undef\tTARGET_ASM_SELECT_SECTION"}, {"sha": "86864d2d82c27f93c7c9e62b038eee299c5a39dc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=56c779bcc9047047c33a90d1994b94a7fb0df0d3", "patch": "@@ -16586,9 +16586,9 @@ machopic_output_stub (FILE *file, const char *symb, const char *stub)\n   sprintf (lazy_ptr_name, \"L%d$lz\", label);\n \n   if (MACHOPIC_PURE)\n-    switch_to_section (machopic_picsymbol_stub_section);\n+    switch_to_section (darwin_sections[machopic_picsymbol_stub_section]);\n   else\n-    switch_to_section (machopic_symbol_stub_section);\n+    switch_to_section (darwin_sections[machopic_symbol_stub_section]);\n \n   fprintf (file, \"%s:\\n\", stub);\n   fprintf (file, \"\\t.indirect_symbol %s\\n\", symbol_name);\n@@ -16614,7 +16614,7 @@ machopic_output_stub (FILE *file, const char *symb, const char *stub)\n \n   fprintf (file, \"\\tjmp dyld_stub_binding_helper\\n\");\n \n-  switch_to_section (machopic_lazy_symbol_ptr_section);\n+  switch_to_section (darwin_sections[machopic_lazy_symbol_ptr_section]);\n   fprintf (file, \"%s:\\n\", lazy_ptr_name);\n   fprintf (file, \"\\t.indirect_symbol %s\\n\", symbol_name);\n   fprintf (file, \"\\t.long %s\\n\", binder_name);"}, {"sha": "e23e86b1f956e9ac4598cd553d485a7e9b44dc63", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c779bcc9047047c33a90d1994b94a7fb0df0d3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=56c779bcc9047047c33a90d1994b94a7fb0df0d3", "patch": "@@ -17736,9 +17736,9 @@ machopic_output_stub (FILE *file, const char *symb, const char *stub)\n   GEN_LAZY_PTR_NAME_FOR_SYMBOL (lazy_ptr_name, symb, length);\n \n   if (flag_pic == 2)\n-    switch_to_section (machopic_picsymbol_stub1_section);\n+    switch_to_section (darwin_sections[machopic_picsymbol_stub1_section]);\n   else\n-    switch_to_section (machopic_symbol_stub1_section);\n+    switch_to_section (darwin_sections[machopic_symbol_stub1_section]);\n \n   if (flag_pic == 2)\n     {\n@@ -17778,7 +17778,7 @@ machopic_output_stub (FILE *file, const char *symb, const char *stub)\n       fprintf (file, \"\\tbctr\\n\");\n     }\n \n-  switch_to_section (machopic_lazy_symbol_ptr_section);\n+  switch_to_section (darwin_sections[machopic_lazy_symbol_ptr_section]);\n   fprintf (file, \"%s:\\n\", lazy_ptr_name);\n   fprintf (file, \"\\t.indirect_symbol %s\\n\", symbol_name);\n   fprintf (file, \"%sdyld_stub_binding_helper\\n\","}]}