{"sha": "7a0b7b9a972c599a69113e5baf619fcb28acb578", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EwYjdiOWE5NzJjNTk5YTY5MTEzZTViYWY2MTlmY2IyOGFjYjU3OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-31T12:23:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-31T12:23:35Z"}, "message": "(expand_expr, case COMPONENT_REF): Don't extract field from a CONSTRUCTOR if it already has a TREE_CST_RTL.\n\n(expand_expr, case COMPONENT_REF): Don't extract field from a CONSTRUCTOR if\nit already has a TREE_CST_RTL.\n(expand_expr, case ADDR_EXPR): Call mark_temp_addr_taken on the temporary made\nwhen operand needs to be stored into memory.\n\nFrom-SVN: r8362", "tree": {"sha": "68d59eca9228dd08865abda679e5460a4223c5a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68d59eca9228dd08865abda679e5460a4223c5a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a0b7b9a972c599a69113e5baf619fcb28acb578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a0b7b9a972c599a69113e5baf619fcb28acb578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a0b7b9a972c599a69113e5baf619fcb28acb578", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a0b7b9a972c599a69113e5baf619fcb28acb578/comments", "author": null, "committer": null, "parents": [{"sha": "ae979c8c29ef98309217c886283a1e95df903298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae979c8c29ef98309217c886283a1e95df903298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae979c8c29ef98309217c886283a1e95df903298"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "5594092044569d3703736c3ed0c17524e77c39b1", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a0b7b9a972c599a69113e5baf619fcb28acb578/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a0b7b9a972c599a69113e5baf619fcb28acb578/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7a0b7b9a972c599a69113e5baf619fcb28acb578", "patch": "@@ -4485,9 +4485,12 @@ expand_expr (exp, target, tmode, modifier)\n     case COMPONENT_REF:\n     case BIT_FIELD_REF:\n       /* If the operand is a CONSTRUCTOR, we can just extract the\n-\t appropriate field if it is present.  */\n+\t appropriate field if it is present.  Don't do this if we have\n+\t already written the data since we want to refer to that copy\n+\t and varasm.c assumes that's what we'll do.  */\n       if (code != ARRAY_REF\n-\t  && TREE_CODE (TREE_OPERAND (exp, 0)) == CONSTRUCTOR)\n+\t  && TREE_CODE (TREE_OPERAND (exp, 0)) == CONSTRUCTOR\n+\t  && TREE_CST_RTL (TREE_OPERAND (exp, 0)) == 0)\n \t{\n \t  tree elt;\n \n@@ -6066,6 +6069,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t= assign_stack_temp (inner_mode,\n \t\t\t\t     int_size_in_bytes (inner_type), 1);\n \n+\t      mark_temp_addr_taken (memloc);\n \t      emit_move_insn (memloc, op0);\n \t      op0 = memloc;\n \t    }"}]}