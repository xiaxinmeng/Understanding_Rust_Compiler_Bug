{"sha": "4764049dd620affcd3e2658dc7f03a6616370a29", "node_id": "C_kwDOANBUbNoAKDQ3NjQwNDlkZDYyMGFmZmNkM2UyNjU4ZGM3ZjAzYTY2MTYzNzBhMjk", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-15T14:25:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-15T14:25:25Z"}, "message": "openmp: Fix up handling of OMP_PLACES=threads(1)\n\nWhen writing the places-*.c tests, I've noticed that we mishandle threads\nabstract name with specified num-places if num-places isn't a multiple of\nnumber of hw threads in a core.  It then happily ignores the maximum count\nand overwrites for the remaining hw threads in a core further places that\nhaven't been allocated.\n\n2021-10-15  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/linux/affinity.c (gomp_affinity_init_level_1): For level 1\n\tafter creating count places clean up and return immediately.\n\t* testsuite/libgomp.c/places-6.c: New test.\n\t* testsuite/libgomp.c/places-7.c: New test.\n\t* testsuite/libgomp.c/places-8.c: New test.\n\t* testsuite/libgomp.c/places-9.c: New test.\n\t* testsuite/libgomp.c/places-10.c: New test.", "tree": {"sha": "825118894e654bfef2f48c44024bc73ddd875920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/825118894e654bfef2f48c44024bc73ddd875920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4764049dd620affcd3e2658dc7f03a6616370a29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4764049dd620affcd3e2658dc7f03a6616370a29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4764049dd620affcd3e2658dc7f03a6616370a29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4764049dd620affcd3e2658dc7f03a6616370a29/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3d64372d777d7d6068df8167b6751c289963e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d64372d777d7d6068df8167b6751c289963e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d64372d777d7d6068df8167b6751c289963e85"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "69e72a8d1413e0cdacc0191440e4f95087c05caf", "filename": "libgomp/config/linux/affinity.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Fconfig%2Flinux%2Faffinity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Fconfig%2Flinux%2Faffinity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Faffinity.c?ref=4764049dd620affcd3e2658dc7f03a6616370a29", "patch": "@@ -338,8 +338,13 @@ gomp_affinity_init_level_1 (int level, int this_level, unsigned long count,\n \t\t      if (gomp_affinity_add_cpus (pl, first, 1, 0, true))\n \t\t\t{\n \t\t\t  CPU_CLR_S (first, gomp_cpuset_size, copy);\n-\t\t\t  if (level == 1)\n-\t\t\t    gomp_places_list_len++;\n+\t\t\t  if (level == 1\n+\t\t\t      && ++gomp_places_list_len >= count)\n+\t\t\t    {\n+\t\t\t      fclose (f);\n+\t\t\t      free (line);\n+\t\t\t      return;\n+\t\t\t    }\n \t\t\t}\n \t\t    }\n \t\tif (*p == ',')"}, {"sha": "7746b15cb44468cb35b06cd6b4b5af0a626ce463", "filename": "libgomp/testsuite/libgomp.c/places-10.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-10.c?ref=4764049dd620affcd3e2658dc7f03a6616370a29", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-set-target-env-var OMP_PLACES \"numa_domains(1)\" } */\n+\n+#include <omp.h>\n+\n+int\n+main ()\n+{\n+  omp_display_env (0);\n+  return 0;\n+}"}, {"sha": "bf552fbe2d4f482ff0d8a2c6b0dc59960fd41649", "filename": "libgomp/testsuite/libgomp.c/places-6.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-6.c?ref=4764049dd620affcd3e2658dc7f03a6616370a29", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-set-target-env-var OMP_PLACES \"threads(1)\" } */\n+\n+#include <omp.h>\n+\n+int\n+main ()\n+{\n+  omp_display_env (0);\n+  return 0;\n+}"}, {"sha": "07f3d97e7b2b1bce44d5b951dffad82fff04ff2e", "filename": "libgomp/testsuite/libgomp.c/places-7.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-7.c?ref=4764049dd620affcd3e2658dc7f03a6616370a29", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-set-target-env-var OMP_PLACES \"cores(1)\" } */\n+\n+#include <omp.h>\n+\n+int\n+main ()\n+{\n+  omp_display_env (0);\n+  return 0;\n+}"}, {"sha": "ca7d55bc7a84373ee3adeede3155db8a797b3608", "filename": "libgomp/testsuite/libgomp.c/places-8.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-8.c?ref=4764049dd620affcd3e2658dc7f03a6616370a29", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-set-target-env-var OMP_PLACES \"sockets(1)\" } */\n+\n+#include <omp.h>\n+\n+int\n+main ()\n+{\n+  omp_display_env (0);\n+  return 0;\n+}"}, {"sha": "627cdcea53815cb6d95fba338792f6f430986071", "filename": "libgomp/testsuite/libgomp.c/places-9.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4764049dd620affcd3e2658dc7f03a6616370a29/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fplaces-9.c?ref=4764049dd620affcd3e2658dc7f03a6616370a29", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-set-target-env-var OMP_PLACES \"ll_caches(1)\" } */\n+\n+#include <omp.h>\n+\n+int\n+main ()\n+{\n+  omp_display_env (0);\n+  return 0;\n+}"}]}