{"sha": "2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg3OWJiMmIxODg3YjJiNzg1OGI5ZWYwMzdjYzhiNDQ2YjdkMDAyYg==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2013-07-02T10:57:30Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-07-02T10:57:30Z"}, "message": "AArch64 Support BFXIL in backend\n\nFrom-SVN: r200595", "tree": {"sha": "e960d812a3a0787793a32c20f5eb961cccadaecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e960d812a3a0787793a32c20f5eb961cccadaecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/comments", "author": null, "committer": null, "parents": [{"sha": "afc5e8a6a79510e207d23420417f78bcfb678b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc5e8a6a79510e207d23420417f78bcfb678b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc5e8a6a79510e207d23420417f78bcfb678b4e"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "5f41e369e1fe9884da120afd4d63b932153c1aba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "patch": "@@ -1,3 +1,7 @@\n+2013-07-02  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* config/aarch64/aarch64.md (*extr_insv_reg<mode>): New pattern.\n+\n 2013-07-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.md (arm_andsi3_insn): Add alternatives for 16-bit"}, {"sha": "d06a202e9210a2e2f9d7db3d38e7f6dd9cdea31c", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "patch": "@@ -3225,6 +3225,21 @@\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n+(define_insn \"*extr_insv_lower_reg<mode>\"\n+  [(set (zero_extract:GPI (match_operand:GPI 0 \"register_operand\" \"+r\")\n+\t\t\t  (match_operand 1 \"const_int_operand\" \"n\")\n+\t\t\t  (const_int 0))\n+\t(zero_extract:GPI (match_operand:GPI 2 \"register_operand\" \"+r\")\n+\t\t\t  (match_dup 1)\n+\t\t\t  (match_operand 3 \"const_int_operand\" \"n\")))]\n+  \"!(UINTVAL (operands[1]) == 0\n+     || (UINTVAL (operands[3]) + UINTVAL (operands[1])\n+\t > GET_MODE_BITSIZE (<MODE>mode)))\"\n+  \"bfxil\\\\t%<w>0, %<w>2, %3, %1\"\n+  [(set_attr \"v8type\" \"bfm\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n (define_insn \"*<optab><ALLX:mode>_shft_<GPI:mode>\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(ashift:GPI (ANY_EXTEND:GPI"}, {"sha": "7357b3c386c87cc4929cf8ad1c341745ad20602d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "patch": "@@ -1,3 +1,8 @@\n+2013-07-02  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* gcc.target/aarch64/bfxil_1.c: New test.\n+\t* gcc.target/aarch64/bfxil_2.c: Likewise.\n+\n 2013-07-01  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \tPR c/57766"}, {"sha": "b16834786a191f7d8afeaf0f05eae02c9b8dd188", "filename": "gcc/testsuite/gcc.target/aarch64/bfxil_1.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbfxil_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbfxil_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbfxil_1.c?ref=2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do run { target aarch64*-*-* } } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+/* { dg-require-effective-target aarch64_little_endian } */\n+\n+extern void abort (void);\n+\n+typedef struct bitfield\n+{\n+  unsigned short eight1: 8;\n+  unsigned short four: 4;\n+  unsigned short eight2: 8;\n+  unsigned short seven: 7;\n+  unsigned int sixteen: 16;\n+} bitfield;\n+\n+bitfield\n+bfxil (bitfield a)\n+{\n+  /* { dg-final { scan-assembler \"bfxil\\tx\\[0-9\\]+, x\\[0-9\\]+, 16, 8\" } } */\n+  a.eight1 = a.eight2;\n+  return a;\n+}\n+\n+int\n+main (void)\n+{\n+  static bitfield a;\n+  bitfield b;\n+\n+  a.eight1 = 9;\n+  a.eight2 = 57;\n+  b = bfxil (a);\n+\n+  if (b.eight1 != a.eight2)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "4e4d610c26cf61a2a2a774b85620a06c59d868af", "filename": "gcc/testsuite/gcc.target/aarch64/bfxil_2.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbfxil_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2879bb2b1887b2b7858b9ef037cc8b446b7d002b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbfxil_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbfxil_2.c?ref=2879bb2b1887b2b7858b9ef037cc8b446b7d002b", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do run { target aarch64*-*-* } } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+/* { dg-require-effective-target aarch64_big_endian } */\n+\n+extern void abort (void);\n+\n+typedef struct bitfield\n+{\n+  unsigned short eight1: 8;\n+  unsigned short four: 4;\n+  unsigned short eight2: 8;\n+  unsigned short seven: 7;\n+  unsigned int sixteen: 16;\n+  unsigned short eight3: 8;\n+  unsigned short eight4: 8;\n+} bitfield;\n+\n+bitfield\n+bfxil (bitfield a)\n+{\n+  /* { dg-final { scan-assembler \"bfxil\\tx\\[0-9\\]+, x\\[0-9\\]+, 40, 8\" } } */\n+  a.eight4 = a.eight2;\n+  return a;\n+}\n+\n+int\n+main (void)\n+{\n+  static bitfield a;\n+  bitfield b;\n+\n+  a.eight4 = 9;\n+  a.eight2 = 57;\n+  b = bfxil (a);\n+\n+  if (b.eight4 != a.eight2)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}