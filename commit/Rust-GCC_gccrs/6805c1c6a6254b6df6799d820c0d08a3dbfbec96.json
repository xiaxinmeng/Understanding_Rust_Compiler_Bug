{"sha": "6805c1c6a6254b6df6799d820c0d08a3dbfbec96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwNWMxYzZhNjI1NGI2ZGY2Nzk5ZDgyMGMwZDA4YTNkYmZiZWM5Ng==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2020-07-16T08:38:48Z"}, "committer": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2020-07-16T08:38:48Z"}, "message": "libsanitizer: Fix GetPcSpBp determination of SP on 32-bit Solaris/x86\n\nThe latest Solaris 11.4/x86 update uncovered a libsanitizer bug that\ncaused one test to FAIL for 32-bit:\n\n+FAIL: c-c++-common/asan/null-deref-1.c   -O0  output pattern test\n+FAIL: c-c++-common/asan/null-deref-1.c   -O1  output pattern test\n+FAIL: c-c++-common/asan/null-deref-1.c   -O2  output pattern test\n+FAIL: c-c++-common/asan/null-deref-1.c   -O2 -flto  output pattern test\n+FAIL: c-c++-common/asan/null-deref-1.c -O2 -flto -flto-partition=none\noutput pattern test\n+FAIL: c-c++-common/asan/null-deref-1.c   -O3 -g  output pattern test\n+FAIL: c-c++-common/asan/null-deref-1.c   -Os  output pattern test\n\nI've identified the problem and the fix has just landed in upstream\nllvm-project:\n\n\thttps://reviews.llvm.org/D83664\n\nTested on i386-pc-solaris2.11 and x86_64-pc-linux.gnu.\n\n\tlibsanitizer:\n\t* sanitizer_common/sanitizer_linux.cpp: Cherry-pick llvm-project\n\trevision f0e9b76c3500496f8f3ea7abe6f4bf801e3b41e7.", "tree": {"sha": "5e69f0b7a5b893ef9c946ff1dda54e8c6fdccad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e69f0b7a5b893ef9c946ff1dda54e8c6fdccad0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6805c1c6a6254b6df6799d820c0d08a3dbfbec96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6805c1c6a6254b6df6799d820c0d08a3dbfbec96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6805c1c6a6254b6df6799d820c0d08a3dbfbec96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6805c1c6a6254b6df6799d820c0d08a3dbfbec96/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe8185b50914a412f8e3d63e2baa19d0a4f38140", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8185b50914a412f8e3d63e2baa19d0a4f38140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe8185b50914a412f8e3d63e2baa19d0a4f38140"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "11c03e286dc6165b33e5d7adffef1ea89e630993", "filename": "libsanitizer/sanitizer_common/sanitizer_linux.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6805c1c6a6254b6df6799d820c0d08a3dbfbec96/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6805c1c6a6254b6df6799d820c0d08a3dbfbec96/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux.cpp?ref=6805c1c6a6254b6df6799d820c0d08a3dbfbec96", "patch": "@@ -2043,13 +2043,13 @@ static void GetPcSpBp(void *context, uptr *pc, uptr *sp, uptr *bp) {\n # ifndef REG_EBP\n #  define REG_EBP  6 // REG_FP\n # endif\n-# ifndef REG_ESP\n-#  define REG_ESP 17 // REG_SP\n+# ifndef REG_UESP\n+#  define REG_UESP 17 // REG_SP\n # endif\n # endif\n   *pc = ucontext->uc_mcontext.gregs[REG_EIP];\n   *bp = ucontext->uc_mcontext.gregs[REG_EBP];\n-  *sp = ucontext->uc_mcontext.gregs[REG_ESP];\n+  *sp = ucontext->uc_mcontext.gregs[REG_UESP];\n # endif\n #elif defined(__powerpc__) || defined(__powerpc64__)\n   ucontext_t *ucontext = (ucontext_t*)context;"}]}