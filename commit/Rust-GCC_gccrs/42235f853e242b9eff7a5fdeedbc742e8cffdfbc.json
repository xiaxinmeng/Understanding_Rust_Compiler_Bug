{"sha": "42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIyMzVmODUzZTI0MmI5ZWZmN2E1ZmRlZWRiYzc0MmU4Y2ZmZGZiYw==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-02-26T20:03:11Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-02-26T20:03:11Z"}, "message": "elfos.h (ASM_OUTPUT_LABELREF): Don't define.\n\n* config/elfos.h (ASM_OUTPUT_LABELREF): Don't define.  The default\nis right for most ELF targets.\n* config/ns32k/ns32k.h (ASM_OUTPUT_LABELREF): Don't define.\nLet the default file use %U properly.\n* config/sh/elf.h (ASM_OUTPUT_LABELREF): Don't define.  Use the\ndefault.\n\n* config/fp-bit.c (pack_d): Properly handle rounding of denormal\nnumbers.\n\nFrom-SVN: r32183", "tree": {"sha": "6caf32187f73d401e29d454fd38d7141a7b11315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6caf32187f73d401e29d454fd38d7141a7b11315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/comments", "author": null, "committer": null, "parents": [{"sha": "3852e8afcc93fe600c7b47a25483592e1b8b9f71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3852e8afcc93fe600c7b47a25483592e1b8b9f71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3852e8afcc93fe600c7b47a25483592e1b8b9f71"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "67ed4eb364b59b055171b39366c2a9c0fc032a17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "patch": "@@ -1,3 +1,15 @@\n+2000-02-26  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* config/elfos.h (ASM_OUTPUT_LABELREF): Don't define.  The default\n+\tis right for most ELF targets.\n+\t* config/ns32k/ns32k.h (ASM_OUTPUT_LABELREF): Don't define.\n+\tLet the default file use %U properly.\n+\t* config/sh/elf.h (ASM_OUTPUT_LABELREF): Don't define.  Use the\n+\tdefault.\n+\n+\t* config/fp-bit.c (pack_d): Properly handle rounding of denormal\n+\tnumbers.\n+\n Sat Feb 26 09:39:16 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* toplev.c (documented_lang_options): Correct spelling error."}, {"sha": "91c367754216e2c93950562217f95fc2b1343ca4", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "patch": "@@ -84,15 +84,6 @@ Boston, MA 02111-1307, USA.  */\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n #endif\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.\n-\n-   For most ELF systems the convention is *not* to prepend a leading\n-   underscore onto user-level symbol names.  */\n-\n-#undef  ASM_OUTPUT_LABELREF\n-#define ASM_OUTPUT_LABELREF(FILE,NAME) fprintf (FILE, \"%s\", NAME)\n-     \n /* All SVR4 targets use the ELF object file format.  */\n #define OBJECT_FORMAT_ELF\n "}, {"sha": "4d894e7670774246ff170ed02bd08264e7ae0f70", "filename": "gcc/config/fp-bit.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Ffp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Ffp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.c?ref=42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "patch": "@@ -502,8 +502,25 @@ pack_d ( fp_number_type *  src)\n \t    }\n \t  else\n \t    {\n-\t      /* Shift by the value */\n-\t      fraction >>= shift;\n+\t      int lowbit = (fraction & ((1 << shift) - 1)) ? 1 : 0;\n+\t      fraction = (fraction >> shift) | lowbit;\n+\t    }\n+\t  if ((fraction & GARDMASK) == GARDMSB)\n+\t    {\n+\t      if ((fraction & (1 << NGARDS)))\n+\t\tfraction += GARDROUND + 1;\n+\t    }\n+\t  else\n+\t    {\n+\t      /* Add to the guards to round up.  */\n+\t      fraction += GARDROUND;\n+\t    }\n+\t  /* Perhaps the rounding means we now need to change the\n+             exponent.  */\n+\t  if (fraction >= IMPLICIT_2)\n+\t    {\n+\t      fraction >>= 1;\n+\t      exp += 1;\n \t    }\n \t  fraction >>= NGARDS;\n \t}"}, {"sha": "d39ce8570071f56e4e3528c4fdcf51d7cf440ac1", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "patch": "@@ -1590,12 +1590,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n } while (0)\n #endif\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n-\n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n-\n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n "}, {"sha": "ff57fca6171f47f7bb8f6efde252b4481de4509b", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42235f853e242b9eff7a5fdeedbc742e8cffdfbc/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=42235f853e242b9eff7a5fdeedbc742e8cffdfbc", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for gcc for Hitachi Super-H using ELF.\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n    Contributed by Ian Lance Taylor <ian@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -76,12 +76,6 @@ Boston, MA 02111-1307, USA.  */\n #define DBX_REGISTER_NUMBER(REGNO)\t\\\n   (((REGNO) >= 22 && (REGNO) <= 39) ? ((REGNO) + 1) : (REGNO))\n \n-/* SH ELF, unlike most ELF implementations, uses underscores before\n-   symbol names.  */\n-#undef ASM_OUTPUT_LABELREF\n-#define ASM_OUTPUT_LABELREF(STREAM,NAME) \\\n-  asm_fprintf (STREAM, \"%U%s\", NAME)\n-\n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM) \\\n   sprintf ((STRING), \"*%s%s%ld\", LOCAL_LABEL_PREFIX, (PREFIX), (long)(NUM))"}]}