{"sha": "d99b68560c0de90f1e3b23bdf08f9c01e190534a", "node_id": "C_kwDOANBUbNoAKGQ5OWI2ODU2MGMwZGU5MGYxZTNiMjNiZGYwOGY5YzAxZTE5MDUzNGE", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-06T20:24:02Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-06T20:39:38Z"}, "message": "Fix bad ABI from string method causing all rust abi to become C abi", "tree": {"sha": "7523f0ae6c86a35d05452e8536c399a14fcd1019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7523f0ae6c86a35d05452e8536c399a14fcd1019"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99b68560c0de90f1e3b23bdf08f9c01e190534a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99b68560c0de90f1e3b23bdf08f9c01e190534a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99b68560c0de90f1e3b23bdf08f9c01e190534a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99b68560c0de90f1e3b23bdf08f9c01e190534a/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29d594e263f0ccbcbd2babf43ff453c5188f4f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d594e263f0ccbcbd2babf43ff453c5188f4f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d594e263f0ccbcbd2babf43ff453c5188f4f2c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "473988799d1f55a6843ea333280eb5d18d1748d5", "filename": "gcc/rust/util/rust-abi.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99b68560c0de90f1e3b23bdf08f9c01e190534a/gcc%2Frust%2Futil%2Frust-abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99b68560c0de90f1e3b23bdf08f9c01e190534a/gcc%2Frust%2Futil%2Frust-abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-abi.cc?ref=d99b68560c0de90f1e3b23bdf08f9c01e190534a", "patch": "@@ -22,7 +22,7 @@ Rust::ABI\n get_abi_from_string (const std::string &abi)\n {\n   if (abi.compare (\"rust\") == 0)\n-    return Rust::ABI::C;\n+    return Rust::ABI::RUST;\n   else if (abi.compare (\"rust-intrinsic\") == 0)\n     return Rust::ABI::INTRINSIC;\n   else if (abi.compare (\"C\") == 0)"}]}