{"sha": "270713d3f65243a089f4cdee04cd689422a95530", "node_id": "C_kwDOANBUbNoAKDI3MDcxM2QzZjY1MjQzYTA4OWY0Y2RlZTA0Y2Q2ODk0MjJhOTU1MzA", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-10-20T09:05:16Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-08T08:35:00Z"}, "message": "ada: Minor consistency tweaks in Sem_Ch4\n\nThis ensures that, during the analysis of the qualified expressions, type\nconversions and unchecked type conversions, the determination of the type\nof the node and the analysis of its expression are done in the same order.\n\nNo functional changes.\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Qualified_Expression): Analyze the\n\texpression only after setting the type.\n\t(Analyze_Unchecked_Type_Conversion): Likewise.\n\t(Analyze_Short_Circuit): Likewise for the operands.\n\t(Analyze_Type_Conversion): Minor tweaks.\n\t(Analyze_Unchecked_Expression): Likewise.", "tree": {"sha": "56da8b75f7771779e7157639ec240b929314130a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56da8b75f7771779e7157639ec240b929314130a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/270713d3f65243a089f4cdee04cd689422a95530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270713d3f65243a089f4cdee04cd689422a95530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/270713d3f65243a089f4cdee04cd689422a95530", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270713d3f65243a089f4cdee04cd689422a95530/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "786c6ba5a51f54c404dd491523788f7359a29a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/786c6ba5a51f54c404dd491523788f7359a29a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/786c6ba5a51f54c404dd491523788f7359a29a91"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "0c02fd806752e3b01d7f184a8f5c1fbcac05b5d4", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270713d3f65243a089f4cdee04cd689422a95530/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270713d3f65243a089f4cdee04cd689422a95530/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=270713d3f65243a089f4cdee04cd689422a95530", "patch": "@@ -4323,16 +4323,14 @@ package body Sem_Ch4 is\n    ----------------------------------\n \n    procedure Analyze_Qualified_Expression (N : Node_Id) is\n-      Mark : constant Entity_Id := Subtype_Mark (N);\n       Expr : constant Node_Id   := Expression (N);\n+      Mark : constant Entity_Id := Subtype_Mark (N);\n+\n       I    : Interp_Index;\n       It   : Interp;\n       T    : Entity_Id;\n \n    begin\n-      Analyze_Expression (Expr);\n-\n-      Set_Etype (N, Any_Type);\n       Find_Type (Mark);\n       T := Entity (Mark);\n \n@@ -4353,6 +4351,8 @@ package body Sem_Ch4 is\n \n       Set_Etype (N, T);\n \n+      Analyze_Expression (Expr);\n+\n       if T = Any_Type then\n          return;\n       end if;\n@@ -5948,9 +5948,9 @@ package body Sem_Ch4 is\n       It  : Interp;\n \n    begin\n+      Set_Etype (N, Any_Type);\n       Analyze_Expression (L);\n       Analyze_Expression (R);\n-      Set_Etype (N, Any_Type);\n \n       if not Is_Overloaded (L) then\n          if Root_Type (Etype (L)) = Standard_Boolean\n@@ -6083,7 +6083,9 @@ package body Sem_Ch4 is\n    -----------------------------\n \n    procedure Analyze_Type_Conversion (N : Node_Id) is\n-      Expr : constant Node_Id := Expression (N);\n+      Expr : constant Node_Id   := Expression (N);\n+      Mark : constant Entity_Id := Subtype_Mark (N);\n+\n       Typ  : Entity_Id;\n \n    begin\n@@ -6100,11 +6102,13 @@ package body Sem_Ch4 is\n       --  Otherwise full type analysis is required, as well as some semantic\n       --  checks to make sure the argument of the conversion is appropriate.\n \n-      Find_Type (Subtype_Mark (N));\n-      Typ := Entity (Subtype_Mark (N));\n+      Find_Type (Mark);\n+      Typ := Entity (Mark);\n       Set_Etype (N, Typ);\n-      Check_Fully_Declared (Typ, N);\n+\n       Analyze_Expression (Expr);\n+\n+      Check_Fully_Declared (Typ, N);\n       Validate_Remote_Type_Type_Conversion (N);\n \n       --  Only remaining step is validity checks on the argument. These\n@@ -6227,21 +6231,26 @@ package body Sem_Ch4 is\n    ----------------------------------\n \n    procedure Analyze_Unchecked_Expression (N : Node_Id) is\n+      Expr : constant Node_Id := Expression (N);\n+\n    begin\n-      Analyze (Expression (N), Suppress => All_Checks);\n-      Set_Etype (N, Etype (Expression (N)));\n-      Save_Interps (Expression (N), N);\n+      Analyze (Expr, Suppress => All_Checks);\n+      Set_Etype (N, Etype (Expr));\n+      Save_Interps (Expr, N);\n    end Analyze_Unchecked_Expression;\n \n    ---------------------------------------\n    -- Analyze_Unchecked_Type_Conversion --\n    ---------------------------------------\n \n    procedure Analyze_Unchecked_Type_Conversion (N : Node_Id) is\n+      Expr : constant Node_Id   := Expression (N);\n+      Mark : constant Entity_Id := Subtype_Mark (N);\n+\n    begin\n-      Find_Type (Subtype_Mark (N));\n-      Analyze_Expression (Expression (N));\n-      Set_Etype (N, Entity (Subtype_Mark (N)));\n+      Find_Type (Mark);\n+      Set_Etype (N, Entity (Mark));\n+      Analyze_Expression (Expr);\n    end Analyze_Unchecked_Type_Conversion;\n \n    ------------------------------------"}]}