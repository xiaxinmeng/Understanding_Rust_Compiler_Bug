{"sha": "beb50807addf7817dafe8c229f9e9d9a09f5b828", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViNTA4MDdhZGRmNzgxN2RhZmU4YzIyOWY5ZTlkOWEwOWY1YjgyOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T10:29:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T10:29:07Z"}, "message": "[multiple changes]\n\n2009-04-09  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch11.adb (Expand_Exception_Handlers, Prepend_Call_To_Handler):\n\tSet Sloc of generated nodes for calls to Undefer_Aborts and\n\tSave_Occurrence to No_Location, so the debugger ignores them and\n\ttherefore does not jump back and forth when single stepping.\n\n2009-04-09  Robert Dewar  <dewar@adacore.com>\n\n\t* switch-b.adb: Minor reformatting.\n\nFrom-SVN: r145821", "tree": {"sha": "ddd9ebf15dd27144c82343f1d3eadcaffc8ecd8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddd9ebf15dd27144c82343f1d3eadcaffc8ecd8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beb50807addf7817dafe8c229f9e9d9a09f5b828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb50807addf7817dafe8c229f9e9d9a09f5b828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb50807addf7817dafe8c229f9e9d9a09f5b828", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb50807addf7817dafe8c229f9e9d9a09f5b828/comments", "author": null, "committer": null, "parents": [{"sha": "a4100e558204bb2c334606f33cd180b773fe1bf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4100e558204bb2c334606f33cd180b773fe1bf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4100e558204bb2c334606f33cd180b773fe1bf5"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "cc7bcf97e15bb3235a3e48cb9ce8c424e5cc3c5c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb50807addf7817dafe8c229f9e9d9a09f5b828/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb50807addf7817dafe8c229f9e9d9a09f5b828/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=beb50807addf7817dafe8c229f9e9d9a09f5b828", "patch": "@@ -1,3 +1,14 @@\n+2009-04-09  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch11.adb (Expand_Exception_Handlers, Prepend_Call_To_Handler):\n+\tSet Sloc of generated nodes for calls to Undefer_Aborts and\n+\tSave_Occurrence to No_Location, so the debugger ignores them and\n+\ttherefore does not jump back and forth when single stepping.\n+\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* switch-b.adb: Minor reformatting.\n+\n 2009-04-09  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb, exp_ch5.adb, sem_ch3.adb, exp_atag.adb, layout.adb,"}, {"sha": "a7b6fe1a90514a81ad16e524245b562c7b43b818", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb50807addf7817dafe8c229f9e9d9a09f5b828/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb50807addf7817dafe8c229f9e9d9a09f5b828/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=beb50807addf7817dafe8c229f9e9d9a09f5b828", "patch": "@@ -848,14 +848,16 @@ package body Exp_Ch11 is\n          Ent : constant Entity_Id := RTE (Proc);\n \n       begin\n-         --  If we have no Entity, then we are probably in no run time mode\n-         --  or some weird error has occurred. In either case do nothing!\n+         --  If we have no Entity, then we are probably in no run time mode or\n+         --  some weird error has occurred. In either case do nothing. Note use\n+         --  of No_Location to hide this code from the debugger, so single\n+         --  stepping doesn't jump back and forth.\n \n          if Present (Ent) then\n             declare\n                Call : constant Node_Id :=\n-                        Make_Procedure_Call_Statement (Loc,\n-                          Name => New_Occurrence_Of (RTE (Proc), Loc),\n+                        Make_Procedure_Call_Statement (No_Location,\n+                          Name => New_Occurrence_Of (RTE (Proc), No_Location),\n                           Parameter_Associations => Args);\n \n             begin\n@@ -1016,17 +1018,23 @@ package body Exp_Ch11 is\n                      Save  : Node_Id;\n \n                   begin\n+                     --  Note use of No_Location to hide this code from the\n+                     --  debugger, so single stepping doesn't jump back and\n+                     --  forth.\n+\n                      Save :=\n-                       Make_Procedure_Call_Statement (Loc,\n+                       Make_Procedure_Call_Statement (No_Location,\n                          Name =>\n-                           New_Occurrence_Of (RTE (RE_Save_Occurrence), Loc),\n+                           New_Occurrence_Of (RTE (RE_Save_Occurrence),\n+                                              No_Location),\n                          Parameter_Associations => New_List (\n                            New_Occurrence_Of (Cparm, Cloc),\n-                           Make_Explicit_Dereference (Loc,\n-                             Make_Function_Call (Loc,\n-                               Name => Make_Explicit_Dereference (Loc,\n+                           Make_Explicit_Dereference (No_Location,\n+                             Make_Function_Call (No_Location,\n+                               Name => Make_Explicit_Dereference (No_Location,\n                                  New_Occurrence_Of\n-                                   (RTE (RE_Get_Current_Excep), Loc))))));\n+                                   (RTE (RE_Get_Current_Excep),\n+                                    No_Location))))));\n \n                      Mark_Rewrite_Insertion (Save);\n                      Prepend (Save, Statements (Handler));"}, {"sha": "0d673b7daee1e268de72633309cac9a6d16434ba", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb50807addf7817dafe8c229f9e9d9a09f5b828/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb50807addf7817dafe8c229f9e9d9a09f5b828/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=beb50807addf7817dafe8c229f9e9d9a09f5b828", "patch": "@@ -402,10 +402,10 @@ package body Switch.B is\n             case Switch_Chars (Ptr) is\n \n                when 'e' =>\n-                  Warning_Mode  := Treat_As_Error;\n+                  Warning_Mode := Treat_As_Error;\n \n                when 's' =>\n-                  Warning_Mode  := Suppress;\n+                  Warning_Mode := Suppress;\n \n                when others =>\n                   Bad_Switch (Switch_Chars);"}]}