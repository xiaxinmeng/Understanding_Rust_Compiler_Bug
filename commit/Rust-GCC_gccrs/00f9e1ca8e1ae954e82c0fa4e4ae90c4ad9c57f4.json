{"sha": "00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBmOWUxY2E4ZTFhZTk1NGU4MmMwZmE0ZTRhZTkwYzRhZDljNTdmNA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-03-23T19:44:46Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-03-23T19:44:46Z"}, "message": "mips.md (type, [...]): Change xfer instruction type to mfc and mtc, as applicable.\n\n\t* config/mips/mips.md (type, hazard, *movdi_32bit,\n\t*movdi_gp32_fp64, *movdi_64bit, *movsi_internal, movcc,\n\t*movhi_internal, *movqi_internal, *movsf_hardfloat,\n\t*movdf_hardfloat_64bit, *movdf_hardfloat_32bit, *movdf_softfloat,\n\tmovv2sf_hardfloat_64bit, load_df_low, load_df_high, store_df_high,\n\tmthc1, mfhc1): Change xfer instruction type to mfc and mtc, as\n\tapplicable.\n\t(movcc): Change first xfer to multi.\n\t* config/mips/24k.md, config/mips/4100.md, config/mips/4300.md,\n\tconfig/mips/5000.md, config/mips/5400.md, config/mips/5500.md,\n\tconfig/mips/5k.md, config/mips/7000.md, config/mips/9000.md,\n\tconfig/mips/generic.md: Change reservations using \"xfer\" to use\n\t\"mfc,mtc\".\n\t* config/mips/sb1.md (ir_sb1_mtxfer): Use \"mtc\" instead of\n\tusing match_operand.\n\t(ir_sb1_mfxfer): Use \"mfc\" instead of using match_operand.\n\t* config/mips/sr71k.md (ir_sr70_xfer_from): Use \"mfc\" instead of\n\texamining mode.\n\t(ir_sr70_xfer_to): Use \"mtc\" instead of examining mode.\n\nFrom-SVN: r123164", "tree": {"sha": "f080f1d15e8f6c996c1bc90396c01b53fa475cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f080f1d15e8f6c996c1bc90396c01b53fa475cc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f2f9797020ba9e87d0dd7997abb7530aea4f3fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2f9797020ba9e87d0dd7997abb7530aea4f3fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2f9797020ba9e87d0dd7997abb7530aea4f3fb"}], "stats": {"total": 97, "additions": 58, "deletions": 39}, "files": [{"sha": "8402d6a76a4ee30f4c3e4fc18167d4628827fa43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -1,3 +1,25 @@\n+2007-03-23  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/mips/mips.md (type, hazard, *movdi_32bit,\n+\t*movdi_gp32_fp64, *movdi_64bit, *movsi_internal, movcc,\n+\t*movhi_internal, *movqi_internal, *movsf_hardfloat,\n+\t*movdf_hardfloat_64bit, *movdf_hardfloat_32bit, *movdf_softfloat,\n+\tmovv2sf_hardfloat_64bit, load_df_low, load_df_high, store_df_high,\n+\tmthc1, mfhc1): Change xfer instruction type to mfc and mtc, as\n+\tapplicable.\n+\t(movcc): Change first xfer to multi.\n+\t* config/mips/24k.md, config/mips/4100.md, config/mips/4300.md,\n+\tconfig/mips/5000.md, config/mips/5400.md, config/mips/5500.md,\n+\tconfig/mips/5k.md, config/mips/7000.md, config/mips/9000.md,\n+\tconfig/mips/generic.md: Change reservations using \"xfer\" to use\n+\t\"mfc,mtc\".\n+\t* config/mips/sb1.md (ir_sb1_mtxfer): Use \"mtc\" instead of\n+\tusing match_operand.\n+\t(ir_sb1_mfxfer): Use \"mfc\" instead of using match_operand.\n+\t* config/mips/sr71k.md (ir_sr70_xfer_from): Use \"mfc\" instead of\n+\texamining mode.\n+\t(ir_sr70_xfer_to): Use \"mtc\" instead of examining mode.\n+\n 2007-03-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c: Remove unnecessary function declarations."}, {"sha": "79b74ca8f8b282b733bbab55a45fde94b5132b57", "filename": "gcc/config/mips/24k.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F24k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F24k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F24k.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -319,7 +319,7 @@\n ;; fxfer (mfc1, mfhc1, mtc1, mthc1)\n (define_insn_reservation \"r24k_fxfer\" 4\n   (and (eq_attr \"cpu\" \"24kf\")\n-       (eq_attr \"type\" \"xfer\"))\n+       (eq_attr \"type\" \"mfc,mtc\"))\n   \"r24k_fpu_iss\")\n \n ;; --------------------------------------------------------------\n@@ -435,7 +435,7 @@\n ;; fxfer (mfc1, mfhc1, mtc1, mthc1)\n (define_insn_reservation \"r24kx_fxfer\" 2\n   (and (eq_attr \"cpu\" \"24kx\")\n-       (eq_attr \"type\" \"xfer\"))\n+       (eq_attr \"type\" \"mfc,mtc\"))\n   \"r24kx_fpu_iss\")\n \n ;; --------------------------------------------------------------"}, {"sha": "0b317accfaf71126622dc105f7d47fc8a484a55a", "filename": "gcc/config/mips/4100.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F4100.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F4100.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4100.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -24,7 +24,7 @@\n \n (define_insn_reservation \"r4100_load\" 2\n   (and (eq_attr \"cpu\" \"r4100,r4120\")\n-       (eq_attr \"type\" \"load,fpload,fpidxload,xfer\"))\n+       (eq_attr \"type\" \"load,fpload,fpidxload,mfc,mtc\"))\n   \"alu\")\n \n (define_insn_reservation \"r4100_imul_si\" 1"}, {"sha": "c3edeaefb8b1ee33fda43f9985ee1a5112d196a7", "filename": "gcc/config/mips/4300.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F4300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F4300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4300.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -24,7 +24,7 @@\n \n (define_insn_reservation \"r4300_load\" 2\n   (and (eq_attr \"cpu\" \"r4300\")\n-       (eq_attr \"type\" \"load,fpload,fpidxload,xfer\"))\n+       (eq_attr \"type\" \"load,fpload,fpidxload,mfc,mtc\"))\n   \"alu\")\n \n (define_insn_reservation \"r4300_imul_si\" 5"}, {"sha": "bcd50ea4ff7cc6b3e4188ae84e40174e38537977", "filename": "gcc/config/mips/5000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5000.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -24,7 +24,7 @@\n \n (define_insn_reservation \"r5k_load\" 2\n   (and (eq_attr \"cpu\" \"r5000\")\n-       (eq_attr \"type\" \"load,fpload,fpidxload,xfer\"))\n+       (eq_attr \"type\" \"load,fpload,fpidxload,mfc,mtc\"))\n   \"alu\")\n \n (define_insn_reservation \"r5k_imul_si\" 5"}, {"sha": "91c14af90814cdeb1bcd07aa9eeab9a165ac66ee", "filename": "gcc/config/mips/5400.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5400.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5400.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5400.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -50,7 +50,7 @@\n ;; Move to/from FPU registers\n (define_insn_reservation \"ir_vr54_xfer\" 2\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (eq_attr \"type\" \"xfer\"))\n+       (eq_attr \"type\" \"mfc,mtc\"))\n   \"vr54_dp0|vr54_dp1\")\n \n (define_insn_reservation \"ir_vr54_hilo\" 1"}, {"sha": "16bb222b783fc7b523bb793f8c9e6bf43b287e2a", "filename": "gcc/config/mips/5500.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5500.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -51,7 +51,7 @@\n ;; Move to/from FPU registers\n (define_insn_reservation \"ir_vr55_xfer\" 2\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"xfer\"))\n+       (eq_attr \"type\" \"mfc,mtc\"))\n   \"vr55_dp0|vr55_dp1\")\n \n (define_insn_reservation \"ir_vr55_arith\" 1"}, {"sha": "e56f4e0422316b2a8a44116041487c7523067e8a", "filename": "gcc/config/mips/5k.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F5k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5k.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -226,5 +226,5 @@\n ;; fxfer (mfc1, mfhc1, mtc1, mthc1) - single issue\n (define_insn_reservation \"r5kf_fxfer\" 2\n   (and (eq_attr \"cpu\" \"5kf\")\n-       (eq_attr \"type\" \"xfer\"))\n+       (eq_attr \"type\" \"mfc,mtc\"))\n   \"r5k_ixu_arith+r5kf_fpu_arith\")"}, {"sha": "71d0d8aed44934ca4fa498a03480a509ed7ac969", "filename": "gcc/config/mips/7000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F7000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F7000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F7000.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -146,7 +146,7 @@\n ;; Move to/from fp coprocessor.\n (define_insn_reservation \"rm7_ixfer\" 2\n   (and (eq_attr \"cpu\" \"r7000\")\n-       (eq_attr \"type\" \"xfer\"))\n+       (eq_attr \"type\" \"mfc,mtc\"))\n   \"rm7_iaddsub\")\n \n (define_insn_reservation \"rm7_ibr\" 3"}, {"sha": "5b45fae729e82c501ad46a09f1da307428ac47eb", "filename": "gcc/config/mips/9000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F9000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2F9000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F9000.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -98,7 +98,7 @@\n \n (define_insn_reservation \"rm9k_xfer\" 2\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (eq_attr \"type\" \"xfer\"))\n+       (eq_attr \"type\" \"mfc,mtc\"))\n   \"rm9k_m\")\n \n (define_insn_reservation \"rm9k_fquick\" 2"}, {"sha": "0b48230de19c29942e0c101c4e7d1c9de18563ed", "filename": "gcc/config/mips/generic.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fgeneric.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fgeneric.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgeneric.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -36,7 +36,7 @@\n   \"alu\")\n \n (define_insn_reservation \"generic_xfer\" 2\n-  (eq_attr \"type\" \"xfer\")\n+  (eq_attr \"type\" \"mfc,mtc\")\n   \"alu\")\n \n (define_insn_reservation \"generic_branch\" 1"}, {"sha": "9d07cec4d913af3477814b72221a469951376bfb", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -245,7 +245,8 @@\n ;; prefetch\tmemory prefetch (register + offset)\n ;; prefetchx\tmemory indexed prefetch (register + register)\n ;; condmove\tconditional moves\n-;; xfer\t\ttransfer to/from coprocessor\n+;; mfc\t\ttransfer from coprocessor\n+;; mtc\t\ttransfer to coprocessor\n ;; mthilo\ttransfer to hi/lo registers\n ;; mfhilo\ttransfer from hi/lo registers\n ;; const\tload constant\n@@ -277,7 +278,7 @@\n ;; multi\tmultiword sequence (or user asm statements)\n ;; nop\t\tno operation\n (define_attr \"type\"\n-  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,condmove,xfer,mthilo,mfhilo,const,arith,shift,slt,clz,trap,imul,imul3,imadd,idiv,fmove,fadd,fmul,fmadd,fdiv,frdiv,frdiv1,frdiv2,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,frsqrt1,frsqrt2,multi,nop\"\n+  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,condmove,mfc,mtc,mthilo,mfhilo,const,arith,shift,slt,clz,trap,imul,imul3,imadd,idiv,fmove,fadd,fmul,fmadd,fdiv,frdiv,frdiv1,frdiv2,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,frsqrt1,frsqrt2,multi,nop\"\n   (cond [(eq_attr \"jal\" \"!unset\") (const_string \"call\")\n \t (eq_attr \"got\" \"load\") (const_string \"load\")]\n \t(const_string \"unknown\")))\n@@ -406,7 +407,7 @@\n \t      (ne (symbol_ref \"ISA_HAS_LOAD_DELAY\") (const_int 0)))\n \t (const_string \"delay\")\n \n-\t (and (eq_attr \"type\" \"xfer\")\n+\t (and (eq_attr \"type\" \"mfc,mtc\")\n \t      (ne (symbol_ref \"ISA_HAS_XFER_DELAY\") (const_int 0)))\n \t (const_string \"delay\")\n \n@@ -3312,7 +3313,7 @@\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"arith,arith,load,store,mthilo,mfhilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"arith,arith,load,store,mthilo,mfhilo,mtc,load,mfc,store\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"   \"8,16,*,*,8,8,8,*,8,*\")])\n \n@@ -3323,7 +3324,7 @@\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"arith,arith,load,store,mthilo,mfhilo,fmove,xfer,fpload,xfer,fpstore\")\n+  [(set_attr \"type\"\t\"arith,arith,load,store,mthilo,mfhilo,fmove,mtc,fpload,mfc,fpstore\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"   \"8,16,*,*,8,8,4,8,*,8,*\")])\n \n@@ -3345,7 +3346,7 @@\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"arith,const,const,load,store,fmove,xfer,fpload,xfer,fpstore,mthilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"arith,const,const,load,store,fmove,mtc,fpload,mfc,fpstore,mthilo,mtc,load,mfc,store\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"4,*,*,*,*,4,4,*,4,*,4,8,*,8,*\")])\n \n@@ -3441,7 +3442,7 @@\n    && (register_operand (operands[0], SImode)\n        || reg_or_0_operand (operands[1], SImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"arith,const,const,load,store,fmove,xfer,fpload,xfer,fpstore,xfer,xfer,mthilo,mfhilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"arith,const,const,load,store,fmove,mtc,fpload,mfc,fpstore,mfc,mtc,mthilo,mfhilo,mtc,load,mfc,store\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"4,*,*,*,*,4,4,*,4,*,4,4,4,4,4,*,4,*\")])\n \n@@ -3542,7 +3543,7 @@\n \t(match_operand:CC 1 \"general_operand\" \"z,*d,*m,*d,*f,*d,*f,*m,*f\"))]\n   \"ISA_HAS_8CC && TARGET_HARD_FLOAT\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"xfer,arith,load,store,xfer,xfer,fmove,fpload,fpstore\")\n+  [(set_attr \"type\"\t\"multi,arith,load,store,mfc,mtc,fmove,fpload,fpstore\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8,4,*,*,4,4,4,*,*\")])\n \n@@ -3642,7 +3643,7 @@\n     mtc1\\t%1,%0\n     mov.s\\t%0,%1\n     mt%0\\t%1\"\n-  [(set_attr \"type\"\t\"arith,arith,load,store,xfer,xfer,fmove,mthilo\")\n+  [(set_attr \"type\"\t\"arith,arith,load,store,mfc,mtc,fmove,mthilo\")\n    (set_attr \"mode\"\t\"HI\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,4\")])\n \n@@ -3749,7 +3750,7 @@\n     mtc1\\t%1,%0\n     mov.s\\t%0,%1\n     mt%0\\t%1\"\n-  [(set_attr \"type\"\t\"arith,arith,load,store,xfer,xfer,fmove,mthilo\")\n+  [(set_attr \"type\"\t\"arith,arith,load,store,mfc,mtc,fmove,mthilo\")\n    (set_attr \"mode\"\t\"QI\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,4\")])\n \n@@ -3819,7 +3820,7 @@\n    && (register_operand (operands[0], SFmode)\n        || reg_or_0_operand (operands[1], SFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"fmove,xfer,fpload,fpstore,store,xfer,xfer,arith,load,store\")\n+  [(set_attr \"type\"\t\"fmove,mtc,fpload,fpstore,store,mtc,mfc,arith,load,store\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4,4,*,*,*,4,4,4,*,*\")])\n \n@@ -3864,7 +3865,7 @@\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"fmove,xfer,fpload,fpstore,store,xfer,xfer,arith,load,store\")\n+  [(set_attr \"type\"\t\"fmove,mtc,fpload,fpstore,store,mtc,mfc,arith,load,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"4,4,*,*,*,4,4,4,*,*\")])\n \n@@ -3876,7 +3877,7 @@\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"fmove,xfer,fpload,fpstore,store,xfer,xfer,arith,load,store\")\n+  [(set_attr \"type\"\t\"fmove,mtc,fpload,fpstore,store,mtc,mfc,arith,load,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"4,8,*,*,*,8,8,8,*,*\")])\n \n@@ -3887,7 +3888,7 @@\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"arith,load,store,xfer,xfer,fmove\")\n+  [(set_attr \"type\"\t\"arith,load,store,mfc,mtc,fmove\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"8,*,*,4,4,4\")])\n \n@@ -3958,7 +3959,7 @@\n    && (register_operand (operands[0], V2SFmode)\n        || reg_or_0_operand (operands[1], V2SFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\" \"fmove,xfer,fpload,fpstore,store,xfer,xfer,arith,load,store\")\n+  [(set_attr \"type\" \"fmove,mtc,fpload,fpstore,store,mtc,mfc,arith,load,store\")\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"length\" \"4,4,*,*,*,4,4,4,*,*\")])\n \n@@ -4018,7 +4019,7 @@\n   operands[0] = mips_subword (operands[0], 0);\n   return mips_output_move (operands[0], operands[1]);\n }\n-  [(set_attr \"type\"\t\"xfer,fpload\")\n+  [(set_attr \"type\"\t\"mtc,fpload\")\n    (set_attr \"mode\"\t\"SF\")])\n \n ;; Load the high word of operand 0 from operand 1, preserving the value\n@@ -4033,7 +4034,7 @@\n   operands[0] = mips_subword (operands[0], 1);\n   return mips_output_move (operands[0], operands[1]);\n }\n-  [(set_attr \"type\"\t\"xfer,fpload\")\n+  [(set_attr \"type\"\t\"mtc,fpload\")\n    (set_attr \"mode\"\t\"SF\")])\n \n ;; Store the high word of operand 1 in operand 0.  The corresponding\n@@ -4047,7 +4048,7 @@\n   operands[1] = mips_subword (operands[1], 1);\n   return mips_output_move (operands[0], operands[1]);\n }\n-  [(set_attr \"type\"\t\"xfer,fpstore\")\n+  [(set_attr \"type\"\t\"mfc,fpstore\")\n    (set_attr \"mode\"\t\"SF\")])\n \n ;; Move operand 1 to the high word of operand 0 using mthc1, preserving the\n@@ -4059,7 +4060,7 @@\n \t\t    UNSPEC_MTHC1))]\n   \"TARGET_HARD_FLOAT && !TARGET_64BIT && ISA_HAS_MXHC1\"\n   \"mthc1\\t%z1,%0\"\n-  [(set_attr \"type\"\t\"xfer\")\n+  [(set_attr \"type\"\t\"mtc\")\n    (set_attr \"mode\"\t\"SF\")])\n \n ;; Move high word of operand 1 to operand 0 using mfhc1.  The corresponding\n@@ -4070,7 +4071,7 @@\n \t\t    UNSPEC_MFHC1))]\n   \"TARGET_HARD_FLOAT && !TARGET_64BIT && ISA_HAS_MXHC1\"\n   \"mfhc1\\t%0,%1\"\n-  [(set_attr \"type\"\t\"xfer\")\n+  [(set_attr \"type\"\t\"mfc\")\n    (set_attr \"mode\"\t\"SF\")])\n \n ;; Insn to initialize $gp for n32/n64 abicalls.  Operand 0 is the offset"}, {"sha": "5d06a86456a0c8a32a733f17bca9ce4e935a3de3", "filename": "gcc/config/mips/sb1.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fsb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fsb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsb1.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -415,16 +415,14 @@\n \n (define_insn_reservation \"ir_sb1_mtxfer\" 5\n   (and (eq_attr \"cpu\" \"sb1,sb1a\")\n-       (and (eq_attr \"type\" \"xfer\")\n-\t    (match_operand 0 \"fpr_operand\")))\n+       (eq_attr \"type\" \"mtc\"))\n   \"sb1_fp0\")\n \n ;; mfc1 latency 1 cycle.  \n \n (define_insn_reservation \"ir_sb1_mfxfer\" 1\n   (and (eq_attr \"cpu\" \"sb1,sb1a\")\n-       (and (eq_attr \"type\" \"xfer\")\n-\t    (not (match_operand 0 \"fpr_operand\"))))\n+       (eq_attr \"type\" \"mfc\"))\n   \"sb1_fp0\")\n \n ;; ??? Can deliver at most 1 result per every 6 cycles because of issue"}, {"sha": "6bf43966a309fd71de5e7b13423abaa47346929f", "filename": "gcc/config/mips/sr71k.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fsr71k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4/gcc%2Fconfig%2Fmips%2Fsr71k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsr71k.md?ref=00f9e1ca8e1ae954e82c0fa4e4ae90c4ad9c57f4", "patch": "@@ -173,14 +173,12 @@\n ;; resources simultaneously\n (define_insn_reservation \"ir_sr70_xfer_from\" 6\n   (and (eq_attr \"cpu\" \"sr71000\")\n-       (and (eq_attr \"type\" \"xfer\")\n-\t    (eq_attr \"mode\" \"!SF,DF,FPSW\")))\n+       (eq_attr \"type\" \"mfc\"))\n   \"(cpu_iss+cp1_iss),(fpu_mov+ri_mem)\")\n \n (define_insn_reservation \"ir_sr70_xfer_to\" 9\n   (and (eq_attr \"cpu\" \"sr71000\")\n-       (and (eq_attr \"type\" \"xfer\")\n-\t    (eq_attr \"mode\" \"SF,DF\")))\n+       (eq_attr \"type\" \"mtc\"))\n   \"(cpu_iss+cp1_iss),(ri_mem+rf_ldmem)\")\n \n (define_insn_reservation \"ir_sr70_hilo\" 1"}]}