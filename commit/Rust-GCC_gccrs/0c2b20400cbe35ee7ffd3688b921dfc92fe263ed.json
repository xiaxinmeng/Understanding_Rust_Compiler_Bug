{"sha": "0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMyYjIwNDAwY2JlMzVlZTdmZmQzNjg4YjkyMWRmYzkyZmUyNjNlZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-04-29T14:12:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-04-29T14:12:54Z"}, "message": "re PR middle-end/57103 (ICE: verify_gimple failed: location references block not in block tree with -ftree-parallelize-loops=4)\n\n2013-04-29  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/57103\n\t* tree-cfg.c (move_stmt_op): Fix condition under which to update\n\tTREE_BLOCK.\n\t(move_stmt_r): Remove redundant checking.\n\n\t* gcc.dg/autopar/pr57103.c: New testcase.\n\nFrom-SVN: r198418", "tree": {"sha": "86c9f1c852b4ea96236a5e6c7f1d18cad40679b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86c9f1c852b4ea96236a5e6c7f1d18cad40679b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f12f6e9145ea69e9da7e9e180100e5ce7ca3ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f12f6e9145ea69e9da7e9e180100e5ce7ca3ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f12f6e9145ea69e9da7e9e180100e5ce7ca3ee9"}], "stats": {"total": 66, "additions": 45, "deletions": 21}, "files": [{"sha": "b84161bf16395620d4e9104e0b769fcc44d43b8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "patch": "@@ -1,3 +1,10 @@\n+2013-04-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/57103\n+\t* tree-cfg.c (move_stmt_op): Fix condition under which to update\n+\tTREE_BLOCK.\n+\t(move_stmt_r): Remove redundant checking.\n+\n 2013-04-29  Teresa Johnson  <tejohnson@google.com>\n \n \tPR bootstrap/57077"}, {"sha": "166d4e028ce9cc63374f9f8d021266ee653bec7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "patch": "@@ -1,3 +1,8 @@\n+2013-04-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/57103\n+\t* gcc.dg/autopar/pr57103.c: New testcase.\n+\n 2013-04-29  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* gcc.dg/c1x-align-3.c: Add test for negative power of 2."}, {"sha": "fa7067607489d9e6212885c12a8307e13dc5b7c2", "filename": "gcc/testsuite/gcc.dg/autopar/pr57103.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr57103.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr57103.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr57103.c?ref=0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-parallelize-loops=4\" } */\n+\n+int d[1024];\n+\n+static inline int foo (void)\n+{\n+  int s = 0;\n+  int i = 0;\n+  for (; i < 1024; i++)\n+    s += d[i];\n+  return s;\n+}\n+\n+void bar (void)\n+{\n+  if (foo ())\n+    __builtin_abort ();\n+}"}, {"sha": "9b00248ece6ef6ff6e0dada79f7a4aee8cb47547", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2b20400cbe35ee7ffd3688b921dfc92fe263ed/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=0c2b20400cbe35ee7ffd3688b921dfc92fe263ed", "patch": "@@ -6153,10 +6153,19 @@ move_stmt_op (tree *tp, int *walk_subtrees, void *data)\n \n   if (EXPR_P (t))\n     {\n-      if (TREE_BLOCK (t) == p->orig_block\n+      tree block = TREE_BLOCK (t);\n+      if (block == p->orig_block\n \t  || (p->orig_block == NULL_TREE\n-\t  && TREE_BLOCK (t) == NULL_TREE))\n+\t      && block != NULL_TREE))\n \tTREE_SET_BLOCK (t, p->new_block);\n+#ifdef ENABLE_CHECKING\n+      else if (block != NULL_TREE)\n+\t{\n+\t  while (block && TREE_CODE (block) == BLOCK && block != p->orig_block)\n+\t    block = BLOCK_SUPERCONTEXT (block);\n+\t  gcc_assert (block == p->orig_block);\n+\t}\n+#endif\n     }\n   else if (DECL_P (t) || TREE_CODE (t) == SSA_NAME)\n     {\n@@ -6241,18 +6250,10 @@ move_stmt_r (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n   gimple stmt = gsi_stmt (*gsi_p);\n   tree block = gimple_block (stmt);\n \n-  if (p->orig_block == NULL_TREE\n-      || block == p->orig_block\n-      || block == NULL_TREE)\n+  if (block == p->orig_block\n+      || (p->orig_block == NULL_TREE\n+\t  && block != NULL_TREE))\n     gimple_set_block (stmt, p->new_block);\n-#ifdef ENABLE_CHECKING\n-  else if (block != p->new_block)\n-    {\n-      while (block && block != p->orig_block)\n-\tblock = BLOCK_SUPERCONTEXT (block);\n-      gcc_assert (block);\n-    }\n-#endif\n \n   switch (gimple_code (stmt))\n     {\n@@ -6486,14 +6487,6 @@ move_block_to_fn (struct function *dest_cfun, basic_block bb,\n \t  e->goto_locus = d->new_block ?\n \t      COMBINE_LOCATION_DATA (line_table, e->goto_locus, d->new_block) :\n \t      LOCATION_LOCUS (e->goto_locus);\n-#ifdef ENABLE_CHECKING\n-\telse if (block != d->new_block)\n-\t  {\n-\t    while (block && block != d->orig_block)\n-\t      block = BLOCK_SUPERCONTEXT (block);\n-\t    gcc_assert (block);\n-\t  }\n-#endif\n       }\n }\n "}]}