{"sha": "bef69eb57d7958e119fa581b376c6e05cb838c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVmNjllYjU3ZDc5NThlMTE5ZmE1ODFiMzc2YzZlMDVjYjgzOGMzOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-17T12:38:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-17T12:38:47Z"}, "message": "common.opt (ftree-loop-if-convert-stores): Mark as preserved for backward compatibility.\n\n2016-11-17  Richard Biener  <rguenther@suse.de>\n\n\t* common.opt (ftree-loop-if-convert-stores): Mark as preserved for\n\tbackward compatibility.\n\t* doc/invoke.texi (ftree-loop-if-convert-stores): Remove.\n\t* tree-if-conv.c (pass_if_conversion::gate): Do not test\n\tflag_tree_loop_if_convert_stores.\n\t(pass_if_conversion::execute): Likewise.\n\nFrom-SVN: r242542", "tree": {"sha": "01abd7f17d9a9481753fcc1c88bf79d8895ab390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01abd7f17d9a9481753fcc1c88bf79d8895ab390"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bef69eb57d7958e119fa581b376c6e05cb838c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef69eb57d7958e119fa581b376c6e05cb838c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bef69eb57d7958e119fa581b376c6e05cb838c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef69eb57d7958e119fa581b376c6e05cb838c38/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c90928c8d6a1837696fbf5daf0016ed0e675a3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c90928c8d6a1837696fbf5daf0016ed0e675a3b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c90928c8d6a1837696fbf5daf0016ed0e675a3b7"}], "stats": {"total": 37, "additions": 13, "deletions": 24}, "files": [{"sha": "e07caaa2623481e4a1a9ffd23cfe001d004301dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bef69eb57d7958e119fa581b376c6e05cb838c38", "patch": "@@ -1,3 +1,12 @@\n+2016-11-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* common.opt (ftree-loop-if-convert-stores): Mark as preserved for\n+\tbackward compatibility.\n+\t* doc/invoke.texi (ftree-loop-if-convert-stores): Remove.\n+\t* tree-if-conv.c (pass_if_conversion::gate): Do not test\n+\tflag_tree_loop_if_convert_stores.\n+\t(pass_if_conversion::execute): Likewise.\n+\n 2016-11-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/predicates.md (aarch64_reg_or_fp_zero): Check for"}, {"sha": "1fa3629f54848d516a6b346d64172f1a6f5da92b", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=bef69eb57d7958e119fa581b376c6e05cb838c38", "patch": "@@ -1526,8 +1526,8 @@ Common Report Var(flag_tree_loop_if_convert) Init(-1) Optimization\n Convert conditional jumps in innermost loops to branchless equivalents.\n \n ftree-loop-if-convert-stores\n-Common Report Var(flag_tree_loop_if_convert_stores) Optimization\n-Also if-convert conditional jumps containing memory writes.\n+Common Ignore\n+Does nothing. Preserved for backward compatibility.\n \n ; -finhibit-size-directive inhibits output of .size for ELF.\n ; This is used only for compiling crtstuff.c,"}, {"sha": "e6c3dc267cff99e14b2299bc9d33e8fdeebe39d2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bef69eb57d7958e119fa581b376c6e05cb838c38", "patch": "@@ -412,7 +412,7 @@ Objective-C and Objective-C++ Dialects}.\n -ftree-builtin-call-dce -ftree-ccp -ftree-ch @gol\n -ftree-coalesce-vars -ftree-copy-prop -ftree-dce -ftree-dominator-opts @gol\n -ftree-dse -ftree-forwprop -ftree-fre -fcode-hoisting -ftree-loop-if-convert @gol\n--ftree-loop-if-convert-stores -ftree-loop-im @gol\n+-ftree-loop-im @gol\n -ftree-phiprop -ftree-loop-distribution -ftree-loop-distribute-patterns @gol\n -ftree-loop-ivcanon -ftree-loop-linear -ftree-loop-optimize @gol\n -ftree-loop-vectorize @gol\n@@ -8061,24 +8061,6 @@ the innermost loops in order to improve the ability of the\n vectorization pass to handle these loops.  This is enabled by default\n if vectorization is enabled.\n \n-@item -ftree-loop-if-convert-stores\n-@opindex ftree-loop-if-convert-stores\n-Attempt to also if-convert conditional jumps containing memory writes.\n-This transformation can be unsafe for multi-threaded programs as it\n-transforms conditional memory writes into unconditional memory writes.\n-For example,\n-@smallexample\n-for (i = 0; i < N; i++)\n-  if (cond)\n-    A[i] = expr;\n-@end smallexample\n-is transformed to\n-@smallexample\n-for (i = 0; i < N; i++)\n-  A[i] = cond ? expr : A[i];\n-@end smallexample\n-potentially producing data races.\n-\n @item -ftree-loop-distribution\n @opindex ftree-loop-distribution\n Perform loop distribution.  This flag can improve cache performance on"}, {"sha": "dc97fc498dfa4494e8479d3d4cd1aa6aa7023fc1", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef69eb57d7958e119fa581b376c6e05cb838c38/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=bef69eb57d7958e119fa581b376c6e05cb838c38", "patch": "@@ -2872,8 +2872,7 @@ pass_if_conversion::gate (function *fun)\n {\n   return (((flag_tree_loop_vectorize || fun->has_force_vectorize_loops)\n \t   && flag_tree_loop_if_convert != 0)\n-\t  || flag_tree_loop_if_convert == 1\n-\t  || flag_tree_loop_if_convert_stores == 1);\n+\t  || flag_tree_loop_if_convert == 1);\n }\n \n unsigned int\n@@ -2887,7 +2886,6 @@ pass_if_conversion::execute (function *fun)\n \n   FOR_EACH_LOOP (loop, 0)\n     if (flag_tree_loop_if_convert == 1\n-\t|| flag_tree_loop_if_convert_stores == 1\n \t|| ((flag_tree_loop_vectorize || loop->force_vectorize)\n \t    && !loop->dont_vectorize))\n       todo |= tree_if_conversion (loop);"}]}