{"sha": "fdd79c58a2938ccd78e94332a102e74865d2a964", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRkNzljNThhMjkzOGNjZDc4ZTk0MzMyYTEwMmU3NDg2NWQyYTk2NA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:36:49Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:36:49Z"}, "message": "(lshldi3, lshrdi3): Define.\n\nFrom-SVN: r4035", "tree": {"sha": "d16f84626c00660123289f788cc80bdc3f1ce328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d16f84626c00660123289f788cc80bdc3f1ce328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdd79c58a2938ccd78e94332a102e74865d2a964", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd79c58a2938ccd78e94332a102e74865d2a964", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd79c58a2938ccd78e94332a102e74865d2a964", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd79c58a2938ccd78e94332a102e74865d2a964/comments", "author": null, "committer": null, "parents": [{"sha": "8fad1c106d6c86458084e38ed5df27efe81b5ea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fad1c106d6c86458084e38ed5df27efe81b5ea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fad1c106d6c86458084e38ed5df27efe81b5ea1"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "12d75e332f9826d5bc17338e55eeac16a6ece480", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd79c58a2938ccd78e94332a102e74865d2a964/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd79c58a2938ccd78e94332a102e74865d2a964/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=fdd79c58a2938ccd78e94332a102e74865d2a964", "patch": "@@ -2532,6 +2532,46 @@\n   \"\"\n   \"sll %1,%2,%0\")\n \n+(define_expand \"lshldi3\"\n+  [(parallel [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t\t   (lshift:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t      (match_operand:DI 2 \"const_int_operand\" \"\")))\n+\t      (clobber (match_scratch:SI 3 \"\"))])]\n+  \"\"\n+  \"\n+{\n+  if (GET_CODE (operands[2]) != CONST_INT)\n+    FAIL;\n+}\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(lshift:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"const_int_operand\" \"I\")))\n+   (clobber (match_scratch:SI 3 \"=r\"))]\n+  \"INTVAL (operands[2]) < 32\"\n+  \"*\n+{\n+  operands[4] = GEN_INT (32 - INTVAL (operands[2]));\n+  return \\\"srl %R1,%4,%3\\;sll %R1,%2,%R0\\;sll %1,%2,%0\\;or %3,%0,%0\\\";\n+}\"\n+ [(set_attr \"type\" \"multi\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(lshift:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"const_int_operand\" \"I\")))\n+   (clobber (match_scratch:SI 3 \"=X\"))]\n+  \"INTVAL (operands[2]) >= 32\"\n+  \"*\n+{\n+  operands[4] = GEN_INT (INTVAL (operands[2]) - 32);\n+  return \\\"sll %R1,%4,%0\\;mov %%g0,%R0\\\";\n+}\"\n+ [(set_attr \"type\" \"multi\")\n+  (set_attr \"length\" \"2\")])\n+\n (define_insn \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n@@ -2545,6 +2585,46 @@\n \t\t     (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n   \"srl %1,%2,%0\")\n+\n+(define_expand \"lshrdi3\"\n+  [(parallel [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t\t   (lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t\t(match_operand:DI 2 \"const_int_operand\" \"\")))\n+\t      (clobber (match_scratch:SI 3 \"\"))])]\n+  \"\"\n+  \"\n+{\n+  if (GET_CODE (operands[2]) != CONST_INT)\n+    FAIL;\n+}\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"const_int_operand\" \"I\")))\n+   (clobber (match_scratch:SI 3 \"=r\"))]\n+  \"INTVAL (operands[2]) < 32\"\n+  \"*\n+{\n+  operands[4] = GEN_INT (32 - INTVAL (operands[2]));\n+  return \\\"sll %1,%4,%3\\;srl %1,%2,%0\\;srl %R1,%2,%R0\\;or %3,%R0,%R0\\\";\n+}\"\n+ [(set_attr \"type\" \"multi\")\n+  (set_attr \"length\" \"4\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"const_int_operand\" \"I\")))\n+   (clobber (match_scratch:SI 3 \"=X\"))]\n+  \"INTVAL (operands[2]) >= 32\"\n+  \"*\n+{\n+  operands[4] = GEN_INT (INTVAL (operands[2]) - 32);\n+  return \\\"srl %1,%4,%R0\\;mov %%g0,%0\\\";\n+}\"\n+ [(set_attr \"type\" \"multi\")\n+  (set_attr \"length\" \"2\")])\n \f\n ;; Unconditional and other jump instructions\n ;; On the Sparc, by setting the annul bit on an unconditional branch, the"}]}