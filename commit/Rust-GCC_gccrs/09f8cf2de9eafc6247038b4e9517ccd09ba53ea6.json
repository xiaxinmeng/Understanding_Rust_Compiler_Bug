{"sha": "09f8cf2de9eafc6247038b4e9517ccd09ba53ea6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlmOGNmMmRlOWVhZmM2MjQ3MDM4YjRlOTUxN2NjZDA5YmE1M2VhNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2005-01-28T17:32:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-01-28T17:32:57Z"}, "message": "re PR middle-end/16558 (bogus missing-return warning)\n\n\tPR middle-end/16558\n\tPR middle-end/19583\n\t* gimple-low.c (block_may_fallthru): TRY_FINALLY_EXPR only falls\n\tthrough if both operands fall through.\n\nFrom-SVN: r94381", "tree": {"sha": "6d6a388ad6a6b5ea928aaa1b993c788e29f3c7e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d6a388ad6a6b5ea928aaa1b993c788e29f3c7e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91e390fe3dd2e1ec29b6742c69a83d687f135657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e390fe3dd2e1ec29b6742c69a83d687f135657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91e390fe3dd2e1ec29b6742c69a83d687f135657"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "97410c0c10fdb7d68f88043db6228a637282ba07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09f8cf2de9eafc6247038b4e9517ccd09ba53ea6", "patch": "@@ -1,3 +1,10 @@\n+2005-01-28  Ian Lance Taylor  <ian@airs.com>\n+\n+\tPR middle-end/16558\n+\tPR middle-end/19583\n+\t* gimple-low.c (block_may_fallthru): TRY_FINALLY_EXPR only falls\n+\tthrough if both operands fall through.\n+\n 2005-01-28  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cse.c (fold_rtx) <PC>: Don't optimize.\n@@ -95,7 +102,7 @@\n \t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Only iterate at -O2\n \tand better.\n \n-2005-01-27  Ian Lance Taylor  <ian@c2micro.com>\n+2005-01-27  Ian Lance Taylor  <ian@airs.com>\n \n \tPR middle-end/19583\n \t* gimple-low.c (try_catch_may_fallthru): New static function."}, {"sha": "6e60aebea765c39966d73644282d52dfc614cecd", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f8cf2de9eafc6247038b4e9517ccd09ba53ea6/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=09f8cf2de9eafc6247038b4e9517ccd09ba53ea6", "patch": "@@ -348,7 +348,15 @@ block_may_fallthru (tree block)\n       return try_catch_may_fallthru (stmt);\n \n     case TRY_FINALLY_EXPR:\n-      return block_may_fallthru (TREE_OPERAND (stmt, 1));\n+      /* The finally clause is always executed after the try clause,\n+\t so if it does not fall through, then the try-finally will not\n+\t fall through.  Otherwise, if the try clause does not fall\n+\t through, then when the finally clause falls through it will\n+\t resume execution wherever the try clause was going.  So the\n+\t whole try-finally will only fall through if both the try\n+\t clause and the finally clause fall through.  */\n+      return (block_may_fallthru (TREE_OPERAND (stmt, 0))\n+\t      && block_may_fallthru (TREE_OPERAND (stmt, 1)));\n \n     case MODIFY_EXPR:\n       if (TREE_CODE (TREE_OPERAND (stmt, 1)) == CALL_EXPR)"}]}