{"sha": "dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJjNGVjZmM1NzcyY2MyMWIyYTFmOTVlYzk3ZDE4NmQ3YjM1MGY4Zg==", "commit": {"author": {"name": "Volker Reichelt", "email": "v.reichelt@netcologne.de", "date": "2017-07-17T16:58:00Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2017-07-17T16:58:00Z"}, "message": "parser.c (cp_parser_decl_specifier_seq): Add fix-it hints for friend outside class and obsolete auto as...\n\n        * parser.c (cp_parser_decl_specifier_seq): Add fix-it hints for\n        friend outside class and obsolete auto as storage-class-specifier.\n\n        * g++.dg/diagnostic/friend1.C: New test.\n        * g++.dg/cpp0x/auto1.C: Add check for fix-it hint.\n\nFrom-SVN: r250282", "tree": {"sha": "ce133a70b7b0ed1ef50c49e0ff1fb510b8eb8b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce133a70b7b0ed1ef50c49e0ff1fb510b8eb8b3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/comments", "author": {"login": "VReichelt", "id": 85767072, "node_id": "MDQ6VXNlcjg1NzY3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/85767072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VReichelt", "html_url": "https://github.com/VReichelt", "followers_url": "https://api.github.com/users/VReichelt/followers", "following_url": "https://api.github.com/users/VReichelt/following{/other_user}", "gists_url": "https://api.github.com/users/VReichelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/VReichelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VReichelt/subscriptions", "organizations_url": "https://api.github.com/users/VReichelt/orgs", "repos_url": "https://api.github.com/users/VReichelt/repos", "events_url": "https://api.github.com/users/VReichelt/events{/privacy}", "received_events_url": "https://api.github.com/users/VReichelt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a64559a5fc0373710a6f3ae7a8b569b439146fde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a64559a5fc0373710a6f3ae7a8b569b439146fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a64559a5fc0373710a6f3ae7a8b569b439146fde"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "e46c128673207e7fa9368d76910ef108b5c16602", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "patch": "@@ -1,3 +1,8 @@\n+2017-07-17  Volker Reichelt  <v.reichelt@netcologne.de>\n+\n+\t* parser.c (cp_parser_decl_specifier_seq): Add fix-it hints for\n+\tfriend outside class and obsolete auto as storage-class-specifier.\n+\n 2017-07-17  Nathan Sidwell  <nathan@acm.org>\n \n \t* class.c (maybe_warn_about_overly_private_class): Ignore public"}, {"sha": "88d0b2b250d649ed2e4d5e0cc81ca480f15de124", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "patch": "@@ -13382,7 +13382,9 @@ cp_parser_decl_specifier_seq (cp_parser* parser,\n \tcase RID_FRIEND:\n \t  if (!at_class_scope_p ())\n \t    {\n-\t      error_at (token->location, \"%<friend%> used outside of class\");\n+\t      gcc_rich_location richloc (token->location);\n+\t      richloc.add_fixit_remove ();\n+\t      error_at_rich_loc (&richloc, \"%<friend%> used outside of class\");\n \t      cp_lexer_purge_token (parser->lexer);\n \t    }\n \t  else\n@@ -13444,10 +13446,13 @@ cp_parser_decl_specifier_seq (cp_parser* parser,\n \t      /* Consume the token.  */\n \t      cp_lexer_consume_token (parser->lexer);\n \n-              /* Complain about `auto' as a storage specifier, if\n-                 we're complaining about C++0x compatibility.  */\n-              warning_at (token->location, OPT_Wc__11_compat, \"%<auto%>\"\n-\t\t\t  \" changes meaning in C++11; please remove it\");\n+\t      /* Complain about `auto' as a storage specifier, if\n+\t\t we're complaining about C++0x compatibility.  */\n+\t      gcc_rich_location richloc (token->location);\n+\t      richloc.add_fixit_remove ();\n+\t      warning_at_rich_loc (&richloc, OPT_Wc__11_compat,\n+\t\t\t\t   \"%<auto%> changes meaning in C++11; \"\n+\t\t\t\t   \"please remove it\");\n \n               /* Set the storage class anyway.  */\n               cp_parser_set_storage_class (parser, decl_specs, RID_AUTO,"}, {"sha": "ebd6eaf1ff1a989c3a00d07b4f8255c924dab6d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "patch": "@@ -1,3 +1,8 @@\n+2017-07-17  Volker Reichelt  <v.reichelt@netcologne.de>\n+\n+\t* g++.dg/diagnostic/friend1.C: New test.\n+\t* g++.dg/cpp0x/auto1.C: Add check for fix-it hint.\n+\n 2017-07-17  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/warn/ctor-dtor-privacy-3.C: New."}, {"sha": "dd8f5fc8cf924137800c08b866d4dbd07ccebdb6", "filename": "gcc/testsuite/g++.dg/cpp0x/auto1.C", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C?ref=dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "patch": "@@ -1,9 +1,14 @@\n // { dg-do compile { target c++11 } }\n-// { dg-options \"-std=c++98 -Wc++11-compat\" }\n+// { dg-options \"-std=c++98 -Wc++11-compat -fdiagnostics-show-caret\" }\n \n // Test warning for use of auto in C++98 mode with C++11\n // compatibility warnings\n void f()\n {\n-  auto int x = 5; // { dg-warning \"changes meaning\" }\n+  auto int x = 5; /* { dg-warning \"changes meaning\" }\n+  { dg-begin-multiline-output \"\" }\n+   auto int x = 5;\n+   ^~~~\n+   ----\n+  { dg-end-multiline-output \"\" } */\n }"}, {"sha": "a35f92ad949bb5f01c95a7d29ad648bb8a6150b4", "filename": "gcc/testsuite/g++.dg/diagnostic/friend1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Ffriend1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Ffriend1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Ffriend1.C?ref=dbc4ecfc5772cc21b2a1f95ec97d186d7b350f8f", "patch": "@@ -0,0 +1,8 @@\n+// { dg-options \"-fdiagnostics-show-caret\" }\n+\n+friend void foo();  /* { dg-error \"used outside of class\" }\n+  { dg-begin-multiline-output \"\" }\n+ friend void foo();\n+ ^~~~~~\n+ ------\n+  { dg-end-multiline-output \"\" } */"}]}