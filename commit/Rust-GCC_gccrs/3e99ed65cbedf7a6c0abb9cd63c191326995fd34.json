{"sha": "3e99ed65cbedf7a6c0abb9cd63c191326995fd34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U5OWVkNjVjYmVkZjdhNmMwYWJiOWNkNjNjMTkxMzI2OTk1ZmQzNA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-07-20T18:05:30Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-07-20T18:06:29Z"}, "message": "Regenerate .pot files.\n\ngcc/po/\n\t* gcc.pot: Regenerate.\n\nlibcpp/po/\n\t* cpplib.pot: Regenerate.", "tree": {"sha": "135d1822e25704e58d36cbd26ae73780e2c12797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/135d1822e25704e58d36cbd26ae73780e2c12797"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e99ed65cbedf7a6c0abb9cd63c191326995fd34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e99ed65cbedf7a6c0abb9cd63c191326995fd34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e99ed65cbedf7a6c0abb9cd63c191326995fd34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e99ed65cbedf7a6c0abb9cd63c191326995fd34/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0c5a642ce4e0d292706ac2139fc14785938f23e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c5a642ce4e0d292706ac2139fc14785938f23e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c5a642ce4e0d292706ac2139fc14785938f23e"}], "stats": {"total": 18719, "additions": 9646, "deletions": 9073}, "files": [{"sha": "99c40e911436b28cf9c62f3835fe404043545253", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 9519, "deletions": 8956, "changes": 18475, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e99ed65cbedf7a6c0abb9cd63c191326995fd34/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e99ed65cbedf7a6c0abb9cd63c191326995fd34/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=3e99ed65cbedf7a6c0abb9cd63c191326995fd34"}, {"sha": "81aa102aae4c7432358f86a0be890edbd03b83a1", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 127, "deletions": 117, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e99ed65cbedf7a6c0abb9cd63c191326995fd34/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e99ed65cbedf7a6c0abb9cd63c191326995fd34/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=3e99ed65cbedf7a6c0abb9cd63c191326995fd34", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: https://gcc.gnu.org/bugs/\\n\"\n-\"POT-Creation-Date: 2020-02-07 22:33+0000\\n\"\n+\"POT-Creation-Date: 2020-07-20 18:03+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -301,153 +301,147 @@ msgstr \"\"\n msgid \"file \\\"%s\\\" linemarker ignored due to incorrect nesting\"\n msgstr \"\"\n \n-#: directives.c:1162\n-#: directives.c:1164\n-#: directives.c:1166\n-#: directives.c:1754\n+#: directives.c:1178\n+#: directives.c:1180\n+#: directives.c:1182\n+#: directives.c:1770\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1190\n+#: directives.c:1206\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1253\n+#: directives.c:1269\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1262\n+#: directives.c:1278\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1280\n+#: directives.c:1296\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1283\n+#: directives.c:1299\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1286\n+#: directives.c:1302\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1316\n+#: directives.c:1332\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1533\n+#: directives.c:1549\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1556\n+#: directives.c:1572\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1613\n+#: directives.c:1629\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1668\n+#: directives.c:1684\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1677\n+#: directives.c:1693\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1696\n+#: directives.c:1712\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1721\n+#: directives.c:1737\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1725\n+#: directives.c:1741\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1749\n+#: directives.c:1765\n #, c-format\n msgid \"invalid \\\"#pragma GCC %s\\\" directive\"\n msgstr \"\"\n \n-#: directives.c:1950\n+#: directives.c:1966\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:2033\n+#: directives.c:2049\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:2038\n+#: directives.c:2054\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:2040\n-#: directives.c:2073\n+#: directives.c:2056\n+#: directives.c:2089\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:2066\n+#: directives.c:2082\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:2071\n+#: directives.c:2087\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:2102\n+#: directives.c:2118\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2178\n+#: directives.c:2194\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2196\n+#: directives.c:2212\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2208\n+#: directives.c:2224\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2238\n+#: directives.c:2254\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2241\n+#: directives.c:2257\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2323\n+#: directives.c:2339\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2604\n+#: directives.c:2620\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n \n-#: directives-only.c:221\n-#: lex.c:2879\n-#: traditional.c:174\n-msgid \"unterminated comment\"\n-msgstr \"\"\n-\n #: errors.c:291\n #, c-format\n msgid \"%s: %s\"\n@@ -622,15 +616,15 @@ msgstr \"\"\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n-#: files.c:576\n+#: files.c:571\n msgid \"one or more PCH files were found, but they were invalid\"\n msgstr \"\"\n \n-#: files.c:580\n+#: files.c:575\n msgid \"use -Winvalid-pch for more information\"\n msgstr \"\"\n \n-#: files.c:1004\n+#: files.c:1003\n #, c-format\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n@@ -639,38 +633,38 @@ msgstr \"\"\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:598\n+#: init.c:597\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:602\n+#: init.c:601\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:609\n+#: init.c:608\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:612\n+#: init.c:611\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:616\n+#: init.c:615\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:620\n+#: init.c:619\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:625\n+#: init.c:624\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:629\n+#: init.c:628\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n@@ -719,11 +713,11 @@ msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n #: lex.c:1375\n-msgid \"__VA_OPT__ is not available until C++2a\"\n+msgid \"__VA_OPT__ is not available until C++20\"\n msgstr \"\"\n \n #: lex.c:1382\n-msgid \"__VA_OPT__ can only appear in the expansion of a C++2a variadic macro\"\n+msgid \"__VA_OPT__ can only appear in the expansion of a C++20 variadic macro\"\n msgstr \"\"\n \n #: lex.c:1413\n@@ -748,249 +742,265 @@ msgstr \"\"\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1837\n+#: lex.c:1872\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1841\n+#: lex.c:1876\n msgid \"invalid new-line in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1845\n+#: lex.c:1880\n+#: lex.c:4265\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1894\n-#: lex.c:1916\n+#: lex.c:1918\n+#: lex.c:1941\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1936\n-#: lex.c:2065\n+#: lex.c:1963\n+#: lex.c:2092\n msgid \"\"\n \"invalid suffix on literal; C++11 requires a space between literal and string \"\n \"macro\"\n msgstr \"\"\n \n-#: lex.c:2048\n+#: lex.c:2075\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:2051\n+#: lex.c:2078\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2083\n+#: lex.c:2110\n msgid \"C++11 requires a space between string literal and macro\"\n msgstr \"\"\n \n-#: lex.c:2893\n+#: lex.c:2913\n+#: lex.c:4098\n+#: traditional.c:174\n+msgid \"unterminated comment\"\n+msgstr \"\"\n+\n #: lex.c:2927\n+#: lex.c:2961\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:2895\n-#: lex.c:2906\n-#: lex.c:2930\n+#: lex.c:2929\n+#: lex.c:2940\n+#: lex.c:2964\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:2904\n+#: lex.c:2938\n msgid \"C++ style comments are incompatible with C90\"\n msgstr \"\"\n \n-#: lex.c:2936\n+#: lex.c:2970\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:3330\n+#: lex.c:3364\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n+#: lex.c:4253\n+#, c-format\n+msgid \"raw string delimiter longer than %d characters\"\n+msgstr \"\"\n+\n+#: lex.c:4323\n+msgid \"unterminated literal\"\n+msgstr \"\"\n+\n #: macro.c:94\n msgid \"'##' cannot appear at either end of __VA_OPT__\"\n msgstr \"\"\n \n-#: macro.c:364\n+#: macro.c:388\n #, c-format\n msgid \"\\\"%s\\\" used outside of preprocessing directive\"\n msgstr \"\"\n \n-#: macro.c:374\n+#: macro.c:398\n #, c-format\n msgid \"missing '(' before \\\"%s\\\" operand\"\n msgstr \"\"\n \n-#: macro.c:389\n+#: macro.c:413\n #, c-format\n msgid \"operator \\\"%s\\\" requires a header-name\"\n msgstr \"\"\n \n-#: macro.c:406\n+#: macro.c:430\n #, c-format\n msgid \"missing ')' after \\\"%s\\\" operand\"\n msgstr \"\"\n \n-#: macro.c:426\n+#: macro.c:450\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:465\n-#: macro.c:723\n+#: macro.c:489\n+#: macro.c:747\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:472\n-#: macro.c:574\n+#: macro.c:496\n+#: macro.c:598\n #, c-format\n msgid \"macro \\\"%s\\\" might prevent reproducible builds\"\n msgstr \"\"\n \n-#: macro.c:503\n+#: macro.c:527\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:620\n+#: macro.c:644\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:636\n+#: macro.c:660\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:842\n+#: macro.c:866\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:904\n+#: macro.c:928\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:1030\n+#: macro.c:1054\n msgid \"\"\n \"ISO C++11 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1034\n+#: macro.c:1058\n msgid \"\"\n \"ISO C99 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1041\n+#: macro.c:1065\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:1046\n+#: macro.c:1070\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:1244\n-#: traditional.c:815\n+#: macro.c:1270\n+#: traditional.c:819\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1386\n+#: macro.c:1412\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:2165\n+#: macro.c:2190\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C+\"\n \"+98\"\n msgstr \"\"\n \n-#: macro.c:2173\n-#: macro.c:2182\n+#: macro.c:2198\n+#: macro.c:2207\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C90\"\n msgstr \"\"\n \n-#: macro.c:3141\n+#: macro.c:3164\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3223\n+#: macro.c:3246\n #, c-format\n msgid \"expected parameter name, found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3224\n+#: macro.c:3247\n #, c-format\n msgid \"expected ',' or ')', found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3225\n+#: macro.c:3248\n msgid \"expected parameter name before end of line\"\n msgstr \"\"\n \n-#: macro.c:3226\n+#: macro.c:3249\n msgid \"expected ')' before end of line\"\n msgstr \"\"\n \n-#: macro.c:3227\n+#: macro.c:3250\n msgid \"expected ')' after \\\"...\\\"\"\n msgstr \"\"\n \n-#: macro.c:3284\n+#: macro.c:3307\n msgid \"anonymous variadic macros were introduced in C++11\"\n msgstr \"\"\n \n-#: macro.c:3285\n-#: macro.c:3289\n+#: macro.c:3308\n+#: macro.c:3312\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:3295\n+#: macro.c:3318\n msgid \"ISO C++ does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3296\n+#: macro.c:3319\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3342\n+#: macro.c:3365\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:3380\n+#: macro.c:3403\n msgid \"ISO C++11 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3381\n+#: macro.c:3404\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3405\n+#: macro.c:3428\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3455\n+#: macro.c:3478\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:3606\n+#: macro.c:3629\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3611\n+#: macro.c:3634\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3715\n+#: macro.c:3738\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n@@ -1035,11 +1045,11 @@ msgstr \"\"\n msgid \"while reading precompiled header\"\n msgstr \"\"\n \n-#: traditional.c:884\n+#: traditional.c:888\n #, c-format\n msgid \"detected recursion whilst expanding macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: traditional.c:1107\n+#: traditional.c:1111\n msgid \"syntax error in macro parameter list\"\n msgstr \"\""}]}