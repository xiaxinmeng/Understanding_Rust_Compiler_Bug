{"sha": "37457866673a1ed44cec3395459dc0c4f0135da2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0NTc4NjY2NzNhMWVkNDRjZWMzMzk1NDU5ZGMwYzRmMDEzNWRhMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-07-19T17:28:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-19T17:28:13Z"}, "message": "re PR c++/49785 ([C++0x] ICE in coerce_template_parms)\n\n\tPR c++/49785\n\t* pt.c (coerce_template_parms): Handle non-pack after pack.\n\nFrom-SVN: r176472", "tree": {"sha": "84fc200f406e0fd07b1a6b979a4f91ba2c311cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84fc200f406e0fd07b1a6b979a4f91ba2c311cc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37457866673a1ed44cec3395459dc0c4f0135da2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37457866673a1ed44cec3395459dc0c4f0135da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37457866673a1ed44cec3395459dc0c4f0135da2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37457866673a1ed44cec3395459dc0c4f0135da2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "394d3a2e8dedb9fd95bb82bf1647b7b445ff41c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/394d3a2e8dedb9fd95bb82bf1647b7b445ff41c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/394d3a2e8dedb9fd95bb82bf1647b7b445ff41c3"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "2f5be0ac1e53731283aa66c57f02d9035890f51e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=37457866673a1ed44cec3395459dc0c4f0135da2", "patch": "@@ -1,3 +1,8 @@\n+2011-07-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49785\n+\t* pt.c (coerce_template_parms): Handle non-pack after pack.\n+\n 2011-07-19  Richard Guenther  <rguenther@suse.de>\n \n \t* call.c (build_special_member_call): Use fold_build_pointer_plus."}, {"sha": "178685c40d48234eea5918b5f6ab7129d9199ba8", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=37457866673a1ed44cec3395459dc0c4f0135da2", "patch": "@@ -6537,6 +6537,7 @@ coerce_template_parms (tree parms,\n      subtract it from nparms to get the number of non-variadic\n      parameters.  */\n   int variadic_p = 0;\n+  int post_variadic_parms = 0;\n \n   if (args == error_mark_node)\n     return error_mark_node;\n@@ -6547,19 +6548,22 @@ coerce_template_parms (tree parms,\n   for (parm_idx = 0; parm_idx < nparms; ++parm_idx)\n     {\n       tree tparm = TREE_VALUE (TREE_VEC_ELT (parms, parm_idx));\n+      if (variadic_p)\n+\t++post_variadic_parms;\n       if (template_parameter_pack_p (tparm))\n \t++variadic_p;\n     }\n \n   inner_args = INNERMOST_TEMPLATE_ARGS (args);\n-  /* If there are 0 or 1 parameter packs, we need to expand any argument\n-     packs so that we can deduce a parameter pack from some non-packed args\n-     followed by an argument pack, as in variadic85.C.  If there are more\n-     than that, we need to leave argument packs intact so the arguments are\n-     assigned to the right parameter packs.  This should only happen when\n-     dealing with a nested class inside a partial specialization of a class\n-     template, as in variadic92.C.  */\n-  if (variadic_p <= 1)\n+  /* If there are no parameters that follow a parameter pack, we need to\n+     expand any argument packs so that we can deduce a parameter pack from\n+     some non-packed args followed by an argument pack, as in variadic85.C.\n+     If there are such parameters, we need to leave argument packs intact\n+     so the arguments are assigned properly.  This can happen when dealing\n+     with a nested class inside a partial specialization of a class\n+     template, as in variadic92.C, or when deducing a template parameter pack\n+     from a sub-declarator, as in variadic114.C.  */\n+  if (!post_variadic_parms)\n     inner_args = expand_template_argument_pack (inner_args);\n \n   nargs = inner_args ? NUM_TMPL_ARGS (inner_args) : 0;\n@@ -6574,7 +6578,7 @@ coerce_template_parms (tree parms,\n \t{\n           if (variadic_p)\n             {\n-              --nparms;\n+              nparms -= variadic_p;\n \t      error (\"wrong number of template arguments \"\n \t\t     \"(%d, should be %d or more)\", nargs, nparms);\n             }"}, {"sha": "ea0fc853f18bc9f59fe650bd718621000d269cce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37457866673a1ed44cec3395459dc0c4f0135da2", "patch": "@@ -1,3 +1,8 @@\n+2011-07-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49785\n+\t* g++.dg/cpp0x/variadic114.C: New.\n+\n 2011-07-19  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray_args_1.f90: New."}, {"sha": "3ffede5c50795c3fb6d4e27784a5b8c3b659e4d9", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic114.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic114.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37457866673a1ed44cec3395459dc0c4f0135da2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic114.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic114.C?ref=37457866673a1ed44cec3395459dc0c4f0135da2", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/49785\n+// { dg-options -std=c++0x }\n+\n+template <typename, typename ...> struct B { };\n+template <typename> class A;\n+\n+template <typename R, typename ... S>\n+struct A <R (S ...)> : public B <R, S ...>\n+{\n+  struct C {};\n+  template <typename D> A (D, C = C ()) { }\n+  R operator () (...);\n+};\n+\n+template <typename R, typename ... S, typename T>\n+auto operator >> (A <R (S ...)>, T)->A <R (S ...)>\n+{\n+  []() {};\n+}\n+\n+int\n+main ()\n+{\n+  A <int (int, int)> a = [](int, int) {};\n+  auto b = []{};\n+  (a >> b) (3, 5);\n+}"}]}