{"sha": "f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZlODA5Yzg0OWM4ZDBlMGJmZTVmYTE0YmRhMGU2NjNlMGE2NTg1OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-04-18T17:03:00Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-04-18T17:03:00Z"}, "message": "re PR ipa/85051 (ICE: in edge_badness, at ipa-inline.c:1035 with flattening recursive calls)\n\n\n\tPR ipa/85051\n\t* ipa-inline.c (flatten_function): New parameter UPDATE.\n\t(ipa_inline, early_inliner): Use it.\n\nFrom-SVN: r270446", "tree": {"sha": "bb5b19c1f1ff17452564e8cd1a3378be8774e280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb5b19c1f1ff17452564e8cd1a3378be8774e280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859/comments", "author": null, "committer": null, "parents": [{"sha": "7f0964e6f146e333b2d97b1f1a8518a733f3cc17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f0964e6f146e333b2d97b1f1a8518a733f3cc17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f0964e6f146e333b2d97b1f1a8518a733f3cc17"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "43100ca02778eda2b738c01bbc2e251a0142ecf9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "patch": "@@ -1,3 +1,9 @@\n+2019-04-18  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/85051\n+\t* ipa-inline.c (flatten_function): New parameter UPDATE.\n+\t(ipa_inline, early_inliner): Use it.\n+\n 2019-04-18  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* fold-const.c (int_const_binop): Return early on failure."}, {"sha": "745bdf3002a65382d20fc3fe91cf708bf6bc587c", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6e809c849c8d0e0bfe5fa14bda0e663e0a65859/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=f6e809c849c8d0e0bfe5fa14bda0e663e0a65859", "patch": "@@ -2134,7 +2134,7 @@ inline_small_functions (void)\n    at IPA inlining time.  */\n \n static void\n-flatten_function (struct cgraph_node *node, bool early)\n+flatten_function (struct cgraph_node *node, bool early, bool update)\n {\n   struct cgraph_edge *e;\n \n@@ -2164,7 +2164,7 @@ flatten_function (struct cgraph_node *node, bool early)\n \t it in order to fully flatten the leaves.  */\n       if (!e->inline_failed)\n \t{\n-\t  flatten_function (callee, early);\n+\t  flatten_function (callee, early, false);\n \t  continue;\n \t}\n \n@@ -2204,14 +2204,15 @@ flatten_function (struct cgraph_node *node, bool early)\n       inline_call (e, true, NULL, NULL, false);\n       if (e->callee != orig_callee)\n \torig_callee->aux = (void *) node;\n-      flatten_function (e->callee, early);\n+      flatten_function (e->callee, early, false);\n       if (e->callee != orig_callee)\n \torig_callee->aux = NULL;\n     }\n \n   node->aux = NULL;\n-  if (!node->global.inlined_to)\n-    ipa_update_overall_fn_summary (node);\n+  if (update)\n+    ipa_update_overall_fn_summary (node->global.inlined_to\n+\t\t\t\t   ? node->global.inlined_to : node);\n }\n \n /* Inline NODE to all callers.  Worker for cgraph_for_node_and_aliases.\n@@ -2519,7 +2520,7 @@ ipa_inline (void)\n \t function.  */\n       if (dump_file)\n \tfprintf (dump_file, \"Flattening %s\\n\", node->name ());\n-      flatten_function (node, false);\n+      flatten_function (node, false, true);\n     }\n \n   if (j < nnodes - 2)\n@@ -2782,7 +2783,7 @@ early_inliner (function *fun)\n       if (dump_enabled_p ())\n \tdump_printf (MSG_OPTIMIZED_LOCATIONS,\n \t\t     \"Flattening %C\\n\", node);\n-      flatten_function (node, true);\n+      flatten_function (node, true, true);\n       inlined = true;\n     }\n   else"}]}