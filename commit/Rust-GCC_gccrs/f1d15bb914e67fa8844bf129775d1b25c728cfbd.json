{"sha": "f1d15bb914e67fa8844bf129775d1b25c728cfbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFkMTViYjkxNGU2N2ZhODg0NGJmMTI5Nzc1ZDFiMjVjNzI4Y2ZiZA==", "commit": {"author": {"name": "Dmitry Vyukov", "email": "dvyukov@google.com", "date": "2014-12-02T18:58:59Z"}, "committer": {"name": "Dmitry Vyukov", "email": "dvyukov@gcc.gnu.org", "date": "2014-12-02T18:58:59Z"}, "message": "asan: support for globals in kernel\n\n2014-12-02  Dmitry Vyukov  <dvyukov@google.com>\n* asan.c: (asan_finish_file): Use default priority for constructors\nin kernel mode.\n\nFrom-SVN: r218281", "tree": {"sha": "c75e433f807c9b3256cd6e445f2d957bc8afe1e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c75e433f807c9b3256cd6e445f2d957bc8afe1e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1d15bb914e67fa8844bf129775d1b25c728cfbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d15bb914e67fa8844bf129775d1b25c728cfbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1d15bb914e67fa8844bf129775d1b25c728cfbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d15bb914e67fa8844bf129775d1b25c728cfbd/comments", "author": {"login": "dvyukov", "id": 1095328, "node_id": "MDQ6VXNlcjEwOTUzMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1095328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvyukov", "html_url": "https://github.com/dvyukov", "followers_url": "https://api.github.com/users/dvyukov/followers", "following_url": "https://api.github.com/users/dvyukov/following{/other_user}", "gists_url": "https://api.github.com/users/dvyukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvyukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvyukov/subscriptions", "organizations_url": "https://api.github.com/users/dvyukov/orgs", "repos_url": "https://api.github.com/users/dvyukov/repos", "events_url": "https://api.github.com/users/dvyukov/events{/privacy}", "received_events_url": "https://api.github.com/users/dvyukov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d455c0b5303ad084c9ac10334cecfd5d7e3e4f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d455c0b5303ad084c9ac10334cecfd5d7e3e4f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d455c0b5303ad084c9ac10334cecfd5d7e3e4f19"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "b2eb9506485881ce35f3bf36f7f8ff85e45dbc36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d15bb914e67fa8844bf129775d1b25c728cfbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d15bb914e67fa8844bf129775d1b25c728cfbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1d15bb914e67fa8844bf129775d1b25c728cfbd", "patch": "@@ -1,3 +1,8 @@\n+2014-12-02  Dmitry Vyukov  <dvyukov@google.com>\n+\n+\t* asan.c: (asan_finish_file): Use default priority for constructors\n+\tin kernel mode.\n+\n 2014-12-02  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \tPR target/64115"}, {"sha": "e33cdc8d0c997bcc791161b3142e0b47b6250f2c", "filename": "gcc/asan.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d15bb914e67fa8844bf129775d1b25c728cfbd/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d15bb914e67fa8844bf129775d1b25c728cfbd/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=f1d15bb914e67fa8844bf129775d1b25c728cfbd", "patch": "@@ -1348,7 +1348,9 @@ asan_protect_global (tree decl)\n \t the var that is selected by the linker will have\n \t padding or not.  */\n       || DECL_ONE_ONLY (decl)\n-      /* Similarly for common vars.  People can use -fno-common.  */\n+      /* Similarly for common vars.  People can use -fno-common.\n+\t Note: Linux kernel is built with -fno-common, so we do instrument\n+\t globals there even if it is C.  */\n       || (DECL_COMMON (decl) && TREE_PUBLIC (decl))\n       /* Don't protect if using user section, often vars placed\n \t into user section from multiple TUs are then assumed\n@@ -2448,6 +2450,13 @@ asan_finish_file (void)\n      nor after .LASAN* array.  */\n   flag_sanitize &= ~SANITIZE_ADDRESS;\n \n+  /* For user-space we want asan constructors to run first.\n+     Linux kernel does not support priorities other than default, and the only\n+     other user of constructors is coverage. So we run with the default\n+     priority.  */\n+  int priority = flag_sanitize & SANITIZE_USER_ADDRESS\n+                 ? MAX_RESERVED_INIT_PRIORITY - 1 : DEFAULT_INIT_PRIORITY;\n+\n   if (flag_sanitize & SANITIZE_USER_ADDRESS)\n     {\n       tree fn = builtin_decl_implicit (BUILT_IN_ASAN_INIT);\n@@ -2503,12 +2512,10 @@ asan_finish_file (void)\n \t\t\t\t\t\t build_fold_addr_expr (var),\n \t\t\t\t\t\t gcount_tree),\n \t\t\t\t&dtor_statements);\n-      cgraph_build_static_cdtor ('D', dtor_statements,\n-\t\t\t\t MAX_RESERVED_INIT_PRIORITY - 1);\n+      cgraph_build_static_cdtor ('D', dtor_statements, priority);\n     }\n   if (asan_ctor_statements)\n-    cgraph_build_static_cdtor ('I', asan_ctor_statements,\n-\t\t\t       MAX_RESERVED_INIT_PRIORITY - 1);\n+    cgraph_build_static_cdtor ('I', asan_ctor_statements, priority);\n   flag_sanitize |= SANITIZE_ADDRESS;\n }\n "}]}