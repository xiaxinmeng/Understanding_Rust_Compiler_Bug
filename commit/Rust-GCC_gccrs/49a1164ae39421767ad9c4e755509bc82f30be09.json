{"sha": "49a1164ae39421767ad9c4e755509bc82f30be09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlhMTE2NGFlMzk0MjE3NjdhZDljNGU3NTU1MDliYzgyZjMwYmUwOQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2016-02-16T21:10:00Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2016-02-16T21:10:00Z"}, "message": "re PR fortran/69742 (ICE with -O3 and ASSOCIATE containing repeated expression)\n\n2015-02-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/69742\n\t* frontend-passes.c (cfe-expr_0):  Don't register functions\n\tfrom within an ASSOCIATE statement.\n\n2015-02-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/69742\n\t* gfortran.dg/associate_21.f90:  New test.\n\nFrom-SVN: r233474", "tree": {"sha": "74aced5dcf7b28daef7017a86ac1af2e3f9ed7aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74aced5dcf7b28daef7017a86ac1af2e3f9ed7aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49a1164ae39421767ad9c4e755509bc82f30be09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a1164ae39421767ad9c4e755509bc82f30be09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49a1164ae39421767ad9c4e755509bc82f30be09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a1164ae39421767ad9c4e755509bc82f30be09/comments", "author": null, "committer": null, "parents": [{"sha": "bf14eba23b25519f20b198110389e1401be8624f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf14eba23b25519f20b198110389e1401be8624f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf14eba23b25519f20b198110389e1401be8624f"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "5cf25a476938eb95eef4ad1ef20a219dbc72db90", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=49a1164ae39421767ad9c4e755509bc82f30be09", "patch": "@@ -1,3 +1,9 @@\n+2015-02-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/69742\n+\t* frontend-passes.c (cfe-expr_0):  Don't register functions\n+\tfrom within an ASSOCIATE statement.\n+\n 2016-02-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/60526"}, {"sha": "156ea2b764020c79f7b526987267a6e2b953a370", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=49a1164ae39421767ad9c4e755509bc82f30be09", "patch": "@@ -734,9 +734,9 @@ cfe_expr_0 (gfc_expr **e, int *walk_subtrees,\n   gfc_expr *newvar;\n   gfc_expr **ei, **ej;\n \n-  /* Don't do this optimization within OMP workshare.  */\n+  /* Don't do this optimization within OMP workshare or ASSOC lists.  */\n \n-  if (in_omp_workshare)\n+  if (in_omp_workshare || in_assoc_list)\n     {\n       *walk_subtrees = 0;\n       return 0;"}, {"sha": "a07182385faf9a11a61154e0665f5231be0a99b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49a1164ae39421767ad9c4e755509bc82f30be09", "patch": "@@ -1,3 +1,8 @@\n+2015-02-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/69742\n+\t* gfortran.dg/associate_21.f90:  New test.\n+\n 2016-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/69835"}, {"sha": "a7bbabab4318d4b632004ba75a50478cbe4b4cc4", "filename": "gcc/testsuite/gfortran.dg/associate_21.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a1164ae39421767ad9c4e755509bc82f30be09/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_21.f90?ref=49a1164ae39421767ad9c4e755509bc82f30be09", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! { dg-options \"-ffrontend-optimize\" }\n+! PR 69742 - this used to ICE with front-end optimizatoin\n+! Original test case by Marco Restelli.\n+program p\n+ implicit none\n+ integer, allocatable :: i(:), j\n+\n+  allocate( i(5) )\n+  i = (/( j , j=1,5 )/)\n+\n+  ! The ICE appears when \"size(i)\" is used twice in associate\n+  associate( i5 => i(size(i):size(i)) ) ! this gives ICE\n+  !associate( i5 => i(size(2*i):size(i)) ) ! this works\n+  i5 = 2\n+  end associate\n+\n+  write(*,*) i\n+end program p"}]}