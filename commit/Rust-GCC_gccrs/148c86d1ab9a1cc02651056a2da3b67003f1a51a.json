{"sha": "148c86d1ab9a1cc02651056a2da3b67003f1a51a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ4Yzg2ZDFhYjlhMWNjMDI2NTEwNTZhMmRhM2I2NzAwM2YxYTUxYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-03-02T11:46:14Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-09T08:09:05Z"}, "message": "[Ada] Small cleanup in Einfo unit\n\n2020-06-09  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads (Has_Foreign_Convention): Fix description.\n\t(Component_Alignment): Move around.\n\t(Has_DIC): Likewise.\n\t(Has_Interrupt_Handler): Likewise.\n\t(Has_Invariants): Likewise.\n\t(Is_Atomic_Or_VFA): Likewise.\n\t(Next_Index): Likewise.\n\t(Scope_Depth): Likewise.\n\t(Init_Component_Size): Likewise.\n\t(Init_Component_Location): Likewise.\n\t(Init_Size): Likewise.\n\t(Inline Pragmas for functions): Add Corresponding_Function,\n\tCorresponding_Procedure, Entry_Max_Queue_Lengths_Array,\n\tFinalize_Storage_Only, Has_DIC, Has_Invariants,\n\tInitialization_Statements, Is_Anonymous_Access_Type,\n\tNext_Stored_Discriminant, Address_Clause, Alignment_Clause,\n\tFloat_Rep, Has_Foreign_Convention, Has_Non_Limited_View,\n\tIs_Constant_Object, Is_Discriminal, Is_Finalizer, Is_Null_State,\n\tIs_Prival, Is_Protected_Component, Is_Protected_Record_Type,\n\tIs_Subprogram_Or_Entry, Is_Task_Record_Type, Size_Clause,\n\tStream_Size_Clause, Type_High_Bound, Type_Low_Bound, Known_*,\n\tUnknown_*.\n\t(Inline Pragmas for procedures): Add Set_Corresponding_Function,\n\tSet_Corresponding_Procedure, Set_Finalize_Storage_Only,\n\tSet_Float_Rep, Set_Initialization_Statements,\n\tInit_Normalized_First_Bit, Init_Normalized_Position,\n\tInit_Normalized_Position_Max.\n\t* einfo.adb (Was_Hidden): Move around.\n\t(Is_Packed_Array): Likewise.\n\t(Model_Emin_Value): Likewise.\n\t(Model_Epsilon_Value): Likewise.\n\t(Model_Mantissa_Value): Likewise.\n\t(Model_Small_Value): Likewise.", "tree": {"sha": "082494bdb0a8e9b568b1f1683d3c16fc70dfd922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/082494bdb0a8e9b568b1f1683d3c16fc70dfd922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/148c86d1ab9a1cc02651056a2da3b67003f1a51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148c86d1ab9a1cc02651056a2da3b67003f1a51a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148c86d1ab9a1cc02651056a2da3b67003f1a51a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148c86d1ab9a1cc02651056a2da3b67003f1a51a/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e510a0a2baa41a22a7acef872cd309ea78ef737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e510a0a2baa41a22a7acef872cd309ea78ef737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e510a0a2baa41a22a7acef872cd309ea78ef737"}], "stats": {"total": 287, "additions": 173, "deletions": 114}, "files": [{"sha": "174a5b9eb5b18655e0223e9b621d0ee37bce22d4", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/148c86d1ab9a1cc02651056a2da3b67003f1a51a/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/148c86d1ab9a1cc02651056a2da3b67003f1a51a/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=148c86d1ab9a1cc02651056a2da3b67003f1a51a", "patch": "@@ -3615,18 +3615,18 @@ package body Einfo is\n       return Flag238 (Id);\n    end Warnings_Off_Used_Unreferenced;\n \n+   function Was_Hidden (Id : E) return B is\n+   begin\n+      return Flag196 (Id);\n+   end Was_Hidden;\n+\n    function Wrapped_Entity (Id : E) return E is\n    begin\n       pragma Assert (Ekind_In (Id, E_Function, E_Procedure)\n                        and then Is_Primitive_Wrapper (Id));\n       return Node27 (Id);\n    end Wrapped_Entity;\n \n-   function Was_Hidden (Id : E) return B is\n-   begin\n-      return Flag196 (Id);\n-   end Was_Hidden;\n-\n    ------------------------------\n    -- Classification Functions --\n    ------------------------------\n@@ -8168,15 +8168,6 @@ package body Einfo is\n         Ekind (Id) = E_Abstract_State and then Nkind (Parent (Id)) = N_Null;\n    end Is_Null_State;\n \n-   ---------------------\n-   -- Is_Packed_Array --\n-   ---------------------\n-\n-   function Is_Packed_Array (Id : E) return B is\n-   begin\n-      return Is_Array_Type (Id) and then Is_Packed (Id);\n-   end Is_Packed_Array;\n-\n    -----------------------------------\n    -- Is_Package_Or_Generic_Package --\n    -----------------------------------\n@@ -8186,6 +8177,15 @@ package body Einfo is\n       return Ekind_In (Id, E_Generic_Package, E_Package);\n    end Is_Package_Or_Generic_Package;\n \n+   ---------------------\n+   -- Is_Packed_Array --\n+   ---------------------\n+\n+   function Is_Packed_Array (Id : E) return B is\n+   begin\n+      return Is_Array_Type (Id) and then Is_Packed (Id);\n+   end Is_Packed_Array;\n+\n    ---------------\n    -- Is_Prival --\n    ---------------\n@@ -8404,44 +8404,6 @@ package body Einfo is\n       Set_Next_Entity (First, Second);     --  First --> Second\n    end Link_Entities;\n \n-   ----------------------\n-   -- Model_Emin_Value --\n-   ----------------------\n-\n-   function Model_Emin_Value (Id : E) return Uint is\n-   begin\n-      return Machine_Emin_Value (Id);\n-   end Model_Emin_Value;\n-\n-   -------------------------\n-   -- Model_Epsilon_Value --\n-   -------------------------\n-\n-   function Model_Epsilon_Value (Id : E) return Ureal is\n-      Radix : constant Ureal := UR_From_Uint (Machine_Radix_Value (Id));\n-   begin\n-      return Radix ** (1 - Model_Mantissa_Value (Id));\n-   end Model_Epsilon_Value;\n-\n-   --------------------------\n-   -- Model_Mantissa_Value --\n-   --------------------------\n-\n-   function Model_Mantissa_Value (Id : E) return Uint is\n-   begin\n-      return Machine_Mantissa_Value (Id);\n-   end Model_Mantissa_Value;\n-\n-   -----------------------\n-   -- Model_Small_Value --\n-   -----------------------\n-\n-   function Model_Small_Value (Id : E) return Ureal is\n-      Radix : constant Ureal := UR_From_Uint (Machine_Radix_Value (Id));\n-   begin\n-      return Radix ** (Model_Emin_Value (Id) - 1);\n-   end Model_Small_Value;\n-\n    ------------------------\n    -- Machine_Emax_Value --\n    ------------------------\n@@ -8517,6 +8479,44 @@ package body Einfo is\n       end case;\n    end Machine_Radix_Value;\n \n+   ----------------------\n+   -- Model_Emin_Value --\n+   ----------------------\n+\n+   function Model_Emin_Value (Id : E) return Uint is\n+   begin\n+      return Machine_Emin_Value (Id);\n+   end Model_Emin_Value;\n+\n+   -------------------------\n+   -- Model_Epsilon_Value --\n+   -------------------------\n+\n+   function Model_Epsilon_Value (Id : E) return Ureal is\n+      Radix : constant Ureal := UR_From_Uint (Machine_Radix_Value (Id));\n+   begin\n+      return Radix ** (1 - Model_Mantissa_Value (Id));\n+   end Model_Epsilon_Value;\n+\n+   --------------------------\n+   -- Model_Mantissa_Value --\n+   --------------------------\n+\n+   function Model_Mantissa_Value (Id : E) return Uint is\n+   begin\n+      return Machine_Mantissa_Value (Id);\n+   end Model_Mantissa_Value;\n+\n+   -----------------------\n+   -- Model_Small_Value --\n+   -----------------------\n+\n+   function Model_Small_Value (Id : E) return Ureal is\n+      Radix : constant Ureal := UR_From_Uint (Machine_Radix_Value (Id));\n+   begin\n+      return Radix ** (Model_Emin_Value (Id) - 1);\n+   end Model_Small_Value;\n+\n    --------------------\n    -- Next_Component --\n    --------------------"}, {"sha": "4315fce8cd769d7346df8e2dc8dc99dbe696777b", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 121, "deletions": 62, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/148c86d1ab9a1cc02651056a2da3b67003f1a51a/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/148c86d1ab9a1cc02651056a2da3b67003f1a51a/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=148c86d1ab9a1cc02651056a2da3b67003f1a51a", "patch": "@@ -1681,9 +1681,10 @@ package Einfo is\n --       rewritten into something else and subsequently reanalyzed/expanded.\n \n --    Has_Foreign_Convention (synthesized)\n---       Applies to all entities. Determines if the Convention for the\n---       entity is a foreign convention (i.e. is other than Convention_Ada,\n---       Convention_Intrinsic, Convention_Entry or Convention_Protected).\n+--       Applies to all entities. Determines if the Convention for the entity\n+--       is a foreign convention, i.e. non-native: other than Convention_Ada,\n+--       Convention_Intrinsic, Convention_Entry, Convention_Protected,\n+--       Convention_Stubbed and Convention_Ada_Pass_By_(Copy,Reference).\n \n --    Has_Forward_Instantiation (Flag175)\n --       Defined in package entities. Set for packages that instantiate local\n@@ -7091,7 +7092,6 @@ package Einfo is\n    function Class_Wide_Clone                    (Id : E) return E;\n    function Class_Wide_Type                     (Id : E) return E;\n    function Cloned_Subtype                      (Id : E) return E;\n-   function Component_Alignment                 (Id : E) return C;\n    function Component_Bit_Offset                (Id : E) return U;\n    function Component_Clause                    (Id : E) return N;\n    function Component_Size                      (Id : E) return U;\n@@ -7199,7 +7199,6 @@ package Einfo is\n    function Has_Delayed_Aspects                 (Id : E) return B;\n    function Has_Delayed_Freeze                  (Id : E) return B;\n    function Has_Delayed_Rep_Aspects             (Id : E) return B;\n-   function Has_DIC                             (Id : E) return B;\n    function Has_Discriminants                   (Id : E) return B;\n    function Has_Dispatch_Table                  (Id : E) return B;\n    function Has_Dynamic_Predicate_Aspect        (Id : E) return B;\n@@ -7216,8 +7215,6 @@ package Einfo is\n    function Has_Inherited_DIC                   (Id : E) return B;\n    function Has_Inherited_Invariants            (Id : E) return B;\n    function Has_Initial_Value                   (Id : E) return B;\n-   function Has_Interrupt_Handler               (Id : E) return B;\n-   function Has_Invariants                      (Id : E) return B;\n    function Has_Loop_Entry_Attributes           (Id : E) return B;\n    function Has_Machine_Radix_Clause            (Id : E) return B;\n    function Has_Master_Entity                   (Id : E) return B;\n@@ -7301,7 +7298,6 @@ package Einfo is\n    function Is_Aliased                          (Id : E) return B;\n    function Is_Asynchronous                     (Id : E) return B;\n    function Is_Atomic                           (Id : E) return B;\n-   function Is_Atomic_Or_VFA                    (Id : E) return B;\n    function Is_Bit_Packed_Array                 (Id : E) return B;\n    function Is_Called                           (Id : E) return B;\n    function Is_Character_Type                   (Id : E) return B;\n@@ -7624,21 +7620,26 @@ package Einfo is\n    function Aft_Value                           (Id : E) return U;\n    function Alignment_Clause                    (Id : E) return N;\n    function Base_Type                           (Id : E) return E;\n+   function Component_Alignment                 (Id : E) return C;\n    function Declaration_Node                    (Id : E) return N;\n    function Designated_Type                     (Id : E) return E;\n    function First_Component                     (Id : E) return E;\n    function First_Component_Or_Discriminant     (Id : E) return E;\n    function First_Formal                        (Id : E) return E;\n    function First_Formal_With_Extras            (Id : E) return E;\n    function Has_Attach_Handler                  (Id : E) return B;\n+   function Has_DIC                             (Id : E) return B;\n    function Has_Entries                         (Id : E) return B;\n    function Has_Foreign_Convention              (Id : E) return B;\n+   function Has_Interrupt_Handler               (Id : E) return B;\n+   function Has_Invariants                      (Id : E) return B;\n    function Has_Non_Limited_View                (Id : E) return B;\n    function Has_Non_Null_Abstract_State         (Id : E) return B;\n    function Has_Non_Null_Visible_Refinement     (Id : E) return B;\n    function Has_Null_Abstract_State             (Id : E) return B;\n    function Has_Null_Visible_Refinement         (Id : E) return B;\n    function Implementation_Base_Type            (Id : E) return E;\n+   function Is_Atomic_Or_VFA                    (Id : E) return B;\n    function Is_Base_Type                        (Id : E) return B;\n    function Is_Boolean_Type                     (Id : E) return B;\n    function Is_Constant_Object                  (Id : E) return B;\n@@ -7677,6 +7678,7 @@ package Einfo is\n    function Next_Discriminant                   (Id : E) return E;\n    function Next_Formal                         (Id : E) return E;\n    function Next_Formal_With_Extras             (Id : E) return E;\n+   function Next_Index                          (Id : N) return N;\n    function Next_Literal                        (Id : E) return E;\n    function Next_Stored_Discriminant            (Id : E) return E;\n    function Number_Dimensions                   (Id : E) return Pos;\n@@ -7690,6 +7692,7 @@ package Einfo is\n    function Safe_Emax_Value                     (Id : E) return U;\n    function Safe_First_Value                    (Id : E) return R;\n    function Safe_Last_Value                     (Id : E) return R;\n+   function Scope_Depth                         (Id : E) return U;\n    function Scope_Depth_Set                     (Id : E) return B;\n    function Size_Clause                         (Id : E) return N;\n    function Stream_Size_Clause                  (Id : E) return N;\n@@ -8303,8 +8306,8 @@ package Einfo is\n    --  entities whose Ekind has not been set yet).\n \n    procedure Init_Alignment                (Id : E; V : Int);\n-   procedure Init_Component_Size           (Id : E; V : Int);\n    procedure Init_Component_Bit_Offset     (Id : E; V : Int);\n+   procedure Init_Component_Size           (Id : E; V : Int);\n    procedure Init_Digits_Value             (Id : E; V : Int);\n    procedure Init_Esize                    (Id : E; V : Int);\n    procedure Init_Normalized_First_Bit     (Id : E; V : Int);\n@@ -8313,15 +8316,23 @@ package Einfo is\n    procedure Init_RM_Size                  (Id : E; V : Int);\n \n    procedure Init_Alignment                (Id : E);\n-   procedure Init_Component_Size           (Id : E);\n    procedure Init_Component_Bit_Offset     (Id : E);\n+   procedure Init_Component_Size           (Id : E);\n    procedure Init_Digits_Value             (Id : E);\n    procedure Init_Esize                    (Id : E);\n    procedure Init_Normalized_First_Bit     (Id : E);\n    procedure Init_Normalized_Position      (Id : E);\n    procedure Init_Normalized_Position_Max  (Id : E);\n    procedure Init_RM_Size                  (Id : E);\n \n+   procedure Init_Component_Location (Id : E);\n+   --  Initializes all fields describing the location of a component\n+   --  (Normalized_Position, Component_Bit_Offset, Normalized_First_Bit,\n+   --  Normalized_Position_Max, Esize) to all be Unknown.\n+\n+   procedure Init_Size (Id : E; V : Int);\n+   --  Initialize both the Esize and RM_Size fields of E to V\n+\n    procedure Init_Size_Align (Id : E);\n    --  This procedure initializes both size fields and the alignment\n    --  field to all be Unknown.\n@@ -8330,14 +8341,6 @@ package Einfo is\n    --  Same as Init_Size_Align except RM_Size field (which is only for types)\n    --  is unaffected.\n \n-   procedure Init_Size (Id : E; V : Int);\n-   --  Initialize both the Esize and RM_Size fields of E to V\n-\n-   procedure Init_Component_Location (Id : E);\n-   --  Initializes all fields describing the location of a component\n-   --  (Normalized_Position, Component_Bit_Offset, Normalized_First_Bit,\n-   --  Normalized_Position_Max, Esize) to all be Unknown.\n-\n    ---------------\n    -- Iterators --\n    ---------------\n@@ -8524,18 +8527,9 @@ package Einfo is\n    --  NOTE: No updates are done to the First_Entity and Last_Entity fields\n    --  of the scope.\n \n-   function Next_Index (Id : Node_Id) return Node_Id;\n-   --  Given an index from a previous call to First_Index or Next_Index,\n-   --  returns a node representing the occurrence of the next index subtype,\n-   --  or Empty if there are no more index subtypes.\n-\n    procedure Remove_Entity (Id : Entity_Id);\n    --  Remove entity Id from the entity chain of its scope\n \n-   function Scope_Depth (Id : Entity_Id) return Uint;\n-   --  Returns the scope depth value of the Id, unless the Id is a record\n-   --  type, in which case it returns the scope depth of the record scope.\n-\n    function Subtype_Kind (K : Entity_Kind) return Entity_Kind;\n    --  Given an entity_kind K this function returns the entity_kind\n    --  corresponding to subtype kind of the type represented by K. For\n@@ -8597,9 +8591,9 @@ package Einfo is\n    --  the given field, depending on the Ekind. No blanks or end of lines are\n    --  output, just the characters of the field name.\n \n-   --------------------\n-   -- Inline Pragmas --\n-   --------------------\n+   ----------------------------------\n+   -- Inline Pragmas for functions --\n+   ----------------------------------\n \n    --  Note that these inline pragmas are referenced by the XEINFO utility\n    --  program in preparing the corresponding C header, and only those\n@@ -8646,6 +8640,8 @@ package Einfo is\n    pragma Inline (Corresponding_Concurrent_Type);\n    pragma Inline (Corresponding_Discriminant);\n    pragma Inline (Corresponding_Equality);\n+   pragma Inline (Corresponding_Function);\n+   pragma Inline (Corresponding_Procedure);\n    pragma Inline (Corresponding_Protected_Entry);\n    pragma Inline (Corresponding_Record_Component);\n    pragma Inline (Corresponding_Record_Type);\n@@ -8694,6 +8690,7 @@ package Einfo is\n    pragma Inline (Entry_Formal);\n    pragma Inline (Entry_Index_Constant);\n    pragma Inline (Entry_Index_Type);\n+   pragma Inline (Entry_Max_Queue_Lengths_Array);\n    pragma Inline (Entry_Parameters_Type);\n    pragma Inline (Enum_Pos_To_Rep);\n    pragma Inline (Enumeration_Pos);\n@@ -8706,6 +8703,7 @@ package Einfo is\n    pragma Inline (Extra_Constrained);\n    pragma Inline (Extra_Formal);\n    pragma Inline (Extra_Formals);\n+   pragma Inline (Finalize_Storage_Only);\n    pragma Inline (Finalization_Master);\n    pragma Inline (Finalizer);\n    pragma Inline (First_Entity);\n@@ -8738,6 +8736,7 @@ package Einfo is\n    pragma Inline (Has_Delayed_Aspects);\n    pragma Inline (Has_Delayed_Freeze);\n    pragma Inline (Has_Delayed_Rep_Aspects);\n+   pragma Inline (Has_DIC);\n    pragma Inline (Has_Discriminants);\n    pragma Inline (Has_Dispatch_Table);\n    pragma Inline (Has_Dynamic_Predicate_Aspect);\n@@ -8754,6 +8753,7 @@ package Einfo is\n    pragma Inline (Has_Inherited_DIC);\n    pragma Inline (Has_Inherited_Invariants);\n    pragma Inline (Has_Initial_Value);\n+   pragma Inline (Has_Invariants);\n    pragma Inline (Has_Loop_Entry_Attributes);\n    pragma Inline (Has_Machine_Radix_Clause);\n    pragma Inline (Has_Master_Entity);\n@@ -8822,6 +8822,7 @@ package Einfo is\n    pragma Inline (In_Package_Body);\n    pragma Inline (In_Private_Part);\n    pragma Inline (In_Use);\n+   pragma Inline (Initialization_Statements);\n    pragma Inline (Inner_Instances);\n    pragma Inline (Interface_Alias);\n    pragma Inline (Interface_Name);\n@@ -8838,6 +8839,7 @@ package Einfo is\n    pragma Inline (Is_Ada_2012_Only);\n    pragma Inline (Is_Aggregate_Type);\n    pragma Inline (Is_Aliased);\n+   pragma Inline (Is_Anonymous_Access_Type);\n    pragma Inline (Is_Array_Type);\n    pragma Inline (Is_Assignable);\n    pragma Inline (Is_Asynchronous);\n@@ -9020,6 +9022,7 @@ package Einfo is\n    pragma Inline (Next_Index);\n    pragma Inline (Next_Inlined_Subprogram);\n    pragma Inline (Next_Literal);\n+   pragma Inline (Next_Stored_Discriminant);\n    pragma Inline (No_Dynamic_Predicate_On_Actual);\n    pragma Inline (No_Pool_Assigned);\n    pragma Inline (No_Predicate_On_Actual);\n@@ -9138,12 +9141,80 @@ package Einfo is\n    pragma Inline (Was_Hidden);\n    pragma Inline (Wrapped_Entity);\n \n-   pragma Inline (Init_Alignment);\n-   pragma Inline (Init_Component_Bit_Offset);\n-   pragma Inline (Init_Component_Size);\n-   pragma Inline (Init_Digits_Value);\n-   pragma Inline (Init_Esize);\n-   pragma Inline (Init_RM_Size);\n+   --  END XEINFO INLINES\n+\n+   --  The following Inline pragmas are *not* read by XEINFO when building the\n+   --  C version of this interface automatically (so the C version will end up\n+   --  making out of line calls). The pragma scan in XEINFO will be terminated\n+   --  on encountering the END XEINFO INLINES line. We inline things here which\n+   --  are small, but not of the canonical attribute access/set format that can\n+   --  be handled by XEINFO.\n+\n+   pragma Inline (Address_Clause);\n+   pragma Inline (Alignment_Clause);\n+   pragma Inline (Base_Type);\n+   pragma Inline (Float_Rep);\n+   pragma Inline (Has_Foreign_Convention);\n+   pragma Inline (Has_Non_Limited_View);\n+   pragma Inline (Is_Base_Type);\n+   pragma Inline (Is_Boolean_Type);\n+   pragma Inline (Is_Constant_Object);\n+   pragma Inline (Is_Controlled);\n+   pragma Inline (Is_Discriminal);\n+   pragma Inline (Is_Entity_Name);\n+   pragma Inline (Is_Finalizer);\n+   pragma Inline (Is_Null_State);\n+   pragma Inline (Is_Package_Or_Generic_Package);\n+   pragma Inline (Is_Packed_Array);\n+   pragma Inline (Is_Prival);\n+   pragma Inline (Is_Protected_Component);\n+   pragma Inline (Is_Protected_Record_Type);\n+   pragma Inline (Is_String_Type);\n+   pragma Inline (Is_Subprogram_Or_Entry);\n+   pragma Inline (Is_Subprogram_Or_Generic_Subprogram);\n+   pragma Inline (Is_Task_Record_Type);\n+   pragma Inline (Is_Volatile);\n+   pragma Inline (Is_Wrapper_Package);\n+   pragma Inline (Scope_Depth);\n+   pragma Inline (Scope_Depth_Set);\n+   pragma Inline (Size_Clause);\n+   pragma Inline (Stream_Size_Clause);\n+   pragma Inline (Type_High_Bound);\n+   pragma Inline (Type_Low_Bound);\n+\n+   pragma Inline (Known_Alignment);\n+   pragma Inline (Known_Component_Bit_Offset);\n+   pragma Inline (Known_Component_Size);\n+   pragma Inline (Known_Esize);\n+   pragma Inline (Known_Normalized_First_Bit);\n+   pragma Inline (Known_Normalized_Position);\n+   pragma Inline (Known_Normalized_Position_Max);\n+   pragma Inline (Known_RM_Size);\n+\n+   pragma Inline (Known_Static_Component_Bit_Offset);\n+   pragma Inline (Known_Static_Component_Size);\n+   pragma Inline (Known_Static_Esize);\n+   pragma Inline (Known_Static_Normalized_First_Bit);\n+   pragma Inline (Known_Static_Normalized_Position);\n+   pragma Inline (Known_Static_Normalized_Position_Max);\n+   pragma Inline (Known_Static_RM_Size);\n+\n+   pragma Inline (Unknown_Alignment);\n+   pragma Inline (Unknown_Component_Bit_Offset);\n+   pragma Inline (Unknown_Component_Size);\n+   pragma Inline (Unknown_Esize);\n+   pragma Inline (Unknown_Normalized_First_Bit);\n+   pragma Inline (Unknown_Normalized_Position);\n+   pragma Inline (Unknown_Normalized_Position_Max);\n+   pragma Inline (Unknown_RM_Size);\n+\n+   -----------------------------------\n+   -- Inline Pragmas for procedures --\n+   -----------------------------------\n+\n+   --  The following inline pragmas are *not* referenced by the XEINFO utility\n+   --  program in preparing the corresponding C header, and therefore do *not*\n+   --  need to meet the requirements documented in the section on XEINFO.\n \n    pragma Inline (Set_Abstract_States);\n    pragma Inline (Set_Accept_Address);\n@@ -9185,6 +9256,8 @@ package Einfo is\n    pragma Inline (Set_Corresponding_Concurrent_Type);\n    pragma Inline (Set_Corresponding_Discriminant);\n    pragma Inline (Set_Corresponding_Equality);\n+   pragma Inline (Set_Corresponding_Function);\n+   pragma Inline (Set_Corresponding_Procedure);\n    pragma Inline (Set_Corresponding_Protected_Entry);\n    pragma Inline (Set_Corresponding_Record_Component);\n    pragma Inline (Set_Corresponding_Record_Type);\n@@ -9244,6 +9317,7 @@ package Einfo is\n    pragma Inline (Set_Extra_Constrained);\n    pragma Inline (Set_Extra_Formal);\n    pragma Inline (Set_Extra_Formals);\n+   pragma Inline (Set_Finalize_Storage_Only);\n    pragma Inline (Set_Finalization_Master);\n    pragma Inline (Set_Finalizer);\n    pragma Inline (Set_First_Entity);\n@@ -9252,6 +9326,7 @@ package Einfo is\n    pragma Inline (Set_First_Literal);\n    pragma Inline (Set_First_Private_Entity);\n    pragma Inline (Set_First_Rep_Item);\n+   pragma Inline (Set_Float_Rep);\n    pragma Inline (Set_Freeze_Node);\n    pragma Inline (Set_From_Limited_With);\n    pragma Inline (Set_Full_View);\n@@ -9359,6 +9434,7 @@ package Einfo is\n    pragma Inline (Set_In_Package_Body);\n    pragma Inline (Set_In_Private_Part);\n    pragma Inline (Set_In_Use);\n+   pragma Inline (Set_Initialization_Statements);\n    pragma Inline (Set_Inner_Instances);\n    pragma Inline (Set_Interface_Alias);\n    pragma Inline (Set_Interface_Name);\n@@ -9627,31 +9703,14 @@ package Einfo is\n    pragma Inline (Set_Was_Hidden);\n    pragma Inline (Set_Wrapped_Entity);\n \n-   --  END XEINFO INLINES\n-\n-   --  The following Inline pragmas are *not* read by xeinfo when building the\n-   --  C version of this interface automatically (so the C version will end up\n-   --  making out of line calls). The pragma scan in xeinfo will be terminated\n-   --  on encountering the END XEINFO INLINES line. We inline things here which\n-   --  are small, but not of the canonical attribute access/set format that can\n-   --  be handled by xeinfo.\n-\n-   pragma Inline (Base_Type);\n-   pragma Inline (Is_Base_Type);\n-   pragma Inline (Is_Boolean_Type);\n-   pragma Inline (Is_Controlled);\n-   pragma Inline (Is_Entity_Name);\n-   pragma Inline (Is_Package_Or_Generic_Package);\n-   pragma Inline (Is_Packed_Array);\n-   pragma Inline (Is_String_Type);\n-   pragma Inline (Is_Subprogram_Or_Generic_Subprogram);\n-   pragma Inline (Is_Volatile);\n-   pragma Inline (Is_Wrapper_Package);\n-   pragma Inline (Known_RM_Size);\n-   pragma Inline (Known_Static_Component_Bit_Offset);\n-   pragma Inline (Known_Static_RM_Size);\n-   pragma Inline (Scope_Depth);\n-   pragma Inline (Scope_Depth_Set);\n-   pragma Inline (Unknown_RM_Size);\n+   pragma Inline (Init_Alignment);\n+   pragma Inline (Init_Component_Bit_Offset);\n+   pragma Inline (Init_Component_Size);\n+   pragma Inline (Init_Digits_Value);\n+   pragma Inline (Init_Esize);\n+   pragma Inline (Init_Normalized_First_Bit);\n+   pragma Inline (Init_Normalized_Position);\n+   pragma Inline (Init_Normalized_Position_Max);\n+   pragma Inline (Init_RM_Size);\n \n end Einfo;"}]}