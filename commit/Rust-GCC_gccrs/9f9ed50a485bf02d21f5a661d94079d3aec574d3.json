{"sha": "9f9ed50a485bf02d21f5a661d94079d3aec574d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5ZWQ1MGE0ODViZjAyZDIxZjVhNjYxZDk0MDc5ZDNhZWM1NzRkMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T10:36:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T10:36:36Z"}, "message": "(stack_result): Fix bug in last change.\n\nFrom-SVN: r9530", "tree": {"sha": "1edf10080e19a6e42f20c69e100a479ef531e94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1edf10080e19a6e42f20c69e100a479ef531e94a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f9ed50a485bf02d21f5a661d94079d3aec574d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9ed50a485bf02d21f5a661d94079d3aec574d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9ed50a485bf02d21f5a661d94079d3aec574d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9ed50a485bf02d21f5a661d94079d3aec574d3/comments", "author": null, "committer": null, "parents": [{"sha": "4f2bae393c05fb0bccebcb328295b4a9c7ea61cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2bae393c05fb0bccebcb328295b4a9c7ea61cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2bae393c05fb0bccebcb328295b4a9c7ea61cd"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "78dc88a06442284cfd3464d0d4d3ebcffecd9230", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ed50a485bf02d21f5a661d94079d3aec574d3/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ed50a485bf02d21f5a661d94079d3aec574d3/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=9f9ed50a485bf02d21f5a661d94079d3aec574d3", "patch": "@@ -1398,7 +1398,7 @@ uses_reg_or_mem (x)\n }\n \n /* If current function returns its result in an fp stack register,\n-   return the register number.  Otherwise return -1.  */\n+   return the REG.  Otherwise, return 0.  */\n \n static rtx\n stack_result (decl)\n@@ -1407,8 +1407,8 @@ stack_result (decl)\n   rtx result = DECL_RTL (DECL_RESULT (decl));\n \n   if (result != 0\n-      && !(GET_CODE (result) == REG\n-\t   && REGNO (result) < FIRST_PSEUDO_REGISTER))\n+      && ! (GET_CODE (result) == REG\n+\t    && REGNO (result) < FIRST_PSEUDO_REGISTER))\n     {\n #ifdef FUNCTION_OUTGOING_VALUE\n       result\n@@ -1418,7 +1418,7 @@ stack_result (decl)\n #endif\n     }\n \n-  return STACK_REG_P (result) ? result : (rtx) 0;\n+  return result != 0 && STACK_REG_P (result) ? result : 0;\n }\n \f\n /* Determine the which registers are live at the start of each basic"}]}