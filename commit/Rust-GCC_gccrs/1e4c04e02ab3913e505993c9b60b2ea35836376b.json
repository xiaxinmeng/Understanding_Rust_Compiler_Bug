{"sha": "1e4c04e02ab3913e505993c9b60b2ea35836376b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU0YzA0ZTAyYWIzOTEzZTUwNTk5M2M5YjYwYjJlYTM1ODM2Mzc2Yg==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2003-01-25T00:35:36Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2003-01-25T00:35:36Z"}, "message": "c4x.md (UNSPEC_BU): New constants.\n\n\t* config/c4x/c4x.md (UNSPEC_BU): New constants.\n\t(UNSPEC_RPTS, UNSPEC_LSH, UNSPEC_CMPHI, UNSPEC_RCPF): Likewise.\n\t(UNSPEC_RND, UNSPEC_RPTB_FILL, UNSPEC_LOADHF_INT): Likewise.\n\t(UNSPEC_STOREHF_INT, UNSPEC_RSQRF, UNSPEC_LOADQF_INT): Likewise.\n\t(UNSPEC_STOREQF_INT, UNSPEC_LDIV, UNSPEC_PUSH_ST):  Likewise.\n\t(UNSPEC_POP_ST, UNSPEC_PUSH_DP, UNSPEC_POP_DP):  Likewise.\n\t(UNSPEC_POPQI, UNSPEC_POPQF, UNSPEC_ANDN_ST):  Likewise.\n\t(UNSPEC_RPTB_INIT, UNSPEC_TOIEEE, UNSPEC_FRIEEE):  Likewise.\n\nFrom-SVN: r61754", "tree": {"sha": "29fd16ffcda0d55f56f1b9a8dd975b8c056bc3f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29fd16ffcda0d55f56f1b9a8dd975b8c056bc3f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e4c04e02ab3913e505993c9b60b2ea35836376b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4c04e02ab3913e505993c9b60b2ea35836376b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e4c04e02ab3913e505993c9b60b2ea35836376b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4c04e02ab3913e505993c9b60b2ea35836376b/comments", "author": null, "committer": null, "parents": [{"sha": "e5c81eff2e39dbbbb7cd4112cbb5db3022be0e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c81eff2e39dbbbb7cd4112cbb5db3022be0e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5c81eff2e39dbbbb7cd4112cbb5db3022be0e79"}], "stats": {"total": 170, "additions": 94, "deletions": 76}, "files": [{"sha": "1cb8d9ebb1906e0b1b8284e5d7caaf4ad4d80d3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4c04e02ab3913e505993c9b60b2ea35836376b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4c04e02ab3913e505993c9b60b2ea35836376b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e4c04e02ab3913e505993c9b60b2ea35836376b", "patch": "@@ -1,6 +1,17 @@\n+2003-01-25  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (UNSPEC_BU): New constants.\n+\t(UNSPEC_RPTS, UNSPEC_LSH, UNSPEC_CMPHI, UNSPEC_RCPF): Likewise.\n+\t(UNSPEC_RND, UNSPEC_RPTB_FILL, UNSPEC_LOADHF_INT): Likewise.\n+\t(UNSPEC_STOREHF_INT, UNSPEC_RSQRF, UNSPEC_LOADQF_INT): Likewise.\n+\t(UNSPEC_STOREQF_INT, UNSPEC_LDIV, UNSPEC_PUSH_ST):  Likewise.\n+\t(UNSPEC_POP_ST, UNSPEC_PUSH_DP, UNSPEC_POP_DP):  Likewise.\n+\t(UNSPEC_POPQI, UNSPEC_POPQF, UNSPEC_ANDN_ST):  Likewise.\n+\t(UNSPEC_RPTB_INIT, UNSPEC_TOIEEE, UNSPEC_FRIEEE):  Likewise.\n+\n Fri Jan 24 23:44:12 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n-\t* emit-rtl.c (reg_attrs_htab): New static variable.\n+: New static variable.\n \t(reg_attrs_htab_hash, reg_attrs_htab_eq, get_reg_attrs): New static\n \tfunctions.\n \t(reg_rtx): Do not maintain regno_decl."}, {"sha": "de1bb60971df5b8188dd8729496145bc8b92184e", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 82, "deletions": 75, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4c04e02ab3913e505993c9b60b2ea35836376b/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4c04e02ab3913e505993c9b60b2ea35836376b/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=1e4c04e02ab3913e505993c9b60b2ea35836376b", "patch": "@@ -446,29 +446,32 @@\n ;\n ; C4x UNSPEC NUMBERS\n ;\n-;  1 BU/BUD\n-;  2 RPTS\n-;  3 LSH\n-;  4 cmphi\n-;  5 RCPF\n-;  6 RND\n-;  7 repeat block filler\n-;  8 loadhf_int\n-;  9 storehf_int\n-; 10 RSQRF\n-; 11 loadqf_int\n-; 12 storeqf_int\n-; 13 Conditional load on overflow\n-; 14 push_st\n-; 15 pop_st\n-; 16 push_dp\n-; 17 pop_dp\n-; 18 popqi_unspec\n-; 19 popqf_unspec\n-; 20 andn_st\n-; 22 rptb_init\n-; 23 toieee\n-; 24 frieee\n+(define_constants\n+  [\n+   (UNSPEC_BU\t\t\t1)\n+   (UNSPEC_RPTS\t\t\t2)\n+   (UNSPEC_LSH\t\t\t3)\n+   (UNSPEC_CMPHI\t\t4)\n+   (UNSPEC_RCPF\t\t\t5)\n+   (UNSPEC_RND\t\t\t6)\n+   (UNSPEC_RPTB_FILL\t\t7)\n+   (UNSPEC_LOADHF_INT\t\t8)\n+   (UNSPEC_STOREHF_INT\t\t9)\n+   (UNSPEC_RSQRF\t\t10)\n+   (UNSPEC_LOADQF_INT\t\t11)\n+   (UNSPEC_STOREQF_INT\t\t12)\n+   (UNSPEC_LDIV\t\t\t13)\n+   (UNSPEC_PUSH_ST\t\t14)\n+   (UNSPEC_POP_ST\t\t15)\n+   (UNSPEC_PUSH_DP\t\t16)\n+   (UNSPEC_POP_DP\t\t17)\n+   (UNSPEC_POPQI\t\t18)\n+   (UNSPEC_POPQF\t\t19)\n+   (UNSPEC_ANDN_ST\t\t20)\n+   (UNSPEC_RPTB_INIT\t\t22)\n+   (UNSPEC_TOIEEE\t\t23)\n+   (UNSPEC_FRIEEE\t\t24)\n+  ])\n \n ;\n ; C4x FUNCTIONAL UNITS\n@@ -1414,14 +1417,16 @@\n   [(set_attr \"type\" \"push\")])\n \n (define_insn \"push_st\"\n-  [(set (mem:QI (pre_inc:QI (reg:QI 20))) (unspec:QI [(reg:QI 21)] 14))\n+  [(set (mem:QI (pre_inc:QI (reg:QI 20)))\n+        (unspec:QI [(reg:QI 21)] UNSPEC_PUSH_ST))\n    (use (reg:QI 21))]\n   \"\"\n   \"push\\\\tst\"\n   [(set_attr \"type\" \"push\")])\n \n (define_insn \"push_dp\"\n-  [(set (mem:QI (pre_inc:QI (reg:QI 20))) (unspec:QI [(reg:QI 16)] 16))\n+  [(set (mem:QI (pre_inc:QI (reg:QI 20))) \n+        (unspec:QI [(reg:QI 16)] UNSPEC_PUSH_DP))\n    (use (reg:QI 16))]\n   \"\"\n   \"push\\\\tdp\"\n@@ -1436,21 +1441,23 @@\n   [(set_attr \"type\" \"pop\")])\n \n (define_insn \"pop_st\"\n-  [(set (unspec:QI [(reg:QI 21)] 15) (mem:QI (post_dec:QI (reg:QI 20))))\n+  [(set (unspec:QI [(reg:QI 21)] UNSPEC_POP_ST) \n+        (mem:QI (post_dec:QI (reg:QI 20))))\n    (clobber (reg:CC 21))]\n   \"\"\n   \"pop\\\\tst\"\n   [(set_attr \"type\" \"pop\")])\n \n (define_insn \"pop_dp\"\n-  [(set (unspec:QI [(reg:QI 16)] 17) (mem:QI (post_dec:QI (reg:QI 20))))\n+  [(set (unspec:QI [(reg:QI 16)] UNSPEC_POP_DP)\n+        (mem:QI (post_dec:QI (reg:QI 20))))\n    (clobber (reg:CC 16))]\n   \"\"\n   \"pop\\\\tdp\"\n   [(set_attr \"type\" \"pop\")])\n \n (define_insn \"popqi_unspec\"\n-  [(set (unspec:QI [(match_operand:QI 0 \"reg_operand\" \"=r\")] 18)\n+  [(set (unspec:QI [(match_operand:QI 0 \"reg_operand\" \"=r\")] UNSPEC_POPQI)\n         (mem:QI (post_dec:QI (reg:QI 20))))\n    (clobber (match_dup 0))\n    (clobber (reg:CC 21))]\n@@ -2489,7 +2496,7 @@\n \n (define_insn \"andn_st\"\n   [(set (unspec:QI [(reg:QI 21)] 20)\n-        (and:QI (unspec:QI [(reg:QI 21)] 20)\n+        (and:QI (unspec:QI [(reg:QI 21)] UNSPEC_ANDN_ST)\n                 (match_operand:QI 0 \"\" \"N\")))\n    (use (match_dup 0))\n    (use (reg:CC 21))\n@@ -2890,7 +2897,7 @@\n (define_insn \"*lshlqi3_clobber\"\n   [(set (match_operand:QI 0 \"reg_operand\" \"=d,d,?d,c,c,?c\")\n         (ashift:QI (match_operand:QI 1 \"src_operand\" \"0,rR,rS<>,0,rR,rS<>\")\n-                   (unspec:QI [(match_operand:QI 2 \"src_operand\" \"rIm,JR,rS<>,rIm,JR,rS<>\")] 3)))\n+                   (unspec:QI [(match_operand:QI 2 \"src_operand\" \"rIm,JR,rS<>,rIm,JR,rS<>\")] UNSPEC_LSH)))\n    (clobber (reg:CC 21))]\n   \"valid_operands (ASHIFT, operands, QImode)\"\n   \"@\n@@ -3425,7 +3432,7 @@\n ; This can generate invalid stack slot displacements\n (define_split\n  [(set (match_operand:QI 0 \"reg_operand\" \"\")\n-       (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"\")] 12))]\n+       (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"\")] UNSPEC_STOREQF_INT))]\n   \"reload_completed\"\n   [(set (match_dup 3) (match_dup 1))\n    (set (match_dup 0) (match_dup 2))]\n@@ -3436,14 +3443,14 @@\n \n (define_insn \"storeqf_int\"\n  [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n-       (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"f\")] 12))]\n+       (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"f\")] UNSPEC_STOREQF_INT))]\n  \"\"\n  \"#\"\n   [(set_attr \"type\" \"multi\")])\n \n (define_split\n  [(parallel [(set (match_operand:QI 0 \"reg_operand\" \"\")\n-                  (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"\")] 12))\n+                  (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"\")] UNSPEC_STOREQF_INT))\n              (clobber (reg:CC 21))])]\n   \"reload_completed\"\n   [(set (mem:QF (pre_inc:QI (reg:QI 20)))\n@@ -3468,7 +3475,7 @@\n \n (define_insn \"storeqf_int_clobber\"\n  [(parallel [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n-                  (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"f\")] 12))\n+                  (unspec:QI [(match_operand:QF 1 \"reg_operand\" \"f\")] UNSPEC_STOREQF_INT))\n              (clobber (reg:CC 21))])]\n  \"\"\n  \"#\"\n@@ -3478,7 +3485,7 @@\n ; This can generate invalid stack slot displacements\n (define_split\n  [(set (match_operand:QF 0 \"reg_operand\" \"\")\n-       (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"\")] 11))]\n+       (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"\")] UNSPEC_LOADQF_INT))]\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (match_dup 3))]\n@@ -3489,14 +3496,14 @@\n \n (define_insn \"loadqf_int\"\n  [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-       (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"r\")] 11))]\n+       (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"r\")] UNSPEC_LOADQF_INT))]\n  \"\"\n  \"#\"\n   [(set_attr \"type\" \"multi\")])\n \n (define_split\n  [(parallel [(set (match_operand:QF 0 \"reg_operand\" \"\")\n-                  (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"\")] 11))\n+                  (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"\")] UNSPEC_LOADQF_INT))\n              (clobber (reg:CC 21))])]\n   \"reload_completed\"\n   [(set (mem:QI (pre_inc:QI (reg:QI 20)))\n@@ -3508,7 +3515,7 @@\n \n (define_insn \"loadqf_int_clobber\"\n  [(parallel [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-                  (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"r\")] 11))\n+                  (unspec:QF [(match_operand:QI 1 \"reg_operand\" \"r\")] UNSPEC_LOADQF_INT))\n              (clobber (reg:CC 21))])]\n  \"\"\n  \"#\"\n@@ -3586,7 +3593,7 @@\n  [(set_attr \"type\" \"pop\")])\n \n (define_insn \"popqf_unspec\"\n-  [(set (unspec:QF [(match_operand:QF 0 \"reg_operand\" \"=f\")] 19)\n+  [(set (unspec:QF [(match_operand:QF 0 \"reg_operand\" \"=f\")] UNSPEC_POPQF)\n         (mem:QF (post_dec:QI (reg:QI 20))))\n    (clobber (match_dup 0))\n    (clobber (reg:CC 21))]\n@@ -3867,7 +3874,7 @@\n \t\t              (const_int 0)))\n \t     (set (match_dup 4)\n \t\t  (fix:QI (match_dup 3)))])\n-  (parallel [(set (match_dup 4) (unspec:QI [(match_dup 2)] 13))\n+  (parallel [(set (match_dup 4) (unspec:QI [(match_dup 2)] UNSPEC_LDIV))\n              (use (reg:CC 21))])\n   (set (match_operand:QI 0 \"reg_operand\" \"=r\") (match_dup 4))]\n  \"\"\n@@ -3889,7 +3896,7 @@\n \t\t              (const_int 0)))\n \t     (set (match_dup 4)\n \t\t  (fix:QI (match_dup 3)))])\n-  (parallel [(set (match_dup 4) (unspec:QI [(match_dup 2)] 13))\n+  (parallel [(set (match_dup 4) (unspec:QI [(match_dup 2)] UNSPEC_LDIV))\n              (use (reg:CC 21))])\n   (set (match_operand:QI 0 \"reg_operand\" \"=r\") (match_dup 4))]\n  \"\"\n@@ -3913,7 +3920,7 @@\n ;\n (define_insn \"rcpfqf_clobber\"\n   [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] 5))\n+        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] UNSPEC_RCPF))\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X\"\n   \"rcpf\\\\t%1,%0\"\n@@ -3924,7 +3931,7 @@\n ;\n (define_insn \"*rsqrfqf_clobber\"\n   [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] 10))\n+        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] UNSPEC_RSQRF))\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X\"\n   \"rsqrf\\\\t%1,%0\"\n@@ -3935,7 +3942,7 @@\n ;\n (define_insn \"*rndqf_clobber\"\n   [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] 6))\n+        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] UNSPEC_RND))\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X\"\n   \"rnd\\\\t%1,%0\"\n@@ -3945,7 +3952,7 @@\n ; Inlined float square root for C4x\n (define_expand \"sqrtqf2_inline\"\n   [(parallel [(set (match_dup 2)\n-\t           (unspec:QF [(match_operand:QF 1 \"src_operand\" \"\")] 10))\n+\t           (unspec:QF [(match_operand:QF 1 \"src_operand\" \"\")] UNSPEC_RSQRF))\n \t      (clobber (reg:CC_NOOV 21))])\n    (parallel [(set (match_dup 3) (mult:QF (match_dup 5) (match_dup 1)))\n \t      (clobber (reg:CC_NOOV 21))])\n@@ -3968,7 +3975,7 @@\n    (parallel [(set (match_dup 4) (mult:QF (match_dup 2) (match_dup 1)))\n \t      (clobber (reg:CC_NOOV 21))])\n    (parallel [(set (match_operand:QF 0 \"reg_operand\" \"\")\n-\t           (unspec:QF [(match_dup 4)] 6))\n+\t           (unspec:QF [(match_dup 4)] UNSPEC_RND))\n \t      (clobber (reg:CC_NOOV 21))])]\n   \"! TARGET_C3X\"\n   \"if (! reload_in_progress\n@@ -3993,14 +4000,14 @@\n ;\n (define_insn \"toieee\"\n   [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] 23))\n+        (unspec:QF [(match_operand:QF 1 \"src_operand\" \"fHm\")] UNSPEC_TOIEEE))\n    (clobber (reg:CC 21))]\n  \"\"\n  \"toieee\\\\t%1,%0\")\n \n (define_insn \"frieee\"\n   [(set (match_operand:QF 0 \"reg_operand\" \"=f\")\n-        (unspec:QF [(match_operand:QF 1 \"memory_operand\" \"m\")] 24))\n+        (unspec:QF [(match_operand:QF 1 \"memory_operand\" \"m\")] UNSPEC_FRIEEE))\n    (clobber (reg:CC 21))]\n  \"\"\n  \"frieee\\\\t%1,%0\")\n@@ -4203,7 +4210,7 @@\n ; Inlined float divide for C4x\n (define_expand \"divqf3_inline\"\n   [(parallel [(set (match_dup 3)\n-\t           (unspec:QF [(match_operand:QF 2 \"src_operand\" \"\")] 5))\n+\t           (unspec:QF [(match_operand:QF 2 \"src_operand\" \"\")] UNSPEC_RCPF))\n \t      (clobber (reg:CC_NOOV 21))])\n    (parallel [(set (match_dup 4) (mult:QF (match_dup 2) (match_dup 3)))\n \t      (clobber (reg:CC_NOOV 21))])\n@@ -4222,7 +4229,7 @@\n \t         \t    (match_dup 3)))\n \t      (clobber (reg:CC_NOOV 21))])\n    (parallel [(set (match_operand:QF 0 \"reg_operand\" \"\")\n-\t           (unspec:QF [(match_dup 3)] 6))\n+\t           (unspec:QF [(match_dup 3)] UNSPEC_RND))\n \t      (clobber (reg:CC_NOOV 21))])]\n   \"! TARGET_C3X\"\n   \"if (! reload_in_progress\n@@ -4278,7 +4285,7 @@\n \n (define_insn \"*ldi_on_overflow\"\n   [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n-\t(unspec:QI [(match_operand:QI 1 \"src_operand\" \"rIm\")] 13))\n+\t(unspec:QI [(match_operand:QI 1 \"src_operand\" \"rIm\")] UNSPEC_LDIV))\n    (use (reg:CC 21))]\n   \"\"\n   \"ldiv\\\\t%1,%0\"\n@@ -4519,7 +4526,7 @@\n \n (define_insn \"*bu\"\n   [(set (pc)\n-        (unspec [(match_operand:QI 0 \"reg_operand\" \"r\")] 1))]\n+        (unspec [(match_operand:QI 0 \"reg_operand\" \"r\")] UNSPEC_BU))]\n   \"\"\n   \"bu%#\\\\t%0\"\n   [(set_attr \"type\" \"jump\")])\n@@ -4695,7 +4702,7 @@\n \n (define_insn \"*toieee_movqf_clobber\"\n   [(set (match_operand:QF 0 \"ext_low_reg_operand\" \"=q\")\n-\t(unspec:QF [(match_operand:QF 1 \"par_ind_operand\" \"S<>\")] 23))\n+\t(unspec:QF [(match_operand:QF 1 \"par_ind_operand\" \"S<>\")] UNSPEC_TOIEEE))\n    (set (match_operand:QF 2 \"par_ind_operand\" \"=S<>\")\n         (match_operand:QF 3 \"ext_low_reg_operand\" \"q\"))\n    (clobber (reg:CC 21))]\n@@ -4709,7 +4716,7 @@\n \n (define_insn \"*frieee_movqf_clobber\"\n   [(set (match_operand:QF 0 \"ext_low_reg_operand\" \"=q\")\n-\t(unspec:QF [(match_operand:QF 1 \"par_ind_operand\" \"S<>\")] 24))\n+\t(unspec:QF [(match_operand:QF 1 \"par_ind_operand\" \"S<>\")] UNSPEC_FRIEEE))\n    (set (match_operand:QF 2 \"par_ind_operand\" \"=S<>\")\n         (match_operand:QF 3 \"ext_low_reg_operand\" \"q\"))\n    (clobber (reg:CC 21))]\n@@ -5504,7 +5511,7 @@\n \n (define_insn \"rpts_top\"\n   [(unspec [(use (label_ref (match_operand 0 \"\" \"\")))\n-            (use (label_ref (match_operand 1 \"\" \"\")))] 2)\n+            (use (label_ref (match_operand 1 \"\" \"\")))] UNSPEC_RPTS)\n    (clobber (reg:QI 25))\n    (clobber (reg:QI 26))]\n   \"\"\n@@ -5517,7 +5524,7 @@\n ; This pattern needs to be emitted at the start of the loop to\n ; say that RS and RE are loaded.\n (define_insn \"rptb_init\"\n-  [(unspec [(match_operand:QI 0 \"register_operand\" \"va\")] 22)\n+  [(unspec [(match_operand:QI 0 \"register_operand\" \"va\")] UNSPEC_RPTB_INIT)\n    (clobber (reg:QI 25))\n    (clobber (reg:QI 26))]\n   \"\"\n@@ -5893,7 +5900,7 @@\n  \"reload_completed\"\n  [(set (match_dup 0) (float_extend:HF (match_dup 2)))\n   (set (match_dup 0) (unspec:HF [(subreg:QI (match_dup 0) 0)\n-                                            (match_dup 3)] 8))]\n+                                            (match_dup 3)] UNSPEC_LOADHF_INT))]\n  \"operands[2] = c4x_operand_subword (operands[1], 0, 1, HFmode);\n   operands[3] = c4x_operand_subword (operands[1], 1, 1, HFmode);\n   PUT_MODE (operands[2], QFmode);\n@@ -5905,7 +5912,7 @@\n  \"reload_completed && 0\"\n  [(set (match_dup 0) (float_extend:HF (match_dup 2)))\n   (set (match_dup 0) (unspec:HF [(subreg:QI (match_dup 0) 0)\n-                                            (match_dup 3)] 8))]\n+                                            (match_dup 3)] UNSPEC_LOADHF_INT))]\n  \"operands[2] = c4x_operand_subword (operands[1], 0, 1, HFmode);\n   operands[3] = c4x_operand_subword (operands[1], 1, 1, HFmode);\n   PUT_MODE (operands[2], QFmode);\n@@ -5916,7 +5923,7 @@\n        (match_operand:HF 1 \"reg_operand\" \"\"))]\n   \"reload_completed\"\n   [(set (match_dup 2) (float_truncate:QF (match_dup 1)))\n-   (set (match_dup 3) (unspec:QI [(match_dup 1)] 9))]\n+   (set (match_dup 3) (unspec:QI [(match_dup 1)] UNSPEC_STOREHF_INT))]\n  \"operands[2] = c4x_operand_subword (operands[0], 0, 1, HFmode);\n   operands[3] = c4x_operand_subword (operands[0], 1, 1, HFmode);\n   PUT_MODE (operands[2], QFmode);\n@@ -5932,7 +5939,7 @@\n (define_insn \"*loadhf_int\"\n  [(set (match_operand:HF 0 \"reg_operand\" \"+h\")\n        (unspec:HF [(subreg:QI (match_dup 0) 0)\n-                   (match_operand:QI 1 \"src_operand\" \"rIm\")] 8))]\n+                   (match_operand:QI 1 \"src_operand\" \"rIm\")] UNSPEC_LOADHF_INT))]\n  \"\"\n  \"ldiu\\\\t%1,%0\"\n   [(set_attr \"type\" \"unary\")])\n@@ -5946,7 +5953,7 @@\n \n (define_insn \"*storehf_int\"\n  [(set (match_operand:QI 0 \"memory_operand\" \"=m\")\n-       (unspec:QI [(match_operand:HF 1 \"reg_operand\" \"h\")] 9))]\n+       (unspec:QI [(match_operand:HF 1 \"reg_operand\" \"h\")] UNSPEC_STOREHF_INT))]\n  \"\"\n  \"sti\\\\t%1,%0\"\n   [(set_attr \"type\" \"store\")])\n@@ -5983,7 +5990,7 @@\n   [(set (mem:QF (pre_inc:QI (reg:QI 20)))\n         (float_truncate:QF (match_dup 0)))\n    (set (mem:QI (pre_inc:QI (reg:QI 20)))\n-        (unspec:QI [(match_dup 0)] 9))]\n+        (unspec:QI [(match_dup 0)] UNSPEC_STOREHF_INT))]\n  \"\")\n \n (define_insn \"pushhf_trunc\"\n@@ -5995,7 +6002,7 @@\n \n (define_insn \"pushhf_int\"\n   [(set (mem:QI (pre_inc:QI (reg:QI 20)))\n-        (unspec:QI [(match_operand:HF 0 \"reg_operand\" \"h\")] 9))]\n+        (unspec:QI [(match_operand:HF 0 \"reg_operand\" \"h\")] UNSPEC_STOREHF_INT))]\n  \"\"\n  \"push\\\\t%0\"\n  [(set_attr \"type\" \"push\")])\n@@ -6019,14 +6026,14 @@\n               (clobber (reg:CC 21))])\n    (parallel [(set (match_dup 0)\n                    (unspec:HF [(subreg:QI (match_dup 0) 0)\n-                   (mem:QI (post_dec:QI (reg:QI 20)))] 8))\n+                   (mem:QI (post_dec:QI (reg:QI 20)))] UNSPEC_LOADHF_INT))\n               (clobber (reg:CC 21))])]\n  \"\")\n \n (define_insn \"*pophf_int\"\n  [(set (match_operand:HF 0 \"reg_operand\" \"+h\")\n        (unspec:HF [(subreg:QI (match_dup 0) 0)\n-                   (mem:QI (post_dec:QI (reg:QI 20)))] 8))\n+                   (mem:QI (post_dec:QI (reg:QI 20)))] UNSPEC_LOADHF_INT))\n   (clobber (reg:CC 21))]\n  \"\"\n  \"pop\\\\t%0\"\n@@ -6131,7 +6138,7 @@\n ;\n (define_insn \"*rcpfhf_clobber\"\n   [(set (match_operand:HF 0 \"reg_operand\" \"=h\")\n-        (unspec:HF [(match_operand:HF 1 \"reg_or_const_operand\" \"hH\")] 5))\n+        (unspec:HF [(match_operand:HF 1 \"reg_or_const_operand\" \"hH\")] UNSPEC_RCPF))\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X\"\n   \"rcpf\\\\t%1,%0\"\n@@ -6142,7 +6149,7 @@\n ;\n (define_insn \"*rsqrfhf_clobber\"\n   [(set (match_operand:HF 0 \"reg_operand\" \"=h\")\n-        (unspec:HF [(match_operand:HF 1 \"reg_or_const_operand\" \"hH\")] 10))\n+        (unspec:HF [(match_operand:HF 1 \"reg_or_const_operand\" \"hH\")] UNSPEC_RSQRF))\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X\"\n   \"rsqrf\\\\t%1,%0\"\n@@ -6153,7 +6160,7 @@\n ;\n (define_insn \"*rndhf_clobber\"\n   [(set (match_operand:HF 0 \"reg_operand\" \"=h\")\n-        (unspec:HF [(match_operand:HF 1 \"reg_or_const_operand\" \"hH\")] 6))\n+        (unspec:HF [(match_operand:HF 1 \"reg_or_const_operand\" \"hH\")] UNSPEC_RND))\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X\"\n   \"rnd\\\\t%1,%0\"\n@@ -6163,7 +6170,7 @@\n ; Inlined float square root for C4x\n (define_expand \"sqrthf2_inline\"\n   [(parallel [(set (match_dup 2)\n-\t           (unspec:HF [(match_operand:HF 1 \"reg_operand\" \"\")] 10))\n+\t           (unspec:HF [(match_operand:HF 1 \"reg_operand\" \"\")] UNSPEC_RSQRF))\n \t      (clobber (reg:CC_NOOV 21))])\n    (parallel [(set (match_dup 3) (mult:HF (match_dup 5) (match_dup 1)))\n \t      (clobber (reg:CC_NOOV 21))])\n@@ -6310,7 +6317,7 @@\n ; Inlined float divide for C4x\n (define_expand \"divhf3_inline\"\n   [(parallel [(set (match_dup 3)\n-\t           (unspec:HF [(match_operand:HF 2 \"reg_operand\" \"\")] 5))\n+\t           (unspec:HF [(match_operand:HF 2 \"reg_operand\" \"\")] UNSPEC_RCPF))\n \t      (clobber (reg:CC_NOOV 21))])\n    (parallel [(set (match_dup 4) (mult:HF (match_dup 2) (match_dup 3)))\n \t      (clobber (reg:CC_NOOV 21))])\n@@ -6886,7 +6893,7 @@\n   /* If the shift count is greater than 32 this will do an arithmetic\n      right shift.  However, we need a logical right shift.  */\n   (parallel [(set (match_dup 9)\n-                  (ashift:QI (match_dup 4) (unspec:QI [(match_dup 10)] 3)))\n+                  (ashift:QI (match_dup 4) (unspec:QI [(match_dup 10)] UNSPEC_LSH)))\n              (clobber (reg:CC 21))])\n   (set (match_dup 6) (match_dup 8))\n   (parallel [(set (match_dup 5)\n@@ -7010,7 +7017,7 @@\n   \"! reload_completed\"\n   [(parallel [(set (reg:CC 21)\n                    (unspec:CC [(compare:CC (match_dup 0)\n-                                           (match_dup 1))] 4))\n+                                           (match_dup 1))] UNSPEC_CMPHI))\n               (clobber (match_scratch:QI 2 \"\"))\n \t      (clobber (match_scratch:QI 3 \"\"))])]\n   \"\")\n@@ -7022,7 +7029,7 @@\n   \"! reload_completed\"\n   [(parallel [(set (reg:CC_NOOV 21)\n                    (unspec:CC_NOOV [(compare:CC_NOOV (match_dup 0)\n-                                                     (match_dup 1))] 4))\n+                                                     (match_dup 1))] UNSPEC_CMPHI))\n               (clobber (match_scratch:QI 2 \"\"))\n \t      (clobber (match_scratch:QI 3 \"\"))])]\n   \"\")\n@@ -7154,7 +7161,7 @@\n (define_insn \"cmphi_cc\"\n   [(set (reg:CC 21)\n         (unspec:CC [(compare:CC (match_operand:HI 0 \"src_operand\" \"rR,rS<>\")\n-                                (match_operand:HI 1 \"src_operand\" \"R,rS<>\"))] 4))\n+                                (match_operand:HI 1 \"src_operand\" \"R,rS<>\"))] UNSPEC_CMPHI))\n    (clobber (match_scratch:QI 2 \"=&d,&d\"))\n    (clobber (match_scratch:QI 3 \"=&c,&c\"))]\n   \"valid_operands (COMPARE, operands, HImode)\"\n@@ -7170,7 +7177,7 @@\n (define_insn \"cmphi_cc_noov\"\n   [(set (reg:CC_NOOV 21)\n         (unspec:CC_NOOV [(compare:CC_NOOV (match_operand:HI 0 \"src_operand\" \"rR,rS<>\")\n-                                     (match_operand:HI 1 \"src_operand\" \"R,rS<>\"))] 4))\n+                                     (match_operand:HI 1 \"src_operand\" \"R,rS<>\"))] UNSPEC_CMPHI))\n    (clobber (match_scratch:QI 2 \"=&d,&d\"))\n    (clobber (match_scratch:QI 3 \"=&c,&c\"))]\n   \"valid_operands (COMPARE, operands, HImode)\""}]}