{"sha": "821281db25562b7ef271fda9e2fd39a70cfb2731", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIxMjgxZGIyNTU2MmI3ZWYyNzFmZGE5ZTJmZDM5YTcwY2ZiMjczMQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-10-14T11:46:47Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-10-14T11:46:47Z"}, "message": "re PR bootstrap/9330 ([alpha-osf]small alphaev56-dec-osf5.1 --enable-threads=posix problem)\n\n\t* fixinc/inclhack.def (alpha_pthread_gcc): New fix.\n\t* fixinc/fixincl.x: Regenerate.\n\t* fixinc/tests/base/pthread.h [ALPHA_PTHREAD_GCC_CHECK]: New\n\ttestcase.\n\tFixes PR bootstrap/9330.\n\nFrom-SVN: r72465", "tree": {"sha": "ff4b640d515d09b3f1a832dd3ca68a75c6fd90f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4b640d515d09b3f1a832dd3ca68a75c6fd90f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/821281db25562b7ef271fda9e2fd39a70cfb2731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821281db25562b7ef271fda9e2fd39a70cfb2731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/821281db25562b7ef271fda9e2fd39a70cfb2731", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821281db25562b7ef271fda9e2fd39a70cfb2731/comments", "author": null, "committer": null, "parents": [{"sha": "b16c143519a832de3aba9e35b214514e38619f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16c143519a832de3aba9e35b214514e38619f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16c143519a832de3aba9e35b214514e38619f8f"}], "stats": {"total": 95, "additions": 90, "deletions": 5}, "files": [{"sha": "a3da592d99d1cbc6009fd0afbfead979852fe1d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=821281db25562b7ef271fda9e2fd39a70cfb2731", "patch": "@@ -1,3 +1,11 @@\n+2003-10-14  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* fixinc/inclhack.def (alpha_pthread_gcc): New fix.\n+\t* fixinc/fixincl.x: Regenerate.\n+\t* fixinc/tests/base/pthread.h [ALPHA_PTHREAD_GCC_CHECK]: New\n+\ttestcase. \n+\tFixes PR bootstrap/9330.\n+\n 2003-10-13  Eric Christopher  <echristo@redhat.com>\n \n \t* config/frv/frv.c (frv_adjust_field_align): Redo check for"}, {"sha": "19f9880a33a10583bd47284eae2d9471a957edc9", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 51, "deletions": 5, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=821281db25562b7ef271fda9e2fd39a70cfb2731", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday October  6, 2003 at 09:28:53 PM MEST\n+ * It has been AutoGen-ed  Tuesday October 14, 2003 at 02:19:40 AM MEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Mon Oct  6 21:28:53 MEST 2003\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Oct 14 02:19:40 MEST 2003\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 158 fixup descriptions.\n+ * This file contains 159 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -898,6 +898,46 @@ static const char* apzAlpha_PthreadPatch[] = {\n %2\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha_Pthread_Gcc fix\n+ */\n+tSCC zAlpha_Pthread_GccName[] =\n+     \"alpha_pthread_gcc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha_Pthread_GccList[] =\n+  \"|pthread.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAlpha_Pthread_GccMachs[] = {\n+        \"alpha*-dec-osf*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha_Pthread_GccSelect0[] =\n+       \"#else\\n\\\n+# error <pthread.h>: unrecognized compiler.\";\n+\n+#define    ALPHA_PTHREAD_GCC_TEST_CT  1\n+static tTestDesc aAlpha_Pthread_GccTests[] = {\n+  { TT_EGREP,    zAlpha_Pthread_GccSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha_Pthread_Gcc\n+ */\n+static const char* apzAlpha_Pthread_GccPatch[] = {\n+    \"format\",\n+    \"#elif defined (__GNUC__)\\n\\\n+# define _PTHREAD_ENV_GCC\\n\\\n+%0\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Sbrk fix\n@@ -6269,9 +6309,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          178\n+#define REGEX_COUNT          179\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            158\n+#define FIX_COUNT            159\n \n /*\n  *  Enumerate the fixes\n@@ -6296,6 +6336,7 @@ typedef enum {\n     ALPHA_GETOPT_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n     ALPHA_PTHREAD_FIXIDX,\n+    ALPHA_PTHREAD_GCC_FIXIDX,\n     ALPHA_SBRK_FIXIDX,\n     AVOID_BOOL_DEFINE_FIXIDX,\n     AVOID_BOOL_TYPE_FIXIDX,\n@@ -6533,6 +6574,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA_PTHREAD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_PthreadTests,   apzAlpha_PthreadPatch, 0 },\n \n+  {  zAlpha_Pthread_GccName,    zAlpha_Pthread_GccList,\n+     apzAlpha_Pthread_GccMachs,\n+     ALPHA_PTHREAD_GCC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAlpha_Pthread_GccTests,   apzAlpha_Pthread_GccPatch, 0 },\n+\n   {  zAlpha_SbrkName,    zAlpha_SbrkList,\n      apzAlpha_SbrkMachs,\n      ALPHA_SBRK_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "2d0239b6f7883c3746f86131d52c9468b99cab4b", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=821281db25562b7ef271fda9e2fd39a70cfb2731", "patch": "@@ -598,6 +598,27 @@ fix = {\n };\n \n \n+/*\n+ *  Recognize GCC in Tru64 UNIX V5.1B <pthread.h>.\n+ */\n+fix = {\n+    hackname  = alpha_pthread_gcc;\n+    files     = pthread.h;\n+    select    = \"#else\\n# error <pthread.h>: unrecognized compiler.\";\n+\n+    mach      = \"alpha*-dec-osf*\";\n+    c_fix     = format;\n+    c_fix_arg = \"#elif defined (__GNUC__)\\n\"\n+\t\t\"# define _PTHREAD_ENV_GCC\\n\"\n+    \t\t\"%0\";\n+\n+    test_text = \"# define _PTHREAD_ENV_INTELC\\n\"\n+\t\t\"#else\\n\"\n+\t\t\"# error <pthread.h>: unrecognized compiler.\\n\"\n+\t\t\"#endif\";\n+};\n+\n+\n /*\n  *  Fix return value of sbrk in unistd.h on Alpha OSF/1 V2.0\n  *  And OpenBSD."}, {"sha": "bd10f5a65ba97293f6e1c51c724edfdcf49f43de", "filename": "gcc/fixinc/tests/base/pthread.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821281db25562b7ef271fda9e2fd39a70cfb2731/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h?ref=821281db25562b7ef271fda9e2fd39a70cfb2731", "patch": "@@ -22,6 +22,16 @@\n #endif  /* ALPHA_PTHREAD_CHECK */\n \n \n+#if defined( ALPHA_PTHREAD_GCC_CHECK )\n+# define _PTHREAD_ENV_INTELC\n+#elif defined (__GNUC__)\n+# define _PTHREAD_ENV_GCC\n+#else\n+# error <pthread.h>: unrecognized compiler.\n+#endif\n+#endif  /* ALPHA_PTHREAD_GCC_CHECK */\n+\n+\n #if defined( PTHREAD_PAGE_SIZE_CHECK )\n extern int __page_size;\n #endif  /* PTHREAD_PAGE_SIZE_CHECK */"}]}