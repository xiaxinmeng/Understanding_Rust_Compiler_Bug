{"sha": "46343456ba95ba86b04b8a21e91095cf6b2ec8e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYzNDM0NTZiYTk1YmE4NmIwNGI4YTIxZTkxMDk1Y2Y2YjJlYzhlNA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-05-17T14:14:56Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-05-17T14:14:56Z"}, "message": "Testcase forgotten in the previous commit.\n\n\tPR fortran/26551\n\t* gfortran.dg/recursive_check_2.f90: New test.\n\nFrom-SVN: r113861", "tree": {"sha": "f39baaf1739741844d829070a6368a44cf40aad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f39baaf1739741844d829070a6368a44cf40aad8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46343456ba95ba86b04b8a21e91095cf6b2ec8e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46343456ba95ba86b04b8a21e91095cf6b2ec8e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46343456ba95ba86b04b8a21e91095cf6b2ec8e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46343456ba95ba86b04b8a21e91095cf6b2ec8e4/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77f131ca20f4394c1d333fe2cc37533177238d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f131ca20f4394c1d333fe2cc37533177238d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f131ca20f4394c1d333fe2cc37533177238d00"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "5bd9189f676c379648597e348e66d31a3af326d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46343456ba95ba86b04b8a21e91095cf6b2ec8e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46343456ba95ba86b04b8a21e91095cf6b2ec8e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46343456ba95ba86b04b8a21e91095cf6b2ec8e4", "patch": "@@ -2,6 +2,7 @@\n \n \tPR fortran/26551\n \t* gfortran.dg/recursive_check_1.f: New test.\n+\t* gfortran.dg/recursive_check_2.f90: New test.\n \n 2005-05-17  Bernd Schmidt  <bernd.schmidt@analog.com>\n "}, {"sha": "42273f9eeef8b74655504723c152778b2f908479", "filename": "gcc/testsuite/gfortran.dg/recursive_check_2.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46343456ba95ba86b04b8a21e91095cf6b2ec8e4/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_check_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46343456ba95ba86b04b8a21e91095cf6b2ec8e4/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_check_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_check_2.f90?ref=46343456ba95ba86b04b8a21e91095cf6b2ec8e4", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! PR fortran/26551\n+ function func2()\n+   integer func2\n+   func2 = 42\n+   return\n+ entry c() result (foo)\n+   foo = barbar()\n+   return\n+ entry b() result (bar)\n+   bar = 12\n+   return\n+ contains\n+   function barbar ()\n+     barbar = b () ! { dg-error \"is not declared as RECURSIVE\" }\n+   end function barbar\n+ end function"}]}