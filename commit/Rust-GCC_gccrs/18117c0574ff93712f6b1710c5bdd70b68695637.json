{"sha": "18117c0574ff93712f6b1710c5bdd70b68695637", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxMTdjMDU3NGZmOTM3MTJmNmIxNzEwYzViZGQ3MGI2ODY5NTYzNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-12-14T18:00:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-12-14T18:00:39Z"}, "message": "re PR target/29978 (redundant jumps)\n\n\tPR target/29978\n\t* config/i386/i386.c (ix86_expand_branch): Optimize LE/LEU/GT/GTU\n\tDImode comparisons against constant with all 1's in the lower word.\n\n\t* gcc.target/i386/pr29978.c: New test.\n\nFrom-SVN: r130938", "tree": {"sha": "c4441421464bc00c96de471a7e07b6a70025b6e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4441421464bc00c96de471a7e07b6a70025b6e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18117c0574ff93712f6b1710c5bdd70b68695637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18117c0574ff93712f6b1710c5bdd70b68695637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18117c0574ff93712f6b1710c5bdd70b68695637", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18117c0574ff93712f6b1710c5bdd70b68695637/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05c219bb4943a1ebfc30df747e1d97897b3494a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c219bb4943a1ebfc30df747e1d97897b3494a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c219bb4943a1ebfc30df747e1d97897b3494a1"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "0875708d2b71e7cc83721d3198fa2c9323ba6a43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18117c0574ff93712f6b1710c5bdd70b68695637", "patch": "@@ -1,3 +1,9 @@\n+2007-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/29978\n+\t* config/i386/i386.c (ix86_expand_branch): Optimize LE/LEU/GT/GTU\n+\tDImode comparisons against constant with all 1's in the lower word.\n+\n 2007-12-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (sse4_2_pcmpestr): Use reg_not_xmm0_operand"}, {"sha": "95a34969cc6c0aee61b65da7b5b30c674a980f9a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=18117c0574ff93712f6b1710c5bdd70b68695637", "patch": "@@ -12093,16 +12093,28 @@ ix86_expand_branch (enum rtx_code code, rtx label)\n \n \t/* Otherwise, if we are doing less-than or greater-or-equal-than,\n \t   op1 is a constant and the low word is zero, then we can just\n-\t   examine the high word.  */\n+\t   examine the high word.  Similarly for low word -1 and\n+\t   less-or-equal-than or greater-than.  */\n \n-\tif (CONST_INT_P (hi[1]) && lo[1] == const0_rtx)\n+\tif (CONST_INT_P (hi[1]))\n \t  switch (code)\n \t    {\n \t    case LT: case LTU: case GE: case GEU:\n-\t      ix86_compare_op0 = hi[0];\n-\t      ix86_compare_op1 = hi[1];\n-\t      ix86_expand_branch (code, label);\n-\t      return;\n+\t      if (lo[1] == const0_rtx)\n+\t\t{\n+\t\t  ix86_compare_op0 = hi[0];\n+\t\t  ix86_compare_op1 = hi[1];\n+\t\t  ix86_expand_branch (code, label);\n+\t\t  return;\n+\t\t}\n+\t    case LE: case LEU: case GT: case GTU:\n+\t      if (lo[1] == constm1_rtx)\n+\t\t{\n+\t\t  ix86_compare_op0 = hi[0];\n+\t\t  ix86_compare_op1 = hi[1];\n+\t\t  ix86_expand_branch (code, label);\n+\t\t  return;\n+\t\t}\n \t    default:\n \t      break;\n \t    }"}, {"sha": "89c022855490f55f1de926acd57722012afcae09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18117c0574ff93712f6b1710c5bdd70b68695637", "patch": "@@ -1,3 +1,8 @@\n+2007-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/29978\n+\t* gcc.target/i386/pr29978.c: New test.\n+\n 2007-12-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sse-12.c (dg-options): Use -msse4"}, {"sha": "8c0bf9f5e7525da6b6c7c567b015051c68e08381", "filename": "gcc/testsuite/gcc.target/i386/pr29978.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr29978.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18117c0574ff93712f6b1710c5bdd70b68695637/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr29978.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr29978.c?ref=18117c0574ff93712f6b1710c5bdd70b68695637", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/29978 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+\n+void g ();\n+\n+void\n+f (long long v)\n+{\n+  if (v > 0xfffffffffLL)\n+    g ();\n+  g ();\n+}\n+\n+/* Verify there are no redundant jumps jl .L2; jle .L2 */\n+/* { dg-final { scan-assembler-not \"jl\\[^e\\]*\\\\.L\" { target ilp32 } } } */"}]}