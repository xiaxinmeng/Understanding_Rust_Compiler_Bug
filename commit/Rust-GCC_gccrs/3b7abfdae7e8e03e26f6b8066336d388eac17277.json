{"sha": "3b7abfdae7e8e03e26f6b8066336d388eac17277", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I3YWJmZGFlN2U4ZTAzZTI2ZjZiODA2NjMzNmQzODhlYWMxNzI3Nw==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2008-08-18T14:31:58Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2008-08-18T14:31:58Z"}, "message": "driver-rs6000.c (detect_caches_freebsd): New function.\n\n2008-08-18  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* config/rs6000/driver-rs6000.c (detect_caches_freebsd): New function.\n\t(detect_processor_freebsd): Likewise.\n\t(host_detect_local_cpu): Call newly added functions for FreeBSD.\n\nFrom-SVN: r139196", "tree": {"sha": "edaaa425e215d876c6ff5616e1109527d681006f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edaaa425e215d876c6ff5616e1109527d681006f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b7abfdae7e8e03e26f6b8066336d388eac17277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7abfdae7e8e03e26f6b8066336d388eac17277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b7abfdae7e8e03e26f6b8066336d388eac17277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7abfdae7e8e03e26f6b8066336d388eac17277/comments", "author": null, "committer": null, "parents": [{"sha": "2f9864e6cf1dbff17c448d96f743542e823e164e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9864e6cf1dbff17c448d96f743542e823e164e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9864e6cf1dbff17c448d96f743542e823e164e"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "2f49559479ce6779fc6cffbc838365bfc683e372", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b7abfdae7e8e03e26f6b8066336d388eac17277/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b7abfdae7e8e03e26f6b8066336d388eac17277/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b7abfdae7e8e03e26f6b8066336d388eac17277", "patch": "@@ -1,3 +1,9 @@\n+2008-08-18  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* config/rs6000/driver-rs6000.c (detect_caches_freebsd): New function.\n+\t(detect_processor_freebsd): Likewise.\n+\t(host_detect_local_cpu): Call newly added functions for FreeBSD.\n+\n 2008-08-18  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-cfg.c (verify_types_in_gimple_assign): Verify copies"}, {"sha": "3f5524ea08a526129a8b35a43ee4450dbf096f0f", "filename": "gcc/config/rs6000/driver-rs6000.c", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b7abfdae7e8e03e26f6b8066336d388eac17277/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b7abfdae7e8e03e26f6b8066336d388eac17277/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c?ref=3b7abfdae7e8e03e26f6b8066336d388eac17277", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for the gcc driver.\n-   Copyright (C) 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -31,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n # include <link.h>\n #endif\n \n-#ifdef __APPLE__\n+#if defined (__APPLE__) || (__FreeBSD__)\n # include <sys/types.h>\n # include <sys/sysctl.h>\n #endif\n@@ -124,6 +124,36 @@ detect_processor_darwin (void)\n \n #endif /* __APPLE__ */\n \n+#ifdef __FreeBSD__\n+\n+/* Returns the description of caches on FreeBSD PPC.  */\n+\n+static char *\n+detect_caches_freebsd (void)\n+{\n+  unsigned l1_sizekb, l1_line, l1_assoc, l2_sizekb;\n+  size_t len = 4;\n+\n+  /* Currently, as of FreeBSD-7.0, there is only the cacheline_size\n+     available via sysctl.  */\n+  sysctlbyname (\"machdep.cacheline_size\", &l1_line, &len, NULL, 0);\n+\n+  l1_sizekb = 32;\n+  l1_assoc = 0;\n+  l2_sizekb = 512;\n+\n+  return describe_cache (l1_sizekb, l1_line, l1_assoc, l2_sizekb);\n+}\n+\n+/* Currently returns default powerpc.  */\n+static const char *\n+detect_processor_freebsd (void)\n+{\n+  return \"powerpc\";\n+}\n+\n+#endif /* __FreeBSD__  */\n+\n #ifdef __linux__\n \n /* Returns AT_PLATFORM if present, otherwise generic PowerPC.  */\n@@ -343,6 +373,10 @@ const char\n   cache = detect_caches_aix ();\n #elif defined (__APPLE__)\n   cache = detect_caches_darwin ();\n+#elif defined (__FreeBSD__)\n+  cache = detect_caches_freebsd ();\n+  /* FreeBSD PPC does not provide any cache information yet.  */\n+  cache = \"\";\n #elif defined (__linux__)\n   cache = detect_caches_linux ();\n   /* PPC Linux does not provide any cache information yet.  */\n@@ -355,6 +389,8 @@ const char\n   cpu = detect_processor_aix ();\n #elif defined (__APPLE__)\n   cpu = detect_processor_darwin ();\n+#elif defined (__FreeBSD__)\n+  cpu = detect_processor_freebsd ();\n #elif defined (__linux__)\n   cpu = detect_processor_linux ();\n #else"}]}