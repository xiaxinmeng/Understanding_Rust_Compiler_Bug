{"sha": "8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzNWNmYTg0NGFiMmY3YTMzZmMzMDBlZmYyOTE3ZjZmYmI1MWU4Yw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2007-02-04T21:19:49Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2007-02-04T21:19:49Z"}, "message": "invoke.texi: Update documentation.\n\n2007-02-03  Steven G. Kargl <kargl@gcc.gnu.org>\n\n        * fortran/invoke.texi: Update documentation.\n        * fortran/options.c (gfc_post_options): Deal with tabs with -std=f2003\n        and -pedantic.\n\n2007-02-03  Steven G. Kargl <kargl@gcc.gnu.org>\n\n        * gfortran.dg/spread_shape_1.f90: Remove tabs.\n        * gfortran.dg/derived_init_2.f90: Ditto.\n        * gfortran.dg/elemental_subroutine_3.f90: Ditto.\n        * gfortran.dg/array_initializer_1.f90: Ditto.\n        * gfortran.dg/do_2.f90: Ditto.\n        * gfortran.dg/proc_assign_1.f90: Ditto.\n\nFrom-SVN: r121580", "tree": {"sha": "27ff80d585cc510189bc6c7ca956751b0ce7613b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27ff80d585cc510189bc6c7ca956751b0ce7613b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/comments", "author": null, "committer": null, "parents": [{"sha": "f81ef9b362abef17c2e97dff62a6fd0044d7c1cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f81ef9b362abef17c2e97dff62a6fd0044d7c1cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f81ef9b362abef17c2e97dff62a6fd0044d7c1cc"}], "stats": {"total": 59, "additions": 41, "deletions": 18}, "files": [{"sha": "91140a76d82726f66514aa85cd10d0fe1fce5409", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -1,3 +1,10 @@\n+2007-02-04  Steven G. Kargl <kargl@gcc.gnu.org>\n+\n+\t* fortran/invoke.texi: Update documentation.\n+\t* fortran/options.c (gfc_post_options): Deal with tabs with -std=f2003\n+\tand -pedantic.\n+\n+\n 2007-02-03  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* trans-array.c: Fix a comment typo."}, {"sha": "c4d09024586d20740eab9ba90da551636425923a", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -501,7 +501,8 @@ A LOGICAL SELECT construct has three CASE statements.\n By default, tabs are accepted as whitespace, but tabs are not members\n of the Fortran Character Set.  @option{-Wno-tabs} will cause a warning\n to be issued if a tab is encountered. Note, @option{-Wno-tabs} is active\n-for @option{-pedantic}, @option{-std=f95}, and @option{-Wall}.\n+for @option{-pedantic}, @option{-std=f95}, @option{-std=f2003}, and\n+@option{-Wall}.\n \n @item -Wunderflow\n @cindex @code{-Wunderflow} option"}, {"sha": "0f277665ac6e44454a2428abc378be4dcf13ac1e", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -289,7 +289,10 @@ gfc_post_options (const char **pfilename)\n     gfc_option.flag_max_stack_var_size = 0;\n   \n   if (pedantic)\n-    gfc_option.warn_ampersand = 1;\n+    { \n+      gfc_option.warn_ampersand = 1;\n+      gfc_option.warn_tabs = 0;\n+    }\n \n   if (gfc_option.flag_all_intrinsics)\n     gfc_option.warn_nonstd_intrinsics = 0;\n@@ -618,6 +621,7 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.max_continue_free = 255;\n       gfc_option.max_identifier_length = 63;\n       gfc_option.warn_ampersand = 1;\n+      gfc_option.warn_tabs = 0;\n       break;\n \n     case OPT_std_gnu:"}, {"sha": "40db44b38922ba7762884e27d673149e97c6869d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -1,3 +1,12 @@\n+2007-02-04  Steven G. Kargl <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/spread_shape_1.f90: Remove tabs.\n+\t* gfortran.dg/derived_init_2.f90: Ditto.\n+\t* gfortran.dg/elemental_subroutine_3.f90: Ditto.\n+\t* gfortran.dg/array_initializer_1.f90: Ditto.\n+\t* gfortran.dg/do_2.f90: Ditto.\n+\t* gfortran.dg/proc_assign_1.f90: Ditto.\n+\n 2007-02-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/30636"}, {"sha": "b1db9bf59b1ff680df94d00acdf30efce2f4d227", "filename": "gcc/testsuite/gfortran.dg/array_initializer_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_initializer_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_initializer_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_initializer_1.f90?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -13,7 +13,7 @@\n   real, parameter :: r(6) = (/(x(i:i +1, i), i = 1,3)/)\r\n   real, parameter :: s(12) = (/((x(i, i:j-1:-1), i = 3,4), j = 2,3)/)\r\n   real, parameter :: t(8) = (/(z, &\r\n-\treal (i)**3, y(i), i = 2, 3)/) ! { dg-warning \"nonstandard\" }\r\n+        real (i)**3, y(i), i = 2, 3)/) ! { dg-warning \"nonstandard\" }\r\n \r\n   integer, parameter :: ii = 4\r\n \r\n@@ -26,7 +26,7 @@\n   if (any (z .ne. (/11., 12./))) call abort ()\r\n   if (any (r .ne. (/1., 2., 6., 7., 11., 12./))) call abort ()\r\n   if (any (s .ne. (/11., 7., 3., 16., 12., 8., 4., &\r\n-\t\t    11., 7.,     16., 12., 8. /))) call abort ()\r\n+                    11., 7.,     16., 12., 8. /))) call abort ()\r\n \r\n   if (any (t .ne. (/11., 12., 8., 6., 11., 12., 27., 15. /))) call abort ()\r\n \r"}, {"sha": "18d7544ecd8803262296135f327c55e80f4df795", "filename": "gcc/testsuite/gfortran.dg/derived_init_2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_init_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_init_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_init_2.f90?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -16,7 +16,7 @@ module subs\n contains\n     subroutine foo(fb)\n         use dt\r\n-\ttype(drv), intent(out) :: fb\n+        type(drv), intent(out) :: fb\n         call sub (fb)\n     end subroutine foo\n \r\n@@ -45,4 +45,4 @@ program main\n     call foo(aa)\r\n end program main\r\n \r\n-! { dg-final { cleanup-modules \"dt subs\" } }\n\\ No newline at end of file\n+! { dg-final { cleanup-modules \"dt subs\" } }"}, {"sha": "207b06a54326120a6869505af25d5c463512a817", "filename": "gcc/testsuite/gfortran.dg/do_2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_2.f90?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -36,8 +36,8 @@\n                        do\n                        enddo\n                    enddo\n-\t       enddo dokkk\n-\t  enddo dokk\n+               enddo dokkk\n+          enddo dokk\n 115  enddo dok \n ! Correct non-block do constructs\n   do 117 l=1,3"}, {"sha": "1f93cd4a2c76c6e866e3408caad342b0497531f4", "filename": "gcc/testsuite/gfortran.dg/elemental_subroutine_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_3.f90?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -28,7 +28,7 @@ program test\n    implicit none\n    type(mytype) :: y(6), x(6) = (/mytype(1),mytype(20),mytype(300),&\n                                   mytype(4000),mytype(50000),&\n-\t\t\t\t  mytype(1000000)/)\n+                                  mytype(1000000)/)\n    type(mytype) :: z(2, 3)\n ! The original case - dependency between lhs and rhs. \n    x = x((/2,3,1,4,5,6/))"}, {"sha": "418e5f49e86cbe6688309a858fd31f72bb7ed475", "filename": "gcc/testsuite/gfortran.dg/proc_assign_1.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -49,12 +49,12 @@ end module simpler\n     use simpler\r\n     real w, stmt_fcn\r\n     interface\r\n-\tfunction ext1 ()\r\n-\t    integer ext1\r\n-\tend function ext1\r\n-\tfunction ext2 (arg)\r\n-\t    integer ext2, arg\r\n-\tend function ext2\r\n+        function ext1 ()\r\n+           integer ext1\r\n+        end function ext1\r\n+        function ext2 (arg)\r\n+           integer ext2, arg\r\n+        end function ext2\r\n     end interface\r\n     stmt_fcn (w) = sin (w)     \r\n     call x (y ())\r\n@@ -75,4 +75,4 @@ function y ()\n         y = 2                ! OK - function result\r\n     end function y\r\n end\r\n-! { dg-final { cleanup-modules \"simple simpler\" } }\n\\ No newline at end of file\n+! { dg-final { cleanup-modules \"simple simpler\" } }\r"}, {"sha": "650584ecf4332b5ce3c233e619ddc8d88f552c7b", "filename": "gcc/testsuite/gfortran.dg/spread_shape_1.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fspread_shape_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8135cfa844ab2f7a33fc300eff2917f6fbb51e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fspread_shape_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fspread_shape_1.f90?ref=8135cfa844ab2f7a33fc300eff2917f6fbb51e8c", "patch": "@@ -4,8 +4,10 @@\n !\n ! Contributed by Paul Thomas  <pault@gcc.gnu.org>\n   real,dimension(:, :),pointer :: ptr\n-  real,dimension(2, 2),parameter :: u = & ! { dg-warning \"nonstandard\" }\n-\treshape((/0.25, 0.5, 0.75, 1.00/),(/2,2/))\n+  real,dimension(2, 2) :: u\n+\n+  u = reshape((/0.25, 0.5, 0.75, 1.00/),(/2,2/))\n+  \n   allocate (ptr(2,2))\n \n ! Original PR"}]}