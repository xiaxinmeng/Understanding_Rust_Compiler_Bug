{"sha": "da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE3Y2Y2NjNiNzU1MTNlNGQyYmFmNWE1NzlmZmNiNGY4YTYxMTkzYg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-22T01:45:48Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-22T19:32:08Z"}, "message": "analyzer: testsuite fixes for alloca, getpass, and setjmp (PR 93316)\n\nPR analyzer/93316 reports various testsuite failures where I\naccidentally relied on properties of x86_64-pc-linux-gnu.\n\nThe following patch fixes them on sparc-sun-solaris2.11 (gcc211 in the\nGCC compile farm), and, I hope, the other configurations showing\nfailures.\n\nThere may still be other failures for pattern-test-2.c, which I'm\ntracking separately as PR analyzer/93291.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/93316\n\t* analyzer.cc (is_setjmp_call_p): Check for \"setjmp\" as well as\n\t\"_setjmp\".\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/93316\n\t* gcc.dg/analyzer/data-model-1.c: Include <alloca.h>.\n\t* gcc.dg/analyzer/malloc-1.c: Likewise.\n\t* gcc.dg/analyzer/malloc-callbacks.c (get_alloca): Return\n\t__builtin_alloca rather than alloca.\n\t* gcc.dg/analyzer/malloc-paths-8.c: Include <alloca.h>.\n\t* gcc.dg/analyzer/sensitive-1.c: Define __EXTENSIONS__ before\n\tincluding unistd.h.\n\t* gcc.dg/analyzer/setjmp-2.c: Replace include of <setjmp.h>\n\twith \"test-setjmp.h\" and usage of setjmp with new SETJMP macro.\n\t* gcc.dg/analyzer/setjmp-3.c: Likewise.\n\t* gcc.dg/analyzer/setjmp-4.c: Likewise.\n\t* gcc.dg/analyzer/setjmp-5.c: Likewise.\n\t* gcc.dg/analyzer/setjmp-6.c: Likewise.\n\t* gcc.dg/analyzer/setjmp-7.c: Likewise.\n\t* gcc.dg/analyzer/setjmp-7a.c: Likewise.\n\t* gcc.dg/analyzer/setjmp-8.c: Likewise.\n\t* gcc.dg/analyzer/setjmp-9.c: Likewise.\n\t* gcc.dg/analyzer/test-setjmp.h: New header.", "tree": {"sha": "5fb82464d04b69b8a4e59890b1be504daf6d6f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb82464d04b69b8a4e59890b1be504daf6d6f2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75038aa6aa5b562e6358108619d66ef2ccab9a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75038aa6aa5b562e6358108619d66ef2ccab9a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75038aa6aa5b562e6358108619d66ef2ccab9a53"}], "stats": {"total": 126, "additions": 90, "deletions": 36}, "files": [{"sha": "d0a652b4a5776b33bcc252b49aaf1ea124068435", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,3 +1,9 @@\n+2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93316\n+\t* analyzer.cc (is_setjmp_call_p): Check for \"setjmp\" as well as\n+\t\"_setjmp\".\n+\n 2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93307"}, {"sha": "3884788ee9e88ba15971e57ed23ae187c530f1cb", "filename": "gcc/analyzer/analyzer.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Fanalyzer%2Fanalyzer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Fanalyzer%2Fanalyzer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.cc?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -91,7 +91,8 @@ is_setjmp_call_p (const gimple *stmt)\n {\n   /* TODO: is there a less hacky way to check for \"setjmp\"?  */\n   if (const gcall *call = dyn_cast <const gcall *> (stmt))\n-    if (is_special_named_call_p (call, \"_setjmp\", 1))\n+    if (is_special_named_call_p (call, \"setjmp\", 1)\n+\t|| is_special_named_call_p (call, \"_setjmp\", 1))\n       return true;\n \n   return false;"}, {"sha": "5f07ffec0f9cf2e1825e13562a37175aadf466f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,3 +1,25 @@\n+2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93316\n+\t* gcc.dg/analyzer/data-model-1.c: Include <alloca.h>.\n+\t* gcc.dg/analyzer/malloc-1.c: Likewise.\n+\t* gcc.dg/analyzer/malloc-callbacks.c (get_alloca): Return\n+\t__builtin_alloca rather than alloca.\n+\t* gcc.dg/analyzer/malloc-paths-8.c: Include <alloca.h>.\n+\t* gcc.dg/analyzer/sensitive-1.c: Define __EXTENSIONS__ before\n+\tincluding unistd.h.\n+\t* gcc.dg/analyzer/setjmp-2.c: Replace include of <setjmp.h>\n+\twith \"test-setjmp.h\" and usage of setjmp with new SETJMP macro.\n+\t* gcc.dg/analyzer/setjmp-3.c: Likewise.\n+\t* gcc.dg/analyzer/setjmp-4.c: Likewise.\n+\t* gcc.dg/analyzer/setjmp-5.c: Likewise.\n+\t* gcc.dg/analyzer/setjmp-6.c: Likewise.\n+\t* gcc.dg/analyzer/setjmp-7.c: Likewise.\n+\t* gcc.dg/analyzer/setjmp-7a.c: Likewise.\n+\t* gcc.dg/analyzer/setjmp-8.c: Likewise.\n+\t* gcc.dg/analyzer/setjmp-9.c: Likewise.\n+\t* gcc.dg/analyzer/test-setjmp.h: New header.\n+\n 2020-01-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/92907 - noexcept does not consider \"const\" in member functions."}, {"sha": "91685f578a4f7b84adddc38659b379905b03818f", "filename": "gcc/testsuite/gcc.dg/analyzer/data-model-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdata-model-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdata-model-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdata-model-1.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,6 +1,7 @@\n #include <stdlib.h>\n #include <string.h>\n #include <stdio.h>\n+#include <alloca.h>\n #include \"analyzer-decls.h\"\n \n struct foo"}, {"sha": "e2e279bd7fd36b676a2f0759fc86893c4010fd09", "filename": "gcc/testsuite/gcc.dg/analyzer/malloc-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-1.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,3 +1,4 @@\n+#include <alloca.h>\n #include <stdlib.h>\n #include <string.h>\n "}, {"sha": "901ca5c46fd09893d87781a9a5f71602c6742f2f", "filename": "gcc/testsuite/gcc.dg/analyzer/malloc-callbacks.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-callbacks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-callbacks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-callbacks.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -12,7 +12,9 @@ get_malloc (void)\n static allocator_t __attribute__((noinline))\n get_alloca (void)\n {\n-  return alloca;\n+  /* On e.g. Solaris, alloca is a macro so we can't take its address;\n+     use __builtin_alloca instead.  */\n+  return __builtin_alloca;\n }\n \n static deallocator_t __attribute__((noinline))"}, {"sha": "10b97a054026bd46c230360ac286fbffbcf6c161", "filename": "gcc/testsuite/gcc.dg/analyzer/malloc-paths-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-paths-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-paths-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fmalloc-paths-8.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,6 +1,7 @@\n /* { dg-additional-options \"-fanalyzer-transitivity\" } */\n \n #include <stddef.h>\n+#include <alloca.h>\n #include <stdlib.h>\n \n extern void do_stuff (const void *);"}, {"sha": "81144af620edfd59b72a9ed1fcb06fb894f47ce9", "filename": "gcc/testsuite/gcc.dg/analyzer/sensitive-1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsensitive-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsensitive-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsensitive-1.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,5 +1,9 @@\n #include <stdio.h>\n+\n+/* Solaris needs this for <unistd.h> to declare getpass.  */\n+#define __EXTENSIONS__\n #include <unistd.h>\n+\n #include <string.h>\n \n char test_1 (FILE *logfile)"}, {"sha": "beaf43684e0bf7e0767ca9142bcd7a30eb246574", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-2.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,15 +1,15 @@\n /* { dg-additional-options \"-fdiagnostics-show-line-numbers -fdiagnostics-path-format=inline-events -fdiagnostics-show-caret\" } */\n /* { dg-enable-nn-line-numbers \"\" } */\n \n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include <stddef.h>\n #include \"analyzer-decls.h\"\n \n extern void foo (int);\n \n void test_1 (void)\n {\n-  setjmp (NULL);\n+  SETJMP (NULL);\n }\n \n void test_2 (void)\n@@ -19,7 +19,7 @@ void test_2 (void)\n \n   foo (0);\n \n-  i = setjmp(env);\n+  i = SETJMP(env);\n \n   foo (1);\n \n@@ -39,7 +39,7 @@ void test_2 (void)\n       |       ^~~~~~~~~~~~~~~~~~~~~~~\n   'test_2': event 1\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (1) 'setjmp' called here\n@@ -59,7 +59,7 @@ void test_2 (void)\n     |\n   'test_2': event 5\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (5) ...to 'setjmp' (saved at (1))"}, {"sha": "5c1d4060c3b532e172e6e541ee376012b171e67b", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-3.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-3.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,8 +1,8 @@\n /* { dg-additional-options \"-fdiagnostics-show-line-numbers -fdiagnostics-path-format=inline-events -fdiagnostics-show-caret\" } */\n /* { dg-enable-nn-line-numbers \"\" } */\n \n-#include <setjmp.h>\n #include <stddef.h>\n+#include \"test-setjmp.h\"\n #include \"analyzer-decls.h\"\n \n extern int foo (int) __attribute__ ((__pure__));\n@@ -20,7 +20,7 @@ void outer (void)\n \n   foo (0);\n \n-  i = setjmp(env);\n+  i = SETJMP(env);\n \n   if (i != 0)\n     {\n@@ -47,7 +47,7 @@ void outer (void)\n     |\n   'outer': event 2\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (2) 'setjmp' called here\n@@ -84,7 +84,7 @@ void outer (void)\n     |\n   'outer': event 8\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (8) ...to 'setjmp' in 'outer' (saved at (2))"}, {"sha": "f216a456b5933b47c1977237b01f9df896b87d9d", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-4.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-4.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-additional-options \"-fdiagnostics-show-line-numbers -fdiagnostics-path-format=inline-events -fdiagnostics-show-caret\" } */\n /* { dg-enable-nn-line-numbers \"\" } */\n \n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include \"analyzer-decls.h\"\n \n extern int foo (int) __attribute__ ((__pure__));\n@@ -23,7 +23,7 @@ void outer (int y)\n \n int main (void)\n {   \n-  if (!setjmp(buf))\n+  if (!SETJMP(buf))\n     outer (42);\n   else\n     __analyzer_dump_path (); /* { dg-message \"path\" } */\n@@ -42,14 +42,14 @@ int main (void)\n     |\n   'main': event 2\n     |\n-    |   NN |   if (!setjmp(buf))\n+    |   NN |   if (!SETJMP(buf))\n     |      |        ^~~~~~\n     |      |        |\n     |      |        (2) 'setjmp' called here\n     |\n   'main': events 3-5\n     |\n-    |   NN |   if (!setjmp(buf))\n+    |   NN |   if (!SETJMP(buf))\n     |      |      ^\n     |      |      |\n     |      |      (3) following 'true' branch...\n@@ -87,14 +87,14 @@ int main (void)\n     |\n   'main': event 10\n     |\n-    |   NN |   if (!setjmp(buf))\n+    |   NN |   if (!SETJMP(buf))\n     |      |        ^~~~~~\n     |      |        |\n     |      |        (10) ...to 'setjmp' in 'main' (saved at (2))\n     |\n   'main': events 11-13\n     |\n-    |   NN |   if (!setjmp(buf))\n+    |   NN |   if (!SETJMP(buf))\n     |      |      ^\n     |      |      |\n     |      |      (11) following 'false' branch..."}, {"sha": "3ee02980e572476b838d22fd6cb68a666d176f28", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-5.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-5.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,15 +1,15 @@\n /* { dg-additional-options \"-fdiagnostics-show-line-numbers -fdiagnostics-path-format=inline-events -fdiagnostics-show-caret\" } */\n /* { dg-enable-nn-line-numbers \"\" } */\n \n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include <stddef.h>\n #include \"analyzer-decls.h\"\n \n static jmp_buf env;\n \n static void inner (void)\n {\n-  setjmp (env);\n+  SETJMP (env);\n }\n \n void outer (void)\n@@ -45,7 +45,7 @@ void outer (void)\n            |\n          'inner': event 4\n            |\n-           |   NN |   setjmp (env);\n+           |   NN |   SETJMP (env);\n            |      |   ^~~~~~\n            |      |   |\n            |      |   (4) 'setjmp' called here"}, {"sha": "0e0f12f919c960cf66c64c890e09cd2d10a215fb", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-6.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,4 +1,4 @@\n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include <stddef.h>\n #include <stdlib.h>\n \n@@ -19,7 +19,7 @@ void outer (void)\n \n   foo (0);\n \n-  i = setjmp(env);\n+  i = SETJMP(env);\n \n   if (i == 0)\n     {"}, {"sha": "6cf98247bb65ee02bb97c3d838d438eb3c8008d2", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-7.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,4 +1,4 @@\n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include <stddef.h>\n #include <stdlib.h>\n \n@@ -24,7 +24,7 @@ void outer (void)\n \n   foo (0);\n \n-  i = setjmp(env);\n+  i = SETJMP(env);\n \n   if (i == 0)\n     {"}, {"sha": "87d35bc88f3c246ce08c39e51d2cd2afeb754cd5", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-7a.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-7a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-7a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-7a.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-additional-options \"-fdiagnostics-show-line-numbers -fdiagnostics-path-format=inline-events -fdiagnostics-show-caret\" } */\n /* { dg-enable-nn-line-numbers \"\" } */\n \n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include <stdlib.h>\n \n extern int foo (int) __attribute__ ((__pure__));\n@@ -26,7 +26,7 @@ void outer (void)\n \n   foo (0);\n \n-  i = setjmp(env);\n+  i = SETJMP(env);\n \n   if (i == 0)\n     {\n@@ -49,7 +49,7 @@ void outer (void)\n     |\n   'outer': event 2\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (2) 'setjmp' called here\n@@ -103,7 +103,7 @@ void outer (void)\n     |\n   'outer': event 12\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (12) ...to 'setjmp' in 'outer' (saved at (2))"}, {"sha": "abbee2d91081eaaace752b3a4651a182742ef659", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-8.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-additional-options \"-fdiagnostics-show-line-numbers -fdiagnostics-path-format=inline-events -fdiagnostics-show-caret\" } */\n /* { dg-enable-nn-line-numbers \"\" } */\n \n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include <stddef.h>\n #include \"analyzer-decls.h\"\n \n@@ -21,7 +21,7 @@ void outer (void)\n \n   foo (0);\n \n-  i = setjmp(env);\n+  i = SETJMP(env);\n \n   if (i != 0)\n     {\n@@ -48,7 +48,7 @@ void outer (void)\n     |\n   'outer': event 2\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (2) 'setjmp' called here\n@@ -85,7 +85,7 @@ void outer (void)\n     |\n   'outer': event 8\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (8) ...to 'setjmp' in 'outer' (saved at (2))"}, {"sha": "cf75d3ad896c267d0de6ed196b6e4ff48200febc", "filename": "gcc/testsuite/gcc.dg/analyzer/setjmp-9.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsetjmp-9.c?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-additional-options \"-fdiagnostics-show-line-numbers -fdiagnostics-path-format=inline-events -fdiagnostics-show-caret\" } */\n /* { dg-enable-nn-line-numbers \"\" } */\n \n-#include <setjmp.h>\n+#include \"test-setjmp.h\"\n #include <stddef.h>\n #include \"analyzer-decls.h\"\n \n@@ -23,7 +23,7 @@ void outer (void)\n \n   foo (0);\n \n-  i = setjmp(env);\n+  i = SETJMP(env);\n \n   if (i != 0)\n     {\n@@ -50,7 +50,7 @@ void outer (void)\n     |\n   'outer': event 2\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (2) 'setjmp' called here\n@@ -87,7 +87,7 @@ void outer (void)\n     |\n   'outer': event 8\n     |\n-    |   NN |   i = setjmp(env);\n+    |   NN |   i = SETJMP(env);\n     |      |       ^~~~~~\n     |      |       |\n     |      |       (8) ...to 'setjmp' in 'outer' (saved at (2))"}, {"sha": "ee0e1ec7d75791cef181669eb4658425abba1875", "filename": "gcc/testsuite/gcc.dg/analyzer/test-setjmp.h", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftest-setjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7cf663b75513e4d2baf5a579ffcb4f8a61193b/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftest-setjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftest-setjmp.h?ref=da7cf663b75513e4d2baf5a579ffcb4f8a61193b", "patch": "@@ -0,0 +1,16 @@\n+/* Various integration tests for setjmp-handling expect a precise\n+   multiline output.\n+   \n+   The outputs from -fdiagnostics-path-format=inline-events for such\n+   setjmp tests are dependent on whether setjmp is a macro or a function\n+   (and whether that macro is defined in a system header).\n+\n+   setjmp is a function on some systems and a macro on others.\n+   This header provides a SETJMP macro in a (fake) system header,\n+   for consistency of output across such systems.  */\n+\n+#include <setjmp.h>\n+\n+#pragma GCC system_header\n+\n+#define SETJMP(E) setjmp(E)"}]}