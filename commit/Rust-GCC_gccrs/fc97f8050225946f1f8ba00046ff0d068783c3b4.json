{"sha": "fc97f8050225946f1f8ba00046ff0d068783c3b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM5N2Y4MDUwMjI1OTQ2ZjFmOGJhMDAwNDZmZjBkMDY4NzgzYzNiNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-05-09T15:37:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-09T15:37:30Z"}, "message": "i386.md (absneg splitters with general regs): Use general_reg_operand predicate.\n\n\t* config/i386/i386.md (absneg splitters with general regs): Use\n\tgeneral_reg_operand predicate.\n\t(btsq peephole2): Use x86_64_immediate_operand to check if new\n\tvalue is suitable for immediate operand.  Generate emitted insn\n\tusing RTL expressions.\n\t(btcq peephole2): Ditto.\n\t(btrq peephole2): Ditto.  Generate correct immediate operand\n\tfor AND masking.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/fabsneg-1.c New test.\n\nFrom-SVN: r236042", "tree": {"sha": "e08cacca4be27d30ed814de006fa7ceae96ce517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e08cacca4be27d30ed814de006fa7ceae96ce517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc97f8050225946f1f8ba00046ff0d068783c3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc97f8050225946f1f8ba00046ff0d068783c3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc97f8050225946f1f8ba00046ff0d068783c3b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc97f8050225946f1f8ba00046ff0d068783c3b4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3abc83ebaea2312510ace3da69436393e73046c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3abc83ebaea2312510ace3da69436393e73046c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3abc83ebaea2312510ace3da69436393e73046c"}], "stats": {"total": 102, "additions": 75, "deletions": 27}, "files": [{"sha": "007ae87711c1847b37e0784e625551fc7808768e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc97f8050225946f1f8ba00046ff0d068783c3b4", "patch": "@@ -1,3 +1,14 @@\n+2016-05-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (absneg splitters with general regs): Use\n+\tgeneral_reg_operand predicate.\n+\t(btsq peephole2): Use x86_64_immediate_operand to check if new\n+\tvalue is suitable for immediate operand.  Generate emitted insn\n+\tusing RTL expressions.\n+\t(btcq peephole2): Ditto.\n+\t(btrq peephole2): Ditto.  Generate correct immediate operand\n+\tfor AND masking.\n+\n 2016-05-09  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* cfgexpand.c (expand_debug_expr): Fix address offset for negative"}, {"sha": "9b5407aa6974c17dbed7dee708e709503812027b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 27, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fc97f8050225946f1f8ba00046ff0d068783c3b4", "patch": "@@ -9306,7 +9306,7 @@\n })\n \n (define_split\n-  [(set (match_operand:SF 0 \"register_operand\")\n+  [(set (match_operand:SF 0 \"general_reg_operand\")\n \t(match_operator:SF 1 \"absneg_operator\" [(match_dup 0)]))\n    (use (match_operand:V4SF 2))\n    (clobber (reg:CC FLAGS_REG))]\n@@ -9330,7 +9330,7 @@\n })\n \n (define_split\n-  [(set (match_operand:DF 0 \"register_operand\")\n+  [(set (match_operand:DF 0 \"general_reg_operand\")\n \t(match_operator:DF 1 \"absneg_operator\" [(match_dup 0)]))\n    (use (match_operand 2))\n    (clobber (reg:CC FLAGS_REG))]\n@@ -9368,7 +9368,7 @@\n })\n \n (define_split\n-  [(set (match_operand:XF 0 \"register_operand\")\n+  [(set (match_operand:XF 0 \"general_reg_operand\")\n \t(match_operator:XF 1 \"absneg_operator\" [(match_dup 0)]))\n    (use (match_operand 2))\n    (clobber (reg:CC FLAGS_REG))]\n@@ -11049,20 +11049,19 @@\n \t\t   (const_int 1))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_64BIT && !TARGET_USE_BT\"\n-  [(const_int 0)]\n+  [(parallel [(set (match_dup 0)\n+\t\t   (ior:DI (match_dup 0) (match_dup 3)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n {\n   int i = INTVAL (operands[1]);\n \n-  rtx op1 = gen_int_mode (HOST_WIDE_INT_1U << i, DImode);\n+  operands[3] = gen_int_mode (HOST_WIDE_INT_1U << i, DImode);\n \n-  if (i >= 31)\n+  if (!x86_64_immediate_operand (operands[3], DImode))\n     {\n-      emit_move_insn (operands[2], op1);\n-      op1 = operands[2];\n+      emit_move_insn (operands[2], operands[3]);\n+      operands[3] = operands[2];\n     }\n-\n-  emit_insn (gen_iordi3 (operands[0], operands[0], op1));\n-  DONE;\n })\n \n (define_peephole2\n@@ -11074,20 +11073,19 @@\n \t\t   (const_int 0))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_64BIT && !TARGET_USE_BT\"\n-  [(const_int 0)]\n+  [(parallel [(set (match_dup 0)\n+\t\t   (and:DI (match_dup 0) (match_dup 3)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n {\n   int i = INTVAL (operands[1]);\n \n-  rtx op1 = gen_int_mode (HOST_WIDE_INT_1U << i, DImode);\n+  operands[3] = gen_int_mode (~(HOST_WIDE_INT_1U << i), DImode);\n  \n-  if (i >= 32)\n+  if (!x86_64_immediate_operand (operands[3], DImode))\n     {\n-      emit_move_insn (operands[2], op1);\n-      op1 = operands[2];\n+      emit_move_insn (operands[2], operands[3]);\n+      operands[3] = operands[2];\n     }\n-\n-  emit_insn (gen_anddi3 (operands[0], operands[0], op1));\n-  DONE;\n })\n \n (define_peephole2\n@@ -11100,20 +11098,19 @@\n \t\t\t(match_dup 0) (const_int 1) (match_dup 1))))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_64BIT && !TARGET_USE_BT\"\n-  [(const_int 0)]\n+  [(parallel [(set (match_dup 0)\n+\t\t   (xor:DI (match_dup 0) (match_dup 3)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n {\n   int i = INTVAL (operands[1]);\n \n-  rtx op1 = gen_int_mode (HOST_WIDE_INT_1U << i, DImode);\n+  operands[3] = gen_int_mode (HOST_WIDE_INT_1U << i, DImode);\n \n-  if (i >= 31)\n+  if (!x86_64_immediate_operand (operands[3], DImode))\n     {\n-      emit_move_insn (operands[2], op1);\n-      op1 = operands[2];\n+      emit_move_insn (operands[2], operands[3]);\n+      operands[3] = operands[2];\n     }\n-\n-  emit_insn (gen_xordi3 (operands[0], operands[0], op1));\n-  DONE;\n })\n \n (define_insn \"*bt<mode>\""}, {"sha": "29a9709e6ca639b20ac48164ba8238a843269807", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc97f8050225946f1f8ba00046ff0d068783c3b4", "patch": "@@ -1,3 +1,7 @@\n+2016-05-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/fabsneg-1.c New test.\n+\n 2016-05-09  Alan Modra  <amodra@gmail.com>\n \n \tPR testsuite/70826"}, {"sha": "3cdf456686413541614b0764325a64ac97e26862", "filename": "gcc/testsuite/gcc.target/i386/fabsneg-1.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffabsneg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc97f8050225946f1f8ba00046ff0d068783c3b4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffabsneg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffabsneg-1.c?ref=fc97f8050225946f1f8ba00046ff0d068783c3b4", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-O2 -mtune=nocona\" } */\n+\n+double x;\n+\n+void\n+__attribute__ ((noinline, noclone))\n+test_fabs (double a)\n+{\n+  asm volatile (\"\" : \"+r\" (a));\n+  x = __builtin_fabs (a);\n+}\n+\n+void\n+__attribute__ ((noinline, noclone))\n+test_neg (double a)\n+{\n+  asm volatile (\"\" : \"+r\" (a));\n+  x = -a;\n+}\n+\n+int main ()\n+{\n+  test_fabs (-1.0);\n+\n+  if (x != 1.0)\n+    __builtin_abort ();\n+\n+  test_neg (-1.0);\n+\n+  if (x != 1.0)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}