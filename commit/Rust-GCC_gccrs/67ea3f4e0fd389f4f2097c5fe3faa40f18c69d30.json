{"sha": "67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlYTNmNGUwZmQzODlmNGYyMDk3YzVmZTNmYWE0MGYxOGM2OWQzMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2017-06-20T13:01:32Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2017-06-20T13:01:32Z"}, "message": "Always check for target i?86 and x86_64\n\n\tlibstdc++-v3:\n\t* testsuite/20_util/variant/index_type.cc: Allow for all ilp32 and\n\tlp64 targets.\n\n\tgcc/testsuite:\n\t* c-c++-common/fold-masked-cmp-1.c: Allow for i?86-*-* target.\n\t* c-c++-common/fold-masked-cmp-2.c: Likewise.\n\t* c-c++-common/fold-masked-cmp-3.c: Likewise.\n\t* g++.dg/cpp0x/alignas4.C: Allow for i?86-*-* target, don't\n\trestrict to x86_64-*-*-gnu.\n\tSkip scan-assembler on *-*-darwin*.\n\t* g++.dg/vect/pr70944.cc: Allow for i?86-*-* target.\n\t* gcc.dg/loop-invariant.c: Likewise.\n\t* gcc.dg/lto/pr70955_0.c: Likewise.\n\t* gcc.dg/tree-ssa/pr69196-1.c: Likewise.\n\t* gcc.dg/tree-ssa/pr79803.c: Likewise.\n\t* gfortran.dg/pr68078.f90: Allow for i?86-*-linux*.\n\n\t* g++.dg/debug/dwarf2/const2b.C: Allow for x86_64-*-* target.\n\t* gcc.dg/attr-ms_struct-1.c: Allow for all i?86-*-*, x86_64-*-*\n\ttargets.\n\t* gcc.dg/attr-ms_struct-2.c: Likewise.\n\t* gcc.dg/attr-ms_struct-packed1.c: Likewise.\n\t* gcc.dg/bf-ms-layout.c: Likewise.\n\t* gcc.dg/bf-ms-layout-2.c: Likewise.\n\t* gcc.dg/pic-macro-define.c: Remove target restrictions.\n\tRequire fpic support.\n\t* gcc.target/i386/bitfield1.c: Allow for all i?86-*-*, x86_64-*-*\n\ttargets.\n\t* gcc.target/i386/bitfield2.c: Likewise.\n\t* gcc.target/i386/darwin-fpmath.c: Allow for x86_64-*-darwin*\n\ttargets.\n\t* gfortran.dg/fmt_pf.f90: Remove i?86-*-solaris2.9* from xfail.\n\nFrom-SVN: r249409", "tree": {"sha": "41321eb9f61bccf66d0a41c77db31601bed0f058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41321eb9f61bccf66d0a41c77db31601bed0f058"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71bbbd133f65c26f65709037401154362210560e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71bbbd133f65c26f65709037401154362210560e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71bbbd133f65c26f65709037401154362210560e"}], "stats": {"total": 83, "additions": 60, "deletions": 23}, "files": [{"sha": "e22ebf5cb1681d617571991e22c778ad6c0aac54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,3 +1,34 @@\n+2017-06-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* c-c++-common/fold-masked-cmp-1.c: Allow for i?86-*-* target.\n+\t* c-c++-common/fold-masked-cmp-2.c: Likewise.\n+\t* c-c++-common/fold-masked-cmp-3.c: Likewise.\n+\t* g++.dg/cpp0x/alignas4.C: Allow for i?86-*-* target, don't\n+\trestrict to x86_64-*-*-gnu.\n+\tSkip scan-assembler on *-*-darwin*.\n+\t* g++.dg/vect/pr70944.cc: Allow for i?86-*-* target.\n+\t* gcc.dg/loop-invariant.c: Likewise.\n+\t* gcc.dg/lto/pr70955_0.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr69196-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr79803.c: Likewise.\n+\t* gfortran.dg/pr68078.f90: Allow for i?86-*-linux*.\n+\n+\t* g++.dg/debug/dwarf2/const2b.C: Allow for x86_64-*-* target.\n+\t* gcc.dg/attr-ms_struct-1.c: Allow for all i?86-*-*, x86_64-*-*\n+\ttargets.\n+\t* gcc.dg/attr-ms_struct-2.c: Likewise.\n+\t* gcc.dg/attr-ms_struct-packed1.c: Likewise.\n+\t* gcc.dg/bf-ms-layout.c: Likewise.\n+\t* gcc.dg/bf-ms-layout-2.c: Likewise.\n+\t* gcc.dg/pic-macro-define.c: Remove target restrictions.\n+\tRequire fpic support.\n+\t* gcc.target/i386/bitfield1.c: Allow for all i?86-*-*, x86_64-*-*\n+\ttargets.\n+\t* gcc.target/i386/bitfield2.c: Likewise.\n+\t* gcc.target/i386/darwin-fpmath.c: Allow for x86_64-*-darwin*\n+\ttargets.\n+\t* gfortran.dg/fmt_pf.f90: Remove i?86-*-solaris2.9* from xfail.\n+\n 2017-06-20  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/67074"}, {"sha": "c56adc4d662e51e927429e1371ae7fb2fb6c5bbc", "filename": "gcc/testsuite/c-c++-common/fold-masked-cmp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-1.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,6 +1,6 @@\n /* Based on PR 67328 */\n \n-/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2\" } */\n \n enum output_type"}, {"sha": "a14bceb4566eb167e1a23d08aecbd95da006ba49", "filename": "gcc/testsuite/c-c++-common/fold-masked-cmp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-2.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,6 +1,6 @@\n /* Based on PR 67328 */\n \n-/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2\" } */\n \n enum output_type"}, {"sha": "5531c359b813abd3edf83ab33e20f267c08bde51", "filename": "gcc/testsuite/c-c++-common/fold-masked-cmp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-3.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-fdump-tree-original\" } */\n \n void foo (int *p, int x)"}, {"sha": "baa56eb8ac51d3031bc3c218967fd46ce0e2c2c2", "filename": "gcc/testsuite/g++.dg/cpp0x/alignas4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas4.C?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,6 +1,6 @@\n // PR c++/59012\n // { dg-do compile { target c++11 } }\n-// { dg-final { scan-assembler \"align 8\" { target x86_64-*-*-gnu } } }\n+// { dg-final { scan-assembler \"align 8\" { target { { i?86-*-* x86_64-*-* } && { ! *-*-darwin* } } } } }\n \n template <class... T>\n struct A"}, {"sha": "3ad1c080945f96d4aa99af244d878275a8d8e39e", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/const2b.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fconst2b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fconst2b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fconst2b.C?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target i386*-*-* } } */\n+/* { dg-do compile { target i386*-*-* x86_64-*-* } } */\n /* { dg-options \"-O -gdwarf-2 -dA -msse\" } */\n /* { dg-require-effective-target sse } */\n /* { dg-final { scan-assembler \"DW_AT_const_value\" } } */"}, {"sha": "3c9e3ceb585daf3080f54f81fde95ce120ffc76a", "filename": "gcc/testsuite/g++.dg/vect/pr70944.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70944.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70944.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70944.cc?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-additional-options \"-O3 -march=core-avx2\" } */\n \n unsigned *a;"}, {"sha": "1e6cca59946df91a821d117b7e62b84893cbb6eb", "filename": "gcc/testsuite/gcc.dg/attr-ms_struct-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-1.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,5 +1,5 @@\n /* Test for MS structure sizes.  */\n-/* { dg-do run { target *-*-mingw* *-*-cygwin* i?86-*-darwin* } } */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-options \"-std=gnu99\" } */\n "}, {"sha": "4ebf06b7d1e70e373681430e04a36aa9c0d486ec", "filename": "gcc/testsuite/gcc.dg/attr-ms_struct-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-2.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,5 +1,5 @@\n /* Test for MS structure sizes.  */\n-/* { dg-do run { target *-*-mingw* *-*-cygwin* i?86-*-darwin* } } */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-options \"-std=gnu99\" } */\n "}, {"sha": "cc26e6ee839c559e0c8d1e8006328b9d590db9fc", "filename": "gcc/testsuite/gcc.dg/attr-ms_struct-packed1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-packed1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-packed1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-packed1.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,5 +1,5 @@\n /* Test for MS structure with packed attribute.  */\n-/* { dg-do run { target *-*-mingw* *-*-cygwin* i?86-*-darwin* } }\n+/* { dg-do run { target i?86-*-* x86_64-*-* } }\n /* { dg-options \"-std=gnu99\" } */\n \n extern void abort ();"}, {"sha": "2d0215fbd52402d38b2c7922e812c49d104703ec", "filename": "gcc/testsuite/gcc.dg/bf-ms-layout-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout-2.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -5,7 +5,7 @@\n    posted to GCC-patches\n    http://gcc.gnu.org/ml/gcc-patches/2000-08/msg00577.html */\n \n-/* { dg-do run { target *-*-mingw* *-*-cygwin* i?86-*-darwin* } } */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-D_TEST_MS_LAYOUT\" } */\n /* This test uses the attribute instead of the command line option.  */\n "}, {"sha": "92af9120723047b6981f37de29d8923c3414f50a", "filename": "gcc/testsuite/gcc.dg/bf-ms-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -5,7 +5,7 @@\n    posted to GCC-patches\n    http://gcc.gnu.org/ml/gcc-patches/2000-08/msg00577.html */\n \n-/* { dg-do run { target *-*-mingw* *-*-cygwin* i?86-*-darwin* } } */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-mms-bitfields -D_TEST_MS_LAYOUT\" } */\n \n #include <stddef.h>"}, {"sha": "702050b5c7eb620c51f229707f35ec27d37f4ded", "filename": "gcc/testsuite/gcc.dg/loop-invariant.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-invariant.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fdump-rtl-loop2_invariant\" } */\n /* NOTE: The target list above could be extended to other targets that have\n          conditional moves, but don't have zero registers.  */"}, {"sha": "52d000a8d586e181a3631959f51ae22894950072", "filename": "gcc/testsuite/gcc.dg/lto/pr70955_0.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr70955_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr70955_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr70955_0.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,5 +1,5 @@\n-/* __builtin_ms_va_list is only supported for x86_64 -m64.  */\n-/* { dg-skip-if \"\" { ! {x86_64-*-* && { ! ilp32 } } } } */\n+/* __builtin_ms_va_list is only supported for x86 -m64.  */\n+/* { dg-skip-if \"\" { ! { { i?86-*-* x86_64-*-* } && { ! ilp32 } } } } */\n \n #include <stdio.h>\n "}, {"sha": "092343253612d5754d3ea3bb3bfb39a630993523", "filename": "gcc/testsuite/gcc.dg/pic-macro-define.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpic-macro-define.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpic-macro-define.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpic-macro-define.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-do run { target \"i?86-*-*-darwin\" powerpc*-*-darwin* } } */\n+/* { dg-do run } */\n+/* { dg-require-effective-target fpic } */\n /* { dg-options \"-fPIC\" } */\n \n #if defined __PIC__ "}, {"sha": "960491fd271be3cb184b2a0847de002219e80732", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr69196-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69196-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69196-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr69196-1.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target sparc*-*-* x86_64-*-* } } */\n+/* { dg-do compile { target sparc*-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -fdump-tree-thread1-details -fdisable-tree-ethread\" } */\n \n /* { dg-final { scan-tree-dump \"FSM did not thread around loop and would copy too many statements\" \"thread1\" } } */"}, {"sha": "3b475fa674945637ec56fd25c7a76de95414d6c0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79803.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79803.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79803.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79803.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { x86_64-*-* } } } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-march=opteron-sse3 -Ofast --param l1-cache-line-size=3 -Wdisabled-optimization\" } */\n /* { dg-require-effective-target indirect_jumps } */\n "}, {"sha": "714792c3d02699c1e1edb729b1cfefb1d21fbf71", "filename": "gcc/testsuite/gcc.target/i386/bitfield1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield1.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run }\n // { dg-require-effective-target ia32 }\n // { dg-options \"-O2\" }\n-// { dg-options \"-mno-align-double -mno-ms-bitfields\" { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-options \"-mno-align-double -mno-ms-bitfields\" { target i?86-*-* x86_64-*-* } }\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "5784bf0ccb454915eec379717124a7232cdfe0a9", "filename": "gcc/testsuite/gcc.target/i386/bitfield2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield2.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -2,7 +2,7 @@\n // { dg-do run }\n // { dg-require-effective-target ia32 }\n // { dg-options \"-O2\" }\n-// { dg-options \"-mno-align-double -mno-ms-bitfields\" { target i?86-*-cygwin* i?86-*-mingw* } }\n+// { dg-options \"-mno-align-double -mno-ms-bitfields\" { target i?86-*-* x86_64-*-* } }\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "693bdee01f255ab0a432414ed3275330ce419f8b", "filename": "gcc/testsuite/gcc.target/i386/darwin-fpmath.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdarwin-fpmath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdarwin-fpmath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdarwin-fpmath.c?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target i?86-*-darwin* } } */\n+/* { dg-do compile { target i?86-*-darwin* x86_64-*-darwin* } } */\n /* { dg-final { scan-assembler \"addsd\" } } */\n /* Do not add -msse or -msse2 or -mfpmath=sse to the options.  GCC is\n    supposed to use SSE math on Darwin by default, and libm won't work"}, {"sha": "743fcbf680b17239ba698c9775621f2569d806b7", "filename": "gcc/testsuite/gfortran.dg/fmt_pf.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_pf.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_pf.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_pf.f90?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -223,4 +223,4 @@ subroutine checkfmt(fmt, x, cmp)\n         \n     end subroutine\n end program\n-! { dg-output \"All kinds rounded to nearest\" { xfail { i?86-*-solaris2.9* hppa*-*-hpux* } } }\n+! { dg-output \"All kinds rounded to nearest\" { xfail { hppa*-*-hpux* } } }"}, {"sha": "ebe26d55d2bdfa7c852eff7912da1a89763c80c5", "filename": "gcc/testsuite/gfortran.dg/pr68078.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68078.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68078.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68078.f90?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target x86_64-*-linux* } }\n+! { dg-do run { target i?86-*-linux* x86_64-*-linux* } }\n ! { dg-additional-sources set_vm_limit.c }\n !\n ! This test calls set_vm_limit to set an artificially low address space"}, {"sha": "59c009930dd47299703cae9ff0a72f8d1542daea", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,3 +1,8 @@\n+2017-06-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* testsuite/20_util/variant/index_type.cc: Allow for all ilp32 and\n+\tlp64 targets.\n+\n 2017-06-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/abi/post/i386-solaris2.10/baseline_symbols.txt: Regenerate."}, {"sha": "93dfbd320af3a76d0348a4b571ec4462eb91b838", "filename": "libstdc++-v3/testsuite/20_util/variant/index_type.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Findex_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Findex_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Findex_type.cc?ref=67ea3f4e0fd389f4f2097c5fe3faa40f18c69d30", "patch": "@@ -1,5 +1,5 @@\n // { dg-options \"-std=gnu++17\" }\n-// { dg-do compile { target x86_64-*-* powerpc*-*-* } }\n+// { dg-do compile { target { ilp32 || lp64 } } }\n \n // Copyright (C) 2017 Free Software Foundation, Inc.\n //"}]}