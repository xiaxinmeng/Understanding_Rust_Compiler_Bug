{"sha": "ac07e0665d5044978a404837c22bfbf4adbe7ffa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMwN2UwNjY1ZDUwNDQ5NzhhNDA0ODM3YzIyYmZiZjRhZGJlN2ZmYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-12T00:02:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-12T00:02:37Z"}, "message": "(CHEAP_REG): New macro; makes virtual regs cheap too.\n\n(COST): Use CHEAP_REG.\n(rtx_cost, case REG): Use CHEAP_REG to return zero for some REGs.\n\nFrom-SVN: r3708", "tree": {"sha": "4ef9a2b59072639d19ba94b25d59d086f4c19dee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ef9a2b59072639d19ba94b25d59d086f4c19dee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac07e0665d5044978a404837c22bfbf4adbe7ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac07e0665d5044978a404837c22bfbf4adbe7ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac07e0665d5044978a404837c22bfbf4adbe7ffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac07e0665d5044978a404837c22bfbf4adbe7ffa/comments", "author": null, "committer": null, "parents": [{"sha": "9f67be131826be3d9058424fc3c93d3929e4cdde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f67be131826be3d9058424fc3c93d3929e4cdde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f67be131826be3d9058424fc3c93d3929e4cdde"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "948160e5a4351c146acdee491dfaf44ef7ff6f93", "filename": "gcc/cse.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac07e0665d5044978a404837c22bfbf4adbe7ffa/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac07e0665d5044978a404837c22bfbf4adbe7ffa/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=ac07e0665d5044978a404837c22bfbf4adbe7ffa", "patch": "@@ -446,15 +446,20 @@ struct table_elt\n #endif\n \n /* Compute cost of X, as stored in the `cost' field of a table_elt.  Fixed\n-   hard registers are the cheapest with a cost of 0.  Next come pseudos\n-   with a cost of one and other hard registers with a cost of 2.  Aside\n-   from these special cases, call `rtx_cost'.  */\n+   hard registers and pointers into the frame are the cheapest with a cost\n+   of 0.  Next come pseudos with a cost of one and other hard registers with\n+   a cost of 2.  Aside from these special cases, call `rtx_cost'.  */\n+\n+#define CHEAP_REG(N) \\\n+  ((N) == FRAME_POINTER_REGNUM || (N) == STACK_POINTER_REGNUM \\\n+   || (N) == ARG_POINTER_REGNUM\t\t\t\t\\\n+   || (N) >= FIRST_VIRTUAL_REGISTER && (N) <= LAST_VIRTUAL_REGISTER  \\\n+   || (FIXED_REGNO_P (N) && REGNO_REG_CLASS (N) != NO_REGS))\n \n #define COST(X)\t\t\t\t\t\t\\\n   (GET_CODE (X) == REG\t\t\t\t\t\\\n-   ? (REGNO (X) >= FIRST_PSEUDO_REGISTER ? 1\t\t\\\n-      : (FIXED_REGNO_P (REGNO (X))\t\t\t\\\n-\t && REGNO_REG_CLASS (REGNO (X)) != NO_REGS) ? 0\t\\\n+   ? (CHEAP_REG (REGNO (X)) ? 0\t\t\t\t\\\n+      : REGNO (X) >= FIRST_PSEUDO_REGISTER ? 1\t\t\\\n       : 2)\t\t\t\t\t\t\\\n    : rtx_cost (X, SET) * 2)\n \n@@ -697,7 +702,8 @@ rtx_cost (x, outer_code)\n   switch (code)\n     {\n     case REG:\n-      return 1;\n+      return ! CHEAP_REG (REGNO (x));\n+\n     case SUBREG:\n       /* If we can't tie these modes, make this expensive.  The larger\n \t the mode, the more expensive it is.  */"}]}