{"sha": "f2c17ea905f2cc272d31cc867324e21757a7eae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjMTdlYTkwNWYyY2MyNzJkMzFjYzg2NzMyNGUyMTc1N2E3ZWFlOQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-05-06T19:59:26Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-05-06T19:59:26Z"}, "message": "re PR target/52933 (SH Target: Use div0s for integer sign comparisons)\n\n\tPR target/52933\n\t* config/sh/sh.md (*cmp_div0s_0, *cmp_div0s_1, *movsicc_div0s): Add\n\tvariations of these patterns.\n\nFrom-SVN: r198646", "tree": {"sha": "998d3bf0ad1255806f66ad6e1f4ebb154e130197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/998d3bf0ad1255806f66ad6e1f4ebb154e130197"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c17ea905f2cc272d31cc867324e21757a7eae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c17ea905f2cc272d31cc867324e21757a7eae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c17ea905f2cc272d31cc867324e21757a7eae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c17ea905f2cc272d31cc867324e21757a7eae9/comments", "author": null, "committer": null, "parents": [{"sha": "f75e6a516eee1546b54d4377d19fd6e0fca74432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75e6a516eee1546b54d4377d19fd6e0fca74432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f75e6a516eee1546b54d4377d19fd6e0fca74432"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "09108c32ab258e0c09621780f4bc92f80ab4ab06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c17ea905f2cc272d31cc867324e21757a7eae9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c17ea905f2cc272d31cc867324e21757a7eae9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2c17ea905f2cc272d31cc867324e21757a7eae9", "patch": "@@ -1,3 +1,9 @@\n+2013-05-06  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/52933\n+\t* config/sh/sh.md (*cmp_div0s_0, *cmp_div0s_1, *movsicc_div0s): Add\n+\tvariations of these patterns.\n+\n 2013-05-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (isa): Add x64_sse4 member."}, {"sha": "71ad1c1a2f67c8c3078e4758af0d919ab8670eaf", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c17ea905f2cc272d31cc867324e21757a7eae9/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c17ea905f2cc272d31cc867324e21757a7eae9/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=f2c17ea905f2cc272d31cc867324e21757a7eae9", "patch": "@@ -866,6 +866,16 @@\n \t(lshiftrt:SI (xor:SI (match_dup 1) (match_dup 2)) (const_int 31)))\n    (set (match_dup 0) (reg:SI T_REG))])\n \n+(define_insn \"*cmp_div0s_0\"\n+  [(set (reg:SI T_REG)\n+\t(eq:SI (lshiftrt:SI (match_operand:SI 0 \"arith_reg_operand\")\n+\t\t\t    (const_int 31))\n+\t       (ge:SI (match_operand:SI 1 \"arith_reg_operand\")\n+\t\t      (const_int 0))))]\n+  \"TARGET_SH1\"\n+  \"div0s\t%0,%1\"\n+  [(set_attr \"type\" \"arith\")])\n+\n (define_insn_and_split \"*cmp_div0s_1\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"\")\n \t(ge:SI (xor:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n@@ -896,6 +906,19 @@\n \t\t\t      (const_int 0)))\n    (set (reg:SI T_REG) (xor:SI (reg:SI T_REG) (const_int 1)))])\n \n+(define_insn_and_split \"*cmp_div0s_1\"\n+  [(set (reg:SI T_REG)\n+\t(eq:SI (lshiftrt:SI (match_operand:SI 0 \"arith_reg_operand\")\n+\t\t\t    (const_int 31))\n+\t       (lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\")\n+\t\t\t    (const_int 31))))]\n+  \"TARGET_SH1\"\n+  \"#\"\n+  \"&& can_create_pseudo_p ()\"\n+  [(set (reg:SI T_REG) (lt:SI (xor:SI (match_dup 0) (match_dup 1))\n+\t\t\t      (const_int 0)))\n+   (set (reg:SI T_REG) (xor:SI (reg:SI T_REG) (const_int 1)))])\n+\n ;; -------------------------------------------------------------------------\n ;; SImode compare and branch\n ;; -------------------------------------------------------------------------\n@@ -1069,6 +1092,27 @@\n \t\t      (match_dup 4)\n \t\t      (match_dup 3)))])\n \n+(define_insn_and_split \"*movsicc_div0s\"\n+  [(set (match_operand:SI 0 \"arith_reg_dest\")\n+\t(if_then_else:SI (eq (lshiftrt:SI\n+\t\t\t\t(match_operand:SI 1 \"arith_reg_operand\")\n+\t\t\t\t(const_int 31))\n+\t\t\t     (lshiftrt:SI\n+\t\t\t\t(match_operand:SI 2 \"arith_reg_operand\")\n+\t\t\t\t(const_int 31)))\n+\t\t\t (match_operand:SI 3 \"arith_reg_operand\")\n+\t\t\t (match_operand:SI 4 \"general_movsrc_operand\")))\n+   (clobber (reg:SI T_REG))]\n+   \"TARGET_PRETEND_CMOVE\"\n+   \"#\"\n+   \"&& 1\"\n+  [(set (reg:SI T_REG) (lt:SI (xor:SI (match_dup 1) (match_dup 2))\n+\t\t\t      (const_int 0)))\n+   (set (match_dup 0)\n+\t(if_then_else (ne (reg:SI T_REG) (const_int 0))\n+\t\t      (match_dup 4)\n+\t\t      (match_dup 3)))])\n+\n ;; -------------------------------------------------------------------------\n ;; SImode unsigned integer comparisons\n ;; -------------------------------------------------------------------------"}]}