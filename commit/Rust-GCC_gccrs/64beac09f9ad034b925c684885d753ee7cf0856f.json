{"sha": "64beac09f9ad034b925c684885d753ee7cf0856f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRiZWFjMDlmOWFkMDM0YjkyNWM2ODQ4ODVkNzUzZWU3Y2YwODU2Zg==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2004-10-02T15:18:16Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2004-10-02T15:18:16Z"}, "message": "parse.y (ELSE): Set tok to $1.\n\n2004-09-28  James A. Morrison  <phython@gcc.gnu.org>\n\n        * parse.y (ELSE): Set tok to $1.\n        * treelang.texi: Wrap comments in @r{}.  Indent example comments.\n        Use gcc when refering to the command line or website.  Update function\n        definition.\n\nFrom-SVN: r88425", "tree": {"sha": "4c9abaf377ece055e5834c340e1d921096176a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9abaf377ece055e5834c340e1d921096176a10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64beac09f9ad034b925c684885d753ee7cf0856f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64beac09f9ad034b925c684885d753ee7cf0856f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64beac09f9ad034b925c684885d753ee7cf0856f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64beac09f9ad034b925c684885d753ee7cf0856f/comments", "author": null, "committer": null, "parents": [{"sha": "66efeafc2ee0d483d6a50f6f1f8a53d07bcbb660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66efeafc2ee0d483d6a50f6f1f8a53d07bcbb660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66efeafc2ee0d483d6a50f6f1f8a53d07bcbb660"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "c47c0acf41f629a43e629abd95bfb33b5e0afc45", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64beac09f9ad034b925c684885d753ee7cf0856f/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64beac09f9ad034b925c684885d753ee7cf0856f/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=64beac09f9ad034b925c684885d753ee7cf0856f", "patch": "@@ -1,3 +1,10 @@\n+2004-10-01  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* parse.y (ELSE): Set tok to $1.\n+\t* treelang.texi: Wrap comments in @r{}.  Indent example comments.\n+\tUse gcc when refering to the command line or website.  Update function\n+\tdefinition.\n+\n 2004-10-01  Jan Hubicka  <jh@suse.cz>\n \n \t* treetree.c (treeland_expand_function): Update call of"}, {"sha": "5a7739887cc2a822d6c835af9accc2e1678e06cc", "filename": "gcc/treelang/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64beac09f9ad034b925c684885d753ee7cf0856f/gcc%2Ftreelang%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64beac09f9ad034b925c684885d753ee7cf0856f/gcc%2Ftreelang%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Fparse.y?ref=64beac09f9ad034b925c684885d753ee7cf0856f", "patch": "@@ -515,7 +515,7 @@ ELSE {\n }\n LEFT_BRACE variable_defs_opt statements_opt RIGHT_BRACE {\n   struct prod_token_parm_item* tok;\n-  tok = $12;\n+  tok = $1;\n   tree_code_if_end (tok->tp.tok.location);\n }\n ;"}, {"sha": "557809b3e683861d9a85b5b43966d65b1c7de90d", "filename": "gcc/treelang/treelang.texi", "status": "modified", "additions": 33, "deletions": 30, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64beac09f9ad034b925c684885d753ee7cf0856f/gcc%2Ftreelang%2Ftreelang.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64beac09f9ad034b925c684885d753ee7cf0856f/gcc%2Ftreelang%2Ftreelang.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreelang.texi?ref=64beac09f9ad034b925c684885d753ee7cf0856f", "patch": "@@ -2,17 +2,16 @@\n \n @c NOTE THIS IS NOT A GOOD EXAMPLE OF HOW TO DO A MANUAL. FIXME!!!\n @c NOTE THIS IS NOT A GOOD EXAMPLE OF HOW TO DO A MANUAL. FIXME!!!\n-@c NOTE THIS IS NOT A GOOD EXAMPLE OF HOW TO DO A MANUAL. FIXME!!!\n \n \n @c %**start of header\n @setfilename treelang.info\n \n @include gcc-common.texi\n \n-@set version-treelang 1.0\n+@set version-treelang 2.0\n \n-@set last-update 2004-03-21\n+@set last-update 2004-09-28\n @set copyrights-treelang 1995,1996,1997,1998,1999,2000,2001,2002,2003,2004\n \n @set email-general gcc@@gcc.gnu.org\n@@ -203,11 +202,6 @@ corresponds to the @value{which-treelang} version of @code{treelang}.\n \n @end ifnottex\n \n-@ifset DEVELOPMENT\n-@emph{Warning:} This document is still under development, and might not\n-accurately reflect the @code{treelang} code base of which it is a part.\n-@end ifset\n-\n @menu\n * Copying::                     \n * Contributors::                \n@@ -272,7 +266,8 @@ Reporting Bugs\n Treelang was based on 'toy' by Richard Kenner, and also uses code from\n the GCC core code tree. Tim Josling first created the language and\n documentation, based on the GCC Fortran compiler's documentation\n-framework.\n+framework.  Treelang was updated to use the TreeSSA infrastructure by James A.\n+Morrison.\n \n @itemize @bullet\n @item\n@@ -290,7 +285,7 @@ It would have been difficult to build treelang without access to Joachim\n Nadler's guide to writing a front end to GCC (written in German). A\n translation of this document into English is available via the\n CobolForGCC project or via the documentation links from the GCC home\n-page @uref{http://GCC.gnu.org}.\n+page @uref{http://gcc.gnu.org}.\n @end itemize\n \n @include funding.texi\n@@ -309,10 +304,13 @@ language. Therefore only language developers are likely to have an\n interest in it.\n \n This manual assumes familiarity with GCC, which you can obtain by using\n-it and by reading the manual @samp{Using and Porting GCC}.\n+it and by reading the manuals @samp{Using the GNU Compiler Collection (GCC)}\n+and @samp{GNU Compiler Collection (GCC) Internals}.\n \n To install treelang, follow the GCC installation instructions, \n-taking care to ensure you specify treelang in the configure step.\n+taking care to ensure you specify treelang in the configure step by adding\n+treelang to the list of languages specified by @option{--enable-langauges}, \n+e.g.@: @samp{--enable-languages=all,treelang}.\n \n If you're generally curious about the future of\n @code{treelang}, see @ref{Projects}.\n@@ -345,18 +343,18 @@ The main features missing are structures, arrays and pointers.\n \n A sample program follows:\n \n-@example\n-// function prototypes\n-// function 'add' taking two ints and returning an int\n+@smallexample\n+// @r{function prototypes}\n+// @r{function 'add' taking two ints and returning an int}\n external_definition int add(int arg1, int arg2);\n external_definition int subtract(int arg3, int arg4);\n external_definition int first_nonzero(int arg5, int arg6);\n external_definition int double_plus_one(int arg7);\n \n-// function definition\n+// @r{function definition}\n add \n @{\n-// return the sum of arg1 and arg2\n+  // @r{return the sum of arg1 and arg2}\n   return arg1 + arg2;\n @}\n \n@@ -368,9 +366,11 @@ subtract\n \n double_plus_one\n @{\n-// aaa is a variable, of type integer and allocated at the start of the function\n+  // @r{aaa is a variable, of type integer and allocated at the start of}\n+  // @r{the function}\n   automatic int aaa;\n-// set aaa to the value returned from add, when passed arg7 and arg7 as the two parameters\n+  // @r{set aaa to the value returned from add, when passed arg7 and arg7 as}\n+  // @r{the two parameters}\n   aaa=add(arg7, arg7);\n   aaa=add(aaa, aaa);\n   aaa=subtract(subtract(aaa, arg7), arg7) + 1;\n@@ -379,7 +379,7 @@ double_plus_one\n \n first_nonzero\n @{\n-// C-like if statement\n+  // @r{C-like if statement}\n   if (arg5)\n     @{\n       return arg5;\n@@ -389,7 +389,7 @@ first_nonzero\n     @}\n   return arg6;\n @}\n-@end example\n+@end smallexample\n \n @node Lexical Syntax, Parsing Syntax, What is GNU Treelang?, Top\n @chapter Lexical Syntax\n@@ -415,7 +415,7 @@ of the line. C style comments (/* */) are not supported. For example,\n the assignment below is followed by a not very helpful comment.\n \n @smallexample\n-x=1; // Set X to 1\n+x = 1; // @r{Set X to 1}\n @end smallexample\n \n @item\n@@ -427,7 +427,8 @@ used to start the statements in a function\n @item @}\n used to end the statements in a function\n @item (\n-start list of function arguments, or to change the precedence of operators in an expression\n+start list of function arguments, or to change the precedence of operators in\n+an expression\n @item )\n end list or prioritized operators in expression\n @item ,\n@@ -494,7 +495,7 @@ file may contain one of more declarations.\n declaration: variable declaration OR function prototype OR function declaration\n \n @item\n-Function Prototype: storage type NAME ( parameter_list )\n+Function Prototype: storage type NAME ( optional_parameter_list )\n \n @smallexample\n static int add (int a, int b)\n@@ -506,10 +507,11 @@ variable_declaration: storage type NAME initial;\n Example:\n \n @smallexample\n-int temp1=1;\n+int temp1 = 1;\n @end smallexample\n \n-A variable declaration can be outside a function, or at the start of a function.\n+A variable declaration can be outside a function, or at the start of a\n+function.\n \n @item\n storage: automatic OR static OR external_reference OR external_definition\n@@ -602,7 +604,7 @@ list of statements may be empty, but both sets of braces and the else must be pr\n @smallexample\n if (a==b) \n @{\n-// nothing\n+// @r{nothing}\n @}\n else\n @{\n@@ -623,8 +625,9 @@ be absent, and if the function is not void the expression must be\n present.\n \n @item\n-expression: variable OR integer_constant OR expression+expression OR expression-expression\n- OR expression==expression OR (expression) OR variable=expression OR function_call\n+expression: variable OR integer_constant OR expression+expression\n+OR expression-expression OR expression==expression OR (expression)\n+OR variable=expression OR function_call\n \n An expression can be a constant or a variable reference or a\n function_call. Expressions can be combined as a sum of two expressions\n@@ -890,7 +893,7 @@ the GNU Compiler Collection (GCC)},\n for information on the way different languages are handled\n by the GCC compiler (@code{gcc}).\n \n-You can use this, combined with the output of the @samp{GCC -v x.tree}\n+You can use this, combined with the output of the @samp{gcc -v x.tree}\n command to get the options applicable to treelang. Treelang programs\n must end with the suffix @samp{.tree}.\n "}]}