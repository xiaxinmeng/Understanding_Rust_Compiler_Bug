{"sha": "ea19eb9fba65626b303781048830f5db22a1cfa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExOWViOWZiYTY1NjI2YjMwMzc4MTA0ODgzMGY1ZGIyMmExY2ZhNQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-12-09T19:53:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-12-09T19:53:08Z"}, "message": "Rename profile_status_for_function to profile_status_for_fn.\n\ngcc/\n\t* basic-block.h (profile_status_for_function): Rename to...\n\t(profile_status_for_fn): ...this.\n\n\t* cfg.c (check_bb_profile): Update for renaming.\n\t* cgraphbuild.c (compute_call_stmt_bb_frequency): Likewise.\n\t* lto-streamer-in.c (input_cfg): Likewise.\n\t* lto-streamer-out.c (output_cfg):  Likewise.\n\t* predict.c (maybe_hot_frequency_p, maybe_hot_count_p,\n\tmaybe_hot_bb_p, probably_never_executed)\n\t(handle_missing_profiles): Likewise.\n\t* tree-cfg.c (init_empty_tree_cfg_for_function): Likewise.\n\t* tree-inline.c (copy_bb, initialize_cfun): Likewise.\n\nFrom-SVN: r205820", "tree": {"sha": "ec787489d8c06f8de6edf15db1529b7a23597d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec787489d8c06f8de6edf15db1529b7a23597d34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea19eb9fba65626b303781048830f5db22a1cfa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea19eb9fba65626b303781048830f5db22a1cfa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea19eb9fba65626b303781048830f5db22a1cfa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea19eb9fba65626b303781048830f5db22a1cfa5/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e248e069105af09e94110b38623cbd925c2ac22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e248e069105af09e94110b38623cbd925c2ac22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e248e069105af09e94110b38623cbd925c2ac22"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "c5b509ded8c51f5681e49feee7dba030252c51f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -1,3 +1,18 @@\n+2013-12-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* basic-block.h (profile_status_for_function): Rename to...\n+\t(profile_status_for_fn): ...this.\n+\n+\t* cfg.c (check_bb_profile): Update for renaming.\n+\t* cgraphbuild.c (compute_call_stmt_bb_frequency): Likewise.\n+\t* lto-streamer-in.c (input_cfg): Likewise.\n+\t* lto-streamer-out.c (output_cfg):  Likewise.\n+\t* predict.c (maybe_hot_frequency_p, maybe_hot_count_p,\n+\tmaybe_hot_bb_p, probably_never_executed)\n+\t(handle_missing_profiles): Likewise.\n+\t* tree-cfg.c (init_empty_tree_cfg_for_function): Likewise.\n+\t* tree-inline.c (copy_bb, initialize_cfun): Likewise.\n+\n 2013-12-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* basic-block.h (label_to_block_map_for_function): Rename to..."}, {"sha": "da93c6fbca8edc9af2e949d4460e24bb9594b837", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -319,7 +319,7 @@ struct GTY(()) control_flow_graph {\n #define n_edges_for_fn(FN)\t\t     ((FN)->cfg->x_n_edges)\n #define last_basic_block_for_fn(FN)\t     ((FN)->cfg->x_last_basic_block)\n #define label_to_block_map_for_fn(FN)\t     ((FN)->cfg->x_label_to_block_map)\n-#define profile_status_for_function(FN)\t     ((FN)->cfg->x_profile_status)\n+#define profile_status_for_fn(FN)\t     ((FN)->cfg->x_profile_status)\n \n #define BASIC_BLOCK_FOR_FN(FN,N) \\\n   ((*basic_block_info_for_fn (FN))[(N)])"}, {"sha": "786fe4838fffd2552944ed3566c4bcbd6f19114f", "filename": "gcc/cfg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -408,7 +408,7 @@ check_bb_profile (basic_block bb, FILE * file, int indent, int flags)\n   memset ((void *) s_indent, ' ', (size_t) indent);\n   s_indent[indent] = '\\0';\n \n-  if (profile_status_for_function (fun) == PROFILE_ABSENT)\n+  if (profile_status_for_fn (fun) == PROFILE_ABSENT)\n     return;\n \n   if (bb != EXIT_BLOCK_PTR_FOR_FN (fun))"}, {"sha": "689b421c30b662a5e1adc183bf765328f2bb786c", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -208,7 +208,7 @@ compute_call_stmt_bb_frequency (tree decl, basic_block bb)\n   \t\t     (DECL_STRUCT_FUNCTION (decl))->frequency;\n   int freq = bb->frequency;\n \n-  if (profile_status_for_function (DECL_STRUCT_FUNCTION (decl)) == PROFILE_ABSENT)\n+  if (profile_status_for_fn (DECL_STRUCT_FUNCTION (decl)) == PROFILE_ABSENT)\n     return CGRAPH_FREQ_BASE;\n \n   if (!entry_freq)"}, {"sha": "8dc94bd6ece3ebcba3b77ab5a31102a077b29a7f", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -632,8 +632,8 @@ input_cfg (struct lto_input_block *ib, struct data_in *data_in,\n   init_empty_tree_cfg_for_function (fn);\n   init_ssa_operands (fn);\n \n-  profile_status_for_function (fn) = streamer_read_enum (ib, profile_status_d,\n-\t\t\t\t\t\t\t PROFILE_LAST);\n+  profile_status_for_fn (fn) = streamer_read_enum (ib, profile_status_d,\n+\t\t\t\t\t\t   PROFILE_LAST);\n \n   bb_count = streamer_read_uhwi (ib);\n "}, {"sha": "d1d545bef11008b25cba11158600fb30c45035d4", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -1630,7 +1630,7 @@ output_cfg (struct output_block *ob, struct function *fn)\n   ob->main_stream = ob->cfg_stream;\n \n   streamer_write_enum (ob->main_stream, profile_status_d, PROFILE_LAST,\n-\t\t       profile_status_for_function (fn));\n+\t\t       profile_status_for_fn (fn));\n \n   /* Output the number of the highest basic block.  */\n   streamer_write_uhwi (ob, last_basic_block_for_fn (fn));"}, {"sha": "e959a3bd050b35731db97fc1cf87d9b387d30d63", "filename": "gcc/predict.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -121,7 +121,7 @@ maybe_hot_frequency_p (struct function *fun, int freq)\n       if (node->frequency == NODE_FREQUENCY_HOT)\n         return true;\n     }\n-  if (profile_status_for_function (fun) == PROFILE_ABSENT)\n+  if (profile_status_for_fn (fun) == PROFILE_ABSENT)\n     return true;\n   if (node->frequency == NODE_FREQUENCY_EXECUTED_ONCE\n       && freq < (ENTRY_BLOCK_PTR_FOR_FN (fun)->frequency * 2 / 3))\n@@ -164,7 +164,7 @@ set_hot_bb_threshold (gcov_type min)\n static inline bool\n maybe_hot_count_p (struct function *fun, gcov_type count)\n {\n-  if (fun && profile_status_for_function (fun) != PROFILE_READ)\n+  if (fun && profile_status_for_fn (fun) != PROFILE_READ)\n     return true;\n   /* Code executed at most once is not hot.  */\n   if (profile_info->runs >= count)\n@@ -179,7 +179,7 @@ bool\n maybe_hot_bb_p (struct function *fun, const_basic_block bb)\n {\n   gcc_checking_assert (fun);\n-  if (profile_status_for_function (fun) == PROFILE_READ)\n+  if (profile_status_for_fn (fun) == PROFILE_READ)\n     return maybe_hot_count_p (fun, bb->count);\n   return maybe_hot_frequency_p (fun, bb->frequency);\n }\n@@ -239,7 +239,7 @@ probably_never_executed (struct function *fun,\n                          gcov_type count, int frequency)\n {\n   gcc_checking_assert (fun);\n-  if (profile_status_for_function (fun) == PROFILE_READ)\n+  if (profile_status_for_fn (fun) == PROFILE_READ)\n     {\n       int unlikely_count_fraction = PARAM_VALUE (UNLIKELY_BB_COUNT_FRACTION);\n       if (count * unlikely_count_fraction >= profile_info->runs)\n@@ -2806,7 +2806,7 @@ drop_profile (struct cgraph_node *node, gcov_type call_count)\n                  node->name (), node->order);\n     }\n \n-  profile_status_for_function (fn)\n+  profile_status_for_fn (fn)\n       = (flag_guess_branch_prob ? PROFILE_GUESSED : PROFILE_ABSENT);\n   node->frequency\n       = hot ? NODE_FREQUENCY_HOT : NODE_FREQUENCY_NORMAL;\n@@ -2869,7 +2869,7 @@ handle_missing_profiles (void)\n           if (callee->count > 0)\n             continue;\n           if (DECL_COMDAT (callee->decl) && fn && fn->cfg\n-              && profile_status_for_function (fn) == PROFILE_READ)\n+              && profile_status_for_fn (fn) == PROFILE_READ)\n             {\n               drop_profile (node, 0);\n               worklist.safe_push (callee);"}, {"sha": "6c2cc16b8b6a6e83fab6c555c174a32f1293eed5", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -182,7 +182,7 @@ init_empty_tree_cfg_for_function (struct function *fn)\n {\n   /* Initialize the basic block array.  */\n   init_flow (fn);\n-  profile_status_for_function (fn) = PROFILE_ABSENT;\n+  profile_status_for_fn (fn) = PROFILE_ABSENT;\n   n_basic_blocks_for_fn (fn) = NUM_FIXED_BLOCKS;\n   last_basic_block_for_fn (fn) = NUM_FIXED_BLOCKS;\n   vec_alloc (basic_block_info_for_fn (fn), initial_cfg_capacity);"}, {"sha": "abc216dcdc12e7b98ea922305528eb4572981e87", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea19eb9fba65626b303781048830f5db22a1cfa5/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=ea19eb9fba65626b303781048830f5db22a1cfa5", "patch": "@@ -1792,7 +1792,7 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t\t\t{\n \t\t\t  edge->frequency = new_freq;\n \t\t\t  if (dump_file\n-\t\t\t      && profile_status_for_function (cfun) != PROFILE_ABSENT\n+\t\t\t      && profile_status_for_fn (cfun) != PROFILE_ABSENT\n \t\t\t      && (edge_freq > edge->frequency + 10\n \t\t\t\t  || edge_freq < edge->frequency - 10))\n \t\t\t    {\n@@ -2208,7 +2208,7 @@ initialize_cfun (tree new_fndecl, tree callee_fndecl, gcov_type count)\n \n   init_empty_tree_cfg ();\n \n-  profile_status_for_function (cfun) = profile_status_for_function (src_cfun);\n+  profile_status_for_fn (cfun) = profile_status_for_fn (src_cfun);\n   ENTRY_BLOCK_PTR_FOR_FN (cfun)->count =\n     (ENTRY_BLOCK_PTR_FOR_FN (src_cfun)->count * count_scale /\n      REG_BR_PROB_BASE);"}]}