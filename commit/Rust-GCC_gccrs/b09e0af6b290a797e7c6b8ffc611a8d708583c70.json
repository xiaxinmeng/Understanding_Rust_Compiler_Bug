{"sha": "b09e0af6b290a797e7c6b8ffc611a8d708583c70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA5ZTBhZjZiMjkwYTc5N2U3YzZiOGZmYzYxMWE4ZDcwODU4M2M3MA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-30T14:58:45Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-30T14:58:45Z"}, "message": "[PATCH, Ada] Push -shared-libgcc where needed.\n\nGnatlink has code that checks for duplicate '-shared-libgcc\u2019 switches (but not\nduplicate \u2018static-libgcc\u2019) and also pushes \u2019static-libgcc' onto the link line for\ntargets that default to static linking, provided '-shared-libgcc' is not present.\n\nFor targets that should use a shared libgcc we need the same process to be\napplied (in inverse), in the event that they do not default to providing the\nshared flag implicitly.\n\nSo this adds the complementary set of tests for the shared case and pushes\nthe shared flag as needed.  As a minor tidy-up there\u2019s no need push duplicates\nof the libgcc switch onto the link line when one has already been seen (given by\nthe user).\n\nThe patch does not alter any of the platform defaults for static/shared libgcc,\nbut it ensures that the intent of the link is explicit.\n\ngcc/ada/\n\n2019-06-30  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* gnatlink.adb (Link_Step): Remove duplicate -static-libgcc switches.\n\tPush -shared-libgcc explicitly, when it is the target default (unless\n\toveridden by the static flag).\n\tWhen the user has put an instance of shared/static-libgcc do not push\n\ta duplicate of this.\n\nFrom-SVN: r272832", "tree": {"sha": "935d28c93a58a91bac32dedef636db683fec100d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/935d28c93a58a91bac32dedef636db683fec100d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b09e0af6b290a797e7c6b8ffc611a8d708583c70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09e0af6b290a797e7c6b8ffc611a8d708583c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09e0af6b290a797e7c6b8ffc611a8d708583c70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09e0af6b290a797e7c6b8ffc611a8d708583c70/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d30be577163e71a6329578f4cabd54b1a44fe7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d30be577163e71a6329578f4cabd54b1a44fe7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d30be577163e71a6329578f4cabd54b1a44fe7f"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "26e7c62596e3e6007f82a7c06169b235c3287d12", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e0af6b290a797e7c6b8ffc611a8d708583c70/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e0af6b290a797e7c6b8ffc611a8d708583c70/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b09e0af6b290a797e7c6b8ffc611a8d708583c70", "patch": "@@ -1,3 +1,11 @@\n+2019-06-30  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gnatlink.adb (Link_Step): Remove duplicate -static-libgcc switches.\n+\tPush -shared-libgcc explicitly, when it is the target default (unless\n+\toveridden by the static flag).\n+\tWhen the user has put an instance of shared/static-libgcc do not push\n+\ta duplicate of this.\n+\n 2019-06-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Beep up comment on SAVED,"}, {"sha": "5e5ede00b44278d38c37fd4eb1532cbdf4fc0f03", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09e0af6b290a797e7c6b8ffc611a8d708583c70/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09e0af6b290a797e7c6b8ffc611a8d708583c70/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=b09e0af6b290a797e7c6b8ffc611a8d708583c70", "patch": "@@ -1884,6 +1884,7 @@ begin\n       Clean_Link_Option_Set : declare\n          J                  : Natural;\n          Shared_Libgcc_Seen : Boolean := False;\n+         Static_Libgcc_Seen : Boolean := False;\n \n       begin\n          J := Linker_Options.First;\n@@ -1905,7 +1906,7 @@ begin\n                end if;\n             end if;\n \n-            --  Remove duplicate -shared-libgcc switch\n+            --  Remove duplicate -shared-libgcc switches\n \n             if Linker_Options.Table (J).all = Shared_Libgcc_String then\n                if Shared_Libgcc_Seen then\n@@ -1919,6 +1920,20 @@ begin\n                end if;\n             end if;\n \n+            --  Remove duplicate -static-libgcc switches\n+\n+            if Linker_Options.Table (J).all = Static_Libgcc_String then\n+               if Static_Libgcc_Seen then\n+                  Linker_Options.Table (J .. Linker_Options.Last - 1) :=\n+                    Linker_Options.Table (J + 1 .. Linker_Options.Last);\n+                  Linker_Options.Decrement_Last;\n+                  Num_Args := Num_Args - 1;\n+\n+               else\n+                  Static_Libgcc_Seen := True;\n+               end if;\n+            end if;\n+\n             --  Here we just check for a canonical form that matches the\n             --  pragma Linker_Options set in the NT runtime.\n \n@@ -1950,14 +1965,27 @@ begin\n             --  libgcc, if gcc is not called with -shared-libgcc, call it\n             --  with -static-libgcc, as there are some platforms where one\n             --  of these two switches is compulsory to link.\n+            --  Don't push extra switches if we already saw one.\n \n             if Shared_Libgcc_Default = 'T'\n               and then not Shared_Libgcc_Seen\n+              and then not Static_Libgcc_Seen\n             then\n                Linker_Options.Increment_Last;\n                Linker_Options.Table (Linker_Options.Last) := Static_Libgcc;\n                Num_Args := Num_Args + 1;\n             end if;\n+\n+            --  Likewise, the reverse.\n+\n+            if Shared_Libgcc_Default = 'H'\n+              and then not Static_Libgcc_Seen\n+              and then not Shared_Libgcc_Seen\n+            then\n+               Linker_Options.Increment_Last;\n+               Linker_Options.Table (Linker_Options.Last) := Shared_Libgcc;\n+               Num_Args := Num_Args + 1;\n+            end if;\n          end if;\n       end Clean_Link_Option_Set;\n "}]}