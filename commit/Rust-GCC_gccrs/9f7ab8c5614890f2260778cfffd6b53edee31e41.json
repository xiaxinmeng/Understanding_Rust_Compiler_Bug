{"sha": "9f7ab8c5614890f2260778cfffd6b53edee31e41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY3YWI4YzU2MTQ4OTBmMjI2MDc3OGNmZmZkNmI1M2VkZWUzMWU0MQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-16T00:16:37Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-16T00:16:37Z"}, "message": "Daily bump.", "tree": {"sha": "2c8bf5961575a881590cfbba2826009fc796093e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c8bf5961575a881590cfbba2826009fc796093e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f7ab8c5614890f2260778cfffd6b53edee31e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7ab8c5614890f2260778cfffd6b53edee31e41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f7ab8c5614890f2260778cfffd6b53edee31e41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7ab8c5614890f2260778cfffd6b53edee31e41/comments", "author": null, "committer": null, "parents": [{"sha": "50ddbd0282e06614b29f0d3f3be5fbe70085a8bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ddbd0282e06614b29f0d3f3be5fbe70085a8bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ddbd0282e06614b29f0d3f3be5fbe70085a8bd"}], "stats": {"total": 164, "additions": 163, "deletions": 1}, "files": [{"sha": "57a049ac10ad50b5760fa83995e0b40e38b2b636", "filename": "gcc/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1,3 +1,75 @@\n+2020-09-15  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* rtlanal.c (set_noop_p): Treat subregs of registers in\n+\tdifferent modes conservatively.\n+\n+2020-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_get_and_check_slp_defs): Make swap\n+\targument by-value and do not change it.\n+\t(vect_build_slp_tree_2): Adjust, set swap to NULL after last\n+\tuse.\n+\n+2020-09-15  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR tree-optimization/94234\n+\t* match.pd (T)(A) +- (T)(B) -> (T)(A +- B): New simplification.\n+\n+2020-09-15  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/96475\n+\t* bb-reorder.c (duplicate_computed_gotos): If we did anything, run\n+\tcleanup_cfg.\n+\n+2020-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_build_slp_tree_2): Also consider\n+\tbuilding an operand from scalars when building it did not\n+\tfail fatally but avoid messing with the upcall splitting\n+\tof groups.\n+\n+2020-09-15  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/arm/arm.c (arm_options_perform_arch_sanity_checks): Do not\n+\tcheck +D32 for CMSE if -mfloat-abi=soft\n+\n+2020-09-15  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/96744\n+\t* config/i386/x86-tune-costs.h (struct processor_costs):\n+\tIncrease mask <-> integer cost for non AVX512 target to avoid\n+\tspill gpr to mask. Also retune mask <-> integer and\n+\tmask_load/store for skylake_cost.\n+\n+2020-09-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/97028\n+\t* config/i386/sse.md (mul<mode>3<mask_name>_bcs,\n+\t<avx512>_div<mode>3<mask_name>_bcst): Use <avx512bcst> instead of\n+\t<<avx512bcst>>.\n+\n+2020-09-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96668\n+\t* gimplify.c (gimplify_omp_for): Add 'bool openacc' argument;\n+\tupdate omp_finish_clause calls.\n+\t(gimplify_adjust_omp_clauses_1, gimplify_adjust_omp_clauses,\n+\tgimplify_expr, gimplify_omp_loop): Update omp_finish_clause\n+\tand/or gimplify_for calls.\n+\t* langhooks-def.h (lhd_omp_finish_clause): Add bool openacc arg.\n+\t* langhooks.c (lhd_omp_finish_clause): Likewise.\n+\t* langhooks.h (lhd_omp_finish_clause): Likewise.\n+\t* omp-low.c (scan_sharing_clauses): Keep GOMP_MAP_TO_PSET cause for\n+\t'declare target' vars.\n+\n+2020-09-15  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR tree-optimization/94234\n+\t* genmatch.c (dt_simplify::gen_1): Emit check on final simplification\n+\tresult when \"!\" is specified on toplevel output expr.\n+\t* match.pd ((A * C) +- (B * C) -> (A +- B) * C): Allow folding on expr\n+\twith multi-use operands if final result is a simple gimple value.\n+\n 2020-09-14  Sergei Trofimovich  <siarheit@google.com>\n \n \t* doc/invoke.texi: fix '-fprofile-reproducibility' option"}, {"sha": "bc812c5fa15295283f2dac2025d4f512baad9d01", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1 +1 @@\n-20200915\n+20200916"}, {"sha": "10cecaa1a3c0424b4ec113300013b81816236513", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1,3 +1,10 @@\n+2020-09-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96650\n+\t* constraint-manager.cc (merger_fact_visitor::on_fact): Replace\n+\tassertion that add_constraint succeeded with an assertion that\n+\tif it fails, -fanalyzer-transitivity is off.\n+\n 2020-09-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* analyzer.opt (-param=analyzer-max-constraints=): New param."}, {"sha": "ee4d1b797fee2a99890547bdb3d927fea6a91ba4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1,3 +1,16 @@\n+2020-09-15  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* pt.c (push_template_decl_real): OMP reductions retain a template\n+\theader.\n+\t(tsubst_function_decl): Likewise.\n+\n+2020-09-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96668\n+\t* cp-gimplify.c (cxx_omp_finish_clause): Add bool openacc arg.\n+\t* cp-tree.h (cxx_omp_finish_clause): Likewise\n+\t* semantics.c (handle_omp_for_class_iterator): Update call.\n+\n 2020-09-14  Marek Polacek  <polacek@redhat.com>\n \n \t* pt.c (push_template_decl_real): Use VAR_OR_FUNCTION_DECL_P."}, {"sha": "49f5dcceee28c02edbb545d9679e185148584365", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1,3 +1,12 @@\n+2020-09-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96668\n+\t* trans.h (gfc_omp_finish_clause): Add bool openacc arg.\n+\t* trans-openmp.c (gfc_omp_finish_clause): Ditto. Use\n+\tGOMP_MAP_ALWAYS_POINTER with PSET for pointers.\n+\t(gfc_trans_omp_clauses): Like the latter and also if the always\n+\tmodifier is used.\n+\n 2020-09-09  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/95109"}, {"sha": "9fb4f4bd21539e6c22e3fc137f97501b2c565f2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1,3 +1,39 @@\n+2020-09-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96650\n+\t* gcc.dg/analyzer/pr96650-1-notrans.c: New test.\n+\t* gcc.dg/analyzer/pr96650-1-trans.c: New test.\n+\t* gcc.dg/analyzer/pr96650-2-notrans.c: New test.\n+\t* gcc.dg/analyzer/pr96650-2-trans.c: New test.\n+\n+2020-09-15  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR tree-optimization/94234\n+\t* gcc.dg/pr94234-3.c: New test.\n+\n+2020-09-15  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* gcc.target/i386/pr78904-4a.c: Compile with -mtune=generic.\n+\n+2020-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/bb-slp-48.c: New testcase.\n+\t* gcc.dg/vect/bb-slp-7.c: Adjust.\n+\n+2020-09-15  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* gcc.target/arm/pr95646.c: Fix testism.\n+\n+2020-09-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/97028\n+\t* gcc.target/i386/avx512f-pr97028.c: Untested fix.\n+\n+2020-09-15  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR tree-optimization/94234\n+\t* gcc.dg/pr94234-2.c: New test.\n+\n 2020-09-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* gcc.target/bpf/nop-1.c: New test."}, {"sha": "757c39f959be0a5c75c3afdd80e4e5dec60964cb", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1,3 +1,8 @@\n+2020-09-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96668\n+\t* gomp-constants.h (GOMP_MAP_ALWAYS_POINTER_P): Define.\n+\n 2020-09-09  Caroline Tice  <cmtice@google.com>\n \n \t* dwarf2.h (enum dwarf_sect_v5): A new enum section for the"}, {"sha": "98c39c0597f366fc82e84a2d23fe468cafebd27b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7ab8c5614890f2260778cfffd6b53edee31e41/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7ab8c5614890f2260778cfffd6b53edee31e41/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9f7ab8c5614890f2260778cfffd6b53edee31e41", "patch": "@@ -1,3 +1,23 @@\n+2020-09-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96668\n+\t* target.c (gomp_map_vars_internal): Initialize has_nullptr.\n+\n+2020-09-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96668\n+\t* libgomp.h (struct target_var_desc): Add has_null_ptr_assoc member.\n+\t* target.c (gomp_map_vars_existing): Add always_to_flag flag.\n+\t(gomp_map_vars_existing): Update call to it.\n+\t(gomp_map_fields_existing): Likewise\n+\t(gomp_map_vars_internal): Update PSET handling such that if a nullptr is\n+\tnow allocated or if GOMP_MAP_POINTER is used PSET is updated and pointer\n+\tremapped.\n+\t(GOMP_target_enter_exit_data): Hanlde GOMP_MAP_ALWAYS_POINTER like\n+\tGOMP_MAP_POINTER.\n+\t* testsuite/libgomp.fortran/map-alloc-ptr-1.f90: New test.\n+\t* testsuite/libgomp.fortran/map-alloc-ptr-2.f90: New test.\n+\n 2020-09-14  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/atomic.c: New file.  Add"}]}