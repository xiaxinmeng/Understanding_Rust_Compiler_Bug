{"sha": "e37dcf4530a0801513792535629542f50110b198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM3ZGNmNDUzMGEwODAxNTEzNzkyNTM1NjI5NTQyZjUwMTEwYjE5OA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-08-14T16:29:38Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-08-14T16:29:38Z"}, "message": "re PR middle-end/67133 (ICE at -Os and above on x86_64-linux-gnu in gimple_op, at gimple.h:2274)\n\n\tPR middle-end/67133\n\t* gimple.c (infer_nonnull_range_by_attribute): Check that the\n\tnonnull argument position is not outside function arguments.\n\n\t* gcc.dg/torture/pr67133.c: New test.\n\nFrom-SVN: r226896", "tree": {"sha": "b7f2ae503a14f93402ff942c4ad71e3c3caa817e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7f2ae503a14f93402ff942c4ad71e3c3caa817e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e37dcf4530a0801513792535629542f50110b198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e37dcf4530a0801513792535629542f50110b198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e37dcf4530a0801513792535629542f50110b198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e37dcf4530a0801513792535629542f50110b198/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "356c32e2f4b9d44140a8333da5381813f9aad516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356c32e2f4b9d44140a8333da5381813f9aad516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356c32e2f4b9d44140a8333da5381813f9aad516"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "9d122442b0443af581960703661c86eb38a79f70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37dcf4530a0801513792535629542f50110b198/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37dcf4530a0801513792535629542f50110b198/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e37dcf4530a0801513792535629542f50110b198", "patch": "@@ -1,3 +1,9 @@\n+2015-08-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/67133\n+\t* gimple.c (infer_nonnull_range_by_attribute): Check that the\n+\tnonnull argument position is not outside function arguments.\n+\n 2015-08-14  Matthew Wahab  <matthew.wahab@arm.com>\n \n \tPR target/67143"}, {"sha": "1bfa8c7608f367ec04e46cfa61741a85cb6f1ecb", "filename": "gcc/gimple.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37dcf4530a0801513792535629542f50110b198/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37dcf4530a0801513792535629542f50110b198/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=e37dcf4530a0801513792535629542f50110b198", "patch": "@@ -2694,10 +2694,13 @@ infer_nonnull_range_by_attribute (gimple stmt, tree op)\n \t  /* Now see if op appears in the nonnull list.  */\n \t  for (tree t = TREE_VALUE (attrs); t; t = TREE_CHAIN (t))\n \t    {\n-\t      int idx = TREE_INT_CST_LOW (TREE_VALUE (t)) - 1;\n-\t      tree arg = gimple_call_arg (stmt, idx);\n-\t      if (operand_equal_p (op, arg, 0))\n-\t\treturn true;\n+\t      unsigned int idx = TREE_INT_CST_LOW (TREE_VALUE (t)) - 1;\n+\t      if (idx < gimple_call_num_args (stmt))\n+\t\t{\n+\t\t  tree arg = gimple_call_arg (stmt, idx);\n+\t\t  if (operand_equal_p (op, arg, 0))\n+\t\t    return true;\n+\t\t}\n \t    }\n \t}\n     }"}, {"sha": "383fb34dcc5c2d873669c7a11f4731245a68a3d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37dcf4530a0801513792535629542f50110b198/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37dcf4530a0801513792535629542f50110b198/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e37dcf4530a0801513792535629542f50110b198", "patch": "@@ -1,3 +1,8 @@\n+2015-08-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/67133\n+\t* gcc.dg/torture/pr67133.c: New test.\n+\n 2015-08-14  Matthew Wahab  <matthew.wahab@arm.com>\n \t    Matthias Klose  <doko@debian.org>\n "}, {"sha": "4eb552e8af8914923d541f5e4e337a3e48312cfe", "filename": "gcc/testsuite/gcc.dg/torture/pr67133.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e37dcf4530a0801513792535629542f50110b198/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67133.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e37dcf4530a0801513792535629542f50110b198/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67133.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67133.c?ref=e37dcf4530a0801513792535629542f50110b198", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fisolate-erroneous-paths-attribute\" } */\n+\n+int printf (const char *, ...);\n+int foo (int);\n+\n+int a, *b, c;\n+\n+static int\n+fn1 ()\n+{ \n+  if (a)\n+    return (a = 0);\n+  for (; a; )\n+    a = 0;\n+  return 0;\n+}\n+\n+static int\n+fn2 (int p)\n+{ \n+  fn1 ();\n+  c = 0;\n+  if (p)\n+    printf (\"%d\", 0);\n+  foo (b != &p);\n+  return 0;\n+}\n+\n+void\n+fn3 ()\n+{ \n+  fn2 (0);\n+}"}]}