{"sha": "6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ5NDM0ZTU5NTRlZjVhNDUwYThiZDNmZDNjMzk2MTU0NWJjMWQ5Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2018-11-25T15:59:44Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2018-11-25T15:59:44Z"}, "message": "Disable gdc execution tests without libphobos\n\n\tgcc/testsuite:\n\t* lib/target-supports.exp (check_compile): Handle D.\n\t(check_effective_target_d_runtime): New proc.\n\t* lib/gdc-dg.exp (gdc-dg-test): Demote link and run tests to\n\tcompile unless d_runtime.\n\t* gdc.dg/runnable.d: Skip unless d_runtime.\n\t* gdc.dg/lto/lto.exp: Require d_runtime to run tests.\n\n\tgcc:\n\t* doc/sourcebuild.texi (Effective-Target Keywords, Environment\n\tattributes): Document d_runtime.\n\nFrom-SVN: r266438", "tree": {"sha": "a4f51aa030bb3c975492679820efdc63e6d5607b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4f51aa030bb3c975492679820efdc63e6d5607b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12422bc85c33040992711bd0c2afe55672206341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12422bc85c33040992711bd0c2afe55672206341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12422bc85c33040992711bd0c2afe55672206341"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "343ea3803e944f194e777367ce7e1cf1dca159f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "patch": "@@ -1,3 +1,8 @@\n+2018-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* doc/sourcebuild.texi (Effective-Target Keywords, Environment\n+\tattributes): Document d_runtime.\n+\n 2018-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR bootstrap/88157"}, {"sha": "7734941511ac77f0e9ca3f357d846243a1977b89", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "patch": "@@ -2106,6 +2106,9 @@ Target provides a full C99 runtime.\n Target @code{string.h} and @code{wchar.h} headers provide C++ required\n overloads for @code{strchr} etc. functions.\n \n+@item d_runtime\n+Target provides the D runtime.\n+\n @item dummy_wcsftime\n Target uses a dummy @code{wcsftime} function that always returns zero.\n "}, {"sha": "5a4b5a2a490c6c7637aa9624421743e165631eb7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "patch": "@@ -1,3 +1,12 @@\n+2018-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* lib/target-supports.exp (check_compile): Handle D.\n+\t(check_effective_target_d_runtime): New proc.\n+\t* lib/gdc-dg.exp (gdc-dg-test): Demote link and run tests to\n+\tcompile unless d_runtime.\n+\t* gdc.dg/runnable.d: Skip unless d_runtime.\n+\t* gdc.dg/lto/lto.exp: Require d_runtime to run tests.\n+\n 2018-11-24  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/88143"}, {"sha": "9df69cf80dfdb73118ecef650b31518fbb7e4621", "filename": "gcc/testsuite/gdc.dg/lto/lto.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Flto.exp?ref=6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "patch": "@@ -36,6 +36,11 @@ if { ![check_effective_target_lto] } {\n     return\n }\n \n+# Likewise if the D runtime library is missing.\n+if { ![check_effective_target_d_runtime] } {\n+    return\n+}\n+\n lto_init no-mathlib\n \n # Define an identifier for use with this suite to avoid name conflicts"}, {"sha": "ec172fae8109f7b13d4dc2b2fff39ce9c7ab120f", "filename": "gcc/testsuite/gdc.dg/runnable.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d?ref=6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "patch": "@@ -1,5 +1,6 @@\n // { dg-additional-sources \"imports/runnable.d\" }\n // { dg-do run { target hw } }\n+// { dg-skip-if \"needs gcc/config.d\" { ! d_runtime } }\n \n module runnable;\n "}, {"sha": "67672595ac361d354848d62f2e96a3fc7003dcc5", "filename": "gcc/testsuite/lib/gdc-dg.exp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Flib%2Fgdc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Flib%2Fgdc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgdc-dg.exp?ref=6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "patch": "@@ -19,6 +19,19 @@ load_lib gcc-dg.exp\n # Define gdc callbacks for dg.exp.\n \n proc gdc-dg-test { prog do_what extra_tool_flags } {\n+    upvar dg-do-what dg-do-what\n+\n+    # Demote link and run tests to compile-only if D runtime is missing.\n+    if ![check_effective_target_d_runtime] {\n+\tswitch $do_what {\n+\t    link -\n+\t    run {\n+\t\tset do_what compile\n+\t\tset dg-do-what compile\n+\t    }\n+\t}\n+    }\n+\n     set result \\\n         [gcc-dg-test-1 gdc_target_compile $prog $do_what $extra_tool_flags]\n "}, {"sha": "37791cfcf9df58e21fb6120af7f07998242e2ac3", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=6d9434e5954ef5a450a8bd3fd3c3961545bc1d9c", "patch": "@@ -31,6 +31,7 @@\n # Assume by default that CONTENTS is C code.  \n # Otherwise, code should contain:\n # \"// C++\" for c++,\n+# \"// D\" for D,\n # \"! Fortran\" for Fortran code,\n # \"/* ObjC\", for ObjC\n # \"// ObjC++\" for ObjC++\n@@ -58,6 +59,7 @@ proc check_compile {basename type contents args} {\n     switch -glob -- $contents {\n \t\"*! Fortran*\" { set src ${basename}[pid].f90 }\n \t\"*// C++*\" { set src ${basename}[pid].cc }\n+\t\"*// D*\" { set src ${basename}[pid].d }\n \t\"*// ObjC++*\" { set src ${basename}[pid].mm }\n \t\"*/* ObjC*\" { set src ${basename}[pid].m }\n \t\"*// Go*\" { set src ${basename}[pid].go }\n@@ -7154,6 +7156,19 @@ proc check_effective_target_c99_runtime { } {\n     }]\n }\n \n+# Return 1 if the target provides the D runtime.\n+\n+proc check_effective_target_d_runtime { } {\n+    return [check_no_compiler_messages d_runtime executable {\n+\t// D\n+\tmodule mod;\n+\n+\textern(C) int main() {\n+\t    return 0;\n+\t}\n+    }]\n+}\n+\n # Return 1 if  target wchar_t is at least 4 bytes.\n \n proc check_effective_target_4byte_wchar_t { } {"}]}