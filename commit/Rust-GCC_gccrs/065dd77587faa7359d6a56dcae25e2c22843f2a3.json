{"sha": "065dd77587faa7359d6a56dcae25e2c22843f2a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY1ZGQ3NzU4N2ZhYTczNTlkNmE1NmRjYWUyNWUyYzIyODQzZjJhMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-09T13:29:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-09T13:29:10Z"}, "message": "[multiple changes]\n\n2012-07-09  Pascal Obry  <obry@adacore.com>\n\n\t* prj.adb (For_Every_Project_Imported_Context): Make sure we\n\tcallback with the project having sources.\n\tMinor reformatting.\n\n2012-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* make.adb: Fix typo.\n\nFrom-SVN: r189385", "tree": {"sha": "12f5c511631498a44c7378c51fd95a4cc5479307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f5c511631498a44c7378c51fd95a4cc5479307"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/065dd77587faa7359d6a56dcae25e2c22843f2a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065dd77587faa7359d6a56dcae25e2c22843f2a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/065dd77587faa7359d6a56dcae25e2c22843f2a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065dd77587faa7359d6a56dcae25e2c22843f2a3/comments", "author": null, "committer": null, "parents": [{"sha": "ba224bf3d81f8c0d2d9c72e6614cd7b2266722b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba224bf3d81f8c0d2d9c72e6614cd7b2266722b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba224bf3d81f8c0d2d9c72e6614cd7b2266722b8"}], "stats": {"total": 72, "additions": 63, "deletions": 9}, "files": [{"sha": "38b62351cf36304a0e150daa442046dba7b9cf1e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/065dd77587faa7359d6a56dcae25e2c22843f2a3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/065dd77587faa7359d6a56dcae25e2c22843f2a3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=065dd77587faa7359d6a56dcae25e2c22843f2a3", "patch": "@@ -1,3 +1,13 @@\n+2012-07-09  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj.adb (For_Every_Project_Imported_Context): Make sure we\n+\tcallback with the project having sources.\n+\tMinor reformatting.\n+\n+2012-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* make.adb: Fix typo.\n+\n 2012-07-09  Vincent Pucci  <pucci@adacore.com>\n \n \t* sem_ch9.adb (Check_Node): Allow attributes"}, {"sha": "91d64b514372d88c5a445d67ac677a75fefd9a4c", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/065dd77587faa7359d6a56dcae25e2c22843f2a3/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/065dd77587faa7359d6a56dcae25e2c22843f2a3/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=065dd77587faa7359d6a56dcae25e2c22843f2a3", "patch": "@@ -4811,7 +4811,7 @@ package body Make is\n       --  have been regenerated.\n \n       if Main_Project /= No_Project\n-        and then not Codepeer_Mode\n+        and then not CodePeer_Mode\n         and then MLib.Tgt.Support_For_Libraries /= Prj.None\n         and then (Do_Bind_Step\n                    or Unique_Compile_All_Projects"}, {"sha": "d70315bbbbc684ca73b720061540b2e4d5e2cb6c", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 52, "deletions": 8, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/065dd77587faa7359d6a56dcae25e2c22843f2a3/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/065dd77587faa7359d6a56dcae25e2c22843f2a3/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=065dd77587faa7359d6a56dcae25e2c22843f2a3", "patch": "@@ -584,8 +584,55 @@ package body Prj is\n             In_Aggregate_Lib      : Boolean;\n             From_Encapsulated_Lib : Boolean)\n          is\n+\n+            function Has_Sources (P : Project_Id) return Boolean;\n+            --  Returns True if P has sources\n+\n+            function Get_From_Tree (P : Project_Id) return Project_Id;\n+            --  Get project P from Tree. If P has no sources get another\n+            --  instance of this project with sources. If P has sources,\n+            --  returns it.\n+\n+            -----------------\n+            -- Has_Sources --\n+            -----------------\n+\n+            function Has_Sources (P : Project_Id) return Boolean is\n+               Lang : Language_Ptr;\n+            begin\n+               Lang := P.Languages;\n+               while Lang /= No_Language_Index loop\n+                  if Lang.First_Source /= No_Source then\n+                     return True;\n+                  end if;\n+                  Lang := Lang.Next;\n+               end loop;\n+\n+               return False;\n+            end Has_Sources;\n+\n+            -------------------\n+            -- Get_From_Tree --\n+            -------------------\n+\n+            function Get_From_Tree (P : Project_Id) return Project_Id is\n+               List : Project_List := Tree.Projects;\n+            begin\n+               if not Has_Sources (P) then\n+                  while List /= null loop\n+                     if List.Project.Name = P.Name\n+                       and then Has_Sources (List.Project)\n+                     then\n+                        return List.Project;\n+                     end if;\n+                     List := List.Next;\n+                  end loop;\n+               end if;\n+\n+               return P;\n+            end Get_From_Tree;\n+\n             List : Project_List;\n-            T    : Project_Tree_Ref;\n \n          begin\n             if not Seen_Name.Contains (Project.Name) then\n@@ -597,7 +644,7 @@ package body Prj is\n \n                if not Imported_First then\n                   Action\n-                    (Project,\n+                    (Get_From_Tree (Project),\n                      Tree,\n                      Project_Context'(In_Aggregate_Lib, From_Encapsulated_Lib),\n                      With_State);\n@@ -640,23 +687,20 @@ package body Prj is\n                         --  of the aggregate library.\n \n                         if Project.Qualifier = Aggregate_Library then\n-                           T := Tree;\n                            Recursive_Check\n-                             (Agg.Project, T,\n+                             (Agg.Project, Tree,\n                               True,\n                               From_Encapsulated_Lib\n                                 or else\n                                   Project.Standalone_Library = Encapsulated);\n \n                         else\n-                           T := Agg.Tree;\n-\n                            --  Use a new context as we want to returns the same\n                            --  project in different project tree for aggregated\n                            --  projects.\n \n                            Recursive_Check_Context\n-                             (Agg.Project, T, False, False);\n+                             (Agg.Project, Agg.Tree, False, False);\n                         end if;\n \n                         Agg := Agg.Next;\n@@ -666,7 +710,7 @@ package body Prj is\n \n                if Imported_First then\n                   Action\n-                    (Project,\n+                    (Get_From_Tree (Project),\n                      Tree,\n                      Project_Context'(In_Aggregate_Lib, From_Encapsulated_Lib),\n                      With_State);"}]}