{"sha": "adad100716c4abc6187ee128529ae03b9614ff23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRhZDEwMDcxNmM0YWJjNjE4N2VlMTI4NTI5YWUwM2I5NjE0ZmYyMw==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2011-05-05T01:47:47Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2011-05-05T01:47:47Z"}, "message": "* config-list.mk: New file.\n\nFrom-SVN: r173410", "tree": {"sha": "1492f2cffb6a3658a16c8f402ab5f84765a4f9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1492f2cffb6a3658a16c8f402ab5f84765a4f9ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adad100716c4abc6187ee128529ae03b9614ff23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adad100716c4abc6187ee128529ae03b9614ff23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adad100716c4abc6187ee128529ae03b9614ff23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adad100716c4abc6187ee128529ae03b9614ff23/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80d45c04985a2eacb06f0f07202f83419a3f8c87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d45c04985a2eacb06f0f07202f83419a3f8c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d45c04985a2eacb06f0f07202f83419a3f8c87"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "896cea64a07ebfa8bb2e2ee6d8bcded87afb426f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adad100716c4abc6187ee128529ae03b9614ff23/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adad100716c4abc6187ee128529ae03b9614ff23/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=adad100716c4abc6187ee128529ae03b9614ff23", "patch": "@@ -1,3 +1,7 @@\n+2010-05-05  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config-list.mk: New file.\n+\n 2011-05-02  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc_update (gcc/config/m68k/m68k-tables.opt): New dependencies."}, {"sha": "5fdfee78b028223c23c77b3eb04c16d095dc2507", "filename": "contrib/config-list.mk", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adad100716c4abc6187ee128529ae03b9614ff23/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adad100716c4abc6187ee128529ae03b9614ff23/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=adad100716c4abc6187ee128529ae03b9614ff23", "patch": "@@ -0,0 +1,98 @@\n+# Run tests covering all config.gcc cases.\n+host_options='--with-mpc=/opt/cfarm/mpc' # gcc10\n+TEST=all-gcc\n+# Make sure you have a recent enough gcc (with ada support) in your path so\n+# that --enable-werror-always will work.\n+# To use, create a sibling directory to the gcc sources and cd into this.\n+# Use -j / -l make arguments and nice to assure a smooth resource-efficient\n+# load on the build machine, e.g. for 24 cores:\n+# svn co svn://gcc.gnu.org/svn/gcc/branches/foo-branch gcc\n+# mkdir multi-mk; cd multi-mk\n+# nohup nice make -j25 -l36 -f ../gcc/contrib/config-list.mk > make.out 2>&1 &\n+#\n+# v850e1-elf is rejected by config.sub\n+LIST = alpha-linux-gnu alpha-freebsd6 alpha-netbsd alpha-openbsd \\\n+  alpha-dec-osf5.1 alpha64-dec-vms alpha-dec-vms am33_2.0-linux \\\n+  arm-wrs-vxworks arm-freebsd6 arm-netbsdelf arm-linux \\\n+  arm-linux-androideabi arm-uclinux_eabi arm-ecos-elf arm-eabi \\\n+  arm-symbianelf arm-rtems arm-elf arm-wince-pe avr-rtems avr-elf \\\n+  bfin-elf bfin-uclinux bfin-linux-uclibc bfin-rtems bfin-openbsd \\\n+  cris-elf cris-linux crisv32-elf crisv32-linux fido-elf \\\n+  fr30-elf frv-elf frv-linux h8300-elf h8300-rtems hppa-linux-gnu \\\n+  hppa-linux-gnuOPT-enable-sjlj-exceptions=yes hppa64-linux-gnu \\\n+  hppa2.0-hpux10.1 hppa64-hpux11.3 \\\n+  hppa64-hpux11.0OPT-enable-sjlj-exceptions=yes hppa2.0-hpux11.9 \\\n+  i686-pc-linux-gnu i686-apple-darwin i686-apple-darwin9 i686-apple-darwin10 \\\n+  i486-freebsd4 i686-freebsd6 i686-kfreebsd-gnu \\\n+  i686-netbsdelf9 i686-knetbsd-gnu i686-openbsd i686-openbsd3.0 \\\n+  i686-elf i686-kopensolaris-gnu i686-symbolics-gnu i686-pc-msdosdjgpp \\\n+  i686-lynxos i586-netwareOPT-with-ld=SCRIPTSnwld i686-nto-qnx \\\n+  i686-rtems i686-solaris2.10 i686-wrs-vxworks \\\n+  i686-wrs-vxworksae \\\n+  i686-cygwinOPT-enable-threads=yes i686-mingw32crt ia64-elf \\\n+  ia64-freebsd6 ia64-linux ia64-hpux ia64-hp-vms iq2000-elf lm32-elf \\\n+  lm32-rtems lm32-uclinux m32c-rtems m32c-elf m32r-elf m32rle-elf m32r-rtems \\\n+  m32r-linux m32rle-linux m68k-elf m68k-netbsdelf \\\n+  m68k-openbsd m68k-uclinux m68k-linux m68k-rtems \\\n+  mcore-elf mep-elf microblaze-linux microblaze-elf \\\n+  mips-sgi-irix6.5OPT-with-stabsOPT-enable-threads=posix mips-netbsd \\\n+  mips64el-st-linux-gnu mips64octeon-linux mipsisa64r2-linux \\\n+  mipsisa32r2-linux-gnu mips-openbsd mipsisa64r2-sde-elf mipsisa32-elfoabi \\\n+  mipsisa64-elfoabi mipsisa64r2el-elf mipsisa64sr71k-elf mipsisa64sb1-elf \\\n+  mipsel-elf mips64-elf mips64vr-elf mips64orion-elf mips-rtems \\\n+  mips-wrs-vxworks mipstx39-elf mmix-knuth-mmixware mn10300-elf moxie-elf \\\n+  moxie-uclinux moxie-rtems pdp11-aout picochip-elf powerpc-darwin8 \\\n+  powerpc-darwin7 powerpc64-darwin powerpc-freebsd6 powerpc-netbsd \\\n+  powerpc-eabispe powerpc-eabisimaltivec powerpc-eabisim ppc-elf \\\n+  powerpc-eabialtivec powerpc-xilinx-eabi powerpc-eabi \\\n+  powerpc-rtems4.11OPT-enable-threads=yes powerpc-linux_spe \\\n+  powerpc-linux_paired powerpc64-linux_altivec \\\n+  powerpc-wrs-vxworks powerpc-wrs-vxworksae powerpc-lynxos powerpcle-elf \\\n+  powerpcle-eabisim powerpcle-eabi rs6000-ibm-aix4.3 rs6000-ibm-aix5.1.0 \\\n+  rs6000-ibm-aix5.2.0 rs6000-ibm-aix5.3.0 rs6000-ibm-aix6.0 \\\n+  rx-elf s390-linux-gnu s390x-linux-gnu s390x-ibm-tpf sh-elf \\\n+  shle-linux sh-netbsdelf sh-superh-elf sh5el-netbsd sh64-netbsd sh64-linux \\\n+  sh64-elfOPT-with-newlib sh-rtems sh-wrs-vxworks sparc-elf \\\n+  sparc-leon-elf sparc-rtems sparc-linux-gnu \\\n+  sparc-leon3-linux-gnuOPT-enable-target=all sparc-netbsdelf \\\n+  sparc64-sun-solaris2.10OPT-with-gnu-ldOPT-with-gnu-asOPT-enable-threads=posix \\\n+  sparc-wrs-vxworks sparc64-elf sparc64-rtems sparc64-linux sparc64-freebsd6 \\\n+  sparc64-netbsd sparc64-openbsd spu-elf v850e-elf v850-elf vax-linux-gnu \\\n+  vax-netbsdelf vax-openbsd x86_64-apple-darwin \\\n+  x86_64-pc-linux-gnuOPT-with-fpmath=avx \\\n+  x86_64-elfOPT-with-fpmath=sse x86_64-freebsd6 x86_64-netbsd \\\n+  x86_64-knetbsd-gnu x86_64-w64-mingw32 \\\n+  x86_64-mingw32OPT-enable-sjlj-exceptions=yes xstormy16-elf xtensa-elf \\\n+  xtensa-linux sparc-sun-solaris2.9 i686-solaris2.9 \\\n+  i686-interix3OPT-enable-obsolete score-elfOPT-enable-obsolete\n+\n+LOGFILES = $(patsubst %,log/%-make.out,$(LIST))\n+all: $(LOGFILES)\n+config: $(LIST)\n+\n+.PHONY: make-log-dir make-script-dir all config\n+\n+empty=\n+\n+#Check for the presence of the MAINTAINERS file to make sure we are in a\n+#suitable current working directory.\n+make-log-dir: ../gcc/MAINTAINERS\n+\tmkdir log\n+\n+# The 'ix86-netware --with-ld=nwld' configuration needs a nwld executable to\n+# configure.  See PR47104.\n+make-script-dir:\n+\tmkdir scripts\n+\techo ld $* > scripts/nwld\n+\tchmod u+x scripts/nwld\n+\n+$(LIST): make-log-dir make-script-dir\n+\t-mkdir $@\n+\t(cd $@ && \\\n+\t../../gcc/configure \\\n+\t--target=$(subst SCRIPTS,`pwd`/../scripts/,$(subst OPT,$(empty) -,$@)) \\\n+\t--enable-werror-always ${host_options} --enable-languages=all,ada,go) \\\n+\t> log/$@-config.out 2>&1\n+\n+$(LOGFILES) : log/%-make.out : %\n+\t-$(MAKE) -C $< $(TEST) > $@ 2>&1 && rm -rf $<"}]}