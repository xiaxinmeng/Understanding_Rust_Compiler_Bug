{"sha": "8d8f3235500c7aedcd93431b9c94c5839c833577", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ4ZjMyMzU1MDBjN2FlZGNkOTM0MzFiOWM5NGM1ODM5YzgzMzU3Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-01-18T15:54:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-01-18T15:54:20Z"}, "message": "* cp-gimplify.c (cp_fold): Remove unnecessary special cases.\n\nFrom-SVN: r232523", "tree": {"sha": "8e0caca43ae0b58bf0136859369f7172a7d15d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e0caca43ae0b58bf0136859369f7172a7d15d16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d8f3235500c7aedcd93431b9c94c5839c833577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8f3235500c7aedcd93431b9c94c5839c833577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d8f3235500c7aedcd93431b9c94c5839c833577", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8f3235500c7aedcd93431b9c94c5839c833577/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f26f7df904d3894d726e36a57d5f004eef71a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f26f7df904d3894d726e36a57d5f004eef71a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f26f7df904d3894d726e36a57d5f004eef71a74"}], "stats": {"total": 38, "additions": 3, "deletions": 35}, "files": [{"sha": "fbc1a7c3ada7c6f0f56bc85313eb8f0fc2f7a08e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8f3235500c7aedcd93431b9c94c5839c833577/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8f3235500c7aedcd93431b9c94c5839c833577/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8d8f3235500c7aedcd93431b9c94c5839c833577", "patch": "@@ -1,5 +1,7 @@\n 2016-01-18  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-gimplify.c (cp_fold): Remove unnecessary special cases.\n+\n \tPR c++/68767\n \t* cp-gimplify.c (cp_fold) [COND_EXPR]: Simplify.  Do fold COND_EXPR.\n \t(contains_label_1, contains_label_p): Remove."}, {"sha": "2dc53ae5fdf0998ec565d6ed0df8c3d72d638487", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8f3235500c7aedcd93431b9c94c5839c833577/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8f3235500c7aedcd93431b9c94c5839c833577/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=8d8f3235500c7aedcd93431b9c94c5839c833577", "patch": "@@ -1942,19 +1942,8 @@ cp_fold (tree x)\n       if (VOID_TYPE_P (TREE_TYPE (x)))\n \treturn x;\n \n-      if (!TREE_OPERAND (x, 0)\n-\t  || TREE_CODE (TREE_OPERAND (x, 0)) == NON_LVALUE_EXPR)\n-\treturn x;\n-\n       loc = EXPR_LOCATION (x);\n-      op0 = TREE_OPERAND (x, 0);\n-\n-      if (TREE_CODE (x) == NOP_EXPR\n-\t  && TREE_OVERFLOW_P (op0)\n-\t  && TREE_TYPE (x) == TREE_TYPE (op0))\n-\treturn x;\n-\n-      op0 = cp_fold_maybe_rvalue (op0, rval_ops);\n+      op0 = cp_fold_maybe_rvalue (TREE_OPERAND (x, 0), rval_ops);\n \n       if (op0 != TREE_OPERAND (x, 0))\n         x = fold_build1_loc (loc, code, TREE_TYPE (x), op0);\n@@ -2000,16 +1989,6 @@ cp_fold (tree x)\n     case POSTDECREMENT_EXPR:\n     case POSTINCREMENT_EXPR:\n     case INIT_EXPR:\n-\n-\tloc = EXPR_LOCATION (x);\n-\top0 = cp_fold (TREE_OPERAND (x, 0));\n-\top1 = cp_fold_rvalue (TREE_OPERAND (x, 1));\n-\n-\tif (TREE_OPERAND (x, 0) != op0 || TREE_OPERAND (x, 1) != op1)\n-\t  x = build2_loc (loc, code, TREE_TYPE (x), op0, op1);\n-\n-\tbreak;\n-\n     case PREDECREMENT_EXPR:\n     case PREINCREMENT_EXPR:\n     case COMPOUND_EXPR:\n@@ -2054,25 +2033,12 @@ cp_fold (tree x)\n       loc = EXPR_LOCATION (x);\n       op0 = cp_fold_maybe_rvalue (TREE_OPERAND (x, 0), rval_ops);\n       op1 = cp_fold_rvalue (TREE_OPERAND (x, 1));\n-      if ((code == COMPOUND_EXPR || code == MODIFY_EXPR)\n-\t  && ((op1 && TREE_SIDE_EFFECTS (op1))\n-\t       || (op0 && TREE_SIDE_EFFECTS (op0))))\n-\t{\n-\t  if (op0 != TREE_OPERAND (x, 0) || op1 != TREE_OPERAND (x, 1))\n-\t    x = build2_loc (loc, code, TREE_TYPE (x), op0, op1);\n-\t  break;\n-\t}\n-      if (TREE_CODE (x) == COMPOUND_EXPR && !op0)\n-\top0 = build_empty_stmt (loc);\n \n       if (op0 != TREE_OPERAND (x, 0) || op1 != TREE_OPERAND (x, 1))\n \tx = fold_build2_loc (loc, code, TREE_TYPE (x), op0, op1);\n       else\n \tx = fold (x);\n \n-      if (TREE_CODE (x) == COMPOUND_EXPR && TREE_OPERAND (x, 0) == NULL_TREE\n-\t  && TREE_OPERAND (x, 1))\n-\treturn TREE_OPERAND (x, 1);\n       break;\n \n     case VEC_COND_EXPR:"}]}