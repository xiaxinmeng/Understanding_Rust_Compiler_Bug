{"sha": "3d06b1003fd4b4c7a431455e437288c181a36a5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QwNmIxMDAzZmQ0YjRjN2E0MzE0NTVlNDM3Mjg4YzE4MWEzNmE1Yw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-23T19:18:33Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-23T19:18:33Z"}, "message": "Declare the new initializer parsing functions.\n\nFrom-SVN: r4976", "tree": {"sha": "6bbd6818c5aa6760ca1ee253ae0192fcd25c868a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bbd6818c5aa6760ca1ee253ae0192fcd25c868a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d06b1003fd4b4c7a431455e437288c181a36a5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d06b1003fd4b4c7a431455e437288c181a36a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d06b1003fd4b4c7a431455e437288c181a36a5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d06b1003fd4b4c7a431455e437288c181a36a5c/comments", "author": null, "committer": null, "parents": [{"sha": "34403047ce7f3d7ee0b6115553f8782ba1df6d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34403047ce7f3d7ee0b6115553f8782ba1df6d48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34403047ce7f3d7ee0b6115553f8782ba1df6d48"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "3d87ed631fbe839e666180b14e6b3800c370cae8", "filename": "gcc/c-tree.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d06b1003fd4b4c7a431455e437288c181a36a5c/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d06b1003fd4b4c7a431455e437288c181a36a5c/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=3d06b1003fd4b4c7a431455e437288c181a36a5c", "patch": "@@ -326,10 +326,17 @@ extern tree c_expand_start_case                 PROTO((tree));\n    Given two compatible ANSI C types, returns the merged type.  */\n extern tree common_type                         PROTO((tree, tree));\n extern tree default_conversion                  PROTO((tree));\n-extern tree digest_init                         PROTO((tree, tree, tree *, int, int, char *));\n extern tree parser_build_binary_op              PROTO((enum tree_code, tree, tree));\n extern tree require_complete_type\t\tPROTO((tree));\n extern void store_init_value                    PROTO((tree, tree));\n+extern void start_init\t\t\t\tPROTO((tree, tree, int));\n+extern void finish_init\t\t\t\tPROTO((void));\n+extern void really_start_incremental_init\tPROTO((tree));\n+extern void push_init_level\t\t\tPROTO((int));\n+extern tree pop_init_level\t\t\tPROTO((int));\n+extern void set_init_index\t\t\tPROTO((tree, tree));\n+extern void set_init_label\t\t\tPROTO((tree));\n+extern void process_init_element\t\tPROTO((tree));\n \n /* in c-iterate.c */\n extern void iterator_expand\t\t\tPROTO((tree));"}]}