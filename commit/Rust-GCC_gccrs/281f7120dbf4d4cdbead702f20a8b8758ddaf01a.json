{"sha": "281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgxZjcxMjBkYmY0ZDRjZGJlYWQ3MDJmMjBhOGI4NzU4ZGRhZjAxYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-08-14T11:48:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-08-14T11:48:36Z"}, "message": "avx512bwintrin.h: Whitespace fixes.\n\n\t* config/i386/avx512bwintrin.h: Whitespace fixes.\n\t* config/i386/avx512dqintrin.h: Ditto.\n\nFrom-SVN: r239454", "tree": {"sha": "397c271261178d717257be3cac1cdf44962d84ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/397c271261178d717257be3cac1cdf44962d84ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281f7120dbf4d4cdbead702f20a8b8758ddaf01a/comments", "author": null, "committer": null, "parents": [{"sha": "4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4271e5cb0d0d3ef1a88cf820c3c0c028558fbd54"}], "stats": {"total": 59, "additions": 25, "deletions": 34}, "files": [{"sha": "8f03249b55a6afd1a8e2c087fa9803ef70f9e08d", "filename": "gcc/config/i386/avx512bwintrin.h", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/281f7120dbf4d4cdbead702f20a8b8758ddaf01a/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/281f7120dbf4d4cdbead702f20a8b8758ddaf01a/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h?ref=281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "patch": "@@ -587,8 +587,7 @@ _mm512_permutex2var_epi16 (__m512i __A, __m512i __I, __m512i __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v32hi) __A,\n \t\t\t\t\t\t\t(__v32hi) __B,\n-\t\t\t\t\t\t\t(__mmask32) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask32) -1);\n }\n \n extern __inline __m512i\n@@ -2283,7 +2282,7 @@ _mm512_cmpneq_epu8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_ucmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t   (__v64qi) __Y, 4,\n-\t\t\t\t\t\t   (__mmask64) - 1);\n+\t\t\t\t\t\t   (__mmask64) -1);\n }\n \n extern __inline __mmask64\n@@ -2292,7 +2291,7 @@ _mm512_cmplt_epu8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_ucmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t   (__v64qi) __Y, 1,\n-\t\t\t\t\t\t   (__mmask64) - 1);\n+\t\t\t\t\t\t   (__mmask64) -1);\n }\n \n extern __inline __mmask64\n@@ -2301,7 +2300,7 @@ _mm512_cmpge_epu8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_ucmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t   (__v64qi) __Y, 5,\n-\t\t\t\t\t\t   (__mmask64) - 1);\n+\t\t\t\t\t\t   (__mmask64) -1);\n }\n \n extern __inline __mmask64\n@@ -2310,7 +2309,7 @@ _mm512_cmple_epu8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_ucmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t   (__v64qi) __Y, 2,\n-\t\t\t\t\t\t   (__mmask64) - 1);\n+\t\t\t\t\t\t   (__mmask64) -1);\n }\n \n extern __inline __mmask32\n@@ -2319,7 +2318,7 @@ _mm512_cmpneq_epu16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t   (__v32hi) __Y, 4,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2328,7 +2327,7 @@ _mm512_cmplt_epu16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t   (__v32hi) __Y, 1,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2337,7 +2336,7 @@ _mm512_cmpge_epu16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t   (__v32hi) __Y, 5,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2346,7 +2345,7 @@ _mm512_cmple_epu16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t   (__v32hi) __Y, 2,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask64\n@@ -2355,7 +2354,7 @@ _mm512_cmpneq_epi8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_cmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t  (__v64qi) __Y, 4,\n-\t\t\t\t\t\t  (__mmask64) - 1);\n+\t\t\t\t\t\t  (__mmask64) -1);\n }\n \n extern __inline __mmask64\n@@ -2364,7 +2363,7 @@ _mm512_cmplt_epi8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_cmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t  (__v64qi) __Y, 1,\n-\t\t\t\t\t\t  (__mmask64) - 1);\n+\t\t\t\t\t\t  (__mmask64) -1);\n }\n \n extern __inline __mmask64\n@@ -2373,7 +2372,7 @@ _mm512_cmpge_epi8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_cmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t  (__v64qi) __Y, 5,\n-\t\t\t\t\t\t  (__mmask64) - 1);\n+\t\t\t\t\t\t  (__mmask64) -1);\n }\n \n extern __inline __mmask64\n@@ -2382,7 +2381,7 @@ _mm512_cmple_epi8_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask64) __builtin_ia32_cmpb512_mask ((__v64qi) __X,\n \t\t\t\t\t\t  (__v64qi) __Y, 2,\n-\t\t\t\t\t\t  (__mmask64) - 1);\n+\t\t\t\t\t\t  (__mmask64) -1);\n }\n \n extern __inline __mmask32\n@@ -2391,7 +2390,7 @@ _mm512_cmpneq_epi16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t  (__v32hi) __Y, 4,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2400,7 +2399,7 @@ _mm512_cmplt_epi16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t  (__v32hi) __Y, 1,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2409,7 +2408,7 @@ _mm512_cmpge_epi16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t  (__v32hi) __Y, 5,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2418,7 +2417,7 @@ _mm512_cmple_epi16_mask (__m512i __X, __m512i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpw512_mask ((__v32hi) __X,\n \t\t\t\t\t\t  (__v32hi) __Y, 2,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n #ifdef __OPTIMIZE__"}, {"sha": "1dbb6b04e4103a1dabfbf5f7bff4321e947b16aa", "filename": "gcc/config/i386/avx512dqintrin.h", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/281f7120dbf4d4cdbead702f20a8b8758ddaf01a/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/281f7120dbf4d4cdbead702f20a8b8758ddaf01a/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h?ref=281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "patch": "@@ -41,8 +41,7 @@ _mm512_broadcast_f64x2 (__m128d __A)\n   return (__m512d) __builtin_ia32_broadcastf64x2_512_mask ((__v2df)\n \t\t\t\t\t\t\t   __A,\n \t\t\t\t\t\t\t   _mm512_undefined_pd(),\n-\t\t\t\t\t\t\t   (__mmask8) -\n-\t\t\t\t\t\t\t   1);\n+\t\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __m512d\n@@ -103,8 +102,7 @@ _mm512_broadcast_f32x2 (__m128 __A)\n {\n   return (__m512) __builtin_ia32_broadcastf32x2_512_mask ((__v4sf) __A,\n \t\t\t\t\t\t\t  (__v16sf)_mm512_undefined_ps(),\n-\t\t\t\t\t\t\t  (__mmask16) -\n-\t\t\t\t\t\t\t  1);\n+\t\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __m512\n@@ -163,8 +161,7 @@ _mm512_broadcast_f32x8 (__m256 __A)\n {\n   return (__m512) __builtin_ia32_broadcastf32x8_512_mask ((__v8sf) __A,\n \t\t\t\t\t\t\t  _mm512_undefined_ps(),\n-\t\t\t\t\t\t\t  (__mmask16) -\n-\t\t\t\t\t\t\t  1);\n+\t\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __m512\n@@ -1566,8 +1563,7 @@ _mm512_extractf64x2_pd (__m512d __A, const int __imm)\n \t\t\t\t\t\t\t __imm,\n \t\t\t\t\t\t\t (__v2df)\n \t\t\t\t\t\t\t _mm_setzero_pd (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m128d\n@@ -1637,8 +1633,7 @@ _mm512_extracti64x2_epi64 (__m512i __A, const int __imm)\n \t\t\t\t\t\t\t __imm,\n \t\t\t\t\t\t\t (__v2di)\n \t\t\t\t\t\t\t _mm_setzero_di (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -1826,8 +1821,7 @@ _mm512_inserti64x2 (__m512i __A, __m128i __B, const int __imm)\n \t\t\t\t\t\t\t__imm,\n \t\t\t\t\t\t\t(__v8di)\n \t\t\t\t\t\t\t_mm512_setzero_si512 (),\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m512i\n@@ -1866,8 +1860,7 @@ _mm512_insertf64x2 (__m512d __A, __m128d __B, const int __imm)\n \t\t\t\t\t\t\t__imm,\n \t\t\t\t\t\t\t(__v8df)\n \t\t\t\t\t\t\t_mm512_setzero_pd (),\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m512d\n@@ -1930,8 +1923,7 @@ _mm512_fpclass_ps_mask (__m512 __A, const int __imm)\n {\n   return (__mmask16) __builtin_ia32_fpclassps512_mask ((__v16sf) __A,\n \t\t\t\t\t\t       __imm,\n-\t\t\t\t\t\t       (__mmask16) -\n-\t\t\t\t\t\t       1);\n+\t\t\t\t\t\t       (__mmask16) -1);\n }\n \n #else"}]}