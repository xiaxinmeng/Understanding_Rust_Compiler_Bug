{"sha": "68317985439c7eb789bd3046b633130fec03e52c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzMTc5ODU0MzljN2ViNzg5YmQzMDQ2YjYzMzEzMGZlYzAzZTUyYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-20T07:37:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-20T07:37:53Z"}, "message": "debug.h (gcc_debug_hooks): Add filename parameter to early_finish hook.\n\n2016-09-20  Richard Biener  <rguenther@suse.de>\n\n\t* debug.h (gcc_debug_hooks): Add filename parameter to early_finish\n\thook.\n\t* debug.c (do_nothing_debug_hooks): Adjust.\n\t* dbxout.c (dbx_debug_hooks): Likewise.\n\t* sdbout.c (sdb_debug_hooks): Likewise.\n\t* dwarf2out.c (dwarf2_lineno_debug_hooks): Likewise.\n\t(dwarf2out_finish): Move producer, filename and\n\tpath annotation ...\n\t(dwarf2out_early_finish): ... here.  Remove in_lto_p special-casing.\n\t* cgraphunit.c (symbol_table::finalize_compilation_unit): Adjust.\n\n\tlto/\n\t* lto.c (lto_main): Call early_finish with \"<artificial>\" as\n\tfilename.\n\nFrom-SVN: r240255", "tree": {"sha": "158e7af39eb7618b43edeed536be1eb66a38b29a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/158e7af39eb7618b43edeed536be1eb66a38b29a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68317985439c7eb789bd3046b633130fec03e52c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68317985439c7eb789bd3046b633130fec03e52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68317985439c7eb789bd3046b633130fec03e52c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68317985439c7eb789bd3046b633130fec03e52c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b78713939badabdb47ab512103d54bd9a08a3871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78713939badabdb47ab512103d54bd9a08a3871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78713939badabdb47ab512103d54bd9a08a3871"}], "stats": {"total": 85, "additions": 49, "deletions": 36}, "files": [{"sha": "5b35f9224fcf0b63b4b5c94f57910caa4657aba9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -1,3 +1,16 @@\n+2016-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* debug.h (gcc_debug_hooks): Add filename parameter to early_finish\n+\thook.\n+\t* debug.c (do_nothing_debug_hooks): Adjust.\n+\t* dbxout.c (dbx_debug_hooks): Likewise.\n+\t* sdbout.c (sdb_debug_hooks): Likewise.\n+\t* dwarf2out.c (dwarf2_lineno_debug_hooks): Likewise.\n+\t(dwarf2out_finish): Move producer, filename and\n+\tpath annotation ...\n+\t(dwarf2out_early_finish): ... here.  Remove in_lto_p special-casing.\n+\t* cgraphunit.c (symbol_table::finalize_compilation_unit): Adjust.\n+\n 2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c++/77434"}, {"sha": "eb611c1d74c59075cea6c1b585d72bd974428113", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -2561,7 +2561,7 @@ symbol_table::finalize_compilation_unit (void)\n \n       /* Clean up anything that needs cleaning up after initial debug\n \t generation.  */\n-      (*debug_hooks->early_finish) ();\n+      (*debug_hooks->early_finish) (main_input_filename);\n     }\n \n   /* Finally drive the pass manager.  */"}, {"sha": "5485a6cbc8825c8f85ebacff0727b0778ffc6cdf", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -344,7 +344,7 @@ const struct gcc_debug_hooks dbx_debug_hooks =\n {\n   dbxout_init,\n   dbxout_finish,\n-  debug_nothing_void,\n+  debug_nothing_charstar,\n   debug_nothing_void,\n   debug_nothing_int_charstar,\n   debug_nothing_int_charstar,"}, {"sha": "3d658e883b8d35d21a6107057abd793e9ef40fa9", "filename": "gcc/debug.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.c?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -26,7 +26,7 @@ const struct gcc_debug_hooks do_nothing_debug_hooks =\n {\n   debug_nothing_charstar,\n   debug_nothing_charstar,\n-  debug_nothing_void,\t\t\t/* early_finish */\n+  debug_nothing_charstar,\t\t\t/* early_finish */\n   debug_nothing_void,\n   debug_nothing_int_charstar,\n   debug_nothing_int_charstar,"}, {"sha": "34b63d7c590f3c849edd1a0a90e47d7c4490dd90", "filename": "gcc/debug.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -31,7 +31,7 @@ struct gcc_debug_hooks\n   void (* finish) (const char *main_filename);\n \n   /* Run cleanups necessary after early debug generation.  */\n-  void (* early_finish) (void);\n+  void (* early_finish) (const char *main_filename);\n \n   /* Called from cgraph_optimize before starting to assemble\n      functions/variables/toplevel asms.  */"}, {"sha": "61c515207f6e6092bafbc3da7d05f3baa7119d66", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 25, "deletions": 30, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -2480,7 +2480,7 @@ build_cfa_aligned_loc (dw_cfa_location *cfa,\n \n static void dwarf2out_init (const char *);\n static void dwarf2out_finish (const char *);\n-static void dwarf2out_early_finish (void);\n+static void dwarf2out_early_finish (const char *);\n static void dwarf2out_assembly_start (void);\n static void dwarf2out_define (unsigned int, const char *);\n static void dwarf2out_undef (unsigned int, const char *);\n@@ -2556,7 +2556,7 @@ const struct gcc_debug_hooks dwarf2_lineno_debug_hooks =\n {\n   dwarf2out_init,\n   debug_nothing_charstar,\n-  debug_nothing_void,\n+  debug_nothing_charstar,\n   debug_nothing_void,\n   debug_nothing_int_charstar,\n   debug_nothing_int_charstar,\n@@ -27804,7 +27804,7 @@ flush_limbo_die_list (void)\n    and generate the DWARF-2 debugging info.  */\n \n static void\n-dwarf2out_finish (const char *filename)\n+dwarf2out_finish (const char *)\n {\n   comdat_type_node *ctnode;\n   dw_die_ref main_comp_unit_die;\n@@ -27816,34 +27816,8 @@ dwarf2out_finish (const char *filename)\n      DIEs generated after early finish.  */\n   gcc_assert (deferred_asm_name == NULL);\n \n-  /* PCH might result in DW_AT_producer string being restored from the\n-     header compilation, so always fill it with empty string initially\n-     and overwrite only here.  */\n-  dw_attr_node *producer = get_AT (comp_unit_die (), DW_AT_producer);\n-  producer_string = gen_producer_string ();\n-  producer->dw_attr_val.v.val_str->refcount--;\n-  producer->dw_attr_val.v.val_str = find_AT_string (producer_string);\n-\n   gen_remaining_tmpl_value_param_die_attribute ();\n \n-  /* Add the name for the main input file now.  We delayed this from\n-     dwarf2out_init to avoid complications with PCH.\n-     For LTO produced units use a fixed artificial name to avoid\n-     leaking tempfile names into the dwarf.  */\n-  if (!in_lto_p)\n-    add_name_attribute (comp_unit_die (), remap_debug_filename (filename));\n-  else\n-    add_name_attribute (comp_unit_die (), \"<artificial>\");\n-  if (!IS_ABSOLUTE_PATH (filename) || targetm.force_at_comp_dir)\n-    add_comp_dir_attribute (comp_unit_die ());\n-  else if (get_AT (comp_unit_die (), DW_AT_comp_dir) == NULL)\n-    {\n-      bool p = false;\n-      file_table->traverse<bool *, file_table_relative_p> (&p);\n-      if (p)\n-\tadd_comp_dir_attribute (comp_unit_die ());\n-    }\n-\n #if ENABLE_ASSERT_CHECKING\n   {\n     dw_die_ref die = comp_unit_die (), c;\n@@ -28151,10 +28125,31 @@ dwarf2out_finish (const char *filename)\n    has run.  */\n \n static void\n-dwarf2out_early_finish (void)\n+dwarf2out_early_finish (const char *filename)\n {\n   set_early_dwarf s;\n \n+  /* PCH might result in DW_AT_producer string being restored from the\n+     header compilation, so always fill it with empty string initially\n+     and overwrite only here.  */\n+  dw_attr_node *producer = get_AT (comp_unit_die (), DW_AT_producer);\n+  producer_string = gen_producer_string ();\n+  producer->dw_attr_val.v.val_str->refcount--;\n+  producer->dw_attr_val.v.val_str = find_AT_string (producer_string);\n+\n+  /* Add the name for the main input file now.  We delayed this from\n+     dwarf2out_init to avoid complications with PCH.  */\n+  add_name_attribute (comp_unit_die (), remap_debug_filename (filename));\n+  if (!IS_ABSOLUTE_PATH (filename) || targetm.force_at_comp_dir)\n+    add_comp_dir_attribute (comp_unit_die ());\n+  else if (get_AT (comp_unit_die (), DW_AT_comp_dir) == NULL)\n+    {\n+      bool p = false;\n+      file_table->traverse<bool *, file_table_relative_p> (&p);\n+      if (p)\n+\tadd_comp_dir_attribute (comp_unit_die ());\n+    }\n+\n   /* With LTO early dwarf was really finished at compile-time, so make\n      sure to adjust the phase after annotating the LTRANS CU DIE.  */\n   if (in_lto_p)"}, {"sha": "67fc164aad99bbeffba4bd982f13c6409a24e43a", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -1,3 +1,8 @@\n+2016-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* lto.c (lto_main): Call early_finish with \"<artificial>\" as\n+\tfilename.\n+\n 2016-09-19  Richard Biener  <rguenther@suse.de>\n \n \t* lto.c (lto_main): Invoke early_finish debug hook."}, {"sha": "ecd30b99574864b47230ae82e9f8a69cd9b72440", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -3316,7 +3316,7 @@ lto_main (void)\n \t    lto_promote_statics_nonwpa ();\n \n \t  /* Annotate the CU DIE and mark the early debug phase as finished.  */\n-\t  debug_hooks->early_finish ();\n+\t  debug_hooks->early_finish (\"<artificial>\");\n \n \t  /* Let the middle end know that we have read and merged all of\n \t     the input files.  */ "}, {"sha": "7eea772bed7cfabfd6eedd0064c6822d222af62f", "filename": "gcc/sdbout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68317985439c7eb789bd3046b633130fec03e52c/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=68317985439c7eb789bd3046b633130fec03e52c", "patch": "@@ -277,7 +277,7 @@ const struct gcc_debug_hooks sdb_debug_hooks =\n {\n   sdbout_init,\t\t\t         /* init */\n   sdbout_finish,\t\t         /* finish */\n-  debug_nothing_void,\t\t\t /* early_finish */\n+  debug_nothing_charstar,\t\t /* early_finish */\n   debug_nothing_void,\t\t\t /* assembly_start */\n   debug_nothing_int_charstar,\t         /* define */\n   debug_nothing_int_charstar,\t         /* undef */"}]}