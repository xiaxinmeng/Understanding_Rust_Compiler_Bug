{"sha": "e66084a445ce22d382afa9fb67f1ed25bf20c298", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY2MDg0YTQ0NWNlMjJkMzgyYWZhOWZiNjdmMWVkMjViZjIwYzI5OA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-02-11T12:06:19Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-02-11T12:06:19Z"}, "message": "Restore .init_array etc. detection on 64-bit Solaris\n\n\t* acinclude.m4 (gcc_AC_INITFINI_ARRAY): Use 8-byte strings with\n\tSolaris ld.\n\t* configure: Regenerate.\n\nFrom-SVN: r268768", "tree": {"sha": "594ca42fa404b59ae533189f9a6c092d805e45dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/594ca42fa404b59ae533189f9a6c092d805e45dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e66084a445ce22d382afa9fb67f1ed25bf20c298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66084a445ce22d382afa9fb67f1ed25bf20c298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e66084a445ce22d382afa9fb67f1ed25bf20c298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66084a445ce22d382afa9fb67f1ed25bf20c298/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60f32352bd14ede43fc7c206158dcd09969d23b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f32352bd14ede43fc7c206158dcd09969d23b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f32352bd14ede43fc7c206158dcd09969d23b8"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "bea63a9e09a2ccfc8637efb6a9c0bc547545a055", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66084a445ce22d382afa9fb67f1ed25bf20c298/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66084a445ce22d382afa9fb67f1ed25bf20c298/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e66084a445ce22d382afa9fb67f1ed25bf20c298", "patch": "@@ -1,3 +1,9 @@\n+2019-02-11  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (gcc_AC_INITFINI_ARRAY): Use 8-byte strings with\n+\tSolaris ld.\n+\t* configure: Regenerate.\n+\n 2019-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/88714"}, {"sha": "e3d50dca708e711aeb080f1eaf8b6c893301ea30", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66084a445ce22d382afa9fb67f1ed25bf20c298/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66084a445ce22d382afa9fb67f1ed25bf20c298/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=e66084a445ce22d382afa9fb67f1ed25bf20c298", "patch": "@@ -374,26 +374,26 @@ EOF\n \t      cat > conftest.s <<EOF\n .section $sh_quote.fini_array.65530$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'C', 'C', 'C', 'C'\n+.byte 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C'\n .section $sh_quote.init_array.65530$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'D', 'D', 'D', 'D'\n+.byte 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D'\n .section $sh_quote.fini_array.01005$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'G', 'G', 'G', 'G'\n+.byte 'G', 'G', 'G', 'G', 'G', 'G', 'G', 'G'\n .section $sh_quote.init_array.01005$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'H', 'H', 'H', 'H'\n+.byte 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'\n .text\n .globl _start\n _start:\n EOF\n \t      if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n \t         && $gcc_cv_ld -o conftest conftest.o > /dev/null 2>&1 \\\n \t         && $gcc_cv_objdump -s -j .init_array conftest \\\n-\t\t    | grep HHHHDDDD > /dev/null 2>&1 \\\n+\t\t    | grep HHHHHHHHDDDDDDDD > /dev/null 2>&1 \\\n \t         && $gcc_cv_objdump -s -j .fini_array conftest \\\n-\t\t    | grep GGGGCCCC > /dev/null 2>&1; then\n+\t\t    | grep GGGGGGGGCCCCCCCC > /dev/null 2>&1; then\n \t        gcc_cv_initfini_array=yes\n \t      fi\n \t      ;;"}, {"sha": "8baf95f691e1e2a0d95043c253b68de623c33ea9", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66084a445ce22d382afa9fb67f1ed25bf20c298/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66084a445ce22d382afa9fb67f1ed25bf20c298/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e66084a445ce22d382afa9fb67f1ed25bf20c298", "patch": "@@ -18646,7 +18646,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18640 \"configure\"\n+#line 18649 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18752,7 +18752,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18746 \"configure\"\n+#line 18755 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -23309,26 +23309,26 @@ EOF\n \t      cat > conftest.s <<EOF\n .section $sh_quote.fini_array.65530$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'C', 'C', 'C', 'C'\n+.byte 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C'\n .section $sh_quote.init_array.65530$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'D', 'D', 'D', 'D'\n+.byte 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D'\n .section $sh_quote.fini_array.01005$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'G', 'G', 'G', 'G'\n+.byte 'G', 'G', 'G', 'G', 'G', 'G', 'G', 'G'\n .section $sh_quote.init_array.01005$sh_quote,$sh_flags,$sh_type\n .align 4\n-.byte 'H', 'H', 'H', 'H'\n+.byte 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H'\n .text\n .globl _start\n _start:\n EOF\n \t      if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n \t         && $gcc_cv_ld -o conftest conftest.o > /dev/null 2>&1 \\\n \t         && $gcc_cv_objdump -s -j .init_array conftest \\\n-\t\t    | grep HHHHDDDD > /dev/null 2>&1 \\\n+\t\t    | grep HHHHHHHHDDDDDDDD > /dev/null 2>&1 \\\n \t         && $gcc_cv_objdump -s -j .fini_array conftest \\\n-\t\t    | grep GGGGCCCC > /dev/null 2>&1; then\n+\t\t    | grep GGGGGGGGCCCCCCCC > /dev/null 2>&1; then\n \t        gcc_cv_initfini_array=yes\n \t      fi\n \t      ;;\n@@ -25141,7 +25141,7 @@ if test \"${enable_standard_branch_protection+set}\" = set; then :\n           no)\n             ;;\n           *)\n-            as_fn_error \"'$enableval' is an invalid value for --enable-standard-branch-protection.\\\n+            as_fn_error $? \"'$enableval' is an invalid value for --enable-standard-branch-protection.\\\n   Valid choices are 'yes' and 'no'.\" \"$LINENO\" 5\n             ;;\n         esac"}]}