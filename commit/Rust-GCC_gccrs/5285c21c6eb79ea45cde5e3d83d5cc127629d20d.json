{"sha": "5285c21c6eb79ea45cde5e3d83d5cc127629d20d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4NWMyMWM2ZWI3OWVhNDVjZGU1ZTNkODNkNWNjMTI3NjI5ZDIwZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2012-09-05T20:23:22Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-09-05T20:23:22Z"}, "message": "optabs.c (emit_conditional_add): Correct comment about the arguments.\n\n2012-09-05  Andrew Pinski  <apinski@cavium.com>\n\n \t* optabs.c (emit_conditional_add): Correct comment about the arguments.\n\tRemove code which might swap op2 and op3 since they cannot be swapped.\n\t* doc/md.texi (add@var{mode}cc): Fix document about how the arguments\n\tare used.\n\nFrom-SVN: r190994", "tree": {"sha": "4bfdadc6f4af48242c8aa2bf6200fb05686b38e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bfdadc6f4af48242c8aa2bf6200fb05686b38e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5285c21c6eb79ea45cde5e3d83d5cc127629d20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5285c21c6eb79ea45cde5e3d83d5cc127629d20d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5285c21c6eb79ea45cde5e3d83d5cc127629d20d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5285c21c6eb79ea45cde5e3d83d5cc127629d20d/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "933d309fcf848e4d9a1afb0203a99fab8f0aeba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933d309fcf848e4d9a1afb0203a99fab8f0aeba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/933d309fcf848e4d9a1afb0203a99fab8f0aeba7"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "84c4f0903431ba63eceae468214da8bbfec4a7a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5285c21c6eb79ea45cde5e3d83d5cc127629d20d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5285c21c6eb79ea45cde5e3d83d5cc127629d20d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5285c21c6eb79ea45cde5e3d83d5cc127629d20d", "patch": "@@ -1,3 +1,10 @@\n+2012-09-05  Andrew Pinski  <apinski@cavium.com>\n+\n+ \t* optabs.c (emit_conditional_add): Correct comment about the arguments.\n+\tRemove code which might swap op2 and op3 since they cannot be swapped.\n+\t* doc/md.texi (add@var{mode}cc): Fix document about how the arguments\n+\tare used.\n+\n 2012-09-05  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* hooks.c (hook_int_rtx_mode_as_bool_0): New function."}, {"sha": "9f2012f148ac83d46138f7bb20f44816f35ed1d3", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5285c21c6eb79ea45cde5e3d83d5cc127629d20d/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5285c21c6eb79ea45cde5e3d83d5cc127629d20d/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=5285c21c6eb79ea45cde5e3d83d5cc127629d20d", "patch": "@@ -5250,7 +5250,7 @@ define these patterns.\n @item @samp{add@var{mode}cc}\n Similar to @samp{mov@var{mode}cc} but for conditional addition.  Conditionally\n move operand 2 or (operands 2 + operand 3) into operand 0 according to the\n-comparison in operand 1.  If the comparison is true, operand 2 is moved into\n+comparison in operand 1.  If the comparison is false, operand 2 is moved into\n operand 0, otherwise (operand 2 + operand 3) is moved.\n \n @cindex @code{cstore@var{mode}4} instruction pattern"}, {"sha": "02c2fd5dd0f48b4ee054402c3b9985e8a691f4d6", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5285c21c6eb79ea45cde5e3d83d5cc127629d20d/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5285c21c6eb79ea45cde5e3d83d5cc127629d20d/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=5285c21c6eb79ea45cde5e3d83d5cc127629d20d", "patch": "@@ -4584,7 +4584,7 @@ can_conditionally_move_p (enum machine_mode mode)\n    the mode to use should they be constants.  If it is VOIDmode, they cannot\n    both be constants.\n \n-   OP2 should be stored in TARGET if the comparison is true, otherwise OP2+OP3\n+   OP2 should be stored in TARGET if the comparison is false, otherwise OP2+OP3\n    should be stored there.  MODE is the mode to use should they be constants.\n    If it is VOIDmode, they cannot both be constants.\n \n@@ -4598,7 +4598,6 @@ emit_conditional_add (rtx target, enum rtx_code code, rtx op0, rtx op1,\n {\n   rtx tem, comparison, last;\n   enum insn_code icode;\n-  enum rtx_code reversed;\n \n   /* If one operand is constant, make it the second one.  Only do this\n      if the other operand is not constant as well.  */\n@@ -4622,16 +4621,6 @@ emit_conditional_add (rtx target, enum rtx_code code, rtx op0, rtx op1,\n   if (cmode == VOIDmode)\n     cmode = GET_MODE (op0);\n \n-  if (swap_commutative_operands_p (op2, op3)\n-      && ((reversed = reversed_comparison_code_parts (code, op0, op1, NULL))\n-          != UNKNOWN))\n-    {\n-      tem = op2;\n-      op2 = op3;\n-      op3 = tem;\n-      code = reversed;\n-    }\n-\n   if (mode == VOIDmode)\n     mode = GET_MODE (op2);\n "}]}