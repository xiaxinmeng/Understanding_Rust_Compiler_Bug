{"sha": "a148c4b2645a213a99d26056ed942fcec918bc42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0OGM0YjI2NDVhMjEzYTk5ZDI2MDU2ZWQ5NDJmY2VjOTE4YmM0Mg==", "commit": {"author": {"name": "Senthil Kumar Selvaraj", "email": "senthil_kumar.selvaraj@atmel.com", "date": "2014-06-05T18:34:43Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-06-05T18:34:43Z"}, "message": "re PR debug/52472 (ICE: in convert_debug_memory_address, at cfgexpand.c:2491)\n\n\tPR target/52472\n\t* cfgexpand.c (expand_debug_expr): Use address space of nested\n\tTREE_TYPE for ADDR_EXPR and MEM_REF.\n\n\tPR target/52472\n\t* gcc.target/avr/pr52472.c: New test.\n\nFrom-SVN: r211288", "tree": {"sha": "f7ff5f5bcf5270f0634b04ac3d90cdcb69b10d38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7ff5f5bcf5270f0634b04ac3d90cdcb69b10d38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a148c4b2645a213a99d26056ed942fcec918bc42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a148c4b2645a213a99d26056ed942fcec918bc42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a148c4b2645a213a99d26056ed942fcec918bc42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a148c4b2645a213a99d26056ed942fcec918bc42/comments", "author": null, "committer": null, "parents": [{"sha": "64e13bcd19db627535a6309d9d5f7b24e5724453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e13bcd19db627535a6309d9d5f7b24e5724453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e13bcd19db627535a6309d9d5f7b24e5724453"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "1e2c4f3a6175265287fecbf97b17e3fc89226a9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a148c4b2645a213a99d26056ed942fcec918bc42", "patch": "@@ -1,3 +1,9 @@\n+2014-06-05  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n+\n+\tPR target/52472\n+\t* cfgexpand.c (expand_debug_expr): Use address space of nested\n+\tTREE_TYPE for ADDR_EXPR and MEM_REF.\n+\n 2014-06-05  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/61289"}, {"sha": "e161cb76f2e62f78d0b3b9ce85c1483f56fa75d0", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=a148c4b2645a213a99d26056ed942fcec918bc42", "patch": "@@ -3941,10 +3941,7 @@ expand_debug_expr (tree exp)\n \t  op0 = plus_constant (inner_mode, op0, INTVAL (op1));\n \t}\n \n-      if (POINTER_TYPE_P (TREE_TYPE (exp)))\n-\tas = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (exp)));\n-      else\n-\tas = ADDR_SPACE_GENERIC;\n+      as = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (exp, 0))));\n \n       op0 = convert_debug_memory_address (targetm.addr_space.address_mode (as),\n \t\t\t\t\t  op0, as);\n@@ -4467,7 +4464,7 @@ expand_debug_expr (tree exp)\n \t  return NULL;\n \t}\n \n-      as = TYPE_ADDR_SPACE (TREE_TYPE (exp));\n+      as = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (exp)));\n       op0 = convert_debug_memory_address (mode, XEXP (op0, 0), as);\n \n       return op0;"}, {"sha": "06b1e334090c86b3128dd7e8f4ea1c6653a0ef08", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a148c4b2645a213a99d26056ed942fcec918bc42", "patch": "@@ -1,3 +1,9 @@\n+2014-06-05  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n+\n+\tPR target/52472\n+\t* gcc.target/avr/pr52472.c: New test.\n+\n+\n 2014-06-05  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/61289"}, {"sha": "701cfb42a253155995fc99c3e43555abe40a4eb0", "filename": "gcc/testsuite/gcc.target/avr/pr52472.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Fpr52472.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a148c4b2645a213a99d26056ed942fcec918bc42/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Fpr52472.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Fpr52472.c?ref=a148c4b2645a213a99d26056ed942fcec918bc42", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -g -Wno-pointer-to-int-cast\" } */\n+\n+/* This testcase exposes PR52472. expand_debug_expr mistakenly\n+   considers the address space of data to be generic, and\n+   asserts that PSImode pointers aren't valid in the generic \n+   address space. */\n+\n+extern const __memx unsigned data[][10];\n+\n+unsigned long ice (void)\n+{\n+  unsigned long addr32;\n+\n+  return addr32 = ((unsigned long) data);\n+}"}]}