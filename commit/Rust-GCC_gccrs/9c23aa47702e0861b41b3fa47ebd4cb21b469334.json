{"sha": "9c23aa47702e0861b41b3fa47ebd4cb21b469334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMyM2FhNDc3MDJlMDg2MWI0MWIzZmE0N2ViZDRjYjIxYjQ2OTMzNA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@bitmover.com", "date": "1999-08-27T06:16:55Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-08-27T06:16:55Z"}, "message": "i386.h: Declare ix86_cpu_string...\n\n1999-08-26 23:09 -0700  Zack Weinberg  <zack@bitmover.com>\n\n\t* i386.h: Declare ix86_cpu_string, ix86_arch_string,\n\ti386_reg_alloc_order, i386_regparm_string,\n\ti386_align_loops_string, i386_align_jumps_string,\n\ti386_align_funcs_string, i386_preferred_stack_boundary_string,\n\tand i386_branch_cost_string as type \"const char *\".\n\t* i386.c: Define all above strings as type \"const char *\".\n\nFrom-SVN: r28919", "tree": {"sha": "3197570db73a7a2d65c575cb2807f53794cbb311", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3197570db73a7a2d65c575cb2807f53794cbb311"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c23aa47702e0861b41b3fa47ebd4cb21b469334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c23aa47702e0861b41b3fa47ebd4cb21b469334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c23aa47702e0861b41b3fa47ebd4cb21b469334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c23aa47702e0861b41b3fa47ebd4cb21b469334/comments", "author": null, "committer": null, "parents": [{"sha": "3fa56191391ce760d4f234500f5fa1bc310ed934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fa56191391ce760d4f234500f5fa1bc310ed934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fa56191391ce760d4f234500f5fa1bc310ed934"}], "stats": {"total": 45, "additions": 27, "deletions": 18}, "files": [{"sha": "e2a903859a3843e01126cbd2ad85f7494e69290a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c23aa47702e0861b41b3fa47ebd4cb21b469334/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c23aa47702e0861b41b3fa47ebd4cb21b469334/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c23aa47702e0861b41b3fa47ebd4cb21b469334", "patch": "@@ -1,3 +1,12 @@\n+1999-08-26 23:09 -0700  Zack Weinberg  <zack@bitmover.com>\n+\n+\t* i386.h: Declare ix86_cpu_string, ix86_arch_string,\n+\ti386_reg_alloc_order, i386_regparm_string,\n+\ti386_align_loops_string, i386_align_jumps_string,\n+\ti386_align_funcs_string, i386_preferred_stack_boundary_string,\n+\tand i386_branch_cost_string as type \"const char *\".\n+\t* i386.c: Define all above strings as type \"const char *\".\n+\n Thu Aug 26 20:36:30 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* dwarf2out.c (output_aranges): Check DWARF_OFFSET_SIZE not PTR_SIZE"}, {"sha": "62bbd1b7274d6ff088a67577c72dfb01e3b5652b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c23aa47702e0861b41b3fa47ebd4cb21b469334/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c23aa47702e0861b41b3fa47ebd4cb21b469334/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9c23aa47702e0861b41b3fa47ebd4cb21b469334", "patch": "@@ -182,40 +182,40 @@ enum processor_type ix86_cpu;\n int ix86_arch;\n \n /* Strings to hold which cpu and instruction set architecture  to use.  */\n-char *ix86_cpu_string;\t\t/* for -mcpu=<xxx> */\n-char *ix86_arch_string;\t\t/* for -march=<xxx> */\n+const char *ix86_cpu_string;\t\t/* for -mcpu=<xxx> */\n+const char *ix86_arch_string;\t\t/* for -march=<xxx> */\n \n /* Register allocation order */\n-char *i386_reg_alloc_order;\n+const char *i386_reg_alloc_order;\n static char regs_allocated[FIRST_PSEUDO_REGISTER];\n \n /* # of registers to use to pass arguments. */\n-char *i386_regparm_string;\n+const char *i386_regparm_string;\n \n /* i386_regparm_string as a number */\n int i386_regparm;\n \n /* Alignment to use for loops and jumps:  */\n \n /* Power of two alignment for loops. */\n-char *i386_align_loops_string;\n+const char *i386_align_loops_string;\n \n /* Power of two alignment for non-loop jumps. */\n-char *i386_align_jumps_string;\n+const char *i386_align_jumps_string;\n \n /* Power of two alignment for stack boundary in bytes.  */\n-char *i386_preferred_stack_boundary_string;\n+const char *i386_preferred_stack_boundary_string;\n \n /* Preferred alignment for stack boundary in bits.  */\n int i386_preferred_stack_boundary;\n \n /* Values 1-5: see jump.c */\n int i386_branch_cost;\n-char *i386_branch_cost_string;\n+const char *i386_branch_cost_string;\n \n /* Power of two alignment for functions. */\n int i386_align_funcs;\n-char *i386_align_funcs_string;\n+const char *i386_align_funcs_string;\n \n /* Power of two alignment for loops. */\n int i386_align_loops;"}, {"sha": "7fbfede46ff2c35feba7062c98d96dcef7eb9961", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c23aa47702e0861b41b3fa47ebd4cb21b469334/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c23aa47702e0861b41b3fa47ebd4cb21b469334/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=9c23aa47702e0861b41b3fa47ebd4cb21b469334", "patch": "@@ -2771,15 +2771,15 @@ extern void rewrite_address ();\n #endif\n \n /* Variables in i386.c */\n-extern char *ix86_cpu_string;\t\t\t/* for -mcpu=<xxx> */\n-extern char *ix86_arch_string;\t\t\t/* for -march=<xxx> */\n-extern char *i386_reg_alloc_order;\t\t/* register allocation order */\n-extern char *i386_regparm_string;\t\t/* # registers to use to pass args */\n-extern char *i386_align_loops_string;\t\t/* power of two alignment for loops */\n-extern char *i386_align_jumps_string;\t\t/* power of two alignment for non-loop jumps */\n-extern char *i386_align_funcs_string;\t\t/* power of two alignment for functions */\n-extern char *i386_preferred_stack_boundary_string;/* power of two alignment for stack boundary */\n-extern char *i386_branch_cost_string;\t\t/* values 1-5: see jump.c */\n+extern const char *ix86_cpu_string;\t\t/* for -mcpu=<xxx> */\n+extern const char *ix86_arch_string;\t\t/* for -march=<xxx> */\n+extern const char *i386_reg_alloc_order;\t/* register allocation order */\n+extern const char *i386_regparm_string;\t\t/* # registers to use to pass args */\n+extern const char *i386_align_loops_string;\t/* power of two alignment for loops */\n+extern const char *i386_align_jumps_string;\t/* power of two alignment for non-loop jumps */\n+extern const char *i386_align_funcs_string;\t/* power of two alignment for functions */\n+extern const char *i386_preferred_stack_boundary_string;/* power of two alignment for stack boundary */\n+extern const char *i386_branch_cost_string;\t/* values 1-5: see jump.c */\n extern int i386_regparm;\t\t\t/* i386_regparm_string as a number */\n extern int i386_align_loops;\t\t\t/* power of two alignment for loops */\n extern int i386_align_jumps;\t\t\t/* power of two alignment for non-loop jumps */"}]}