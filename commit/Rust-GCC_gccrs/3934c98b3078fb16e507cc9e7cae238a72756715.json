{"sha": "3934c98b3078fb16e507cc9e7cae238a72756715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkzNGM5OGIzMDc4ZmIxNmU1MDdjYzllN2NhZTIzOGE3Mjc1NjcxNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-20T07:25:26Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-20T07:25:26Z"}, "message": "Add comment in find_reloads.\n\nFrom-SVN: r2187", "tree": {"sha": "90fd85f397dcf06fb301100623586286db5dabb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90fd85f397dcf06fb301100623586286db5dabb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3934c98b3078fb16e507cc9e7cae238a72756715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3934c98b3078fb16e507cc9e7cae238a72756715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3934c98b3078fb16e507cc9e7cae238a72756715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3934c98b3078fb16e507cc9e7cae238a72756715/comments", "author": null, "committer": null, "parents": [{"sha": "ec35ef5057d8a75c3dc909f23e05a5d6f86dc066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec35ef5057d8a75c3dc909f23e05a5d6f86dc066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec35ef5057d8a75c3dc909f23e05a5d6f86dc066"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "aa9a642c0d6b9b65ffce68ee3f080237fcc26ce6", "filename": "gcc/reload.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3934c98b3078fb16e507cc9e7cae238a72756715/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3934c98b3078fb16e507cc9e7cae238a72756715/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=3934c98b3078fb16e507cc9e7cae238a72756715", "patch": "@@ -2286,6 +2286,10 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t\t be a problem accessing the register in the outer mode.  */\n \t      if (GET_CODE (operand) != REG\n #ifdef BYTE_LOADS_ZERO_EXTEND\n+\t\t  /* The comment below clearly does not match the code.\n+\t\t     What the code below actually does is set force_reload\n+\t\t     for a paradoxical subreg of a pseudo.  rms and kenner\n+\t\t     can't see the point of doing this.  */\n \t\t  /* Nonparadoxical subreg of a pseudoreg.\n \t\t     Don't to load the full width if on this machine\n \t\t     we expected the fetch to zero-extend.  */"}]}