{"sha": "643d443665ec68270af4c950fed4cdc1adad5154", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQzZDQ0MzY2NWVjNjgyNzBhZjRjOTUwZmVkNGNkYzFhZGFkNTE1NA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-11T13:41:13Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-11T13:41:13Z"}, "message": "Fortran] PR 92050 - fix ICE with -fcheck=all\n\n        gcc/fortran/\n        PR fortran/92050\n        * trans-expr.c (gfc_conv_procedure_call): Handle code generated\n        by -fcheck=all.\n\n        gcc/testsuite/\n        PR fortran/92050\n        * gfortran.dg/pr92050.f90: New.\n\nFrom-SVN: r276885", "tree": {"sha": "55ae95c7860333fa1516368b1068408792e7af6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55ae95c7860333fa1516368b1068408792e7af6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/643d443665ec68270af4c950fed4cdc1adad5154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643d443665ec68270af4c950fed4cdc1adad5154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643d443665ec68270af4c950fed4cdc1adad5154", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643d443665ec68270af4c950fed4cdc1adad5154/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1284e2b104a81ad93daab5110cd844981e501086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1284e2b104a81ad93daab5110cd844981e501086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1284e2b104a81ad93daab5110cd844981e501086"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "5aeacc1781a2bdccf77a47141ecd9d013f2c914e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=643d443665ec68270af4c950fed4cdc1adad5154", "patch": "@@ -1,3 +1,9 @@\n+2019-10-11  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92050\n+\t* trans-expr.c (gfc_conv_procedure_call): Handle code generated\n+\tby -fcheck=all.\n+\n 2019-10-11  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* f95-lang.c (LANG_HOOKS_OMP_IS_ALLOCATABLE_OR_PTR): Re-define to"}, {"sha": "65238ff623de42d620086d8099cdcd2303f89cc4", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=643d443665ec68270af4c950fed4cdc1adad5154", "patch": "@@ -7031,8 +7031,11 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \tgfc_allocate_lang_decl (result);\n       GFC_DECL_SAVED_DESCRIPTOR (result) = parmse.expr;\n       gfc_free_expr (class_expr);\n-      gcc_assert (parmse.pre.head == NULL_TREE\n-\t\t  && parmse.post.head == NULL_TREE);\n+      /* -fcheck= can add diagnostic code, which has to be placed before\n+\t the call. */\n+      if (parmse.pre.head != NULL)\n+\t  gfc_add_expr_to_block (&se->pre, parmse.pre.head);\n+      gcc_assert (parmse.post.head == NULL_TREE);\n     }\n \n   /* Follow the function call with the argument post block.  */"}, {"sha": "488eba91b93f7bce8dd019e30b726b00b01a9768", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=643d443665ec68270af4c950fed4cdc1adad5154", "patch": "@@ -1,3 +1,8 @@\n+2019-10-11  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92050\n+\t* gfortran.dg/pr92050.f90: New.\n+\n 2019-10-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90883"}, {"sha": "64193878d8fd87a65ecf59896ae3e09d7238d1e2", "filename": "gcc/testsuite/gfortran.dg/pr92050.f90", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92050.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d443665ec68270af4c950fed4cdc1adad5154/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92050.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92050.f90?ref=643d443665ec68270af4c950fed4cdc1adad5154", "patch": "@@ -0,0 +1,53 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck=all\" }\n+! { dg-shouldfail \"above upper bound\" }\n+!\n+! PR fortran/92050\n+!\n+!\n+module buggy\n+  implicit none (type, external)\n+\n+  type :: par\n+  contains\n+    procedure, public :: fun => fun_par\n+  end type par\n+\n+  type comp\n+    class(par), allocatable :: p\n+  end type comp\n+\n+  type foo\n+    type(comp), allocatable :: m(:)\n+  end type foo\n+\n+contains\n+\n+  function fun_par(this)\n+    class(par) :: this\n+    integer    :: fun_par(1)\n+    fun_par = 42\n+  end function fun_par\n+\n+  subroutine update_foo(this)\n+    class(foo) :: this\n+    write(*,*) this%m(1)%p%fun()\n+  end subroutine update_foo\n+\n+  subroutine bad_update_foo(this)\n+    class(foo) :: this\n+    write(*,*) this%m(2)%p%fun()\n+  end subroutine bad_update_foo\n+end module buggy\n+\n+program main\n+  use buggy\n+  implicit none (type, external)\n+  type(foo) :: x\n+  allocate(x%m(1))\n+  allocate(x%m(1)%p)\n+  call update_foo(x)\n+  call bad_update_foo(x)\n+end program main\n+\n+! { dg-output \"At line 39 of file .*pr92050.f90.*Fortran runtime error: Index '2' of dimension 1 of array 'this%m' above upper bound of 1\" }"}]}