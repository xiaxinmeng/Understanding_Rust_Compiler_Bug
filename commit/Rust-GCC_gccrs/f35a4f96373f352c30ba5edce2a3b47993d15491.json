{"sha": "f35a4f96373f352c30ba5edce2a3b47993d15491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM1YTRmOTYzNzNmMzUyYzMwYmE1ZWRjZTJhM2I0Nzk5M2QxNTQ5MQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-20T00:16:46Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-20T00:16:46Z"}, "message": "Daily bump.", "tree": {"sha": "2785172a4637d24112d8767dc558188bd9b7f320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2785172a4637d24112d8767dc558188bd9b7f320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f35a4f96373f352c30ba5edce2a3b47993d15491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f35a4f96373f352c30ba5edce2a3b47993d15491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f35a4f96373f352c30ba5edce2a3b47993d15491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f35a4f96373f352c30ba5edce2a3b47993d15491/comments", "author": null, "committer": null, "parents": [{"sha": "6bc6094fa3ffedd7a66776908783f901cadccf24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc6094fa3ffedd7a66776908783f901cadccf24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bc6094fa3ffedd7a66776908783f901cadccf24"}], "stats": {"total": 274, "additions": 273, "deletions": 1}, "files": [{"sha": "02a43ec5b8090ed0cc2a639afd5c48db51f8dbbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1,3 +1,83 @@\n+2021-01-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/98664\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Keep scopes for\n+\tall functions, even if they're not declared artificial or inline.\n+\t* tree.c (tree_inlined_location): Use macro expansion location\n+\tonly if scope traversal fails to expose one.\n+\n+2021-01-19  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/92294\n+\t* alias.c (compare_base_symbol_refs): Take an extra parameter\n+\tand add the distance between two symbols to it.  Enshrine in\n+\tcomments that -1 means \"either 0 or 1, but we can't tell\n+\twhich at compile time\".\n+\t(memrefs_conflict_p): Update call accordingly.\n+\t(rtx_equal_for_memref_p): Likewise.  Take the distance between symbols\n+\tinto account.\n+\n+2021-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def (sqshl, uqshl,\n+\tsqrshl, uqrshl, sqadd, uqadd, sqsub, uqsub, suqadd, usqadd, sqmovn,\n+\tuqmovn, sqxtn2, uqxtn2, sqabs, sqneg, sqdmlal, sqdmlsl, sqdmlal_lane,\n+\tsqdmlsl_lane, sqdmlal_laneq, sqdmlsl_laneq, sqdmlal_n, sqdmlsl_n,\n+\tsqdmlal2, sqdmlsl2, sqdmlal2_lane, sqdmlsl2_lane, sqdmlal2_laneq,\n+\tsqdmlsl2_laneq, sqdmlal2_n, sqdmlsl2_n, sqdmull, sqdmull_lane,\n+\tsqdmull_laneq, sqdmull_n, sqdmull2, sqdmull2_lane, sqdmull2_laneq,\n+\tsqdmull2_n, sqdmulh, sqrdmulh, sqdmulh_lane, sqdmulh_laneq,\n+\tsqrdmulh_lane, sqrdmulh_laneq, sqshrun_n, sqrshrun_n, sqshrn_n,\n+\tuqshrn_n, sqrshrn_n, uqrshrn_n, sqshlu_n, sqshl_n, uqshl_n, sqrdmlah,\n+\tsqrdmlsh, sqrdmlah_lane, sqrdmlsh_lane, sqrdmlah_laneq, sqrdmlsh_laneq,\n+\tsqmovun): Use NONE flags.\n+\n+2021-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/98330\n+\t* ipa-modref.c (analyze_stmt): Only record a summary for a\n+\tdirect call.\n+\n+2021-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/98638\n+\t* tree-ssanames.c (fini_ssanames): Zero SSA_NAME_DEF_STMT.\n+\n+2021-01-19  Daniel Hellstrom  <daniel@gaisler.com>\n+\n+\t* config/sparc/rtemself.h (TARGET_OS_CPP_BUILTINS): Add\n+\tbuilt-in define __FIX_LEON3FT_TN0018.\n+\n+2021-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/97673\n+\t* tree-inline.c (tree_function_versioning): Set input_location\n+\tto UNKNOWN_LOCATION throughout the function.\n+\n+2021-01-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98476\n+\t* omp-low.c (lower_omp_target): Handle nonpointer is_device_ptr.\n+\n+2021-01-19  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/98690\n+\t* ipa-sra.c (ssa_name_only_returned_p): New parameter fun.  Check\n+\twhether non-call exceptions allow removal of a statement.\n+\t(isra_analyze_call): Pass the appropriate function to\n+\tssa_name_only_returned_p.\n+\n+2021-01-19  Geng Qi  <gengqi@linux.alibaba.com>\n+\n+\t* config/riscv/arch-canonicalize (longext_sort): New function for\n+\t sorting 'multi-letter'.\n+\t* config/riscv/multilib-generator: Adjusting the loop of 'alt' in\n+\t'alts'.\tThe 'arch' may not be the first of 'alts'.\n+\t(_expand_combination): Add underline for the 'ext' without '*'.\n+\tThis is because, a single-letter extension can always be treated well\n+\twith a '_' prefix, but it cannot be separated out if it is appended\n+\tto a multi-letter.\n+\n 2021-01-18  Vladimir N. Makarov  <vmakarov@redhat.com>\n \n \tPR target/97847"}, {"sha": "103c60fd84688f4cae609db3f6114aec029d9c9b", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1 +1 @@\n-20210119\n+20210120"}, {"sha": "eca5866ff4364e9b645888cebcbe8cefc10a9bc1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1,3 +1,8 @@\n+2021-01-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/98740\n+\t* gcc-interface/trans.c (add_decl_expr): Always mark TYPE_ADA_SIZE.\n+\n 2021-01-14  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \tPR ada/98595"}, {"sha": "fc6ddd408a515f3f79ebf91a489d005fed90c596", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1,3 +1,42 @@\n+2021-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98659\n+\t* pt.c (maybe_instantiate_noexcept): Return false if FN is\n+\terror_mark_node.\n+\n+2021-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98687\n+\t* name-lookup.c (push_using_decl_bindings): New, broken out of...\n+\t(finish_nonmember_using_decl): ...here.\n+\t* name-lookup.h (push_using_decl_bindings): Update declaration.\n+\t* pt.c (tsubst_expr): Update the call to push_using_decl_bindings.\n+\n+2021-01-19  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/41437\n+\tPR c++/58993\n+\t* search.c (friend_accessible_p): If scope is a hidden friend\n+\tdefined inside a dependent class, consider access from the\n+\tclass.\n+\t* parser.c (cp_parser_late_parsing_for_member): Don't push a\n+\tdk_no_check access state.\n+\n+2021-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98333\n+\t* parser.c (cp_parser_class_specifier_1): Perform late-parsing\n+\tof NSDMIs before late-parsing of noexcept-specifiers.\n+\n+2021-01-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* module.cc (identifier): Merge overloads.\n+\n+2021-01-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98624\n+\t* module.cc (trees_out::write_location): Make static.\n+\n 2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* parser.c (cp_parser_omp_clause_detach): New."}, {"sha": "a84ac32f09f67fdcf5aa0e8a28dd3a1489d21d51", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1,3 +1,10 @@\n+2021-01-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98476\n+\t* openmp.c (resolve_omp_clauses): Change use_device_ptr\n+\tto use_device_addr for unless type(c_ptr); check all\n+\tlist item for is_device_ptr.\n+\n 2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* dump-parse-tree.c (show_omp_clauses): Handle detach clause."}, {"sha": "910f643dce99c3d7d4d9b79c3a001951e591e674", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1,3 +1,7 @@\n+2021-01-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* de.po: Update.\n+\n 2020-11-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* zh_TW.po: Update."}, {"sha": "d57d718bb8031b8758087056d74437ac4cc114eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1,3 +1,135 @@\n+2021-01-19  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.dg/cpp/ucs.c: Expect Invalid warning for 2byte wchar.\n+\t* gcc.dg/debug/dwarf2/inline6.c: Remove skip AIX.\n+\t* gcc.dg/debug/dwarf2/lang-c11.c: Remove skip AIX.\n+\t* gcc.dg/debug/dwarf2/pr41445-7.c: Remove skip AIX.\n+\t* gcc.dg/debug/dwarf2/pr41445-8.c: Remove skip AIX.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-warn-20.c: Require 4byte wchar.\n+\n+2021-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98659\n+\t* g++.dg/template/deduce8.C: New test.\n+\n+2021-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98687\n+\t* g++.dg/lookup/using64.C: New test.\n+\t* g++.dg/lookup/using65.C: New test.\n+\n+2021-01-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/98664\n+\t* gcc.dg/Wvla-larger-than-4.c: Adjust expected output.\n+\t* gcc.dg/plugin/diagnostic-test-inlining-3.c: Same.\n+\t* g++.dg/warn/Wfree-nonheap-object-5.C: New test.\n+\t* gcc.dg/Wfree-nonheap-object-4.c: New test.\n+\n+2021-01-19  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/41437\n+\tPR c++/58993\n+\t* g++.dg/opt/pr87974.C: Adjust.\n+\t* g++.dg/template/access34.C: New test.\n+\t* g++.dg/template/friend68.C: New test.\n+\t* g++.dg/template/friend69.C: New test.\n+\n+2021-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98333\n+\t* g++.dg/cpp0x/noexcept62.C: New test.\n+\n+2021-01-19  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/pr88233.c: Update dg- stanzas.\n+\n+2021-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/arm-neon-ref.h\n+\t(CHECK_CUMULATIVE_SAT): Delete.\n+\t(CHECK_CUMULATIVE_SAT_NAMED): Likewise.  Deleted related\n+\tvariables.\n+\t* gcc.target/aarch64/advsimd-intrinsics/binary_sat_op.inc:\n+\tRemove uses of the above.\n+\t* gcc.target/aarch64/advsimd-intrinsics/unary_sat_op.inc:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqabs.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqadd.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlXl.inc: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlXl_lane.inc:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlXl_n.inc: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlal.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlal_lane.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlal_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlsl.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlsl_lane.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlsl_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmulh.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmulh_lane.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmulh_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmull.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmull_lane.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmull_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqmovn.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqmovun.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqneg.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmlXh.inc: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmlXh_lane.inc:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmlah.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmlah_lane.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmlsh.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmlsh_lane.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmulh.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmulh_lane.c:\n+\tLikewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrdmulh_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrshl.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrshrn_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqrshrun_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqshl.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqshl_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqshlu_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqshrn_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqshrun_n.c: Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqsub.c: Likewise.\n+\n+2021-01-19  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.dg/debug/dwarf2/dwarf-float.c: Force dwarf-4 generation\n+\tand update expected output.\n+\n+2021-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/98330\n+\t* g++.dg/pr98330.C: New testcase.\n+\t* gcc.dg/pr98330.c: Likewise.\n+\n+2021-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/97673\n+\t* gfortran.dg/pr97673.f90: New testcase.\n+\n+2021-01-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98476\n+\t* gfortran.dg/gomp/map-3.f90: Update expected scan-dump-tree.\n+\t* gfortran.dg/gomp/is_device_ptr-2.f90: New test.\n+\t* gfortran.dg/gomp/use_device_ptr-1.f90: New test.\n+\n+2021-01-19  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/98690\n+\t* g++.dg/ipa/pr98690.C: New test.\n+\n 2021-01-18  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/debug/dwarf2/pr41445-7.c: Fix expected output."}, {"sha": "caaea4bdd18e33c0c6e9b9133b9949c267239682", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f35a4f96373f352c30ba5edce2a3b47993d15491/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f35a4f96373f352c30ba5edce2a3b47993d15491/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=f35a4f96373f352c30ba5edce2a3b47993d15491", "patch": "@@ -1,3 +1,8 @@\n+2021-01-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98476\n+\t* testsuite/libgomp.fortran/is_device_ptr-1.f90: New test.\n+\n 2021-01-18  Andreas Schwab  <schwab@suse.de>\n \n \t* configure.tgt (riscv64*-*-linux*): Add linux to config_path."}]}