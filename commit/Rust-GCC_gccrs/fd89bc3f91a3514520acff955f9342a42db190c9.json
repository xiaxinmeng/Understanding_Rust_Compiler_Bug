{"sha": "fd89bc3f91a3514520acff955f9342a42db190c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ4OWJjM2Y5MWEzNTE0NTIwYWNmZjk1NWY5MzQyYTQyZGIxOTBjOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2006-09-05T07:05:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-09-05T07:05:08Z"}, "message": "20060905-1.c: New test.\n\n\t* gcc.c-torture/execute/20060905-1.c: New test.\n\nFrom-SVN: r116692", "tree": {"sha": "b564216eb0b41fa462286c32397c0c107fb8e0a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b564216eb0b41fa462286c32397c0c107fb8e0a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd89bc3f91a3514520acff955f9342a42db190c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd89bc3f91a3514520acff955f9342a42db190c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd89bc3f91a3514520acff955f9342a42db190c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd89bc3f91a3514520acff955f9342a42db190c9/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b887797b23016b8d9d19a8474623958720bf914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b887797b23016b8d9d19a8474623958720bf914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b887797b23016b8d9d19a8474623958720bf914"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "a2b7e9cd9c8b67ec06c7f54a1f7c8a7143fb695b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd89bc3f91a3514520acff955f9342a42db190c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd89bc3f91a3514520acff955f9342a42db190c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd89bc3f91a3514520acff955f9342a42db190c9", "patch": "@@ -1,3 +1,7 @@\n+2006-09-05  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/execute/20060905-1.c: New test.\n+\n 2006-09-05 Paul Thomas <pault@gcc.gnu.org>\n \n \tPR fortran/28908"}, {"sha": "eac884fe5f6c9e16dd15624c29a7c2b152390621", "filename": "gcc/testsuite/gcc.c-torture/execute/20060905-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd89bc3f91a3514520acff955f9342a42db190c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060905-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd89bc3f91a3514520acff955f9342a42db190c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060905-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060905-1.c?ref=fd89bc3f91a3514520acff955f9342a42db190c9", "patch": "@@ -0,0 +1,35 @@\n+/* PR rtl-optimization/28386 */\n+/* Origin: Volker Reichelt <reichelt@gcc.gnu.org> */\n+\n+extern void abort(void);\n+\n+volatile char s[256][3];\n+\n+char g;\n+\n+static void dummy(char a)\n+{\n+  g = a;\n+}\n+\n+static int foo(void)\n+{\n+  int i, j=0;\n+\n+  for (i = 0; i < 256; i++)\n+    if (i >= 128 && i < 256)\n+      {\n+\tdummy (s[i - 128][0]);\n+\t++j;\n+      }\n+\n+  return j;\n+}\n+\n+int main(void)\n+{\n+  if (foo () != 128)\n+    abort ();\n+\n+  return 0;\n+}"}]}