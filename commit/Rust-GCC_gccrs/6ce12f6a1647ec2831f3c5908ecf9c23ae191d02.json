{"sha": "6ce12f6a1647ec2831f3c5908ecf9c23ae191d02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNlMTJmNmExNjQ3ZWMyODMxZjNjNTkwOGVjZjljMjNhZTE5MWQwMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-03T21:43:17Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-03T21:43:17Z"}, "message": "Allow targets to pick a vector prefix other than \"V\"\n\nOriginally the SVE port used the names for 256-bit vectors, as the\nnext available increment after Advanced SIMD.  However, that was\nalways a bit of a hack and is bound to confuse people new to the code.\n\nNothing actually requires vector modes to have names of the form\nV<nunits><mode>, and after talking it over with the AArch64 maintainers,\nwe agreed to switch to things like:\n\n    VNx16QI\n\ninstead.  This patch lets targets pick this kind of prefix.\n\n2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* machmode.def (VECTOR_MODES_WITH_PREFIX): Document.\n\t* genmodes.c (VECTOR_MODES_WITH_PREFIX): New macro.\n\t(VECTOR_MODES): Use it.\n\t(make_vector_modes): Take the prefix as an argument.\n\nFrom-SVN: r256203", "tree": {"sha": "8c22889b700a21e7d4fe8da29c0d38b16c371d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c22889b700a21e7d4fe8da29c0d38b16c371d2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02/comments", "author": null, "committer": null, "parents": [{"sha": "5c0caeb37ff72cfd9153e164e9fd9eec7d56e969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0caeb37ff72cfd9153e164e9fd9eec7d56e969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c0caeb37ff72cfd9153e164e9fd9eec7d56e969"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "29154ccb5ffc490bd468623952bf27c313e69ff3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ce12f6a1647ec2831f3c5908ecf9c23ae191d02", "patch": "@@ -1,3 +1,10 @@\n+2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* machmode.def (VECTOR_MODES_WITH_PREFIX): Document.\n+\t* genmodes.c (VECTOR_MODES_WITH_PREFIX): New macro.\n+\t(VECTOR_MODES): Use it.\n+\t(make_vector_modes): Take the prefix as an argument.\n+\n 2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "7d58865ca96e5a5b7ec392e9cdae97c4d252c734", "filename": "gcc/genmodes.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02/gcc%2Fgenmodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02/gcc%2Fgenmodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmodes.c?ref=6ce12f6a1647ec2831f3c5908ecf9c23ae191d02", "patch": "@@ -483,9 +483,11 @@ make_complex_modes (enum mode_class cl,\n \n /* For all modes in class CL, construct vector modes of width\n    WIDTH, having as many components as necessary.  */\n-#define VECTOR_MODES(C, W) make_vector_modes (MODE_##C, W, __FILE__, __LINE__)\n+#define VECTOR_MODES_WITH_PREFIX(PREFIX, C, W) \\\n+  make_vector_modes (MODE_##C, #PREFIX, W, __FILE__, __LINE__)\n+#define VECTOR_MODES(C, W) VECTOR_MODES_WITH_PREFIX (V, C, W)\n static void ATTRIBUTE_UNUSED\n-make_vector_modes (enum mode_class cl, unsigned int width,\n+make_vector_modes (enum mode_class cl, const char *prefix, unsigned int width,\n \t\t   const char *file, unsigned int line)\n {\n   struct mode_data *m;\n@@ -516,8 +518,8 @@ make_vector_modes (enum mode_class cl, unsigned int width,\n       if (cl == MODE_INT && m->precision == 1)\n \tcontinue;\n \n-      if ((size_t)snprintf (buf, sizeof buf, \"V%u%s\", ncomponents, m->name)\n-\t  >= sizeof buf)\n+      if ((size_t) snprintf (buf, sizeof buf, \"%s%u%s\", prefix,\n+\t\t\t     ncomponents, m->name) >= sizeof buf)\n \t{\n \t  error (\"%s:%d: mode name \\\"%s\\\" is too long\",\n \t\t m->file, m->line, m->name);"}, {"sha": "c9d17f1300eee69e38de0c2d112f032943329773", "filename": "gcc/machmode.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02/gcc%2Fmachmode.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce12f6a1647ec2831f3c5908ecf9c23ae191d02/gcc%2Fmachmode.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.def?ref=6ce12f6a1647ec2831f3c5908ecf9c23ae191d02", "patch": "@@ -142,6 +142,10 @@ along with GCC; see the file COPYING3.  If not see\n \tthan two bytes (if CLASS is FLOAT).  CLASS must be INT or\n \tFLOAT.  The names follow the same rule as VECTOR_MODE uses.\n \n+     VECTOR_MODES_WITH_PREFIX (PREFIX, CLASS, WIDTH);\n+\tLike VECTOR_MODES, but start the mode names with PREFIX instead\n+\tof the usual \"V\".\n+\n      VECTOR_BOOL_MODE (NAME, COUNT, BYTESIZE)\n         Create a vector mode called NAME that contains COUNT boolean\n         elements and occupies BYTESIZE bytes in total.  Each boolean"}]}