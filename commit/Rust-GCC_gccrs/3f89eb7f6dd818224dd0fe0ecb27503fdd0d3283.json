{"sha": "3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y4OWViN2Y2ZGQ4MTgyMjRkZDBmZTBlY2IyNzUwM2ZkZDBkMzI4Mw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2018-05-22T13:27:14Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-22T13:27:14Z"}, "message": "[Ada] Missing warning for unreferenced formals in expression functions\n\nThis patch fixes an issue whereby the compiler failed to properly warn against\nunreferenced formal parameters when analyzing expression functions.\n\n2018-05-22  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb (Analyze_Expression_Function): Propagate flags from the\n\toriginal function spec into the generated function spec due to\n\texpansion of expression functions during analysis.\n\t(Analyze_Subprogram_Body_Helper): Modify check on formal parameter\n\treferences from the body to the subprogram spec in the case of\n\texpression functions because of inconsistances related to having a\n\tgenerated body.\n\t* libgnarl/s-osinte__android.ads: Flag parameters as unused.\n\t* libgnarl/s-osinte__lynxos178e.ads: Likewise.\n\t* libgnarl/s-osinte__qnx.adb: Likewise.\n\t* libgnarl/s-osinte__qnx.ads: Likewise.\n\ngcc/testsuite/\n\n\t* gnat.dg/warn14.adb: New testcase.\n\nFrom-SVN: r260535", "tree": {"sha": "5c8f65bbe8979fa3f43824dd2b1a7c4386a32d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c8f65bbe8979fa3f43824dd2b1a7c4386a32d61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "143a4acd3b7005718e2501f30ecc32018032d854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143a4acd3b7005718e2501f30ecc32018032d854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143a4acd3b7005718e2501f30ecc32018032d854"}], "stats": {"total": 150, "additions": 130, "deletions": 20}, "files": [{"sha": "11a74a74a167d41857d8684983baa867f47e7bbb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -1,3 +1,17 @@\n+2018-05-22  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function): Propagate flags from the\n+\toriginal function spec into the generated function spec due to\n+\texpansion of expression functions during analysis.\n+\t(Analyze_Subprogram_Body_Helper): Modify check on formal parameter\n+\treferences from the body to the subprogram spec in the case of\n+\texpression functions because of inconsistances related to having a\n+\tgenerated body.\n+\t* libgnarl/s-osinte__android.ads: Flag parameters as unused.\n+\t* libgnarl/s-osinte__lynxos178e.ads: Likewise.\n+\t* libgnarl/s-osinte__qnx.adb: Likewise.\n+\t* libgnarl/s-osinte__qnx.ads: Likewise.\n+\n 2018-05-22  Doug Rupp  <rupp@adacore.com>\n \n \t* init.c (HAVE_ADJUST_CONTEXT_FOR_RAISE): Don't define on VxWorks7 for"}, {"sha": "98257172fe6f5df2ae0ace53ab9503215deee2da", "filename": "gcc/ada/libgnarl/s-osinte__android.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__android.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__android.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__android.ads?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -313,7 +313,7 @@ package System.OS_Interface is\n    Stack_Base_Available : constant Boolean := False;\n    --  Indicates whether the stack base is available on this target\n \n-   function Get_Stack_Base (thread : pthread_t)\n+   function Get_Stack_Base (ignored_thread : pthread_t)\n      return Address is (Null_Address);\n    --  This is a dummy procedure to share some GNULLI files\n \n@@ -425,12 +425,12 @@ package System.OS_Interface is\n    PTHREAD_PRIO_INHERIT : constant := 1;\n \n    function pthread_mutexattr_setprotocol\n-     (attr     : access pthread_mutexattr_t;\n-      protocol : int) return int is (0);\n+     (ignored_attr     : access pthread_mutexattr_t;\n+      ignored_protocol : int) return int is (0);\n \n    function pthread_mutexattr_setprioceiling\n-     (attr        : access pthread_mutexattr_t;\n-      prioceiling : int) return int is (0);\n+     (ignored_attr        : access pthread_mutexattr_t;\n+      ignored_prioceiling : int) return int is (0);\n \n    type struct_sched_param is record\n       sched_priority : int;  --  scheduling priority"}, {"sha": "20d983cabd7257f9ec87d26b21a342a6123901f9", "filename": "gcc/ada/libgnarl/s-osinte__lynxos178e.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__lynxos178e.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__lynxos178e.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__lynxos178e.ads?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -453,8 +453,8 @@ package System.OS_Interface is\n    pragma Import (C, pthread_setschedparam, \"pthread_setschedparam\");\n \n    function pthread_attr_setscope\n-     (attr            : access pthread_attr_t;\n-      contentionscope : int) return int is (0);\n+     (Unused_attr            : access pthread_attr_t;\n+      Unused_contentionscope : int) return int is (0);\n    --  pthread_attr_setscope is not implemented in production mode\n \n    function pthread_attr_setinheritsched"}, {"sha": "acff8a710dacf7d69547aaa609dc2e580c609a44", "filename": "gcc/ada/libgnarl/s-osinte__qnx.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.adb?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -42,13 +42,25 @@ pragma Polling (Off);\n with Interfaces.C; use Interfaces.C;\n package body System.OS_Interface is\n \n+   -----------------\n+   -- sigaltstack --\n+   -----------------\n+\n+   function sigaltstack\n+     (ss  : not null access stack_t;\n+      oss : access stack_t) return int\n+   is\n+      pragma Unreferenced (ss, oss);\n+   begin\n+      return 0;\n+   end sigaltstack;\n+\n    --------------------\n    -- Get_Stack_Base --\n    --------------------\n \n    function Get_Stack_Base (thread : pthread_t) return Address is\n-      pragma Warnings (Off, thread);\n-\n+      pragma Unreferenced (thread);\n    begin\n       return Null_Address;\n    end Get_Stack_Base;"}, {"sha": "36655a92b9ba540ee81f91201f08a5e21335352c", "filename": "gcc/ada/libgnarl/s-osinte__qnx.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -301,7 +301,7 @@ package System.OS_Interface is\n    function sigaltstack\n      (ss  : not null access stack_t;\n       oss : access stack_t) return int\n-   is (0);\n+     with Inline;\n    --  Not supported on QNX\n \n    Alternate_Stack : aliased System.Address;\n@@ -315,7 +315,7 @@ package System.OS_Interface is\n    --  Indicates whether the stack base is available on this target\n \n    function Get_Stack_Base (thread : pthread_t) return System.Address\n-     with Inline_Always;\n+     with Inline;\n    --  This is a dummy procedure to share some GNULLI files\n \n    function Get_Page_Size return int;"}, {"sha": "1b31048f11d4b6bea437b56e29d72adcea3f5372", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 56, "deletions": 9, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -490,8 +490,8 @@ package body Sem_Ch6 is\n       Orig_N   : Node_Id;\n       Ret      : Node_Id;\n \n-      Def_Id   : Entity_Id := Empty;\n-      Prev     : Entity_Id;\n+      Def_Id : Entity_Id := Empty;\n+      Prev   : Entity_Id;\n       --  If the expression is a completion, Prev is the entity whose\n       --  declaration is completed. Def_Id is needed to analyze the spec.\n \n@@ -783,11 +783,44 @@ package body Sem_Ch6 is\n             Related_Nod => Original_Node (N));\n       end if;\n \n-      --  If the return expression is a static constant, we suppress warning\n-      --  messages on unused formals, which in most cases will be noise.\n+      --  We must enforce checks for unreferenced formals in our newly\n+      --  generated function, so we propagate the referenced flag from the\n+      --  original spec to the new spec as well as setting Comes_From_Source.\n+\n+      if Present (Parameter_Specifications (New_Spec)) then\n+         declare\n+            Form_New_Def  : Entity_Id;\n+            Form_New_Spec : Entity_Id;\n+            Form_Old_Def  : Entity_Id;\n+            Form_Old_Spec : Entity_Id;\n+         begin\n+\n+            Form_New_Spec := First (Parameter_Specifications (New_Spec));\n+            Form_Old_Spec := First (Parameter_Specifications (Spec));\n+\n+            while Present (Form_New_Spec) and then Present (Form_Old_Spec) loop\n+               Form_New_Def := Defining_Identifier (Form_New_Spec);\n+               Form_Old_Def := Defining_Identifier (Form_Old_Spec);\n+\n+               Set_Comes_From_Source (Form_New_Def, True);\n+\n+               --  Because of the usefulness of unreferenced controlling\n+               --  formals we exempt them from unreferenced warnings by marking\n+               --  them as always referenced.\n+\n+               Set_Referenced\n+                 (Form_Old_Def,\n+                  (Is_Formal (Form_Old_Def)\n+                     and then Is_Controlling_Formal (Form_Old_Def))\n+                   or else Referenced (Form_Old_Def));\n+                   --  or else Is_Dispatching_Operation\n+                   --          (Corresponding_Spec (New_Body)));\n \n-      Set_Is_Trivial_Subprogram\n-        (Defining_Entity (New_Body), Is_OK_Static_Expression (Expr));\n+               Next (Form_New_Spec);\n+               Next (Form_Old_Spec);\n+            end loop;\n+         end;\n+      end if;\n    end Analyze_Expression_Function;\n \n    ----------------------------------------\n@@ -3906,7 +3939,13 @@ package body Sem_Ch6 is\n             end if;\n          end if;\n \n-         if Spec_Id /= Body_Id then\n+         --  In the case we are dealing with an expression function we check\n+         --  the formals attached to the spec instead of the body - so we don't\n+         --  reference body formals.\n+\n+         if Spec_Id /= Body_Id\n+           and then not Is_Expression_Function (Spec_Id)\n+         then\n             Reference_Body_Formals (Spec_Id, Body_Id);\n          end if;\n \n@@ -4617,9 +4656,17 @@ package body Sem_Ch6 is\n             end loop;\n          end if;\n \n-         --  Check references in body\n+         --  Check references of the subprogram spec when we are dealing with\n+         --  an expression function due to it having a generated body.\n+         --  Otherwise, we simply check the formals of the subprogram body.\n \n-         Check_References (Body_Id);\n+         if Present (Spec_Id)\n+           and then Is_Expression_Function (Spec_Id)\n+         then\n+            Check_References (Spec_Id);\n+         else\n+            Check_References (Body_Id);\n+         end if;\n       end;\n \n       --  Check for nested subprogram, and mark outer level subprogram if so"}, {"sha": "00ef526f8c91959b1d8c058e5ed18da806ff5da1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -1,3 +1,7 @@\n+2018-05-22  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/warn14.adb: New testcase.\n+\n 2018-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/controlled8.adb: New testcase."}, {"sha": "d7fbecebce3b0f66e06655026adeeea6409d331e", "filename": "gcc/testsuite/gnat.dg/warn14.adb", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn14.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn14.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn14.adb?ref=3f89eb7f6dd818224dd0fe0ecb27503fdd0d3283", "patch": "@@ -0,0 +1,33 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatwa\" }\n+\n+procedure Warn14 is\n+\n+  type E is record\n+    P : Boolean;\n+  end record;\n+\n+  EE : Boolean := True; --  { dg-warning \"variable \\\"EE\\\" is not referenced\" }\n+\n+  function F1 (I : Natural) return Natural is --  { dg-warning \"function \\\"F1\\\" is not referenced\" }\n+  begin\n+    return I;\n+  end;\n+\n+  function F2 (I : Natural) return Natural is (I); --  { dg-warning \"function \\\"F2\\\" is not referenced\" }\n+\n+  function F3 (I : Natural) return Natural is (1); --  { dg-warning \"function \\\"F3\\\" is not referenced|formal parameter \\\"I\\\" is not referenced\" }\n+\n+  function F7 (EE : E) return Boolean is (EE.P); --  { dg-warning \"function \\\"F7\\\" is not referenced\" }\n+\n+  package YY is\n+    type XX is tagged null record;\n+\n+    function F4 (Y : XX; U : Boolean) return Natural is (1); --  { dg-warning \"formal parameter \\\"U\\\" is not referenced\" }\n+  end YY;\n+\n+  XXX : YY.XX;\n+  B : Natural := XXX.F4 (True); --  { dg-warning \"variable \\\"B\\\" is not referenced\" }\n+begin\n+  null;\n+end;"}]}