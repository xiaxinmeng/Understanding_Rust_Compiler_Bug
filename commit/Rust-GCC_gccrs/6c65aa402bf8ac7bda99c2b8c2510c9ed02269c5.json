{"sha": "6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2NWFhNDAyYmY4YWM3YmRhOTljMmI4YzI1MTBjOWVkMDIyNjljNQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2006-10-07T16:35:11Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2006-10-07T16:35:11Z"}, "message": "re PR target/29300 (FAIL: gcc.dg/pthread-init-[12].c (test for excess errors))\n\n\tPR target/29300\n\t* inclhack.def (hpux_pthread_initializers): New hack.\n\t* tests/base/sys/pthread.h: New file.\n\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r117537", "tree": {"sha": "d9a1e4e898c98fe587672ec11a57e3eeba05e2ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9a1e4e898c98fe587672ec11a57e3eeba05e2ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/comments", "author": null, "committer": null, "parents": [{"sha": "32a126b2fb8233c0b2be5506f7b913b52e88621c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32a126b2fb8233c0b2be5506f7b913b52e88621c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32a126b2fb8233c0b2be5506f7b913b52e88621c"}], "stats": {"total": 125, "additions": 121, "deletions": 4}, "files": [{"sha": "d91b1224f32609b21e8f4e056515d34530142262", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "patch": "@@ -1,3 +1,11 @@\n+2006-10-07  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/29300\n+\t* inclhack.def (hpux_pthread_initializers): New hack.\n+\t* tests/base/sys/pthread.h: New file.\n+\n+\t* fixincl.x: Regenerate.\n+\n 2006-10-03  Uros Bizjak <uros@kss-loka.si>\n \n \t* inclhack.def (glibc_mutex_init): Also fix"}, {"sha": "3c1716f79ced4037c9a41a64e7eb41f6338c2363", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 50, "deletions": 4, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Tuesday October  3, 2006 at 07:43:53 AM CEST\n+ * It has been AutoGen-ed  Saturday October  7, 2006 at 12:32:06 PM EDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Oct  3 07:43:53 CEST 2006\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Sat Oct  7 12:32:07 EDT 2006\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 200 fixup descriptions.\n+ * This file contains 201 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -3079,6 +3079,46 @@ extern \\\"C\\\" {\\n\\\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux_Pthread_Initializers fix\n+ */\n+tSCC zHpux_Pthread_InitializersName[] =\n+     \"hpux_pthread_initializers\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux_Pthread_InitializersList[] =\n+  \"|sys/pthread.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzHpux_Pthread_InitializersMachs[] = {\n+        \"*-hp-hpux11.[0-3]*\",\n+        (const char*)NULL };\n+#define HPUX_PTHREAD_INITIALIZERS_TEST_CT  0\n+#define aHpux_Pthread_InitializersTests   (tTestDesc*)NULL\n+\n+/*\n+ *  Fix Command Arguments for Hpux_Pthread_Initializers\n+ */\n+static const char* apzHpux_Pthread_InitializersPatch[] = { \"sed\",\n+    \"-e\", \"s@^[ \\t]*1, 1, 1, 1,[ \\t]*\\\\\\\\@\\t{ 1, 1, 1, 1 },\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\",\n+    \"-e\", \"s@^[ \\t]*1,[ \\t]*\\\\\\\\@\\t{ 1, 0 }@\",\n+    \"-e\", \"/^[ \\t]*0$/d\",\n+    \"-e\", \"s@__PTHREAD_MUTEX_VALID, 0@{ __PTHREAD_MUTEX_VALID, 0 }@\",\n+    \"-e\", \"s@^[ \\t]*0, 0, -1, 0,[ \\t]*\\\\\\\\@\\t{ 0, 0, -1, 0 },\\t\\t\\t\\t\\t\\t\\\\\\\\@\",\n+    \"-e\", \"s@0, __LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\@{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\",\n+    \"-e\", \"s@^[ \\t]*__LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\@\\t{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\",\n+    \"-e\", \"s@^[ \\t]*0, 0[ \\t]*\\\\\\\\@\\t{ 0, 0 }\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\",\n+    \"-e\", \"s@__PTHREAD_COND_VALID, 0@{ __PTHREAD_COND_VALID, 0 }@\",\n+    \"-e\", \"s@__LWP_COND_VALID, 0,[ \\t]*\\\\\\\\@{ __LWP_COND_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\",\n+    \"-e\", \"s@__PTHREAD_RWLOCK_VALID, 0@{ __PTHREAD_RWLOCK_VALID, 0 }@\",\n+    \"-e\", \"s@__LWP_RWLOCK_VALID, 0,[ \\t]*\\\\\\\\@{ __LWP_RWLOCK_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\",\n+    \"-e\", \"s@^[ \\t]*0, 0, 0, 0, 0, 0, 0[ \\t]*\\\\\\\\@\\t{ 0, 0, 0, 0, 0 }, { 0, 0}\\t\\t\\t\\t\\t\\\\\\\\@\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Huge_Val_Hex fix\n@@ -8145,7 +8185,7 @@ static const char* apzX11_SprintfPatch[] = {\n  */\n #define REGEX_COUNT          243\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            200\n+#define FIX_COUNT            201\n \n /*\n  *  Enumerate the fixes\n@@ -8223,6 +8263,7 @@ typedef enum {\n     HPUX_SYSTIME_FIXIDX,\n     HPUX_SPU_INFO_FIXIDX,\n     HPUX_EXTERN_ERRNO_FIXIDX,\n+    HPUX_PTHREAD_INITIALIZERS_FIXIDX,\n     HUGE_VAL_HEX_FIXIDX,\n     HUGE_VALF_HEX_FIXIDX,\n     HUGE_VALL_HEX_FIXIDX,\n@@ -8714,6 +8755,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX_EXTERN_ERRNO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux_Extern_ErrnoTests,   apzHpux_Extern_ErrnoPatch, 0 },\n \n+  {  zHpux_Pthread_InitializersName,    zHpux_Pthread_InitializersList,\n+     apzHpux_Pthread_InitializersMachs,\n+     HPUX_PTHREAD_INITIALIZERS_TEST_CT, FD_MACH_ONLY,\n+     aHpux_Pthread_InitializersTests,   apzHpux_Pthread_InitializersPatch, 0 },\n+\n   {  zHuge_Val_HexName,    zHuge_Val_HexList,\n      apzHuge_Val_HexMachs,\n      HUGE_VAL_HEX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "015391594f9b4ef24693b6b4066d5c4364ebd666", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "patch": "@@ -1790,6 +1790,47 @@ fix = {\n     test_text = \"   extern int errno;\\n\";\n };\n \n+/*\n+ *  Add missing braces to pthread initializer defines.\n+ */\n+fix = {\n+    hackname  = hpux_pthread_initializers;\n+    mach      = \"*-hp-hpux11.[0-3]*\";\n+    files     = sys/pthread.h;\n+    sed       = \"s@^[ \\t]*1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 1, 1, 1, 1 },\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*1,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 1, 0 }@\";\n+    sed       = \"/^[ \\t]*0$/d\";\n+    sed       = \"s@__PTHREAD_MUTEX_VALID, 0\"\n+\t\t \"@{ __PTHREAD_MUTEX_VALID, 0 }@\";\n+    sed       = \"s@^[ \\t]*0, 0, -1, 0,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, 0, -1, 0 },\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@0, __LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n+\t\t \"@{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*__LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*0, 0[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, 0 }\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@__PTHREAD_COND_VALID, 0\"\n+\t\t \"@{ __PTHREAD_COND_VALID, 0 }@\";\n+    sed       = \"s@__LWP_COND_VALID, 0,[ \\t]*\\\\\\\\\"\n+\t\t \"@{ __LWP_COND_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@__PTHREAD_RWLOCK_VALID, 0\"\n+\t\t \"@{ __PTHREAD_RWLOCK_VALID, 0 }@\";\n+    sed       = \"s@__LWP_RWLOCK_VALID, 0,[ \\t]*\\\\\\\\\"\n+\t\t \"@{ __LWP_RWLOCK_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*0, 0, 0, 0, 0, 0, 0[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, 0, 0, 0, 0 }, { 0, 0}\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    test_text = \"#define PTHREAD_MUTEX_INITIALIZER  {\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t__PTHREAD_MUTEX_VALID, 0,\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t(PTHREAD_MUTEX_DEFAULT | PTHREAD_PROCESS_PRIVATE),\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t__SPNLCK_INITIALIZER,\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t0, 0, -1, 0,\\t\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t0, __LWP_MTX_VALID, 0, 1, 1, 1, 1,\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t0, 0\\t\\t\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"}\\n\";\n+};\n \n /*\n  *  Fix glibc definition of HUGE_VAL in terms of hex floating point constant"}, {"sha": "9948288d92a81139a2beb45317d30149ed63f832", "filename": "fixincludes/tests/base/sys/pthread.h", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2Ftests%2Fbase%2Fsys%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5/fixincludes%2Ftests%2Fbase%2Fsys%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fpthread.h?ref=6c65aa402bf8ac7bda99c2b8c2510c9ed02269c5", "patch": "@@ -0,0 +1,22 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/sys/pthread.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( HPUX_PTHREAD_INITIALIZERS_CHECK )\n+#define PTHREAD_MUTEX_INITIALIZER  {\t\t\t\t\t\\\n+\t{ __PTHREAD_MUTEX_VALID, 0 },\t\t\t\t\t\\\n+\t(PTHREAD_MUTEX_DEFAULT | PTHREAD_PROCESS_PRIVATE),\t\t\\\n+\t__SPNLCK_INITIALIZER,\t\t\t\t\t\t\\\n+\t{ 0, 0, -1, 0 },\t\t\t\t\t\t\\\n+\t{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\t\t\t\\\n+\t{ 0, 0 }\t\t\t\t\t\t\t\\\n+}\n+\n+#endif  /* HPUX_PTHREAD_INITIALIZERS_CHECK */"}]}