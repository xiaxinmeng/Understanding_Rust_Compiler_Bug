{"sha": "c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzllNjZlZGExYWE3NmI3N2Q5YTU2YmYwZDFiMTlhMTU3NmMzN2E2Mg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-05-18T19:03:26Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-18T19:03:26Z"}, "message": "Makefile.am: Remove references to types.m4.\n\n\t* Makefile.am: Remove references to types.m4.\n\t* m4/iparm.m4: Merge with types.m4.\n\t* m4/types.m4: Remove.\n\t* m4/cshift1.m4, m4/dotprod.m4, m4/dotprodc.m4, m4/dotprodl.m4,\n\tm4/eoshift1.m4, m4/eoshift3.m4, m4/iforeach.m4, m4/ifunction.m4,\n\tm4/in_pack.m4, m4/in_unpack.m4, m4/iparm.m4, m4/matmul.m4,\n\tm4/matmull.m4, m4/maxloc0.m4, m4/maxloc1.m4, m4/maxval.m4,\n\tm4/minloc0.m4, m4/minloc1.m4, m4/minval.m4, m4/reshape.m4,\n\tm4/shape.m4, m4/specific.m4, m4/specific2.m4, m4/transpose.m4):\n\tUpdate to use new iparm.m4.\n\t* generated/*.c: Regenerate.\n\nFrom-SVN: r82003", "tree": {"sha": "569bf2d4b68fde558de654650a2688d76b403819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/569bf2d4b68fde558de654650a2688d76b403819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/comments", "author": null, "committer": null, "parents": [{"sha": "b79634e3d89667ac3b67531df917974241702862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b79634e3d89667ac3b67531df917974241702862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b79634e3d89667ac3b67531df917974241702862"}], "stats": {"total": 444, "additions": 184, "deletions": 260}, "files": [{"sha": "60168066780d97eb46e5694c4bb50eea0c55b02c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -1,3 +1,17 @@\n+2004-05-18  Paul Brook  <paul@codesourcery.com>\n+\n+\t* Makefile.am: Remove references to types.m4.\n+\t* m4/iparm.m4: Merge with types.m4.\n+\t* m4/types.m4: Remove.\n+\t* m4/cshift1.m4, m4/dotprod.m4, m4/dotprodc.m4, m4/dotprodl.m4,\n+\tm4/eoshift1.m4, m4/eoshift3.m4, m4/iforeach.m4, m4/ifunction.m4,\n+\tm4/in_pack.m4, m4/in_unpack.m4, m4/iparm.m4, m4/matmul.m4,\n+\tm4/matmull.m4, m4/maxloc0.m4, m4/maxloc1.m4, m4/maxval.m4,\n+\tm4/minloc0.m4, m4/minloc1.m4, m4/minval.m4, m4/reshape.m4,\n+\tm4/shape.m4, m4/specific.m4, m4/specific2.m4, m4/transpose.m4):\n+\tUpdate to use new iparm.m4.\n+\t* generated/*.c: Regenerate.\n+\n 2004-05-18  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/15235"}, {"sha": "cf3382a38d9632f5f31f118024816e8628b6db68", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -222,7 +222,7 @@ i_set_exponent_c = \\\n generated/set_exponent_r4.c \\\n generated/set_exponent_r8.c\n \n-m4_files= m4/iparm.m4 m4/ifunction.m4 m4/iforeach.m4 m4/types.m4 m4/all.m4 \\\n+m4_files= m4/iparm.m4 m4/ifunction.m4 m4/iforeach.m4 m4/all.m4 \\\n     m4/any.m4 m4/count.m4 m4/maxloc0.m4 m4/maxloc1.m4 m4/maxval.m4 \\\n     m4/minloc0.m4 m4/minloc1.m4 m4/minval.m4 m4/product.m4 m4/sum.m4 \\\n     m4/dotprod.m4 m4/dotprodl.m4 m4/dotprodc.m4 m4/matmul.m4 m4/matmull.m4 \\\n@@ -351,7 +351,7 @@ EXTRA_libgfortran_la_SOURCES = $(gfor_cmath_src)\n libgfortran_la_LIBADD = @MATH_OBJ@\n libgfortran_la_DEPENDENCIES = @MATH_OBJ@\n \n-I_M4_DEPS=m4/iparm.m4 m4/types.m4\n+I_M4_DEPS=m4/iparm.m4\n I_M4_DEPS0=$(I_M4_DEPS) m4/iforeach.m4\n I_M4_DEPS1=$(I_M4_DEPS) m4/ifunction.m4\n "}, {"sha": "f2df3ec1e830e225207c79401fc47195b37c6652", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.8.2 from Makefile.am.\n+# Makefile.in generated by automake 1.8.5 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n@@ -55,7 +55,7 @@ am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = config.h\n CONFIG_CLEAN_FILES =\n-am__installdirs = $(DESTDIR)$(libdir)\n+am__installdirs = \"$(DESTDIR)$(libdir)\"\n libLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(lib_LTLIBRARIES)\n am__objects_1 = environ.lo error.lo main.lo memory.lo pause.lo stop.lo \\\n@@ -600,7 +600,7 @@ i_set_exponent_c = \\\n generated/set_exponent_r4.c \\\n generated/set_exponent_r8.c\n \n-m4_files = m4/iparm.m4 m4/ifunction.m4 m4/iforeach.m4 m4/types.m4 m4/all.m4 \\\n+m4_files = m4/iparm.m4 m4/ifunction.m4 m4/iforeach.m4 m4/all.m4 \\\n     m4/any.m4 m4/count.m4 m4/maxloc0.m4 m4/maxloc1.m4 m4/maxval.m4 \\\n     m4/minloc0.m4 m4/minloc1.m4 m4/minval.m4 m4/product.m4 m4/sum.m4 \\\n     m4/dotprod.m4 m4/dotprodl.m4 m4/dotprodc.m4 m4/matmul.m4 m4/matmull.m4 \\\n@@ -733,7 +733,7 @@ libgfortran_la_SOURCES = $(gfor_src) $(gfor_built_src) $(gfor_io_src) \\\n EXTRA_libgfortran_la_SOURCES = $(gfor_cmath_src)\n libgfortran_la_LIBADD = @MATH_OBJ@\n libgfortran_la_DEPENDENCIES = @MATH_OBJ@\n-I_M4_DEPS = m4/iparm.m4 m4/types.m4\n+I_M4_DEPS = m4/iparm.m4\n I_M4_DEPS0 = $(I_M4_DEPS) m4/iforeach.m4\n I_M4_DEPS1 = $(I_M4_DEPS) m4/ifunction.m4\n EXTRA_DIST = $(m4_files)\n@@ -794,28 +794,28 @@ distclean-hdr:\n \t-rm -f config.h stamp-h1\n install-libLTLIBRARIES: $(lib_LTLIBRARIES)\n \t@$(NORMAL_INSTALL)\n-\t$(mkdir_p) $(DESTDIR)$(libdir)\n+\ttest -z \"$(libdir)\" || $(mkdir_p) \"$(DESTDIR)$(libdir)\"\n \t@list='$(lib_LTLIBRARIES)'; for p in $$list; do \\\n \t  if test -f $$p; then \\\n \t    f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n-\t    echo \" $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f\"; \\\n-\t    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \\\n+\t    echo \" $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'\"; \\\n+\t    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) \"$$p\" \"$(DESTDIR)$(libdir)/$$f\"; \\\n \t  else :; fi; \\\n \tdone\n \n uninstall-libLTLIBRARIES:\n \t@$(NORMAL_UNINSTALL)\n \t@list='$(lib_LTLIBRARIES)'; for p in $$list; do \\\n \t    p=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n-\t  echo \" $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p\"; \\\n-\t  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \\\n+\t  echo \" $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'\"; \\\n+\t  $(LIBTOOL) --mode=uninstall rm -f \"$(DESTDIR)$(libdir)/$$p\"; \\\n \tdone\n \n clean-libLTLIBRARIES:\n \t-test -z \"$(lib_LTLIBRARIES)\" || rm -f $(lib_LTLIBRARIES)\n \t@list='$(lib_LTLIBRARIES)'; for p in $$list; do \\\n \t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n-\t  test \"$$dir\" = \"$$p\" && dir=.; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n@@ -5121,9 +5121,11 @@ TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \\\n \t  done | \\\n \t  $(AWK) '    { files[$$0] = 1; } \\\n \t       END { for (i in files) print i; }'`; \\\n-\ttest -z \"$(ETAGS_ARGS)$$tags$$unique\" \\\n-\t  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n-\t     $$tags $$unique\n+\tif test -z \"$(ETAGS_ARGS)$$tags$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t    $$tags $$unique; \\\n+\tfi\n ctags: CTAGS\n CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \\\n \t\t$(TAGS_FILES) $(LISP)\n@@ -5219,7 +5221,7 @@ distcheck: dist\n \t*.tar.Z*) \\\n \t  uncompress -c $(distdir).tar.Z | $(AMTAR) xf - ;;\\\n \t*.shar.gz*) \\\n-\t  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | unshar ;;\\\n+\t  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\\\n \t*.zip*) \\\n \t  unzip $(distdir).zip ;;\\\n \tesac\n@@ -5242,7 +5244,7 @@ distcheck: dist\n \t        distuninstallcheck \\\n \t  && chmod -R a-w \"$$dc_install_base\" \\\n \t  && ({ \\\n-\t       (cd ../.. && $(mkdir_p) \"$$dc_destdir\") \\\n+\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n \t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n \t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n \t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n@@ -5279,7 +5281,9 @@ check: $(BUILT_SOURCES)\n \t$(MAKE) $(AM_MAKEFLAGS) check-am\n all-am: Makefile $(LTLIBRARIES) config.h\n installdirs:\n-\t$(mkdir_p) $(DESTDIR)$(libdir)\n+\tfor dir in \"$(DESTDIR)$(libdir)\"; do \\\n+\t  test -z \"$$dir\" || $(mkdir_p) \"$$dir\"; \\\n+\tdone\n install: $(BUILT_SOURCES)\n \t$(MAKE) $(AM_MAKEFLAGS) install-am\n install-exec: install-exec-am"}, {"sha": "a6229c7dddb0d57e0513bde389c2cf54dff38238", "filename": "libgfortran/aclocal.m4", "status": "modified", "additions": 28, "deletions": 13, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Faclocal.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -1,4 +1,4 @@\n-# generated automatically by aclocal 1.8.2 -*- Autoconf -*-\n+# generated automatically by aclocal 1.8.5 -*- Autoconf -*-\n \n # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n # Free Software Foundation, Inc.\n@@ -40,7 +40,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version=\"1.8\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.8.2])])\n+\t [AM_AUTOMAKE_VERSION([1.8.5])])\n \n # AM_AUX_DIR_EXPAND\n \n@@ -149,7 +149,7 @@ AC_CONFIG_COMMANDS_PRE(\n Usually this means the macro was only invoked conditionally.])\n fi])])\n \n-# serial 6\t\t\t\t\t\t-*- Autoconf -*-\n+# serial 7\t\t\t\t\t\t-*- Autoconf -*-\n \n # Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n # Free Software Foundation, Inc.\n@@ -236,7 +236,9 @@ AC_CACHE_CHECK([dependency style of $depcc],\n     : > sub/conftest.c\n     for i in 1 2 3 4 5 6; do\n       echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n-      : > sub/conftst$i.h\n+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with\n+      # Solaris 8's {/usr,}/bin/sh.\n+      touch sub/conftst$i.h\n     done\n     echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n \n@@ -264,9 +266,14 @@ AC_CACHE_CHECK([dependency style of $depcc],\n        grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&\n        ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n       # icc doesn't choke on unknown options, it will just issue warnings\n-      # (even with -Werror).  So we grep stderr for any message\n-      # that says an option was ignored.\n-      if grep 'ignoring option' conftest.err >/dev/null 2>&1; then :; else\n+      # or remarks (even with -Werror).  So we grep stderr for any message\n+      # that says an option was ignored or not supported.\n+      # When given -MP, icc 7.0 and 7.1 complain thusly:\n+      #   icc: Command line warning: ignoring option '-M'; no argument required\n+      # The diagnosis changed in icc 8.0:\n+      #   icc: Command line remark: option '-MP' not supported\n+      if (grep 'ignoring option' conftest.err ||\n+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n         am_cv_$1_dependencies_compiler_type=$depmode\n         break\n       fi\n@@ -312,7 +319,7 @@ AC_SUBST([AMDEPBACKSLASH])\n \n # Generate code to set up dependency tracking.   -*- Autoconf -*-\n \n-# Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -351,14 +358,14 @@ AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],\n   grep '^DEP_FILES *= *[[^ @%:@]]' < \"$mf\" > /dev/null || continue\n   # Extract the definition of DEP_FILES from the Makefile without\n   # running `make'.\n-  DEPDIR=`sed -n -e '/^DEPDIR = / s///p' < \"$mf\"`\n+  DEPDIR=`sed -n 's/^DEPDIR = //p' < \"$mf\"`\n   test -z \"$DEPDIR\" && continue\n   # When using ansi2knr, U may be empty or an underscore; expand it\n-  U=`sed -n -e '/^U = / s///p' < \"$mf\"`\n+  U=`sed -n 's/^U = //p' < \"$mf\"`\n   test -d \"$dirpart/$DEPDIR\" || mkdir \"$dirpart/$DEPDIR\"\n   # We invoke sed twice because it is the simplest approach to\n   # changing $(DEPDIR) to its actual value in the expansion.\n-  for file in `sed -n -e '\n+  for file in `sed -n '\n     /^DEP_FILES = .*\\\\\\\\$/ {\n       s/^DEP_FILES = //\n       :loop\n@@ -781,8 +788,16 @@ fi\n #\n # Do not use -m 0755 and let people choose whatever they expect by\n # setting umask.\n+#\n+# We cannot accept any implementation of `mkdir' that recognizes `-p'.\n+# Some implementations (such as Solaris 8's) are not thread-safe: if a\n+# parallel make tries to run `mkdir -p a/b' and `mkdir -p a/c'\n+# concurrently, both version can detect that a/ is missing, but only\n+# one can create it and the other will error out.  Consequently we\n+# restrict ourselves to GNU make (using the --version option ensures\n+# this.)\n AC_DEFUN([AM_PROG_MKDIR_P],\n-[if mkdir -p -- . 2>/dev/null; then\n+[if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then\n   # Keeping the `.' argument allows $(mkdir_p) to be used without\n   # argument.  Indeed, we sometimes output rules like\n   #   $(mkdir_p) $(somedir)\n@@ -795,7 +810,7 @@ else\n   # recognize any option.  It will interpret all options as\n   # directories to create, and then abort because `.' already\n   # exists.\n-  for d in ./-p ./--;\n+  for d in ./-p ./--version;\n   do\n     test -d $d && rmdir $d\n   done"}, {"sha": "55b4d63a81b8f54882ee3dfa5bd532927b68a754", "filename": "libgfortran/configure", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -1509,7 +1509,7 @@ else\n echo \"$as_me: WARNING: \\`missing' script is too old or missing\" >&2;}\n fi\n \n-if mkdir -p -- . 2>/dev/null; then\n+if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then\n   # Keeping the `.' argument allows $(mkdir_p) to be used without\n   # argument.  Indeed, we sometimes output rules like\n   #   $(mkdir_p) $(somedir)\n@@ -1522,7 +1522,7 @@ else\n   # recognize any option.  It will interpret all options as\n   # directories to create, and then abort because `.' already\n   # exists.\n-  for d in ./-p ./--;\n+  for d in ./-p ./--version;\n   do\n     test -d $d && rmdir $d\n   done\n@@ -2819,7 +2819,9 @@ else\n     : > sub/conftest.c\n     for i in 1 2 3 4 5 6; do\n       echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n-      : > sub/conftst$i.h\n+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with\n+      # Solaris 8's {/usr,}/bin/sh.\n+      touch sub/conftst$i.h\n     done\n     echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n \n@@ -2847,9 +2849,14 @@ else\n        grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&\n        ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n       # icc doesn't choke on unknown options, it will just issue warnings\n-      # (even with -Werror).  So we grep stderr for any message\n-      # that says an option was ignored.\n-      if grep 'ignoring option' conftest.err >/dev/null 2>&1; then :; else\n+      # or remarks (even with -Werror).  So we grep stderr for any message\n+      # that says an option was ignored or not supported.\n+      # When given -MP, icc 7.0 and 7.1 complain thusly:\n+      #   icc: Command line warning: ignoring option '-M'; no argument required\n+      # The diagnosis changed in icc 8.0:\n+      #   icc: Command line remark: option '-MP' not supported\n+      if (grep 'ignoring option' conftest.err ||\n+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n         am_cv_CC_dependencies_compiler_type=$depmode\n         break\n       fi\n@@ -2980,7 +2987,7 @@ fi\n \n \n # Provide some information about the compiler.\n-echo \"$as_me:2983:\" \\\n+echo \"$as_me:2990:\" \\\n      \"checking for Fortran 77 compiler version\" >&5\n ac_compiler=`set X $ac_compile; echo $2`\n { (eval echo \"$as_me:$LINENO: \\\"$ac_compiler --version </dev/null >&5\\\"\") >&5\n@@ -5847,7 +5854,7 @@ darwin* | rhapsody*)\n   lt_cv_deplibs_check_method=pass_all\n   ;;\n \n-freebsd* )\n+freebsd* | kfreebsd*-gnu)\n   if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n     case $host_cpu in\n     i*86 )\n@@ -5915,7 +5922,7 @@ linux-gnu*)\n   lt_cv_file_magic_test_file=`echo /lib/libc.so* /lib/libc-*.so`\n   ;;\n \n-netbsd*)\n+netbsd* | knetbsd*-gnu)\n   if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n     lt_cv_deplibs_check_method='match_pattern /lib[^/\\.]+\\.so\\.[0-9]+\\.[0-9]+$'\n   else\n@@ -6306,7 +6313,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 6309 \"configure\"' > conftest.$ac_ext\n+  echo '#line 6316 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -8034,14 +8041,14 @@ echo X\"$mf\" |\n   grep '^DEP_FILES *= *[^ #]' < \"$mf\" > /dev/null || continue\n   # Extract the definition of DEP_FILES from the Makefile without\n   # running `make'.\n-  DEPDIR=`sed -n -e '/^DEPDIR = / s///p' < \"$mf\"`\n+  DEPDIR=`sed -n 's/^DEPDIR = //p' < \"$mf\"`\n   test -z \"$DEPDIR\" && continue\n   # When using ansi2knr, U may be empty or an underscore; expand it\n-  U=`sed -n -e '/^U = / s///p' < \"$mf\"`\n+  U=`sed -n 's/^U = //p' < \"$mf\"`\n   test -d \"$dirpart/$DEPDIR\" || mkdir \"$dirpart/$DEPDIR\"\n   # We invoke sed twice because it is the simplest approach to\n   # changing $(DEPDIR) to its actual value in the expansion.\n-  for file in `sed -n -e '\n+  for file in `sed -n '\n     /^DEP_FILES = .*\\\\\\\\$/ {\n       s/^DEP_FILES = //\n       :loop"}, {"sha": "3ad6a3d43f9754cc138af3c4145ada31c4da01c4", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __all_l4 (gfc_array_l4 * retarray, gfc_array_l4 *array, index_type *pdim)\n {"}, {"sha": "a407a65011bd6c353c32e6ee549af7f73ec5ca5e", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __all_l8 (gfc_array_l8 * retarray, gfc_array_l8 *array, index_type *pdim)\n {"}, {"sha": "0d79ce72e308358c92395cbc923bee39ba9def3a", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __any_l4 (gfc_array_l4 * retarray, gfc_array_l4 *array, index_type *pdim)\n {"}, {"sha": "e6ac3f5919d5080b26e13491156c1a1924e84f81", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __any_l8 (gfc_array_l8 * retarray, gfc_array_l8 *array, index_type *pdim)\n {"}, {"sha": "f3087e45442596beffa3740f1047d6e38e0bdae0", "filename": "libgfortran/generated/count_4_l4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_4_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_4_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __count_4_l4 (gfc_array_i4 * retarray, gfc_array_l4 *array, index_type *pdim)\n {"}, {"sha": "92c1b2f76a3f66a2bc190311a1389b0c36dfbcc2", "filename": "libgfortran/generated/count_4_l8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_4_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_4_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __count_4_l8 (gfc_array_i4 * retarray, gfc_array_l8 *array, index_type *pdim)\n {"}, {"sha": "4944eb2cfd318b809fb03d55d558e1da0ab0929b", "filename": "libgfortran/generated/count_8_l4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_8_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_8_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __count_8_l4 (gfc_array_i8 * retarray, gfc_array_l4 *array, index_type *pdim)\n {"}, {"sha": "7d7f4b5c032bccc7b38cfe0784d284b780636590", "filename": "libgfortran/generated/count_8_l8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_8_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fcount_8_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __count_8_l8 (gfc_array_i8 * retarray, gfc_array_l8 *array, index_type *pdim)\n {"}, {"sha": "95b3a2308e28ca6ed1f64e777d4f851c3c1e8377", "filename": "libgfortran/generated/in_pack_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fin_pack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fin_pack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n /* Allocates a block of memory with internal_malloc if the array needs\n    repacking.  */\n "}, {"sha": "b9b02899e087ed8f0925a6e1305fde6328b6542c", "filename": "libgfortran/generated/in_pack_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fin_pack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fin_pack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n /* Allocates a block of memory with internal_malloc if the array needs\n    repacking.  */\n "}, {"sha": "b55da1f614f382debcc6c44a073311b43a3218fa", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n {"}, {"sha": "36c0ef59705c7a7a91ec5627d84fd0eabb0fb879", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n {"}, {"sha": "40f58cc3340b76f2a9a6fc047481c263717eecfc", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n {"}, {"sha": "ebb6020158628dbf3f0f2c2e71c50875b92e43a3", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n {"}, {"sha": "335a3290604fbbbed18dcc1b567f8b381f8ff004", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n {"}, {"sha": "5bee14af5d32699e89479526a9a756c0679e33e0", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n {"}, {"sha": "7839e51249c27b5420df23d78ab85b084504e2c5", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n {"}, {"sha": "088d89c177e7b653409b17875e681d413bb43fab", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __maxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n {"}, {"sha": "dff8627c974a9b4d6aa555c736f257f5a10d5ee9", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "dbb3cd0a7872591e8a06df7ec95d6fb706862fec", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "d44c556eea615999040d8a930fdce79a705d6dff", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "4fe00d60f230de4bd8473e24be871d7f478295c0", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "794c6f6936f4c7f413eef416ce9e44c417f9431e", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "f755afb90d97d7fde6f7e8f4aa193ccd054475cc", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "8e26f1c35498346be6e63a8604a1291ff851d960", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "5955f198979d4e72d22bb2b468ad73b9e462b780", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "d130156b57d52c33235db8f720b1bacebb7bb843", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxval_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "3645346286a619a34ed25a432a91e06c369ca03d", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxval_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "6e82ad68dfb09e80a5564761788047d1afb0bd9e", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxval_r4 (gfc_array_r4 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "34359d619849eae4e139235cae769fc035b07e11", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __maxval_r8 (gfc_array_r8 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "c12eea0261deda0bbd1d893cf5917013eaeaad63", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n {"}, {"sha": "94842a3704e3499428eecd8cb126e90341f00cf5", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n {"}, {"sha": "9ed52c32718d70e739b0f4cc46f8a89e3e740b0a", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n {"}, {"sha": "186b49382b67ff57953ba03ede95b07154b3dede", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n {"}, {"sha": "962ee836255fac224329d2ae276efc82e1c0d1d2", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n {"}, {"sha": "e13a4280d0b041a35cf3db076dbdc0dca99ea756", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n {"}, {"sha": "cb9ade8db180a9f78979b0fa57b6d59fd4823e4b", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n {"}, {"sha": "cf19f44fbb25473da45cf4c70c2385149b8055a7", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"libgfortran.h\"\n \n \n-\n void\n __minloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n {"}, {"sha": "7cd7dd1a2dd166923d9c1c4d78066c0d4cf8f3ca", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "bbbb02fc7f3bcc4b5a0b3230acfdac1995ef9831", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "e59427bd184ccf9fb8929a1795efdf520c6e7765", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "77b3fabeb7c65b2621e6b1a0e5a14b8be480768a", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "1e1c0e1593f432fb7945acefcf07f252c3de0d83", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "6b7d5267deb8d4aba8b63cd8c0cd79ecf870d82b", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "4d088a160f341ef88b934c2edea2c8a5864b5b4f", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "66a1c120749ee0406547e9ee7bc517f98cce3dbc", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n #include <limits.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "70f9b981dfe75187957f1f6d3f44ea80c6962464", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minval_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "bfac7bad5ff3f7af2ff6f86d329dfdf95fb02ec6", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minval_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "0dd156b58161ccf14236e4ae3d5ae6b876b695af", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minval_r4 (gfc_array_r4 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "99cd6873d27fcabcb027a89c5d9f9922a59f3c46", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #include <float.h>\n #include \"libgfortran.h\"\n \n-\n void\n __minval_r8 (gfc_array_r8 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "e4df38bebf27ef01297ef7c1c95d31984d048714", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __product_c4 (gfc_array_c4 * retarray, gfc_array_c4 *array, index_type *pdim)\n {"}, {"sha": "427043751ae66ed1d697b7b840229765c6ad3566", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __product_c8 (gfc_array_c8 * retarray, gfc_array_c8 *array, index_type *pdim)\n {"}, {"sha": "b8fb8793143a6da8def0bf4dd0d87d4bf52076af", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __product_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "210e61792c792989b8e2437bb57ccf36f60f9dca", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __product_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "c615bbd33da936e4cb01b1029c26bf3fcdc5c4b5", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __product_r4 (gfc_array_r4 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "4d12052be860b89bdbafd1209aaf2fd73e4991e1", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __product_r8 (gfc_array_r8 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "91c4e84bf9b193e8cbd224f68b0fb586daa00439", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __sum_c4 (gfc_array_c4 * retarray, gfc_array_c4 *array, index_type *pdim)\n {"}, {"sha": "4ab3e5e36d80bf9ed78b803bb5741a019c1a78bb", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __sum_c8 (gfc_array_c8 * retarray, gfc_array_c8 *array, index_type *pdim)\n {"}, {"sha": "2d737a1f661cbdb5156f4a957f28afb228d64d4c", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __sum_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array, index_type *pdim)\n {"}, {"sha": "42dfd9f38d627b5cd9805d0f18ae52122622b69f", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __sum_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array, index_type *pdim)\n {"}, {"sha": "293b30edb43edf955b5373e337fad506df5bc02d", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __sum_r4 (gfc_array_r4 * retarray, gfc_array_r4 *array, index_type *pdim)\n {"}, {"sha": "294c7980ff7fec11cfd7ac11bce92c7be499e24b", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include \"libgfortran.h\"\n \n-\n void\n __sum_r8 (gfc_array_r8 * retarray, gfc_array_r8 *array, index_type *pdim)\n {"}, {"sha": "46ae7ce133540e06ff07b34a45c984bfe4332a16", "filename": "libgfortran/m4/cshift1.m4", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fcshift1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fcshift1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fcshift1.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,15 +24,11 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include <string.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(htype_kind, regexp(file, `_\\([0-9]+\\)\\.', `\\1'))dnl\n-define(htype_code,`i'rtype_name)dnl\n-define(htype,get_arraytype(i,htype_kind))dnl\n-define(htype_name, get_typename(i,htype_kind))dnl\n+include(iparm.m4)dnl\n \n void\n-`__cshift1_'htype_kind (const gfc_array_char * ret, const gfc_array_char * array,\n-    const htype * h, const htype_name * pwhich)\n+`__cshift1_'atype_kind (const gfc_array_char * ret, const gfc_array_char * array,\n+    const atype * h, const atype_name * pwhich)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS - 1];\n@@ -49,7 +45,7 @@ void\n `  /* h.* indicates the shift array.  */'\n   index_type hstride[GFC_MAX_DIMENSIONS - 1];\n   index_type hstride0;\n-  const htype_name *hptr;\n+  const atype_name *hptr;\n \n   index_type count[GFC_MAX_DIMENSIONS - 1];\n   index_type extent[GFC_MAX_DIMENSIONS - 1];\n@@ -58,7 +54,7 @@ void\n   index_type len;\n   index_type n;\n   int which;\n-  htype_name sh;\n+  atype_name sh;\n \n   if (pwhich)\n     which = *pwhich - 1;"}, {"sha": "bde4c20512c8459d5c4186133dc6115384021e73", "filename": "libgfortran/m4/dotprod.m4", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fdotprod.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fdotprod.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fdotprod.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -23,12 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_code, regexp(file, `_\\([ir][0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_letter,substr(rtype_code, 0, 1))dnl\n-define(rtype_kind, substr(rtype_code, 1))dnl\n-define(rtype,get_arraytype(rtype_letter,rtype_kind))dnl\n-define(rtype_name, get_typename(rtype_letter, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n "}, {"sha": "eb97efa3121aa477dda774651e6566d617b18a65", "filename": "libgfortran/m4/dotprodc.m4", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fdotprodc.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fdotprodc.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fdotprodc.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,12 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_code, regexp(file, `_\\(c[0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_letter,substr(rtype_code, 0, 1))dnl\n-define(rtype_kind, substr(rtype_code, 1))dnl\n-define(rtype,get_arraytype(rtype_letter,rtype_kind))dnl\n-define(rtype_name, get_typename(rtype_letter, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n "}, {"sha": "8f886d3bd608aa90a5d12d17973207a6c08f87f0", "filename": "libgfortran/m4/dotprodl.m4", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fdotprodl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fdotprodl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fdotprodl.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -23,11 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_kind, regexp(file, `_l\\([0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_code,`l'rtype_kind)dnl\n-define(rtype,get_arraytype(l,rtype_kind))dnl\n-define(rtype_name, get_typename(l, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n rtype_name\n `__dot_product_'rtype_code (gfc_array_l4 * a, gfc_array_l4 * b)"}, {"sha": "a7852e0e40a6ee7af3156bd98e6d6479bc755ebc", "filename": "libgfortran/m4/eoshift1.m4", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Feoshift1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Feoshift1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift1.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,18 +24,14 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include <string.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(htype_kind, regexp(file, `_\\([0-9]+\\)\\.', `\\1'))dnl\n-define(htype_code,`i'rtype_name)dnl\n-define(htype,get_arraytype(i,htype_kind))dnl\n-define(htype_name, get_typename(i,htype_kind))dnl\n+include(iparm.m4)dnl\n \n static const char zeros[16] =\n   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n \n void\n-`__eoshift1_'htype_kind (const gfc_array_char * ret, const gfc_array_char * array,\n-    const htype * h, const char * pbound, const htype_name * pwhich)\n+`__eoshift1_'atype_kind (const gfc_array_char * ret, const gfc_array_char * array,\n+    const atype * h, const char * pbound, const atype_name * pwhich)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS - 1];\n@@ -52,7 +48,7 @@ void\n `  /* h.* indicates the shift array.  */'\n   index_type hstride[GFC_MAX_DIMENSIONS - 1];\n   index_type hstride0;\n-  const htype_name *hptr;\n+  const atype_name *hptr;\n \n   index_type count[GFC_MAX_DIMENSIONS - 1];\n   index_type extent[GFC_MAX_DIMENSIONS - 1];\n@@ -61,8 +57,8 @@ void\n   index_type len;\n   index_type n;\n   int which;\n-  htype_name sh;\n-  htype_name delta;\n+  atype_name sh;\n+  atype_name delta;\n \n   if (pwhich)\n     which = *pwhich - 1;"}, {"sha": "a5407520b0b8a4f00fa52e617d46a9995c193166", "filename": "libgfortran/m4/eoshift3.m4", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Feoshift3.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Feoshift3.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift3.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,18 +24,14 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include <string.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(htype_kind, regexp(file, `_\\([0-9]+\\)\\.', `\\1'))dnl\n-define(htype_code,`i'rtype_name)dnl\n-define(htype,get_arraytype(i,htype_kind))dnl\n-define(htype_name, get_typename(i,htype_kind))dnl\n+include(iparm.m4)dnl\n \n static const char zeros[16] =\n   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n \n void\n-`__eoshift3_'htype_kind (gfc_array_char * ret, gfc_array_char * array,\n-    htype * h, const gfc_array_char * bound, htype_name * pwhich)\n+`__eoshift3_'atype_kind (gfc_array_char * ret, gfc_array_char * array,\n+    atype * h, const gfc_array_char * bound, atype_name * pwhich)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS - 1];\n@@ -52,7 +48,7 @@ void\n `  /* h.* indicates the shift array.  */'\n   index_type hstride[GFC_MAX_DIMENSIONS - 1];\n   index_type hstride0;\n-  const htype_name *hptr;\n+  const atype_name *hptr;\n   /* b.* indicates the bound array.  */\n   index_type bstride[GFC_MAX_DIMENSIONS - 1];\n   index_type bstride0;\n@@ -65,8 +61,8 @@ void\n   index_type len;\n   index_type n;\n   int which;\n-  htype_name sh;\n-  htype_name delta;\n+  atype_name sh;\n+  atype_name delta;\n \n   if (pwhich)\n     which = *pwhich - 1;"}, {"sha": "4106ddc7aafbad053b93e15b25ffe674c128e9d6", "filename": "libgfortran/m4/iforeach.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fiforeach.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fiforeach.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiforeach.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -4,13 +4,13 @@ dnl This file is part of the GNU Fortran 95 Runtime Library (libgfortran)\n dnl Distributed under the GNU LGPL.  See COPYING for details.\n define(START_FOREACH_FUNCTION,\n `void\n-`__'name`'rtype_qual`_'type_code (rtype * retarray, atype *array)\n+`__'name`'rtype_qual`_'atype_code (rtype * retarray, atype *array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  type_name *base;\n+  atype_name *base;\n   rtype_name *dest;\n   index_type rank;\n   index_type n;\n@@ -86,15 +86,15 @@ define(FINISH_FOREACH_FUNCTION,\n }')dnl\n define(START_MASKED_FOREACH_FUNCTION,\n `void\n-`__m'name`'rtype_qual`_'type_code (rtype * retarray, atype *array, gfc_array_l4 * mask)\n+`__m'name`'rtype_qual`_'atype_code (rtype * retarray, atype *array, gfc_array_l4 * mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   rtype_name *dest;\n-  type_name *base;\n+  atype_name *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "74cc1e63cd9659ec9d517a4417ce9809ebf4e7a8", "filename": "libgfortran/m4/ifunction.m4", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fifunction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fifunction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -13,19 +13,19 @@ dnl retarray, array, pdim and mstride should not be used.\n dnl The variable n is declared as index_type and may be used.\n dnl Other variable declarations may be placed at the start of the code,\n dnl The types of the array parameter and the return value are\n-dnl type_name and rtype_name respectively.\n+dnl atype_name and rtype_name respectively.\n dnl Execution should be allowed to continue to the end of the block.\n dnl You should not return or break from the inner loop of the implementation.\n dnl Care should also be taken to avoid using the names defined in iparm.m4\n define(START_ARRAY_FUNCTION,\n `void\n-`__'name`'rtype_qual`_'type_code (rtype * retarray, atype *array, index_type *pdim)\n+`__'name`'rtype_qual`_'atype_code (rtype * retarray, atype *array, index_type *pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS - 1];\n   index_type extent[GFC_MAX_DIMENSIONS - 1];\n   index_type sstride[GFC_MAX_DIMENSIONS - 1];\n   index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  type_name *base;\n+  atype_name *base;\n   rtype_name *dest;\n   index_type rank;\n   index_type n;\n@@ -70,7 +70,7 @@ define(START_ARRAY_FUNCTION,\n \n   while (base)\n     {\n-      type_name *src;\n+      atype_name *src;\n       rtype_name result;\n       src = base;\n       {\n@@ -120,15 +120,15 @@ define(FINISH_ARRAY_FUNCTION,\n }')dnl\n define(START_MASKED_ARRAY_FUNCTION,\n `void\n-`__m'name`'rtype_qual`_'type_code (rtype * retarray, atype * array, index_type *pdim, gfc_array_l4 * mask)\n+`__m'name`'rtype_qual`_'atype_code (rtype * retarray, atype * array, index_type *pdim, gfc_array_l4 * mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS - 1];\n   index_type extent[GFC_MAX_DIMENSIONS - 1];\n   index_type sstride[GFC_MAX_DIMENSIONS - 1];\n   index_type dstride[GFC_MAX_DIMENSIONS - 1];\n   index_type mstride[GFC_MAX_DIMENSIONS - 1];\n   rtype_name *dest;\n-  type_name *base;\n+  atype_name *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   int dim;\n@@ -189,7 +189,7 @@ define(START_MASKED_ARRAY_FUNCTION,\n \n   while (base)\n     {\n-      type_name *src;\n+      atype_name *src;\n       GFC_LOGICAL_4 *msrc;\n       rtype_name result;\n       src = base;"}, {"sha": "d17abc4bf9cebb58b7994a15c8244e1c5963de27", "filename": "libgfortran/m4/in_pack.m4", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fin_pack.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fin_pack.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fin_pack.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -23,13 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_kind, regexp(file, `_.\\([0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_letter, regexp(file, `_\\(.\\)[0-9]+\\.', `\\1'))dnl\n-define(rtype_code,rtype_letter`'rtype_name)dnl\n-define(rtype,get_arraytype(rtype_letter,rtype_kind))dnl\n-define(rtype_name, get_typename(rtype_letter, rtype_kind))dnl\n-\n+include(iparm.m4)dnl\n \n /* Allocates a block of memory with internal_malloc if the array needs\n    repacking.  */"}, {"sha": "fa6f6be7d33ad2c2d311965955d8ae454ad53310", "filename": "libgfortran/m4/in_unpack.m4", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fin_unpack.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fin_unpack.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fin_unpack.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -24,12 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #include <assert.h>\n #include <string.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_kind, regexp(file, `_.\\([0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_letter, regexp(file, `_\\(.\\)[0-9]+\\.', `\\1'))dnl\n-define(rtype_code,rtype_letter`'rtype_name)dnl\n-define(rtype,get_arraytype(rtype_letter,rtype_kind))dnl\n-define(rtype_name, get_typename(rtype_letter, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n dnl Only the kind (ie size) is used to name the function.\n void"}, {"sha": "7b1cdebefc87b1827bb2e9f5adee1f243d4c3780", "filename": "libgfortran/m4/iparm.m4", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fiparm.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fiparm.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiparm.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -3,24 +3,30 @@ dnl Works out all the function types from the filename.\n dnl This file is part of the GNU Fortran 95 Runtime Library (libgfortran)\n dnl Distributed under the GNU LGPL.  See COPYING for details.\n dnl M4 macro file to get type names from filenames\n-include(`types.m4')\n-define(type_letter, regexp(file, `_\\([irlc]\\)[^_]*$', \\1))dnl\n-define(type_kind, regexp(file, `_[irlc]\\([0-9]*\\)[^_]*$', \\1))dnl\n-define(rtype_kind, regexp(file, `_\\([0-9]*\\)_[irlc][0-9]*[^_]*$', `\\1'))dnl\n-define(type_code, type_letter`'type_kind)dnl\n-define(type_name, get_typename(type_letter,type_kind))dnl\n-define(atype, get_arraytype(type_letter,type_kind))dnl\n-ifelse(rtype_kind,,\n-`define(rtype_letter,type_letter)dnl\n-define(rtype_name, type_name)dnl\n-define(rtype_code, type_code)dnl\n-define(rtype, atype)dnl\n+define(get_typename2, `GFC_$1_$2')dnl\n+define(get_typename, `get_typename2(ifelse($1,i,INTEGER,ifelse($1,r,REAL,ifelse($1,l,LOGICAL,ifelse($1,c,COMPLEX,unknown)))),`$2')')dnl\n+define(get_arraytype, `gfc_array_$1$2')dnl\n+define(define_type, `dnl\n+ifelse(regexp($2,`^[0-9]'),-1,`dnl\n+define($1_letter, substr($2, 0, 1))dnl\n+define($1_kind, substr($2, 1))dnl\n+',`dnl\n+define($1_letter,i)dnl\n+define($1_kind,$2)dnl\n+')dnl\n+define($1_code,$1_letter`'$1_kind)dnl\n+define($1,get_arraytype($1_letter,$1_kind))dnl\n+define($1_name, get_typename($1_letter, $1_kind))')dnl\n+dnl\n+define_type(atype, regexp(file, `_\\(.?[0-9]*\\)\\.c$', `\\1'))dnl\n+define(rtype_tmp, regexp(file, `_\\(.?[0-9]*\\)_[^_]*\\.c$', `\\1'))dnl\n+ifelse(rtype_tmp,,`dnl\n+define_type(rtype, atype_code)dnl\n define(rtype_qual,`')dnl\n-',\n-`define(rtype_letter,i)dnl\n-define(rtype_name, get_typename(rtype_letter,rtype_kind))dnl\n-define(rtype, get_arraytype(rtype_letter,rtype_kind))dnl\n+',`dnl\n+define_type(rtype, rtype_tmp)dnl\n define(rtype_qual,`_'rtype_kind)dnl\n ')dnl\n-define(type_max, type_name`_HUGE')dnl\n-define(type_min, `-'type_max)dnl\n+define(atype_max, atype_name`_HUGE')dnl\n+define(atype_min, `-'atype_max)dnl\n+define(name, regexp(regexp(file, `[^/]*$', `\\&'), `^\\([^_]*\\)_', `\\1'))dnl"}, {"sha": "26b241dedad0db63f2d570c54188b1a9b9d01935", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -23,12 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_code, regexp(file, `_\\([irc][0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_letter,substr(rtype_code, 0, 1))dnl\n-define(rtype_kind, substr(rtype_code, 1))dnl\n-define(rtype,get_arraytype(rtype_letter,rtype_kind))dnl\n-define(rtype_name, get_typename(rtype_letter, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n /* Dimensions: retarray(x,y) a(x, count) b(count,y).\n    Either a or b can be rank 1.  In this case x or y is 1.  */"}, {"sha": "4ee32fb94310ee39a02cba183d05ae2170c9f5ed", "filename": "libgfortran/m4/matmull.m4", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmatmull.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmatmull.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmull.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -23,11 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_kind, regexp(file, `_l\\([0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_code,`l'rtype_kind)dnl\n-define(rtype,get_arraytype(l,rtype_kind))dnl\n-define(rtype_name, get_typename(l, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n /* Dimensions: retarray(x,y) a(x, count) b(count,y).\n    Either a or b can be rank 1.  In this case x or y is 1.  */"}, {"sha": "ade2a2613524af275d7778ad996d5dbccdea93ef", "filename": "libgfortran/m4/maxloc0.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmaxloc0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmaxloc0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmaxloc0.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -30,9 +30,9 @@ include(iparm.m4)dnl\n include(iforeach.m4)dnl\n \n FOREACH_FUNCTION(\n-`  type_name maxval;\n+`  atype_name maxval;\n \n-  maxval = type_min;'\n+  maxval = atype_min;'\n ,\n `  if (*base > maxval)\n     {\n@@ -42,9 +42,9 @@ FOREACH_FUNCTION(\n     }')\n \n MASKED_FOREACH_FUNCTION(\n-`  type_name maxval;\n+`  atype_name maxval;\n \n-  maxval = type_min;'\n+  maxval = atype_min;'\n ,\n `  if (*mbase && *base > maxval)\n     {"}, {"sha": "550a1f74c2f75699bd3bbb21e1f027d4413d342a", "filename": "libgfortran/m4/maxloc1.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmaxloc1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmaxloc1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmaxloc1.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -29,8 +29,8 @@ Boston, MA 02111-1307, USA.  */\n include(iparm.m4)dnl\n include(ifunction.m4)dnl\n ARRAY_FUNCTION(0,\n-`  type_name maxval;\n-  maxval = type_min;\n+`  atype_name maxval;\n+  maxval = atype_min;\n   result = 1;',\n `  if (*src > maxval)\n     {\n@@ -39,8 +39,8 @@ ARRAY_FUNCTION(0,\n     }')\n \n MASKED_ARRAY_FUNCTION(0,\n-`  type_name maxval;\n-  maxval = type_min;\n+`  atype_name maxval;\n+  maxval = atype_min;\n   result = 1;',\n `  if (*msrc && *src > maxval)\n     {"}, {"sha": "845b822d6f5fa9fd3b6c414a093c46e6aabb7efa", "filename": "libgfortran/m4/maxval.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmaxval.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fmaxval.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmaxval.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,13 +27,13 @@ Boston, MA 02111-1307, USA.  */\n \n include(iparm.m4)dnl\n include(ifunction.m4)dnl\n-ARRAY_FUNCTION(type_min,\n-`  result = type_min;',\n+ARRAY_FUNCTION(atype_min,\n+`  result = atype_min;',\n `  if (*src > result)\n     result = *src;')\n \n-MASKED_ARRAY_FUNCTION(type_min,\n-`  result = type_min;',\n+MASKED_ARRAY_FUNCTION(atype_min,\n+`  result = atype_min;',\n `  if (*msrc && *src > result)\n     result = *src;')\n "}, {"sha": "e61ab8d3e33b818283048152ee70c86cd60d8ab8", "filename": "libgfortran/m4/minloc0.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fminloc0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fminloc0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fminloc0.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -30,9 +30,9 @@ include(iparm.m4)dnl\n include(iforeach.m4)dnl\n \n FOREACH_FUNCTION(\n-`  type_name minval;\n+`  atype_name minval;\n \n-  minval = type_max;'\n+  minval = atype_max;'\n ,\n `  if (*base < minval)\n     {\n@@ -42,9 +42,9 @@ FOREACH_FUNCTION(\n     }')\n \n MASKED_FOREACH_FUNCTION(\n-`  type_name minval;\n+`  atype_name minval;\n \n-  minval = type_max;'\n+  minval = atype_max;'\n ,\n `  if (*mbase && *base < minval)\n     {"}, {"sha": "e3b1866bbaf652923d0c5c1513cb01455156efbb", "filename": "libgfortran/m4/minloc1.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fminloc1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fminloc1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fminloc1.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -29,8 +29,8 @@ Boston, MA 02111-1307, USA.  */\n include(iparm.m4)dnl\n include(ifunction.m4)dnl\n ARRAY_FUNCTION(0,\n-`  type_name minval;\n-  minval = type_max;\n+`  atype_name minval;\n+  minval = atype_max;\n   result = 1;',\n `  if (*src < minval)\n     {\n@@ -39,8 +39,8 @@ ARRAY_FUNCTION(0,\n     }')\n \n MASKED_ARRAY_FUNCTION(0,\n-`  type_name minval;\n-  minval = type_max;\n+`  atype_name minval;\n+  minval = atype_max;\n   result = 1;',\n `  if (*msrc && *src < minval)\n     {"}, {"sha": "cdee06c22d8512b9fe7ec71d2b33327e6552d267", "filename": "libgfortran/m4/minval.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fminval.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fminval.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fminval.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -27,13 +27,13 @@ Boston, MA 02111-1307, USA.  */\n \n include(iparm.m4)dnl\n include(ifunction.m4)dnl\n-ARRAY_FUNCTION(type_max,\n-`  result = type_max;',\n+ARRAY_FUNCTION(atype_max,\n+`  result = atype_max;',\n `  if (*src < result)\n     result = *src;')\n \n-MASKED_ARRAY_FUNCTION(type_max,\n-`  result = type_max;',\n+MASKED_ARRAY_FUNCTION(atype_max,\n+`  result = atype_max;',\n `  if (*msrc && *src < result)\n     result = *src;')\n "}, {"sha": "7400f31ad7623f9d23116147800ec78165aff23d", "filename": "libgfortran/m4/reshape.m4", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Freshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Freshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Freshape.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -23,12 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_kind, regexp(file, `_.\\([0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_letter, regexp(file, `_\\(.\\)[0-9]+\\.', `\\1'))dnl\n-define(rtype_code,rtype_letter`'rtype_name)dnl\n-define(rtype,get_arraytype(rtype_letter,rtype_kind))dnl\n-define(rtype_name, get_typename(rtype_letter, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n "}, {"sha": "6c58658738b04da47b1df6ea7f95d4e4c730abb0", "filename": "libgfortran/m4/shape.m4", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fshape.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -23,11 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <stdlib.h>\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_kind, regexp(file, `_i\\([0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_code,`i'rtype_name)dnl\n-define(rtype,get_arraytype(i,rtype_kind))dnl\n-define(rtype_name, get_typename(i, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n void\n `__shape_'rtype_kind (rtype * ret, const rtype * array)"}, {"sha": "a6cea730a79c36c9ad07b32fe7154f377eab70a8", "filename": "libgfortran/m4/specific.m4", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fspecific.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fspecific.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspecific.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -1,16 +1,16 @@\n include(head.m4)\n-define(type_code,regexp(file,`_\\([ircl][0-9]+\\).f90',`\\1'))dnl\n-define(type_letter,substr(type_code, 0, 1))dnl\n-define(type_kind,substr(type_code, 1))dnl\n+define(atype_code,regexp(file,`_\\([ircl][0-9]+\\).f90',`\\1'))dnl\n+define(atype_letter,substr(atype_code, 0, 1))dnl\n+define(atype_kind,substr(atype_code, 1))dnl\n define(get_typename2, `$1 (kind=$2)')dnl\n define(get_typename, `get_typename2(ifelse($1,i,integer,ifelse($1,r,real,ifelse($1,l,logical,ifelse($1,c,complex,unknown)))),`$2')')dnl\n-define(type_name, get_typename(type_letter,type_kind))dnl\n+define(atype_name, get_typename(atype_letter,atype_kind))dnl\n define(name, regexp(regexp(file, `[^/]*$', `\\&'), `^_\\([^_]*\\)_', `\\1'))dnl\n-define(function_name,`specific__'name`_'type_code)dnl\n+define(function_name,`specific__'name`_'atype_code)dnl\n \n elemental function function_name (parm)\n-   type_name, intent (in) :: parm\n-   type_name :: function_name\n+   atype_name, intent (in) :: parm\n+   atype_name :: function_name\n \n    function_name = name (parm)\n end function"}, {"sha": "dab90b0aeb0853cea13e6385c7d79e7962171d06", "filename": "libgfortran/m4/specific2.m4", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fspecific2.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Fspecific2.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspecific2.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -1,16 +1,16 @@\n include(head.m4)\n-define(type_code,regexp(file,`_\\([ircl][0-9]+\\).f90',`\\1'))dnl\n-define(type_letter,substr(type_code, 0, 1))dnl\n-define(type_kind,substr(type_code, 1))dnl\n+define(atype_code,regexp(file,`_\\([ircl][0-9]+\\).f90',`\\1'))dnl\n+define(atype_letter,substr(atype_code, 0, 1))dnl\n+define(atype_kind,substr(atype_code, 1))dnl\n define(get_typename2, `$1 (kind=$2)')dnl\n define(get_typename, `get_typename2(ifelse($1,i,integer,ifelse($1,r,real,ifelse($1,l,logical,ifelse($1,c,complex,unknown)))),`$2')')dnl\n-define(type_name, get_typename(type_letter,type_kind))dnl\n+define(atype_name, get_typename(atype_letter,atype_kind))dnl\n define(name, regexp(regexp(file, `[^/]*$', `\\&'), `^_\\([^_]*\\)_', `\\1'))dnl\n-define(function_name,`specific__'name`_'type_code)dnl\n+define(function_name,`specific__'name`_'atype_code)dnl\n \n elemental function function_name (p1, p2)\n-   type_name, intent (in) :: p1, p2\n-   type_name :: function_name\n+   atype_name, intent (in) :: p1, p2\n+   atype_name :: function_name\n \n    function_name = name (p1, p2)\n end function"}, {"sha": "fbc4950109790a8af2f65ab3dcd10e451cd5093a", "filename": "libgfortran/m4/transpose.m4", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Ftranspose.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62/libgfortran%2Fm4%2Ftranspose.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Ftranspose.m4?ref=c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62", "patch": "@@ -22,12 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include <assert.h>\n #include \"libgfortran.h\"'\n-include(types.m4)dnl\n-define(rtype_kind, regexp(file, `_.\\([0-9]+\\)\\.', `\\1'))dnl\n-define(rtype_letter, regexp(file, `_\\(.\\)[0-9]+\\.', `\\1'))dnl\n-define(rtype_code,rtype_letter`'rtype_name)dnl\n-define(rtype,get_arraytype(rtype_letter,rtype_kind))dnl\n-define(rtype_name, get_typename(rtype_letter, rtype_kind))dnl\n+include(iparm.m4)dnl\n \n void\n `__transpose_'rtype_kind (rtype * ret, rtype * source)"}]}