{"sha": "b78d005e8fa47fd698f103ee62d145c01f05de38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc4ZDAwNWU4ZmE0N2ZkNjk4ZjEwM2VlNjJkMTQ1YzAxZjA1ZGUzOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-12-10T12:20:20Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-12-10T12:20:20Z"}, "message": "Make dwarf2out punt for MODE_VECTOR_BOOL\n\nThe dwarf2 handling of vector constants currently divides the vector\ninto a length (number of elements) and byte element size.  This doesn't\nwork well for MODE_VECTOR_BOOL, where several elements are packed into\nthe same byte.\n\nWe should probably add a way of encoding this in future, but for now\nthe safest thing is to punt, like we already do for variable-length\nvectors.\n\n2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* dwarf2out.c (loc_descriptor): Punt for MODE_VECTOR_BOOL.\n\t(add_const_value_attribute): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/acle/general/debug_4.c: New test.\n\nFrom-SVN: r279165", "tree": {"sha": "3879ac00fe2d6d250b7ad1fd0747b798bc8b8195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3879ac00fe2d6d250b7ad1fd0747b798bc8b8195"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b78d005e8fa47fd698f103ee62d145c01f05de38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78d005e8fa47fd698f103ee62d145c01f05de38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78d005e8fa47fd698f103ee62d145c01f05de38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78d005e8fa47fd698f103ee62d145c01f05de38/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b78500ecb86ef800509270d2d2f161e4eb9aadd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78500ecb86ef800509270d2d2f161e4eb9aadd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78500ecb86ef800509270d2d2f161e4eb9aadd0"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "ed569e481b251565cfc870000b005b7478f915d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b78d005e8fa47fd698f103ee62d145c01f05de38", "patch": "@@ -1,3 +1,8 @@\n+2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* dwarf2out.c (loc_descriptor): Punt for MODE_VECTOR_BOOL.\n+\t(add_const_value_attribute): Likewise.\n+\n 2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-loop.c (vect_create_epilog_for_reduction): When"}, {"sha": "ff55e3969b17bd99e6748c24e1ec8616bc83f5d7", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b78d005e8fa47fd698f103ee62d145c01f05de38", "patch": "@@ -16763,7 +16763,12 @@ loc_descriptor (rtx rtl, machine_mode mode,\n       if (mode == VOIDmode)\n \tmode = GET_MODE (rtl);\n \n-      if (mode != VOIDmode && (dwarf_version >= 4 || !dwarf_strict))\n+      if (mode != VOIDmode\n+\t  /* The combination of a length and byte elt_size doesn't extend\n+\t     naturally to boolean vectors, where several elements are packed\n+\t     into the same byte.  */\n+\t  && GET_MODE_CLASS (mode) != MODE_VECTOR_BOOL\n+\t  && (dwarf_version >= 4 || !dwarf_strict))\n \t{\n \t  unsigned int length;\n \t  if (!CONST_VECTOR_NUNITS (rtl).is_constant (&length))\n@@ -19622,6 +19627,12 @@ add_const_value_attribute (dw_die_ref die, rtx rtl)\n \t  return false;\n \n \tmachine_mode mode = GET_MODE (rtl);\n+\t/* The combination of a length and byte elt_size doesn't extend\n+\t   naturally to boolean vectors, where several elements are packed\n+\t   into the same byte.  */\n+\tif (GET_MODE_CLASS (mode) == MODE_VECTOR_BOOL)\n+\t  return false;\n+\n \tunsigned int elt_size = GET_MODE_UNIT_SIZE (mode);\n \tunsigned char *array\n \t  = ggc_vec_alloc<unsigned char> (length * elt_size);"}, {"sha": "389fb25fd407bb036aa11109e4c3e4cc48c4bb3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b78d005e8fa47fd698f103ee62d145c01f05de38", "patch": "@@ -1,3 +1,7 @@\n+2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/acle/general/debug_4.c: New test.\n+\n 2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/clastb_9.c: New test."}, {"sha": "5707cc229d0ebd0ea7918c644ce0c1478fc2bdb1", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general/debug_4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fdebug_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78d005e8fa47fd698f103ee62d145c01f05de38/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fdebug_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fdebug_4.c?ref=b78d005e8fa47fd698f103ee62d145c01f05de38", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O -g -msve-vector-bits=512\" } */\n+\n+#include <arm_sve.h>\n+\n+void __attribute__((noipa))\n+g (volatile int *x, svbool_t pg)\n+{\n+  *x = 1;\n+}\n+\n+void\n+f (volatile int *x)\n+{\n+  svbool_t pg = svorr_z (svpfalse (), svpfalse (), svpfalse ());\n+  g (x, pg);\n+}"}]}