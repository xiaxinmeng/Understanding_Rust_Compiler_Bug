{"sha": "43c2a69adf87b340b098de12592efc647e0a88b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjMmE2OWFkZjg3YjM0MGIwOThkZTEyNTkyZWZjNjQ3ZTBhODhiMQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-09-24T15:23:06Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-09-24T15:23:06Z"}, "message": "parser.c (cp_parser_expression_stack): Clarify why it is an array of NUM_PREC_VALUES elements.\n\n2004-09-24  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* parser.c (cp_parser_expression_stack): Clarify why it is\n\tan array of NUM_PREC_VALUES elements.\n\t(cp_parser_binary_expression): Clarify why we do not need to\n\thandle stack overflow.\n\nFrom-SVN: r88042", "tree": {"sha": "49f2db05a19f99575128e722445de4ec1e6b08d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49f2db05a19f99575128e722445de4ec1e6b08d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c2a69adf87b340b098de12592efc647e0a88b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c2a69adf87b340b098de12592efc647e0a88b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c2a69adf87b340b098de12592efc647e0a88b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c2a69adf87b340b098de12592efc647e0a88b1/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55e74277eac73f4a1b8cd6d7dbe3df36b6984436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e74277eac73f4a1b8cd6d7dbe3df36b6984436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e74277eac73f4a1b8cd6d7dbe3df36b6984436"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "dee8d5a1d4d49c3299fcad35bf1bfe8855d7ef99", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c2a69adf87b340b098de12592efc647e0a88b1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c2a69adf87b340b098de12592efc647e0a88b1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=43c2a69adf87b340b098de12592efc647e0a88b1", "patch": "@@ -1,3 +1,10 @@\n+2004-09-24  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* parser.c (cp_parser_expression_stack): Clarify why it is\n+\tan array of NUM_PREC_VALUES elements.\n+\t(cp_parser_binary_expression): Clarify why we do not need to\n+\thandle stack overflow.\n+\n 2004-09-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/16889"}, {"sha": "89a96014d49e6df01555bf8cf94fc91d19197659", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c2a69adf87b340b098de12592efc647e0a88b1/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c2a69adf87b340b098de12592efc647e0a88b1/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=43c2a69adf87b340b098de12592efc647e0a88b1", "patch": "@@ -1106,6 +1106,9 @@ typedef struct cp_parser_expression_stack_entry\n   int prec;\n } cp_parser_expression_stack_entry;\n \n+/* The stack for storing partial expressions.  We only need NUM_PREC_VALUES\n+   entries because precedence levels on the stack are monotonically\n+   increasing.  */\n typedef struct cp_parser_expression_stack_entry\n   cp_parser_expression_stack[NUM_PREC_VALUES];\n \n@@ -5356,7 +5359,9 @@ cp_parser_binary_expression (cp_parser* parser)\n       if (lookahead_prec > new_prec)\n         {\n           /* ... and prepare to parse the RHS of the new, higher priority\n-             expression.  */\n+             expression.  Since precedence levels on the stack are\n+\t     monotonically increasing, we do not have to care about\n+\t     stack overflows.  */\n           sp->prec = prec;\n           sp->tree_type = tree_type;\n           sp->lhs = lhs;"}]}