{"sha": "7273107b948b81edc084b33e8e8fd4f3b4115f72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI3MzEwN2I5NDhiODFlZGMwODRiMzNlOGU4ZmQ0ZjNiNDExNWY3Mg==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2019-07-04T08:05:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-04T08:05:55Z"}, "message": "[Ada] Hang on expansion of library-level instantiation\n\nThis patch fixes an issue whereby instantiation of a generic at the\nlibrary-level may cause a hang or crash during compilation due to\ninappropriate expansion of generic actuals.\n\n2019-07-04  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Perform_Appropriate_Analysis): Added for\n\tselecting which type of analysis based on wheither the\n\tinstantiation is a generic at the library-level. In which case\n\texpansion during analysis.\n\t(Preanalyze_Actuals): Modify calls to Analyze to use the new\n\troutine.\n\ngcc/testsuite/\n\n\t* gnat.dg/generic_inst4.adb, gnat.dg/generic_inst4_gen.ads,\n\tgnat.dg/generic_inst4_inst.ads, gnat.dg/generic_inst4_typ.ads:\n\tNew testcase.\n\nFrom-SVN: r273054", "tree": {"sha": "c9317e9bb0f4b3b08397a1108a842e13cf3763a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9317e9bb0f4b3b08397a1108a842e13cf3763a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7273107b948b81edc084b33e8e8fd4f3b4115f72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7273107b948b81edc084b33e8e8fd4f3b4115f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7273107b948b81edc084b33e8e8fd4f3b4115f72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7273107b948b81edc084b33e8e8fd4f3b4115f72/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3c41b296a71e77742d3edb3494945537cd72983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c41b296a71e77742d3edb3494945537cd72983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c41b296a71e77742d3edb3494945537cd72983"}], "stats": {"total": 79, "additions": 71, "deletions": 8}, "files": [{"sha": "597e3311506f526621c08881d3255789546c9706", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7273107b948b81edc084b33e8e8fd4f3b4115f72", "patch": "@@ -1,3 +1,12 @@\n+2019-07-04  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch12.adb (Perform_Appropriate_Analysis): Added for\n+\tselecting which type of analysis based on wheither the\n+\tinstantiation is a generic at the library-level. In which case\n+\texpansion during analysis.\n+\t(Preanalyze_Actuals): Modify calls to Analyze to use the new\n+\troutine.\n+\n 2019-07-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_unst.adb: Handle conditional expressions."}, {"sha": "43beb8303481b528d533ead2edbeab9d36ecaa1a", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=7273107b948b81edc084b33e8e8fd4f3b4115f72", "patch": "@@ -14103,6 +14103,29 @@ package body Sem_Ch12 is\n    ------------------------\n \n    procedure Preanalyze_Actuals (N : Node_Id; Inst : Entity_Id := Empty) is\n+\n+      procedure Perform_Appropriate_Analysis (N : Node_Id);\n+      --  Determine if the actuals we are analyzing come from a generic\n+      --  instantiation that is a library unit and dispatch accordingly.\n+\n+      ----------------------------------\n+      -- Perform_Appropriate_Analysis --\n+      ----------------------------------\n+\n+      procedure Perform_Appropriate_Analysis (N : Node_Id) is\n+      begin\n+         --  When we have a library instantiation we cannot allow any expansion\n+         --  to occur, since there may be no place to put it. Instead, in that\n+         --  case we perform a preanalysis of the actual.\n+\n+         if Present (Inst) and then Is_Compilation_Unit (Inst) then\n+            Preanalyze (N);\n+\n+         else\n+            Analyze (N);\n+         end if;\n+      end Perform_Appropriate_Analysis;\n+\n       Assoc : Node_Id;\n       Act   : Node_Id;\n       Errs  : constant Nat := Serious_Errors_Detected;\n@@ -14113,6 +14136,8 @@ package body Sem_Ch12 is\n       Vis : Boolean := False;\n       --  Saved visibility status of the current homograph\n \n+   --  Start of processing for Preanalyze_Actuals\n+\n    begin\n       Assoc := First (Generic_Associations (N));\n \n@@ -14154,18 +14179,18 @@ package body Sem_Ch12 is\n                null;\n \n             elsif Nkind (Act) = N_Attribute_Reference then\n-               Analyze (Prefix (Act));\n+               Perform_Appropriate_Analysis (Prefix (Act));\n \n             elsif Nkind (Act) = N_Explicit_Dereference then\n-               Analyze (Prefix (Act));\n+               Perform_Appropriate_Analysis (Prefix (Act));\n \n             elsif Nkind (Act) = N_Allocator then\n                declare\n                   Expr : constant Node_Id := Expression (Act);\n \n                begin\n                   if Nkind (Expr) = N_Subtype_Indication then\n-                     Analyze (Subtype_Mark (Expr));\n+                     Perform_Appropriate_Analysis (Subtype_Mark (Expr));\n \n                      --  Analyze separately each discriminant constraint, when\n                      --  given with a named association.\n@@ -14177,22 +14202,23 @@ package body Sem_Ch12 is\n                         Constr := First (Constraints (Constraint (Expr)));\n                         while Present (Constr) loop\n                            if Nkind (Constr) = N_Discriminant_Association then\n-                              Analyze (Expression (Constr));\n+                              Perform_Appropriate_Analysis\n+                                (Expression (Constr));\n                            else\n-                              Analyze (Constr);\n+                              Perform_Appropriate_Analysis (Constr);\n                            end if;\n \n                            Next (Constr);\n                         end loop;\n                      end;\n \n                   else\n-                     Analyze (Expr);\n+                     Perform_Appropriate_Analysis (Expr);\n                   end if;\n                end;\n \n             elsif Nkind (Act) /= N_Operator_Symbol then\n-               Analyze (Act);\n+               Perform_Appropriate_Analysis (Act);\n \n                --  Within a package instance, mark actuals that are limited\n                --  views, so their use can be moved to the body of the\n@@ -14213,7 +14239,7 @@ package body Sem_Ch12 is\n                --  warnings complaining about the generic being unreferenced,\n                --  before abandoning the instantiation.\n \n-               Analyze (Name (N));\n+               Perform_Appropriate_Analysis (Name (N));\n \n                if Is_Entity_Name (Name (N))\n                  and then Etype (Name (N)) /= Any_Type"}, {"sha": "cf953b5af8c479cf6192d2364e78cf67e363f399", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7273107b948b81edc084b33e8e8fd4f3b4115f72", "patch": "@@ -1,3 +1,9 @@\n+2019-07-04  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/generic_inst4.adb, gnat.dg/generic_inst4_gen.ads,\n+\tgnat.dg/generic_inst4_inst.ads, gnat.dg/generic_inst4_typ.ads:\n+\tNew testcase.\n+\n 2019-07-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/dimensions2.adb, gnat.dg/dimensions2_phys.ads,"}, {"sha": "c1b2496f0f4d13e35c2d1f5dfe2ff80753a5ff42", "filename": "gcc/testsuite/gnat.dg/generic_inst4.adb", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4.adb?ref=7273107b948b81edc084b33e8e8fd4f3b4115f72", "patch": "@@ -0,0 +1,7 @@\n+--  { dg-do compile }\n+\n+with Generic_Inst4_Inst;\n+procedure Generic_Inst4 is\n+begin\n+   null;\n+end;"}, {"sha": "a1c039ef916f4ae7cae2ac9be0c209cf82ebbea7", "filename": "gcc/testsuite/gnat.dg/generic_inst4_gen.ads", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_gen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_gen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_gen.ads?ref=7273107b948b81edc084b33e8e8fd4f3b4115f72", "patch": "@@ -0,0 +1,3 @@\n+generic\n+  Param : String;\n+package Generic_Inst4_Gen is end;"}, {"sha": "1660d67e825a51db11c9d7ff08c6c094fad16c06", "filename": "gcc/testsuite/gnat.dg/generic_inst4_inst.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_inst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_inst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_inst.ads?ref=7273107b948b81edc084b33e8e8fd4f3b4115f72", "patch": "@@ -0,0 +1,5 @@\n+with Generic_Inst4_Gen;\n+with Generic_Inst4_Typ; use Generic_Inst4_Typ;\n+package Generic_Inst4_Inst is new Generic_Inst4_Gen (\n+   Param => \"SHARING;\" & --  ERROR\n+     Generic_Inst4_Typ.New_Int'image (Generic_Inst4_Typ.T'size/8));"}, {"sha": "5f80029aebc7f3f3b68400b8c0f2b5231c107686", "filename": "gcc/testsuite/gnat.dg/generic_inst4_typ.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_typ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7273107b948b81edc084b33e8e8fd4f3b4115f72/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_typ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst4_typ.ads?ref=7273107b948b81edc084b33e8e8fd4f3b4115f72", "patch": "@@ -0,0 +1,7 @@\n+package Generic_Inst4_Typ is\n+   subtype New_Int is Natural;\n+   type T is\n+      record\n+         X : Integer;\n+      end record;\n+end;"}]}