{"sha": "bf718682e1a6ce70dcd778b3c90223789c740e8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY3MTg2ODJlMWE2Y2U3MGRjZDc3OGIzYzkwMjIzNzg5Yzc0MGU4ZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2010-10-01T17:10:38Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2010-10-01T17:10:38Z"}, "message": "extract_symvers: Add support for tracking TLS symbols.\n\n2010-10-01  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* scripts/extract_symvers: Add support for tracking TLS symbols.\n\t* testsuite/util/testsuite_abi.h (symbol::category): Add tls type.\n\t* testsuite/util/testsuite_abi.cc: Set symbol type to tls when\n\tappropriate, collect size info.\n\nFrom-SVN: r164892", "tree": {"sha": "0f79d2e1368fcc6fbd180a5046f5676b8290592e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f79d2e1368fcc6fbd180a5046f5676b8290592e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf718682e1a6ce70dcd778b3c90223789c740e8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf718682e1a6ce70dcd778b3c90223789c740e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf718682e1a6ce70dcd778b3c90223789c740e8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf718682e1a6ce70dcd778b3c90223789c740e8d/comments", "author": null, "committer": null, "parents": [{"sha": "1cc2d70bee71210119a36b05de0621ac8442fd3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc2d70bee71210119a36b05de0621ac8442fd3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc2d70bee71210119a36b05de0621ac8442fd3b"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "e3c384ddd79606f61f619e38f7e79d02ce850472", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bf718682e1a6ce70dcd778b3c90223789c740e8d", "patch": "@@ -1,3 +1,10 @@\n+2010-10-01  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* scripts/extract_symvers: Add support for tracking TLS symbols.\n+\t* testsuite/util/testsuite_abi.h (symbol::category): Add tls type.\n+\t* testsuite/util/testsuite_abi.cc: Set symbol type to tls when\n+\tappropriate, collect size info.\n+\n 2010-10-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* scripts/extract_symvers: Use pvs if present."}, {"sha": "a3e15849d402bc1f8750523b588d25e503195160", "filename": "libstdc++-v3/scripts/extract_symvers", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2Fscripts%2Fextract_symvers", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2Fscripts%2Fextract_symvers", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Fextract_symvers?ref=bf718682e1a6ce70dcd778b3c90223789c740e8d", "patch": "@@ -92,7 +92,7 @@ else\n     egrep -v ' (LOCAL|UND) ' |\\\n     awk '{ if ($4 == \"FUNC\" || $4 == \"NOTYPE\")\n              printf \"%s:%s\\n\", $4, $8;\n-           else if ($4 == \"OBJECT\")\n+           else if ($4 == \"OBJECT\" || $4 == \"TLS\")\n              printf \"%s:%s:%s\\n\", $4, $3, $8;\n          }' | sort | uniq > $tmp 2>&1\n #          else printf \"Huh?  What is %s?\\n\", $8;"}, {"sha": "4921716b75ca1b967430b25407413257a230ce55", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc?ref=bf718682e1a6ce70dcd778b3c90223789c740e8d", "patch": "@@ -43,13 +43,15 @@ symbol::init(string& data)\n     type = symbol::function;\n   else if (data.find(\"OBJECT\") == 0)\n     type = symbol::object;\n+  else if (data.find(\"TLS\") == 0)\n+    type = symbol::tls;\n \n   n = data.find_first_of(delim);\n   if (n != npos)\n     data.erase(data.begin(), data.begin() + n + 1);\n \n-  // Iff object, get size info.\n-  if (type == symbol::object)\n+  // Iff object or TLS, get size info.\n+  if (type == symbol::object || type == symbol::tls)\n     {\n       n = data.find_first_of(delim);\n       if (n != npos)\n@@ -130,6 +132,9 @@ symbol::print() const\n     case object:\n       type_string = \"object\";\n       break;\n+    case tls:\n+      type_string = \"tls\";\n+      break;\n     case uncategorized:\n       type_string = \"uncategorized\";\n       break;\n@@ -138,7 +143,7 @@ symbol::print() const\n     }\n   cout << \"type: \" << type_string << endl;\n   \n-  if (type == object)\n+  if (type == object || type == tls)\n     cout << \"type size: \" << size << endl;\n \n   string status_string;"}, {"sha": "bff39903e9c1c84e0e20e23b9847ce1460d94f2e", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf718682e1a6ce70dcd778b3c90223789c740e8d/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.h?ref=bf718682e1a6ce70dcd778b3c90223789c740e8d", "patch": "@@ -29,7 +29,7 @@\n // Encapsulates symbol characteristics.\n struct symbol\n {\n-  enum category { function, object, uncategorized };\n+  enum category { function, object, tls, uncategorized };\n   enum designation { existing, added, subtracted, undesignated };\n   enum version { none, compatible, incompatible, unversioned };\n   enum compatibility "}]}