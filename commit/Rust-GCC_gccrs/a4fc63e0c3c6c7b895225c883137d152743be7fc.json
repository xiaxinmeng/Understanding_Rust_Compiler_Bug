{"sha": "a4fc63e0c3c6c7b895225c883137d152743be7fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmYzYzZTBjM2M2YzdiODk1MjI1Yzg4MzEzN2QxNTI3NDNiZTdmYw==", "commit": {"author": {"name": "Marius Hillenbrand", "email": "mhillen@linux.ibm.com", "date": "2021-06-16T16:26:48Z"}, "committer": {"name": "Marius Hillenbrand", "email": "mhillen@linux.ibm.com", "date": "2021-06-17T09:14:23Z"}, "message": "IBM Z: Fix vector intrinsics vec_double and vec_floate\n\nFix the mapping of vec_double and vec_floate to builtins.\n\ngcc/ChangeLog:\n\n\tPR target/100871\n\t* config/s390/vecintrin.h (vec_doublee): Fix to use\n\t  __builtin_s390_vflls.\n\t(vec_floate): Fix to use __builtin_s390_vflrd.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/s390/zvector/vec-doublee.c: New test.\n\t* gcc.target/s390/zvector/vec-floate.c: New test.", "tree": {"sha": "ad0367c9175c6c3f3beff9bdd9a1e977c24d59ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad0367c9175c6c3f3beff9bdd9a1e977c24d59ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4fc63e0c3c6c7b895225c883137d152743be7fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fc63e0c3c6c7b895225c883137d152743be7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4fc63e0c3c6c7b895225c883137d152743be7fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fc63e0c3c6c7b895225c883137d152743be7fc/comments", "author": {"login": "mhillenbrand", "id": 1150167, "node_id": "MDQ6VXNlcjExNTAxNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1150167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhillenbrand", "html_url": "https://github.com/mhillenbrand", "followers_url": "https://api.github.com/users/mhillenbrand/followers", "following_url": "https://api.github.com/users/mhillenbrand/following{/other_user}", "gists_url": "https://api.github.com/users/mhillenbrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhillenbrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhillenbrand/subscriptions", "organizations_url": "https://api.github.com/users/mhillenbrand/orgs", "repos_url": "https://api.github.com/users/mhillenbrand/repos", "events_url": "https://api.github.com/users/mhillenbrand/events{/privacy}", "received_events_url": "https://api.github.com/users/mhillenbrand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mhillenbrand", "id": 1150167, "node_id": "MDQ6VXNlcjExNTAxNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1150167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhillenbrand", "html_url": "https://github.com/mhillenbrand", "followers_url": "https://api.github.com/users/mhillenbrand/followers", "following_url": "https://api.github.com/users/mhillenbrand/following{/other_user}", "gists_url": "https://api.github.com/users/mhillenbrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhillenbrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhillenbrand/subscriptions", "organizations_url": "https://api.github.com/users/mhillenbrand/orgs", "repos_url": "https://api.github.com/users/mhillenbrand/repos", "events_url": "https://api.github.com/users/mhillenbrand/events{/privacy}", "received_events_url": "https://api.github.com/users/mhillenbrand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53c55d3204a69c4cce4cc5a982c42cec91178346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c55d3204a69c4cce4cc5a982c42cec91178346", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c55d3204a69c4cce4cc5a982c42cec91178346"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "9a3f7c347acdc3739a209934f719ac2ac69e3886", "filename": "gcc/config/s390/vecintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fc63e0c3c6c7b895225c883137d152743be7fc/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fc63e0c3c6c7b895225c883137d152743be7fc/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvecintrin.h?ref=a4fc63e0c3c6c7b895225c883137d152743be7fc", "patch": "@@ -109,8 +109,8 @@ __lcbb(const void *ptr, int bndry)\n #define vec_rint(X)   __builtin_s390_vfi((X), 0, 0)\n #define vec_roundc(X) __builtin_s390_vfi((X), 4, 0)\n #define vec_round(X)  __builtin_s390_vfi((X), 4, 4)\n-#define vec_doublee(X) __builtin_s390_vfll((X))\n-#define vec_floate(X) __builtin_s390_vflr((X), 0, 0)\n+#define vec_doublee(X) __builtin_s390_vflls((X))\n+#define vec_floate(X) __builtin_s390_vflrd((X), 0, 0)\n #define vec_load_len_r(X,L)\t\t\t\t\\\n   (__vector unsigned char)__builtin_s390_vlrlr((L),(X))\n #define vec_store_len_r(X,Y,L) \\"}, {"sha": "11610f225e540edf87c0e66227d021a7f09dbc27", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-doublee.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fc63e0c3c6c7b895225c883137d152743be7fc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-doublee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fc63e0c3c6c7b895225c883137d152743be7fc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-doublee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-doublee.c?ref=a4fc63e0c3c6c7b895225c883137d152743be7fc", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzarch -mzvector --save-temps\" } */\n+/* { dg-do run { target { s390_z14_hw } } } */\n+\n+/*\n+ * The vector intrinsic vec_doublee(a) converts the even-indexed\n+ * single-precision numbers in a vector to double precision.\n+ */\n+#include <assert.h>\n+#include <vecintrin.h>\n+\n+int\n+main (void)\n+{\n+    vector float in = { 1.0, 2.0, 3.0, 4.0 };\n+\n+    vector double result = vec_doublee(in);\n+    /* { dg-final { scan-assembler-times {\\n\\tvldeb} 1 } } */\n+\n+    assert(result[0] == (double)in[0]);\n+    assert(result[1] == (double)in[2]);\n+}"}, {"sha": "0b9cbe3d89e9fc4db955363975275125a08c94d5", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-floate.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fc63e0c3c6c7b895225c883137d152743be7fc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-floate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fc63e0c3c6c7b895225c883137d152743be7fc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-floate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-floate.c?ref=a4fc63e0c3c6c7b895225c883137d152743be7fc", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzarch -mzvector --save-temps\" } */\n+/* { dg-do run { target { s390_z14_hw } } } */\n+\n+/*\n+ * The vector intrinsic vec_floate(a) rounds a vector of double-precision\n+ * numbers to single-precision. The results are stored in the even-numbered\n+ * target elements.\n+ */\n+#include <assert.h>\n+#include <vecintrin.h>\n+\n+int\n+main (void)\n+{\n+    vector double in = { 1.0, 2.0 };\n+\n+    vector float result = vec_floate(in);\n+    /* { dg-final { scan-assembler-times {\\n\\tvledb} 1 } } */\n+\n+    assert(result[0] == (float)in[0]);\n+    assert(result[2] == (float)in[1]);\n+}"}]}