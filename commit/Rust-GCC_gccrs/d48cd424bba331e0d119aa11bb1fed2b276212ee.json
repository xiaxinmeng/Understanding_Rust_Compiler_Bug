{"sha": "d48cd424bba331e0d119aa11bb1fed2b276212ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4Y2Q0MjRiYmEzMzFlMGQxMTlhYTExYmIxZmVkMmIyNzYyMTJlZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-10-14T13:01:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T13:01:34Z"}, "message": "gnat_ugn.texi: Document -gnateu switch.\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Document -gnateu switch.\n\t* opt.ads (Ignore_Unrecognized_VWY_Switches): New switch.\n\t* stylesw.adb: Ignore unrecognized switch if\n\tIgnore_Unrecognized_VWY_Switches set.\n\t* switch-c.adb: Implement -gnateu (sets\n\tIgnore_Unrecognized_VWY_Switches).\n\t* validsw.adb: Ignore unrecognized switch if\n\tIgnore_Unrecognized_VWY_Switches set.\n\t* warnsw.adb: Ignore unrecognized switch if\n\tIgnore_Unrecognized_VWY_Switches set.\n\nFrom-SVN: r203536", "tree": {"sha": "40a2c2e242f4ba31fa9e53f35977d39c7e1919d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40a2c2e242f4ba31fa9e53f35977d39c7e1919d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d48cd424bba331e0d119aa11bb1fed2b276212ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48cd424bba331e0d119aa11bb1fed2b276212ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48cd424bba331e0d119aa11bb1fed2b276212ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48cd424bba331e0d119aa11bb1fed2b276212ee/comments", "author": null, "committer": null, "parents": [{"sha": "e4691ba99bff054f10be59543a6571fdbabbb427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4691ba99bff054f10be59543a6571fdbabbb427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4691ba99bff054f10be59543a6571fdbabbb427"}], "stats": {"total": 82, "additions": 70, "deletions": 12}, "files": [{"sha": "16fe13c62430ae329d9a54d996061597590e618c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d48cd424bba331e0d119aa11bb1fed2b276212ee", "patch": "@@ -1,3 +1,16 @@\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Document -gnateu switch.\n+\t* opt.ads (Ignore_Unrecognized_VWY_Switches): New switch.\n+\t* stylesw.adb: Ignore unrecognized switch if\n+\tIgnore_Unrecognized_VWY_Switches set.\n+\t* switch-c.adb: Implement -gnateu (sets\n+\tIgnore_Unrecognized_VWY_Switches).\n+\t* validsw.adb: Ignore unrecognized switch if\n+\tIgnore_Unrecognized_VWY_Switches set.\n+\t* warnsw.adb: Ignore unrecognized switch if\n+\tIgnore_Unrecognized_VWY_Switches set.\n+\n 2013-10-14  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_prag.adb, sem_prag.adb, a-exexda.adb, s-vmexta.ads: Minor"}, {"sha": "407800290b1b969c9a200557e2e7e9d2b1120823", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=d48cd424bba331e0d119aa11bb1fed2b276212ee", "patch": "@@ -3829,6 +3829,14 @@ Synonym of @option{-fdump-scos}, kept for backards compatibility.\n @cindex @option{-gnatet} (@command{gcc})\n Generate target dependent information.\n \n+@item -gnateu\n+@cindex @option{-gnateu} (@command{gcc})\n+Ignore unrecognized validity, warning, and style switches that\n+apppear after this switch is given. This may be useful when\n+compiling sources developed on a later version of the compiler\n+with an earlier version. Of course the earlier version must\n+support this switch.\n+\n @item ^-gnateV^/PARAMETER_VALIDITY_CHECK^\n @cindex @option{-gnateV} (@command{gcc})\n Check validity of subprogram parameters."}, {"sha": "492d5bc5829cf6d0f5f4eeee5d4b73220013762b", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=d48cd424bba331e0d119aa11bb1fed2b276212ee", "patch": "@@ -719,6 +719,12 @@ package Opt is\n    --  Set True to ignore all Style_Checks pragmas. Can be set True by use\n    --  of -gnateY.\n \n+   Ignore_Unrecognized_VWY_Switches : Boolean := False;\n+   --  GNAT\n+   --  Set True to ignore unrecognized y, V, w switches. Can be set True\n+   --  by use of -gnateu, causing subsequent unrecognized switches to result\n+   --  in a warning rather than an error.\n+\n    Implementation_Unit_Warnings : Boolean := True;\n    --  GNAT\n    --  Set True to active warnings for use of implementation internal units."}, {"sha": "a708da9e5bc495798ad4125b19b67c155bb97258", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=d48cd424bba331e0d119aa11bb1fed2b276212ee", "patch": "@@ -25,6 +25,7 @@\n \n with Hostparm; use Hostparm;\n with Opt;      use Opt;\n+with Output;   use Output;\n \n package body Stylesw is\n \n@@ -466,9 +467,13 @@ package body Stylesw is\n                null;\n \n             when others =>\n-               Err_Col := Err_Col - 1;\n-               Bad_Style_Switch (\"invalid style switch: \" & C);\n-               return;\n+               if Ignore_Unrecognized_VWY_Switches then\n+                  Write_Line (\"unrecognized switch -gnaty\" & C & \" ignored\");\n+               else\n+                  Err_Col := Err_Col - 1;\n+                  Bad_Style_Switch (\"invalid style switch: \" & C);\n+                  return;\n+               end if;\n             end case;\n \n          --  Turning switches off\n@@ -571,9 +576,13 @@ package body Stylesw is\n                null;\n \n             when others =>\n-               Err_Col := Err_Col - 1;\n-               Bad_Style_Switch (\"invalid style switch: \" & C);\n-               return;\n+               if Ignore_Unrecognized_VWY_Switches then\n+                  Write_Line (\"unrecognized switch -gnaty-\" & C & \" ignored\");\n+               else\n+                  Err_Col := Err_Col - 1;\n+                  Bad_Style_Switch (\"invalid style switch: \" & C);\n+                  return;\n+               end if;\n             end case;\n          end if;\n       end loop;"}, {"sha": "0d80f44a3a55ca16268ab5537ed601d506031c80", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=d48cd424bba331e0d119aa11bb1fed2b276212ee", "patch": "@@ -717,6 +717,12 @@ package body Switch.C is\n \n                      return;\n \n+                  --  -gnateu (unrecognized y,V,w switches)\n+\n+                  when 'u' =>\n+                     Ptr := Ptr + 1;\n+                     Ignore_Unrecognized_VWY_Switches := True;\n+\n                   --  -gnateV (validity checks on parameters)\n \n                   when 'V' =>"}, {"sha": "517180ad93694dde6db9280949755e4894ff2270", "filename": "gcc/ada/validsw.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fvalidsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fvalidsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvalidsw.adb?ref=d48cd424bba331e0d119aa11bb1fed2b276212ee", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,7 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Opt; use Opt;\n+with Opt;    use Opt;\n+with Output; use Output;\n \n package body Validsw is\n \n@@ -229,9 +230,14 @@ package body Validsw is\n                null;\n \n             when others =>\n-               OK      := False;\n-               Err_Col := J - 1;\n-               return;\n+               if Ignore_Unrecognized_VWY_Switches then\n+                  Write_Line (\"unrecognized switch -gnatV\" & C & \" ignored\");\n+               else\n+                  OK      := False;\n+                  Err_Col := J - 1;\n+                  return;\n+               end if;\n+\n          end case;\n       end loop;\n "}, {"sha": "a957138bdeda8ecd9c301d16163183e042acd6b4", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48cd424bba331e0d119aa11bb1fed2b276212ee/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=d48cd424bba331e0d119aa11bb1fed2b276212ee", "patch": "@@ -25,6 +25,7 @@\n \n with Err_Vars; use Err_Vars;\n with Opt;      use Opt;\n+with Output;   use Output;\n \n package body Warnsw is\n \n@@ -386,7 +387,11 @@ package body Warnsw is\n             No_Warn_On_Non_Local_Exception      := True;\n \n          when others =>\n-            return False;\n+            if Ignore_Unrecognized_VWY_Switches then\n+               Write_Line (\"unrecognized switch -gnatw.\" & C & \" ignored\");\n+            else\n+               return False;\n+            end if;\n       end case;\n \n       return True;\n@@ -672,6 +677,11 @@ package body Warnsw is\n             Warn_On_Unchecked_Conversion        := False;\n \n          when others =>\n+            if Ignore_Unrecognized_VWY_Switches then\n+               Write_Line (\"unrecognized switch -gnatw\" & C & \" ignored\");\n+            else\n+               return False;\n+            end if;\n             return False;\n       end case;\n "}]}