{"sha": "721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIxYThhYzU4YmJjMDBkZjc0NmNjZGZkNjUyOWYyZDU0MjRiMTFmMw==", "commit": {"author": {"name": "Nicolas Setton", "email": "setton@adacore.com", "date": "2006-05-19T12:31:50Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2006-05-19T12:31:50Z"}, "message": "langhooks.h (struct lang_hooks): Add dwarf_name language hook.\n\n\t* langhooks.h (struct lang_hooks): Add dwarf_name language hook.\n\t* langhooks.c (lhd_dwarf_name): New function.\n\t* langhooks-def.h (lhd_dwarf_name): Declare.\n\t(LANG_HOOKS_DWARF_NAME): New macro, defaults to lhd_dwarf_name.\n\t* dwarf2out.c (dwarf2_name): Use the dwarf_name\tlanguage hook.\n\t* ada/misc.c (gnat_dwarf_name): New function.\n\t(LANG_HOOKS_DWARF_NAME): Define to gnat_dwarf_name.\n\nFrom-SVN: r113905", "tree": {"sha": "3e100b52fe6535b867760b19644619e5846e3062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e100b52fe6535b867760b19644619e5846e3062"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/comments", "author": {"login": "setton", "id": 96973, "node_id": "MDQ6VXNlcjk2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/96973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/setton", "html_url": "https://github.com/setton", "followers_url": "https://api.github.com/users/setton/followers", "following_url": "https://api.github.com/users/setton/following{/other_user}", "gists_url": "https://api.github.com/users/setton/gists{/gist_id}", "starred_url": "https://api.github.com/users/setton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/setton/subscriptions", "organizations_url": "https://api.github.com/users/setton/orgs", "repos_url": "https://api.github.com/users/setton/repos", "events_url": "https://api.github.com/users/setton/events{/privacy}", "received_events_url": "https://api.github.com/users/setton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a1f86116204a1aaecbd1824cfd520ae248bb026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1f86116204a1aaecbd1824cfd520ae248bb026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a1f86116204a1aaecbd1824cfd520ae248bb026"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "1e3bbf6dde6505aada20c3608b69982a2c83c780", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "patch": "@@ -1,3 +1,13 @@\n+2006-05-19  Nicolas Setton  <setton@adacore.com>\n+\n+\t* langhooks.h (struct lang_hooks): Add dwarf_name language hook.\n+\t* langhooks.c (lhd_dwarf_name): New function.\n+\t* langhooks-def.h (lhd_dwarf_name): Declare.\n+\t(LANG_HOOKS_DWARF_NAME): New macro, defaults to lhd_dwarf_name.\n+\t* dwarf2out.c (dwarf2_name): Use the dwarf_name\tlanguage hook.\n+\t* ada/misc.c (gnat_dwarf_name): New function.\n+\t(LANG_HOOKS_DWARF_NAME): Define to gnat_dwarf_name.\n+\t\n 2006-05-19  Richard Sandiford  <richard@codesourcery.com>\n \n \t* libgcc2.c (MIN_UNITS_PER_WORD): Move default definition from"}, {"sha": "2f68e42b4d9136739a9dec3ff1f76f8aef66336f", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "patch": "@@ -94,6 +94,7 @@ static HOST_WIDE_INT gnat_get_alias_set\t(tree);\n static void gnat_print_decl\t\t(FILE *, tree, int);\n static void gnat_print_type\t\t(FILE *, tree, int);\n static const char *gnat_printable_name\t(tree, int);\n+static const char *gnat_dwarf_name\t(tree, int);\n static tree gnat_eh_runtime_type\t(tree);\n static int gnat_eh_type_covers\t\t(tree, tree);\n static void gnat_parse_file\t\t(int);\n@@ -144,6 +145,8 @@ static tree gnat_type_max_size\t\t(tree);\n #define LANG_HOOKS_TYPE_MAX_SIZE\tgnat_type_max_size\n #undef  LANG_HOOKS_DECL_PRINTABLE_NAME\n #define LANG_HOOKS_DECL_PRINTABLE_NAME\tgnat_printable_name\n+#undef  LANG_HOOKS_DWARF_NAME\n+#define LANG_HOOKS_DWARF_NAME\t\tgnat_dwarf_name\n #undef  LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION\n #define LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION gnat_expand_body\n #undef  LANG_HOOKS_GIMPLIFY_EXPR\n@@ -596,6 +599,14 @@ gnat_printable_name (tree decl, int verbosity)\n   return (const char *) ada_name;\n }\n \n+static const char *\n+gnat_dwarf_name (tree t, int verbosity ATTRIBUTE_UNUSED)\n+{\n+  gcc_assert (DECL_P (t));\n+\n+  return (const char *) IDENTIFIER_POINTER (DECL_NAME (t));\n+}\n+\n /* Expands GNAT-specific GCC tree nodes.  The only ones we support\n    here are  and NULL_EXPR.  */\n "}, {"sha": "3d0c89017e1e83698cfeb0b39240c6175fdd1131", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "patch": "@@ -7232,14 +7232,12 @@ output_comp_unit (dw_die_ref die, int output_if_empty)\n     }\n }\n \n-/* The DWARF2 pubname for a nested thingy looks like \"A::f\".  The\n-   output of lang_hooks.decl_printable_name for C++ looks like\n-   \"A::f(int)\".  Let's drop the argument list, and maybe the scope.  */\n+/* Return the DWARF2/3 pubname associated with a decl.  */\n \n static const char *\n dwarf2_name (tree decl, int scope)\n {\n-  return lang_hooks.decl_printable_name (decl, scope ? 1 : 0);\n+  return lang_hooks.dwarf_name (decl, scope ? 1 : 0);\n }\n \n /* Add a new entry to .debug_pubnames if appropriate.  */"}, {"sha": "eae7c928d4e01cc3b26c637e57f422aa9b92cc51", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "patch": "@@ -1,5 +1,5 @@\n /* Default macros to initialize the lang_hooks data structure.\n-   Copyright 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva  <aoliva@redhat.com>\n \n This file is part of GCC.\n@@ -53,6 +53,7 @@ extern int lhd_safe_from_p (rtx, tree);\n extern tree lhd_staticp (tree);\n extern void lhd_print_tree_nothing (FILE *, tree, int);\n extern const char *lhd_decl_printable_name (tree, int);\n+extern const char *lhd_dwarf_name (tree, int);\n extern int lhd_types_compatible_p (tree, tree);\n extern rtx lhd_expand_expr (tree, rtx, enum machine_mode, int, rtx *);\n extern int lhd_expand_decl (tree);\n@@ -124,6 +125,7 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n #define LANG_HOOKS_PRINT_IDENTIFIER\tlhd_print_tree_nothing\n #define LANG_HOOKS_PRINT_ERROR_FUNCTION lhd_print_error_function\n #define LANG_HOOKS_DECL_PRINTABLE_NAME\tlhd_decl_printable_name\n+#define LANG_HOOKS_DWARF_NAME\t\tlhd_dwarf_name\n #define LANG_HOOKS_GET_CALLEE_FNDECL\tlhd_return_null_tree\n #define LANG_HOOKS_EXPR_SIZE\t\tlhd_expr_size\n #define LANG_HOOKS_TREE_SIZE\t\tlhd_tree_size\n@@ -309,6 +311,7 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_PRINT_TYPE, \\\n   LANG_HOOKS_PRINT_IDENTIFIER, \\\n   LANG_HOOKS_DECL_PRINTABLE_NAME, \\\n+  LANG_HOOKS_DWARF_NAME, \\\n   LANG_HOOKS_TYPES_COMPATIBLE_P, \\\n   LANG_HOOKS_GET_CALLEE_FNDECL, \\\n   LANG_HOOKS_PRINT_ERROR_FUNCTION, \\"}, {"sha": "4c736d054be10121edc1a793da9310bc2c485440", "filename": "gcc/langhooks.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "patch": "@@ -1,5 +1,5 @@\n /* Default language-specific hooks.\n-   Copyright 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva  <aoliva@redhat.com>\n \n This file is part of GCC.\n@@ -264,6 +264,16 @@ lhd_decl_printable_name (tree decl, int ARG_UNUSED (verbosity))\n   return IDENTIFIER_POINTER (DECL_NAME (decl));\n }\n \n+/* This is the default dwarf_name function.  */\n+\n+const char *\n+lhd_dwarf_name (tree t, int verbosity)\n+{\n+  gcc_assert (DECL_P (t));\n+\n+  return lang_hooks.decl_printable_name (t, verbosity);\n+}\n+\n /* This compares two types for equivalence (\"compatible\" in C-based languages).\n    This routine should only return 1 if it is sure.  It should not be used\n    in contexts where erroneously returning 0 causes problems.  */"}, {"sha": "e6148936829c2d0c75e29cc054414000ad897efd", "filename": "gcc/langhooks.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721a8ac58bbc00df746ccdfd6529f2d5424b11f3/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "patch": "@@ -1,5 +1,5 @@\n /* The lang_hooks data structure.\n-   Copyright 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -382,6 +382,11 @@ struct lang_hooks\n      types in C++.  */\n   const char *(*decl_printable_name) (tree decl, int verbosity);\n \n+  /* Computes the dwarf-2/3 name for a tree.  VERBOSITY determines what\n+     information will be printed: 0: DECL_NAME, demangled as\n+     necessary.  1: and scope information.  */\n+  const char *(*dwarf_name) (tree, int verbosity);\n+\n   /* This compares two types for equivalence (\"compatible\" in C-based languages).\n      This routine should only return 1 if it is sure.  It should not be used\n      in contexts where erroneously returning 0 causes problems.  */"}]}