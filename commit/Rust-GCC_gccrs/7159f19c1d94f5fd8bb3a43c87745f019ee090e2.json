{"sha": "7159f19c1d94f5fd8bb3a43c87745f019ee090e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE1OWYxOWMxZDk0ZjVmZDhiYjNhNDNjODc3NDVmMDE5ZWUwOTBlMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-10-12T14:46:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-10-12T14:46:45Z"}, "message": "alpha.c (alpha_split_conditional_move): Use std::swap instead of manually swapping.\n\n\t* config/alpha/alpha.c (alpha_split_conditional_move):\n\tUse std::swap instead of manually swapping.\n\t(alpha_stdarg_optimize_hook): Ditto.\n\t(alpha_canonicalize_comparison): Ditto.\n\nFrom-SVN: r253681", "tree": {"sha": "e2aca03bed9b05d2ae00550912e7e10211f08314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2aca03bed9b05d2ae00550912e7e10211f08314"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7159f19c1d94f5fd8bb3a43c87745f019ee090e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7159f19c1d94f5fd8bb3a43c87745f019ee090e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7159f19c1d94f5fd8bb3a43c87745f019ee090e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7159f19c1d94f5fd8bb3a43c87745f019ee090e2/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "939cf90f620b91441180aacb7a3c290f1a53aa10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/939cf90f620b91441180aacb7a3c290f1a53aa10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/939cf90f620b91441180aacb7a3c290f1a53aa10"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "ad116af74a5722baf09b153e548eff5920ec1f30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7159f19c1d94f5fd8bb3a43c87745f019ee090e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7159f19c1d94f5fd8bb3a43c87745f019ee090e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7159f19c1d94f5fd8bb3a43c87745f019ee090e2", "patch": "@@ -1,3 +1,10 @@\n+2017-10-12  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (alpha_split_conditional_move):\n+\tUse std::swap instead of manually swapping.\n+\t(alpha_stdarg_optimize_hook): Ditto.\n+\t(alpha_canonicalize_comparison): Ditto.\n+\n 2017-10-12  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-loop-distribution.c (struct builtin_info): New struct."}, {"sha": "ece8879cb227e961cccbd27473bd6338ad21a056", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7159f19c1d94f5fd8bb3a43c87745f019ee090e2/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7159f19c1d94f5fd8bb3a43c87745f019ee090e2/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=7159f19c1d94f5fd8bb3a43c87745f019ee090e2", "patch": "@@ -2910,8 +2910,8 @@ alpha_split_conditional_move (enum rtx_code code, rtx dest, rtx cond,\n       || (code == GE || code == GT))\n     {\n       code = reverse_condition (code);\n-      diff = t, t = f, f = diff;\n-      diff = t - f;\n+      std::swap (t, f);\n+      diff = -diff;\n     }\n \n   subtarget = target = dest;\n@@ -6078,10 +6078,8 @@ alpha_stdarg_optimize_hook (struct stdarg_info *si, const gimple *stmt)\n \t  else if (code2 == COMPONENT_REF\n \t\t   && (code1 == MINUS_EXPR || code1 == PLUS_EXPR))\n \t    {\n-\t      gimple *tem = arg1_stmt;\n+\t      std::swap (arg1_stmt, arg2_stmt);\n \t      code2 = code1;\n-\t      arg1_stmt = arg2_stmt;\n-\t      arg2_stmt = tem;\n \t    }\n \t  else\n \t    goto escapes;\n@@ -9831,9 +9829,7 @@ alpha_canonicalize_comparison (int *code, rtx *op0, rtx *op1,\n       && (*code == GE || *code == GT || *code == GEU || *code == GTU)\n       && (REG_P (*op1) || *op1 == const0_rtx))\n     {\n-      rtx tem = *op0;\n-      *op0 = *op1;\n-      *op1 = tem;\n+      std::swap (*op0, *op1);\n       *code = (int)swap_condition ((enum rtx_code)*code);\n     }\n "}]}