{"sha": "fc47ef60c5d11d0302a4f4831080fde792430781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM0N2VmNjBjNWQxMWQwMzAyYTRmNDgzMTA4MGZkZTc5MjQzMDc4MQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-12-15T13:23:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-12-15T13:23:10Z"}, "message": "[multiple changes]\n\n2017-12-15  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Initialization_Item): Remove the specialized\n\tprocessing for a null initialization item. Such an item is always\n\tillegal.\n\n2017-12-15  Bob Duff  <duff@adacore.com>\n\n\t* types.ads, types.h, libgnat/a-except.adb, exp_ch11.adb\n\t(PE_Build_In_Place_Mismatch): New reason code for raising when the\n\tBIPalloc formal parameter is incorrect. This can happen if a compiler\n\tbug causes a mismatch of build-in-place between caller and callee.\n\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Use\n\tPE_Build_In_Place_Mismatch.\n\n2017-12-15  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch4.ads, exp_ch4.adb (Expand_N_Reduction_Expression): New\n\tprocedure.\n\t* exp_util.adb (Insert_Actions): Handle N_Reduction_Expression.\n\t* expander.adb (Expand): Call Expand_N_Reduction_Expression\n\t* par-ch4.adb (P_Reduction_Expression): New procedure.\n\t(P_Iterated_Component_Assoc_Or_Reduction): New precedure, extension of\n\tP_Iterated_Component_Association.\n\t(OK_Reduction_Expression_Parameter): New procedure.\n\t(P_Aggregate_Or_Paren_Expr): Improve error message for malformed delta\n\taggregate.\n\t* sem.adb (Analyze): Call Analyze_Reduction_Expression and\n\tAnalyze_Reduction_Expression_Parameter\n\t* sinfo.ads, sinfo.adb: New node kinds N_Reduction_Expression and\n\tN_Reduction_Expression_Parameter.\n\t* sem_ch4.ads, sem_ch4.adb (Analyze_Reduction_Expression,\n\tAnalyze_Reduction_Expression_Parameter): New procedures.\n\t* sem_res.adb (Resolve): Handle Reduction_Expression and\n\tReduction_Expression_Parameter\n\t* sem_spark.adb: Dummy entries for Reduction_Expression and\n\tReduction_Expression_Parameter\n\t* sprint.adb (Sprint_Node_Actual): Print Reduction_Expression,\n\tReduction_Expression_Parameter\n\nFrom-SVN: r255693", "tree": {"sha": "314bd05a71b7dee5b2a1f3437beb78d1bd842c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/314bd05a71b7dee5b2a1f3437beb78d1bd842c0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc47ef60c5d11d0302a4f4831080fde792430781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc47ef60c5d11d0302a4f4831080fde792430781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc47ef60c5d11d0302a4f4831080fde792430781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc47ef60c5d11d0302a4f4831080fde792430781/comments", "author": null, "committer": null, "parents": [{"sha": "71d6a38638e4188974703d3d4ffeeedb1295a70c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d6a38638e4188974703d3d4ffeeedb1295a70c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d6a38638e4188974703d3d4ffeeedb1295a70c"}], "stats": {"total": 772, "additions": 636, "deletions": 136}, "files": [{"sha": "528a5e67f33d2763079e5c4e640da7afed6d0f5c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -1,3 +1,43 @@\n+2017-12-15  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Initialization_Item): Remove the specialized\n+\tprocessing for a null initialization item. Such an item is always\n+\tillegal.\n+\n+2017-12-15  Bob Duff  <duff@adacore.com>\n+\n+\t* types.ads, types.h, libgnat/a-except.adb, exp_ch11.adb\n+\t(PE_Build_In_Place_Mismatch): New reason code for raising when the\n+\tBIPalloc formal parameter is incorrect. This can happen if a compiler\n+\tbug causes a mismatch of build-in-place between caller and callee.\n+\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Use\n+\tPE_Build_In_Place_Mismatch.\n+\n+2017-12-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.ads, exp_ch4.adb (Expand_N_Reduction_Expression): New\n+\tprocedure.\n+\t* exp_util.adb (Insert_Actions): Handle N_Reduction_Expression.\n+\t* expander.adb (Expand): Call Expand_N_Reduction_Expression\n+\t* par-ch4.adb (P_Reduction_Expression): New procedure.\n+\t(P_Iterated_Component_Assoc_Or_Reduction): New precedure, extension of\n+\tP_Iterated_Component_Association.\n+\t(OK_Reduction_Expression_Parameter): New procedure.\n+\t(P_Aggregate_Or_Paren_Expr): Improve error message for malformed delta\n+\taggregate.\n+\t* sem.adb (Analyze): Call Analyze_Reduction_Expression and\n+\tAnalyze_Reduction_Expression_Parameter\n+\t* sinfo.ads, sinfo.adb: New node kinds N_Reduction_Expression and\n+\tN_Reduction_Expression_Parameter.\n+\t* sem_ch4.ads, sem_ch4.adb (Analyze_Reduction_Expression,\n+\tAnalyze_Reduction_Expression_Parameter): New procedures.\n+\t* sem_res.adb (Resolve): Handle Reduction_Expression and\n+\tReduction_Expression_Parameter\n+\t* sem_spark.adb: Dummy entries for Reduction_Expression and\n+\tReduction_Expression_Parameter\n+\t* sprint.adb (Sprint_Node_Actual): Print Reduction_Expression,\n+\tReduction_Expression_Parameter\n+\n 2017-12-15  Bob Duff  <duff@adacore.com>\n \n \t* einfo.ads: Comment fix."}, {"sha": "8aca0d2602ab8c71f948ede7bc088e7519cbb045", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -5543,20 +5543,20 @@ package body Exp_Aggr is\n                then\n                   return False;\n \n-               --  For an assignment statement we require static matching\n-               --  of bounds. Ditto for an allocator whose qualified\n-               --  expression is a constrained type. If the expression in\n-               --  the allocator is an unconstrained array, we accept an\n-               --  upper bound that is not static, to allow for non-static\n-               --  expressions of the base type. Clearly there are further\n-               --  possibilities (with diminishing returns) for safely\n-               --  building arrays in place here.\n+               --  For an assignment statement we require static matching of\n+               --  bounds. Ditto for an allocator whose qualified expression\n+               --  is a constrained type. If the expression in the allocator\n+               --  is an unconstrained array, we accept an upper bound that\n+               --  is not static, to allow for non-static expressions of the\n+               --  base type. Clearly there are further possibilities (with\n+               --  diminishing returns) for safely building arrays in place\n+               --  here.\n \n                elsif Nkind (Parent (N)) = N_Assignment_Statement\n                  or else Is_Constrained (Etype (Parent (N)))\n                then\n                   if not Compile_Time_Known_Value (Aggr_Hi)\n-                   or else Expr_Value (Aggr_Hi) /= Expr_Value (Obj_Hi)\n+                    or else Expr_Value (Aggr_Hi) /= Expr_Value (Obj_Hi)\n                   then\n                      return False;\n                   end if;"}, {"sha": "53457af4ec7e8060cb71ab3465142e0ef064df97", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -2126,6 +2126,8 @@ package body Exp_Ch11 is\n             Add_Str_To_Name_Buffer (\"PE_All_Guards_Closed\");\n          when PE_Bad_Predicated_Generic_Type =>\n             Add_Str_To_Name_Buffer (\"PE_Bad_Predicated_Generic_Type\");\n+         when PE_Build_In_Place_Mismatch =>\n+            Add_Str_To_Name_Buffer (\"PE_Build_In_Place_Mismatch\");\n          when PE_Current_Task_In_Entry_Body =>\n             Add_Str_To_Name_Buffer (\"PE_Current_Task_In_Entry_Body\");\n          when PE_Duplicated_Entry_Address =>"}, {"sha": "c3aa2d2681f471b3cac0c1221eeca102ce65e1ba", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -10067,6 +10067,77 @@ package body Exp_Ch4 is\n       Analyze_And_Resolve (N, Standard_Boolean);\n    end Expand_N_Quantified_Expression;\n \n+   -----------------------------------\n+   -- Expand_N_Reduction_Expression --\n+   -----------------------------------\n+\n+   procedure Expand_N_Reduction_Expression (N : Node_Id) is\n+      Actions   : constant List_Id    := New_List;\n+      Expr      : constant Node_Id    := Expression (N);\n+      Iter_Spec : constant Node_Id    := Iterator_Specification (N);\n+      Loc       : constant Source_Ptr := Sloc (N);\n+      Loop_Spec : constant Node_Id    := Loop_Parameter_Specification (N);\n+      Typ       : constant Entity_Id  := Etype (N);\n+\n+      Actual        : Node_Id;\n+      New_Call      : Node_Id;\n+      Reduction_Par : Node_Id;\n+      Result        : Entity_Id;\n+      Scheme        : Node_Id;\n+\n+   begin\n+      Result   := Make_Temporary (Loc, 'R', N);\n+      New_Call := New_Copy_Tree (Expr);\n+\n+      if Nkind (New_Call) = N_Function_Call then\n+         Actual := First (Parameter_Associations (New_Call));\n+\n+         if Nkind (Actual) /= N_Reduction_Expression_Parameter then\n+            Actual := Next_Actual (Actual);\n+         end if;\n+\n+      elsif Nkind (New_Call) in N_Binary_Op then\n+         Actual := Left_Opnd (New_Call);\n+\n+         if Nkind (Actual) /= N_Reduction_Expression_Parameter then\n+            Actual := Right_Opnd (New_Call);\n+         end if;\n+      end if;\n+\n+      Reduction_Par := Expression (Actual);\n+\n+      Append_To (Actions,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Result,\n+          Object_Definition   => New_Occurrence_Of (Typ, Loc),\n+          Expression          => New_Copy_Tree (Reduction_Par)));\n+\n+      if Present (Iter_Spec) then\n+         Scheme :=\n+           Make_Iteration_Scheme (Loc,\n+             Iterator_Specification => Iter_Spec);\n+      else\n+         Scheme :=\n+           Make_Iteration_Scheme (Loc,\n+             Loop_Parameter_Specification => Loop_Spec);\n+      end if;\n+\n+      Replace (Actual, New_Occurrence_Of (Result, Loc));\n+\n+      Append_To (Actions,\n+        Make_Loop_Statement (Loc,\n+          Iteration_Scheme => Scheme,\n+          Statements       => New_List (Make_Assignment_Statement (Loc,\n+            New_Occurrence_Of (Result, Loc), New_Call)),\n+          End_Label        => Empty));\n+\n+      Rewrite (N,\n+        Make_Expression_With_Actions (Loc,\n+          Expression => New_Occurrence_Of (Result, Loc),\n+          Actions    => Actions));\n+      Analyze_And_Resolve (N, Typ);\n+   end Expand_N_Reduction_Expression;\n+\n    ---------------------------------\n    -- Expand_N_Selected_Component --\n    ---------------------------------"}, {"sha": "6c92accd9f4d153f126edb2df0273f49e080a36d", "filename": "gcc/ada/exp_ch4.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.ads?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,6 +68,7 @@ package Exp_Ch4 is\n    procedure Expand_N_Or_Else                     (N : Node_Id);\n    procedure Expand_N_Qualified_Expression        (N : Node_Id);\n    procedure Expand_N_Quantified_Expression       (N : Node_Id);\n+   procedure Expand_N_Reduction_Expression        (N : Node_Id);\n    procedure Expand_N_Selected_Component          (N : Node_Id);\n    procedure Expand_N_Slice                       (N : Node_Id);\n    procedure Expand_N_Type_Conversion             (N : Node_Id);"}, {"sha": "6199225ca9e9b47b0000435b32d6f4accc72abc6", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -5362,12 +5362,11 @@ package body Exp_Ch6 is\n                                   Alloc_Expr => Pool_Allocator)))),\n \n                          --  Raise Program_Error if it's none of the above;\n-                         --  this is a compiler bug. ???PE_All_Guards_Closed\n-                         --  is bogus; we should have a new code.\n+                         --  this is a compiler bug.\n \n                          Else_Statements => New_List (\n                            Make_Raise_Program_Error (Loc,\n-                             Reason => PE_All_Guards_Closed)));\n+                             Reason => PE_Build_In_Place_Mismatch)));\n \n                      --  If a separate initialization assignment was created\n                      --  earlier, append that following the assignment of the"}, {"sha": "f768e201e93c1ee2a6fdf077725aa94c4b0a2bf4", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -7330,6 +7330,8 @@ package body Exp_Util is\n                | N_Real_Literal\n                | N_Real_Range_Specification\n                | N_Record_Definition\n+               | N_Reduction_Expression\n+               | N_Reduction_Expression_Parameter\n                | N_Reference\n                | N_SCIL_Dispatch_Table_Tag_Init\n                | N_SCIL_Dispatching_Call"}, {"sha": "1ca948148206fbf24db8f016c0e926df8a0de9b3", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -435,6 +435,9 @@ package body Expander is\n                when N_Record_Representation_Clause =>\n                   Expand_N_Record_Representation_Clause (N);\n \n+               when N_Reduction_Expression =>\n+                  Expand_N_Reduction_Expression (N);\n+\n                when N_Requeue_Statement =>\n                   Expand_N_Requeue_Statement (N);\n "}, {"sha": "4500850415af1104243986b40328f1c44be9096a", "filename": "gcc/ada/libgnat/a-except.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Flibgnat%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Flibgnat%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-except.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -432,6 +432,8 @@ package body Ada.Exceptions is\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Bad_Predicated_Generic_Type\n      (File : System.Address; Line : Integer);\n+   procedure Rcheck_PE_Build_In_Place_Mismatch\n+     (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Current_Task_In_Entry_Body\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Duplicated_Entry_Address\n@@ -520,6 +522,8 @@ package body Ada.Exceptions is\n                   \"__gnat_rcheck_PE_All_Guards_Closed\");\n    pragma Export (C, Rcheck_PE_Bad_Predicated_Generic_Type,\n                   \"__gnat_rcheck_PE_Bad_Predicated_Generic_Type\");\n+   pragma Export (C, Rcheck_PE_Build_In_Place_Mismatch,\n+                  \"__gnat_rcheck_PE_Build_In_Place_Mismatch\");\n    pragma Export (C, Rcheck_PE_Current_Task_In_Entry_Body,\n                   \"__gnat_rcheck_PE_Current_Task_In_Entry_Body\");\n    pragma Export (C, Rcheck_PE_Duplicated_Entry_Address,\n@@ -588,6 +592,7 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_PE_Aliased_Parameters);\n    pragma No_Return (Rcheck_PE_All_Guards_Closed);\n    pragma No_Return (Rcheck_PE_Bad_Predicated_Generic_Type);\n+   pragma No_Return (Rcheck_PE_Build_In_Place_Mismatch);\n    pragma No_Return (Rcheck_PE_Current_Task_In_Entry_Body);\n    pragma No_Return (Rcheck_PE_Duplicated_Entry_Address);\n    pragma No_Return (Rcheck_PE_Explicit_Raise);\n@@ -661,6 +666,7 @@ package body Ada.Exceptions is\n    Rmsg_34 : constant String := \"infinite recursion\"               & NUL;\n    Rmsg_35 : constant String := \"object too large\"                 & NUL;\n    Rmsg_36 : constant String := \"stream operation not allowed\"     & NUL;\n+   Rmsg_37 : constant String := \"build-in-place mismatch\"          & NUL;\n \n    -----------------------\n    -- Polling Interface --\n@@ -1335,6 +1341,13 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_19'Address);\n    end Rcheck_PE_Bad_Predicated_Generic_Type;\n \n+   procedure Rcheck_PE_Build_In_Place_Mismatch\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_37'Address);\n+   end Rcheck_PE_Build_In_Place_Mismatch;\n+\n    procedure Rcheck_PE_Current_Task_In_Entry_Body\n      (File : System.Address; Line : Integer)\n    is"}, {"sha": "4b5ef456ed94cbcf232cf5b95ffc7dd34838969f", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 234, "deletions": 20, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -75,7 +75,8 @@ package body Ch4 is\n    function P_Aggregate_Or_Paren_Expr                 return Node_Id;\n    function P_Allocator                               return Node_Id;\n    function P_Case_Expression_Alternative             return Node_Id;\n-   function P_Iterated_Component_Association          return Node_Id;\n+   function P_Iterated_Component_Assoc_Or_Reduction   return Node_Id;\n+   function P_Reduction_Expression (Lparen : Boolean) return Node_Id;\n    function P_Record_Or_Array_Component_Association   return Node_Id;\n    function P_Factor                                  return Node_Id;\n    function P_Primary                                 return Node_Id;\n@@ -644,6 +645,9 @@ package body Ch4 is\n          --      case of a name which can be extended in the normal manner.\n          --      This case is handled by LP_State_Name or LP_State_Expr.\n \n+         --      (Ada2020) : the expression can be a reduction_expression_\n+         --      psarameter, i.e. a box or  < Simple_Expression >\n+\n          --      Note: if and case expressions (without an extra level of\n          --      parentheses) are permitted in this context).\n \n@@ -652,6 +656,10 @@ package body Ch4 is\n          --      If there is at least one occurrence of identifier => (but\n          --      none of the other cases apply), then we have a call.\n \n+         --    < simple_expression >\n+         --    In Ada 2020 this is a reduction expression parameter that\n+         --    specifies the initial value of the reduction.\n+\n          --  Test for Id => case\n \n          if Token = Tok_Identifier then\n@@ -670,9 +678,27 @@ package body Ch4 is\n             end if;\n          end if;\n \n-         --  Here we have an expression after all\n+         --  Here we have an expression after all, which may be a reduction\n+         --  expression with a binary operator\n \n-         Expr_Node := P_Expression_Or_Range_Attribute_If_OK;\n+         if Token = Tok_Less then\n+            Scan; -- past <\n+\n+            Expr_Node :=\n+              New_Node (N_Reduction_Expression_Parameter, Token_Ptr);\n+            Set_Expression (Expr_Node, P_Simple_Expression);\n+\n+            if Token = Tok_Greater then\n+               Scan;\n+            else\n+               Error_Msg_N\n+                 (\"malformed reduction expression parameter\", Expr_Node);\n+               raise Error_Resync;\n+            end if;\n+\n+         else\n+            Expr_Node := P_Expression_Or_Range_Attribute_If_OK;\n+         end if;\n \n          --  Check cases of discrete range for a slice\n \n@@ -1399,8 +1425,13 @@ package body Ch4 is\n \n          elsif Token = Tok_For then\n             Aggregate_Node := New_Node (N_Aggregate, Lparen_Sloc);\n-            Expr_Node := P_Iterated_Component_Association;\n-            goto Aggregate;\n+            Expr_Node := P_Iterated_Component_Assoc_Or_Reduction;\n+\n+            if Nkind (Expr_Node) = N_Reduction_Expression then\n+               return Expr_Node;\n+            else\n+               goto Aggregate;\n+            end if;\n          end if;\n \n          --  Scan expression, handling box appearing as positional argument\n@@ -1431,6 +1462,15 @@ package body Ch4 is\n                Aggregate_Node := New_Node (N_Delta_Aggregate, Lparen_Sloc);\n                Set_Expression (Aggregate_Node, Expr_Node);\n                Expr_Node := Empty;\n+\n+               if Nkind (Aggregate_Node) = N_Delta_Aggregate\n+                 and then (Token = Tok_Arrow or else Token = Tok_Others)\n+               then\n+                  Error_Msg_SC\n+                    (\"expect record component association in delta aggregate\");\n+                  raise Error_Resync;\n+               end if;\n+\n                goto Aggregate;\n \n             else\n@@ -1613,7 +1653,7 @@ package body Ch4 is\n             Expr_Node := Empty;\n \n          elsif Token = Tok_For then\n-            Expr_Node := P_Iterated_Component_Association;\n+            Expr_Node := P_Iterated_Component_Assoc_Or_Reduction;\n \n          else\n             Save_Scan_State (Scan_State); -- at start of expression\n@@ -1666,7 +1706,7 @@ package body Ch4 is\n \n    begin\n       if Token = Tok_For then\n-         return P_Iterated_Component_Association;\n+         return P_Iterated_Component_Assoc_Or_Reduction;\n       end if;\n \n       Assoc_Node := New_Node (N_Component_Association, Token_Ptr);\n@@ -2827,7 +2867,7 @@ package body Ch4 is\n                      end if;\n                   else\n                      Restore_Scan_State (Scan_State);  -- To FOR\n-                     Node1 := P_Iterated_Component_Association;\n+                     Node1 := P_Iterated_Component_Assoc_Or_Reduction;\n                   end if;\n \n                   return Node1;\n@@ -2854,6 +2894,18 @@ package body Ch4 is\n                Node1 := P_Name;\n                return Node1;\n \n+            --  Ada2020: reduction expression parameter\n+\n+            when Tok_Less =>\n+               Scan; -- past <\n+\n+               Node1 :=\n+                 New_Node (N_Reduction_Expression_Parameter, Token_Ptr);\n+               Set_Expression (Node1, P_Simple_Expression);\n+\n+               Scan; -- past >\n+               return Node1;\n+\n             --  Anything else is illegal as the first token of a primary, but\n             --  we test for some common errors, to improve error messages.\n \n@@ -3298,33 +3350,195 @@ package body Ch4 is\n       return Case_Alt_Node;\n    end P_Case_Expression_Alternative;\n \n-   --------------------------------------\n-   -- P_Iterated_Component_Association --\n-   --------------------------------------\n+   ---------------------------------------------\n+   -- P_Iterated_Component_Assoc_Or_Reduction --\n+   ---------------------------------------------\n \n    --  ITERATED_COMPONENT_ASSOCIATION ::=\n    --    for DEFINING_IDENTIFIER in DISCRETE_CHOICE_LIST => EXPRESSION\n \n-   function P_Iterated_Component_Association return Node_Id is\n+   function P_Iterated_Component_Assoc_Or_Reduction return Node_Id is\n+      Expr : Node_Id;\n+\n+      function OK_Reduction_Expression_Parameter (L : List_Id) return Boolean;\n+      --  Check that if a reduction_expression_Parameter appears, it is a\n+      --  single one.\n+\n+      ---------------------------------------\n+      -- OK_Reduction_Expression_Parameter --\n+      ---------------------------------------\n+\n+      function OK_Reduction_Expression_Parameter\n+        (L : List_Id) return Boolean\n+      is\n+         Actual : Node_Id;\n+         Num    : Int := 0;\n+         Seen   : Boolean;\n+\n+      begin\n+         Seen := False;\n+         Actual := First (L);\n+         while Present (Actual) loop\n+            if Nkind (Actual) = N_Reduction_Expression_Parameter then\n+               if Seen then\n+                  Error_Msg_N (\"only one reduction parameter allowed\", Expr);\n+               else\n+                  Seen := True;\n+               end if;\n+            end if;\n+\n+            Num := Num + 1;\n+            Next (Actual);\n+         end loop;\n+\n+         if Seen and then Num > 2 then\n+            Error_Msg_N (\"too many parameters in reduction function\", Expr);\n+         end if;\n+\n+         return Seen;\n+      end OK_Reduction_Expression_Parameter;\n+\n+      --  Local variables\n+\n+      Lparen     : constant Boolean := Prev_Token = Tok_Left_Paren;\n       Assoc_Node : Node_Id;\n+      State      : Saved_Scan_State;\n+\n+   --  Start of processing for P_Iterated_Component_Assoc_Or_Reduction\n \n    begin\n       Scan;  --  past FOR\n       Assoc_Node :=\n         New_Node (N_Iterated_Component_Association, Prev_Token_Ptr);\n+\n+      Save_Scan_State (State);\n       Set_Defining_Identifier (Assoc_Node, P_Defining_Identifier);\n-      T_In;\n-      Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n-      TF_Arrow;\n-      Set_Expression (Assoc_Node, P_Expression);\n+\n+      if Token = Tok_In then\n+         Scan; --  past in\n+\n+         Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n+         TF_Arrow;\n+\n+         if Token = Tok_Less then\n+            Restore_Scan_State (State);\n+            return P_Reduction_Expression (Lparen);\n+         else\n+            Expr := P_Expression;\n+         end if;\n+\n+         if Nkind (Expr) = N_Function_Call\n+           and then OK_Reduction_Expression_Parameter\n+                      (Parameter_Associations (Expr))\n+         then\n+            Restore_Scan_State (State);\n+            return P_Reduction_Expression (Lparen);\n+\n+         elsif Nkind (Expr) in N_Op\n+           and then\n+             Nkind (Right_Opnd (Expr)) = N_Reduction_Expression_Parameter\n+         then\n+            return P_Reduction_Expression (Lparen);\n+\n+         elsif Nkind (Expr) in N_Binary_Op\n+           and then\n+             Nkind (Left_Opnd (Expr)) = N_Reduction_Expression_Parameter\n+         then\n+            return P_Reduction_Expression (Lparen);\n+\n+         elsif Nkind (Expr) = N_Indexed_Component\n+           and then OK_Reduction_Expression_Parameter (Expressions (Expr))\n+         then\n+            Restore_Scan_State (State);\n+            return P_Reduction_Expression (Lparen);\n+         end if;\n+\n+         Set_Expression (Assoc_Node, Expr);\n+         if Ada_Version < Ada_2020 then\n+            Error_Msg_SC (\"iterated component is an Ada 2020 extension\");\n+            Error_Msg_SC (\"\\compile with -gnatX\");\n+         end if;\n+\n+         return Assoc_Node;\n+\n+      elsif Token = Tok_Of then\n+         Restore_Scan_State (State);\n+         return P_Reduction_Expression (Lparen);\n+\n+      else\n+         raise Error_Resync;\n+      end if;\n+   end P_Iterated_Component_Assoc_Or_Reduction;\n+\n+   ----------------------------\n+   -- P_Reduction_Expression --\n+   ----------------------------\n+\n+   function P_Reduction_Expression (Lparen : Boolean) return Node_Id is\n+      Expr           : Node_Id;\n+      I_Spec         : Node_Id;\n+      Left_Opnd      : Node_Id;\n+      Reduction_Node : Node_Id;\n+\n+   begin\n+      Reduction_Node := New_Node (N_Reduction_Expression, Prev_Token_Ptr);\n+\n+      I_Spec := P_Loop_Parameter_Specification;\n+\n+      if Nkind (I_Spec) = N_Loop_Parameter_Specification then\n+         Set_Loop_Parameter_Specification (Reduction_Node, I_Spec);\n+      else\n+         Set_Iterator_Specification (Reduction_Node, I_Spec);\n+      end if;\n+\n+      T_Arrow;\n+      if Token = Tok_Less and then False then\n+         Scan; -- past <\n+\n+         Left_Opnd := New_Node (N_Reduction_Expression_Parameter, Token_Ptr);\n+         Set_Expression (Left_Opnd, P_Simple_Expression);\n+\n+         Scan; -- past >\n+\n+         if Token = Tok_Plus then\n+            Set_Expression\n+              (Reduction_Node, New_Op_Node (N_Op_Add, Token_Ptr));\n+         else\n+            Set_Expression\n+              (Reduction_Node, New_Op_Node (N_Op_Concat, Token_Ptr));\n+         end if;\n+\n+         Scan; -- past operstor\n+         Set_Left_Opnd (Expression (Reduction_Node), Left_Opnd);\n+         Set_Right_Opnd (Expression (Reduction_Node), P_Primary);\n+\n+      else\n+         Expr := P_Expression;\n+         Set_Expression (Reduction_Node, Expr);\n+\n+         --  if Nkind (Expr) = N_Indexed_Component\n+         --    and then List_Length (Expressions (Expr)) /= 2\n+         --  then\n+         --     Error_Msg_N\n+         --        (\"combiner function call must have two arguments\", Expr);\n+         --  end if;\n+      end if;\n \n       if Ada_Version < Ada_2020 then\n-         Error_Msg_SC (\"iterated component is an Ada 2020 extension\");\n+         Error_Msg_SC (\"Reduction_Expression is an Ada 2020 extension\");\n          Error_Msg_SC (\"\\compile with -gnatX\");\n       end if;\n \n-      return Assoc_Node;\n-   end P_Iterated_Component_Association;\n+      if not (Lparen and then Token = Tok_Right_Paren) then\n+         Error_Msg\n+           (\"reduction expression must be parenthesized\",\n+            Sloc (Reduction_Node));\n+      else\n+         Scan; -- past ???\n+      end if;\n+\n+      return Reduction_Node;\n+   end P_Reduction_Expression;\n \n    ---------------------\n    -- P_If_Expression --\n@@ -3559,7 +3773,7 @@ package body Ch4 is\n             --  an aggregate.\n \n             Restore_Scan_State (Scan_State);\n-            Result := P_Iterated_Component_Association;\n+            Result := P_Iterated_Component_Assoc_Or_Reduction;\n          end if;\n \n       --  No other possibility should exist (caller was supposed to check)"}, {"sha": "d6e61b09606e4674eb156dac097ddba33352daf2", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -515,6 +515,12 @@ package body Sem is\n          when N_Record_Representation_Clause =>\n             Analyze_Record_Representation_Clause (N);\n \n+         when N_Reduction_Expression =>\n+            Analyze_Reduction_Expression (N);\n+\n+         when N_Reduction_Expression_Parameter =>\n+            Analyze_Reduction_Expression_Parameter (N);\n+\n          when N_Reference =>\n             Analyze_Reference (N);\n "}, {"sha": "4791bf8c22788d6ccb4af2385bb509d22dda9239", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -4343,6 +4343,79 @@ package body Sem_Ch4 is\n       Check_Function_Writable_Actuals (N);\n    end Analyze_Range;\n \n+   -----------------------------------\n+   -- Analyze_Reduction_Expression --\n+   -----------------------------------\n+\n+   procedure Analyze_Reduction_Expression (N : Node_Id) is\n+      Expr    : constant Node_Id := Expression (N);\n+      QE_Scop : Entity_Id;\n+\n+   begin\n+      QE_Scop := New_Internal_Entity (E_Loop, Current_Scope, Sloc (N), 'L');\n+      Set_Etype  (QE_Scop, Standard_Void_Type);\n+      Set_Scope  (QE_Scop, Current_Scope);\n+      Set_Parent (QE_Scop, N);\n+\n+      Push_Scope (QE_Scop);\n+\n+      --  All constituents are preanalyzed and resolved to avoid untimely\n+      --  generation of various temporaries and types. Full analysis and\n+      --  expansion is carried out when the reduction expression is\n+      --  transformed into an expression with actions.\n+\n+      if Present (Iterator_Specification (N)) then\n+         Preanalyze (Iterator_Specification (N));\n+\n+      else pragma Assert (Present (Loop_Parameter_Specification (N)));\n+         declare\n+            Loop_Par : constant Node_Id := Loop_Parameter_Specification (N);\n+\n+         begin\n+            Preanalyze (Loop_Par);\n+\n+            if Nkind (Discrete_Subtype_Definition (Loop_Par)) = N_Function_Call\n+              and then Parent (Loop_Par) /= N\n+            then\n+               --  The parser cannot distinguish between a loop specification\n+               --  and an iterator specification. If after pre-analysis the\n+               --  proper form has been recognized, rewrite the expression to\n+               --  reflect the right kind. This is needed for proper ASIS\n+               --  navigation. If expansion is enabled, the transformation is\n+               --  performed when the expression is rewritten as a loop.\n+\n+               Set_Iterator_Specification (N,\n+                 New_Copy_Tree (Iterator_Specification (Parent (Loop_Par))));\n+\n+               Set_Defining_Identifier (Iterator_Specification (N),\n+                 Relocate_Node (Defining_Identifier (Loop_Par)));\n+               Set_Name (Iterator_Specification (N),\n+                 Relocate_Node (Discrete_Subtype_Definition (Loop_Par)));\n+               Set_Comes_From_Source (Iterator_Specification (N),\n+                 Comes_From_Source (Loop_Parameter_Specification (N)));\n+               Set_Loop_Parameter_Specification (N, Empty);\n+            end if;\n+         end;\n+      end if;\n+\n+      Preanalyze (Expr);\n+      End_Scope;\n+\n+      Set_Etype (N, Etype (Expr));\n+   end Analyze_Reduction_Expression;\n+\n+   --------------------------------------------\n+   -- Analyze_Reduction_Expression_Parameter --\n+   --------------------------------------------\n+\n+   procedure Analyze_Reduction_Expression_Parameter (N : Node_Id) is\n+      Expr : constant Node_Id := Expression (N);\n+\n+   begin\n+      Analyze (Expr);\n+      Set_Etype (N, Etype (Expr));\n+   end Analyze_Reduction_Expression_Parameter;\n+\n    -----------------------\n    -- Analyze_Reference --\n    -----------------------"}, {"sha": "f10e2bf12622a1f8d8735125845ba52ef5d1eb3d", "filename": "gcc/ada/sem_ch4.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.ads?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,8 @@ package Sem_Ch4  is\n    procedure Analyze_Qualified_Expression      (N : Node_Id);\n    procedure Analyze_Quantified_Expression     (N : Node_Id);\n    procedure Analyze_Range                     (N : Node_Id);\n+   procedure Analyze_Reduction_Expression      (N : Node_Id);\n+   procedure Analyze_Reduction_Expression_Parameter (N : Node_Id);\n    procedure Analyze_Reference                 (N : Node_Id);\n    procedure Analyze_Selected_Component        (N : Node_Id);\n    procedure Analyze_Short_Circuit             (N : Node_Id);"}, {"sha": "1139a56136e70cf948f529456cf13b3b0f37ff25", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -366,13 +366,13 @@ package body Sem_Ch6 is\n \n             procedure Check_And_Freeze_Type (Typ : Entity_Id) is\n             begin\n-               --  Skip Itypes created by the preanalysis, and itypes\n-               --  whose scope is another type (i.e. component subtypes\n-               --  that depend on a discriminant),\n+               --  Skip Itypes created by the preanalysis, and itypes whose\n+               --  scope is another type (i.e. component subtypes that depend\n+               --  on a discriminant),\n \n                if Is_Itype (Typ)\n                  and then (Scope_Within_Or_Same (Scope (Typ), Def_Id)\n-                   or else Is_Type (Scope (Typ)))\n+                            or else Is_Type (Scope (Typ)))\n                then\n                   return;\n                end if;\n@@ -5825,25 +5825,24 @@ package body Sem_Ch6 is\n    ------------------------------\n \n    procedure Check_Delayed_Subprogram (Designator : Entity_Id) is\n-      F : Entity_Id;\n-\n       procedure Possible_Freeze (T : Entity_Id);\n-      --  T is the type of either a formal parameter or of the return type.\n-      --  If T is not yet frozen and needs a delayed freeze, then the\n-      --  subprogram itself must be delayed.\n+      --  T is the type of either a formal parameter or of the return type. If\n+      --  T is not yet frozen and needs a delayed freeze, then the subprogram\n+      --  itself must be delayed.\n \n       ---------------------\n       -- Possible_Freeze --\n       ---------------------\n \n       procedure Possible_Freeze (T : Entity_Id) is\n          Scop : constant Entity_Id := Scope (Designator);\n+\n       begin\n-         --  If the subprogram appears within a package instance (which\n-         --  may be the wrapper package of a subprogram instance) the\n-         --  freeze node for that package will freeze the subprogram at\n-         --  the proper place, so do not emit a freeze node for the\n-         --  subprogram, given that it may appear in the wrong scope.\n+         --  If the subprogram appears within a package instance (which may be\n+         --  the wrapper package of a subprogram instance) the freeze node for\n+         --  that package will freeze the subprogram at the proper place, so\n+         --  do not emit a freeze node for the subprogram, given that it may\n+         --  appear in the wrong scope.\n \n          if Ekind (Scop) = E_Package\n            and then not Comes_From_Source (Scop)\n@@ -5860,9 +5859,12 @@ package body Sem_Ch6 is\n          then\n             Set_Has_Delayed_Freeze (Designator);\n          end if;\n-\n       end Possible_Freeze;\n \n+      --  Local variables\n+\n+      F : Entity_Id;\n+\n    --  Start of processing for Check_Delayed_Subprogram\n \n    begin\n@@ -5872,8 +5874,8 @@ package body Sem_Ch6 is\n       Possible_Freeze (Etype (Designator));\n       Possible_Freeze (Base_Type (Etype (Designator))); -- needed ???\n \n-      --  Need delayed freeze if any of the formal types themselves need\n-      --  a delayed freeze and are not yet frozen.\n+      --  Need delayed freeze if any of the formal types themselves need a\n+      --  delayed freeze and are not yet frozen.\n \n       F := First_Formal (Designator);\n       while Present (F) loop\n@@ -5882,17 +5884,19 @@ package body Sem_Ch6 is\n          Next_Formal (F);\n       end loop;\n \n-      --  Mark functions that return by reference. Note that it cannot be\n-      --  done for delayed_freeze subprograms because the underlying\n-      --  returned type may not be known yet (for private types)\n+      --  Mark functions that return by reference. Note that it cannot be done\n+      --  for delayed_freeze subprograms because the underlying returned type\n+      --  may not be known yet (for private types).\n \n       if not Has_Delayed_Freeze (Designator) and then Expander_Active then\n          declare\n             Typ  : constant Entity_Id := Etype (Designator);\n             Utyp : constant Entity_Id := Underlying_Type (Typ);\n+\n          begin\n             if Is_Limited_View (Typ) then\n                Set_Returns_By_Ref (Designator);\n+\n             elsif Present (Utyp) and then CW_Or_Has_Controlled_Part (Utyp) then\n                Set_Returns_By_Ref (Designator);\n             end if;"}, {"sha": "d98d9cf04b46d6e7e8515bd72151f90b090f7c48", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 43, "deletions": 71, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -2752,10 +2752,6 @@ package body Sem_Prag is\n       --  A list of all initialization items processed so far. This list is\n       --  used to detect duplicate items.\n \n-      Non_Null_Seen : Boolean := False;\n-      Null_Seen     : Boolean := False;\n-      --  Flags used to check the legality of a null initialization list\n-\n       States_And_Objs : Elist_Id := No_Elist;\n       --  A list of all abstract states and objects declared in the visible\n       --  declarations of the related package. This list is used to detect the\n@@ -2785,91 +2781,67 @@ package body Sem_Prag is\n          Item_Id : Entity_Id;\n \n       begin\n-         --  Null initialization list\n-\n-         if Nkind (Item) = N_Null then\n-            if Null_Seen then\n-               SPARK_Msg_N (\"multiple null initializations not allowed\", Item);\n-\n-            elsif Non_Null_Seen then\n-               SPARK_Msg_N\n-                 (\"cannot mix null and non-null initialization items\", Item);\n-            else\n-               Null_Seen := True;\n-            end if;\n-\n-         --  Initialization item\n-\n-         else\n-            Non_Null_Seen := True;\n-\n-            if Null_Seen then\n-               SPARK_Msg_N\n-                 (\"cannot mix null and non-null initialization items\", Item);\n-            end if;\n-\n-            Analyze       (Item);\n-            Resolve_State (Item);\n+         Analyze       (Item);\n+         Resolve_State (Item);\n \n-            if Is_Entity_Name (Item) then\n-               Item_Id := Entity_Of (Item);\n-\n-               if Present (Item_Id)\n-                 and then Ekind_In (Item_Id, E_Abstract_State,\n-                                             E_Constant,\n-                                             E_Variable)\n-               then\n-                  --  When the initialization item is undefined, it appears as\n-                  --  Any_Id. Do not continue with the analysis of the item.\n+         if Is_Entity_Name (Item) then\n+            Item_Id := Entity_Of (Item);\n \n-                  if Item_Id = Any_Id then\n-                     null;\n+            if Present (Item_Id)\n+              and then Ekind_In (Item_Id, E_Abstract_State,\n+                                          E_Constant,\n+                                          E_Variable)\n+            then\n+               --  When the initialization item is undefined, it appears as\n+               --  Any_Id. Do not continue with the analysis of the item.\n \n-                  --  The state or variable must be declared in the visible\n-                  --  declarations of the package (SPARK RM 7.1.5(7)).\n+               if Item_Id = Any_Id then\n+                  null;\n \n-                  elsif not Contains (States_And_Objs, Item_Id) then\n-                     Error_Msg_Name_1 := Chars (Pack_Id);\n-                     SPARK_Msg_NE\n-                       (\"initialization item & must appear in the visible \"\n-                        & \"declarations of package %\", Item, Item_Id);\n+               --  The state or variable must be declared in the visible\n+               --  declarations of the package (SPARK RM 7.1.5(7)).\n \n-                  --  Detect a duplicate use of the same initialization item\n-                  --  (SPARK RM 7.1.5(5)).\n+               elsif not Contains (States_And_Objs, Item_Id) then\n+                  Error_Msg_Name_1 := Chars (Pack_Id);\n+                  SPARK_Msg_NE\n+                    (\"initialization item & must appear in the visible \"\n+                     & \"declarations of package %\", Item, Item_Id);\n \n-                  elsif Contains (Items_Seen, Item_Id) then\n-                     SPARK_Msg_N (\"duplicate initialization item\", Item);\n+               --  Detect a duplicate use of the same initialization item\n+               --  (SPARK RM 7.1.5(5)).\n \n-                  --  The item is legal, add it to the list of processed states\n-                  --  and variables.\n+               elsif Contains (Items_Seen, Item_Id) then\n+                  SPARK_Msg_N (\"duplicate initialization item\", Item);\n \n-                  else\n-                     Append_New_Elmt (Item_Id, Items_Seen);\n+               --  The item is legal, add it to the list of processed states\n+               --  and variables.\n \n-                     if Ekind (Item_Id) = E_Abstract_State then\n-                        Append_New_Elmt (Item_Id, States_Seen);\n-                     end if;\n+               else\n+                  Append_New_Elmt (Item_Id, Items_Seen);\n \n-                     if Present (Encapsulating_State (Item_Id)) then\n-                        Append_New_Elmt (Item_Id, Constits_Seen);\n-                     end if;\n+                  if Ekind (Item_Id) = E_Abstract_State then\n+                     Append_New_Elmt (Item_Id, States_Seen);\n                   end if;\n \n-               --  The item references something that is not a state or object\n-               --  (SPARK RM 7.1.5(3)).\n-\n-               else\n-                  SPARK_Msg_N\n-                    (\"initialization item must denote object or state\", Item);\n+                  if Present (Encapsulating_State (Item_Id)) then\n+                     Append_New_Elmt (Item_Id, Constits_Seen);\n+                  end if;\n                end if;\n \n-            --  Some form of illegal construct masquerading as a name\n-            --  (SPARK RM 7.1.5(3)). This is a syntax error, always report.\n+            --  The item references something that is not a state or object\n+            --  (SPARK RM 7.1.5(3)).\n \n             else\n-               Error_Msg_N\n+               SPARK_Msg_N\n                  (\"initialization item must denote object or state\", Item);\n             end if;\n+\n+         --  Some form of illegal construct masquerading as a name\n+         --  (SPARK RM 7.1.5(3)). This is a syntax error, always report.\n+\n+         else\n+            Error_Msg_N\n+              (\"initialization item must denote object or state\", Item);\n          end if;\n       end Analyze_Initialization_Item;\n "}, {"sha": "969b8bdb0702f4653ffd3c51c364672879a444aa", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -2997,6 +2997,13 @@ package body Sem_Res is\n             when N_Real_Literal =>\n                Resolve_Real_Literal              (N, Ctx_Type);\n \n+            when N_Reduction_Expression =>\n+               null;\n+               --  Resolve (Expression (N),              Ctx_Type);\n+\n+            when N_Reduction_Expression_Parameter =>\n+               null;\n+\n             when N_Reference =>\n                Resolve_Reference                 (N, Ctx_Type);\n "}, {"sha": "d6f8fdc5987ef390782db5ae5924f048fcb441d7", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -1376,6 +1376,12 @@ package body Sem_SPARK is\n                Free_Env (Saved_Env);\n             end;\n \n+         when N_Reduction_Expression =>\n+            null;\n+\n+         when N_Reduction_Expression_Parameter =>\n+            null;\n+\n          --  Analyze the list of associations in the aggregate\n \n          when N_Aggregate =>"}, {"sha": "1790b56ff4c17f67cf29c3cfd16a2bf83f764f69", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -1279,6 +1279,8 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Qualified_Expression\n         or else NT (N).Nkind = N_Raise_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n+        or else NT (N).Nkind = N_Reduction_Expression\n+        or else NT (N).Nkind = N_Reduction_Expression_Parameter\n         or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion\n         or else NT (N).Nkind = N_Unchecked_Expression\n@@ -2223,7 +2225,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Iteration_Scheme\n-        or else NT (N).Nkind = N_Quantified_Expression);\n+        or else NT (N).Nkind = N_Quantified_Expression\n+        or else NT (N).Nkind = N_Reduction_Expression);\n       return Node2 (N);\n    end Iterator_Specification;\n \n@@ -2353,7 +2356,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Iteration_Scheme\n-        or else NT (N).Nkind = N_Quantified_Expression);\n+        or else NT (N).Nkind = N_Quantified_Expression\n+        or else NT (N).Nkind = N_Reduction_Expression);\n       return Node4 (N);\n    end Loop_Parameter_Specification;\n \n@@ -4742,6 +4746,8 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Qualified_Expression\n         or else NT (N).Nkind = N_Raise_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n+        or else NT (N).Nkind = N_Reduction_Expression\n+        or else NT (N).Nkind = N_Reduction_Expression_Parameter\n         or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion\n         or else NT (N).Nkind = N_Unchecked_Expression\n@@ -5686,7 +5692,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Iteration_Scheme\n-        or else NT (N).Nkind = N_Quantified_Expression);\n+        or else NT (N).Nkind = N_Quantified_Expression\n+        or else NT (N).Nkind = N_Reduction_Expression);\n       Set_Node2_With_Parent (N, Val);\n    end Set_Iterator_Specification;\n \n@@ -5816,7 +5823,8 @@ package body Sinfo is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Iteration_Scheme\n-        or else NT (N).Nkind = N_Quantified_Expression);\n+        or else NT (N).Nkind = N_Quantified_Expression\n+        or else NT (N).Nkind = N_Reduction_Expression);\n       Set_Node4_With_Parent (N, Val);\n    end Set_Loop_Parameter_Specification;\n "}, {"sha": "19585936c49b84bf5445de69a0542da138dba580", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -4730,7 +4730,7 @@ package Sinfo is\n       --  since the expander converts case expressions into case statements.\n \n       ---------------------------------\n-      -- 4.5.9 Quantified Expression --\n+      -- 4.5.8 Quantified Expression --\n       ---------------------------------\n \n       --  QUANTIFIED_EXPRESSION ::=\n@@ -4749,6 +4749,31 @@ package Sinfo is\n       --  Condition (Node1)\n       --  All_Present (Flag15)\n \n+      --------------------------------\n+      -- 4.5.9 Reduction Expression --\n+      --------------------------------\n+\n+      --  REDUCTION_EXPRESSION ::=\n+      --    for LOOP_PARAMETER_SPECIFICATION => COMBINER_FUNCTION_CALL\n+      --    for ITERATOR_SPECIFIATION => COMBINER_FUNCTION_CALL\n+\n+      --  At most one of (Iterator_Specification, Loop_Parameter_Specification)\n+      --  is present at a time, in which case the other one is empty.\n+\n+      --  N_Reduction_Expression\n+      --  Sloc points to FOR\n+      --  Iterator_Specification (Node2)\n+      --  Expression (Node3)\n+      --  Loop_Parameter_Specification (Node4)\n+      --  plus fields for expression\n+\n+      --  COMBINER_FUNCTION_CALL => FUNCTION_CALL\n+\n+      --  A Combiner_Function_Call is either a function call (including an\n+      --  operator) with one reduction expression parameter, appearing either\n+      --  as a left operand or as the first actual in the parameter list. In\n+      --  a reduction expression this is represented as an expression.\n+\n       --------------------------\n       -- 4.6  Type Conversion --\n       --------------------------\n@@ -5608,7 +5633,18 @@ package Sinfo is\n       -- 6.4  Actual Parameter --\n       ---------------------------\n \n-      --  EXPLICIT_ACTUAL_PARAMETER ::= EXPRESSION | variable_NAME\n+      --  EXPLICIT_ACTUAL_PARAMETER ::=\n+      --    EXPRESSION | variable_NAME | REDUCTION_EXPRESSION_PARAMETER\n+\n+      ------------------------------------------\n+      -- 6.4.6 Reduction_Expression_Parameter --\n+      ------------------------------------------\n+\n+      --  REDUCTION_EXPRESSION_PARAMETER ::= <> | < EXPRESSION >\n+\n+      --  N_Reduction_Expression_Parameter\n+      --  Expression (Node3) (Set to Empty if no expression present)\n+      --  plus fields for expression\n \n       ---------------------------\n       -- 6.5  Return Statement --\n@@ -8732,6 +8768,8 @@ package Sinfo is\n       N_Null,\n       N_Qualified_Expression,\n       N_Quantified_Expression,\n+      N_Reduction_Expression,\n+      N_Reduction_Expression_Parameter,\n       N_Aggregate,\n       N_Allocator,\n       N_Case_Expression,\n@@ -12122,6 +12160,20 @@ package Sinfo is\n         4 => True,    --  Loop_Parameter_Specification (Node4)\n         5 => False),  --  Etype (Node5-Sem)\n \n+     N_Reduction_Expression =>\n+       (1 => False,   --  unused\n+        2 => True,    --  Iterator_Specification (Node2)\n+        3 => True,    --  Expression (Node3)\n+        4 => True,    --  Loop_Parameter_Specification (Node4)\n+        5 => False),  --  Etype (Node5-Sem)\n+\n+     N_Reduction_Expression_Parameter =>\n+       (1 => False,    --  unused\n+        2 => False,    --  unused\n+        3 => True,     --  Expression (Node3)\n+        4 => False,    --  unused\n+        5 => False),   --  Etype (Node5-Sem)\n+\n      N_Allocator =>\n        (1 => False,   --  Storage_Pool (Node1-Sem)\n         2 => False,   --  Procedure_To_Call (Node2-Sem)"}, {"sha": "e8a29933aa18c4616a1cc6f1a5ce361d3ec1b63d", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -3110,6 +3110,28 @@ package body Sprint is\n             Sprint_Indented_List (Component_Clauses (Node));\n             Write_Indent_Str (\"end record;\");\n \n+         when N_Reduction_Expression =>\n+            Write_Str (\" for\");\n+\n+            if Present (Iterator_Specification (Node)) then\n+               Sprint_Node (Iterator_Specification (Node));\n+            else\n+               Sprint_Node (Loop_Parameter_Specification (Node));\n+            end if;\n+\n+            Write_Str (\" => \");\n+            Sprint_Node (Expression (Node));\n+            null;\n+\n+         when N_Reduction_Expression_Parameter =>\n+            Write_Char ('<');\n+\n+            if Present (Expression (Node)) then\n+               Sprint_Node (Expression (Node));\n+            end if;\n+\n+            Write_Char ('>');\n+\n          when N_Reference =>\n             Sprint_Node (Prefix (Node));\n             Write_Str_With_Col_Check_Sloc (\"'reference\");"}, {"sha": "b39797a7da9b0319c0e8d1a117d9a4e6ec06a3a3", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -851,8 +851,7 @@ package Types is\n \n    --  Note on ordering of references. For the tables in Ada.Exceptions units,\n    --  usually the ordering does not matter, and we use the same ordering as\n-   --  is used here (note the requirement in the ordering here that CE/PE/SE\n-   --  codes be kept together, so the subtype declarations work OK).\n+   --  is used here.\n \n    type RT_Exception_Code is\n      (CE_Access_Check_Failed,            -- 00\n@@ -894,9 +893,11 @@ package Types is\n       SE_Explicit_Raise,                 -- 33\n       SE_Infinite_Recursion,             -- 34\n       SE_Object_Too_Large,               -- 35\n-      PE_Stream_Operation_Not_Allowed);  -- 36\n+      PE_Stream_Operation_Not_Allowed,   -- 36\n+      PE_Build_In_Place_Mismatch);       -- 37\n \n-   Last_Reason_Code : constant := 36;\n+   Last_Reason_Code : constant :=\n+     RT_Exception_Code'Pos (RT_Exception_Code'Last);\n    --  Last reason code\n \n    type Reason_Kind is (CE_Reason, PE_Reason, SE_Reason);\n@@ -937,6 +938,7 @@ package Types is\n               PE_Unchecked_Union_Restriction    => PE_Reason,\n               PE_Non_Transportable_Actual       => PE_Reason,\n               PE_Stream_Operation_Not_Allowed   => PE_Reason,\n+              PE_Build_In_Place_Mismatch        => PE_Reason,\n \n               SE_Empty_Storage_Pool             => SE_Reason,\n               SE_Explicit_Raise                 => SE_Reason,"}, {"sha": "613dfff67a1dd22e698e51f3c221dfabbe81dd9e", "filename": "gcc/ada/types.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc47ef60c5d11d0302a4f4831080fde792430781/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=fc47ef60c5d11d0302a4f4831080fde792430781", "patch": "@@ -373,6 +373,7 @@ typedef Int Mechanism_Type;\n #define PE_Aliased_Parameters              17\n #define PE_All_Guards_Closed               18\n #define PE_Bad_Predicated_Generic_Type     19\n+#define PE_Build_In_Place_Mismatch         37\n #define PE_Current_Task_In_Entry_Body      20\n #define PE_Duplicated_Entry_Address        21\n #define PE_Explicit_Raise                  22\n@@ -392,4 +393,4 @@ typedef Int Mechanism_Type;\n #define SE_Infinite_Recursion              34\n #define SE_Object_Too_Large                35\n \n-#define LAST_REASON_CODE                   36\n+#define LAST_REASON_CODE                   37"}]}