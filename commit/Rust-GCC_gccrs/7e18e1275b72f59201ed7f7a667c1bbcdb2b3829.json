{"sha": "7e18e1275b72f59201ed7f7a667c1bbcdb2b3829", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UxOGUxMjc1YjcyZjU5MjAxZWQ3ZjdhNjY3YzFiYmNkYjJiMzgyOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-06-13T18:29:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-06-13T18:29:38Z"}, "message": "BUGS: Remove.\n\n\t* BUGS: Remove.\n\t* NEWS: Likewise.\n\nFrom-SVN: r43340", "tree": {"sha": "f4184f1e3749bb8c855ef7533da4fd6c1140920b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4184f1e3749bb8c855ef7533da4fd6c1140920b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e18e1275b72f59201ed7f7a667c1bbcdb2b3829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e18e1275b72f59201ed7f7a667c1bbcdb2b3829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e18e1275b72f59201ed7f7a667c1bbcdb2b3829", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e18e1275b72f59201ed7f7a667c1bbcdb2b3829/comments", "author": null, "committer": null, "parents": [{"sha": "b1b0700d9f8a061b20693ac3313079c5d60198aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0700d9f8a061b20693ac3313079c5d60198aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b0700d9f8a061b20693ac3313079c5d60198aa"}], "stats": {"total": 594, "additions": 5, "deletions": 589}, "files": [{"sha": "fdcb9320f2a155f815c7cc342fa096f8e56abd1a", "filename": "gcc/f/BUGS", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2Ff%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2Ff%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FBUGS?ref=b1b0700d9f8a061b20693ac3313079c5d60198aa", "patch": "@@ -1,157 +0,0 @@\n-_Note:_ This file is automatically generated from the files\n-`bugs0.texi' and `bugs.texi'.  `BUGS' is _not_ a source file, although\n-it is normally included within source distributions.\n-\n-   This file lists known bugs in the GCC-3.1 version of the GNU Fortran\n-compiler.  Copyright (C) 1995,1996,1997,1998,1999,2000 Free Software\n-Foundation, Inc.  You may copy, distribute, and modify it freely as\n-long as you preserve this copyright notice and permission notice.\n-\n-Known Bugs In GNU Fortran\n-*************************\n-\n-   This section identifies bugs that `g77' _users_ might run into in\n-the GCC-3.1 version of `g77'.  This includes bugs that are actually in\n-the `gcc' back end (GBE) or in `libf2c', because those sets of code are\n-at least somewhat under the control of (and necessarily intertwined\n-with) `g77', so it isn't worth separating them out.\n-\n-   For information on bugs in _other_ versions of `g77', see\n-`gcc/gcc/f/NEWS'.  There, lists of bugs fixed in various versions of\n-`g77' can help determine what bugs existed in prior versions.\n-\n-   _Warning:_ The information below is still under development, and\n-might not accurately reflect the `g77' code base of which it is a part.\n-Efforts are made to keep it somewhat up-to-date, but they are\n-particularly concentrated on any version of this information that is\n-distributed as part of a _released_ `g77'.\n-\n-   In particular, while this information is intended to apply to the\n-GCC-3.1 version of `g77', only an official _release_ of that version is\n-expected to contain documentation that is most consistent with the\n-`g77' product in that version.\n-\n-   An online, \"live\" version of this document (derived directly from\n-the mainline, development version of `g77' within `gcc') is available\n-via `http://www.gnu.org/software/gcc/onlinedocs/g77_bugs.html'.  Follow\n-the \"Known Bugs\" link.\n-\n-   For information on bugs that might afflict people who configure,\n-port, build, and install `g77', see \"Problems Installing\" in\n-`gcc/gcc/f/INSTALL'.\n-\n-   The following information was last updated on 2000-11-05:\n-\n-   * `g77' fails to warn about use of a \"live\" iterative-DO variable as\n-     an implied-DO variable in a `WRITE' or `PRINT' statement (although\n-     it does warn about this in a `READ' statement).\n-\n-   * Something about `g77''s straightforward handling of label\n-     references and definitions sometimes prevents the GBE from\n-     unrolling loops.  Until this is solved, try inserting or removing\n-     `CONTINUE' statements as the terminal statement, using the `END DO'\n-     form instead, and so on.\n-\n-   * Some confusion in diagnostics concerning failing `INCLUDE'\n-     statements from within `INCLUDE''d or `#include''d files.\n-\n-   * `g77' assumes that `INTEGER(KIND=1)' constants range from `-2**31'\n-     to `2**31-1' (the range for two's-complement 32-bit values),\n-     instead of determining their range from the actual range of the\n-     type for the configuration (and, someday, for the constant).\n-\n-     Further, it generally doesn't implement the handling of constants\n-     very well in that it makes assumptions about the configuration\n-     that it no longer makes regarding variables (types).\n-\n-     Included with this item is the fact that `g77' doesn't recognize\n-     that, on IEEE-754/854-compliant systems, `0./0.' should produce a\n-     NaN and no warning instead of the value `0.' and a warning.  This\n-     is to be fixed in version 0.6, when `g77' will use the `gcc' back\n-     end's constant-handling mechanisms to replace its own.\n-\n-   * `g77' uses way too much memory and CPU time to process large\n-     aggregate areas having any initialized elements.\n-\n-     For example, `REAL A(1000000)' followed by `DATA A(1)/1/' takes up\n-     way too much time and space, including the size of the generated\n-     assembler file.  This is to be mitigated somewhat in version 0.6.\n-\n-     Version 0.5.18 improves cases like this--specifically, cases of\n-     _sparse_ initialization that leave large, contiguous areas\n-     uninitialized--significantly.  However, even with the\n-     improvements, these cases still require too much memory and CPU\n-     time.\n-\n-     (Version 0.5.18 also improves cases where the initial values are\n-     zero to a much greater degree, so if the above example ends with\n-     `DATA A(1)/0/', the compile-time performance will be about as good\n-     as it will ever get, aside from unrelated improvements to the\n-     compiler.)\n-\n-     Note that `g77' does display a warning message to notify the user\n-     before the compiler appears to hang.\n-\n-   * Previous versions of `g77' didn't emit information on variable and\n-     array members of common blocks and equivalences for use with a\n-     debugger (the `-g' command-line option).  As of the version of\n-     `g77' shipped with version 3.0 of `GCC', this is corrected.\n-\n-     As of Version 0.5.19, a temporary kludge solution is provided\n-     whereby some rudimentary information on a member is written as a\n-     string that is the member's value as a character string.\n-\n-   * When debugging, after starting up the debugger but before being\n-     able to see the source code for the main program unit, the user\n-     must currently set a breakpoint at `MAIN__' (or `MAIN___' or\n-     `MAIN_' if `MAIN__' doesn't exist) and run the program until it\n-     hits the breakpoint.  At that point, the main program unit is\n-     activated and about to execute its first executable statement, but\n-     that's the state in which the debugger should start up, as is the\n-     case for languages like C.\n-\n-   * Debugging `g77'-compiled code using debuggers other than `gdb' is\n-     likely not to work.\n-\n-     Getting `g77' and `gdb' to work together is a known\n-     problem--getting `g77' to work properly with other debuggers, for\n-     which source code often is unavailable to `g77' developers, seems\n-     like a much larger, unknown problem, and is a lower priority than\n-     making `g77' and `gdb' work together properly.\n-\n-     On the other hand, information about problems other debuggers have\n-     with `g77' output might make it easier to properly fix `g77', and\n-     perhaps even improve `gdb', so it is definitely welcome.  Such\n-     information might even lead to all relevant products working\n-     together properly sooner.\n-\n-   * `g77' doesn't work perfectly on 64-bit configurations such as the\n-     Digital Semiconductor (\"DEC\") Alpha.\n-\n-     This problem is largely resolved as of version 0.5.23.  Version\n-     0.6 should solve most or all remaining problems (such as\n-     cross-compiling involving 64-bit machines).\n-\n-   * `g77' currently inserts needless padding for things like `COMMON\n-     A,IPAD' where `A' is `CHARACTER*1' and `IPAD' is `INTEGER(KIND=1)'\n-     on machines like x86, because the back end insists that `IPAD' be\n-     aligned to a 4-byte boundary, but the processor has no such\n-     requirement (though it is usually good for performance).\n-\n-     The `gcc' back end needs to provide a wider array of\n-     specifications of alignment requirements and preferences for\n-     targets, and front ends like `g77' should take advantage of this\n-     when it becomes available.\n-\n-   * The `libf2c' routines that perform some run-time arithmetic on\n-     `COMPLEX' operands were modified circa version 0.5.20 of `g77' to\n-     work properly even in the presence of aliased operands.\n-\n-     While the `g77' and `netlib' versions of `libf2c' differ on how\n-     this is accomplished, the main differences are that we believe the\n-     `g77' version works properly even in the presence of _partially_\n-     aliased operands.\n-\n-     However, these modifications have reduced performance on targets\n-     such as x86, due to the extra copies of operands involved.\n-   "}, {"sha": "a458b28ff49adf0a382226430b962bb5617c3e97", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e18e1275b72f59201ed7f7a667c1bbcdb2b3829/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e18e1275b72f59201ed7f7a667c1bbcdb2b3829/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7e18e1275b72f59201ed7f7a667c1bbcdb2b3829", "patch": "@@ -1,3 +1,8 @@\n+Wed Jun 13 11:22:39 2001  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* BUGS: Remove.\n+\t* NEWS: Likewise.\n+\n 2001-06-10  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* g77install.texi: Remove."}, {"sha": "f9970e341aaadadd4884cebadab7e06c46cef79c", "filename": "gcc/f/NEWS", "status": "removed", "additions": 0, "deletions": 432, "changes": 432, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2Ff%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2Ff%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FNEWS?ref=b1b0700d9f8a061b20693ac3313079c5d60198aa", "patch": "@@ -1,432 +0,0 @@\n-_Note:_ This file is automatically generated from the files\n-`news0.texi' and `news.texi'.  `NEWS' is _not_ a source file, although\n-it is normally included within source distributions.\n-\n-   This file lists news about the GCC-3.1 version (and some other\n-versions) of the GNU Fortran compiler.  Copyright (C)\n-1995,1996,1997,1998,1999,2000 Free Software Foundation, Inc.  You may\n-copy, distribute, and modify it freely as long as you preserve this\n-copyright notice and permission notice.\n-\n-News About GNU Fortran\n-**********************\n-\n-   Changes made to recent versions of GNU Fortran are listed below,\n-with the most recent version first.\n-\n-   The changes are generally listed in order:\n-\n-  1. Code-generation and run-time-library bug-fixes\n-\n-  2. Compiler and run-time-library crashes involving valid code that\n-     have been fixed\n-\n-  3. New features\n-\n-  4. Fixes and enhancements to existing features\n-\n-  5. New diagnostics\n-\n-  6. Internal improvements\n-\n-  7. Miscellany\n-\n-   This order is not strict--for example, some items involve a\n-combination of these elements.\n-\n-   Note that two variants of `g77' are tracked below.  The `egcs'\n-variant is described vis-a-vis previous versions of `egcs' and/or an\n-official FSF version, as appropriate.  Note that all such variants are\n-now obsolete - the information is retained here only for its historical\n-value.\n-\n-   Therefore, `egcs' versions sometimes have multiple listings to help\n-clarify how they differ from other versions, though this can make\n-getting a complete picture of what a particular `egcs' version contains\n-somewhat more difficult.\n-\n-   _Warning:_ The information below is still under development, and\n-might not accurately reflect the `g77' code base of which it is a part.\n-Efforts are made to keep it somewhat up-to-date, but they are\n-particularly concentrated on any version of this information that is\n-distributed as part of a _released_ `g77'.\n-\n-   In particular, while this information is intended to apply to the\n-GCC-3.1 version of `g77', only an official _release_ of that version is\n-expected to contain documentation that is most consistent with the\n-`g77' product in that version.\n-\n-   Nevertheless, information on _previous_ releases of `g77', below, is\n-likely to be more up-to-date and accurate than the equivalent\n-information that accompanied those releases, assuming the last-updated\n-date of the information below is later than the dates of those releases.\n-\n-   That's due to attempts to keep this development version of news\n-about previous `g77' versions up-to-date.\n-\n-   An online, \"live\" version of this document (derived directly from\n-the mainline, development version of `g77' within `gcc') is available at\n-`http://www.gnu.org/software/gcc/onlinedocs/g77_news.html'.\n-\n-   The following information was last updated on 2000-11-05:\n-\n-In development:\n-===============\n-\n-   * Using options `-g', `-ggdb' or `-gdwarf[-2]' (where appropriate\n-     for your target) now also enables debugging information for COMMON\n-     BLOCK and EQUIVALENCE items to be emitted.\n-\n-   * The `TtyNam' intrinsics now set NAME to all spaces (at run time)\n-     if the system has no `ttyname' implementation available.\n-\n-   * Upgrade to `libf2c' as of 1999-06-28.\n-\n-     This fixes a bug whereby input to a `NAMELIST' read involving a\n-     repeat count, such as `K(5)=10*3', was not properly handled by\n-     `libf2c'.  The first item was written to `K(5)', but the remaining\n-     nine were written elsewhere (still within the array), not\n-     necessarily starting at `K(6)'.\n-\n-In 0.5.25, `GCC' 2.95 (`EGCS' 1.2) versus `EGCS' 1.1.2:\n-=======================================================\n-\n-   * `g77' no longer generates bad code for assignments, or other\n-     conversions, of `REAL' or `COMPLEX' constant expressions to type\n-     `INTEGER(KIND=2)' (often referred to as `INTEGER*8').\n-\n-     For example, `INTEGER*8 J; J = 4E10' now works as documented.\n-\n-   * `g77' no longer truncates `INTEGER(KIND=2)' (usually `INTEGER*8')\n-     subscript expressions when evaluating array references on systems\n-     with pointers widers than `INTEGER(KIND=1)' (such as Alphas).\n-\n-   * `g77' no longer generates bad code for an assignment to a\n-     `COMPLEX' variable or array that partially overlaps one or more of\n-     the sources of the same assignment (a very rare construction).  It\n-     now assigns through a temporary, in cases where such partial\n-     overlap is deemed possible.\n-\n-   * `libg2c' (`libf2c') no longer loses track of the file being worked\n-     on during a `BACKSPACE' operation.\n-\n-   * `libg2c' (`libf2c') fixes a bug whereby input to a `NAMELIST' read\n-     involving a repeat count, such as `K(5)=10*3', was not properly\n-     handled by `libf2c'.  The first item was written to `K(5)', but\n-     the remaining nine were written elsewhere (still within the array),\n-     not necessarily starting at `K(6)'.\n-\n-   * Automatic arrays now seem to be working on HP-UX systems.\n-\n-   * The `Date' intrinsic now returns the correct result on big-endian\n-     systems.\n-\n-   * Fix `g77' so it no longer crashes when compiling I/O statements\n-     using keywords that define `INTEGER' values, such as `IOSTAT=J',\n-     where J is other than default `INTEGER' (such as `INTEGER*2').\n-     Instead, it issues a diagnostic.\n-\n-   * Fix `g77' so it properly handles `DATA A/RPT*VAL/', where RPT is\n-     not default `INTEGER', such as `INTEGER*2', instead of producing a\n-     spurious diagnostic.  Also fix `DATA (A(I),I=1,N)', where `N' is\n-     not default `INTEGER' to work instead of crashing `g77'.\n-\n-   * The `-ax' option is now obeyed when compiling Fortran programs.\n-     (It is passed to the `f771' driver.)\n-\n-   * The new `-fbounds-check' option causes `g77' to compile run-time\n-     bounds checks of array subscripts, as well as of substring start\n-     and end points.\n-\n-   * `libg2c' now supports building as multilibbed library, which\n-     provides better support for systems that require options such as\n-     `-mieee' to work properly.\n-\n-   * Source file names with the suffixes `.FOR' and `.FPP' now are\n-     recognized by `g77' as if they ended in `.for' and `.fpp',\n-     respectively.\n-\n-   * The order of arguments to the _subroutine_ forms of the `CTime',\n-     `DTime', `ETime', and `TtyNam' intrinsics has been swapped.  The\n-     argument serving as the returned value for the corresponding\n-     function forms now is the _second_ argument, making these\n-     consistent with the other subroutine forms of `libU77' intrinsics.\n-\n-   * `g77' now warns about a reference to an intrinsic that has an\n-     interface that is not Year 2000 (Y2K) compliant.  Also, `libg2c'\n-     has been changed to increase the likelihood of catching references\n-     to the implementations of these intrinsics using the `EXTERNAL'\n-     mechanism (which would avoid the new warnings).\n-\n-   * `g77' now warns about a reference to a function when the\n-     corresponding _subsequent_ function program unit disagrees with\n-     the reference concerning the type of the function.\n-\n-   * `-fno-emulate-complex' is now the default option.  This should\n-     result in improved performance of code that uses the `COMPLEX'\n-     data type.\n-\n-   * The `-malign-double' option now reliably aligns _all_\n-     double-precision variables and arrays on Intel x86 targets.\n-\n-   * Even without the `-malign-double' option, `g77' reliably aligns\n-     local double-precision variables that are not in `EQUIVALENCE'\n-     areas and not `SAVE''d.\n-\n-   * `g77' now open-codes (\"inlines\") division of `COMPLEX' operands\n-     instead of generating a run-time call to the `libf2c' routines\n-     `c_div' or `z_div', unless the `-Os' option is specified.\n-\n-   * `g77' no longer generates code to maintain `errno', a C-language\n-     concept, when performing operations such as the `SqRt' intrinsic.\n-\n-   * `g77' developers can temporarily use the `-fflatten-arrays' option\n-     to compare how the compiler handles code generation using C-like\n-     constructs as compared to the Fortran-like method constructs\n-     normally used.\n-\n-   * A substantial portion of the `g77' front end's code-generation\n-     component was rewritten.  It now generates code using facilities\n-     more robustly supported by the `gcc' back end.  One effect of this\n-     rewrite is that some codes no longer produce a spurious \"label LAB\n-     used before containing binding contour\" message.\n-\n-   * Support for the `-fugly' option has been removed.\n-\n-   * Improve documentation and indexing, including information on Year\n-     2000 (Y2K) compliance, and providing more information on internals\n-     of the front end.\n-\n-   * Upgrade to `libf2c' as of 1999-05-10.\n-\n-In 0.5.24 versus 0.5.23:\n-========================\n-\n-   There is no `g77' version 0.5.24 at this time, or planned.  0.5.24\n-is the version number designated for bug fixes and, perhaps, some new\n-features added, to 0.5.23.  Version 0.5.23 requires `gcc' 2.8.1, as\n-0.5.24 was planned to require.\n-\n-   Due to `EGCS' becoming `GCC' (which is now an acronym for \"GNU\n-Compiler Collection\"), and `EGCS' 1.2 becoming officially designated\n-`GCC' 2.95, there seems to be no need for an actual 0.5.24 release.\n-\n-   To reduce the confusion already resulting from use of 0.5.24 to\n-designate `g77' versions within `EGCS' versions 1.0 and 1.1, as well as\n-in versions of `g77' documentation and notices during that period,\n-\"mainline\" `g77' version numbering resumes at 0.5.25 with `GCC' 2.95\n-(`EGCS' 1.2), skipping over 0.5.24 as a placeholder version number.\n-\n-   To repeat, there is no `g77' 0.5.24, but there is now a 0.5.25.\n-Please remain calm and return to your keypunch units.\n-\n-In `EGCS' 1.1.2 versus `EGCS' 1.1.1:\n-====================================\n-\n-   * Fix the `IDate' intrinsic (VXT) (in `libg2c') so the returned year\n-     is in the documented, non-Y2K-compliant range of 0-99, instead of\n-     being returned as 100 in the year 2000.\n-\n-   * Fix the `Date_and_Time' intrinsic (in `libg2c') to return the\n-     milliseconds value properly in VALUES(8).\n-\n-   * Fix the `LStat' intrinsic (in `libg2c') to return device-ID\n-     information properly in SARRAY(7).\n-\n-   * Improve documentation.\n-\n-In `EGCS' 1.1.1 versus `EGCS' 1.1:\n-==================================\n-\n-   * Fix `libg2c' so it performs an implicit `ENDFILE' operation (as\n-     appropriate) whenever a `REWIND' is done.\n-\n-     (This bug was introduced in 0.5.23 and `egcs' 1.1 in `g77''s\n-     version of `libf2c'.)\n-\n-   * Fix `libg2c' so it no longer crashes with a spurious diagnostic\n-     upon doing any I/O following a direct formatted write.\n-\n-     (This bug was introduced in 0.5.23 and `egcs' 1.1 in `g77''s\n-     version of `libf2c'.)\n-\n-   * Fix `g77' so it no longer crashes compiling references to the\n-     `Rand' intrinsic on some systems.\n-\n-   * Fix `g77' portion of installation process so it works better on\n-     some systems (those with shells requiring `else true' clauses on\n-     `if' constructs for the completion code to be set properly).\n-\n-In `EGCS' 1.1 versus `EGCS' 1.0.3:\n-==================================\n-\n-   * Fix bugs in the `libU77' intrinsic `HostNm' that wrote one byte\n-     beyond the end of its `CHARACTER' argument, and in the `libU77'\n-     intrinsics `GMTime' and `LTime' that overwrote their arguments.\n-\n-   * Assumed arrays with negative bounds (such as `REAL A(-1:*)') no\n-     longer elicit spurious diagnostics from `g77', even on systems\n-     with pointers having different sizes than integers.\n-\n-     This bug is not known to have existed in any recent version of\n-     `gcc'.  It was introduced in an early release of `egcs'.\n-\n-   * Valid combinations of `EXTERNAL', passing that external as a dummy\n-     argument without explicitly giving it a type, and, in a subsequent\n-     program unit, referencing that external as an external function\n-     with a different type no longer crash `g77'.\n-\n-   * `CASE DEFAULT' no longer crashes `g77'.\n-\n-   * The `-Wunused' option no longer issues a spurious warning about\n-     the \"master\" procedure generated by `g77' for procedures\n-     containing `ENTRY' statements.\n-\n-   * Support `FORMAT(I<EXPR>)' when EXPR is a compile-time constant\n-     `INTEGER' expression.\n-\n-   * Fix `g77' `-g' option so procedures that use `ENTRY' can be\n-     stepped through, line by line, in `gdb'.\n-\n-   * Allow any `REAL' argument to intrinsics `Second' and `CPU_Time'.\n-\n-   * Use `tempnam', if available, to open scratch files (as in\n-     `OPEN(STATUS='SCRATCH')') so that the `TMPDIR' environment\n-     variable, if present, is used.\n-\n-   * `g77''s version of `libf2c' separates out the setting of global\n-     state (such as command-line arguments and signal handling) from\n-     `main.o' into distinct, new library archive members.\n-\n-     This should make it easier to write portable applications that\n-     have their own (non-Fortran) `main()' routine properly set up the\n-     `libf2c' environment, even when `libf2c' (now `libg2c') is a\n-     shared library.\n-\n-   * `g77' no longer installs the `f77' command and `f77.1' man page in\n-     the `/usr' or `/usr/local' heirarchy, even if the `f77-install-ok'\n-     file exists in the source or build directory.  See the\n-     installation documentation for more information.\n-\n-   * `g77' no longer installs the `libf2c.a' library and `f2c.h'\n-     include file in the `/usr' or `/usr/local' heirarchy, even if the\n-     `f2c-install-ok' or `f2c-exists-ok' files exist in the source or\n-     build directory.  See the installation documentation for more\n-     information.\n-\n-   * The `libf2c.a' library produced by `g77' has been renamed to\n-     `libg2c.a'.  It is installed only in the `gcc' \"private\" directory\n-     heirarchy, `gcc-lib'.  This allows system administrators and users\n-     to choose which version of the `libf2c' library from `netlib' they\n-     wish to use on a case-by-case basis.  See the installation\n-     documentation for more information.\n-\n-   * The `f2c.h' include (header) file produced by `g77' has been\n-     renamed to `g2c.h'.  It is installed only in the `gcc' \"private\"\n-     directory heirarchy, `gcc-lib'.  This allows system administrators\n-     and users to choose which version of the include file from\n-     `netlib' they wish to use on a case-by-case basis.  See the\n-     installation documentation for more information.\n-\n-   * The `g77' command now expects the run-time library to be named\n-     `libg2c.a' instead of `libf2c.a', to ensure that a version other\n-     than the one built and installed as part of the same `g77' version\n-     is picked up.\n-\n-   * During the configuration and build process, `g77' creates\n-     subdirectories it needs only as it needs them.  Other cleaning up\n-     of the configuration and build process has been performed as well.\n-\n-   * `install-info' now used to update the directory of Info\n-     documentation to contain an entry for `g77' (during installation).\n-\n-   * Some diagnostics have been changed from warnings to errors, to\n-     prevent inadvertent use of the resulting, probably buggy, programs.\n-     These mostly include diagnostics about use of unsupported features\n-     in the `OPEN', `INQUIRE', `READ', and `WRITE' statements, and\n-     about truncations of various sorts of constants.\n-\n-   * Improve compilation of `FORMAT' expressions so that a null byte is\n-     appended to the last operand if it is a constant.  This provides a\n-     cleaner run-time diagnostic as provided by `libf2c' for statements\n-     like `PRINT '(I1', 42'.\n-\n-   * Improve documentation and indexing.\n-\n-   * The upgrade to `libf2c' as of 1998-06-18 should fix a variety of\n-     problems, including those involving some uses of the `T' format\n-     specifier, and perhaps some build (porting) problems as well.\n-\n-In `EGCS' 1.1 versus `g77' 0.5.23:\n-==================================\n-\n-   * Fix a code-generation bug that afflicted Intel x86 targets when\n-     `-O2' was specified compiling, for example, an old version of the\n-     `DNRM2' routine.\n-\n-     The x87 coprocessor stack was being mismanaged in cases involving\n-     assigned `GOTO' and `ASSIGN'.\n-\n-   * `g77' no longer produces incorrect code and initial values for\n-     `EQUIVALENCE' and `COMMON' aggregates that, due to \"unnatural\"\n-     ordering of members vis-a-vis their types, require initial padding.\n-\n-   * Fix `g77' crash compiling code containing the construct\n-     `CMPLX(0.)' or similar.\n-\n-   * `g77' no longer crashes when compiling code containing\n-     specification statements such as `INTEGER(KIND=7) PTR'.\n-\n-   * `g77' no longer crashes when compiling code such as `J = SIGNAL(1,\n-     2)'.\n-\n-   * `g77' now treats `%LOC(EXPR)' and `LOC(EXPR)' as \"ordinary\"\n-     expressions when they are used as arguments in procedure calls.\n-     This change applies only to global (filewide) analysis, making it\n-     consistent with how `g77' actually generates code for these cases.\n-\n-     Previously, `g77' treated these expressions as denoting special\n-     \"pointer\" arguments for the purposes of filewide analysis.\n-\n-   * Fix `g77' crash (or apparently infinite run-time) when compiling\n-     certain complicated expressions involving `COMPLEX' arithmetic\n-     (especially multiplication).\n-\n-   * Align static double-precision variables and arrays on Intel x86\n-     targets regardless of whether `-malign-double' is specified.\n-\n-     Generally, this affects only local variables and arrays having the\n-     `SAVE' attribute or given initial values via `DATA'.\n-\n-   * The `g77' driver now ensures that `-lg2c' is specified in the link\n-     phase prior to any occurrence of `-lm'.  This prevents\n-     accidentally linking to a routine in the SunOS4 `-lm' library when\n-     the generated code wants to link to the one in `libf2c' (`libg2c').\n-\n-   * `g77' emits more debugging information when `-g' is used.\n-\n-     This new information allows, for example, `which __g77_length_a'\n-     to be used in `gdb' to determine the type of the phantom length\n-     argument supplied with `CHARACTER' variables.\n-\n-     This information pertains to internally-generated type, variable,\n-     and other information, not to the longstanding deficiencies\n-     vis-a-vis `COMMON' and `EQUIVALENCE'.\n-\n-   * The F90 `Date_and_Time' intrinsic now is supported.\n-\n-   * The F90 `System_Clock' intrinsic allows the optional arguments\n-     (except for the `Count' argument) to be omitted.\n-\n-   * Upgrade to `libf2c' as of 1998-06-18.\n-\n-   * Improve documentation and indexing.\n-\n-In previous versions:\n-=====================\n-\n-   Information on previous versions is not provided in this\n-`gcc/gcc/f/NEWS' file, to keep it short.  See `gcc/gcc/f/news.texi', or\n-any of its other derivations (Info, HTML, dvi forms) for such\n-information.\n-"}]}