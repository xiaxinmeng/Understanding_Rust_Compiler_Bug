{"sha": "d801e245eb2de44d83d5733b94a82361075d268c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgwMWUyNDVlYjJkZTQ0ZDgzZDU3MzNiOTRhODIzNjEwNzVkMjY4Yw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-10-02T15:34:28Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-10-02T15:34:28Z"}, "message": "VMClassLoader.java (loadClass): Now native.\n\n\t* java/lang/VMClassLoader.java (loadClass): Now native.\n\t* java/lang/natClassLoader.cc (loadClass): Implement.\n\t* prims.cc (_Jv_RunMain): Initialize ClassLoader.\n\nFrom-SVN: r72038", "tree": {"sha": "0d661c151d898fb68bdb3b3911e26cc2223aaf99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d661c151d898fb68bdb3b3911e26cc2223aaf99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d801e245eb2de44d83d5733b94a82361075d268c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d801e245eb2de44d83d5733b94a82361075d268c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d801e245eb2de44d83d5733b94a82361075d268c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d801e245eb2de44d83d5733b94a82361075d268c/comments", "author": null, "committer": null, "parents": [{"sha": "2a3bf9aa52ffdf56b4450270e05dd33034e23845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3bf9aa52ffdf56b4450270e05dd33034e23845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3bf9aa52ffdf56b4450270e05dd33034e23845"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "d65c26acb4a3f7d5395260a834c862bcc066c59a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d801e245eb2de44d83d5733b94a82361075d268c", "patch": "@@ -1,3 +1,9 @@\n+2003-10-02  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/VMClassLoader.java (loadClass): Now native.\n+\t* java/lang/natClassLoader.cc (loadClass): Implement.\n+\t* prims.cc (_Jv_RunMain): Initialize ClassLoader.\n+\n 2003-10-02  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/InetAddress.java"}, {"sha": "02010e7e9734148bd0fe8f1bb7efd3435165bda3", "filename": "libjava/java/lang/VMClassLoader.java", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2Fjava%2Flang%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2Fjava%2Flang%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FVMClassLoader.java?ref=d801e245eb2de44d83d5733b94a82361075d268c", "patch": "@@ -142,20 +142,14 @@ else if (x instanceof ClassNotFoundException)\n   /**\n    * Helper to load a class from the bootstrap class loader.\n    *\n-   * In libgcj, this does nothing, as the default system loader knows\n-   * how to find classes that have been linked in.\n-   *\n    * @param name the class name to load\n    * @param resolve whether to resolve it\n    * @return the class, loaded by the bootstrap classloader or null\n    * if the class wasn't found. Returning null is equivalent to throwing\n    * a ClassNotFoundException (but a possible performance optimization).\n    */\n-  static final Class loadClass(String name, boolean resolve)\n-    throws ClassNotFoundException\n-  {\n-    return null;\n-  }\n+  static final native Class loadClass(String name, boolean resolve)\n+    throws ClassNotFoundException;\n \n   /**\n    * Helper to load a resource from the bootstrap class loader."}, {"sha": "e3519f33c5b6ea2222b2008ec363a98221c8809f", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=d801e245eb2de44d83d5733b94a82361075d268c", "patch": "@@ -136,6 +136,17 @@ java::lang::VMClassLoader::getPrimitiveClass (jchar type)\n   return _Jv_FindClassFromSignature (sig, NULL);\n }\n \n+jclass\n+java::lang::VMClassLoader::loadClass(jstring name, jboolean resolve)\n+{\n+  _Jv_Utf8Const *utf = _Jv_makeUtf8Const (name);\n+  // FIXME: we culd make _Jv_FindClassFromSignature a template.\n+  jclass klass = _Jv_FindClassInCache (utf, NULL);\n+  if (klass && resolve)\n+    _Jv_InitClass (klass);\n+  return klass;\n+}\n+\n void\n _Jv_WaitForState (jclass klass, int state)\n {"}, {"sha": "3fe65f9672291945105c9b912e33e37c6f4caa1d", "filename": "libjava/prims.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d801e245eb2de44d83d5733b94a82361075d268c/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=d801e245eb2de44d83d5733b94a82361075d268c", "patch": "@@ -983,6 +983,12 @@ _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv,\n       arg_vec = JvConvertArgv (argc - 1, argv + 1);\n #endif\n \n+      // We have to initialize this fairly early, to avoid circular\n+      // class initialization.  In particular we want to start the\n+      // initialization of ClassLoader before we start the\n+      // initialization of VMClassLoader.\n+      _Jv_InitClass (&java::lang::ClassLoader::class$);\n+\n       using namespace gnu::gcj::runtime;\n       if (klass)\n \tmain_thread = new FirstThread (klass, arg_vec);"}]}