{"sha": "afd88efc0530ec39d926c9932e4302cff9a2e526", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZkODhlZmMwNTMwZWMzOWQ5MjZjOTkzMmU0MzAyY2ZmOWEyZTUyNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-31T13:35:41Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-31T13:35:41Z"}, "message": "Fix configure.ac to respect --{enable,disable}-werror option.\n\n2017-05-31  Martin Liska  <mliska@suse.cz>\n\n\t* configure.ac: Add handling of stage2_werror_flags to\n\taction-if-given and to action-if-not-given.\n\t* configure: Regenerate.\n\nFrom-SVN: r248737", "tree": {"sha": "7c6103623e39565d98c677d6ceaf43e0bd42dd61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c6103623e39565d98c677d6ceaf43e0bd42dd61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afd88efc0530ec39d926c9932e4302cff9a2e526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd88efc0530ec39d926c9932e4302cff9a2e526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afd88efc0530ec39d926c9932e4302cff9a2e526", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd88efc0530ec39d926c9932e4302cff9a2e526/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a02d1ad2b2973bcc047715b39df2ff1c69385541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02d1ad2b2973bcc047715b39df2ff1c69385541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a02d1ad2b2973bcc047715b39df2ff1c69385541"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "775d72e7eb158c728e875eeeeb88f3ad87a99d22", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd88efc0530ec39d926c9932e4302cff9a2e526/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd88efc0530ec39d926c9932e4302cff9a2e526/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=afd88efc0530ec39d926c9932e4302cff9a2e526", "patch": "@@ -1,3 +1,9 @@\n+2017-05-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure.ac: Add handling of stage2_werror_flags to\n+\taction-if-given and to action-if-not-given.\n+\t* configure: Regenerate.\n+\n 2017-05-31  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n \n \t* MAINTAINERS: Add self to Write After Approval"}, {"sha": "2cbb4b7ab9ddd0c30c5fecf0ba3d845ce8d11ec7", "filename": "configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd88efc0530ec39d926c9932e4302cff9a2e526/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd88efc0530ec39d926c9932e4302cff9a2e526/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=afd88efc0530ec39d926c9932e4302cff9a2e526", "patch": "@@ -14641,13 +14641,13 @@ fi\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror;\n-fi\n-\n case ${enable_werror} in\n   yes) stage2_werror_flag=\"--enable-werror-always\" ;;\n   *) stage2_werror_flag=\"\" ;;\n esac\n \n+else\n+\n if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental; then\n   case $BUILD_CONFIG in\n   bootstrap-debug)\n@@ -14657,6 +14657,9 @@ if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental;\n   esac\n fi\n \n+fi\n+\n+\n \n \n # Specify what files to not compare during bootstrap."}, {"sha": "82faf06946d5f459df4e8c0904527e0b825cce5c", "filename": "configure.ac", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd88efc0530ec39d926c9932e4302cff9a2e526/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd88efc0530ec39d926c9932e4302cff9a2e526/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=afd88efc0530ec39d926c9932e4302cff9a2e526", "patch": "@@ -3508,12 +3508,14 @@ AC_SUBST(stage1_checking)\n # Enable -Werror in bootstrap stage2 and later.\n AC_ARG_ENABLE(werror,\n [AS_HELP_STRING([--enable-werror],\n-\t\t[enable -Werror in bootstrap stage2 and later])], [], [])\n+\t\t[enable -Werror in bootstrap stage2 and later])],\n+[\n case ${enable_werror} in\n   yes) stage2_werror_flag=\"--enable-werror-always\" ;;\n   *) stage2_werror_flag=\"\" ;;\n esac\n-\n+],\n+[\n if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental; then\n   case $BUILD_CONFIG in\n   bootstrap-debug)\n@@ -3522,6 +3524,7 @@ if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental;\n       stage2_werror_flag=\"--enable-werror-always\" ;;\n   esac\n fi\n+])\n \n AC_SUBST(stage2_werror_flag)\n "}]}