{"sha": "5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3Y2YxMGE2MzM0ZGM5ZmNkOGFkMjM2MmU4MDk5MjBlZTIwNWZmNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-09-17T07:59:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-17T07:59:43Z"}, "message": "[Ada] PR ada/91268 Do not redefine macros\n\nThis should fix PR ada/91268 by only defining macros if not already\ndone.\n\n2019-09-17  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* adaint.c (_REENTRANT, _THREAD_SAFE): Only define if needed.\n\nFrom-SVN: r275774", "tree": {"sha": "98c09882e14d80922c1073bd175845c17ab1c6bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98c09882e14d80922c1073bd175845c17ab1c6bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5387a3f55fedbab8c99677c4021061fbaabec3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5387a3f55fedbab8c99677c4021061fbaabec3ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5387a3f55fedbab8c99677c4021061fbaabec3ff"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "5b1a7d13cb1724b9c340b6cc4071f41f008c588a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "patch": "@@ -1,3 +1,7 @@\n+2019-09-17  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* adaint.c (_REENTRANT, _THREAD_SAFE): Only define if needed.\n+\n 2019-09-17  Arnaud Charlet  <charlet@adacore.com>\n \n \t* libgnat/s-bitfie.ads (Val_Bits, Val_Bytes): Define from"}, {"sha": "c76e9ad5955dca7e7138bfa5c838c7439ed8f966", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "patch": "@@ -35,8 +35,14 @@\n    library calls directly. This file contains all other routines.  */\n \n /* Ensure access to errno is thread safe.  */\n+\n+#ifndef _REENTRANT\n #define _REENTRANT\n+#endif\n+\n+#ifndef _THREAD_SAFE\n #define _THREAD_SAFE\n+#endif\n \n /* Use 64 bit Large File API */\n #if defined (__QNX__)"}]}