{"sha": "320be7e2b4bcf78028c78b0c46f6757ee0597a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwYmU3ZTJiNGJjZjc4MDI4Yzc4YjBjNDZmNjc1N2VlMDU5N2E2Zg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-25T11:27:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-15T11:41:55Z"}, "message": "[Ada] Reuse Append_New in parsing aggregates\n\ngcc/ada/\n\n\t* par-ch4.adb (P_Aggregate_Or_Paren_Expr): Simplify with\n\tAppend_New.", "tree": {"sha": "13d2eab030d5e5011d7dbef0e1a36839b49e3683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13d2eab030d5e5011d7dbef0e1a36839b49e3683"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/320be7e2b4bcf78028c78b0c46f6757ee0597a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320be7e2b4bcf78028c78b0c46f6757ee0597a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320be7e2b4bcf78028c78b0c46f6757ee0597a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320be7e2b4bcf78028c78b0c46f6757ee0597a6f/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "338e513351c03cf66197e8316a69d5459e52f9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338e513351c03cf66197e8316a69d5459e52f9ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338e513351c03cf66197e8316a69d5459e52f9ed"}], "stats": {"total": 36, "additions": 6, "deletions": 30}, "files": [{"sha": "b4eebfec5faefce441e39775feccc5ebffdcdf27", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 6, "deletions": 30, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320be7e2b4bcf78028c78b0c46f6757ee0597a6f/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320be7e2b4bcf78028c78b0c46f6757ee0597a6f/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=320be7e2b4bcf78028c78b0c46f6757ee0597a6f", "patch": "@@ -1580,11 +1580,7 @@ package body Ch4 is\n          --  Deal with others association first. This is a named association\n \n          if No (Expr_Node) then\n-            if No (Assoc_List) then\n-               Assoc_List := New_List;\n-            end if;\n-\n-            Append (P_Record_Or_Array_Component_Association, Assoc_List);\n+            Append_New (P_Record_Or_Array_Component_Association, Assoc_List);\n \n          --  Improper use of WITH\n \n@@ -1612,11 +1608,7 @@ package body Ch4 is\n          elsif Nkind (Expr_Node) in\n            N_Iterated_Component_Association | N_Iterated_Element_Association\n          then\n-            if No (Assoc_List) then\n-               Assoc_List := New_List (Expr_Node);\n-            else\n-               Append_To (Assoc_List, Expr_Node);\n-            end if;\n+            Append_New (Expr_Node, Assoc_List);\n \n          elsif Token = Tok_Comma\n            or else Token = Tok_Right_Paren\n@@ -1630,11 +1622,7 @@ package body Ch4 is\n                   & \"named association)\");\n             end if;\n \n-            if No (Expr_List) then\n-               Expr_List := New_List;\n-            end if;\n-\n-            Append (Expr_Node, Expr_List);\n+            Append_New (Expr_Node, Expr_List);\n \n          --  Check for aggregate followed by left parent, maybe missing comma\n \n@@ -1643,30 +1631,18 @@ package body Ch4 is\n          then\n             T_Comma;\n \n-            if No (Expr_List) then\n-               Expr_List := New_List;\n-            end if;\n-\n-            Append (Expr_Node, Expr_List);\n+            Append_New (Expr_Node, Expr_List);\n \n          elsif Token = Tok_Right_Bracket then\n-            if No (Expr_List) then\n-               Expr_List := New_List;\n-            end if;\n-\n-            Append (Expr_Node, Expr_List);\n+            Append_New (Expr_Node, Expr_List);\n             exit;\n \n          --  Anything else is assumed to be a named association\n \n          else\n             Restore_Scan_State (Scan_State); -- to start of expression\n \n-            if No (Assoc_List) then\n-               Assoc_List := New_List;\n-            end if;\n-\n-            Append (P_Record_Or_Array_Component_Association, Assoc_List);\n+            Append_New (P_Record_Or_Array_Component_Association, Assoc_List);\n          end if;\n \n          exit when not Comma_Present;"}]}