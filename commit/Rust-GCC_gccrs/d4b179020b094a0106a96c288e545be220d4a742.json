{"sha": "d4b179020b094a0106a96c288e545be220d4a742", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRiMTc5MDIwYjA5NGEwMTA2YTk2YzI4OGU1NDViZTIyMGQ0YTc0Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-11-10T17:09:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-11-10T17:09:04Z"}, "message": "libitm: Don't add -mavx if the assembler doesn't support avx.\n\n        * config/x86/x86_avx.cc: Remove #undef __AVX__ hack.  Tidy comments.\n        * Makefile.am (x86_avx.lo): Only add -mavx if ARCH_X86_AVX.\n        * configure.ac (ARCH_X86_AVX): New conditional.\n        * Makefile.in, configure: Rebuild.\n\nFrom-SVN: r181261", "tree": {"sha": "07e6f7b8e7f2e100f0948704bfb12de29858cde2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07e6f7b8e7f2e100f0948704bfb12de29858cde2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4b179020b094a0106a96c288e545be220d4a742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b179020b094a0106a96c288e545be220d4a742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b179020b094a0106a96c288e545be220d4a742", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b179020b094a0106a96c288e545be220d4a742/comments", "author": null, "committer": null, "parents": [{"sha": "992b0aa1cfe185d5666b5627087a830ebb93df24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992b0aa1cfe185d5666b5627087a830ebb93df24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/992b0aa1cfe185d5666b5627087a830ebb93df24"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "4fb699e4acbd9561acc7aebe70f8025a8452d044", "filename": "libitm/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4b179020b094a0106a96c288e545be220d4a742/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4b179020b094a0106a96c288e545be220d4a742/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=d4b179020b094a0106a96c288e545be220d4a742", "patch": "@@ -1,3 +1,10 @@\n+2011-11-10  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/x86/x86_avx.cc: Remove #undef __AVX__ hack.  Tidy comments.\n+\t* Makefile.am (x86_avx.lo): Only add -mavx if ARCH_X86_AVX.\n+\t* configure.ac (ARCH_X86_AVX): New conditional.\n+\t* Makefile.in, configure: Rebuild.\n+\n 2011-11-09  Richard Henderson  <rth@redhat.com>\n \n \t* acinclude.m4 (LIBITM_CHECK_AS_AVX): New."}, {"sha": "b4674a572fce2633fe106596a6039d753f112bf3", "filename": "libitm/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4b179020b094a0106a96c288e545be220d4a742/libitm%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4b179020b094a0106a96c288e545be220d4a742/libitm%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.am?ref=d4b179020b094a0106a96c288e545be220d4a742", "patch": "@@ -48,6 +48,8 @@ libitm_la_SOURCES = \\\n if ARCH_X86\n libitm_la_SOURCES += x86_sse.cc x86_avx.cc\n x86_sse.lo : XCFLAGS += -msse\n+endif\n+if ARCH_X86_AVX\n x86_avx.lo : XCFLAGS += -mavx\n endif\n "}, {"sha": "74261463ebfbf9a578443de6157d4e4743fde009", "filename": "libitm/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4b179020b094a0106a96c288e545be220d4a742/libitm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4b179020b094a0106a96c288e545be220d4a742/libitm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.in?ref=d4b179020b094a0106a96c288e545be220d4a742", "patch": "@@ -1259,7 +1259,7 @@ uninstall-am: uninstall-dvi-am uninstall-html-am uninstall-info-am \\\n \n vpath % $(strip $(search_path))\n @ARCH_X86_TRUE@x86_sse.lo : XCFLAGS += -msse\n-@ARCH_X86_TRUE@x86_avx.lo : XCFLAGS += -mavx\n+@ARCH_X86_AVX_TRUE@x86_avx.lo : XCFLAGS += -mavx\n \n all-local: $(STAMP_GENINSRC)\n "}, {"sha": "6a5e297116bcf0c1487a483ae4d3a5ec8263e859", "filename": "libitm/config/x86/x86_avx.cc", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4b179020b094a0106a96c288e545be220d4a742/libitm%2Fconfig%2Fx86%2Fx86_avx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4b179020b094a0106a96c288e545be220d4a742/libitm%2Fconfig%2Fx86%2Fx86_avx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fx86%2Fx86_avx.cc?ref=d4b179020b094a0106a96c288e545be220d4a742", "patch": "@@ -24,24 +24,20 @@\n \n #include \"config.h\"\n \n-// ??? This is pretty gross, but we're going to frob types of the functions.\n-// Is this better or worse than just admitting we need to do this in pure\n-// assembly?\n-\n-#ifndef HAVE_AS_AVX\n-#undef __AVX__\n-#endif\n-\n #include \"libitm_i.h\"\n #include \"dispatch.h\"\n \n extern \"C\" {\n \n #ifndef HAVE_AS_AVX\n+// If we don't have an AVX capable assembler, we didn't set -mavx on the\n+// command-line either, which means that libitm.h defined neither this type\n+// nor the functions in this file.  Define the type and unconditionally\n+// wrap the file in extern \"C\" to make up for the lack of pre-declaration.\n typedef float _ITM_TYPE_M256 __attribute__((vector_size(32), may_alias));\n #endif\n \n-// ??? Re-define the memcpy implementations so that we can frob the\n+// Re-define the memcpy implementations so that we can frob the\n // interface to deal with possibly missing AVX instruction set support.\n \n #ifdef HAVE_AS_AVX\n@@ -52,10 +48,10 @@ typedef float _ITM_TYPE_M256 __attribute__((vector_size(32), may_alias));\n #else\n /* Emit vmovaps (%rax),%ymm0.  */\n #define RETURN(X) \\\n-  asm volatile(\".byte 0xc5,0xfc,0x28,0x00\" : \"=m\"(X) : \"a\"(&X));\n+  asm volatile(\".byte 0xc5,0xfc,0x28,0x00\" : \"=m\"(X) : \"a\"(&X))\n /* Emit vmovaps %ymm0,(%rax); vzeroupper.  */\n #define STORE(X,Y) \\\n-  asm volatile(\".byte 0xc5,0xfc,0x29,0x00,0xc5,0xf8,0x77\" : \"=m\"(X) : \"a\"(&X));\n+  asm volatile(\".byte 0xc5,0xfc,0x29,0x00,0xc5,0xf8,0x77\" : \"=m\"(X) : \"a\"(&X))\n #define OUTPUT(T)\tvoid\n #define INPUT(T,X)\n #endif\n@@ -92,4 +88,4 @@ _ITM_LM256 (const _ITM_TYPE_M256 *ptr)\n   GTM::GTM_LB (ptr, sizeof (*ptr));\n }\n \n-}\n+} // extern \"C\""}, {"sha": "c0317ccfc4d74e3d2bcc21829a648d97650607ab", "filename": "libitm/configure", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4b179020b094a0106a96c288e545be220d4a742/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4b179020b094a0106a96c288e545be220d4a742/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=d4b179020b094a0106a96c288e545be220d4a742", "patch": "@@ -603,6 +603,8 @@ LTLIBOBJS\n LIBOBJS\n ARCH_FUTEX_FALSE\n ARCH_FUTEX_TRUE\n+ARCH_X86_AVX_FALSE\n+ARCH_X86_AVX_TRUE\n ARCH_X86_FALSE\n ARCH_X86_TRUE\n link_itm\n@@ -11714,7 +11716,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11717 \"configure\"\n+#line 11719 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11820,7 +11822,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11823 \"configure\"\n+#line 11825 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17265,6 +17267,14 @@ else\n   ARCH_X86_FALSE=\n fi\n \n+ if test \"$libitm_cv_as_avx\" = yes; then\n+  ARCH_X86_AVX_TRUE=\n+  ARCH_X86_AVX_FALSE='#'\n+else\n+  ARCH_X86_AVX_TRUE='#'\n+  ARCH_X86_AVX_FALSE=\n+fi\n+\n  if test $enable_linux_futex = yes; then\n   ARCH_FUTEX_TRUE=\n   ARCH_FUTEX_FALSE='#'\n@@ -17418,6 +17428,10 @@ if test -z \"${ARCH_X86_TRUE}\" && test -z \"${ARCH_X86_FALSE}\"; then\n   as_fn_error \"conditional \\\"ARCH_X86\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ARCH_X86_AVX_TRUE}\" && test -z \"${ARCH_X86_AVX_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ARCH_X86_AVX\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${ARCH_FUTEX_TRUE}\" && test -z \"${ARCH_FUTEX_FALSE}\"; then\n   as_fn_error \"conditional \\\"ARCH_FUTEX\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "672b71279e381efc086b13e6daf74c9f7e986095", "filename": "libitm/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4b179020b094a0106a96c288e545be220d4a742/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4b179020b094a0106a96c288e545be220d4a742/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=d4b179020b094a0106a96c288e545be220d4a742", "patch": "@@ -272,6 +272,7 @@ fi\n AC_SUBST(link_itm)\n \n AM_CONDITIONAL([ARCH_X86], [test \"$ARCH\" = x86])\n+AM_CONDITIONAL([ARCH_X86_AVX], [test \"$libitm_cv_as_avx\" = yes])\n AM_CONDITIONAL([ARCH_FUTEX], [test $enable_linux_futex = yes])\n \n AC_CONFIG_FILES(Makefile testsuite/Makefile libitm.spec)"}]}