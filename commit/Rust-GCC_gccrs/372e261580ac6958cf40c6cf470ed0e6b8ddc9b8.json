{"sha": "372e261580ac6958cf40c6cf470ed0e6b8ddc9b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcyZTI2MTU4MGFjNjk1OGNmNDBjNmNmNDcwZWQwZTZiOGRkYzliOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-08T21:50:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-08T21:50:37Z"}, "message": "re PR debug/84456 (gcc.dg/guality/pr49888.c fail)\n\n\tPR debug/84456\n\t* dwarf2out.c (dw_loc_list): If list && loc_list->first->next, call\n\tgen_llsym, otherwise call maybe_gen_llsym.\n\nFrom-SVN: r258371", "tree": {"sha": "83b83fa8ddd4248d1d87a5a49406f68c1d35be60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83b83fa8ddd4248d1d87a5a49406f68c1d35be60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80bac2eb06b1f5660fa46c8b4292e01df745f398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80bac2eb06b1f5660fa46c8b4292e01df745f398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80bac2eb06b1f5660fa46c8b4292e01df745f398"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "5675cdb7c3b6395d6d03486600d0b9dff4172714", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=372e261580ac6958cf40c6cf470ed0e6b8ddc9b8", "patch": "@@ -1,5 +1,9 @@\n 2018-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/84456\n+\t* dwarf2out.c (dw_loc_list): If list && loc_list->first->next, call\n+\tgen_llsym, otherwise call maybe_gen_llsym.\n+\n \tPR inline-asm/84742\n \t* recog.c (asm_operand_ok): Return 0 if multi-character constraint\n \thas ',' character inside of it."}, {"sha": "c39910f26cb3ed08c01ca760642d561d6c746341", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/372e261580ac6958cf40c6cf470ed0e6b8ddc9b8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=372e261580ac6958cf40c6cf470ed0e6b8ddc9b8", "patch": "@@ -17079,7 +17079,10 @@ dw_loc_list (var_loc_list *loc_list, tree decl, int want_address)\n      representable, we don't want to pretend a single entry that was\n      applies to the entire scope in which the variable is\n      available.  */\n-  maybe_gen_llsym (list);\n+  if (list && loc_list->first->next)\n+    gen_llsym (list);\n+  else\n+    maybe_gen_llsym (list);\n \n   return list;\n }"}]}