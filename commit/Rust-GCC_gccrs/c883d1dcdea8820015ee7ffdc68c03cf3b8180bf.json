{"sha": "c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg4M2QxZGNkZWE4ODIwMDE1ZWU3ZmZkYzY4YzAzY2YzYjgxODBiZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-17T14:06:22Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-18T13:26:38Z"}, "message": "libstdc++: Fix vector<bool> printer tests to work in debug mode\n\nThis fixes a compilation error in debug mode, due to std::_Bit_reference\nnot being defined, because it's in namespace std::__cxx1998 instead. We\ncan refer to it as vector<bool>::reference instead, which always works.\n\nThat fixes some compilation errors in debug mode, but the tests fail at\nrun-time instead because the printers for vector<bool> helpers are only\nregistered for the std namespace, not std::__cxx1998. That is fixed by\nusing add_container to register the printers instead of add_version, as\nthe former registers them in the std and std::__cxx1998 namespaces.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* python/libstdcxx/v6/printers.py (StdBitReferencePrinter): Use\n\t'std::vector<bool>::reference' as type name, not _Bit_reference.\n\t(build_libstdcxx_dictionary): Register printers for vector<bool>\n\ttypes in debug mode too.\n\t* testsuite/libstdc++-prettyprinters/simple.cc: Adjust expected\n\toutput for invalid _Bit_reference. Use vector<bool>::reference\n\tinstead of _Bit_reference.\n\t* testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.", "tree": {"sha": "9ef7e36b94efdfc3ec613f26acacd520ab27dfb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ef7e36b94efdfc3ec613f26acacd520ab27dfb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f74433e70ae94a3b5291e45fea488b1cfdee4a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74433e70ae94a3b5291e45fea488b1cfdee4a34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f74433e70ae94a3b5291e45fea488b1cfdee4a34"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "c7da4079a7ddf65419fd07b6a05aabbfe87555ad", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "patch": "@@ -491,14 +491,14 @@ def to_string(self):\n         return bool(self.val['_M_p'].dereference() & (1 << self.val['_M_offset']))\n \n class StdBitReferencePrinter:\n-    \"Print std::_Bit_reference\"\n+    \"Print std::vector<bool>::reference\"\n \n     def __init__(self, typename, val):\n         self.val = val\n \n     def to_string(self):\n         if not self.val['_M_p']:\n-            return 'invalid std::_Bit_reference'\n+            return 'invalid std::vector<bool>::reference'\n         return bool(self.val['_M_p'].dereference() & (self.val['_M_mask']))\n \n class StdTuplePrinter:\n@@ -2052,11 +2052,11 @@ def build_libstdcxx_dictionary ():\n                                         StdDequeIteratorPrinter)\n         libstdcxx_printer.add_version('__gnu_cxx::', '__normal_iterator',\n                                       StdVectorIteratorPrinter)\n-        libstdcxx_printer.add_version('std::', '_Bit_iterator',\n+        libstdcxx_printer.add_container('std::', '_Bit_iterator',\n                                       StdBitIteratorPrinter)\n-        libstdcxx_printer.add_version('std::', '_Bit_const_iterator',\n+        libstdcxx_printer.add_container('std::', '_Bit_const_iterator',\n                                       StdBitIteratorPrinter)\n-        libstdcxx_printer.add_version('std::', '_Bit_reference',\n+        libstdcxx_printer.add_container('std::', '_Bit_reference',\n                                       StdBitReferencePrinter)\n         libstdcxx_printer.add_version('__gnu_cxx::', '_Slist_iterator',\n                                       StdSlistIteratorPrinter)"}, {"sha": "02f762efe28efd0cc36fdf50c3d43697703b2214", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/simple.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc?ref=c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "patch": "@@ -144,19 +144,19 @@ main()\n   std::vector<bool>::iterator vbIt0;\n // { dg-final { note-test vbIt0 {non-dereferenceable iterator for std::vector<bool>} } }\n \n-  std::_Bit_reference br = *vb.begin();\n+  std::vector<bool>::reference br = *vb.begin();\n // { dg-final { note-test br {true} } }\n-  std::_Bit_reference br2 = *vbIt2;\n+  std::vector<bool>::reference br2 = *vbIt2;\n // { dg-final { note-test br2 {true} } }\n-  std::_Bit_reference br3 = *vbIt3;\n+  std::vector<bool>::reference br3 = *vbIt3;\n // { dg-final { note-test br3 {false} } }\n-  std::_Bit_reference br4 = *vbIt4;\n+  std::vector<bool>::reference br4 = *vbIt4;\n // { dg-final { note-test br4 {false} } }\n-  std::_Bit_reference br5 = *vbIt5;\n+  std::vector<bool>::reference br5 = *vbIt5;\n // { dg-final { note-test br5 {true} } }\n \n- std::_Bit_reference br0;\n-// { dg-final { note-test br0 {invalid std::_Bit_reference} } }\n+ std::vector<bool>::reference br0;\n+// { dg-final { note-test br0 {invalid std::vector<bool>::reference} } }\n \n   __gnu_cxx::slist<int> sll;\n   sll.push_front(23);"}, {"sha": "bd6e026a32960526726a84cde08274004554fc76", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/simple11.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c883d1dcdea8820015ee7ffdc68c03cf3b8180bf/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc?ref=c883d1dcdea8820015ee7ffdc68c03cf3b8180bf", "patch": "@@ -137,19 +137,19 @@ main()\n   std::vector<bool>::iterator vbIt0;\n // { dg-final { note-test vbIt0 {non-dereferenceable iterator for std::vector<bool>} } }\n \n-  std::_Bit_reference br = *vb.begin();\n+  std::vector<bool>::reference br = *vb.begin();\n // { dg-final { note-test br {true} } }\n-  std::_Bit_reference br2 = *vbIt2;\n+  std::vector<bool>::reference br2 = *vbIt2;\n // { dg-final { note-test br2 {true} } }\n-  std::_Bit_reference br3 = *vbIt3;\n+  std::vector<bool>::reference br3 = *vbIt3;\n // { dg-final { note-test br3 {false} } }\n-  std::_Bit_reference br4 = *vbIt4;\n+  std::vector<bool>::reference br4 = *vbIt4;\n // { dg-final { note-test br4 {false} } }\n-  std::_Bit_reference br5 = *vbIt5;\n+  std::vector<bool>::reference br5 = *vbIt5;\n // { dg-final { note-test br5 {true} } }\n \n- std::_Bit_reference br0;\n-// { dg-final { note-test br0 {invalid std::_Bit_reference} } }\n+ std::vector<bool>::reference br0;\n+// { dg-final { note-test br0 {invalid std::vector<bool>::reference} } }\n \n   __gnu_cxx::slist<int> sll;\n   sll.push_front(23);"}]}