{"sha": "88a7beb769bd14c1affeb7c801842058e3071ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhhN2JlYjc2OWJkMTRjMWFmZmViN2M4MDE4NDIwNThlMzA3MWFiNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-06-05T16:33:43Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-06-05T16:33:43Z"}, "message": "re PR c++/21619 (__builtin_constant_p(&\"Hello\"[0])?1:-1 not compile-time constant)\n\n\tPR c++/21619\n\t* cp-tree.h (DECL_IS_BUILTIN_CONSTANT_P): New macro.\n\t* parser.c (cp_parser_postfix_expression): Allow non-constant\n\texpressions as arguments to __builtin_constant_p.\n\t* tree.c (builtin_valid_in_constant_expr_p): Use\n\tDECL_IS_BUILTIN_CONSTANT_P.\n\n\tPR c++/21619\n\t* g++.dg/ext/builtin9.C: New test.\n\nFrom-SVN: r100626", "tree": {"sha": "09ed262a183deef78ec843c1e53a4e09cbc6dda4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09ed262a183deef78ec843c1e53a4e09cbc6dda4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88a7beb769bd14c1affeb7c801842058e3071ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a7beb769bd14c1affeb7c801842058e3071ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a7beb769bd14c1affeb7c801842058e3071ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a7beb769bd14c1affeb7c801842058e3071ab6/comments", "author": null, "committer": null, "parents": [{"sha": "1d508aa99c31e13d6712873d5be5ef04a902807d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d508aa99c31e13d6712873d5be5ef04a902807d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d508aa99c31e13d6712873d5be5ef04a902807d"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "3c6f25a1c149eb122bcf5c647c846cb7f83fa11a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=88a7beb769bd14c1affeb7c801842058e3071ab6", "patch": "@@ -1,3 +1,12 @@\n+2005-06-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21619\n+\t* cp-tree.h (DECL_IS_BUILTIN_CONSTANT_P): New macro.\n+\t* parser.c (cp_parser_postfix_expression): Allow non-constant\n+\texpressions as arguments to __builtin_constant_p.\n+\t* tree.c (builtin_valid_in_constant_expr_p): Use\n+\tDECL_IS_BUILTIN_CONSTANT_P. \n+\n 2005-06-03  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/21853"}, {"sha": "bcc6b3fc3ede1288bf6408b69ec73e2b71b5bfd8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=88a7beb769bd14c1affeb7c801842058e3071ab6", "patch": "@@ -1787,6 +1787,12 @@ struct lang_decl GTY(())\n #define DECL_HAS_IN_CHARGE_PARM_P(NODE) \\\n   (DECL_LANG_SPECIFIC (NODE)->decl_flags.has_in_charge_parm_p)\n \n+/* Nonzero if DECL is a declaration of __builtin_constant_p.  */\n+#define DECL_IS_BUILTIN_CONSTANT_P(NODE)\t\t\\\n+ (TREE_CODE (NODE) == FUNCTION_DECL\t\t\t\\\n+  && DECL_BUILT_IN_CLASS (NODE) == BUILT_IN_NORMAL\t\\\n+  && DECL_FUNCTION_CODE (NODE) == BUILT_IN_CONSTANT_P)\n+\n /* Nonzero for _DECL means that this decl appears in (or will appear\n    in) as a member in a RECORD_TYPE or UNION_TYPE node.  It is also for\n    detecting circularity in case members are multiply defined.  In the"}, {"sha": "65442c769d0e3bb875618a42fa1c9f639138a2cc", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=88a7beb769bd14c1affeb7c801842058e3071ab6", "patch": "@@ -4121,10 +4121,34 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p)\n \t  /* postfix-expression ( expression-list [opt] ) */\n \t  {\n \t    bool koenig_p;\n-\t    tree args = (cp_parser_parenthesized_expression_list\n-\t\t\t (parser, false, \n-\t\t\t  /*cast_p=*/false,\n-\t\t\t  /*non_constant_p=*/NULL));\n+\t    bool is_builtin_constant_p;\n+\t    bool saved_integral_constant_expression_p = false;\n+\t    bool saved_non_integral_constant_expression_p = false;\n+\t    tree args;\n+\n+\t    is_builtin_constant_p \n+\t      = DECL_IS_BUILTIN_CONSTANT_P (postfix_expression);\n+\t    if (is_builtin_constant_p)\n+\t      {\n+\t\t/* The whole point of __builtin_constant_p is to allow\n+\t\t   non-constant expressions to appear as arguments.  */\n+\t\tsaved_integral_constant_expression_p\n+\t\t  = parser->integral_constant_expression_p;\n+\t\tsaved_non_integral_constant_expression_p\n+\t\t  = parser->non_integral_constant_expression_p;\n+\t\tparser->integral_constant_expression_p = false;\n+\t      }\n+\t    args = (cp_parser_parenthesized_expression_list\n+\t\t    (parser, /*is_attribute_list=*/false, \n+\t\t     /*cast_p=*/false,\n+\t\t     /*non_constant_p=*/NULL));\n+\t    if (is_builtin_constant_p)\n+\t      {\n+\t\tparser->integral_constant_expression_p\n+\t\t  = saved_integral_constant_expression_p;\n+\t\tparser->non_integral_constant_expression_p\n+\t\t  = saved_non_integral_constant_expression_p;\n+\t      }\n \n \t    if (args == error_mark_node)\n \t      {"}, {"sha": "321988a1a2053508f418927a50fc225ae5a433c1", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=88a7beb769bd14c1affeb7c801842058e3071ab6", "patch": "@@ -225,9 +225,7 @@ builtin_valid_in_constant_expr_p (tree decl)\n {\n   /* At present BUILT_IN_CONSTANT_P is the only builtin we're allowing\n      in constant-expressions.  We may want to add other builtins later. */\n-  return TREE_CODE (decl) == FUNCTION_DECL\n-    && DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL\n-    && DECL_FUNCTION_CODE (decl) == BUILT_IN_CONSTANT_P;\n+  return DECL_IS_BUILTIN_CONSTANT_P (decl);\n }\n \n /* Build a TARGET_EXPR, initializing the DECL with the VALUE.  */"}, {"sha": "0fa5e70056f25f8d98d3e2ba23da04290ff3aa6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88a7beb769bd14c1affeb7c801842058e3071ab6", "patch": "@@ -1,3 +1,8 @@\n+2005-06-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21619\n+\t* g++.dg/ext/builtin9.C: New test.\n+\n 2005-06-05  Dale Johannesen  <dalej@apple.com>\n \n \t* gcc.c-torture/execute/20050603-1.c:  Move to gcc.dg."}, {"sha": "6b2b712deab46cfbf7e69deec83636a7e89e0c94", "filename": "gcc/testsuite/g++.dg/ext/builtin9.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a7beb769bd14c1affeb7c801842058e3071ab6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin9.C?ref=88a7beb769bd14c1affeb7c801842058e3071ab6", "patch": "@@ -0,0 +1,3 @@\n+// PR c++/21619\n+// { dg-options \"\" }\n+int f[__builtin_constant_p(&\"Hello\"[0])?1:-1];"}]}