{"sha": "0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "node_id": "C_kwDOANBUbNoAKDBlYzRlOTNmYjlmYTVlOWQyNDI0NjgzYzVmYWIxMzEwYzhhZTJmNzY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-12T16:39:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-12T16:39:20Z"}, "message": "libgomp: Add omp_in_explicit_task support\n\nThis is pretty straightforward, if gomp_thread ()->task is NULL,\nit can't be explicit task, otherwise if\ngomp_thread ()->task->kind == GOMP_TASK_IMPLICIT, it is an implicit\ntask, otherwise explicit task.\n\n2022-10-12  Jakub Jelinek  <jakub@redhat.com>\n\n\t* omp.h.in (omp_in_explicit_task): Declare.\n\t* omp_lib.h.in (omp_in_explicit_task): Likewise.\n\t* omp_lib.f90.in (omp_in_explicit_task): New interface.\n\t* libgomp.map (OMP_5.2): New symbol version, export\n\tomp_in_explicit_task and omp_in_explicit_task_.\n\t* task.c (omp_in_explicit_task): New function.\n\t* fortran.c (omp_in_explicit_task): Add ialias_redirect.\n\t(omp_in_explicit_task_): New function.\n\t* libgomp.texi (OpenMP 5.2): Mark omp_in_explicit_task as implemented.\n\t* testsuite/libgomp.c-c++-common/task-in-explicit-1.c: New test.\n\t* testsuite/libgomp.c-c++-common/task-in-explicit-2.c: New test.\n\t* testsuite/libgomp.c-c++-common/task-in-explicit-3.c: New test.", "tree": {"sha": "fc09141e665147810f3e29e784bf0d1cb5f61fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc09141e665147810f3e29e784bf0d1cb5f61fdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a58a965eb73253759f6a3e1c7380392557da89c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58a965eb73253759f6a3e1c7380392557da89c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58a965eb73253759f6a3e1c7380392557da89c8"}], "stats": {"total": 204, "additions": 202, "deletions": 2}, "files": [{"sha": "72784ec5dadfcb7b41cefde4fa3921d0fb73d701", "filename": "libgomp/fortran.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ffortran.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ffortran.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ffortran.c?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -76,6 +76,7 @@ ialias_redirect (omp_get_ancestor_thread_num)\n ialias_redirect (omp_get_team_size)\n ialias_redirect (omp_get_active_level)\n ialias_redirect (omp_in_final)\n+ialias_redirect (omp_in_explicit_task)\n ialias_redirect (omp_get_cancellation)\n ialias_redirect (omp_get_proc_bind)\n ialias_redirect (omp_get_num_places)\n@@ -482,6 +483,12 @@ omp_in_final_ (void)\n   return omp_in_final ();\n }\n \n+int32_t\n+omp_in_explicit_task_ (void)\n+{\n+  return omp_in_explicit_task ();\n+}\n+\n void\n omp_set_num_teams_ (const int32_t *num_teams)\n {"}, {"sha": "e76c126128a1e9e5694e4b30d869468f98e0cf75", "filename": "libgomp/libgomp.map", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Flibgomp.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Flibgomp.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.map?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -234,6 +234,12 @@ OMP_5.1.1 {\n \tomp_target_memcpy_rect_async;\n } OMP_5.1;\n \n+OMP_5.2 {\n+  global:\n+\tomp_in_explicit_task;\n+\tomp_in_explicit_task_;\n+} OMP_5.1.1;\n+\n GOMP_1.0 {\n   global:\n \tGOMP_atomic_end;"}, {"sha": "148728ed05f1b8d24782653fcfb331dfdaa099ab", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -360,8 +360,8 @@ to address of matching mapped list item per 5.1, Sect. 2.21.7.2 @tab N @tab\n \n @multitable @columnfractions .60 .10 .25\n @headitem Description @tab Status @tab Comments\n-@item @code{omp_in_explicit_task} routine and @emph{implicit-task-var} ICV\n-      @tab N @tab\n+@item @code{omp_in_explicit_task} routine and @emph{explicit-task-var} ICV\n+      @tab Y @tab\n @item @code{omp}/@code{ompx}/@code{omx} sentinels and @code{omp_}/@code{ompx_}\n       namespaces @tab N/A\n       @tab warning for @code{ompx/omx} sentinels@footnote{The @code{ompx}"}, {"sha": "bfa4e6a0f876b1fea9d349d7aef9a0758dacbd7d", "filename": "libgomp/omp.h.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Fomp.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Fomp.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp.h.in?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -244,6 +244,7 @@ extern int omp_get_team_size (int) __GOMP_NOTHROW;\n extern int omp_get_active_level (void) __GOMP_NOTHROW;\n \n extern int omp_in_final (void) __GOMP_NOTHROW;\n+extern int omp_in_explicit_task (void) __GOMP_NOTHROW;\n \n extern int omp_get_cancellation (void) __GOMP_NOTHROW;\n extern omp_proc_bind_t omp_get_proc_bind (void) __GOMP_NOTHROW;"}, {"sha": "04f32dbfd8ade906967e01e48332a4ea53cbf187", "filename": "libgomp/omp_lib.f90.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Fomp_lib.f90.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Fomp_lib.f90.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp_lib.f90.in?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -444,6 +444,12 @@\n           end function omp_in_final\n         end interface\n \n+        interface\n+          function omp_in_explicit_task ()\n+            logical (4) :: omp_in_explicit_task\n+          end function omp_in_explicit_task\n+        end interface\n+\n         interface\n           function omp_get_cancellation ()\n             logical (4) :: omp_get_cancellation"}, {"sha": "ecfb9348305a761d16395eb3a8a96c8abd5132c8", "filename": "libgomp/omp_lib.h.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Fomp_lib.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Fomp_lib.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp_lib.h.in?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -220,6 +220,8 @@\n \n       external omp_in_final\n       logical(4) omp_in_final\n+      external omp_in_explicit_task\n+      logical(4) omp_in_explicit_task\n \n       external omp_get_cancellation\n       logical(4) omp_get_cancellation"}, {"sha": "a7e67e8ea813a2bdc8061e36e3da9a980b9facea", "filename": "libgomp/task.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftask.c?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -2687,6 +2687,16 @@ omp_in_final (void)\n \n ialias (omp_in_final)\n \n+int\n+omp_in_explicit_task (void)\n+{\n+  struct gomp_thread *thr = gomp_thread ();\n+  struct gomp_task *task = thr->task;\n+  return task && task->kind != GOMP_TASK_IMPLICIT;\n+}\n+\n+ialias (omp_in_explicit_task)\n+\n void\n omp_fulfill_event (omp_event_handle_t event)\n {"}, {"sha": "a228d93a7766d92f9a441805ebee62e22dcfbbf1", "filename": "libgomp/testsuite/libgomp.c-c++-common/task-in-explicit-1.c", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-1.c?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -0,0 +1,106 @@\n+/* { dg-do run } */\n+\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int\n+main ()\n+{\n+  if (omp_in_explicit_task ())\n+    abort ();\n+  #pragma omp task\n+  if (!omp_in_explicit_task ())\n+    abort ();\n+  #pragma omp task final (1)\n+  {\n+    if (!omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp task \n+    if (!omp_in_explicit_task ())\n+      abort ();\n+  }\n+  #pragma omp parallel\n+  {\n+    if (omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp task if (0)\n+      {\n+\tif (!omp_in_explicit_task ())\n+\t  abort ();\n+\t#pragma omp task if (0)\n+\t  if (!omp_in_explicit_task ())\n+\t    abort ();\n+      }\n+    #pragma omp task final (1)\n+      if (!omp_in_explicit_task ())\n+\tabort ();\n+    #pragma omp barrier\n+    if (omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp taskloop num_tasks (24)\n+    for (int i = 0; i < 32; ++i)\n+      if (!omp_in_explicit_task ())\n+\tabort ();\n+    #pragma omp masked\n+    #pragma omp task\n+    if (!omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp barrier\n+    if (omp_in_explicit_task ())\n+      abort ();\n+  }\n+  #pragma omp target\n+  {\n+    if (omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp task if (0)\n+    if (!omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp task\n+    if (!omp_in_explicit_task ())\n+      abort ();\n+  }\n+  #pragma omp target teams\n+  {\n+    #pragma omp distribute\n+    for (int i = 0; i < 4; ++i)\n+      if (omp_in_explicit_task ())\n+\tabort ();\n+      else\n+\t{\n+\t  #pragma omp parallel\n+\t  {\n+\t    if (omp_in_explicit_task ())\n+\t      abort ();\n+\t    #pragma omp task\n+\t    if (!omp_in_explicit_task ())\n+\t      abort ();\n+\t    #pragma omp barrier\n+\t    if (omp_in_explicit_task ())\n+\t      abort ();\n+\t  }\n+\t}\n+  }\n+  #pragma omp teams\n+  {\n+    #pragma omp distribute\n+    for (int i = 0; i < 4; ++i)\n+      if (omp_in_explicit_task ())\n+\tabort ();\n+      else\n+\t{\n+\t  #pragma omp parallel\n+\t  {\n+\t    if (omp_in_explicit_task ())\n+\t      abort ();\n+\t    #pragma omp task\n+\t    if (!omp_in_explicit_task ())\n+\t      abort ();\n+\t    #pragma omp barrier\n+\t    if (omp_in_explicit_task ())\n+\t      abort ();\n+\t  }\n+\t}\n+  }\n+  return 0;\n+}"}, {"sha": "44df5967b69209943315a91c86afe2bdca9b2624", "filename": "libgomp/testsuite/libgomp.c-c++-common/task-in-explicit-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-2.c?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int\n+main ()\n+{\n+  #pragma omp task\n+  {\n+    if (!omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp task\n+    {\n+      if (!omp_in_explicit_task ())\n+\tabort ();\n+      #pragma omp target nowait\n+      if (omp_in_explicit_task ())\n+\tabort ();\n+      if (!omp_in_explicit_task ())\n+\tabort ();\n+      #pragma omp taskwait\n+    }\n+  }\n+  return 0;\n+}"}, {"sha": "40eb94d4dca670be9059e24e50fa14ab1bd41c70", "filename": "libgomp/testsuite/libgomp.c-c++-common/task-in-explicit-3.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftask-in-explicit-3.c?ref=0ec4e93fb9fa5e9d2424683c5fab1310c8ae2f76", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int a;\n+\n+int\n+main ()\n+{\n+  #pragma omp task\n+  {\n+    if (!omp_in_explicit_task ())\n+      abort ();\n+    #pragma omp task\n+    {\n+      if (!omp_in_explicit_task ())\n+\tabort ();\n+      #pragma omp taskgroup task_reduction (+: a)\n+      {\n+\tif (!omp_in_explicit_task ())\n+\t  abort ();\n+\t#pragma omp task in_reduction (+: a)\n+\t{\n+\t  ++a;\n+\t  if (!omp_in_explicit_task ())\n+\t    abort ();\n+\t}\n+      }\n+      if (!omp_in_explicit_task ())\n+\tabort ();\n+      #pragma omp taskwait\n+    }\n+  }\n+  return 0;\n+}"}]}