{"sha": "362c63a5e8b5aacfff3e5af0911e42ba7c775042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYyYzYzYTVlOGI1YWFjZmZmM2U1YWYwOTExZTQyYmE3Yzc3NTA0Mg==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-04-14T23:16:25Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-04-14T23:16:25Z"}, "message": "In gcc/:\n\n\t* config/rs6000/sysv4.h (LINK_START_SOLARIS_SPEC): Define to empty\n\talways, use the default SVR4 start address.\n\n\t* config/rs6000/linux.h (LINK_SPEC): Don't define.\n\t(LINK_SHLIB_SPEC): Define.\n\t(LINK_START_DEFAULT_SPEC): Define.\n\t(LINK_OS_DEFAULT_SPEC): Define.\n\n\t* config/rs6000/sysv4.h (ENDFILE_SPEC): Use the %(endfile_*) macros.\n\n\t* config/rs6000/eabi.asm (__eabi): Call __init rather than\n\t__do_global_ctors to handle constructors.\n\t* config/rs6000/sysv4.h (STARTFILE_ADS_SPEC): Use crtbegin.\n\t(STARTFILE_YELLOWKNIFE_SPEC): Likewise.\n\t(STARTFILE_MVME_SPEC): Likewise.\n\t(STARTFILE_SIM_SPEC): Likewise.\n\t(ENDFILE_ADS_SPEC): Use crtend.\n\t(ENDFILE_YELLOWKNIFE_SPEC): Likewise.\n\t(ENDFILE_MVME_SPEC): Likewise.\n\t(ENDFILE_SIM_SPEC): Likewise.\n\t(STARTFILE_SOLARIS_SPEC): Use crtbegin/crtbeginS.\n\t(ENDFILE_SOLARIS_SPEC): Use crtend/crtendS.\n\t(STARTFILE_LINUX_SPEC): Use crtbeginS for shared objects.\n\t(ENDFILE_LINUX_SPEC): Use crtendS for shared objects.\n\t* config/rs6000/t-ppccomm (LIB2FUNCS_EXTRA): Don't build eabi-ctors.o.\n\t(EXTRA_MULTILIB_PARTS): Build crtbeginS/crtendS.\n\t(CRTSTUFF_T_CFLAGS_S): Define.\n\t* config/rs6000/eabi-ctors.c: Delete.\n\n\t* config/rs6000/eabi-ci.asm (__init): Align stack to 16-byte\n\tboundary.\n\t(__fini): Likewise.\n\t* config/rs6000/eabi-cn.asm (__init): Allow for 16-byte stack frame.\n\tboundary.\n\t(__fini): Likewise.\n\nIn gcc/po:\n\t* POTFILES.in: Remove config/rs6000/eabi-ctors.c, which was\n\tpreviously commented out anyway.\n\nFrom-SVN: r33158", "tree": {"sha": "8f2cc2d8fad36057005ea2af712c4383cce5fda6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f2cc2d8fad36057005ea2af712c4383cce5fda6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/362c63a5e8b5aacfff3e5af0911e42ba7c775042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362c63a5e8b5aacfff3e5af0911e42ba7c775042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362c63a5e8b5aacfff3e5af0911e42ba7c775042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362c63a5e8b5aacfff3e5af0911e42ba7c775042/comments", "author": null, "committer": null, "parents": [{"sha": "cfff35c1e538a08d1ef67506e934da0be62b338d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfff35c1e538a08d1ef67506e934da0be62b338d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfff35c1e538a08d1ef67506e934da0be62b338d"}], "stats": {"total": 252, "additions": 95, "deletions": 157}, "files": [{"sha": "041abc3fff609c4d3de8162a21a4665a50c914bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -1,3 +1,41 @@\n+2000-04-14  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* config/rs6000/sysv4.h (LINK_START_SOLARIS_SPEC): Define to empty\n+\talways, use the default SVR4 start address.\n+\n+\t* config/rs6000/linux.h (LINK_SPEC): Don't define.\n+\t(LINK_SHLIB_SPEC): Define.\n+\t(LINK_START_DEFAULT_SPEC): Define.\n+\t(LINK_OS_DEFAULT_SPEC): Define.\n+\n+\t* config/rs6000/sysv4.h (ENDFILE_SPEC): Use the %(endfile_*) macros.\n+\n+\t* config/rs6000/eabi.asm (__eabi): Call __init rather than \n+\t__do_global_ctors to handle constructors.\n+\t* config/rs6000/sysv4.h (STARTFILE_ADS_SPEC): Use crtbegin.\n+\t(STARTFILE_YELLOWKNIFE_SPEC): Likewise.\n+\t(STARTFILE_MVME_SPEC): Likewise.\n+\t(STARTFILE_SIM_SPEC): Likewise.\n+\t(ENDFILE_ADS_SPEC): Use crtend.\n+\t(ENDFILE_YELLOWKNIFE_SPEC): Likewise.\n+\t(ENDFILE_MVME_SPEC): Likewise.\n+\t(ENDFILE_SIM_SPEC): Likewise.\n+\t(STARTFILE_SOLARIS_SPEC): Use crtbegin/crtbeginS.\n+\t(ENDFILE_SOLARIS_SPEC): Use crtend/crtendS.\n+\t(STARTFILE_LINUX_SPEC): Use crtbeginS for shared objects.\n+\t(ENDFILE_LINUX_SPEC): Use crtendS for shared objects.\n+\t* config/rs6000/t-ppccomm (LIB2FUNCS_EXTRA): Don't build eabi-ctors.o.\n+\t(EXTRA_MULTILIB_PARTS): Build crtbeginS/crtendS.\n+\t(CRTSTUFF_T_CFLAGS_S): Define.\n+\t* config/rs6000/eabi-ctors.c: Delete.\n+\t\n+\t* config/rs6000/eabi-ci.asm (__init): Align stack to 16-byte\n+\tboundary.\n+\t(__fini): Likewise.\n+\t* config/rs6000/eabi-cn.asm (__init): Allow for 16-byte stack frame.\n+\tboundary.\n+\t(__fini): Likewise.\n+\n Fri Apr 14 16:09:02 2000  Jim Wilson  <wilson@cygnus.com>\n \n \t* combine.c (force_to_mode, case LSHIFTRT): Check that shift shift"}, {"sha": "cec183282616556293ca480d5c5405852c340085", "filename": "gcc/config/rs6000/eabi-ci.asm", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -107,18 +107,18 @@ __EXCEPT_START__:\n \t.type\t__EH_FRAME_BEGIN__,@object\n __EH_FRAME_BEGIN__:\n \n-# Head of __init function used for static constructors in Solaris\n+# Head of __init function used for static constructors\n \t.section \".init\",\"ax\"\n \t.align 2\n FUNC_START(__init)\n-\tstwu 1,-8(1)\n+\tstwu 1,-16(1)\n \tmflr 0\n-\tstw 0,12(1)\n+\tstw 0,20(1)\n \n-# Head of __fini function used for static destructors in Solaris\n+# Head of __fini function used for static destructors\n \t.section \".fini\",\"ax\"\n \t.align 2\n FUNC_START(__fini)\n-\tstwu 1,-8(1)\n+\tstwu 1,-16(1)\n \tmflr 0\n-\tstw 0,12(1)\n+\tstw 0,20(1)"}, {"sha": "d75141cb244f20deb484dd591b1aca4263398da5", "filename": "gcc/config/rs6000/eabi-cn.asm", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -102,14 +102,14 @@ __EH_FRAME_END__:\n \n # Tail of __init used for static constructors in Solaris\n \t.section \".init\",\"ax\"\n-\tlwz 0,12(1)\n+\tlwz 0,20(1)\n \tmtlr 0\n-\taddi 1,1,8\n+\taddi 1,1,16\n \tblr\n \n # Tail of __fini used for static destructors in Solaris\n \t.section \".fini\",\"ax\"\n-\tlwz 0,12(1)\n+\tlwz 0,20(1)\n \tmtlr 0\n-\taddi 1,1,8\n+\taddi 1,1,16\n \tblr"}, {"sha": "9785a112a6d8392b31668cafc9b8666ecd778879", "filename": "gcc/config/rs6000/eabi-ctors.c", "status": "removed", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfff35c1e538a08d1ef67506e934da0be62b338d/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfff35c1e538a08d1ef67506e934da0be62b338d/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c?ref=cfff35c1e538a08d1ef67506e934da0be62b338d", "patch": "@@ -1,104 +0,0 @@\n-/* Stripped down support to run global constructors and destructors on\n-   embedded PowerPC systems.\n-\n-   Copyright (C) 1995, 2000 Free Software Foundation, Inc.\n-   Contributed by Michael Meissner  (meissner@cygnus.com).\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you link this library with other files,\n-   some of which are compiled with GCC, to produce an executable,\n-   this library does not by itself cause the resulting executable\n-   to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#include \"tm.h\"\n-#include \"defaults.h\"\n-#include <stddef.h>\n-#include \"frame.h\"\n-#include \"gbl-ctors.h\"\n-\n-/* FIXME: This file should share code with all the other\n-   constructor/destructor implementations in crtstuff.c and libgcc2.c.  */\n-\n-/* Declare the set of symbols use as begin and end markers for the lists\n-   of global object constructors and global object destructors.  */\n-\n-extern func_ptr __CTOR_LIST__[] asm (\"__CTOR_LIST__\");\n-extern func_ptr __CTOR_END__ [] asm (\"__CTOR_END__\");\n-extern func_ptr __DTOR_LIST__[] asm (\"__DTOR_LIST__\");\n-extern func_ptr __DTOR_END__ [] asm (\"__DTOR_END__\");\n-extern unsigned char __EH_FRAME_BEGIN__[] asm (\"__EH_FRAME_BEGIN__\");\n-\n-extern void __do_global_ctors (void);\n-\n-extern void __init (), __fini ();\n-\n-void (*__atexit)(func_ptr);\n-\n-/* Call all global constructors */\n-void\n-__do_global_ctors (void)\n-{\n-  func_ptr *p = __CTOR_END__ - 1;\n-\n-#ifdef EH_FRAME_SECTION\n-  {\n-    static struct object object;\n-    __register_frame_info (__EH_FRAME_BEGIN__, &object);\n-  }\n-#endif\n-\n-  /* Call the constructors collected in the .ctors section.  */\n-  for ( ; p >= __CTOR_LIST__; p--)\n-    if (*p)\n-      (*p)();\n-  \n-  if (__atexit)\n-    __atexit (__do_global_dtors);\n-\n-  /* Call the initialization function in the .init section.  */\n-  __init ();\n-}\n-\n-/* Call all global destructors */\n-void\n-__do_global_dtors (void)\n-{\n-  static func_ptr *p = __DTOR_LIST__ + 1;\n-  static int completed = 0;\n-\n-  if (completed)\n-    return;\n-\n-  /* Call the termination function in the .fini section.  */\n-  __fini ();\n-\n-  while (p < __DTOR_END__)\n-    {\n-      p++;\n-      (*(p-1)) ();\n-    }\n-\n-#ifdef EH_FRAME_SECTION_ASM_OP\n-  if (__deregister_frame_info)\n-    __deregister_frame_info (__EH_FRAME_BEGIN__);\n-#endif\n-  completed = 1;\n-}"}, {"sha": "108328e7134b5bb6f631f8cbf4c32df08dca0f63", "filename": "gcc/config/rs6000/eabi.asm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Feabi.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Feabi.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.asm?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -1,7 +1,7 @@\n /*\n  * special support for eabi\n  *\n- *   Copyright (C) 1995, 1996, 1998 Free Software Foundation, Inc.\n+ *   Copyright (C) 1995, 1996, 1998, 2000 Free Software Foundation, Inc.\n  *   Written By Michael Meissner\n  * \n  * This file is free software; you can redistribute it and/or modify it\n@@ -228,7 +228,7 @@ FUNC_START(__eabi)\n /* Done adjusting pointers, return by way of doing the C++ global constructors.  */\n \n .Ldone:\n-\tb\tFUNC_NAME(__do_global_ctors)\t/* do any C++ global constructors (which returns to caller) */\n+\tb\tFUNC_NAME(__init)\t/* do any C++ global constructors (which returns to caller) */\n FUNC_END(__eabi)\n \n /* Special subroutine to convert a bunch of pointers directly."}, {"sha": "a28a8bdfdd501314cece13601ee33f1747abc47d", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -33,13 +33,8 @@ Boston, MA 02111-1307, USA.  */\n #undef\tCPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux)\"\n \n-#undef LINK_SPEC\n-#define LINK_SPEC \"-m elf32ppclinux %{G*} %{shared:-shared} \\\n-  %{!shared: \\\n-    %{!static: \\\n-      %{rdynamic:-export-dynamic} \\\n-      %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \\\n-    %{static:-static}}\"\n+#undef LINK_SHLIB_SPEC\n+#define LINK_SHLIB_SPEC \"%{shared:-shared} %{!shared: %{static:-static}}\"\n \n #undef\tLIB_DEFAULT_SPEC\n #define LIB_DEFAULT_SPEC \"%(lib_linux)\"\n@@ -50,6 +45,12 @@ Boston, MA 02111-1307, USA.  */\n #undef\tENDFILE_DEFAULT_SPEC\n #define ENDFILE_DEFAULT_SPEC \"%(endfile_linux)\"\n \n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_linux)\"\n+\n+#undef\tLINK_OS_DEFAULT_SPEC\n+#define LINK_OS_DEFAULT_SPEC \"%(link_os_linux)\"\n+\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (PowerPC GNU/Linux)\");\n "}, {"sha": "33222ad6822afc92e1a03fcffaadcabef0c2dc3f", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 27, "deletions": 28, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -1082,7 +1082,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{Wl,*:%*} %{YP,*} %{R*} \\\n %{Qy:} %{!Qn:-Qy} \\\n %(link_shlib) \\\n-%{!Ttext*: %(link_start) } \\\n+%{!Wl,-T*: %{!T*: %(link_start) }} \\\n %(link_target) \\\n %(link_os)\"\n \n@@ -1218,12 +1218,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Override svr4.h definition.  */\n #undef\tENDFILE_SPEC\n #define\tENDFILE_SPEC \"\\\n-%{mads: ecrtn.o%s} \\\n-%{myellowknife: ecrtn.o%s} \\\n-%{mmvme: ecrtn.o%s} \\\n-%{msim: ecrtn.o%s} \\\n+%{mads: %(endfile_ads)} \\\n+%{myellowknife: %(endfile_yellowknife)} \\\n+%{mmvme: %(endfile_mvme)} \\\n+%{msim: %(endfile_sim)} \\\n %{mcall-linux: %(endfile_linux) } \\\n-%{mcall-solaris: scrtn.o%s} \\\n+%{mcall-solaris: %(endfile_solaris)} \\\n %{mvxworks: %(endfile_vxworks) } \\\n %{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %{!mvxworks: %(endfile_default) }}}}}}}\"\n \n@@ -1232,9 +1232,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Motorola ADS support.  */\n #define LIB_ADS_SPEC \"--start-group -lads -lc --end-group\"\n \n-#define\tSTARTFILE_ADS_SPEC \"ecrti.o%s crt0.o%s\"\n+#define\tSTARTFILE_ADS_SPEC \"ecrti.o%s crt0.o%s crtbegin.o%s\"\n \n-#define\tENDFILE_ADS_SPEC \"ecrtn.o%s\"\n+#define\tENDFILE_ADS_SPEC \"crtend.o%s ecrtn.o%s\"\n \n #define LINK_START_ADS_SPEC \"-T ads.ld%s\"\n \n@@ -1245,9 +1245,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Motorola Yellowknife support.  */\n #define LIB_YELLOWKNIFE_SPEC \"--start-group -lyk -lc --end-group\"\n \n-#define\tSTARTFILE_YELLOWKNIFE_SPEC \"ecrti.o%s crt0.o%s\"\n+#define\tSTARTFILE_YELLOWKNIFE_SPEC \"ecrti.o%s crt0.o%s crtbegin.o%s\"\n \n-#define\tENDFILE_YELLOWKNIFE_SPEC \"ecrtn.o%s\"\n+#define\tENDFILE_YELLOWKNIFE_SPEC \"crtend.o%s ecrtn.o%s\"\n \n #define LINK_START_YELLOWKNIFE_SPEC \"-T yellowknife.ld%s\"\n \n@@ -1258,11 +1258,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Motorola MVME support.  */\n #define LIB_MVME_SPEC \"--start-group -lmvme -lc --end-group\"\n \n-#define\tSTARTFILE_MVME_SPEC \"ecrti.o%s crt0.o%s\"\n+#define\tSTARTFILE_MVME_SPEC \"ecrti.o%s crt0.o%s crtbegin.o%s\"\n \n-#define\tENDFILE_MVME_SPEC \"ecrtn.o%s\"\n+#define\tENDFILE_MVME_SPEC \"crtend.o%s ecrtn.o%s\"\n \n-#define LINK_START_MVME_SPEC \"%{!Wl,-T*: %{!T*: -Ttext 0x40000}}\"\n+#define LINK_START_MVME_SPEC \"-Ttext 0x40000\"\n \n #define LINK_OS_MVME_SPEC \"\"\n \n@@ -1271,13 +1271,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* PowerPC simulator based on netbsd system calls support.  */\n #define LIB_SIM_SPEC \"--start-group -lsim -lc --end-group\"\n \n-#define\tSTARTFILE_SIM_SPEC \"ecrti.o%s sim-crt0.o%s\"\n+#define\tSTARTFILE_SIM_SPEC \"ecrti.o%s sim-crt0.o%s crtbegin.o%s\"\n \n-#define\tENDFILE_SIM_SPEC \"ecrtn.o%s\"\n+#define\tENDFILE_SIM_SPEC \"crtend.o%s ecrtn.o%s\"\n \n-#define LINK_START_SIM_SPEC \"-Ttext 0x10000074\"\n+#define LINK_START_SIM_SPEC \"\"\n \n-#define LINK_OS_SIM_SPEC \"\"\n+#define LINK_OS_SIM_SPEC \"-m elf32ppcsim\"\n \n #define CPP_OS_SIM_SPEC \"\"\n \n@@ -1294,15 +1294,16 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define\tSTARTFILE_LINUX_SPEC \"\\\n %{!shared: %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}} \\\n %{mnewlib: ecrti.o%s} %{!mnewlib: crti.o%s} \\\n-crtbegin.o%s\"\n+%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n \n-#define\tENDFILE_LINUX_SPEC \"crtend.o%s \\\n-%{mnewlib: ecrtn.o%s} \\\n-%{!mnewlib: crtn.o%s}\"\n+#define\tENDFILE_LINUX_SPEC \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} \\\n+%{mnewlib: ecrtn.o%s} %{!mnewlib: crtn.o%s}\"\n \n-#define LINK_START_LINUX_SPEC \"-Ttext 0x400074\"\n+#define LINK_START_LINUX_SPEC \"\"\n \n-#define LINK_OS_LINUX_SPEC \"\"\n+#define LINK_OS_LINUX_SPEC \"-m elf32ppclinux %{!shared: %{!static: \\\n+  %{rdynamic:-export-dynamic} \\\n+  %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}}}\"\n \n #ifdef USE_GNULIBC_1\n #define CPP_OS_LINUX_SPEC \"-D__unix__ -D__linux__ \\\n@@ -1339,17 +1340,15 @@ crtbegin.o%s\"\n \n #define\tSTARTFILE_SOLARIS_SPEC \"\\\n %{!msolaris-cclib: scrti.o%s scrt0.o%s} \\\n-%{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crti.o%s /opt/SUNWspro/SC4.0/lib/crt1.o%s}\"\n+%{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crti.o%s /opt/SUNWspro/SC4.0/lib/crt1.o%s} \\\n+%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n \n #define\tENDFILE_SOLARIS_SPEC \"\\\n+%{!shared:crtend.o%s} %{shared:crtendS.o%s} \\\n %{!msolaris-cclib: scrtn.o%s} \\\n %{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crtn.o%s}\"\n \n-#ifdef CROSS_COMPILE\n-#define LINK_START_SOLARIS_SPEC \"-Ttext 0x2000074\"\n-#else\n #define LINK_START_SOLARIS_SPEC \"\"\n-#endif\n \n #define LINK_OS_SOLARIS_SPEC \"\"\n "}, {"sha": "3a1f106ad21729bb9b9f36e4a7fd0dce342afe9d", "filename": "gcc/config/rs6000/t-ppccomm", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppccomm?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -6,7 +6,7 @@ CROSS_LIBGCC1 =\n \n # These are really part of libgcc1, but this will cause them to be\n # built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = eabi.S eabi-ctors.c tramp.S\n+LIB2FUNCS_EXTRA = eabi.S tramp.S\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries.\n@@ -24,9 +24,6 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n eabi.S: $(srcdir)/config/rs6000/eabi.asm\n \tcat $(srcdir)/config/rs6000/eabi.asm > eabi.S\n \n-eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c\n-\tcat $(srcdir)/config/rs6000/eabi-ctors.c > eabi-ctors.c\n-\n tramp.S: $(srcdir)/config/rs6000/tramp.asm\n \tcat $(srcdir)/config/rs6000/tramp.asm > tramp.S\n \n@@ -44,6 +41,7 @@ MULTILIB_MATCHES_SYSV\t= mcall-sysv=mcall-sysv-eabi mcall-sysv=mcall-sysv-noeabi\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n EXTRA_MULTILIB_PARTS = crtbegin$(objext) crtend$(objext) \\\n+  crtbeginS$(objext) crtendS$(objext) \\\n   ecrti$(objext) ecrtn$(objext) scrt0$(objext) scrti$(objext) scrtn$(objext)\n \n # We build {e,s}crti.o, {e,s}crtn.o, and scrt0.o which serve to add begin and\n@@ -83,4 +81,6 @@ $(T)scrt0$(objext): scrt0.c\n \n # It is important that crtbegin.o, etc., aren't surprised by stuff in .sdata.\n CRTSTUFF_T_CFLAGS = -msdata=none\n-\n+# There is no need to add -fPIC here because crtstuff is multilibbed\n+# and so automatically gets -fPIC when needed.\n+CRTSTUFF_T_CFLAGS_S = -msdata=none"}, {"sha": "68ec053c3ed8f351fb52211b96efbf88a3b06acd", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -1,3 +1,8 @@\n+2000-04-05  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* POTFILES.in: Remove config/rs6000/eabi-ctors.c, which was\n+\tpreviously commented out anyway.\n+\n 2000-04-05  Geoff Keating  <geoffk@cygnus.com>\n \n \t* POTFILES.in: Update for config/rs6000 changes.  Comment out"}, {"sha": "1e4e63b5f8788368680882df31097dc3c919234b", "filename": "gcc/po/POTFILES.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fpo%2FPOTFILES.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c63a5e8b5aacfff3e5af0911e42ba7c775042/gcc%2Fpo%2FPOTFILES.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FPOTFILES.in?ref=362c63a5e8b5aacfff3e5af0911e42ba7c775042", "patch": "@@ -451,7 +451,6 @@ config/rs6000/aix3newas.h\n config/rs6000/aix41.h\n config/rs6000/aix43.h\n config/rs6000/beos.h\n-#config/rs6000/eabi-ctors.c\n config/rs6000/eabi.h\n config/rs6000/eabiaix.h\n config/rs6000/eabisim.h"}]}