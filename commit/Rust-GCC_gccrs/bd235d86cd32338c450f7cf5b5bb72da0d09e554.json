{"sha": "bd235d86cd32338c450f7cf5b5bb72da0d09e554", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQyMzVkODZjZDMyMzM4YzQ1MGY3Y2Y1YjViYjcyZGEwZDA5ZTU1NA==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@tuliptree.org", "date": "2003-06-30T03:11:48Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2003-06-30T03:11:48Z"}, "message": "reload.c (find_reloads): Change push_reloads to push_reload in comment.\n\n* reload.c (find_reloads): Change push_reloads to push_reload in\ncomment.\n* reload1.c (eliminate_regs): Likewise.\n(dump_needs): Delete prototype for deleted function.\n\nFrom-SVN: r68691", "tree": {"sha": "6227913aedd314310635c5de633238b5835824c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6227913aedd314310635c5de633238b5835824c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd235d86cd32338c450f7cf5b5bb72da0d09e554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd235d86cd32338c450f7cf5b5bb72da0d09e554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd235d86cd32338c450f7cf5b5bb72da0d09e554", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd235d86cd32338c450f7cf5b5bb72da0d09e554/comments", "author": {"login": "jim-wilson", "id": 11654017, "node_id": "MDQ6VXNlcjExNjU0MDE3", "avatar_url": "https://avatars.githubusercontent.com/u/11654017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jim-wilson", "html_url": "https://github.com/jim-wilson", "followers_url": "https://api.github.com/users/jim-wilson/followers", "following_url": "https://api.github.com/users/jim-wilson/following{/other_user}", "gists_url": "https://api.github.com/users/jim-wilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jim-wilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jim-wilson/subscriptions", "organizations_url": "https://api.github.com/users/jim-wilson/orgs", "repos_url": "https://api.github.com/users/jim-wilson/repos", "events_url": "https://api.github.com/users/jim-wilson/events{/privacy}", "received_events_url": "https://api.github.com/users/jim-wilson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c868f37e401a69bc2d2890d3c8aed13e43a5c666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c868f37e401a69bc2d2890d3c8aed13e43a5c666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c868f37e401a69bc2d2890d3c8aed13e43a5c666"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "acd38bb3795830aabe37da2781198bcbff48ba47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd235d86cd32338c450f7cf5b5bb72da0d09e554/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd235d86cd32338c450f7cf5b5bb72da0d09e554/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd235d86cd32338c450f7cf5b5bb72da0d09e554", "patch": "@@ -1,3 +1,10 @@\n+2003-06-29  James E Wilson  <wilson@tuliptree.org>\n+\n+\t* reload.c (find_reloads): Change push_reloads to push_reload in\n+\tcomment.\n+\t* reload1.c (eliminate_regs): Likewise.\n+\t(dump_needs): Delete prototype for deleted function.\n+\n 2003-06-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtin-attrs.def (gcc_diag, gcc_cdiag, gcc_cxxdiag): New"}, {"sha": "c1aa9e7de6a5a6a5bfda59a202aac58dcb056b4a", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd235d86cd32338c450f7cf5b5bb72da0d09e554/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd235d86cd32338c450f7cf5b5bb72da0d09e554/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=bd235d86cd32338c450f7cf5b5bb72da0d09e554", "patch": "@@ -2964,7 +2964,7 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \n \t\t     This is doubly true if WORD_REGISTER_OPERATIONS.  In\n \t\t     this case eliminate_regs has left non-paradoxical\n-\t\t     subregs for push_reloads to see.  Make sure it does\n+\t\t     subregs for push_reload to see.  Make sure it does\n \t\t     by forcing the reload.\n \n \t\t     ??? When is it right at this stage to have a subreg"}, {"sha": "6d6c3464292c67b304d3f0003a3db6a7f6d39041", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd235d86cd32338c450f7cf5b5bb72da0d09e554/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd235d86cd32338c450f7cf5b5bb72da0d09e554/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=bd235d86cd32338c450f7cf5b5bb72da0d09e554", "patch": "@@ -439,7 +439,6 @@ static rtx inc_for_reload\t\tPARAMS ((rtx, rtx, rtx, int));\n static void add_auto_inc_notes\t\tPARAMS ((rtx, rtx));\n #endif\n static void copy_eh_notes\t\tPARAMS ((rtx, rtx));\n-extern void dump_needs\t\t\tPARAMS ((struct insn_chain *));\n \f\n /* Initialize the reload pass once per compilation.  */\n \n@@ -2538,7 +2537,7 @@ eliminate_regs (x, mem_mode, insn)\n \t Convert (subreg (mem)) to (mem) if not paradoxical.\n \t Also, if we have a non-paradoxical (subreg (pseudo)) and the\n \t pseudo didn't get a hard reg, we must replace this with the\n-\t eliminated version of the memory location because push_reloads\n+\t eliminated version of the memory location because push_reload\n \t may do the replacement in certain circumstances.  */\n       if (GET_CODE (SUBREG_REG (x)) == REG\n \t  && (GET_MODE_SIZE (GET_MODE (x))\n@@ -2565,7 +2564,7 @@ eliminate_regs (x, mem_mode, insn)\n \t\t      happen to the entire word.  Moreover, it will use the\n \t\t      (reg:m2 R) later, expecting all bits to be preserved.\n \t\t      So if the number of words is the same, preserve the\n-\t\t      subreg so that push_reloads can see it.  */\n+\t\t      subreg so that push_reload can see it.  */\n \t\t   && ! ((x_size - 1) / UNITS_PER_WORD\n \t\t\t == (new_size -1 ) / UNITS_PER_WORD)\n #endif"}]}