{"sha": "40013784db8909d2935d2f4fc6ceaf59c68b36ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwMTM3ODRkYjg5MDlkMjkzNWQyZjRmYzZjZWFmNTljNjhiMzZhYw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-21T13:53:22Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-21T13:53:22Z"}, "message": "tree.h: Include real.h and fixed-value.h as basic datatypes.\n\ngcc/ChangeLog:\n\t* tree.h: Include real.h and fixed-value.h as basic datatypes.\n\t* dfp.c, convert.c, reload1.c, reginfo.c, tree-flow.h,\n\ttree-ssa-threadedge.c, tree-ssanames.c, tree-loop-linear.c,\n\ttree-into-ssa.c, tree-vect-generic.c, tree-ssa-structalias.c,\n\ttree-ssa-loop-im.c, tree-dump.c, tree-complex.c, tree-ssa-uninit.c,\n\tgenrecog.c, tree-ssa-threadupdate.c, tree-ssa-loop-niter.c,\n\ttree-pretty-print.c, tree-loop-distribution.c,\n\ttree-ssa-loop-unswitch.c, c-lex.c, optabs.c, postreload-gcse.c,\n\ttree-ssa-loop-manip.c, postreload.c, tree-ssa-loop-ch.c,\n\ttree-tailcall.c, tree.c, reload.c, tree-scalar-evolution.c, rtlanal.c,\n\ttree-phinodes.c, builtins.c, final.c, genoutput.c, fold-const.c,\n\ttree-ssa-dse.c, genautomata.c, tree-ssa-uncprop.c, toplev.c,\n\ttree-chrec.c, genemit.c, c-cppbuiltin.c, tree-ssa-sccvn.c,\n\ttree-ssa-ccp.c, tree-ssa-loop-ivopts.c, mode-switching.c,\n\ttree-call-cdce.c, cse.c, genpeep.c, tree-ssa-math-opts.c,\n\ttree-ssa-dom.c, tree-nrv.c, tree-ssa-propagate.c, tree-ssa-alias.c,\n\ttree-ssa-sink.c, jump.c, ifcvt.c, dwarf2out.c, expr.c, genattrtab.c,\n\tgenconditions.c, tree-ssa-loop-ivcanon.c, tree-ssa-loop.c,\n\ttree-parloops.c, recog.c, tree-ssa-address.c, lcm.c, tree-eh.c,\n\tgimple-pretty-print.c, c-pretty-print.c, print-rtl.c, gcse.c,\n\ttree-if-conv.c, tree-data-ref.c, tree-affine.c, gimplify.c,\n\ttree-ssa-phiopt.c, implicit-zee.c, expmed.c, tree-dfa.c, emit-rtl.c,\n\tstore-motion.c, cselib.c, tree-cfgcleanup.c, simplify-rtx.c,\n\ttree-ssa-pre.c, genpreds.c, tree-mudflap.c, print-tree.c,\n\ttree-ssa-copy.c, tree-ssa-forwprop.c, tree-ssa-dce.c, varasm.c,\n\ttree-nested.c, tree-ssa.c, tree-ssa-loop-prefetch.c, rtl.c,\n\ttree-inline.c, integrate.c, tree-optimize.c, tree-ssa-phiprop.c,\n\tfixed-value.c, combine.c, tree-profile.c, c-common.c, sched-vis.c,\n\ttree-cfg.c, passes.c, tree-ssa-reassoc.c, config/alpha/alpha.c,\n\tconfig/frv/frv.c, config/s390/s390.c, config/m32c/m32c.c,\n\tconfig/spu/spu.c, config/sparc/sparc.c, config/mep/mep.c,\n\tconfig/m32r/m32r.c, config/rx/rx.c, config/i386/i386.c,\n\tconfig/sh/sh.c, config/pdp11/pdp11.c, config/avr/avr.c,\n\tconfig/crx/crx.c, config/xtensa/xtensa.c, config/stormy16/stormy16.c,\n\tconfig/fr30/fr30.c, config/lm32/lm32.c, config/moxie/moxie.c,\n\tconfig/m68hc11/m68hc11.c, config/cris/cris.c, config/iq2000/iq2000.c,\n\tconfig/mn10300/mn10300.c, config/ia64/ia64.c, config/m68k/m68k.c,\n\tconfig/rs6000/rs6000.c, config/picochip/picochip.c, config/darwin.c,\n\tconfig/arc/arc.c, config/mcore/mcore.c, config/score/score3.c,\n\tconfig/score/score7.c, config/score/score.c, config/arm/arm.c,\n\tconfig/pa/pa.c, config/mips/mips.c, config/vax/vax.c,\n\tconfig/h8300/h8300.c, config/v850/v850.c, config/mmix/mmix.c,\n\tconfig/bfin/bfin.c:\n\tClean up redundant includes.\n\t* Makefile.in: Update accordingly.\n\njava/ChangeLog:\n\t* typeck.c, decl.c, jcf-parse.c, except.c, expr.c:\n\ncp/Changelog:\n\t* error.c, tree.c, typeck2.c, cxx-pretty-print.c, mangle.c:\n\tClean up redundant includes.\n\nfortran/ChangeLog:\n\t* trans-const.c, trans-types.c, trans-intrinsic.c:\n\tClean up redundant includes.\n\nFrom-SVN: r159663", "tree": {"sha": "44af7e46dc95b883d2bc68f26d461eacc4829f99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44af7e46dc95b883d2bc68f26d461eacc4829f99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40013784db8909d2935d2f4fc6ceaf59c68b36ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40013784db8909d2935d2f4fc6ceaf59c68b36ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40013784db8909d2935d2f4fc6ceaf59c68b36ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40013784db8909d2935d2f4fc6ceaf59c68b36ac/comments", "author": null, "committer": null, "parents": [{"sha": "0a7561b7939ddb459ee1479d206a359e9a2263f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a7561b7939ddb459ee1479d206a359e9a2263f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a7561b7939ddb459ee1479d206a359e9a2263f9"}], "stats": {"total": 636, "additions": 228, "deletions": 408}, "files": [{"sha": "2b3ec04d1351ab7f218036a137ca7ef73f60a42d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -1,3 +1,51 @@\n+2010-05-21  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* tree.h: Include real.h and fixed-value.h as basic datatypes.\n+\t* dfp.c, convert.c, reload1.c, reginfo.c, tree-flow.h,\n+\ttree-ssa-threadedge.c, tree-ssanames.c, tree-loop-linear.c,\n+\ttree-into-ssa.c, tree-vect-generic.c, tree-ssa-structalias.c,\n+\ttree-ssa-loop-im.c, tree-dump.c, tree-complex.c, tree-ssa-uninit.c,\n+\tgenrecog.c, tree-ssa-threadupdate.c, tree-ssa-loop-niter.c,\n+\ttree-pretty-print.c, tree-loop-distribution.c,\n+\ttree-ssa-loop-unswitch.c, c-lex.c, optabs.c, postreload-gcse.c,\n+\ttree-ssa-loop-manip.c, postreload.c, tree-ssa-loop-ch.c,\n+\ttree-tailcall.c, tree.c, reload.c, tree-scalar-evolution.c, rtlanal.c,\n+\ttree-phinodes.c, builtins.c, final.c, genoutput.c, fold-const.c,\n+\ttree-ssa-dse.c, genautomata.c, tree-ssa-uncprop.c, toplev.c,\n+\ttree-chrec.c, genemit.c, c-cppbuiltin.c, tree-ssa-sccvn.c,\n+\ttree-ssa-ccp.c, tree-ssa-loop-ivopts.c, mode-switching.c,\n+\ttree-call-cdce.c, cse.c, genpeep.c, tree-ssa-math-opts.c,\n+\ttree-ssa-dom.c, tree-nrv.c, tree-ssa-propagate.c, tree-ssa-alias.c,\n+\ttree-ssa-sink.c, jump.c, ifcvt.c, dwarf2out.c, expr.c, genattrtab.c,\n+\tgenconditions.c, tree-ssa-loop-ivcanon.c, tree-ssa-loop.c,\n+\ttree-parloops.c, recog.c, tree-ssa-address.c, lcm.c, tree-eh.c,\n+\tgimple-pretty-print.c, c-pretty-print.c, print-rtl.c, gcse.c,\n+\ttree-if-conv.c, tree-data-ref.c, tree-affine.c, gimplify.c,\n+\ttree-ssa-phiopt.c, implicit-zee.c, expmed.c, tree-dfa.c, emit-rtl.c,\n+\tstore-motion.c, cselib.c, tree-cfgcleanup.c, simplify-rtx.c,\n+\ttree-ssa-pre.c, genpreds.c, tree-mudflap.c, print-tree.c,\n+\ttree-ssa-copy.c, tree-ssa-forwprop.c, tree-ssa-dce.c, varasm.c,\n+\ttree-nested.c, tree-ssa.c, tree-ssa-loop-prefetch.c, rtl.c,\n+\ttree-inline.c, integrate.c, tree-optimize.c, tree-ssa-phiprop.c,\n+\tfixed-value.c, combine.c, tree-profile.c, c-common.c, sched-vis.c,\n+\ttree-cfg.c, passes.c, tree-ssa-reassoc.c, config/alpha/alpha.c,\n+\tconfig/frv/frv.c, config/s390/s390.c, config/m32c/m32c.c,\n+\tconfig/spu/spu.c, config/sparc/sparc.c, config/mep/mep.c,\n+\tconfig/m32r/m32r.c, config/rx/rx.c, config/i386/i386.c,\n+\tconfig/sh/sh.c, config/pdp11/pdp11.c, config/avr/avr.c,\n+\tconfig/crx/crx.c, config/xtensa/xtensa.c, config/stormy16/stormy16.c,\n+\tconfig/fr30/fr30.c, config/lm32/lm32.c, config/moxie/moxie.c,\n+\tconfig/m68hc11/m68hc11.c, config/cris/cris.c, config/iq2000/iq2000.c,\n+\tconfig/mn10300/mn10300.c, config/ia64/ia64.c, config/m68k/m68k.c,\n+\tconfig/rs6000/rs6000.c, config/picochip/picochip.c, config/darwin.c,\n+\tconfig/arc/arc.c, config/mcore/mcore.c, config/score/score3.c,\n+\tconfig/score/score7.c, config/score/score.c, config/arm/arm.c,\n+\tconfig/pa/pa.c, config/mips/mips.c, config/vax/vax.c,\n+\tconfig/h8300/h8300.c, config/v850/v850.c, config/mmix/mmix.c,\n+\tconfig/bfin/bfin.c:\n+\tClean up redundant includes.\n+\t* Makefile.in: Update accordingly.\n+\n 2010-05-21  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR middle-end/44204"}, {"sha": "fa1ee38438e108d3c454e8c5490688ad7e34659c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 149, "deletions": 151, "changes": 300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -875,7 +875,8 @@ BUILTINS_DEF = builtins.def sync-builtins.def omp-builtins.def\n TREE_H = tree.h all-tree.def tree.def c-common.def $(lang_tree_files) \\\n           $(MACHMODE_H) tree-check.h $(BUILTINS_DEF) \\\n           $(INPUT_H) statistics.h vec.h treestruct.def $(HASHTAB_H) \\\n-          double-int.h alias.h $(SYMTAB_H) options.h vecir.h\n+          double-int.h alias.h $(SYMTAB_H) options.h vecir.h \\\n+\t  $(REAL_H) $(FIXED_VALUE_H)\n BASIC_BLOCK_H = basic-block.h $(BITMAP_H) sbitmap.h $(PARTITION_H) \\\n           hard-reg-set.h $(PREDICT_H) vec.h $(FUNCTION_H) \\\n           cfghooks.h $(OBSTACK_H)\n@@ -932,7 +933,7 @@ CPP_INTERNAL_H = $(srcdir)/../libcpp/internal.h $(CPP_ID_DATA_H)\n TREE_PASS_H = tree-pass.h $(TIMEVAR_H)\n TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H) $(TREE_PASS_H)\n TREE_FLOW_H = tree-flow.h tree-flow-inline.h tree-ssa-operands.h \\\n-\t\t$(BITMAP_H) $(BASIC_BLOCK_H) hard-reg-set.h $(GIMPLE_H) \\\n+\t\t$(BITMAP_H) $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n \t\t$(HASHTAB_H) $(CGRAPH_H) $(IPA_REFERENCE_H) \\\n \t\ttree-ssa-alias.h\n TREE_SSA_LIVE_H = tree-ssa-live.h $(PARTITION_H) vecprim.h\n@@ -1987,7 +1988,7 @@ c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n stub-objc.o : stub-objc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n     $(C_COMMON_H)\n c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(FIXED_VALUE_H) debug.h $(C_TREE_H) $(C_COMMON_H) $(REAL_H) $(SPLAY_TREE_H) \\\n+    $(FIXED_VALUE_H) debug.h $(C_TREE_H) $(C_COMMON_H) $(SPLAY_TREE_H) \\\n     $(C_PRAGMA_H) $(INPUT_H) intl.h $(FLAGS_H) $(TOPLEV_H) output.h \\\n     $(CPPLIB_H) $(TARGET_H) $(TIMEVAR_H)\n c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2046,13 +2047,13 @@ c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(GGC_H) $(EXPR_H) $(TM_P_H) builtin-types.def builtin-attrs.def \\\n \t$(DIAGNOSTIC_H) gt-c-common.h langhooks.h $(RTL_H) \\\n \t$(TARGET_H) $(C_TREE_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n-\tintl.h opts.h $(REAL_H) $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n+\tintl.h opts.h $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n \t$(BUILTINS_DEF) $(CGRAPH_H) $(BASIC_BLOCK_H) $(TARGET_DEF_H) \\\n \tlibfuncs.h\n \n c-pretty-print.o : c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n-\t$(C_TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(REAL_H) \\\n-\t$(DIAGNOSTIC_H) tree-iterator.h fixed-value.h intl.h\n+\t$(C_TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(DIAGNOSTIC_H) tree-iterator.h intl.h\n \n c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n         $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) $(TOPLEV_H) langhooks.h \\\n@@ -2063,7 +2064,7 @@ c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n c-cppbuiltin.o : c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) version.h $(C_COMMON_H) $(C_PRAGMA_H) $(FLAGS_H) \\\n-\t$(TOPLEV_H) output.h $(EXCEPT_H) $(REAL_H) $(TARGET_H) $(TM_P_H) \\\n+\t$(TOPLEV_H) output.h $(EXCEPT_H) $(TREE_H) $(TARGET_H) $(TM_P_H) \\\n \t$(BASEVER) debug.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t-DBASEVER=$(BASEVER_s) $< $(OUTPUT_OPTION)\n@@ -2204,7 +2205,7 @@ prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) prefix.h \\\n \t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n \n convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(FLAGS_H) convert.h $(TOPLEV_H) langhooks.h $(REAL_H) fixed-value.h\n+   $(FLAGS_H) convert.h $(TOPLEV_H) langhooks.h\n \n double-int.o: double-int.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H)\n \n@@ -2252,53 +2253,53 @@ langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(TOPLEV_H) $(TREE_INLINE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) \\\n    langhooks.h $(TARGET_H) $(LANGHOOKS_DEF_H) $(FLAGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    intl.h $(GIMPLE_H) $(CGRAPH_H) output.h\n-tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+tree.o: tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    all-tree.def $(FLAGS_H) $(FUNCTION_H) $(PARAMS_H) \\\n    $(TOPLEV_H) $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) \\\n-   langhooks.h $(REAL_H) gt-tree.h $(TREE_INLINE_H) tree-iterator.h \\\n-   $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(OBSTACK_H) pointer-set.h fixed-value.h \\\n+   langhooks.h gt-tree.h $(TREE_INLINE_H) tree-iterator.h \\\n+   $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(OBSTACK_H) pointer-set.h \\\n    tree-pass.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) $(CGRAPH_H) $(TIMEVAR_H) \\\n    $(EXCEPT_H) debug.h intl.h\n tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TOPLEV_H) $(SPLAY_TREE_H) $(TREE_DUMP_H) \\\n-   tree-iterator.h $(TREE_PASS_H) $(DIAGNOSTIC_H) $(REAL_H) fixed-value.h\n+   tree-iterator.h $(TREE_PASS_H) $(DIAGNOSTIC_H)\n tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) $(INPUT_H) insn-config.h \\\n    $(HASHTAB_H) $(TOPLEV_H) langhooks.h $(TREE_INLINE_H) $(CGRAPH_H) \\\n    intl.h $(FUNCTION_H) $(GIMPLE_H) \\\n    debug.h $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_FLOW_H) tree-iterator.h tree-mudflap.h \\\n    $(IPA_PROP_H) value-prof.h $(TREE_PASS_H) $(TARGET_H) $(INTEGRATE_H)\n print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(GGC_H) langhooks.h $(REAL_H) tree-iterator.h fixed-value.h \\\n+   $(GGC_H) langhooks.h tree-iterator.h \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) output.h $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n    $(TOPLEV_H) $(CGRAPH_H) $(TREE_INLINE_H) $(TREE_DUMP_H) $(GIMPLE_H)\n tree-ssa-structalias.o: tree-ssa-structalias.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(GGC_H) $(OBSTACK_H) $(BITMAP_H) \\\n-   $(FLAGS_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n+   $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n    $(DIAGNOSTIC_H) $(TOPLEV_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(HASHTAB_H) $(FUNCTION_H) $(CGRAPH_H) \\\n    $(TREE_PASS_H) $(TIMEVAR_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) \\\n    gt-tree-ssa-structalias.h $(CGRAPH_H) $(ALIAS_H) pointer-set.h\n tree-ssa-uninit.o : tree-ssa-uninit.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) $(BITMAP_H) \\\n-   $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) pointer-set.h \\\n+   $(FLAGS_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H)\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n-   $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) pointer-set.h \\\n+   $(FLAGS_H) $(GGC_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H)\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   langhooks.h domwalk.h $(TREE_PASS_H) $(GGC_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n-   $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) hard-reg-set.h $(HASHTAB_H) \\\n+   langhooks.h domwalk.h $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n+   $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) $(HASHTAB_H) \\\n    $(GIMPLE_H) $(TREE_INLINE_H) vecprim.h\n tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n@@ -2315,57 +2316,57 @@ tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H) langhooks.h\n tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    langhooks.h $(FLAGS_H) $(GIMPLE_H)\n tree-ssa-phiprop.o : tree-ssa-phiprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    langhooks.h $(FLAGS_H)\n tree-ssa-ifcombine.o : tree-ssa-ifcombine.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H)\n tree-ssa-phiopt.o : tree-ssa-phiopt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) langhooks.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H) pointer-set.h domwalk.h\n tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(RTL_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(EXPR_H) \\\n+   $(TM_H) $(TREE_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_PASS_H) \\\n    langhooks.h\n tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h tree-ssa-propagate.h \\\n    $(FLAGS_H) $(CFGLOOP_H)\n tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h vec.h value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n    $(GIMPLE_H)\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n-   tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H) $(REAL_H)\n+   tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H)\n tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) \\\n-   langhooks.h tree-ssa-propagate.h $(REAL_H)\n+   langhooks.h tree-ssa-propagate.h\n tree-ssa-threadedge.o : tree-ssa-threadedge.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(RTL_H) $(TM_P_H) $(GGC_H) \\\n+   $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(TM_P_H) \\\n    $(BASIC_BLOCK_H) $(CFGLOOP_H) output.h $(EXPR_H) \\\n    $(FUNCTION_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_FLOW_H) \\\n-   $(REAL_H) $(TREE_PASS_H) tree-ssa-propagate.h langhooks.h \\\n+   $(TREE_PASS_H) tree-ssa-propagate.h langhooks.h \\\n    $(PARAMS_H)\n tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) $(TREE_PASS_H) $(CFGLOOP_H)\n tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(GGC_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n+   $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(GGC_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    gt-tree-phinodes.h $(RTL_H) $(TOPLEV_H)  $(GIMPLE_H)\n@@ -2380,13 +2381,13 @@ tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(BASIC_BLOCK_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) langhooks.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_H)\n tree-ssa-pre.o : tree-ssa-pre.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    $(CFGLOOP_H) alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) $(HASHTAB_H) \\\n    $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h tree-ssa-sccvn.h $(PARAMS_H) \\\n    $(DBGCNT_H) tree-scalar-evolution.h\n tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(CFGLOOP_H) \\\n    alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) langhooks.h $(HASHTAB_H) $(GIMPLE_H) \\\n    $(TREE_INLINE_H) tree-iterator.h tree-ssa-propagate.h tree-ssa-sccvn.h \\\n@@ -2396,125 +2397,123 @@ tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n    $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) $(TOPLEV_H) intl.h\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n-   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) hard-reg-set.h $(TOPLEV_H) \\\n+   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) $(TOPLEV_H) \\\n    value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H)\n tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n    $(DIAGNOSTIC_H) $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n-   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) hard-reg-set.h $(HASHTAB_H) $(TOPLEV_H) \\\n+   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) $(HASHTAB_H) $(TOPLEV_H) \\\n    tree-ssa-propagate.h $(SCEV_H)\n tree-tailcall.o : tree-tailcall.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n+   $(TREE_H) $(TM_P_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(DBGCNT_H)\n+   $(BASIC_BLOCK_H) $(DBGCNT_H)\n tree-ssa-sink.o : tree-ssa-sink.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) alloc-pool.h \\\n    $(BASIC_BLOCK_H) $(BITMAP_H) $(CFGLOOP_H) $(FIBHEAP_H) $(HASHTAB_H) \\\n-   langhooks.h $(REAL_H) $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h\n+   langhooks.h $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h\n tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(TM_P_H) $(FUNCTION_H) $(TREE_DUMP_H) $(TREE_INLINE_H) \\\n+   $(TM_P_H) $(FUNCTION_H) $(TREE_DUMP_H) $(TREE_INLINE_H) \\\n    tree-iterator.h $(GIMPLE_H) $(CGRAPH_H) $(EXPR_H) langhooks.h \\\n-   $(GGC_H) gt-tree-nested.h coretypes.h $(TREE_FLOW_H) pointer-set.h\n+   gt-tree-nested.h coretypes.h $(TREE_FLOW_H) pointer-set.h\n tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n-   $(CFGLOOP_H) $(RTL_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n-   $(TARGET_H) $(TREE_DUMP_H)\n+   $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n+   $(TREE_DUMP_H)\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   $(GIMPLE_H)\n+   $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H)\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n    $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) \\\n    coretypes.h langhooks.h $(IPA_REFERENCE_H)\n tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) langhooks.h \\\n-   $(GGC_H) $(TREE_PASS_H) coretypes.h $(TIMEVAR_H) $(TM_P_H) pointer-set.h \\\n+   $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) langhooks.h \\\n+   $(GGC_H) $(TREE_PASS_H) coretypes.h $(TIMEVAR_H) pointer-set.h \\\n    $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h $(TOPLEV_H)\n tree-ssa-loop.o : tree-ssa-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n    $(CFGLOOP_H) $(FLAGS_H) $(TREE_INLINE_H) $(SCEV_H) $(TOPLEV_H) $(TREE_VECTORIZER_H)\n tree-ssa-loop-unswitch.o : tree-ssa-loop-unswitch.c $(TREE_FLOW_H) \\\n-   $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n+   $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n    $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n+   coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(BASIC_BLOCK_H) \\\n     $(TREE_INLINE_H)\n tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h \\\n    $(EXPR_H) gt-tree-ssa-address.h $(GGC_H) tree-affine.h $(TARGET_H)\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TOPLEV_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n-   $(BASIC_BLOCK_H) $(GGC_H) hard-reg-set.h intl.h\n+   $(BASIC_BLOCK_H) $(GGC_H) intl.h\n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(BASIC_BLOCK_H) $(GGC_H) \\\n-   hard-reg-set.h $(TARGET_H)\n+   $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(BASIC_BLOCK_H) $(TARGET_H)\n tree-ssa-loop-ch.o : tree-ssa-loop-ch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(TREE_INLINE_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) hard-reg-set.h\n+   $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H)\n tree-ssa-loop-prefetch.o: tree-ssa-loop-prefetch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) \\\n-   $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n+   $(TREE_PASS_H) $(RECOG_H) insn-config.h $(HASHTAB_H) \\\n+   $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    $(TOPLEV_H) langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n    $(OPTABS_H)\n tree-predcom.o: tree-predcom.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(CFGLOOP_H) $(TREE_FLOW_H) $(GGC_H) $(TREE_DATA_REF_H) \\\n    $(PARAMS_H) $(DIAGNOSTIC_H) $(TREE_PASS_H) $(TM_H) coretypes.h \\\n    tree-affine.h $(TREE_INLINE_H)\n tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n-   $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n+   $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    tree-affine.h pointer-set.h $(TARGET_H)\n tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) hard-reg-set.h $(GIMPLE_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H)\n+   $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n+   output.h $(DIAGNOSTIC_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H)\n tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h \\\n+   $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(BASIC_BLOCK_H) output.h $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(TIMEVAR_H) $(CFGLOOP_H) $(TREE_PASS_H) $(CFGLAYOUT_H) \\\n    $(SCEV_H) $(PARAMS_H) $(TREE_INLINE_H) langhooks.h\n tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n    $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(REAL_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h pointer-set.h tree-affine.h tree-ssa-propagate.h\n+   $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n+   pointer-set.h tree-affine.h tree-ssa-propagate.h\n tree-ssa-math-opts.o : tree-ssa-math-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(FLAGS_H) $(TREE_H) $(TREE_FLOW_H) $(REAL_H) $(TIMEVAR_H) \\\n+   $(TM_H) $(FLAGS_H) $(TREE_H) $(TREE_FLOW_H) $(TIMEVAR_H) \\\n    $(TREE_PASS_H) alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H) \\\n    $(DIAGNOSTIC_H) $(RTL_H) $(EXPR_H) $(OPTABS_H)\n tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   hard-reg-set.h $(GIMPLE_H) vec.h \\\n+   $(GIMPLE_H) vec.h \\\n    $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h\n tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n-   tree-iterator.h $(REAL_H) $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) \\\n+   tree-iterator.h $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) \\\n    vec.h langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H)\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) hard-reg-set.h $(EXPR_H) $(GGC_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(TREE_DUMP_H) $(TOPLEV_H) $(FUNCTION_H) langhooks.h \\\n    $(FLAGS_H) $(CGRAPH_H) $(PLUGIN_H) \\\n@@ -2531,7 +2530,7 @@ gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n    $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(TOPLEV_H) $(OPTABS_H) \\\n-   $(REAL_H) $(SPLAY_TREE_H) vec.h tree-iterator.h tree-pass.h\n+   $(SPLAY_TREE_H) vec.h tree-iterator.h tree-pass.h\n gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) value-prof.h\n gimple-fold.o : gimple-fold.c $(TREE_FLOW_H) $(CONFIG_H) \\\n@@ -2555,15 +2554,15 @@ tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n omega.o : omega.c omega.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) $(TREE_PASS_H) $(PARAMS_H)\n tree-chrec.o: tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(REAL_H) $(SCEV_H) $(TREE_PASS_H) $(PARAMS_H) \\\n+   $(GGC_H) $(TREE_H) $(SCEV_H) $(TREE_PASS_H) $(PARAMS_H) \\\n    $(DIAGNOSTIC_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(FLAGS_H)\n tree-scalar-evolution.o: tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(REAL_H) $(RTL_H) \\\n+   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(TIMEVAR_H) $(CFGLOOP_H) $(SCEV_H) $(TREE_PASS_H) $(FLAGS_H) \\\n    gt-tree-scalar-evolution.h\n tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(FLAGS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n+   $(GGC_H) $(FLAGS_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(TREE_DATA_REF_H) $(TREE_PASS_H) langhooks.h\n sese.o: sese.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2653,17 +2652,17 @@ tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(CFGLOOP_H) $(TREE_PASS_H) $(TREE_VECTORIZER_H) $(TIMEVAR_H)\n tree-loop-linear.o: tree-loop-linear.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(OPTABS_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(TREE_PASS_H) $(TREE_DATA_REF_H) $(EXPR_H) $(LAMBDA_H) \\\n    $(TARGET_H) $(OBSTACK_H)\n tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(OPTABS_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(TREE_PASS_H) $(TREE_DATA_REF_H) $(EXPR_H) \\\n-   $(TARGET_H) langhooks.h $(TREE_VECTORIZER_H)\n+   langhooks.h $(TREE_VECTORIZER_H)\n tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_FLOW_H) $(TREE_H) $(RTL_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(GGC_H) \\\n+   $(TREE_FLOW_H) $(TREE_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n    $(DIAGNOSTIC_H) $(TREE_PASS_H) langhooks.h gt-tree-parloops.h \\\n    $(TREE_VECTORIZER_H)\n tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2677,24 +2676,24 @@ gimple.o : gimple.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(TREE_FLOW_H) value-prof.h $(FLAGS_H) $(DEMANGLE_H) \\\n    $(TARGET_H) $(ALIAS_H)\n gimple-pretty-print.o : gimple-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(REAL_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n+   $(TREE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n    $(TM_H) coretypes.h $(TREE_PASS_H) $(GIMPLE_H) value-prof.h\n tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(DIAGNOSTIC_H) $(DEMANGLE_H) $(HASHTAB_H) langhooks.h tree-mudflap.h \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(CGRAPH_H) $(GGC_H) \\\n-   gt-tree-mudflap.h $(BASIC_BLOCK_H) $(FLAGS_H) $(FUNCTION_H) hard-reg-set.h \\\n-   $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(TOPLEV_H) $(GIMPLE_H) tree-iterator.h\n+   gt-tree-mudflap.h $(BASIC_BLOCK_H) $(FLAGS_H) $(FUNCTION_H) \\\n+   $(TM_P_H) $(TREE_FLOW_H) $(TOPLEV_H) $(GIMPLE_H) tree-iterator.h\n tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(C_TREE_H) $(C_COMMON_H) $(GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n    output.h langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n    $(GGC_H) gt-tree-mudflap.h $(TREE_PASS_H) $(TOPLEV_H)\n tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(REAL_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n+   $(TREE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n    $(TM_H) coretypes.h tree-iterator.h $(SCEV_H) langhooks.h \\\n-   $(TREE_PASS_H) value-prof.h fixed-value.h output.h\n+   $(TREE_PASS_H) value-prof.h output.h\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FLAGS_H) $(REAL_H) $(TOPLEV_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n-   $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h fixed-value.h $(TARGET_H) \\\n+   $(TREE_H) $(FLAGS_H) $(TOPLEV_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n+   $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h $(TARGET_H) \\\n    $(GIMPLE_H)\n diagnostic.o : diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) version.h $(TM_P_H) $(FLAGS_H) $(INPUT_H) $(TOPLEV_H) intl.h \\\n@@ -2728,7 +2727,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    value-prof.h $(PARAMS_H) $(TM_P_H) reload.h ira.h dwarf2asm.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n    $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n-   opts.h params.def tree-mudflap.h $(REAL_H) $(TREE_PASS_H) $(GIMPLE_H) \\\n+   opts.h params.def tree-mudflap.h $(TREE_PASS_H) $(GIMPLE_H) \\\n    tree-ssa-alias.h $(PLUGIN_H)\n \t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n@@ -2740,7 +2739,7 @@ passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    dwarf2out.h sdbout.h dbxout.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n    graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) value-prof.h \\\n    $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \\\n-   langhooks.h insn-flags.h $(CFGLAYOUT_H) $(REAL_H) $(CFGLOOP_H) \\\n+   langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) \\\n    hosthooks.h $(CGRAPH_H) $(COVERAGE_H) $(TREE_PASS_H) $(TREE_DUMP_H) \\\n    $(GGC_H) $(INTEGRATE_H) $(CPPLIB_H) opts.h $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    gt-passes.h $(DF_H) $(PREDICT_H) $(LTO_HEADER_H) $(LTO_SECTION_OUT_H) \\\n@@ -2759,21 +2758,21 @@ rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(CONFIG_H)\n \n rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def $(TOPLEV_H) $(REAL_H)\n+  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def $(TOPLEV_H)\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) $(FLAGS_H) \\\n-    $(BCONFIG_H) $(REAL_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H)\n+    $(BCONFIG_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H)\n rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) \\\n-   $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) $(REAL_H) \\\n+   $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) \\\n    $(FLAGS_H) $(REGS_H) output.h $(TARGET_H) $(FUNCTION_H) $(TREE_H) \\\n    $(DF_H)\n \n varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n    output.h $(TOPLEV_H) xcoffout.h debug.h $(GGC_H) $(TM_P_H) \\\n    $(HASHTAB_H) $(TARGET_H) langhooks.h gt-varasm.h $(BASIC_BLOCK_H) \\\n-   $(CFGLAYOUT_H) $(CGRAPH_H) targhooks.h tree-mudflap.h $(REAL_H) \\\n+   $(CFGLAYOUT_H) $(CGRAPH_H) targhooks.h tree-mudflap.h \\\n    tree-iterator.h\n function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(CFGLAYOUT_H) $(GIMPLE_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) \\\n@@ -2798,7 +2797,7 @@ expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n    libfuncs.h $(INSN_ATTR_H) insn-config.h $(RECOG_H) output.h \\\n    typeclass.h hard-reg-set.h $(TOPLEV_H) hard-reg-set.h $(EXCEPT_H) \\\n-   reload.h langhooks.h intl.h $(TM_P_H) $(REAL_H) $(TARGET_H) \\\n+   reload.h langhooks.h intl.h $(TM_P_H) $(TARGET_H) \\\n    tree-iterator.h gt-expr.h $(MACHMODE_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n    $(TREE_PASS_H) $(DF_H) $(DIAGNOSTIC_H) vecprim.h $(SSAEXPAND_H)\n dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n@@ -2808,22 +2807,22 @@ builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(GIMPLE_H) $(FLAGS_H) $(TARGET_H) $(FUNCTION_H) $(REGS_H) \\\n    $(EXPR_H) $(OPTABS_H) insn-config.h $(RECOG_H) output.h typeclass.h \\\n    hard-reg-set.h $(TOPLEV_H) hard-reg-set.h $(EXCEPT_H) $(TM_P_H) $(PREDICT_H) \\\n-   libfuncs.h $(REAL_H) langhooks.h $(BASIC_BLOCK_H) tree-mudflap.h \\\n+   libfuncs.h langhooks.h $(BASIC_BLOCK_H) tree-mudflap.h \\\n    $(BUILTINS_DEF) $(MACHMODE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) value-prof.h\n calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) langhooks.h $(TARGET_H) \\\n    libfuncs.h $(REGS_H) $(TOPLEV_H) output.h $(FUNCTION_H) $(TIMEVAR_H) $(TM_P_H) \\\n    $(CGRAPH_H) $(EXCEPT_H) sbitmap.h $(DBGCNT_H) $(TREE_FLOW_H)\n expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-   $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) $(REAL_H) \\\n+   $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n    $(TOPLEV_H) $(TM_P_H) langhooks.h $(DF_H) $(TARGET_H)\n explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n    $(TOPLEV_H) $(EXCEPT_H) $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h \\\n    $(TARGET_H) output.h\n optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h \\\n-   $(RECOG_H) reload.h $(TOPLEV_H) $(GGC_H) $(REAL_H) $(TM_P_H) $(EXCEPT_H) \\\n+   $(RECOG_H) reload.h $(TOPLEV_H) $(GGC_H) $(TM_P_H) $(EXCEPT_H) \\\n    gt-optabs.h $(BASIC_BLOCK_H) $(TARGET_H) $(FUNCTION_H)\n dbxout.o : dbxout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FLAGS_H) $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) $(FUNCTION_H) \\\n@@ -2836,7 +2835,7 @@ sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) debug.h \\\n    gt-sdbout.h reload.h\n dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) version.h $(RTL_H) $(DWARF2_H) debug.h $(FLAGS_H) insn-config.h \\\n-   output.h $(DIAGNOSTIC_H) $(REAL_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n+   output.h $(DIAGNOSTIC_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n    libfuncs.h $(TOPLEV_H) dwarf2out.h reload.h $(GGC_H) $(EXCEPT_H) dwarf2asm.h \\\n    $(TM_P_H) langhooks.h $(HASHTAB_H) gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) \\\n    $(MD5_H) $(INPUT_H) $(FUNCTION_H) $(GIMPLE_H) $(TREE_PASS_H) $(TREE_FLOW_H)\n@@ -2852,25 +2851,25 @@ emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) insn-config.h $(RECOG_H) \\\n    $(GGC_H) $(EXPR_H) hard-reg-set.h $(BITMAP_H) $(TOPLEV_H) $(BASIC_BLOCK_H) \\\n    $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h $(TREE_PASS_H) gt-emit-rtl.h \\\n-   $(REAL_H) $(DF_H) $(PARAMS_H) $(TARGET_H)\n+   $(DF_H) $(PARAMS_H) $(TARGET_H)\n real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(TOPLEV_H) $(TM_P_H) $(REAL_H) dfp.h\n dfp.o : dfp.c dfp.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t$(TREE_H) \\\n    $(TOPLEV_H) $(TM_P_H) $(REAL_H) $(DECNUM_H)\n fixed-value.o: fixed-value.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) fixed-value.h $(REAL_H) $(TOPLEV_H)\n+   $(TREE_H) $(REAL_H) $(TOPLEV_H)\n integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(FLAGS_H) debug.h $(INTEGRATE_H) insn-config.h \\\n-   $(EXPR_H) $(REAL_H) $(REGS_H) intl.h $(FUNCTION_H) output.h $(RECOG_H) \\\n+   $(EXPR_H) $(REGS_H) intl.h $(FUNCTION_H) output.h $(RECOG_H) \\\n    $(EXCEPT_H) $(TOPLEV_H) $(PARAMS_H) $(TM_P_H) $(TARGET_H) langhooks.h \\\n    gt-integrate.h $(GGC_H) $(TREE_PASS_H) $(DF_H)\n jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(REGS_H) insn-config.h $(RECOG_H) $(EXPR_H) \\\n-   $(REAL_H) $(EXCEPT_H) $(FUNCTION_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n+   $(EXCEPT_H) $(FUNCTION_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n    $(TOPLEV_H) $(INSN_ATTR_H) $(TM_P_H) reload.h $(PREDICT_H) \\\n    $(TIMEVAR_H) $(TARGET_H)\n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h \\\n+   $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) $(TOPLEV_H) output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n    $(TREE_H) $(TARGET_H)\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n@@ -2947,15 +2946,15 @@ coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) $(TREE_PASS_H) gcov-io.c $(TM_P_H) \\\n    $(DIAGNOSTIC_H) intl.h\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(RECOG_H) \\\n+   $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) \\\n    $(EMIT_RTL_H) $(TOPLEV_H) output.h $(FUNCTION_H) $(TREE_PASS_H) \\\n    cselib.h gt-cselib.h $(GGC_H) $(TM_P_H) $(PARAMS_H) alloc-pool.h \\\n    $(HASHTAB_H) $(TARGET_H)\n cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) $(TOPLEV_H) \\\n    output.h $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n    $(EXCEPT_H) $(TARGET_H) $(PARAMS_H) rtlhooks-def.h $(TREE_PASS_H) \\\n-   $(REAL_H) $(DF_H) $(DBGCNT_H)\n+   $(DF_H) $(DBGCNT_H)\n dce.o : dce.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(EXCEPT_H) $(DF_H) cselib.h \\\n    $(DBGCNT_H) dce.h $(TIMEVAR_H) $(TREE_PASS_H) $(DBGCNT_H) $(TM_P_H)\n@@ -2973,15 +2972,15 @@ web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n implicit-zee.o : implicit-zee.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h \\\n    $(DF_H) $(TIMEVAR_H) tree-pass.h $(RECOG_H) $(EXPR_H) \\\n-   $(REGS_H) $(TREE_H) $(TM_P_H) insn-config.h $(INSN_ATTR_H) $(REAL_H) $(TOPLEV_H) \\\n+   $(REGS_H) $(TREE_H) $(TM_P_H) insn-config.h $(INSN_ATTR_H) $(TOPLEV_H) \\\n    $(TARGET_H) $(OPTABS_H) insn-codes.h rtlhooks-def.h $(PARAMS_H) $(CGRAPH_H)\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(GGC_H) \\\n+   $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) \\\n    $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) gt-gcse.h $(TREE_H) $(TIMEVAR_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H)\n store-motion.o : store-motion.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(GGC_H) \\\n+   $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TIMEVAR_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n@@ -2990,21 +2989,21 @@ resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n    $(FUNCTION_H) $(TOPLEV_H) $(INSN_ATTR_H) $(EXCEPT_H) $(PARAMS_H) $(TM_P_H)\n lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(RECOG_H) \\\n-   $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) output.h $(REAL_H)\n+   $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) output.h\n mode-switching.o : mode-switching.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(INSN_ATTR_H) $(RECOG_H) $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) \\\n-   output.h $(TREE_PASS_H) $(TIMEVAR_H) $(REAL_H) $(DF_H) $(TARGET_H)\n+   output.h $(TREE_PASS_H) $(TIMEVAR_H) $(DF_H) $(TARGET_H)\n tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n+    $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n-    $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(GIMPLE_H) $(CFGLOOP_H) $(SCEV_H)\n+    $(GGC_H) $(GIMPLE_H) $(CFGLOOP_H) $(SCEV_H)\n tree-call-cdce.o : tree-call-cdce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n+    $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n-    $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(GIMPLE_H)\n+    $(GIMPLE_H)\n tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(TOPLEV_H) \\\n@@ -3019,11 +3018,11 @@ tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) output.h \\\n     $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H)\n tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-    $(TM_H) $(RTL_H) $(REAL_H) $(FLAGS_H) $(TREE_FLOW_H) $(GIMPLE_H) \\\n+    $(TM_H) $(FLAGS_H) $(TREE_FLOW_H) $(GIMPLE_H) \\\n     tree-iterator.h $(TREE_PASS_H) tree-ssa-propagate.h $(DIAGNOSTIC_H)\n tree-vect-generic.o : tree-vect-generic.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(TM_H) $(TREE_FLOW_H) $(GIMPLE_H) tree-iterator.h $(TREE_PASS_H) \\\n-    $(FLAGS_H) $(OPTABS_H) $(RTL_H) $(MACHMODE_H) $(EXPR_H) \\\n+    $(FLAGS_H) $(OPTABS_H) $(MACHMODE_H) $(EXPR_H) \\\n     langhooks.h $(FLAGS_H) $(DIAGNOSTIC_H) gt-tree-vect-generic.h $(GGC_H) \\\n     coretypes.h insn-codes.h\n df-core.o : df-core.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3057,9 +3056,9 @@ profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) output.h langhooks.h $(GCOV_IO_H) $(TREE_H) \n tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n+   $(TM_H) $(TREE_H) $(FLAGS_H) $(REGS_H) $(EXPR_H) \\\n    $(FUNCTION_H) $(TOPLEV_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(GGC_H) gt-tree-profile.h $(CGRAPH_H)\n+   $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) gt-tree-profile.h $(CGRAPH_H)\n value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n    $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n@@ -3138,12 +3137,12 @@ et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    et-forest.h alloc-pool.h $(BASIC_BLOCK_H)\n combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(FUNCTION_H) insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n-   rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) $(REAL_H) hard-reg-set.h \\\n+   rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) hard-reg-set.h \\\n    $(TOPLEV_H) $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n    insn-codes.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) vecprim.h $(CGRAPH_H)\n reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) addresses.h $(REGS_H) insn-config.h \\\n-   $(RECOG_H) reload.h $(REAL_H) $(TOPLEV_H) $(FUNCTION_H) output.h $(GGC_H) \\\n+   $(RECOG_H) reload.h $(TOPLEV_H) $(FUNCTION_H) output.h $(GGC_H) \\\n    $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) gt-reginfo.h $(HASHTAB_H) \\\n    $(TARGET_H) $(TREE_PASS_H) $(DF_H) ira.h\n bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3153,24 +3152,24 @@ vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h vec.h $(GGC_H) \\\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n    hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h $(TOPLEV_H) \\\n-   addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(REAL_H) $(DF_H) ira.h\n+   addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h\n reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H) $(TOPLEV_H) $(TM_P_H) \\\n-   addresses.h $(EXCEPT_H) $(TREE_H) $(REAL_H) $(FLAGS_H) $(MACHMODE_H) \\\n+   addresses.h $(EXCEPT_H) $(TREE_H) $(FLAGS_H) $(MACHMODE_H) \\\n    $(OBSTACK_H) $(DF_H) $(TARGET_H) $(EMIT_RTL_H) ira.h\n rtlhooks.o :  rtlhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    rtlhooks-def.h $(EXPR_H) $(RECOG_H)\n postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(REAL_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) \\\n+   $(RTL_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) \\\n    hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) output.h \\\n    $(FUNCTION_H) $(TOPLEV_H) cselib.h $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(MACHMODE_H) \\\n    $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n postreload-gcse.o : postreload-gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TARGET_H) $(HASHTAB_H) intl.h $(OBSTACK_H) \\\n-   $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) $(REAL_H) $(DBGCNT_H)\n+   $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DBGCNT_H)\n caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n    addresses.h $(RECOG_H) reload.h $(EXPR_H) $(TOPLEV_H) $(TM_P_H) $(DF_H) \\\n@@ -3263,7 +3262,7 @@ sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(PARAMS_H) $(CFGLAYOUT_H) $(TARGET_H) output.h\n sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H) \\\n-   $(REAL_H) $(TREE_PASS_H) $(INSN_ATTR_H)\n+   $(TREE_PASS_H) $(INSN_ATTR_H)\n sel-sched.o : sel-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n@@ -3286,12 +3285,12 @@ final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n    $(EXCEPT_H) debug.h xcoffout.h $(TOPLEV_H) reload.h dwarf2out.h \\\n    $(TREE_PASS_H) $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) \\\n-   $(CFGLAYOUT_H) dbxout.h $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) $(REAL_H) \\\n+   $(CFGLAYOUT_H) dbxout.h $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) \\\n    $(DF_H) vecprim.h $(GGC_H) $(CFGLOOP_H) $(PARAMS_H) $(TREE_FLOW_H)\n recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(TOPLEV_H) output.h reload.h \\\n-   addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h $(REAL_H) \\\n+   addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h \\\n    $(DF_H) $(DBGCNT_H) $(TARGET_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n@@ -3333,7 +3332,7 @@ regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) $(TOPLEV_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n    $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h $(EXCEPT_H) $(TM_P_H) \\\n-   $(REAL_H) $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) \\\n+   $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n lambda-mat.o : lambda-mat.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n    $(TM_H) coretypes.h $(TREE_H) $(TREE_FLOW_H)\n@@ -3418,39 +3417,39 @@ s-mddeps: $(md_file) $(MD_INCLUDES) build/genmddeps$(build_exeext)\n genrtl.o : genrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t$(RTL_H)\\\n   $(GGC_H) $(OBSTACK_H)\n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) $(REGS_H) $(REAL_H) output.h $(INSN_ATTR_H)\t\t\\\n+  $(TM_H) $(RTL_H) $(REGS_H) output.h $(INSN_ATTR_H)\t\t\t\\\n   insn-config.h $(TOPLEV_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n insn-automata.o : insn-automata.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) $(REGS_H) $(REAL_H) output.h $(INSN_ATTR_H)\t\t\\\n+  $(TM_H) $(RTL_H) $(REGS_H) output.h $(INSN_ATTR_H)\t\t\t\\\n   insn-config.h $(TOPLEV_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n-  $(RTL_H) $(TM_P_H) $(FUNCTION_H) $(EXPR_H) $(OPTABS_H) $(REAL_H)\t\\\n+  $(RTL_H) $(TM_P_H) $(FUNCTION_H) $(EXPR_H) $(OPTABS_H) \t\t\\\n   dfp.h $(FLAGS_H) output.h insn-config.h hard-reg-set.h $(RECOG_H)\t\\\n   $(RESOURCE_H) reload.h $(TOPLEV_H) $(REGS_H) tm-constrs.h $(GGC_H)\t\\\n   $(BASIC_BLOCK_H) $(INTEGRATE_H)\n insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(TOPLEV_H) insn-config.h $(RECOG_H)\n insn-modes.o : insn-modes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t$(TM_H) \\\n-  $(MACHMODE_H) $(REAL_H)\n+  $(MACHMODE_H)\n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(TM_P_H) insn-config.h $(FLAGS_H) $(RECOG_H)\t\\\n   $(EXPR_H) $(OPTABS_H) reload.h\n insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) $(GGC_H) $(REGS_H) $(REAL_H) conditions.h\t\t\\\n+  $(TM_H) $(RTL_H) $(GGC_H) $(REGS_H) conditions.h\t\t\t\\\n   hard-reg-set.h insn-config.h $(INSN_ATTR_H) $(EXPR_H) output.h\t\\\n-  $(RECOG_H) $(FUNCTION_H) $(TOPLEV_H) $(FLAGS_H) insn-codes.h $(TM_P_H)\t\\\n+  $(RECOG_H) $(FUNCTION_H) $(TOPLEV_H) $(FLAGS_H) insn-codes.h $(TM_P_H)\\\n   $(TARGET_H) tm-constrs.h\n insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n-  insn-config.h $(RTL_H) $(TM_P_H) $(REGS_H) output.h $(REAL_H)\t\t\\\n+  insn-config.h $(RTL_H) $(TM_P_H) $(REGS_H) output.h \t\t\t\\\n   $(RECOG_H) $(EXCEPT_H) $(FUNCTION_H) $(TOPLEV_H) $(FLAGS_H) tm-constrs.h\n insn-preds.o : insn-preds.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n   $(TM_H) $(RTL_H) $(TREE_H) insn-config.h $(RECOG_H) output.h\t\t\\\n   $(FLAGS_H) $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H)\t\\\n-  $(TOPLEV_H) reload.h $(REGS_H) $(REAL_H) tm-constrs.h\n+  $(TOPLEV_H) reload.h $(REGS_H) tm-constrs.h\n insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n   $(TM_H) $(RTL_H) insn-config.h $(RECOG_H) output.h $(FLAGS_H)\t\t\\\n-  $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H) $(TOPLEV_H)\t\t\\\n-  reload.h $(REAL_H) $(REGS_H) tm-constrs.h\n+  $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H) $(TOPLEV_H)\t\\\n+  reload.h $(REGS_H) tm-constrs.h\n \n # For each of the files generated by running a generator program over\n # the machine description, the following pair of static pattern rules\n@@ -3678,12 +3677,12 @@ build/print-rtl.o: print-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n build/read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(GTM_H) $(RTL_BASE_H) $(OBSTACK_H) $(HASHTAB_H) gensupport.h\n build/rtl.o: rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H)\t\\\n-  $(RTL_H) $(REAL_H) $(GGC_H) errors.h\n+  $(RTL_H) $(GGC_H) errors.h\n build/vec.o : vec.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h vec.h \\\n    $(GGC_H) $(TOPLEV_H)\n build/gencondmd.o : build/gencondmd.c $(BCONFIG_H) $(SYSTEM_H)\t\t\\\n   coretypes.h $(GTM_H) insn-constants.h $(RTL_H) $(TM_P_H)\t\t\\\n-  $(FUNCTION_H) $(REGS_H) $(RECOG_H) $(REAL_H) output.h $(FLAGS_H)\t\\\n+  $(FUNCTION_H) $(REGS_H) $(RECOG_H) output.h $(FLAGS_H)\t\t\\\n   $(RESOURCE_H) $(TOPLEV_H) reload.h $(EXCEPT_H) tm-constrs.h\n # This pulls in tm-pred.h which contains inline functions wrapping up\n # predicates from the back-end so those functions must be discarded.\n@@ -4884,8 +4883,7 @@ qmtest-gui: ${QMTEST_DIR}/context\n \n # Run Paranoia on real.c.\n \n-paranoia.o: $(srcdir)/../contrib/paranoia.cc $(CONFIG_H) $(SYSTEM_H) \\\n-  $(REAL_H) $(TREE_H)\n+paranoia.o: $(srcdir)/../contrib/paranoia.cc $(CONFIG_H) $(SYSTEM_H) $(TREE_H)\n \tg++ -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< $(OUTPUT_OPTION)\n \n paranoia: paranoia.o real.o $(LIBIBERTY)"}, {"sha": "b7be275341ca202b5324e85b33c258b10e9ec7e9", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"machmode.h\"\n-#include \"real.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"gimple.h\""}, {"sha": "6a5315b7ec91ec28c66e7ebd5afeee8cab65a7ba", "filename": "gcc/c-common.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -45,10 +45,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"tree-mudflap.h\"\n #include \"opts.h\"\n-#include \"real.h\"\n #include \"cgraph.h\"\n #include \"target-def.h\"\n-#include \"fixed-value.h\"\n #include \"libfuncs.h\"\n \n cpp_reader *parse_in;\t\t/* Declared in c-pragma.h.  */"}, {"sha": "b697b89f779ff8a3edbdccd3159c44f0d17d53e9", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"version.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"c-common.h\"\n #include \"c-pragma.h\"\n #include \"output.h\""}, {"sha": "22a0068eb09f1da35c79db83e1eac46d5fb251bc", "filename": "gcc/c-lex.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,8 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-#include \"real.h\"\n-#include \"fixed-value.h\"\n #include \"tree.h\"\n #include \"input.h\"\n #include \"output.h\""}, {"sha": "af62c3cfda0a927bed2ab8a2abb7ce1315760879", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,8 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"real.h\"\n-#include \"fixed-value.h\"\n+#include \"tree.h\"\n #include \"intl.h\"\n #include \"c-pretty-print.h\"\n #include \"c-tree.h\""}, {"sha": "2e81efcb0274c92c2e244d3b3bf12ccc4ec3d5b4", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -92,7 +92,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"target.h\"\n #include \"optabs.h\""}, {"sha": "4daf3df4d652bc2d81552a89ec0e0a6defc6b930", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "901698ea6b1c37b4caeae45ea1542f77864b5411", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "fe077f6453d1d598a3516ddd7edbd9708a729d20", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -31,7 +31,6 @@\n #include \"obstack.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "d8942c5c0810e98122de5f5a8bd15b2d69eb0ce2", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "152e910ee6754b4500b92f397f1b5dc0f796b1f9", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"insn-codes.h\"\n #include \"conditions.h\""}, {"sha": "62ee7d0c3309078487a73acea31bfe038aeed9fe", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "3b5794242c563f7e45e8aaa53676891a5db0ace9", "filename": "gcc/config/crx/crx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fcrx%2Fcrx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fcrx%2Fcrx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcrx%2Fcrx.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -32,7 +32,6 @@\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "eba0329910ee8c49e5c04205f5828f9bc0642146", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "c880f21546c8638be51d2279c9705aedbee9a73e", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -28,7 +28,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "d4009693cd8d2208ad09eb73561f935c00a5e1f2", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "4136eb016885d2793ba1eec47066b0ff537d6dbb", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "e4e758dbeb0c25c3d689dc957d6a18053d8e44f1", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "e1e3dff8b59dffee139e82121966da57c266ec8b", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "0e51eca796577dfffd862d0913c134bbb7a0f38b", "filename": "gcc/config/iq2000/iq2000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "4288ed285d92648ede5e466ac1927f3c3260093f", "filename": "gcc/config/lm32/lm32.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Flm32%2Flm32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Flm32%2Flm32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "cfc4a1593b61d7f8c9289e69f261a044d44941b2", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "36265e6221d4e890eaf46c87fc91a5dcc6a3f5df", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "397413f61b7ead6eb62cbd4ae0f76fc83b229be5", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "de6442aa6be5c421c84e9ea37cc5fa59afe3e0d6", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "574b5f6d5cd1e9df714fb2ecad5353eec517c2eb", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@\n #include \"mcore.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "a4b167da4b76ac8c77037bfe9269c424087ea3b0", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "a00b10680f808b43e2cc2440afe9a42952468db7", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "de66ac4e40d762a4bd2788b4bd780d607576220b", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"integrate.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n-#include \"real.h\"\n \n /* First some local helper definitions.  */\n #define MMIX_FIRST_GLOBAL_REGNUM 32"}, {"sha": "79bdd7685eae63630332cd0eb64f578e41f7f2e2", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "1e692b18d7ebd1182d24583803f9fe513090835e", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,7 +25,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "5ef405b4f44115610bde5610365850b1d50f15ee", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "733bf756c3e7c4eeae1496383b27fe639ce67fac", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"function.h\""}, {"sha": "499c55d967793e3719cf33ff4c14d4a891a7515d", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not, see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "8f2c35d07f215de51cfacd282d660582d53d3e71", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "b5a887b64eb95f006fdc73212c885aeef5bf8603", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "c377ea67447642968a95f3ff8b9a9e6647740c90", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "33e15ee330fb45e6eb38c8c419aef3353d0a7d8a", "filename": "gcc/config/score/score.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fscore%2Fscore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fscore%2Fscore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,7 +25,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "724cf61bc649a63e7154300c813c453589a0fefa", "filename": "gcc/config/score/score3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fscore%2Fscore3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fscore%2Fscore3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore3.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,7 +25,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "547ac00517af86320a9d10171d74c3ef5d6ce0ab", "filename": "gcc/config/score/score7.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fscore%2Fscore7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fscore%2Fscore7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore7.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,7 +25,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "abd579ae1a7ad8a37a4d20e8c11bb6b4556f7434", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n-#include \"real.h\"\n #include \"langhooks.h\"\n #include \"basic-block.h\"\n #include \"df.h\""}, {"sha": "10502e03b27f1fe6b29fa3869b1bc89f2c3f193f", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"insn-codes.h\"\n #include \"conditions.h\""}, {"sha": "0eff2ccfc8dd78fcca9fe065ac2f2e111ffb6ab1", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -21,7 +21,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-attr.h\""}, {"sha": "30fe9a534b04ee6c4367734108891a728cd77f1e", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "18b1a1ac7440a9d6357c3f56df369e05b76738de", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\""}, {"sha": "5d547fee8d5297ced4a035ec99293dbe76e63636", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"function.h\""}, {"sha": "34e1326fb8e398529830bf11c7afbee2df9c9c39", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"insn-flags.h\""}, {"sha": "436fb2a65879fe2ff573ed6b4f7d0b09f0ae0409", "filename": "gcc/convert.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -32,8 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"convert.h\"\n #include \"toplev.h\"\n #include \"langhooks.h\"\n-#include \"real.h\"\n-#include \"fixed-value.h\"\n \n /* Convert EXPR to some pointer or reference type TYPE.\n    EXPR must be pointer, reference, integer, enumeral, or literal zero;"}, {"sha": "bfb4456a22d27ea3024fb92d25c3a9cebd6fc7b7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -1,3 +1,8 @@\n+2010-05-21  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* error.c, tree.c, typeck2.c, cxx-pretty-print.c, mangle.c:\n+\tClean up redundant includes.\n+\n 2010-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/30298"}, {"sha": "1c376670d600ecf4acbc4999450e5167a9a21230", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,10 +23,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"real.h\"\n #include \"intl.h\"\n-#include \"cxx-pretty-print.h\"\n #include \"cp-tree.h\"\n+#include \"cxx-pretty-print.h\"\n #include \"toplev.h\"\n \n /* Translate if being used for diagnostics, but not for dump files or"}, {"sha": "b62cfcf662cbb576fea8a91d3f7aeb7d77d7909e", "filename": "gcc/cp/error.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\""}, {"sha": "89ccbaf3f0c11c615111a52baae9c3387ea1182a", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -52,7 +52,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"cp-tree.h\"\n-#include \"real.h\"\n #include \"obstack.h\"\n #include \"toplev.h\"\n #include \"flags.h\""}, {"sha": "40a0c52d780a37a20c907ba29553b3265340e1ec", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"rtl.h\"\n #include \"toplev.h\"\n #include \"insn-config.h\""}, {"sha": "b1336bf0a7fa9c348cfa4dac360eadfbf4a805d8", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n-#include \"real.h\"\n \n static tree\n process_init_constructor (tree type, tree init);"}, {"sha": "70e8daf3411eec36984c55be30822c25ebe560f7", "filename": "gcc/cse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"basic-block.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"function.h\""}, {"sha": "af2bb0ee0a53b70dab0ab672a30f119bc5c722f4", "filename": "gcc/cselib.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"function.h\""}, {"sha": "e2e90c4a4c320167c18a7f235c373b23a47c07e2", "filename": "gcc/dfp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fdfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fdfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdfp.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"toplev.h\"\n-#include \"real.h\"\n #include \"tm_p.h\"\n #include \"dfp.h\"\n "}, {"sha": "df9cccebec369f80300af0bdaba271f92fe39d54", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -64,7 +64,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"version.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\""}, {"sha": "204f9df5c54da6f6c4d1c613d3490ed63347305b", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -50,8 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n-#include \"real.h\"\n-#include \"fixed-value.h\"\n #include \"bitmap.h\"\n #include \"basic-block.h\"\n #include \"ggc.h\""}, {"sha": "017e208a80139d89bd96b9451540aa67c3cff507", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n-#include \"real.h\"\n #include \"recog.h\"\n #include \"langhooks.h\"\n #include \"df.h\""}, {"sha": "50a20355d1ca399c2ec645e5d1d33867ad75de9b", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"machmode.h\"\n-#include \"real.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\""}, {"sha": "93c2970b32023a52ada629c062d2552c06268c89", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -58,7 +58,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"conditions.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\"\n #include \"except.h\""}, {"sha": "8c23bf0f8836e34c4b6939ec9d11424b220552ec", "filename": "gcc/fixed-value.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffixed-value.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffixed-value.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixed-value.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"toplev.h\"\n-#include \"fixed-value.h\"\n \n /* Compare two fixed objects for bitwise identity.  */\n "}, {"sha": "65ded14e95fe2a5f08a3e97840e09025a4f6102f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -53,8 +53,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n-#include \"fixed-value.h\"\n #include \"rtl.h\"\n #include \"expr.h\"\n #include \"tm_p.h\""}, {"sha": "cce94841c5e7c38df71c63009568ac32ce81ab59", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -1,3 +1,8 @@\n+2010-05-21  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* trans-const.c, trans-types.c, trans-intrinsic.c:\n+\tClean up redundant includes.\n+\n 2010-05-20  Daniel Franke  <franke.daniel@gmail.com>\n \n         PR fortran/38407"}, {"sha": "9570da0ad94bf1dd4f8f5b59321c44bf6b3435f9", "filename": "gcc/fortran/trans-const.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2Ftrans-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2Ftrans-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"toplev.h\"\n-#include \"real.h\"\n #include \"double-int.h\"\n #include \"gfortran.h\"\n #include \"trans.h\""}, {"sha": "1113b5cd3cc734d472a7c915bd8d79be70fdb4b1", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"ggc.h\"\n #include \"toplev.h\"\n-#include \"real.h\"\n #include \"flags.h\"\n #include \"gfortran.h\"\n #include \"arith.h\""}, {"sha": "6b625f8e2e7ca560ab2de77e4b19c35d2e87e314", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"trans.h\"\n #include \"trans-types.h\"\n #include \"trans-const.h\"\n-#include \"real.h\"\n #include \"flags.h\"\n #include \"dwarf2out.h\"\t/* For struct array_descr_info.  */\n \f"}, {"sha": "4e2fe8625c54058ce13056a3b20469947c976647", "filename": "gcc/gcse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -151,7 +151,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\""}, {"sha": "1a9ebd22eaf313f8318d1018a41eb55b1502ade1", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -4537,7 +4537,6 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"insn-config.h\\\"\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n-  printf (\"#include \\\"real.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n   printf (\"#include \\\"toplev.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");"}, {"sha": "beda6cdb5ca62151d6b3658569a9e51372b67a6f", "filename": "gcc/genautomata.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -9565,7 +9565,6 @@ main (int argc, char **argv)\n \t\t\"#include \\\"insn-config.h\\\"\\n\"\n \t\t\"#include \\\"recog.h\\\"\\n\"\n \t\t\"#include \\\"regs.h\\\"\\n\"\n-\t\t\"#include \\\"real.h\\\"\\n\"\n \t\t\"#include \\\"output.h\\\"\\n\"\n \t\t\"#include \\\"insn-attr.h\\\"\\n\"\n \t\t\"#include \\\"toplev.h\\\"\\n\""}, {"sha": "a1a6ef3251d0961ccd723098fae5a3663ef5ee65", "filename": "gcc/genconditions.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenconditions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenconditions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconditions.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -81,7 +81,6 @@ write_header (void)\n \\n\\\n #include \\\"regs.h\\\"\\n\\\n #include \\\"recog.h\\\"\\n\\\n-#include \\\"real.h\\\"\\n\\\n #include \\\"output.h\\\"\\n\\\n #include \\\"flags.h\\\"\\n\\\n #include \\\"hard-reg-set.h\\\"\\n\\"}, {"sha": "9df559b5705c370b538b774cc98c3461c0304d05", "filename": "gcc/genemit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -853,7 +853,6 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"#include \\\"expr.h\\\"\\n\");\n   printf (\"#include \\\"optabs.h\\\"\\n\");\n-  printf (\"#include \\\"real.h\\\"\\n\");\n   printf (\"#include \\\"dfp.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");"}, {"sha": "b65e1dbe6cc1e3c28eda35fe7ec906732aa61d3f", "filename": "gcc/genoutput.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -235,7 +235,6 @@ output_prologue (void)\n   printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n   printf (\"#include \\\"hard-reg-set.h\\\"\\n\");\n-  printf (\"#include \\\"real.h\\\"\\n\");\n   printf (\"#include \\\"insn-config.h\\\"\\n\\n\");\n   printf (\"#include \\\"conditions.h\\\"\\n\");\n   printf (\"#include \\\"insn-attr.h\\\"\\n\\n\");"}, {"sha": "0fec59f317cf03399165039312ef2024bb505fb2", "filename": "gcc/genpeep.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -373,7 +373,6 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n-  printf (\"#include \\\"real.h\\\"\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\");\n   printf (\"#include \\\"except.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");"}, {"sha": "3e7070ee3809899dd06cdac3b00a7179e3972fba", "filename": "gcc/genpreds.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -1348,7 +1348,6 @@ write_insn_preds_c (void)\n #include \\\"function.h\\\"\\n\\\n #include \\\"insn-config.h\\\"\\n\\\n #include \\\"recog.h\\\"\\n\\\n-#include \\\"real.h\\\"\\n\\\n #include \\\"output.h\\\"\\n\\\n #include \\\"flags.h\\\"\\n\\\n #include \\\"hard-reg-set.h\\\"\\n\\"}, {"sha": "16a7b56c6e9210397eb2f0e6c6b1f1bf4c8e24ae", "filename": "gcc/genrecog.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -2474,7 +2474,6 @@ write_header (void)\n #include \\\"function.h\\\"\\n\\\n #include \\\"insn-config.h\\\"\\n\\\n #include \\\"recog.h\\\"\\n\\\n-#include \\\"real.h\\\"\\n\\\n #include \\\"output.h\\\"\\n\\\n #include \\\"flags.h\\\"\\n\\\n #include \\\"hard-reg-set.h\\\"\\n\\"}, {"sha": "371e35e851f8d78f80e464c6618479a6d31a3486", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n-#include \"real.h\"\n #include \"hashtab.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\""}, {"sha": "17215dc02c0b7eda47e15c94c67896d7c8558edd", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"hashtab.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"function.h\"\n #include \"output.h\"\n #include \"expr.h\""}, {"sha": "8d6b885f342e8bd4b6199e41be6fe17eadf6ba38", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -33,7 +33,6 @@\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"expr.h\"\n-#include \"real.h\"\n #include \"output.h\"\n #include \"optabs.h\"\n #include \"toplev.h\""}, {"sha": "3344d7f8af2d2c738a62e0f9bcb7c1be426e1278", "filename": "gcc/implicit-zee.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fimplicit-zee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fimplicit-zee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fimplicit-zee.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -193,7 +193,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"target.h\"\n #include \"timevar.h\""}, {"sha": "e3decfbfe19049ea17bef3c515dc64890d1e4478", "filename": "gcc/integrate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"recog.h\"\n #include \"integrate.h\"\n-#include \"real.h\"\n #include \"except.h\"\n #include \"function.h\"\n #include \"toplev.h\""}, {"sha": "1fe990210fbafe421f66b6a78d692435a7620615", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -1,3 +1,7 @@\n+2010-05-21  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* typeck.c, decl.c, jcf-parse.c, except.c, expr.c:\n+\n 2010-05-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43521"}, {"sha": "81d4d6e60ad07ba0602b89748e35b71f0e92ce5f", "filename": "gcc/java/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -31,7 +31,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"flags.h\"\n #include \"java-tree.h\""}, {"sha": "84e9e2266b378f07bf6bb29dc885600d85ec5817", "filename": "gcc/java/except.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"rtl.h\"\n #include \"java-tree.h\"\n #include \"javaop.h\""}, {"sha": "28853643988b79646fe047158f61c6ee4f1dbcc0", "filename": "gcc/java/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"expr.h\""}, {"sha": "991999c0cf2ae7a40562a953722d5d5cbc0aab34", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"obstack.h\"\n #include \"flags.h\"\n #include \"java-except.h\""}, {"sha": "79154896a44ade43c3fc3e41a9746b607eb3c100", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,7 +29,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"obstack.h\"\n #include \"flags.h\"\n #include \"java-tree.h\""}, {"sha": "6ce989d2037f675caab62e781167e91a272b63e1", "filename": "gcc/jump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -48,7 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"function.h\"\n #include \"expr.h\"\n-#include \"real.h\"\n #include \"except.h\"\n #include \"diagnostic.h\"\n #include \"toplev.h\""}, {"sha": "62777b09b522027b13036dce23a136fb06507745", "filename": "gcc/lcm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Flcm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Flcm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flcm.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -57,7 +57,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\""}, {"sha": "fa119d056b35313bcf0f808c7ce00fa58f1cce9d", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\""}, {"sha": "a36075d9e817f2283292af1f795c7f620dabd1b2", "filename": "gcc/optabs.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"reload.h\"\n #include \"ggc.h\"\n-#include \"real.h\"\n #include \"basic-block.h\"\n #include \"target.h\"\n "}, {"sha": "7f097f8e70b500179cfb9801113b8ad2d764f00e", "filename": "gcc/passes.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -65,7 +65,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"reload.h\"\n #include \"dwarf2asm.h\"\n #include \"integrate.h\"\n-#include \"real.h\"\n #include \"debug.h\"\n #include \"target.h\"\n #include \"langhooks.h\""}, {"sha": "5da9f62697d11fe23d7b2016b7558896f2cfa589", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\""}, {"sha": "6b8f186917fbbcc5200da6a18c4ec774c12d3cfc", "filename": "gcc/postreload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"output.h\"\n #include \"cselib.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"except.h\"\n #include \"tree.h\""}, {"sha": "c5a6647169433ed0350b84edcc9fee573421e08b", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n    generator programs.  */\n #ifndef GENERATOR_FILE\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\""}, {"sha": "d75efa723802612333a1633016b71bc28a6e4288", "filename": "gcc/print-tree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,8 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n-#include \"fixed-value.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"tree-iterator.h\""}, {"sha": "1847c236fec85912ba289bf6173c073e6b44efab", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n #include \"output.h\""}, {"sha": "4cfcf843a05c995862dbbb42b3b7c0693d95b4f2", "filename": "gcc/reginfo.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"reload.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"output.h\"\n #include \"ggc.h\""}, {"sha": "599e335eb9c4ff76f90ba5cba3989191bbe1b17c", "filename": "gcc/reload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -105,7 +105,6 @@ a register with any other reload.  */\n #include \"addresses.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"output.h\"\n #include \"function.h\"\n #include \"toplev.h\""}, {"sha": "7c89b64f314048d2fcf72e043a87e54857e931b4", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"reload.h\"\n #include \"recog.h\"\n #include \"output.h\"\n-#include \"real.h\"\n #include \"toplev.h\"\n #include \"except.h\"\n #include \"tree.h\""}, {"sha": "dda701e8aeda149dfbd66f0a5b6878a46f716db9", "filename": "gcc/rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n-#include \"real.h\"\n #include \"ggc.h\"\n #ifdef GENERATOR_FILE\n # include \"errors.h\""}, {"sha": "f5dc0bb39fd84f068bdd8697564619c8c7f3dea8", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"regs.h\"\n #include \"function.h\"\n #include \"df.h\""}, {"sha": "24c9c2dff26e3f30f1f8b19ba5f6fd464c4d14e4", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"obstack.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n-#include \"real.h\"\n #include \"insn-attr.h\"\n #include \"sched-int.h\"\n #include \"tree-pass.h\""}, {"sha": "323633e578511e4630a67155b472b771604bdd12", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"function.h\""}, {"sha": "8f8617cff3796f65b21549724be9314d349146c2", "filename": "gcc/store-motion.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fstore-motion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fstore-motion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstore-motion.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\""}, {"sha": "c32871933dea26afde0058ff3e5322cf9a797600", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -67,7 +67,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ira.h\"\n #include \"dwarf2asm.h\"\n #include \"integrate.h\"\n-#include \"real.h\"\n #include \"debug.h\"\n #include \"target.h\"\n #include \"langhooks.h\""}, {"sha": "2dc6254a519a4b93fc533b2b256b2684acdb888d", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -20,11 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n #include \"tree-dump.h\""}, {"sha": "25a0dfc495886f38ad0a801d8fa4e15bc5cd9632", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,15 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n-\n-/* These RTL headers are needed for basic-block.h.  */\n-#include \"rtl.h\"\n-#include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n-#include \"obstack.h\"\n #include \"basic-block.h\"\n-\n #include \"tree.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\""}, {"sha": "ba734150fc37443b7f2d0141190b91b631e91f32", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,9 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"flags.h\""}, {"sha": "b8f5a549b303c4cd042f701751a408db50f1ddb2", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,9 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"toplev.h\""}, {"sha": "e7b674559b7d91e0e696ef898f655c1a2694b4b6", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"diagnostic.h\"\n #include \"cfgloop.h\"\n #include \"tree-flow.h\""}, {"sha": "f1ef1770939a6f1cd0510b4888b2070024f084f7", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,8 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"real.h\"\n #include \"flags.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\""}, {"sha": "0c7990b2866577524a86554e62ddbcec89e5e9a2", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -83,7 +83,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n \n /* These RTL headers are needed for basic-block.h.  */\n-#include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\""}, {"sha": "bb5fd5467a17ce21683e1a168b65ee1c024b8316", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,9 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"pointer-set.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"timevar.h\""}, {"sha": "90b899039d2568827aa5e3a5a674f3a5ac3b98aa", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -31,8 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n-#include \"real.h\"\n-#include \"fixed-value.h\"\n \n static unsigned int queue (dump_info_p, const_tree, int);\n static void dump_index (dump_info_p, unsigned int);"}, {"sha": "2cc03d3b0ee6f067f1dbb511d302035a8729b3bd", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,8 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"except.h\""}, {"sha": "864f3b9e6de8d749f173a2dd2f12656339e4311b", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #define _TREE_FLOW_H 1\n \n #include \"bitmap.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"hashtab.h\"\n #include \"gimple.h\""}, {"sha": "9084954e5e69950688fbfadfb084798016fe4d41", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -88,7 +88,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"timevar.h\"\n-#include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n@@ -98,7 +97,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-pass.h\"\n-#include \"target.h\"\n \n /* List of basic blocks in if-conversion-suitable order.  */\n static basic_block *ifc_bbs;"}, {"sha": "468aa011daa098e5ea3fa9c2dfb3ac1d03536a8a", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"tree.h\"\n #include \"tree-inline.h\"\n-#include \"rtl.h\"\n #include \"expr.h\"\n #include \"flags.h\"\n #include \"params.h\""}, {"sha": "98ad1a1526d0a355effe0c092798b4fa0f415780", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,10 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"langhooks.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\"\n@@ -44,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n #include \"domwalk.h\"\n-#include \"ggc.h\"\n #include \"params.h\"\n #include \"vecprim.h\"\n "}, {"sha": "746e4421a967c456ef85c5924428618bf871d9a5", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -46,11 +46,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n-#include \"target.h\"\n-\n-#include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\""}, {"sha": "b771852c609cdd1cb8f6b49c8cab8e4fc0165367", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,11 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n-#include \"target.h\"\n-\n-#include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"obstack.h\""}, {"sha": "d1dad3abd0c704cd8161f9383e0b0e75e2bd0d6c", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,8 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"hard-reg-set.h\"\n-#include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\""}, {"sha": "cd1d770b335705dd1f57f57751a173c04c8b776b", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,7 +23,6 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"tree-dump.h\"\n@@ -35,7 +34,6 @@\n #include \"expr.h\"\n #include \"langhooks.h\"\n #include \"pointer-set.h\"\n-#include \"ggc.h\"\n \n \n /* The object of this pass is to lower the representation of a set of nested"}, {"sha": "ba22e60a98864fddf7abd5ab857b8dabf6d97f6c", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,16 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n-#include \"expr.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\"\n+#include \"flags.h\"\t/* For \"optimize\" in gate_pass_return_slot.\n+\t\t\t   FIXME: That should be up to the pass manager,\n+\t\t\t   but pass_nrv is not in pass_all_optimizations.  */\n \n /* This file implements return value optimizations for functions which\n    return aggregate types."}, {"sha": "f71ab4d7b53afabe588d22789affcf7a65739ca0", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,12 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n-#include \"expr.h\"\n #include \"diagnostic.h\"\n #include \"basic-block.h\"\n #include \"flags.h\""}, {"sha": "3c9a1d2826ad30862ed39d9f625d01b84481856f", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,10 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tree-flow.h\"\n #include \"cfgloop.h\"\n-#include \"ggc.h\"\n #include \"tree-data-ref.h\"\n #include \"diagnostic.h\"\n #include \"tree-pass.h\""}, {"sha": "c97ace88c8b4157eb890ba1bdde3bc639205d9a4", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n+#include \"rtl.h\"\t/* FIXME: Only for ceil_log2, of all things...  */\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\""}, {"sha": "8d75c949fbddf7a00ed57fb5caf0f65e5835c3bd", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,14 +26,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n-#include \"real.h\"\n #include \"hashtab.h\"\n #include \"tree-flow.h\"\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n #include \"tree-chrec.h\"\n #include \"tree-pass.h\"\n-#include \"fixed-value.h\"\n #include \"value-prof.h\"\n #include \"predict.h\"\n "}, {"sha": "9bc1bc3eae01d1f9542176dab15b122fc771a3f0", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -30,9 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"regs.h\"\n #include \"expr.h\"\n #include \"function.h\"\n@@ -44,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"timevar.h\"\n #include \"value-prof.h\"\n-#include \"ggc.h\"\n #include \"cgraph.h\"\n \n static GTY(()) tree gcov_type_node;"}, {"sha": "b924ef1a07c1be31e2e601dc4ee5ed9dbc668428", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -260,10 +260,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n-\n-/* These RTL headers are needed for basic-block.h.  */\n-#include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\""}, {"sha": "17257ab3ffa86e362daab567d7ef766452292f03", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -26,9 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n@@ -38,11 +36,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"flags.h\"\n #include \"tree-inline.h\"\n+#include \"tree-affine.h\"\n+\n+/* FIXME: We compute address costs using RTL.  */\n #include \"insn-config.h\"\n+#include \"rtl.h\"\n #include \"recog.h\"\n #include \"expr.h\"\n #include \"ggc.h\"\n-#include \"tree-affine.h\"\n #include \"target.h\"\n \n /* TODO -- handling of symbols (according to Richard Hendersons"}, {"sha": "a68ec10ec64b9eea6de5d942ce03271b98ebdee0", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,9 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"timevar.h\"\n #include \"expr.h\""}, {"sha": "1d47fa3f8eda1128e63c2b448a1ddd4de99dc789", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -191,9 +191,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\""}, {"sha": "43dec41176f3bcaab188272169529ce0b3140d81", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,9 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\""}, {"sha": "57830a6a710dab615ca1c01602e4aad31c01e545", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -47,17 +47,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n-\n-/* These RTL headers are needed for basic-block.h.  */\n-#include \"rtl.h\"\n-#include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n-#include \"obstack.h\"\n-#include \"basic-block.h\"\n \n #include \"tree.h\"\n #include \"diagnostic.h\"\n+#include \"basic-block.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-dump.h\""}, {"sha": "c9f74fc193356d9c433e8608f144ad47793246f3", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,9 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"output.h\"\n@@ -38,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"tree-flow.h\"\n #include \"domwalk.h\"\n-#include \"real.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"langhooks.h\""}, {"sha": "8172556c609de731954f8b524ab55b93c2889856", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"timevar.h\""}, {"sha": "3494190e7cd38571fcf64166365bb10829c93bb8", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -21,9 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"timevar.h\""}, {"sha": "48799d7a6741ddf0f08b541fe73249b9e3043fb0", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,9 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\""}, {"sha": "3a65255a177616bc5aed1f24bb4be91bcb10f684", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,9 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n@@ -37,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\"\n-#include \"real.h\"\n #include \"hashtab.h\"\n #include \"tree-affine.h\"\n #include \"pointer-set.h\""}, {"sha": "fe213bea9498f625df7e3b667f6a64e1f96378c8", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -38,17 +38,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\"\n #include \"tree-pass.h\"\n-#include \"ggc.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"params.h\""}, {"sha": "80e219db34af2273bae42c76740e0a973bbe9014", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -67,9 +67,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\""}, {"sha": "3d4fe1a59ebd5c06962775d1387a61a8abf1e5c4", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,9 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\""}, {"sha": "bbfabea497418f6d65e61c61055feb5bf19b9304", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,9 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\""}, {"sha": "1f8225e04682f1cbc23ac8682d9e55cfd779289a", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,9 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\"\n@@ -34,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n-#include \"ggc.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"hashtab.h\""}, {"sha": "d0751e81a38545b9e977a0e2ce8ca39f51a11721", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,9 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\""}, {"sha": "1ecad36b109b7acff575f7ff41a7fcaaab5a44c0", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,9 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic.h\""}, {"sha": "e50967b02fc07ef93155fd5075057111366d7df6", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -92,15 +92,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tree.h\"\n #include \"tree-flow.h\"\n-#include \"real.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"alloc-pool.h\"\n #include \"basic-block.h\"\n #include \"target.h\"\n #include \"diagnostic.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n+\n+/* FIXME: RTL headers have to be included here for optabs.  */\n+#include \"rtl.h\"\t\t/* Because optabs.h wants enum rtx_code.  */\n+#include \"expr.h\"\t\t/* Because optabs.h wants sepops.  */\n #include \"optabs.h\"\n \n /* This structure represents one basic block that either computes a"}, {"sha": "d40aeb2275c13d9a3871db51f64f04bc0f2f0054", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\""}, {"sha": "853eb205378857be7a808e3e29963ed61dc914e7", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,9 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"timevar.h\""}, {"sha": "a89e4d5ddd2de1c3f6f0c92f3341e4c2a81a99c1", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n@@ -36,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fibheap.h\"\n #include \"hashtab.h\"\n #include \"tree-iterator.h\"\n-#include \"real.h\"\n #include \"alloc-pool.h\"\n #include \"obstack.h\"\n #include \"tree-pass.h\""}, {"sha": "1eb557ddfd8b93201da3d3f81404619810db29ad", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,9 +24,7 @@\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\""}, {"sha": "67035184438eae30e56a359199b6525a7d4079d4", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n@@ -32,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"tree-iterator.h\"\n-#include \"real.h\"\n #include \"tree-pass.h\"\n #include \"alloc-pool.h\"\n #include \"vec.h\""}, {"sha": "c7181580b275f0835a3be460aba36221c9e485d7", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n@@ -35,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fibheap.h\"\n #include \"hashtab.h\"\n #include \"tree-iterator.h\"\n-#include \"real.h\"\n #include \"alloc-pool.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\""}, {"sha": "14763e5ebab26e88e9016097b052906c8e0198bb", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n@@ -35,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fibheap.h\"\n #include \"hashtab.h\"\n #include \"tree-iterator.h\"\n-#include \"real.h\"\n #include \"alloc-pool.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\""}, {"sha": "6421c6517e2969109078123374ce52d2e6f92d69", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -27,9 +27,7 @@\n #include \"obstack.h\"\n #include \"bitmap.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"tree.h\""}, {"sha": "631d97b8bfaa11cd31a2578aeb685d44f8bf6f22", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,9 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"output.h\"\n@@ -36,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-flow.h\"\n-#include \"real.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"langhooks.h\""}, {"sha": "2eae88c0840472e6fd595ebc3ecb5602dd9916ae", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,9 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\""}, {"sha": "c98f63ff9d5c6d084d7ea2b0ab9db388f34e36de", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,9 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\"\n@@ -36,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"tree-flow.h\"\n #include \"domwalk.h\"\n-#include \"real.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"langhooks.h\""}, {"sha": "467d6f89ea074aa0c70e08bc2f44480184c9f9ca", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -25,11 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n #include \"langhooks.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\""}, {"sha": "2a964850ec4f700d3c30dd27a7df324f636c8dc0", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -24,12 +24,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"expr.h\""}, {"sha": "cc7683dfabe6604ae6b69630ac6486df761e749a", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"ggc.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n "}, {"sha": "d651c3b509b6d8c52d9ec69f3fe93c8f1bf70bc7", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,9 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n #include \"tree-flow.h\""}, {"sha": "25bda423f1bacb9a9076dfda9bb7d076660ba290", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"diagnostic.h\""}, {"sha": "120a10c07d31a2a4b9de1a3de0218e3a221e7839", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"obstack.h\"\n@@ -51,7 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"params.h\"\n #include \"pointer-set.h\"\n-#include \"fixed-value.h\"\n #include \"tree-pass.h\"\n #include \"langhooks-def.h\"\n #include \"diagnostic.h\""}, {"sha": "e196579967a49804990ee5e0530a79cc6c1e6a4e", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -29,6 +29,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"vec.h\"\n #include \"vecir.h\"\n #include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n #include \"alias.h\"\n #include \"options.h\"\n "}, {"sha": "ef02994f315676552120f5447ae4fc92e10aee58", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40013784db8909d2935d2f4fc6ceaf59c68b36ac/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=40013784db8909d2935d2f4fc6ceaf59c68b36ac", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n-#include \"real.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n #include \"hashtab.h\""}]}