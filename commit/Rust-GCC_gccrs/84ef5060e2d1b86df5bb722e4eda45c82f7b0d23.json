{"sha": "84ef5060e2d1b86df5bb722e4eda45c82f7b0d23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRlZjUwNjBlMmQxYjg2ZGY1YmI3MjJlNGVkYTQ1YzgyZjdiMGQyMw==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-25T20:21:20Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-25T20:21:20Z"}, "message": "(type attribute, movdi movdf insns): Add loadd.\n\n\t(unit attribute): Delete.\n\t(function units): Correct simultaneity values.  Break out\n\tindependent units.  Add conflict matrix for the 88100 load double.\n\nFrom-SVN: r1948", "tree": {"sha": "20b2289e8c6b6a9e4eba7d7d34990a895f95190a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20b2289e8c6b6a9e4eba7d7d34990a895f95190a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23/comments", "author": null, "committer": null, "parents": [{"sha": "af93f7bf683f95f3d507ebee07f911f999d2fb79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af93f7bf683f95f3d507ebee07f911f999d2fb79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af93f7bf683f95f3d507ebee07f911f999d2fb79"}], "stats": {"total": 134, "additions": 64, "deletions": 70}, "files": [{"sha": "b7c3b59c67e9a01b9a5d7cbaec46f9f94a6e9039", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 64, "deletions": 70, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ef5060e2d1b86df5bb722e4eda45c82f7b0d23/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=84ef5060e2d1b86df5bb722e4eda45c82f7b0d23", "patch": "@@ -28,7 +28,7 @@\n (define_expand \"m88k_sccs_id\"\n   [(match_operand:SI 0 \"\" \"\")]\n   \"\"\n-  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t2.2.6.10 28 Jul 1992 10:22:08\\\";\n+  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t2.2.7.5 08/24/92 10:41:24\\\";\n      FAIL; }\")\n \f\n ;; Attribute specifications\n@@ -41,26 +41,17 @@\n ; I'd like to write the list as this, but genattrtab won't accept it.\n ;\n ; \"branch,jump,call,\t\t\t; flow-control instructions\n-;  load,store,loada,\t\t\t; data unit instructions\n+;  load,store,loadd,loada,\t\t; data unit instructions\n ;  spadd,dpadd,spcmp,dpcmp,spdiv,dpdiv,idiv, ; FPU add instructions\n ;  spmul,dpmul,imul,\t\t\t; FPU multiply instructions\n ;  arith,bit,mov\t\t\t; integer unit instructions\n ;  marith,weird\"\t\t\t; multi-word instructions\n \n ; Classification of each insn.  Some insns of TYPE_BRANCH are multi-word.\n (define_attr \"type\"\n-  \"branch,jump,call,load,store,loada,spadd,dpadd,spcmp,dpcmp,spdiv,dpdiv,idiv,spmul,dpmul,imul,arith,bit,mov,marith,weird\"\n+  \"branch,jump,call,load,store,loadd,loada,spadd,dpadd,spcmp,dpcmp,spdiv,dpdiv,idiv,spmul,dpmul,imul,arith,bit,mov,marith,weird\"\n   (const_string \"arith\"))\n \n-; Convenience attributes.\n-(define_attr \"unit\" \"bit,memory,multiply,divide,fpadd,other\"\n-  (cond [(eq_attr \"type\" \"bit\") (const_string \"bit\")\n-\t (eq_attr \"type\" \"load,store\") (const_string \"memory\")\n-\t (eq_attr \"type\" \"spmul,dpmul,imul\") (const_string \"multiply\")\n-\t (eq_attr \"type\" \"spdiv,dpdiv,idiv\") (const_string \"divide\")\n-\t (eq_attr \"type\" \"spadd,dpadd,spcmp,dpcmp\") (const_string \"fpadd\")]\n-\t(const_string \"other\")))\n-\n (define_attr \"fpu\" \"yes,no\"\n   (if_then_else\n    (eq_attr \"type\" \"spmul,dpmul,imul,spadd,dpadd,spcmp,dpcmp,spdiv,dpdiv,idiv\")\n@@ -89,7 +80,7 @@\n   [(and\n     (and\n      (eq_attr \"type\" \"!branch,jump,call,marith,weird\") ; required.\n-     (eq_attr \"type\" \"!load\")) ; issue as-soon-as-possible.\n+     (eq_attr \"type\" \"!load,loadd\")) ; issue as-soon-as-possible.\n     (eq_attr \"fpu\" \"no\")) ; issue as-soon-as-possible.\n    (eq_attr \"type\" \"!call,branch,jump\") (nil)]) ; @@ was (const_int 1)\n \n@@ -139,76 +130,79 @@\n ; Consideration of writeback contention is critical to superb scheduling.\n ;\n ; (define_function_unit NAME MULTIPLICITY SIMULTANEITY\n-;\t\t\tTEST READY-DELAY BUSY-DELAY [CONFLICT-LIST])\n-\n-;(define_function_unit \"decode\" 1 1 (const_int 1) 0 1)\n+;\t\t\tTEST READY-DELAY ISSUE-DELAY [CONFLICT-LIST])\n \n-; Describing the alu is currently not useful.\n+; Describing the '100 alu is currently not useful.\n ;(define_function_unit \"alu\" 1 0 (eq_attr \"type\"\n ;\t\t\t\t\t \"!store,marith,weird\") 1 0)\n ;(define_function_unit \"alu\" 1 0 (eq_attr \"type\" \"marith,weird\") 2 0)\n \n (define_function_unit \"alu\" 1 0\n-  (and (eq_attr \"type\" \"loada,arith,bit,mov\") (eq_attr \"cpu\" \"!m88100\")) 2 0)\n+  (and (eq_attr \"type\" \"loada,arith,mov\") (eq_attr \"cpu\" \"!m88100\")) 2 0)\n (define_function_unit \"alu\" 1 0\n   (and (eq_attr \"type\" \"marith,weird\") (eq_attr \"cpu\" \"!m88100\")) 4 0)\n \n-(define_function_unit \"memory\" 1 3\n-  (and (eq_attr \"type\" \"load\") (eq_attr \"cpu\" \"m88100\")) 3 2)\n-(define_function_unit \"memory\" 1 3\n-  (and (eq_attr \"type\" \"load\") (eq_attr \"cpu\" \"!m88100\")) 4 2)\n-\n-; The fp1 and fplast descriptions currently have no effect.\n-;(define_function_unit \"fp1\" 1 1 (eq_attr \"fpu\" \"yes\") 1 2)\n+(define_function_unit \"bit\" 1 0\n+  (and (eq_attr \"type\" \"bit\") (eq_attr \"cpu\" \"!m88100\")) 2 2)\n+\n+(define_function_unit \"mem100\" 1 0\n+  (and (eq_attr \"type\" \"store,loada\") (eq_attr \"cpu\" \"m88100\")) 1 0)\n+(define_function_unit \"mem100\" 1 0\n+  (and (eq_attr \"type\" \"load\") (eq_attr \"cpu\" \"m88100\")) 3 0)\n+(define_function_unit \"mem100\" 1 0\n+  (and (eq_attr \"type\" \"loadd\") (eq_attr \"cpu\" \"m88100\")) 3 2\n+  [(eq_attr \"type\" \"load,store,loadd,loada\")])\n+\n+(define_function_unit \"mem110\" 1 0\n+  (and (eq_attr \"type\" \"load\") (eq_attr \"cpu\" \"!m88100\")) 3 2)\n+(define_function_unit \"mem110\" 1 0\n+  (and (eq_attr \"type\" \"loadd\") (eq_attr \"cpu\" \"!m88100\")) 3 3\n+  [(eq_attr \"type\" \"load\")])\n+(define_function_unit \"mem110\" 1 0\n+  (and (eq_attr \"type\" \"loadd\") (eq_attr \"cpu\" \"!m88100\")) 3 2\n+  [(eq_attr \"type\" \"!load\")])\n+(define_function_unit \"mem110\" 1 0\n+  (and (eq_attr \"type\" \"store\") (eq_attr \"cpu\" \"!m88100\")) 0 2)\n \n ; The times are adjusted to include fp1 and fplast, but then are further\n ; adjusted based on the actual generated code.  The notation to the right\n ; is the total latency.  A range denotes a group of instructions and/or\n ; conditions (the extra clock of fplast time with some sequences).\n-(define_function_unit \"fpmul\" 1 4\n-  (and (eq_attr \"type\" \"spmul\") (eq_attr \"cpu\" \"m88100\")) 4 2)\t\t; 6-8\n-(define_function_unit \"fpmul\" 1 4\n-  (and (eq_attr \"type\" \"dpmul\") (eq_attr \"cpu\" \"m88100\")) 7 2)\t; 9-10\n-(define_function_unit \"fpmul\" 1 4\n-  (and (eq_attr \"type\" \"imul\") (eq_attr \"cpu\" \"m88100\")) 3 2)\t\t; 4\n-\n-(define_function_unit \"fpmul\" 1 4\n+\n+(define_function_unit \"fpmul100\" 1 0\n+  (and (eq_attr \"type\" \"spmul\") (eq_attr \"cpu\" \"m88100\")) 4 0)\t\t; 6-8\n+(define_function_unit \"fpmul100\" 1 0\n+  (and (eq_attr \"type\" \"dpmul\") (eq_attr \"cpu\" \"m88100\")) 7 0)\t\t; 9-10\n+(define_function_unit \"fpmul100\" 1 0\n+  (and (eq_attr \"type\" \"imul\") (eq_attr \"cpu\" \"m88100\")) 3 0)\t\t; 4\n+\n+(define_function_unit \"fpmul110\" 1 0\n   (and (eq_attr \"type\" \"imul,spmul,dpmul\")\n-       (eq_attr \"cpu\" \"!m88100\")) 6 2)\t\t\t\t\t; 3\n-\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"spadd,spcmp\") (eq_attr \"cpu\" \"m88100\")) 3 2)\t; 5-6\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"dpadd,dpcmp\") (eq_attr \"cpu\" \"m88100\")) 4 2)\t; 6-7\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"spdiv\") (eq_attr \"cpu\" \"m88100\")) 30 2)\t\t; 30-31\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"dpdiv\") (eq_attr \"cpu\" \"m88100\")) 60 2)\t\t; 60-61\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"m88100\")) 38 2)\t\t; 38\n-\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"spadd,dpadd\") (eq_attr \"cpu\" \"!m88100\")) 6 2)\t; 3\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"spcmp,dpcmp\") (eq_attr \"cpu\" \"!m88100\")) 2 2)\t; 3\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"spdiv\") (eq_attr \"cpu\" \"!m88100\")) 26 2)\t; 13\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"dpdiv\") (eq_attr \"cpu\" \"!m88100\")) 46 2)\t; 23\n-(define_function_unit \"fpadd\" 1 3\n-  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"!m88100\")) 36 2)\t\t; 18\n-\n-;(define_function_unit \"fplast\" 1 1 (eq_attr \"fpu\" \"yes\") 1 2)\n-\n-; Describing writeback contention is currently not useful.\n-;(define_function_unit \"writeback\" 1 1\n-;  (eq_attr \"type\" \"!store,branch,jump,call\") 0 1)\n-\n-; Describing stores is currently not useful.  The suggestion here is that the\n-; function unit ordering has already been established (writeback is last) and\n-; that store insns use the units in an unusual order.\n-;(define_function_unit \"writeback\" 1 1 (eq_attr \"type\" \"store\") 0 1)\n-;(define_function_unit \"memory\" 1 3 (eq_attr \"type\" \"store\") 1 2)\n+       (eq_attr \"cpu\" \"!m88100\")) 5 2)\t\t\t\t\t; 3\n+\n+(define_function_unit \"fpadd100\" 1 5\n+  (and (eq_attr \"type\" \"spadd,spcmp\") (eq_attr \"cpu\" \"m88100\")) 3 0)\t; 5-6\n+(define_function_unit \"fpadd100\" 1 5\n+  (and (eq_attr \"type\" \"dpadd,dpcmp\") (eq_attr \"cpu\" \"m88100\")) 4 0)\t; 6-7\n+\n+(define_function_unit \"fpadd110\" 1 0\n+  (and (eq_attr \"type\" \"spadd,dpadd\") (eq_attr \"cpu\" \"!m88100\")) 5 2)\t; 3\n+(define_function_unit \"fpadd110\" 1 0\n+  (and (eq_attr \"type\" \"spcmp,dpcmp\") (eq_attr \"cpu\" \"!m88100\")) 2 2)\t; 1\n+\n+(define_function_unit \"fpadd100\" 1 5\n+  (and (eq_attr \"type\" \"spdiv\") (eq_attr \"cpu\" \"m88100\")) 30 0)\t\t; 30-31\n+(define_function_unit \"fpadd100\" 1 5\n+  (and (eq_attr \"type\" \"dpdiv\") (eq_attr \"cpu\" \"m88100\")) 60 0)\t\t; 60-61\n+(define_function_unit \"fpadd100\" 1 5\n+  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"m88100\")) 38 0)\t\t; 38\n+\n+(define_function_unit \"div\" 1 1\n+  (and (eq_attr \"type\" \"spdiv\") (eq_attr \"cpu\" \"!m88100\")) 25 2)\t; 13\n+(define_function_unit \"div\" 1 1\n+  (and (eq_attr \"type\" \"dpdiv\") (eq_attr \"cpu\" \"!m88100\")) 45 2)\t; 23\n+(define_function_unit \"div\" 1 1\n+  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"!m88100\")) 35 2)\t\t; 18\n \f\n ;; Superoptimizer sequences\n \n@@ -1603,7 +1597,7 @@\n    mov %0,%1\n    ld.d %0,%1\n    st.d %1,%0\"\n-  [(set_attr \"type\" \"marith,load,store,mov,mov,mov,load,store\")])\n+  [(set_attr \"type\" \"marith,loadd,store,mov,mov,mov,loadd,store\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -1676,7 +1670,7 @@\n    mov %0,%1\n    ld.d %0,%1\n    st.d %1,%0\"\n-  [(set_attr \"type\" \"marith,load,store,mov,mov,mov,load,store\")])\n+  [(set_attr \"type\" \"marith,loadd,store,mov,mov,mov,loadd,store\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=r\")"}]}