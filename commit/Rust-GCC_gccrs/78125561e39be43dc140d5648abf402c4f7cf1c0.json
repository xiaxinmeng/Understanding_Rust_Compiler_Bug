{"sha": "78125561e39be43dc140d5648abf402c4f7cf1c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgxMjU1NjFlMzliZTQzZGMxNDBkNTY0OGFiZjQwMmM0ZjdjZjFjMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-10-03T17:23:15Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-10-03T17:23:15Z"}, "message": "gimple-fold.c (get_range_strlen): Only set *nonstr when an unterminated string is discovered.\n\n\t* gimple-fold.c (get_range_strlen): Only set *nonstr when\n\tan unterminated string is discovered.  Bubble up range\n\teven for unterminated strings.\n\t(gimple_fold_builtin_strlen): Do not fold if get_range_strlen\n\tindicates the string was not terminated via NONSTR.\n\nFrom-SVN: r264816", "tree": {"sha": "943f5b63b79fbb5461f5d36468ccd9ca70a4fb67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/943f5b63b79fbb5461f5d36468ccd9ca70a4fb67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78125561e39be43dc140d5648abf402c4f7cf1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78125561e39be43dc140d5648abf402c4f7cf1c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78125561e39be43dc140d5648abf402c4f7cf1c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78125561e39be43dc140d5648abf402c4f7cf1c0/comments", "author": null, "committer": null, "parents": [{"sha": "2e103ae2138ede8a4db831dea30065fe0041bc58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e103ae2138ede8a4db831dea30065fe0041bc58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e103ae2138ede8a4db831dea30065fe0041bc58"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "aa10aa07269f984b325f119375f6c5e7ec9ba3ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78125561e39be43dc140d5648abf402c4f7cf1c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78125561e39be43dc140d5648abf402c4f7cf1c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78125561e39be43dc140d5648abf402c4f7cf1c0", "patch": "@@ -1,4 +1,12 @@\n-2018-10-3  Aldy Hernandez  <aldyh@redhat.com>\n+2018-10-02  Jeff Law  <law@redhat.com>\n+\n+\t* gimple-fold.c (get_range_strlen): Only set *nonstr when\n+\tan unterminated string is discovered.  Bubble up range\n+\teven for unterminated strings.\n+\t(gimple_fold_builtin_strlen): Do not fold if get_range_strlen\n+\tindicates the string was not terminated via NONSTR.\n+\n+2018-10-03  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (extract_range_from_unary_expr): Special case all\n \tpointer conversions."}, {"sha": "fe6bc08bdd986e27002a050438eeea43b7dda430", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78125561e39be43dc140d5648abf402c4f7cf1c0/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78125561e39be43dc140d5648abf402c4f7cf1c0/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=78125561e39be43dc140d5648abf402c4f7cf1c0", "patch": "@@ -1344,8 +1344,13 @@ get_range_strlen (tree arg, tree length[2], bitmap *visited, int type,\n \n \t  /* If we potentially had a non-terminated string, then\n \t     bubble that information up to the caller.  */\n-\t  if (!val)\n-\t    *nonstr = data.decl;\n+\t  if (!val && data.decl)\n+\t    {\n+\t      *nonstr = data.decl;\n+\t      *minlen = data.len;\n+\t      *maxlen = data.len;\n+\t      return type == 0 ? false : true;\n+\t    }\n \t}\n \n       if (!val && fuzzy)\n@@ -3596,6 +3601,7 @@ gimple_fold_builtin_strlen (gimple_stmt_iterator *gsi)\n   tree nonstr;\n   tree lenrange[2];\n   if (!get_range_strlen (arg, lenrange, 1, true, &nonstr)\n+      && !nonstr\n       && lenrange[0] && TREE_CODE (lenrange[0]) == INTEGER_CST\n       && lenrange[1] && TREE_CODE (lenrange[1]) == INTEGER_CST)\n     {"}]}