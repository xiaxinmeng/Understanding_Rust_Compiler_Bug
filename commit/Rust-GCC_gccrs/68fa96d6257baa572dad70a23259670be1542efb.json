{"sha": "68fa96d6257baa572dad70a23259670be1542efb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmYTk2ZDYyNTdiYWE1NzJkYWQ3MGEyMzI1OTY3MGJlMTU0MmVmYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-06-16T16:05:25Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-06-16T16:05:25Z"}, "message": "Introduce fortran loop preheader\n\n\t* predict.def: Add fortran loop preheader predictor.\n\t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Properly\n\tfold IFN_BUILTIN_EXPECT with a known constant argument.\n\t* trans-stmt.c (gfc_trans_simple_do): Predict the edge.\n\t* gfortran.dg/predict-1.f90: New test.\n\nFrom-SVN: r237533", "tree": {"sha": "4639894bc52d12b93835464e86fc462d737e390f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4639894bc52d12b93835464e86fc462d737e390f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68fa96d6257baa572dad70a23259670be1542efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68fa96d6257baa572dad70a23259670be1542efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68fa96d6257baa572dad70a23259670be1542efb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68fa96d6257baa572dad70a23259670be1542efb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b051d2e6c9a816aff781802b311dbdb77ac7be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b051d2e6c9a816aff781802b311dbdb77ac7be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b051d2e6c9a816aff781802b311dbdb77ac7be0"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "4d6fdf65d6c4a0149ae83d91b98b3eddae1578a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fa96d6257baa572dad70a23259670be1542efb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fa96d6257baa572dad70a23259670be1542efb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68fa96d6257baa572dad70a23259670be1542efb", "patch": "@@ -1,3 +1,9 @@\n+2016-06-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* predict.def: Add fortran loop preheader predictor.\n+\t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Properly\n+\tfold IFN_BUILTIN_EXPECT with a known constant argument.\n+\n 2016-06-16  Martin Liska  <mliska@suse.cz>\n \n \t* predict.def: Add 'Fortran' to display text of all"}, {"sha": "7150f84841edf99c04e8b11f8bafa09eaf4542ae", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=68fa96d6257baa572dad70a23259670be1542efb", "patch": "@@ -1,3 +1,7 @@\n+2016-06-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* trans-stmt.c (gfc_trans_simple_do): Predict the edge.\n+\n 2016-06-16  Martin Liska  <mliska@suse.cz>\n \n \t* trans-array.c (gfc_array_allocate): Do not generate expect"}, {"sha": "84bf749780d616c43673d3ccafba3c09e66f8f68", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=68fa96d6257baa572dad70a23259670be1542efb", "patch": "@@ -1938,7 +1938,9 @@ gfc_trans_simple_do (gfc_code * code, stmtblock_t *pblock, tree dovar,\n   else\n     cond = fold_build2_loc (loc, GE_EXPR, boolean_type_node, dovar,\n \t\t\t    to);\n-  tmp = fold_build3_loc (loc, COND_EXPR, void_type_node, cond, tmp,\n+\n+  tmp = fold_build3_loc (loc, COND_EXPR, void_type_node,\n+\t\t\t gfc_likely (cond, PRED_FORTRAN_LOOP_PREHEADER), tmp,\n \t\t\t build_empty_stmt (loc));\n   gfc_add_expr_to_block (pblock, tmp);\n "}, {"sha": "fa03e8916a3dc7997b8a76f4159494ad7af8f83e", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=68fa96d6257baa572dad70a23259670be1542efb", "patch": "@@ -5250,6 +5250,14 @@ gimple_fold_stmt_to_constant_1 (gimple *stmt, tree (*valueize) (tree),\n \t      case IFN_UBSAN_CHECK_MUL:\n \t\tsubcode = MULT_EXPR;\n \t\tbreak;\n+\t      case IFN_BUILTIN_EXPECT:\n+\t\t  {\n+\t\t    tree arg0 = gimple_call_arg (stmt, 0);\n+\t\t    tree op0 = (*valueize) (arg0);\n+\t\t    if (TREE_CODE (op0) == INTEGER_CST)\n+\t\t      return op0;\n+\t\t    return NULL_TREE;\n+\t\t  }\n \t      default:\n \t\treturn NULL_TREE;\n \t      }"}, {"sha": "a0d0ba923a23b5339d8d4e3542dd65ac7483b185", "filename": "gcc/predict.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Fpredict.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Fpredict.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.def?ref=68fa96d6257baa572dad70a23259670be1542efb", "patch": "@@ -199,3 +199,9 @@ DEF_PREDICTOR (PRED_FORTRAN_INVALID_BOUND, \"Fortran invalid bound\", \\\n    which in turn has an optional argument.  */\n DEF_PREDICTOR (PRED_FORTRAN_ABSENT_DUMMY, \"Fortran absent dummy\", \\\n \t       HITRATE (60), 0)\n+\n+/* Fortran DO statement generates a pre-header guard:\n+   empty = (step > 0 ? to < from : to > from), which can be predicted\n+   to be very likely.  */\n+DEF_PREDICTOR (PRED_FORTRAN_LOOP_PREHEADER, \"Fortran loop preheader\", \\\n+\t       HITRATE (99), 0)"}, {"sha": "3dfb452358db71cd1dbe7f164a4147e93895eadf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68fa96d6257baa572dad70a23259670be1542efb", "patch": "@@ -1,3 +1,7 @@\n+2016-06-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* gfortran.dg/predict-1.f90: New test.\n+\n 2016-06-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/71242"}, {"sha": "81f0436fba4b449bfe249e574a14adfd45d77a7f", "filename": "gcc/testsuite/gfortran.dg/predict-1.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredict-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68fa96d6257baa572dad70a23259670be1542efb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredict-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredict-1.f90?ref=68fa96d6257baa572dad70a23259670be1542efb", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fdump-tree-profile_estimate\" }\n+\n+subroutine test(block, array)\n+integer :: i, block(9), array(2)\n+\n+do i = array(1), array(2)\n+    block(i) = i\n+end do\n+end subroutine test\n+\n+! { dg-final { scan-tree-dump-times \"Fortran loop preheader heuristics of edge\\[^:\\]*: 99.0%\" 1 \"profile_estimate\" } }"}]}