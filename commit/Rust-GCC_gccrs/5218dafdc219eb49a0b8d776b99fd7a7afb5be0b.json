{"sha": "5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIxOGRhZmRjMjE5ZWI0OWEwYjhkNzc2Yjk5ZmQ3YTdhZmI1YmUwYg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-08-16T22:28:19Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-08-16T22:28:19Z"}, "message": "diagnostics: tweak to line-insertion fix-it hints with line-numbering\n\nThis commit slightly tweaks line-insertion fix-it hints, so that\nwith line-numbering, rather than e.g.:\n\n 99 |       x = a;\n    |+      break;\n110 |     case 'b':\n    |     ^~~~~~~~\n\nwe fill the margin with \"+\":\n\n 99 |       x = a;\n+++ |+      break;\n110 |     case 'b':\n    |     ^~~~~~~~\n\nto emphasize that this is a suggested new line, rather than the user's\nsource.\n\ngcc/ChangeLog:\n\t* diagnostic-show-locus.c (layout::start_annotation_line): Add\n\t\"margin_char\" parameter, defaulting to space.  Use it in place\n\tof pp_space for the initial part of the margin.\n\t(layout::print_leading_fixits): Use '+' when filling the margin\n\tof line-insertion fix-it hints.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c\n\t(test_fixit_insert_newline): Update expected output to show '+'\n\tcharacters in margin of line-insertion fix-it hint.\n\nFrom-SVN: r263605", "tree": {"sha": "971a758dacf375f998eb1413885623dcb833a42b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/971a758dacf375f998eb1413885623dcb833a42b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4416420e14b7505355c2318a6bd09ae073551d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4416420e14b7505355c2318a6bd09ae073551d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4416420e14b7505355c2318a6bd09ae073551d36"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "c776f6dc952c83910eec27f20a9b9b3a552326aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "patch": "@@ -1,3 +1,11 @@\n+2018-08-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic-show-locus.c (layout::start_annotation_line): Add\n+\t\"margin_char\" parameter, defaulting to space.  Use it in place\n+\tof pp_space for the initial part of the margin.\n+\t(layout::print_leading_fixits): Use '+' when filling the margin\n+\tof line-insertion fix-it hints.\n+\n 2018-08-16  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (two unnamed define_insn and define_split):"}, {"sha": "a75982695880490e06c68abbfd9eec9991eb0200", "filename": "gcc/diagnostic-show-locus.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2Fdiagnostic-show-locus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2Fdiagnostic-show-locus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.c?ref=5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "patch": "@@ -253,7 +253,7 @@ class layout\n   void print_source_line (linenum_type row, const char *line, int line_width,\n \t\t\t  line_bounds *lbounds_out);\n   bool should_print_annotation_line_p (linenum_type row) const;\n-  void start_annotation_line () const;\n+  void start_annotation_line (char margin_char = ' ') const;\n   void print_annotation_line (linenum_type row, const line_bounds lbounds);\n   void print_any_labels (linenum_type row);\n   void print_trailing_fixits (linenum_type row);\n@@ -1330,12 +1330,12 @@ layout::should_print_annotation_line_p (linenum_type row) const\n    margin, which is empty for annotation lines.  Otherwise, do nothing.  */\n \n void\n-layout::start_annotation_line () const\n+layout::start_annotation_line (char margin_char) const\n {\n   if (m_show_line_numbers_p)\n     {\n       for (int i = 0; i < m_linenum_width; i++)\n-\tpp_space (m_pp);\n+\tpp_character (m_pp, margin_char);\n       pp_string (m_pp, \" |\");\n     }\n }\n@@ -1587,7 +1587,7 @@ layout::print_leading_fixits (linenum_type row)\n \t     helps them stand out from each other, and from\n \t     the surrounding text.  */\n \t  m_colorizer.set_normal_text ();\n-\t  start_annotation_line ();\n+\t  start_annotation_line ('+');\n \t  pp_character (m_pp, '+');\n \t  m_colorizer.set_fixit_insert ();\n \t  /* Print all but the trailing newline of the fix-it hint."}, {"sha": "978bd8f822376a62a29ad142f1303f9e204a7086", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "patch": "@@ -1,3 +1,9 @@\n+2018-08-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c\n+\t(test_fixit_insert_newline): Update expected output to show '+'\n+\tcharacters in margin of line-insertion fix-it hint.\n+\n 2018-08-16  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.dg/cpp/macsyntx.c: Adjust expected errors."}, {"sha": "f2bbc5854dc7f02be426625e5a6552fdd2b43605", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5218dafdc219eb49a0b8d776b99fd7a7afb5be0b/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c?ref=5218dafdc219eb49a0b8d776b99fd7a7afb5be0b", "patch": "@@ -111,7 +111,7 @@ void test_fixit_insert_newline (void)\n       x = b;\n     }\n /* { dg-begin-multiline-output \"\" }\n-    |+      break;\n++++ |+      break;\n 110 |     case 'b':\n     |     ^~~~~~~~\n    { dg-end-multiline-output \"\" } */"}]}