{"sha": "71543388eec6aad6fb096b1de16264051cf06d3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE1NDMzODhlZWM2YWFkNmZiMDk2YjFkZTE2MjY0MDUxY2YwNmQzZQ==", "commit": {"author": {"name": "Than McIntosh", "email": "thanm@google.com", "date": "2016-10-10T17:33:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-10-10T17:33:32Z"}, "message": "compiler: prune away gcc-specific linemap usage\n    \n    Add an interface to the go Linemap class to allow clients to ask for the\n    line number for a Location (for debugging dumps), so as to move some\n    gcc-specific location code into the back end.\n    \n    Reviewed-on: https://go-review.googlesource.com/30699\n\n\t* go-linemap.cc (Gcc_linemap::location_line): New method.\n\nFrom-SVN: r240942", "tree": {"sha": "f8073361e3fb096f990d2672a5480cd3528b458b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8073361e3fb096f990d2672a5480cd3528b458b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71543388eec6aad6fb096b1de16264051cf06d3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71543388eec6aad6fb096b1de16264051cf06d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71543388eec6aad6fb096b1de16264051cf06d3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71543388eec6aad6fb096b1de16264051cf06d3e/comments", "author": {"login": "thanm", "id": 12280172, "node_id": "MDQ6VXNlcjEyMjgwMTcy", "avatar_url": "https://avatars.githubusercontent.com/u/12280172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanm", "html_url": "https://github.com/thanm", "followers_url": "https://api.github.com/users/thanm/followers", "following_url": "https://api.github.com/users/thanm/following{/other_user}", "gists_url": "https://api.github.com/users/thanm/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanm/subscriptions", "organizations_url": "https://api.github.com/users/thanm/orgs", "repos_url": "https://api.github.com/users/thanm/repos", "events_url": "https://api.github.com/users/thanm/events{/privacy}", "received_events_url": "https://api.github.com/users/thanm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d8c099edebfe908256c2bd77a0e2b67182b0f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8c099edebfe908256c2bd77a0e2b67182b0f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d8c099edebfe908256c2bd77a0e2b67182b0f57"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "6ea6138c327e7a27440634dd5dcfbec0ca5fb695", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=71543388eec6aad6fb096b1de16264051cf06d3e", "patch": "@@ -1,3 +1,7 @@\n+2016-10-10  Than McIntosh  <thanm@google.com>\n+\n+\t* go-linemap.cc (Gcc_linemap::location_line): New method.\n+\n 2016-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config-lang.in (lang_requires_boot_languages): Delete."}, {"sha": "22498d940adbfc7ad4705b8b6a6d75dd18b9c8d5", "filename": "gcc/go/go-linemap.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgo-linemap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgo-linemap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-linemap.cc?ref=71543388eec6aad6fb096b1de16264051cf06d3e", "patch": "@@ -32,6 +32,9 @@ class Gcc_linemap : public Linemap\n   std::string\n   to_string(Location);\n \n+  int\n+  location_line(Location);\n+\n  protected:\n   Location\n   get_predeclared_location();\n@@ -88,6 +91,13 @@ Gcc_linemap::to_string(Location location)\n   return ss.str();\n }\n \n+// Return the line number for a given location (for debugging dumps)\n+int\n+Gcc_linemap::location_line(Location loc)\n+{\n+  return LOCATION_LINE(loc.gcc_location());\n+}\n+\n // Stop getting locations.\n \n void"}, {"sha": "e22f79e4766f7e6aae95be2aff6cc88cc7cf0073", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=71543388eec6aad6fb096b1de16264051cf06d3e", "patch": "@@ -1,4 +1,4 @@\n-9401e714d690e3907a64ac5c8cd5aed9e28f511b\n+f3658aea2493c7f1c4a72502f9e7da562c7764c4\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "732af77a1a114305e1668f4152036eb6708938fb", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=71543388eec6aad6fb096b1de16264051cf06d3e", "patch": "@@ -145,7 +145,7 @@ Node::details() const\n   std::stringstream details;\n \n   if (!this->is_sink())\n-    details << \" l(\" << LOCATION_LINE(this->location().gcc_location()) << \")\";\n+    details << \" l(\" << Linemap::location_to_line(this->location()) << \")\";\n \n   bool is_varargs = false;\n   bool is_address_taken = false;"}, {"sha": "f0ca99d905c00fe11f4abe7bfc4f03a824d87139", "filename": "gcc/go/gofrontend/go-linemap.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71543388eec6aad6fb096b1de16264051cf06d3e/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h?ref=71543388eec6aad6fb096b1de16264051cf06d3e", "patch": "@@ -63,6 +63,10 @@ class Linemap\n   virtual std::string\n   to_string(Location) = 0;\n \n+  // Return the line number for a given location (for debugging dumps)\n+  virtual int\n+  location_line(Location) = 0;\n+\n  protected:\n   // Return a special Location used for predeclared identifiers.  This\n   // Location should be different from that for any actual source\n@@ -135,6 +139,14 @@ class Linemap\n     go_assert(Linemap::instance_ != NULL);\n     return Linemap::instance_->to_string(loc);\n   }\n+\n+  // Return line number for location\n+  static int\n+  location_to_line(Location loc)\n+  {\n+    go_assert(Linemap::instance_ != NULL);\n+    return Linemap::instance_->location_line(loc);\n+  }\n };\n \n // The backend interface must define this function.  It should return"}]}