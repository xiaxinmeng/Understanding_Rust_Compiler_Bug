{"sha": "2a4bbffab1e0bf165757e2897151c08275bfadd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE0YmJmZmFiMWUwYmYxNjU3NTdlMjg5NzE1MWMwODI3NWJmYWRkNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-09-06T08:32:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-09-06T08:32:49Z"}, "message": "i386.md (call_pop): Fix test for setting current_function_uses_pic_offset_table.\n\n        * config/i386/i386.md (call_pop): Fix test for setting\n        current_function_uses_pic_offset_table.\n        (call, call_value_pop, call_value): Likewise.\n\nFrom-SVN: r36187", "tree": {"sha": "aeb914f0cef3236618ce5f88783d37728efff16b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb914f0cef3236618ce5f88783d37728efff16b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a4bbffab1e0bf165757e2897151c08275bfadd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4bbffab1e0bf165757e2897151c08275bfadd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a4bbffab1e0bf165757e2897151c08275bfadd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4bbffab1e0bf165757e2897151c08275bfadd4/comments", "author": null, "committer": null, "parents": [{"sha": "61f5be154a24fc20ac47337cc244104d374e7dac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f5be154a24fc20ac47337cc244104d374e7dac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f5be154a24fc20ac47337cc244104d374e7dac"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "e8a99251c46743a475d9494ae7ee4b5a167c9757", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4bbffab1e0bf165757e2897151c08275bfadd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4bbffab1e0bf165757e2897151c08275bfadd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a4bbffab1e0bf165757e2897151c08275bfadd4", "patch": "@@ -1,3 +1,9 @@\n+2000-09-06  Richard Henderson  <rth@cygnus.com>\n+\n+\t* config/i386/i386.md (call_pop): Fix test for setting\n+\tcurrent_function_uses_pic_offset_table.\n+\t(call, call_value_pop, call_value): Likewise.\n+\n 2000-09-06  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* timevar.c (timevar_add): Delete."}, {"sha": "015da07aa7556b11f369eb8f185bd6532033fcbc", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4bbffab1e0bf165757e2897151c08275bfadd4/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4bbffab1e0bf165757e2897151c08275bfadd4/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=2a4bbffab1e0bf165757e2897151c08275bfadd4", "patch": "@@ -1324,7 +1324,8 @@ typedef struct ix86_args {\n    If we are returning floats on the register stack, we cannot make\n    sibling calls to functions that return floats.  (The stack adjust\n    instruction will wind up after the sibcall jump, and not be executed.) */\n-#define FUNCTION_OK_FOR_SIBCALL(DECL) (DECL \\\n+#define FUNCTION_OK_FOR_SIBCALL(DECL) \\\n+  (DECL \\\n    && (! flag_pic || ! TREE_PUBLIC (DECL)) \\\n    && (! TARGET_FLOAT_RETURNS_IN_80387 \\\n        || ! FLOAT_MODE_P (TYPE_MODE (TREE_TYPE (TREE_TYPE (DECL)))) \\"}, {"sha": "72fd72088c0db545f7e433aaf25f0a3f6b6ad959", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4bbffab1e0bf165757e2897151c08275bfadd4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4bbffab1e0bf165757e2897151c08275bfadd4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2a4bbffab1e0bf165757e2897151c08275bfadd4", "patch": "@@ -8453,9 +8453,8 @@\n   /* Static functions and indirect calls don't need\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n-      && constant_call_address_operand (operands[0], SImode)\n-      && (GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF\n-\t  || !SYMBOL_REF_FLAG (XEXP (operands[0], 0))))\n+      && GET_CODE (XEXP (operands[0], 0)) == SYMBOL_REF\n+      && ! SYMBOL_REF_FLAG (XEXP (operands[0], 0)))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (XEXP (operands[0], 0), Pmode))\n     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n@@ -8508,9 +8507,8 @@\n   /* Static functions and indirect calls don't need\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n-      && constant_call_address_operand (operands[0], SImode)\n-      && (GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF\n-\t  || !SYMBOL_REF_FLAG (XEXP (operands[0], 0))))\n+      && GET_CODE (XEXP (operands[0], 0)) == SYMBOL_REF\n+      && ! SYMBOL_REF_FLAG (XEXP (operands[0], 0)))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (XEXP (operands[0], 0), Pmode))\n     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n@@ -8570,9 +8568,8 @@\n   /* Static functions and indirect calls don't need\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n-      && constant_call_address_operand (operands[1], SImode)\n-      && (GET_CODE (XEXP (operands[1], 0)) != SYMBOL_REF\n-\t  || !SYMBOL_REF_FLAG (XEXP (operands[1], 0))))\n+      && GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n+      && ! SYMBOL_REF_FLAG (XEXP (operands[1], 0)))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (XEXP (operands[1], 0), Pmode))\n     XEXP (operands[1], 0) = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));\n@@ -8589,9 +8586,8 @@\n   /* Static functions and indirect calls don't need\n      current_function_uses_pic_offset_table.  */\n   if (flag_pic\n-      && constant_call_address_operand (operands[1], SImode)\n-      && (GET_CODE (XEXP (operands[1], 0)) != SYMBOL_REF\n-\t  || !SYMBOL_REF_FLAG (XEXP (operands[1], 0))))\n+      && GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n+      && ! SYMBOL_REF_FLAG (XEXP (operands[1], 0)))\n     current_function_uses_pic_offset_table = 1;\n   if (! call_insn_operand (XEXP (operands[1], 0), Pmode))\n     XEXP (operands[1], 0) = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));"}]}