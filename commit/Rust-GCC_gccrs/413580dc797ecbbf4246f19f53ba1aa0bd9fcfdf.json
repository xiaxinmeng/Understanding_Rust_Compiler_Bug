{"sha": "413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEzNTgwZGM3OTdlY2JiZjQyNDZmMTlmNTNiYTFhYTBiZDlmY2ZkZg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-26T18:32:47Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-26T18:32:47Z"}, "message": "acinclude.m4: Remove obsolete and bogus constructs.\n\n\t* acinclude.m4: Remove obsolete and bogus constructs.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regnerate.\n\nFrom-SVN: r78510", "tree": {"sha": "a9cf808d9bcec7139f125aa4f91f00c2e9067c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9cf808d9bcec7139f125aa4f91f00c2e9067c20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/comments", "author": null, "committer": null, "parents": [{"sha": "1287fd01cd145e59e673a289975aeda34415d75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1287fd01cd145e59e673a289975aeda34415d75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1287fd01cd145e59e673a289975aeda34415d75a"}], "stats": {"total": 62, "additions": 10, "deletions": 52}, "files": [{"sha": "a8bb7226ab83baeff6a53e58c7238f9c2a836209", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "patch": "@@ -1,3 +1,9 @@\n+2004-02-26  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* acinclude.m4: Remove obsolete and bogus constructs.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regnerate.\n+\n 2004-02-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* acinclude.m4: De-precious CC and CXX so that the right flags"}, {"sha": "7ac39d2b2921d5603b8ff4cb0419156a0eafc13a", "filename": "boehm-gc/acinclude.m4", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Facinclude.m4?ref=413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "patch": "@@ -41,21 +41,6 @@ AC_PROG_INSTALL\n \n AM_MAINTAINER_MODE\n \n-# We need AC_EXEEXT to keep automake happy in cygnus mode.  However,\n-# at least currently, we never actually build a program, so we never\n-# need to use $(EXEEXT).  Moreover, the test for EXEEXT normally\n-# fails, because we are probably configuring with a cross compiler\n-# which can't create executables.  So we include AC_EXEEXT to keep\n-# automake happy, but we don't execute it, since we don't care about\n-# the result.\n-if false; then\n-  # autoconf 2.50 runs AC_EXEEXT by default, and the macro expands\n-  # to nothing, so nothing would remain between `then' and `fi' if it\n-  # were not for the `:' below.\n-  :\n-  AC_EXEEXT\n-fi\n-\n . [$]{srcdir}/configure.host\n \n case [$]{gc_basedir} in\n@@ -74,9 +59,7 @@ dnl gc_cflags=\"[$]{gc_cflags} -fno-builtin\"\n \n GC_CFLAGS=${gc_cflags}\n AC_SUBST(GC_CFLAGS)\n-]))\n-\n-))))\n+])\n \n sinclude(../libtool.m4)\n dnl The line below arranges for aclocal not to bring a definition of"}, {"sha": "98e62cd04a434d585a00574fd7dbddc450a23243", "filename": "boehm-gc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Faclocal.m4?ref=413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "patch": "@@ -53,21 +53,6 @@ AC_PROG_INSTALL\n \n AM_MAINTAINER_MODE\n \n-# We need AC_EXEEXT to keep automake happy in cygnus mode.  However,\n-# at least currently, we never actually build a program, so we never\n-# need to use $(EXEEXT).  Moreover, the test for EXEEXT normally\n-# fails, because we are probably configuring with a cross compiler\n-# which can't create executables.  So we include AC_EXEEXT to keep\n-# automake happy, but we don't execute it, since we don't care about\n-# the result.\n-if false; then\n-  # autoconf 2.50 runs AC_EXEEXT by default, and the macro expands\n-  # to nothing, so nothing would remain between `then' and `fi' if it\n-  # were not for the `:' below.\n-  :\n-  AC_EXEEXT\n-fi\n-\n . [$]{srcdir}/configure.host\n \n case [$]{gc_basedir} in\n@@ -86,9 +71,7 @@ dnl gc_cflags=\"[$]{gc_cflags} -fno-builtin\"\n \n GC_CFLAGS=${gc_cflags}\n AC_SUBST(GC_CFLAGS)\n-]))\n-\n-))))\n+])\n \n sinclude(../libtool.m4)\n dnl The line below arranges for aclocal not to bring a definition of"}, {"sha": "b5ff18c571452f07ffb233e6a7efa7fd21c0108e", "filename": "boehm-gc/configure", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=413580dc797ecbbf4246f19f53ba1aa0bd9fcfdf", "patch": "@@ -3393,21 +3393,6 @@ fi\n \n \n \n-# We need AC_EXEEXT to keep automake happy in cygnus mode.  However,\n-# at least currently, we never actually build a program, so we never\n-# need to use $(EXEEXT).  Moreover, the test for EXEEXT normally\n-# fails, because we are probably configuring with a cross compiler\n-# which can't create executables.  So we include AC_EXEEXT to keep\n-# automake happy, but we don't execute it, since we don't care about\n-# the result.\n-if false; then\n-  # autoconf 2.50 runs AC_EXEEXT by default, and the macro expands\n-  # to nothing, so nothing would remain between `then' and `fi' if it\n-  # were not for the `:' below.\n-  :\n-\n-fi\n-\n . ${srcdir}/configure.host\n \n case ${gc_basedir} in\n@@ -3833,6 +3818,7 @@ deplibs_check_method=$lt_cv_deplibs_check_method\n \n \n \n+\n # Autoconf 2.13's AC_OBJEXT and AC_EXEEXT macros only works for C compilers!\n \n # Only perform the check for file, if the check method requires it\n@@ -4168,7 +4154,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4171 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4157 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?"}]}