{"sha": "68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhZDFkZjVmNWNkODBiMTVjNTAxNWJiODYyMzBiZjJjNWIyYmMzZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-30T07:09:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-30T07:09:28Z"}, "message": "tree-vrp.c (intersect_ranges): If we failed to handle the intersection choose a constant singleton range if...\n\n2016-09-30  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vrp.c (intersect_ranges): If we failed to handle\n\tthe intersection choose a constant singleton range if available.\n\nFrom-SVN: r240647", "tree": {"sha": "2288d16253c0d992f87308a69b56b0cf44c0c04c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2288d16253c0d992f87308a69b56b0cf44c0c04c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f334c828feae86ecdcc6a8f0b35425147057539f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f334c828feae86ecdcc6a8f0b35425147057539f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f334c828feae86ecdcc6a8f0b35425147057539f"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "25129cb5d964e495c6749ba5ddec911d6da0b376", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e", "patch": "@@ -1,3 +1,8 @@\n+2016-09-30  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vrp.c (intersect_ranges): If we failed to handle\n+\tthe intersection choose a constant singleton range if available.\n+\n 2016-09-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77399"}, {"sha": "7a08be7b2aa8340b71e4ac89bfb1fe14a9b9892e", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=68ad1df5f5cd80b15c5015bb86230bf2c5b2bc3e", "patch": "@@ -8555,7 +8555,16 @@ intersect_ranges (enum value_range_type *vr0type,\n \n   /* As a fallback simply use { *VRTYPE, *VR0MIN, *VR0MAX } as\n      result for the intersection.  That's always a conservative\n-     correct estimate.  */\n+     correct estimate unless VR1 is a constant singleton range\n+     in which case we choose that.  */\n+  if (vr1type == VR_RANGE\n+      && is_gimple_min_invariant (vr1min)\n+      && vrp_operand_equal_p (vr1min, vr1max))\n+    {\n+      *vr0type = vr1type;\n+      *vr0min = vr1min;\n+      *vr0max = vr1max;\n+    }\n \n   return;\n }"}]}