{"sha": "4cb02ea1625e1a5293342c26a904d4bb557dbc48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNiMDJlYTE2MjVlMWE1MjkzMzQyYzI2YTkwNGQ0YmI1NTdkYmM0OA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-04-23T16:58:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-04-23T16:58:01Z"}, "message": "decl2.c (finish_file): Tweak handling of extern inlines so that they are not unnecessarily put out.\n\n\t* decl2.c (finish_file): Tweak handling of extern inlines so that\n\tthey are not unnecessarily put out.\n\nFrom-SVN: r26606", "tree": {"sha": "f634a346d584e871bb168835d8d13f722a45df05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f634a346d584e871bb168835d8d13f722a45df05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cb02ea1625e1a5293342c26a904d4bb557dbc48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb02ea1625e1a5293342c26a904d4bb557dbc48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cb02ea1625e1a5293342c26a904d4bb557dbc48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb02ea1625e1a5293342c26a904d4bb557dbc48/comments", "author": null, "committer": null, "parents": [{"sha": "12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12571b1f964b2fcbae5f66b6307c31854ed8c0d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12571b1f964b2fcbae5f66b6307c31854ed8c0d5"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "d2f3426b3ae6ba00e92f8d4ad85446c08924d40f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cb02ea1625e1a5293342c26a904d4bb557dbc48/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cb02ea1625e1a5293342c26a904d4bb557dbc48/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4cb02ea1625e1a5293342c26a904d4bb557dbc48", "patch": "@@ -1,5 +1,8 @@\n 1999-04-23  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* decl2.c (finish_file): Tweak handling of extern inlines so that\n+\tthey are not unnecessarily put out.\n+\n \t* search.c (is_subobject_of_p): Handle TEMPLATE_TYPE_PARMs and\n \tsuch as base classes.\n "}, {"sha": "9d3288f8fc351fca4cadc28f9e31f55cd2057eec", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cb02ea1625e1a5293342c26a904d4bb557dbc48/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cb02ea1625e1a5293342c26a904d4bb557dbc48/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=4cb02ea1625e1a5293342c26a904d4bb557dbc48", "patch": "@@ -3628,20 +3628,37 @@ finish_file ()\n     {\n       tree decl = VARRAY_TREE (saved_inlines, i);\n       \n-      if (DECL_NOT_REALLY_EXTERN (decl))\n+      if (DECL_NOT_REALLY_EXTERN (decl) && !DECL_COMDAT (decl)\n+\t  && DECL_INITIAL (decl)) \n \tDECL_EXTERNAL (decl) = 0;\n     }\n \n   /* We haven't handled non-local objects that don't need dynamic\n      initialization.  Do that now.  */\n   do\n     {\n-      if (saved_inlines)\n-\treconsider \n-\t  |= wrapup_global_declarations (&VARRAY_TREE (saved_inlines, 0),\n-\t\t\t\t\t saved_inlines_used);\n-      reconsider \n-\t= walk_namespaces (wrapup_globals_for_namespace, /*data=*/0);\n+      reconsider = 0;\n+\n+      /* Above, we hung back on weak functions; they will be defined\n+\t where they are needed.  But, here we loop again, so that we\n+\t output the things that *are* needed.  */\n+      for (i = 0; i < saved_inlines_used; ++i)\n+\t{\n+\t  tree decl = VARRAY_TREE (saved_inlines, i);\n+      \n+\t  if (DECL_NOT_REALLY_EXTERN (decl)\n+\t      && DECL_INITIAL (decl)\n+\t      && TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl)))\n+\t    DECL_EXTERNAL (decl) = 0;\n+\t}\n+\n+      if (saved_inlines_used\n+\t  && wrapup_global_declarations (&VARRAY_TREE (saved_inlines, 0),\n+\t\t\t\t\t saved_inlines_used))\n+\treconsider = 1;\n+\n+      if (walk_namespaces (wrapup_globals_for_namespace, /*data=*/0))\n+\treconsider = 1;\n \n       /* Static data members are just like namespace-scope globals.  */\n       for (i = 0; i < pending_statics_used; ++i) \n@@ -3653,10 +3670,10 @@ finish_file ()\n \t  if (DECL_NOT_REALLY_EXTERN (decl) && ! DECL_IN_AGGR_P (decl))\n \t    DECL_EXTERNAL (decl) = 0;\n \t}\n-      if (pending_statics)\n-\treconsider \n-\t  |= wrapup_global_declarations (&VARRAY_TREE (pending_statics, 0),\n-\t\t\t\t\t pending_statics_used);\n+      if (pending_statics\n+\t  && wrapup_global_declarations (&VARRAY_TREE (pending_statics, 0),\n+\t\t\t\t\t pending_statics_used))\n+\treconsider = 1;\n     }\n   while (reconsider);\n "}]}