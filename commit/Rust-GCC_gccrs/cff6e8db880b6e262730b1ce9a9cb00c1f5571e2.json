{"sha": "cff6e8db880b6e262730b1ce9a9cb00c1f5571e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZmNmU4ZGI4ODBiNmUyNjI3MzBiMWNlOWE5Y2IwMGMxZjU1NzFlMg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-01-29T23:37:27Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-02-04T23:05:14Z"}, "message": "openacc: Dereference BT_CLASS data pointers but not BT_DERIVED pointers\n\nThe stanza in gfc_trans_omp_clauses that handles derived type members\nthat are themselves derived type pointers or class pointers now adds\nan explicit dereference only for the latter. The former is already\ndereferenced transparently in gfc_conv_component_ref.\n\ngcc/fortran/\n\t* trans-openmp.c (gfc_trans_omp_clauses): Fix dereferencing for\n\tBT_DERIVED members.\n\ngcc/testsuite/\n\t* gfortran.dg/goacc/derived-classtypes-1.f95: New test.", "tree": {"sha": "dffe984f4fa49bc703fcdce0e4117f99402d5595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dffe984f4fa49bc703fcdce0e4117f99402d5595"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b34dbc0a24864b1674bff7a92fa3cf0f1cbcea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b34dbc0a24864b1674bff7a92fa3cf0f1cbcea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b34dbc0a24864b1674bff7a92fa3cf0f1cbcea1"}], "stats": {"total": 136, "additions": 133, "deletions": 3}, "files": [{"sha": "a5fe0e76af254c0e69356ffc898e767959dced9b", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=cff6e8db880b6e262730b1ce9a9cb00c1f5571e2", "patch": "@@ -3004,6 +3004,8 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t\t\t  if (lastcomp->u.c.component->ts.type == BT_CLASS)\n \t\t\t    {\n \t\t\t      data = gfc_class_data_get (inner);\n+\t\t\t      gcc_assert (POINTER_TYPE_P (TREE_TYPE (data)));\n+\t\t\t      data = build_fold_indirect_ref (data);\n \t\t\t      size = gfc_class_vtab_size_get (inner);\n \t\t\t    }\n \t\t\t  else  /* BT_DERIVED.  */\n@@ -3012,16 +3014,15 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t\t\t      size = TYPE_SIZE_UNIT (TREE_TYPE (inner));\n \t\t\t    }\n \n-\t\t\t  OMP_CLAUSE_DECL (node)\n-\t\t\t    = build_fold_indirect_ref (data);\n+\t\t\t  OMP_CLAUSE_DECL (node) = data;\n \t\t\t  OMP_CLAUSE_SIZE (node) = size;\n \t\t\t  node2 = build_omp_clause (input_location,\n \t\t\t\t\t\t    OMP_CLAUSE_MAP);\n \t\t\t  OMP_CLAUSE_SET_MAP_KIND (node2,\n \t\t\t\t\t\t   openacc\n \t\t\t\t\t\t   ? GOMP_MAP_ATTACH_DETACH\n \t\t\t\t\t\t   : GOMP_MAP_ALWAYS_POINTER);\n-\t\t\t  OMP_CLAUSE_DECL (node2) = data;\n+\t\t\t  OMP_CLAUSE_DECL (node2) = build_fold_addr_expr (data);\n \t\t\t  OMP_CLAUSE_SIZE (node2) = size_int (0);\n \t\t\t}\n \t\t      else"}, {"sha": "e6cf09c6d3c1e253c66a6c53e1e628d0c0562895", "filename": "gcc/testsuite/gfortran.dg/goacc/derived-classtypes-1.f95", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-classtypes-1.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff6e8db880b6e262730b1ce9a9cb00c1f5571e2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-classtypes-1.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-classtypes-1.f95?ref=cff6e8db880b6e262730b1ce9a9cb00c1f5571e2", "patch": "@@ -0,0 +1,129 @@\n+type :: type1\n+  integer :: a\n+end type type1\n+\n+type :: type2\n+  integer, pointer :: b\n+end type type2\n+\n+type :: aux1\n+  integer :: y\n+end type aux1\n+\n+type, extends(aux1) :: aux\n+  integer :: x\n+end type aux\n+\n+type :: type3\n+  class(aux), pointer :: c(:)\n+end type type3\n+\n+type :: type4\n+  integer, pointer :: d(:)\n+end type type4\n+\n+type :: type5\n+  type(aux) :: e\n+end type type5\n+\n+type :: type6\n+  type(aux), pointer :: f\n+end type type6\n+\n+type :: type7\n+  class(aux), pointer :: g\n+end type type7\n+\n+type(type1) :: foo\n+type(type2) :: bar\n+type(type3) :: qux\n+type(type4) :: quux\n+type(type5) :: fred\n+type(type6) :: jim\n+type(type7) :: shiela\n+\n+type(type1), pointer :: pfoo\n+type(type2), pointer :: pbar\n+type(type3), pointer :: pqux\n+type(type4), pointer :: pquux\n+type(type5), pointer :: pfred\n+type(type6), pointer :: pjim\n+type(type7), pointer :: pshiela\n+\n+class(type1), pointer :: cfoo\n+class(type2), pointer :: cbar\n+class(type3), pointer :: cqux\n+class(type4), pointer :: cquux\n+class(type5), pointer :: cfred\n+class(type6), pointer :: cjim\n+class(type7), pointer :: cshiela\n+\n+class(type1), allocatable :: acfoo\n+class(type2), allocatable :: acbar\n+class(type3), allocatable :: acqux\n+class(type4), allocatable :: acquux\n+class(type5), allocatable :: acfred\n+class(type6), allocatable :: acjim\n+class(type7), allocatable :: acshiela\n+\n+!$acc enter data copyin(foo)\n+!$acc enter data copyin(foo%a)\n+!$acc enter data copyin(bar)\n+!$acc enter data copyin(bar%b)\n+!$acc enter data copyin(qux)\n+!!$acc enter data copyin(qux%c)\n+!$acc enter data copyin(quux)\n+!$acc enter data copyin(quux%d)\n+!$acc enter data copyin(fred)\n+!$acc enter data copyin(fred%e)\n+!$acc enter data copyin(jim)\n+!$acc enter data copyin(jim%f)\n+!$acc enter data copyin(shiela)\n+!$acc enter data copyin(shiela%g)\n+\n+!$acc enter data copyin(pfoo)\n+!$acc enter data copyin(pfoo%a)\n+!$acc enter data copyin(pbar)\n+!$acc enter data copyin(pbar%b)\n+!$acc enter data copyin(pqux)\n+!!$acc enter data copyin(pqux%c)\n+!$acc enter data copyin(pquux)\n+!$acc enter data copyin(pquux%d)\n+!$acc enter data copyin(pfred)\n+!$acc enter data copyin(pfred%e)\n+!$acc enter data copyin(pjim)\n+!$acc enter data copyin(pjim%f)\n+!$acc enter data copyin(pshiela)\n+!$acc enter data copyin(pshiela%g)\n+\n+!$acc enter data copyin(cfoo)\n+!$acc enter data copyin(cfoo%a)\n+!$acc enter data copyin(cbar)\n+!$acc enter data copyin(cbar%b)\n+!$acc enter data copyin(cqux)\n+!!$acc enter data copyin(cqux%c)\n+!$acc enter data copyin(cquux)\n+!$acc enter data copyin(cquux%d)\n+!$acc enter data copyin(cfred)\n+!$acc enter data copyin(cfred%e)\n+!$acc enter data copyin(cjim)\n+!$acc enter data copyin(cjim%f)\n+!$acc enter data copyin(cshiela)\n+!$acc enter data copyin(cshiela%g)\n+\n+!$acc enter data copyin(acfoo)\n+!$acc enter data copyin(acfoo%a)\n+!$acc enter data copyin(acbar)\n+!$acc enter data copyin(acbar%b)\n+!$acc enter data copyin(acqux)\n+!!$acc enter data copyin(acqux%c)\n+!$acc enter data copyin(acquux)\n+!$acc enter data copyin(acquux%d)\n+!$acc enter data copyin(acfred)\n+!$acc enter data copyin(acfred%e)\n+!$acc enter data copyin(acjim)\n+!$acc enter data copyin(acjim%f)\n+!$acc enter data copyin(acshiela)\n+!$acc enter data copyin(acshiela%g)\n+\n+end"}]}