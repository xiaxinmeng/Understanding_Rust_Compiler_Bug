{"sha": "7cf6c9279ee253d2f90acf981b671e3a8b29486a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmNmM5Mjc5ZWUyNTNkMmY5MGFjZjk4MWI2NzFlM2E4YjI5NDg2YQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2003-06-17T15:53:35Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2003-06-17T15:53:35Z"}, "message": "linux.h (MD_FALLBACK_FRAME_STATE_FOR): Partly revert 2003-01-23 patch.\n\n2003-06-17  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* config/rs6000/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Partly revert\n\t2003-01-23 patch. Corrected to handle kernels with changed ucontext.\n\n\t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Error on invalid\n\t-msdata=eabi usages.\n\n\t* gcc/config/rs6000/sysv4.h (USE_LIBC_1): Delete all uses.\n\nFrom-SVN: r68087", "tree": {"sha": "97b7460aad4e75d6fead4fe06e7eecfd39f2044e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97b7460aad4e75d6fead4fe06e7eecfd39f2044e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cf6c9279ee253d2f90acf981b671e3a8b29486a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf6c9279ee253d2f90acf981b671e3a8b29486a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cf6c9279ee253d2f90acf981b671e3a8b29486a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf6c9279ee253d2f90acf981b671e3a8b29486a/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b98cf059725604c620b20b303af719f702aea758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98cf059725604c620b20b303af719f702aea758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98cf059725604c620b20b303af719f702aea758"}], "stats": {"total": 59, "additions": 28, "deletions": 31}, "files": [{"sha": "89103046dd4901b463f3441f7da4a29afcc45459", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf6c9279ee253d2f90acf981b671e3a8b29486a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf6c9279ee253d2f90acf981b671e3a8b29486a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cf6c9279ee253d2f90acf981b671e3a8b29486a", "patch": "@@ -1,3 +1,13 @@\n+2003-06-17  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* config/rs6000/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Partly revert\n+\t2003-01-23 patch. Corrected to handle kernels with changed ucontext.\n+\n+\t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Error on invalid\n+\t-msdata=eabi usages.\n+\n+\t* gcc/config/rs6000/sysv4.h (USE_LIBC_1): Delete all uses.\n+\n 2003-06-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* alloc-pool.c: Don't check HAVE_LONG_DOUBLE."}, {"sha": "c3e4a5865701785947148a1e8166ec05576d37d9", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf6c9279ee253d2f90acf981b671e3a8b29486a/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf6c9279ee253d2f90acf981b671e3a8b29486a/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=7cf6c9279ee253d2f90acf981b671e3a8b29486a", "patch": "@@ -93,7 +93,18 @@\n \n #ifdef IN_LIBGCC2\n #include <signal.h>\n-#include <sys/ucontext.h>\n+\n+/* During the 2.5 kernel series the kernel ucontext was changed, but\n+   the new layout is compatible with the old one, so we just define\n+   and use the old one here for simplicity and compatibility.  */\n+\n+struct kernel_old_ucontext {\n+  unsigned long     uc_flags;\n+  struct ucontext  *uc_link;\n+  stack_t           uc_stack;\n+  struct sigcontext_struct uc_mcontext;\n+  sigset_t          uc_sigmask;\n+};\n \n enum { SIGNAL_FRAMESIZE = 64 };\n #endif\n@@ -129,7 +140,7 @@ enum { SIGNAL_FRAMESIZE = 64 };\n \t  struct siginfo *pinfo;\t\t\t\t\t\\\n \t  void *puc;\t\t\t\t\t\t\t\\\n \t  struct siginfo info;\t\t\t\t\t\t\\\n-\t  struct ucontext uc;\t\t\t\t\t\t\\\n+\t  struct kernel_old_ucontext uc;\t\t\t\t\\\n \t} *rt_ = (CONTEXT)->cfa;\t\t\t\t\t\\\n \tsc_ = &rt_->uc.uc_mcontext;\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n@@ -153,15 +164,9 @@ enum { SIGNAL_FRAMESIZE = 64 };\n     (FS)->regs.reg[LINK_REGISTER_REGNUM].loc.offset \t\t\t\\\n       = (long)&(sc_->regs->link) - new_cfa_;\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    /* The unwinder expects the IP to point to the following insn,\t\\\n-       whereas the kernel returns the address of the actual\t\t\\\n-       faulting insn. We store NIP+4 in an unused register slot to\t\\\n-       get the same result for multiple evaluation of the same signal\t\\\n-       frame.  */\t\t\t\t\t\t\t\\\n-    sc_->regs->gpr[47] = sc_->regs->nip + 4;  \t\t\t\t\\\n     (FS)->regs.reg[CR0_REGNO].how = REG_SAVED_OFFSET;\t\t\t\\\n     (FS)->regs.reg[CR0_REGNO].loc.offset \t\t\t\t\\\n-      = (long)&(sc_->regs->gpr[47]) - new_cfa_;\t\t\t\t\\\n+      = (long)&(sc_->regs->nip) - new_cfa_;\t\t\t\t\\\n     (FS)->retaddr_column = CR0_REGNO;\t\t\t\t\t\\\n     goto SUCCESS;\t\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "098269831dd86204ab91cbd5902e564848aaa374", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 4, "deletions": 22, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf6c9279ee253d2f90acf981b671e3a8b29486a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf6c9279ee253d2f90acf981b671e3a8b29486a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=7cf6c9279ee253d2f90acf981b671e3a8b29486a", "patch": "@@ -256,7 +256,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t     rs6000_sdata_name);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (rs6000_sdata != SDATA_NONE && DEFAULT_ABI != ABI_V4)\t\t\\\n+  if ((rs6000_sdata != SDATA_NONE && DEFAULT_ABI != ABI_V4)\t\t\\\n+      || (rs6000_sdata == SDATA_EABI && !TARGET_EABI))\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_NONE;\t\t\t\t\t\\\n       error (\"-msdata=%s and -mcall-%s are incompatible\",\t\t\\\n@@ -1073,21 +1074,11 @@ extern int fixuplabelno;\n     %{symbolic:-Bsymbolic}\"\n \n /* GNU/Linux support.  */\n-#ifdef USE_GNULIBC_1\n-#define LIB_LINUX_SPEC \"%{mnewlib: --start-group -llinux -lc --end-group } \\\n-%{!mnewlib: -lc }\"\n-#else\n #define LIB_LINUX_SPEC \"%{mnewlib: --start-group -llinux -lc --end-group } \\\n %{!mnewlib: %{shared:-lc} %{!shared: %{pthread:-lpthread } \\\n %{profile:-lc_p} %{!profile:-lc}}}\"\n-#endif\n \n-#ifdef USE_GNULIBC_1\n-#define\tSTARTFILE_LINUX_SPEC \"\\\n-%{!shared: %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}} \\\n-%{mnewlib: ecrti.o%s} %{!mnewlib: crti.o%s} \\\n-%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n-#elif defined HAVE_LD_PIE\n+#ifdef HAVE_LD_PIE\n #define\tSTARTFILE_LINUX_SPEC \"\\\n %{!shared: %{pg|p:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} \\\n %{mnewlib:ecrti.o%s;:crti.o%s} \\\n@@ -1108,25 +1099,16 @@ extern int fixuplabelno;\n   %{rdynamic:-export-dynamic} \\\n   %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}}}\"\n \n-#if !defined(USE_GNULIBC_1) && defined(HAVE_LD_EH_FRAME_HDR)\n+#if defined(HAVE_LD_EH_FRAME_HDR)\n # define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n #endif\n \n-#ifdef USE_GNULIBC_1\n-#define CPP_OS_LINUX_SPEC \"-D__unix__ -D__gnu_linux__ -D__linux__ \\\n-%{!undef:\t\t\t\t\t\t\t  \\\n-  %{!ansi:\t\t\t\t\t\t\t  \\\n-    %{!std=*:-Dunix -D__unix -Dlinux -D__linux}\t                  \\\n-    %{std=gnu*:-Dunix -D__unix -Dlinux -D__linux}}}\t\t  \\\n--Asystem=unix -Asystem=posix\"\n-#else\n #define CPP_OS_LINUX_SPEC \"-D__unix__ -D__gnu_linux__ -D__linux__ \\\n %{!undef:\t\t\t\t\t\t\t  \\\n   %{!ansi:\t\t\t\t\t\t\t  \\\n     %{!std=*:-Dunix -D__unix -Dlinux -D__linux}\t\t\t  \\\n     %{std=gnu*:-Dunix -D__unix -Dlinux -D__linux}}}\t\t  \\\n -Asystem=unix -Asystem=posix %{pthread:-D_REENTRANT}\"\n-#endif\n \n /* GNU/Hurd support.  */\n #define LIB_GNU_SPEC \"%{mnewlib: --start-group -lgnu -lc --end-group } \\"}]}