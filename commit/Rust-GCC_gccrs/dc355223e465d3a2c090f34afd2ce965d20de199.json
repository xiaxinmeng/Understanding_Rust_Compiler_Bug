{"sha": "dc355223e465d3a2c090f34afd2ce965d20de199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzNTUyMjNlNDY1ZDNhMmMwOTBmMzRhZmQyY2U5NjVkMjBkZTE5OQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-12-19T13:54:08Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-12-19T13:54:08Z"}, "message": "Restrict a VSX extract to TARGET_POWERPC64 (PR88213)\n\nThis pattern optimises a scalar extract from a vector loaded from\nmemory to be just a scalar load from memory.  But to do a 64-bit\ninteger load you need 64-bit integer registers, which needs\nTARGET_POWERPC64.\n\n\n\tPR target/88213\n\t* config/rs6000/vsx.md (*vsx_extract_<P:mode>_<VSX_D:mode>_load):\n\tRequire TARGET_POWERPC64.\n\nFrom-SVN: r267263", "tree": {"sha": "535b9b083f647b41d10de513d1e2873d40b9d982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/535b9b083f647b41d10de513d1e2873d40b9d982"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc355223e465d3a2c090f34afd2ce965d20de199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc355223e465d3a2c090f34afd2ce965d20de199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc355223e465d3a2c090f34afd2ce965d20de199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc355223e465d3a2c090f34afd2ce965d20de199/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08926e6f5bbf23d1eebc776d84d648f8b5836931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08926e6f5bbf23d1eebc776d84d648f8b5836931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08926e6f5bbf23d1eebc776d84d648f8b5836931"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "6fe6ec342c1f4dd1a806ff179e773a0b30dd92a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc355223e465d3a2c090f34afd2ce965d20de199/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc355223e465d3a2c090f34afd2ce965d20de199/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc355223e465d3a2c090f34afd2ce965d20de199", "patch": "@@ -1,3 +1,9 @@\n+2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/88213\n+\t* config/rs6000/vsx.md (*vsx_extract_<P:mode>_<VSX_D:mode>_load):\n+\tRequire TARGET_POWERPC64.\n+\n 2018-12-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88533"}, {"sha": "38223a5736513fdef24f3f2ce458523b2c4fabcd", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc355223e465d3a2c090f34afd2ce965d20de199/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc355223e465d3a2c090f34afd2ce965d20de199/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=dc355223e465d3a2c090f34afd2ce965d20de199", "patch": "@@ -3257,7 +3257,7 @@\n \t (match_operand:VSX_D 1 \"memory_operand\" \"m,m\")\n \t (parallel [(match_operand:QI 2 \"const_0_to_1_operand\" \"n,n\")])))\n    (clobber (match_scratch:P 3 \"=&b,&b\"))]\n-  \"VECTOR_MEM_VSX_P (<VSX_D:MODE>mode)\"\n+  \"TARGET_POWERPC64 && VECTOR_MEM_VSX_P (<VSX_D:MODE>mode)\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0) (match_dup 4))]"}]}