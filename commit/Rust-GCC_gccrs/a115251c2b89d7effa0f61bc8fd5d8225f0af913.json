{"sha": "a115251c2b89d7effa0f61bc8fd5d8225f0af913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTExNTI1MWMyYjg5ZDdlZmZhMGY2MWJjOGZkNWQ4MjI1ZjBhZjkxMw==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-04-03T09:00:53Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-04-03T09:00:53Z"}, "message": "cgraphunit.c (cgraph_node::expand_thunk): Don't expand instrumentation thunks.\n\n\t* cgraphunit.c (cgraph_node::expand_thunk): Don't expand\n\tinstrumentation thunks.\n\nFrom-SVN: r221852", "tree": {"sha": "a066ef19e36a03a0e5f9da01e441cc2a0c8a2386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a066ef19e36a03a0e5f9da01e441cc2a0c8a2386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a115251c2b89d7effa0f61bc8fd5d8225f0af913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a115251c2b89d7effa0f61bc8fd5d8225f0af913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a115251c2b89d7effa0f61bc8fd5d8225f0af913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a115251c2b89d7effa0f61bc8fd5d8225f0af913/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fad71ff5e7497d9b94fcab47e15856114421f7ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad71ff5e7497d9b94fcab47e15856114421f7ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fad71ff5e7497d9b94fcab47e15856114421f7ec"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "fee8cb55acf421e9deef55e0c121dbb5e7ef3177", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a115251c2b89d7effa0f61bc8fd5d8225f0af913/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a115251c2b89d7effa0f61bc8fd5d8225f0af913/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a115251c2b89d7effa0f61bc8fd5d8225f0af913", "patch": "@@ -1,3 +1,8 @@\n+2015-04-02  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* cgraphunit.c (cgraph_node::expand_thunk): Don't expand\n+\tinstrumentation thunks.\n+\n 2015-04-02  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* config/i386/i386.c (ix86_expand_call): Avoid nested"}, {"sha": "77ef9edba4ae14a544621ae41efdb759d23ecfaa", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a115251c2b89d7effa0f61bc8fd5d8225f0af913/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a115251c2b89d7effa0f61bc8fd5d8225f0af913/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=a115251c2b89d7effa0f61bc8fd5d8225f0af913", "patch": "@@ -1508,6 +1508,10 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n   tree thunk_fndecl = decl;\n   tree a;\n \n+  /* Instrumentation thunk is the same function with\n+     a different signature.  Never need to expand it.  */\n+  if (thunk.add_pointer_bounds_args)\n+    return false;\n \n   if (!force_gimple_thunk && this_adjusting\n       && targetm.asm_out.can_output_mi_thunk (thunk_fndecl, fixed_offset,"}]}