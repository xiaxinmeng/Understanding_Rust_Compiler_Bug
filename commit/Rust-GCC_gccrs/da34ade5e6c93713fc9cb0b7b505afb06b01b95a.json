{"sha": "da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEzNGFkZTVlNmM5MzcxM2ZjOWNiMGI3YjUwNWFmYjA2YjAxYjk1YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-04-07T13:27:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-04-07T13:27:39Z"}, "message": "re PR c++/60731 (dynamic library not getting reinitialized on multiple calls to dlopen())\n\n\tPR c++/60731\n\t* common.opt (-fno-gnu-unique): Add.\n\t* config/elfos.h (USE_GNU_UNIQUE_OBJECT): Check it.\n\nFrom-SVN: r209186", "tree": {"sha": "d17894e439e7f9ac2af8c36361871939b0353bc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d17894e439e7f9ac2af8c36361871939b0353bc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67649cb84c2bfbe77d870b3606e66b90288eb824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67649cb84c2bfbe77d870b3606e66b90288eb824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67649cb84c2bfbe77d870b3606e66b90288eb824"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "d3cde1e03bd14dd333cca3c9d33b5e04695a5e0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "patch": "@@ -1,3 +1,9 @@\n+2014-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/60731\n+\t* common.opt (-fno-gnu-unique): Add.\n+\t* config/elfos.h (USE_GNU_UNIQUE_OBJECT): Check it.\n+\n 2014-04-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* haifa-sched.c: Fix outdated function reference and minor"}, {"sha": "2259f29d19e4531a12fb2fac5977d9bcb52b907d", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "patch": "@@ -1267,6 +1267,10 @@ fgnu-tm\n Common Report Var(flag_tm)\n Enable support for GNU transactional memory\n \n+fgnu-unique\n+Common Report Var(flag_gnu_unique) Init(1)\n+Use STB_GNU_UNIQUE if supported by the assembler\n+\n floop-flatten\n Common Ignore\n Does nothing. Preserved for backward compatibility."}, {"sha": "c1d5553123d393185e143c7fbb93fc4e3d0a8d5d", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "patch": "@@ -287,7 +287,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Write the extra assembler code needed to declare an object properly.  */\n \n #ifdef HAVE_GAS_GNU_UNIQUE_OBJECT\n-#define USE_GNU_UNIQUE_OBJECT 1\n+#define USE_GNU_UNIQUE_OBJECT flag_gnu_unique\n #else\n #define USE_GNU_UNIQUE_OBJECT 0\n #endif"}, {"sha": "cfc6d981237f1882d5371505319efc30dfab3d1a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da34ade5e6c93713fc9cb0b7b505afb06b01b95a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=da34ade5e6c93713fc9cb0b7b505afb06b01b95a", "patch": "@@ -1070,6 +1070,7 @@ See S/390 and zSeries Options.\n -ffixed-@var{reg}  -fexceptions @gol\n -fnon-call-exceptions  -fdelete-dead-exceptions  -funwind-tables @gol\n -fasynchronous-unwind-tables @gol\n+-fno-gnu-unique @gol\n -finhibit-size-directive  -finstrument-functions @gol\n -finstrument-functions-exclude-function-list=@var{sym},@var{sym},@dots{} @gol\n -finstrument-functions-exclude-file-list=@var{file},@var{file},@dots{} @gol\n@@ -22013,6 +22014,20 @@ Generate unwind table in DWARF 2 format, if supported by target machine.  The\n table is exact at each instruction boundary, so it can be used for stack\n unwinding from asynchronous events (such as debugger or garbage collector).\n \n+@item -fno-gnu-unique\n+@opindex fno-gnu-unique\n+On systems with recent GNU assembler and C library, the C++ compiler\n+uses the @code{STB_GNU_UNIQUE} binding to make sure that definitions\n+of template static data members and static local variables in inline\n+functions are unique even in the presence of @code{RTLD_LOCAL}; this\n+is necessary to avoid problems with a library used by two different\n+@code{RTLD_LOCAL} plugins depending on a definition in one of them and\n+therefore disagreeing with the other one about the binding of the\n+symbol.  But this causes @code{dlclose} to be ignored for affected\n+DSOs; if your program relies on reinitialization of a DSO via\n+@code{dlclose} and @code{dlopen}, you can use\n+@option{-fno-gnu-unique}.\n+\n @item -fpcc-struct-return\n @opindex fpcc-struct-return\n Return ``short'' @code{struct} and @code{union} values in memory like"}]}