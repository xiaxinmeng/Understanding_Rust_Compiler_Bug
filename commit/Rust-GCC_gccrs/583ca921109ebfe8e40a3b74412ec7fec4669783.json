{"sha": "583ca921109ebfe8e40a3b74412ec7fec4669783", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgzY2E5MjExMDllYmZlOGU0MGEzYjc0NDEyZWM3ZmVjNDY2OTc4Mw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2009-05-21T23:51:22Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2009-05-21T23:51:22Z"}, "message": "re PR target/37846 (Option -mno-fused-madd should be supported on IA-64)\n\n\tPR target/37846\n\t* config/ia64/ia64.opt (mfused-madd): New.\n\t* config/ia64/ia64.h (TARGET_DEFAULT): Set MASK_FUSED_MADD.\n\t* config/ia64/hpux.h (TARGET_DEFAULT): Ditto.\n\t* config/ia64/ia64.md (maddsf4, msubsf4, nmaddsf4,\n\tmadddf4, madddf4_trunc, msubdf4, msubdf4_trunc, nmadddf4,\n\tnmadddf4_truncsf, maddxf4, maddxf4_truncsf, maddxf4_truncdf,\n\tmsubxf4, msubxf4_truncsf msubxf4_truncdf, nmaddxf4,\n\tnmaddxf4_truncsf, nmaddxf4_truncdf): Check TARGET_FUSED_MADD.\n\t* config/ia64/vect.md (addv2sf3, subv2sf3): Force fpma/fpms \n\tinstruction if !TARGET_FUSED_MADD.\n\t(fpma, fpms): Remove colon from name.\n\nFrom-SVN: r147782", "tree": {"sha": "4d2b9f5a9fdf14c318372837fb925abc5d754a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d2b9f5a9fdf14c318372837fb925abc5d754a3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/583ca921109ebfe8e40a3b74412ec7fec4669783", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583ca921109ebfe8e40a3b74412ec7fec4669783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/583ca921109ebfe8e40a3b74412ec7fec4669783", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583ca921109ebfe8e40a3b74412ec7fec4669783/comments", "author": null, "committer": null, "parents": [{"sha": "150e39291c308c6c7c4df44bd1c0d367794ba76d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/150e39291c308c6c7c4df44bd1c0d367794ba76d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/150e39291c308c6c7c4df44bd1c0d367794ba76d"}], "stats": {"total": 73, "additions": 51, "deletions": 22}, "files": [{"sha": "77cb400b80199afb3fcfc258878faaff03161f3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=583ca921109ebfe8e40a3b74412ec7fec4669783", "patch": "@@ -1,3 +1,18 @@\n+2009-05-21  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/37846\n+\t* config/ia64/ia64.opt (mfused-madd): New.\n+\t* config/ia64/ia64.h (TARGET_DEFAULT): Set MASK_FUSED_MADD.\n+\t* config/ia64/hpux.h (TARGET_DEFAULT): Ditto.\n+\t* config/ia64/ia64.md (maddsf4, msubsf4, nmaddsf4,\n+\tmadddf4, madddf4_trunc, msubdf4, msubdf4_trunc, nmadddf4,\n+\tnmadddf4_truncsf, maddxf4, maddxf4_truncsf, maddxf4_truncdf,\n+\tmsubxf4, msubxf4_truncsf msubxf4_truncdf, nmaddxf4,\n+\tnmaddxf4_truncsf, nmaddxf4_truncdf): Check TARGET_FUSED_MADD.\n+\t* config/ia64/vect.md (addv2sf3, subv2sf3): Force fpma/fpms \n+\tinstruction if !TARGET_FUSED_MADD.\n+\t(fpma, fpms): Remove colon from name.\n+\n 2009-05-22  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Record"}, {"sha": "e91d1340e8a5fa24ee518bd2e829278c7977a5ce", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=583ca921109ebfe8e40a3b74412ec7fec4669783", "patch": "@@ -106,7 +106,7 @@ do {\t\t\t\t\t\t\t\\\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\\n-  (MASK_DWARF2_ASM | MASK_BIG_ENDIAN | MASK_ILP32)\n+  (MASK_DWARF2_ASM | MASK_BIG_ENDIAN | MASK_ILP32 | MASK_FUSED_MADD)\n \n /* ??? Might not be needed anymore.  */\n #define MEMBER_TYPE_FORCES_BLK(FIELD, MODE) ((MODE) == TFmode)"}, {"sha": "ff02f754caa36bfa3226b132672a14e789c4900e", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=583ca921109ebfe8e40a3b74412ec7fec4669783", "patch": "@@ -94,7 +94,7 @@ enum ia64_inline_type\n /* Default target_flags if no switches are specified  */\n \n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_DWARF2_ASM)\n+#define TARGET_DEFAULT (MASK_DWARF2_ASM | MASK_FUSED_MADD)\n #endif\n \n #ifndef TARGET_CPU_DEFAULT"}, {"sha": "d20ae6948cfb26f21fb99d3f266c258dacd26238", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=583ca921109ebfe8e40a3b74412ec7fec4669783", "patch": "@@ -3106,7 +3106,7 @@\n \t(plus:SF (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t  (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3115,7 +3115,7 @@\n \t(minus:SF (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t  (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3132,7 +3132,7 @@\n \t(minus:SF (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\") \n \t\t  (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fnma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3303,7 +3303,7 @@\n \t(plus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t  (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3313,7 +3313,7 @@\n \t  (plus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t    (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3322,7 +3322,7 @@\n \t(minus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t  (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fms.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3332,7 +3332,7 @@\n \t  (minus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t    (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3358,7 +3358,7 @@\n \t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t  (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fnma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3378,7 +3378,7 @@\n \t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t  (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fnma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3599,7 +3599,7 @@\n \t(plus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t  (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n \t\t (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fma %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3609,7 +3609,7 @@\n \t  (plus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n \t\t   (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3619,7 +3619,7 @@\n \t  (plus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n \t\t   (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3660,7 +3660,7 @@\n \t(minus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n \t\t  (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fms %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3670,7 +3670,7 @@\n \t  (minus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n \t\t    (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3680,7 +3680,7 @@\n \t  (minus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n \t\t    (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fms.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3718,7 +3718,7 @@\n \t\t  (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n    )))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fnma %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3729,7 +3729,7 @@\n \t\t    (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n    ))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fnma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n@@ -3740,7 +3740,7 @@\n \t\t    (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")\n    ))))]\n-  \"\"\n+  \"TARGET_FUSED_MADD\"\n   \"fnma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n "}, {"sha": "27cd5b1eaeb96e4afcef649e221b409f28677c5c", "filename": "gcc/config/ia64/ia64.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fia64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fia64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.opt?ref=583ca921109ebfe8e40a3b74412ec7fec4669783", "patch": "@@ -178,4 +178,8 @@ msel-sched-dont-check-control-spec\n Target Report Var(mflag_sel_sched_dont_check_control_spec) Init(0)\n Don't generate checks for control speculation in selective scheduling\n \n+mfused-madd\n+Target Report Mask(FUSED_MADD)\n+Enable fused multiply/add and multiply/subtract instructions\n+\n ; This comment is to ensure we retain the blank line above."}, {"sha": "6b42c920d9d2c46e93bf94ee8086d643f225bfe9", "filename": "gcc/config/ia64/vect.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fvect.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/583ca921109ebfe8e40a3b74412ec7fec4669783/gcc%2Fconfig%2Fia64%2Fvect.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvect.md?ref=583ca921109ebfe8e40a3b74412ec7fec4669783", "patch": "@@ -915,6 +915,11 @@\n {\n   rtvec v = gen_rtvec (2, CONST1_RTX (SFmode), CONST1_RTX (SFmode));\n   operands[3] = force_reg (V2SFmode, gen_rtx_CONST_VECTOR (V2SFmode, v));\n+  if (!TARGET_FUSED_MADD)\n+    {\n+      emit_insn (gen_fpma (operands[0], operands[1], operands[3], operands[2]));\n+      DONE;\n+    }\n })\n \n ;; The split condition here could be combine_completed, if we had such.\n@@ -960,6 +965,11 @@\n {\n   rtvec v = gen_rtvec (2, CONST1_RTX (SFmode), CONST1_RTX (SFmode));\n   operands[3] = force_reg (V2SFmode, gen_rtx_CONST_VECTOR (V2SFmode, v));\n+  if (!TARGET_FUSED_MADD)\n+    {\n+      emit_insn (gen_fpms (operands[0], operands[1], operands[3], operands[2]));\n+      DONE;\n+    }\n })\n \n ;; The split condition here could be combine_completed, if we had such.\n@@ -1001,7 +1011,7 @@\n   \"fpmpy %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n-(define_insn \"*fpma\"\n+(define_insn \"fpma\"\n   [(set (match_operand:V2SF 0 \"fr_register_operand\" \"=f\")\n \t(plus:V2SF\n \t  (mult:V2SF (match_operand:V2SF 1 \"fr_register_operand\" \"f\")\n@@ -1011,7 +1021,7 @@\n   \"fpma %0 = %1, %2, %3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n-(define_insn \"*fpms\"\n+(define_insn \"fpms\"\n   [(set (match_operand:V2SF 0 \"fr_register_operand\" \"=f\")\n \t(minus:V2SF\n \t  (mult:V2SF (match_operand:V2SF 1 \"fr_register_operand\" \"f\")"}]}