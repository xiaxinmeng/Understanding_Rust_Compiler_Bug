{"sha": "5f901ccf18953b699bd290a4a169e2b7c7aa870a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY5MDFjY2YxODk1M2I2OTliZDI5MGE0YTE2OWUyYjdjN2FhODcwYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-05-09T18:15:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-05-09T18:15:57Z"}, "message": "re PR c++/32019 (Conditional operator ?: and ambiguous convertions)\n\n\tPR c++/32019\n\t* call.c (build_conditional_expr_1): Improve ambiguity diagnostic.\n\n\tPR c++/54348\n\t* call.c (build_conditional_expr_1): If overload resolution finds\n\tno match, just say \"different types\".\n\nFrom-SVN: r210282", "tree": {"sha": "ab9c517435ddf2b9110bfd116ed64822ab96ee2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab9c517435ddf2b9110bfd116ed64822ab96ee2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f901ccf18953b699bd290a4a169e2b7c7aa870a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f901ccf18953b699bd290a4a169e2b7c7aa870a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f901ccf18953b699bd290a4a169e2b7c7aa870a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f901ccf18953b699bd290a4a169e2b7c7aa870a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb8b1f696ecc30435b210cbcb4d0c575a3e81df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8b1f696ecc30435b210cbcb4d0c575a3e81df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb8b1f696ecc30435b210cbcb4d0c575a3e81df1"}], "stats": {"total": 77, "additions": 68, "deletions": 9}, "files": [{"sha": "6bddd4974f0a6c9f723a8ba7a546854508bbc314", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f901ccf18953b699bd290a4a169e2b7c7aa870a", "patch": "@@ -1,5 +1,12 @@\n 2014-05-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54348\n+\t* call.c (build_conditional_expr_1): If overload resolution finds\n+\tno match, just say \"different types\".\n+\n+\tPR c++/32019\n+\t* call.c (build_conditional_expr_1): Improve ambiguity diagnostic.\n+\n \tPR c++/22434\n \t* call.c (build_conditional_expr_1): Don't try to pool cv-quals\n \tif we didn't find a conversion."}, {"sha": "cff7ef32339d9fa1cf219cf42ed987725a364506", "filename": "gcc/cp/call.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5f901ccf18953b699bd290a4a169e2b7c7aa870a", "patch": "@@ -4710,8 +4710,16 @@ build_conditional_expr_1 (location_t loc, tree arg1, tree arg2, tree arg3,\n \t  || (conv3 && conv3->kind == ck_ambig))\n \t{\n \t  if (complain & tf_error)\n-\t    error_at (loc, \"operands to ?: have different types %qT and %qT\",\n-\t\t      arg2_type, arg3_type);\n+\t    {\n+\t      error_at (loc, \"operands to ?: have different types %qT and %qT\",\n+\t\t\targ2_type, arg3_type);\n+\t      if (conv2 && !conv2->bad_p && conv3 && !conv3->bad_p)\n+\t\tinform (loc, \"  and each type can be converted to the other\");\n+\t      else if (conv2 && conv2->kind == ck_ambig)\n+\t\tconvert_like (conv2, arg2, complain);\n+\t      else\n+\t\tconvert_like (conv3, arg3, complain);\n+\t    }\n \t  result = error_mark_node;\n \t}\n       else if (conv2 && !conv2->bad_p)\n@@ -4818,10 +4826,8 @@ build_conditional_expr_1 (location_t loc, tree arg1, tree arg2, tree arg3,\n       if (!any_viable_p)\n \t{\n           if (complain & tf_error)\n-            {\n-              op_error (loc, COND_EXPR, NOP_EXPR, arg1, arg2, arg3, FALSE);\n-              print_z_candidates (loc, candidates);\n-            }\n+\t    error_at (loc, \"operands to ?: have different types %qT and %qT\",\n+\t\t      arg2_type, arg3_type);\n \t  return error_mark_node;\n \t}\n       cand = tourney (candidates, complain);"}, {"sha": "6318ade2c0e100e516d790926b9ef36f906e7d3d", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit3.C?ref=5f901ccf18953b699bd290a4a169e2b7c7aa870a", "patch": "@@ -45,6 +45,6 @@ int main()\n   f(a);\t\t\t\t// { dg-error \"\" }\n   B b2 = { a };\t\t\t// { dg-error \"\" }\n   a + true;\t\t\t// { dg-error \"5:no match\" }\n-  b ? a : true;\t\t\t// { dg-error \"5:no match\" }\n-  a ? a : true;\t\t\t// { dg-error \"5:no match\" }\n+  b ? a : true;\t\t\t// { dg-error \"5:?:\" }\n+  a ? a : true;\t\t\t// { dg-error \"5:?:\" }\n }"}, {"sha": "892576fa8b82964e8987a11e33cf12840b5729ee", "filename": "gcc/testsuite/g++.dg/expr/cond10.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond10.C?ref=5f901ccf18953b699bd290a4a169e2b7c7aa870a", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/32019\n+\n+struct C\n+{\n+  C(const char *);\n+  operator const char *();\n+};\n+\n+extern C c;\n+extern const char * s;\n+\n+void\n+foo (bool b)\n+{\n+  b ? c : s;\t\t\t// { dg-error \"?:\" }\n+  // { dg-message \"convert\" \"\" { target *-*-* } 15 }\n+}"}, {"sha": "7bd122ddac5e0f681b6bd0a12664887b20ec9622", "filename": "gcc/testsuite/g++.dg/expr/cond11.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond11.C?ref=5f901ccf18953b699bd290a4a169e2b7c7aa870a", "patch": "@@ -0,0 +1,20 @@\n+struct A;\n+struct C\n+{\n+  operator A();\n+};\n+\n+struct A\n+{\n+  A(C);\n+};\n+\n+extern A a;\n+extern C c;\n+\n+void\n+foo (bool b)\n+{\n+  b ? c : a;\t\t\t// { dg-error \"?:\" }\n+  // { dg-message \"ambiguous\" \"\" { target *-*-* } 18 }\n+}"}, {"sha": "90ae904a5d61eaeb56f72cd568eb15e3eca6482c", "filename": "gcc/testsuite/g++.dg/expr/cond13.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond13.C?ref=5f901ccf18953b699bd290a4a169e2b7c7aa870a", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/54348\n+\n+struct A {} a;\n+struct B {} b;\n+\n+void f()\n+{\n+    false ? a : b;\t\t// { dg-error \"different types\" }\n+}"}, {"sha": "c14fbadff9f8564822a2b7867d965ec4e50ae9e3", "filename": "gcc/testsuite/g++.dg/parse/crash41.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f901ccf18953b699bd290a4a169e2b7c7aa870a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash41.C?ref=5f901ccf18953b699bd290a4a169e2b7c7aa870a", "patch": "@@ -5,4 +5,4 @@ struct A\n   A(int)(); // { dg-error \"declared\" }\n };\n \n-template<int> void foo(bool b, A a) { b ? a : 0; } // { dg-error \"no match\" }\n+template<int> void foo(bool b, A a) { b ? a : 0; } // { dg-error \"?:\" }"}]}