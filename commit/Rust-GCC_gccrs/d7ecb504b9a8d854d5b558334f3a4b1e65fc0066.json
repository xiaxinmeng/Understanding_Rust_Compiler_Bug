{"sha": "d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdlY2I1MDRiOWE4ZDg1NGQ1YjU1ODMzNGYzYTRiMWU2NWZjMDA2Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-11-16T23:24:53Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-11-16T23:24:53Z"}, "message": "s390: -mfused-madd cleanup\n\n        * config.gcc [s390*-*] (extra_options): Add fused-madd.opt.\n        * config/s390/s390.opt (mfused-madd): Remove.\n        * config/s390/s390.c (s390_rtx_costs): Handle FMA.\n        (TARGET_DEFAULT_TARGET_FLAGS): Remove MASK_FUSED_MADD.\n        * config/s390/s390.md (fma<DSF>4): Rename from *fmadd<DSF>; use FMA.\n        (fms<DSF>4): Rename from *fmsub<DSF>; use FMA.\n\nFrom-SVN: r166838", "tree": {"sha": "1fac4bba6734d774c1713a403d953836605b3ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fac4bba6734d774c1713a403d953836605b3ef1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/comments", "author": null, "committer": null, "parents": [{"sha": "d6613781a50e6627d1f685e244d9b505f03b8423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6613781a50e6627d1f685e244d9b505f03b8423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6613781a50e6627d1f685e244d9b505f03b8423"}], "stats": {"total": 71, "additions": 42, "deletions": 29}, "files": [{"sha": "a9b8f7682ba6ae60aedb5dc66866735db8ac9f53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "patch": "@@ -1,3 +1,12 @@\n+2010-11-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config.gcc [s390*-*] (extra_options): Add fused-madd.opt.\n+\t* config/s390/s390.opt (mfused-madd): Remove.\n+\t* config/s390/s390.c (s390_rtx_costs): Handle FMA.\n+\t(TARGET_DEFAULT_TARGET_FLAGS): Remove MASK_FUSED_MADD.\n+\t* config/s390/s390.md (fma<DSF>4): Rename from *fmadd<DSF>; use FMA.\n+\t(fms<DSF>4): Rename from *fmsub<DSF>; use FMA.\n+\n 2010-11-16  Richard Henderson  <rth@redhat.com>\n \n \t* config.gcc [powerpc*, rs6000*] (extra_options): Add fused-madd.opt."}, {"sha": "c6a2d4cb113f76f369aec8764f7b187e086d4c31", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "patch": "@@ -393,6 +393,7 @@ spu*-*-*)\n s390*-*-*)\n \tcpu_type=s390\n \tneed_64bit_hwint=yes\n+\textra_options=\"${extra_options} fused-madd.opt\"\n \t;;\n # Note the 'l'; we need to be able to match e.g. \"shle\" or \"shl\".\n sh[123456789lbe]*-*-* | sh-*-*)"}, {"sha": "2c40b67811ba515b6f33cfd464cdca56d49396af", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "patch": "@@ -2464,21 +2464,6 @@ s390_rtx_costs (rtx x, int code, int outer_code, int *total,\n \n     case PLUS:\n     case MINUS:\n-      /* Check for multiply and add.  */\n-      if ((GET_MODE (x) == DFmode || GET_MODE (x) == SFmode)\n-\t  && GET_CODE (XEXP (x, 0)) == MULT\n-\t  && TARGET_HARD_FLOAT && TARGET_FUSED_MADD)\n-\t{\n-\t  /* This is the multiply and add case.  */\n-\t  if (GET_MODE (x) == DFmode)\n-\t    *total = s390_cost->madbr;\n-\t  else\n-\t    *total = s390_cost->maebr;\n-\t  *total += (rtx_cost (XEXP (XEXP (x, 0), 0), MULT, speed)\n-\t\t     + rtx_cost (XEXP (XEXP (x, 0), 1), MULT, speed)\n-\t\t     + rtx_cost (XEXP (x, 1), (enum rtx_code) code, speed));\n-\t  return true;  /* Do not do an additional recursive descent.  */\n-\t}\n       *total = COSTS_N_INSNS (1);\n       return false;\n \n@@ -2541,6 +2526,28 @@ s390_rtx_costs (rtx x, int code, int outer_code, int *total,\n \t}\n       return false;\n \n+    case FMA:\n+      switch (GET_MODE (x))\n+\t{\n+\tcase DFmode:\n+\t  *total = s390_cost->madbr;\n+\t  break;\n+\tcase SFmode:\n+\t  *total = s390_cost->maebr;\n+\t  break;\n+\tdefault:\n+\t  return false;\n+\t}\n+      /* Negate in the third argument is free: FMSUB.  */\n+      if (GET_CODE (XEXP (x, 2)) == NEG)\n+\t{\n+\t  *total += (rtx_cost (XEXP (x, 0), FMA, speed)\n+\t\t     + rtx_cost (XEXP (x, 1), FMA, speed)\n+\t\t     + rtx_cost (XEXP (XEXP (x, 2), 0), FMA, speed));\n+\t  return true;\n+\t}\n+      return false;\n+\n     case UDIV:\n     case UMOD:\n       if (GET_MODE (x) == TImode) \t       /* 128 bit division */\n@@ -10511,7 +10518,7 @@ s390_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n #define TARGET_ASM_CLOSE_PAREN \"\"\n \n #undef TARGET_DEFAULT_TARGET_FLAGS\n-#define TARGET_DEFAULT_TARGET_FLAGS (TARGET_DEFAULT | MASK_FUSED_MADD)\n+#define TARGET_DEFAULT_TARGET_FLAGS (TARGET_DEFAULT)\n \n #undef TARGET_HANDLE_OPTION\n #define TARGET_HANDLE_OPTION s390_handle_option"}, {"sha": "701fca1f9bed3f596fa8479e69a8b7463cdc3a1d", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "patch": "@@ -5488,25 +5488,25 @@\n    (set_attr \"type\"     \"fmul<mode>\")])\n \n ; madbr, maebr, maxb, madb, maeb\n-(define_insn \"*fmadd<mode>\"\n+(define_insn \"fma<mode>4\"\n   [(set (match_operand:DSF 0 \"register_operand\" \"=f,f\")\n-\t(plus:DSF (mult:DSF (match_operand:DSF 1 \"nonimmediate_operand\" \"%f,f\")\n-\t\t\t    (match_operand:DSF 2 \"nonimmediate_operand\" \"f,R\"))\n+\t(fma:DSF (match_operand:DSF 1 \"nonimmediate_operand\" \"%f,f\")\n+\t\t (match_operand:DSF 2 \"nonimmediate_operand\" \"f,R\")\n \t\t (match_operand:DSF 3 \"register_operand\" \"0,0\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    ma<xde>br\\t%0,%1,%2\n    ma<xde>b\\t%0,%1,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n    (set_attr \"type\"     \"fmadd<mode>\")])\n \n ; msxbr, msdbr, msebr, msxb, msdb, mseb\n-(define_insn \"*fmsub<mode>\"\n+(define_insn \"fms<mode>4\"\n   [(set (match_operand:DSF 0 \"register_operand\" \"=f,f\")\n-\t(minus:DSF (mult:DSF (match_operand:DSF 1 \"nonimmediate_operand\" \"f,f\")\n-\t\t\t     (match_operand:DSF 2 \"nonimmediate_operand\" \"f,R\"))\n-\t\t (match_operand:DSF 3 \"register_operand\" \"0,0\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n+\t(fma:DSF (match_operand:DSF 1 \"nonimmediate_operand\" \"%f,f\")\n+\t\t (match_operand:DSF 2 \"nonimmediate_operand\" \"f,R\")\n+\t\t (neg:DSF (match_operand:DSF 3 \"register_operand\" \"0,0\"))))]\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    ms<xde>br\\t%0,%1,%2\n    ms<xde>b\\t%0,%1,%2\""}, {"sha": "57ab838ff5647061cb253a23afa1679ec8a8e076", "filename": "gcc/config/s390/s390.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig%2Fs390%2Fs390.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ecb504b9a8d854d5b558334f3a4b1e65fc0066/gcc%2Fconfig%2Fs390%2Fs390.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.opt?ref=d7ecb504b9a8d854d5b558334f3a4b1e65fc0066", "patch": "@@ -42,10 +42,6 @@ mesa\n Target Report RejectNegative Negative(mzarch) InverseMask(ZARCH)\n ESA/390 architecture\n \n-mfused-madd\n-Target Report Mask(FUSED_MADD)\n-Enable fused multiply/add instructions\n-\n mhard-dfp\n Target Report Mask(HARD_DFP)\n Enable decimal floating point hardware support"}]}