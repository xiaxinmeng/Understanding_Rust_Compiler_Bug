{"sha": "22e494a0aec5a8385713d5522ea351e43fcea530", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJlNDk0YTBhZWM1YTgzODU3MTNkNTUyMmVhMzUxZTQzZmNlYTUzMA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-06-08T12:22:25Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-08T12:22:25Z"}, "message": "bld.c: Remove usage of FFETARGET_okCHARACTER2...\n\n\t* bld.c: Remove usage of FFETARGET_okCHARACTER2,\n\tFFETARGET_okCHARACTER3, FFETARGET_okCHARACTER4,\n\tFFETARGET_okCHARACTER5, FFETARGET_okCHARACTER6,\n\tFFETARGET_okCHARACTER7, FFETARGET_okCHARACTER8,\n\tFFETARGET_okCOMPLEX4, FFETARGET_okCOMPLEX5, FFETARGET_okCOMPLEX6,\n\tFFETARGET_okCOMPLEX7, FFETARGET_okCOMPLEX8, FFETARGET_okINTEGER5,\n\tFFETARGET_okINTEGER6, FFETARGET_okINTEGER7, FFETARGET_okINTEGER8,\n\tFFETARGET_okLOGICAL5, FFETARGET_okLOGICAL6, FFETARGET_okLOGICAL7,\n\tFFETARGET_okLOGICAL8, FFETARGET_okREAL4, FFETARGET_okREAL5,\n\tFFETARGET_okREAL6, FFETARGET_okREAL7 and FFETARGET_okREAL8.\n\t* bld.h: Likewise.\n\t* expr.c: Likewise.\n\t* target.h: Likewise.\n\t* com.c: Likewise.\n\nFrom-SVN: r67622", "tree": {"sha": "299cf0e3b86aeb11b4c55ad06d4864a0cf9dbd03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/299cf0e3b86aeb11b4c55ad06d4864a0cf9dbd03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22e494a0aec5a8385713d5522ea351e43fcea530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22e494a0aec5a8385713d5522ea351e43fcea530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22e494a0aec5a8385713d5522ea351e43fcea530", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22e494a0aec5a8385713d5522ea351e43fcea530/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8b04b134a525899da2973edc8a816380c0af050", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8b04b134a525899da2973edc8a816380c0af050", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8b04b134a525899da2973edc8a816380c0af050"}], "stats": {"total": 3067, "additions": 23, "deletions": 3044}, "files": [{"sha": "ee65c0d2c7fe0b36c3fda1ee364dd266b80b229f", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=22e494a0aec5a8385713d5522ea351e43fcea530", "patch": "@@ -1,3 +1,20 @@\n+2003-06-08  Andreas Jaeger  <aj@suse.de>\n+\n+\t* bld.c: Remove usage of FFETARGET_okCHARACTER2,\n+\tFFETARGET_okCHARACTER3, FFETARGET_okCHARACTER4,\n+\tFFETARGET_okCHARACTER5, FFETARGET_okCHARACTER6,\n+\tFFETARGET_okCHARACTER7, FFETARGET_okCHARACTER8,\n+\tFFETARGET_okCOMPLEX4, FFETARGET_okCOMPLEX5, FFETARGET_okCOMPLEX6,\n+\tFFETARGET_okCOMPLEX7, FFETARGET_okCOMPLEX8, FFETARGET_okINTEGER5,\n+\tFFETARGET_okINTEGER6, FFETARGET_okINTEGER7, FFETARGET_okINTEGER8,\n+\tFFETARGET_okLOGICAL5, FFETARGET_okLOGICAL6, FFETARGET_okLOGICAL7,\n+\tFFETARGET_okLOGICAL8, FFETARGET_okREAL4, FFETARGET_okREAL5,\n+\tFFETARGET_okREAL6, FFETARGET_okREAL7 and FFETARGET_okREAL8.\n+\t* bld.h: Likewise.\n+\t* expr.c: Likewise.\n+\t* target.h: Likewise.\n+\t* com.c: Likewise.\n+\n Sun Jun  8 12:28:14 2003  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* Make-lang.in: Update."}, {"sha": "bf2d1c69b2e0e34ab8091f7d82b895c3a423b4ce", "filename": "gcc/f/bld.c", "status": "modified", "additions": 4, "deletions": 1651, "changes": 1655, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fbld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fbld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbld.c?ref=22e494a0aec5a8385713d5522ea351e43fcea530", "patch": "@@ -73,27 +73,6 @@ struct _ffebld_pool_stack_ ffebld_pool_stack_;\n #if FFETARGET_okCHARACTER1\n static ffebldConstant ffebld_constant_character1_;\n #endif\n-#if FFETARGET_okCHARACTER2\n-static ffebldConstant ffebld_constant_character2_;\n-#endif\n-#if FFETARGET_okCHARACTER3\n-static ffebldConstant ffebld_constant_character3_;\n-#endif\n-#if FFETARGET_okCHARACTER4\n-static ffebldConstant ffebld_constant_character4_;\n-#endif\n-#if FFETARGET_okCHARACTER5\n-static ffebldConstant ffebld_constant_character5_;\n-#endif\n-#if FFETARGET_okCHARACTER6\n-static ffebldConstant ffebld_constant_character6_;\n-#endif\n-#if FFETARGET_okCHARACTER7\n-static ffebldConstant ffebld_constant_character7_;\n-#endif\n-#if FFETARGET_okCHARACTER8\n-static ffebldConstant ffebld_constant_character8_;\n-#endif\n #if FFETARGET_okCOMPLEX1\n static ffebldConstant ffebld_constant_complex1_;\n #endif\n@@ -103,21 +82,6 @@ static ffebldConstant ffebld_constant_complex2_;\n #if FFETARGET_okCOMPLEX3\n static ffebldConstant ffebld_constant_complex3_;\n #endif\n-#if FFETARGET_okCOMPLEX4\n-static ffebldConstant ffebld_constant_complex4_;\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-static ffebldConstant ffebld_constant_complex5_;\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-static ffebldConstant ffebld_constant_complex6_;\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-static ffebldConstant ffebld_constant_complex7_;\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-static ffebldConstant ffebld_constant_complex8_;\n-#endif\n #if FFETARGET_okINTEGER1\n static ffebldConstant ffebld_constant_integer1_;\n #endif\n@@ -130,18 +94,6 @@ static ffebldConstant ffebld_constant_integer3_;\n #if FFETARGET_okINTEGER4\n static ffebldConstant ffebld_constant_integer4_;\n #endif\n-#if FFETARGET_okINTEGER5\n-static ffebldConstant ffebld_constant_integer5_;\n-#endif\n-#if FFETARGET_okINTEGER6\n-static ffebldConstant ffebld_constant_integer6_;\n-#endif\n-#if FFETARGET_okINTEGER7\n-static ffebldConstant ffebld_constant_integer7_;\n-#endif\n-#if FFETARGET_okINTEGER8\n-static ffebldConstant ffebld_constant_integer8_;\n-#endif\n #if FFETARGET_okLOGICAL1\n static ffebldConstant ffebld_constant_logical1_;\n #endif\n@@ -154,18 +106,6 @@ static ffebldConstant ffebld_constant_logical3_;\n #if FFETARGET_okLOGICAL4\n static ffebldConstant ffebld_constant_logical4_;\n #endif\n-#if FFETARGET_okLOGICAL5\n-static ffebldConstant ffebld_constant_logical5_;\n-#endif\n-#if FFETARGET_okLOGICAL6\n-static ffebldConstant ffebld_constant_logical6_;\n-#endif\n-#if FFETARGET_okLOGICAL7\n-static ffebldConstant ffebld_constant_logical7_;\n-#endif\n-#if FFETARGET_okLOGICAL8\n-static ffebldConstant ffebld_constant_logical8_;\n-#endif\n #if FFETARGET_okREAL1\n static ffebldConstant ffebld_constant_real1_;\n #endif\n@@ -175,21 +115,6 @@ static ffebldConstant ffebld_constant_real2_;\n #if FFETARGET_okREAL3\n static ffebldConstant ffebld_constant_real3_;\n #endif\n-#if FFETARGET_okREAL4\n-static ffebldConstant ffebld_constant_real4_;\n-#endif\n-#if FFETARGET_okREAL5\n-static ffebldConstant ffebld_constant_real5_;\n-#endif\n-#if FFETARGET_okREAL6\n-static ffebldConstant ffebld_constant_real6_;\n-#endif\n-#if FFETARGET_okREAL7\n-static ffebldConstant ffebld_constant_real7_;\n-#endif\n-#if FFETARGET_okREAL8\n-static ffebldConstant ffebld_constant_real8_;\n-#endif\n static ffebldConstant ffebld_constant_hollerith_;\n static ffebldConstant ffebld_constant_typeless_[FFEBLD_constTYPELESS_LAST\n \t\t\t\t\t  - FFEBLD_constTYPELESS_FIRST + 1];\n@@ -255,30 +180,6 @@ ffebld_constant_cmp (ffebldConstant c1, ffebldConstant c2)\n \t\t\t\t     ffebld_constant_integer4 (c2));\n #endif\n \n-#if FFETARGET_okINTEGER5\n-    case FFEBLD_constINTEGER5:\n-      return ffetarget_cmp_integer5 (ffebld_constant_integer5 (c1),\n-\t\t\t\t     ffebld_constant_integer5 (c2));\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-    case FFEBLD_constINTEGER6:\n-      return ffetarget_cmp_integer6 (ffebld_constant_integer6 (c1),\n-\t\t\t\t     ffebld_constant_integer6 (c2));\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-    case FFEBLD_constINTEGER7:\n-      return ffetarget_cmp_integer7 (ffebld_constant_integer7 (c1),\n-\t\t\t\t     ffebld_constant_integer7 (c2));\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-    case FFEBLD_constINTEGER8:\n-      return ffetarget_cmp_integer8 (ffebld_constant_integer8 (c1),\n-\t\t\t\t     ffebld_constant_integer8 (c2));\n-#endif\n-\n #if FFETARGET_okLOGICAL1\n     case FFEBLD_constLOGICAL1:\n       return ffetarget_cmp_logical1 (ffebld_constant_logical1 (c1),\n@@ -303,30 +204,6 @@ ffebld_constant_cmp (ffebldConstant c1, ffebldConstant c2)\n \t\t\t\t     ffebld_constant_logical4 (c2));\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-    case FFEBLD_constLOGICAL5:\n-      return ffetarget_cmp_logical5 (ffebld_constant_logical5 (c1),\n-\t\t\t\t     ffebld_constant_logical5 (c2));\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-    case FFEBLD_constLOGICAL6:\n-      return ffetarget_cmp_logical6 (ffebld_constant_logical6 (c1),\n-\t\t\t\t     ffebld_constant_logical6 (c2));\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-    case FFEBLD_constLOGICAL7:\n-      return ffetarget_cmp_logical7 (ffebld_constant_logical7 (c1),\n-\t\t\t\t     ffebld_constant_logical7 (c2));\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-    case FFEBLD_constLOGICAL8:\n-      return ffetarget_cmp_logical8 (ffebld_constant_logical8 (c1),\n-\t\t\t\t     ffebld_constant_logical8 (c2));\n-#endif\n-\n #if FFETARGET_okREAL1\n     case FFEBLD_constREAL1:\n       return ffetarget_cmp_real1 (ffebld_constant_real1 (c1),\n@@ -345,84 +222,12 @@ ffebld_constant_cmp (ffebldConstant c1, ffebldConstant c2)\n \t\t\t\t  ffebld_constant_real3 (c2));\n #endif\n \n-#if FFETARGET_okREAL4\n-    case FFEBLD_constREAL4:\n-      return ffetarget_cmp_real4 (ffebld_constant_real4 (c1),\n-\t\t\t\t  ffebld_constant_real4 (c2));\n-#endif\n-\n-#if FFETARGET_okREAL5\n-    case FFEBLD_constREAL5:\n-      return ffetarget_cmp_real5 (ffebld_constant_real5 (c1),\n-\t\t\t\t  ffebld_constant_real5 (c2));\n-#endif\n-\n-#if FFETARGET_okREAL6\n-    case FFEBLD_constREAL6:\n-      return ffetarget_cmp_real6 (ffebld_constant_real6 (c1),\n-\t\t\t\t  ffebld_constant_real6 (c2));\n-#endif\n-\n-#if FFETARGET_okREAL7\n-    case FFEBLD_constREAL7:\n-      return ffetarget_cmp_real7 (ffebld_constant_real7 (c1),\n-\t\t\t\t  ffebld_constant_real7 (c2));\n-#endif\n-\n-#if FFETARGET_okREAL8\n-    case FFEBLD_constREAL8:\n-      return ffetarget_cmp_real8 (ffebld_constant_real8 (c1),\n-\t\t\t\t  ffebld_constant_real8 (c2));\n-#endif\n-\n #if FFETARGET_okCHARACTER1\n     case FFEBLD_constCHARACTER1:\n       return ffetarget_cmp_character1 (ffebld_constant_character1 (c1),\n \t\t\t\t       ffebld_constant_character1 (c2));\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-    case FFEBLD_constCHARACTER2:\n-      return ffetarget_cmp_character2 (ffebld_constant_character2 (c1),\n-\t\t\t\t       ffebld_constant_character2 (c2));\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-    case FFEBLD_constCHARACTER3:\n-      return ffetarget_cmp_character3 (ffebld_constant_character3 (c1),\n-\t\t\t\t       ffebld_constant_character3 (c2));\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-    case FFEBLD_constCHARACTER4:\n-      return ffetarget_cmp_character4 (ffebld_constant_character4 (c1),\n-\t\t\t\t       ffebld_constant_character4 (c2));\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-    case FFEBLD_constCHARACTER5:\n-      return ffetarget_cmp_character5 (ffebld_constant_character5 (c1),\n-\t\t\t\t       ffebld_constant_character5 (c2));\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-    case FFEBLD_constCHARACTER6:\n-      return ffetarget_cmp_character6 (ffebld_constant_character6 (c1),\n-\t\t\t\t       ffebld_constant_character6 (c2));\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-    case FFEBLD_constCHARACTER7:\n-      return ffetarget_cmp_character7 (ffebld_constant_character7 (c1),\n-\t\t\t\t       ffebld_constant_character7 (c2));\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-    case FFEBLD_constCHARACTER8:\n-      return ffetarget_cmp_character8 (ffebld_constant_character8 (c1),\n-\t\t\t\t       ffebld_constant_character8 (c2));\n-#endif\n-\n     default:\n       assert (\"bad constant type\" == NULL);\n       return 0;\n@@ -478,26 +283,6 @@ ffebld_constant_is_zero (ffebldConstant c)\n       return ffebld_constant_integer4 (c) == 0;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-    case FFEBLD_constINTEGER5:\n-      return ffebld_constant_integer5 (c) == 0;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-    case FFEBLD_constINTEGER6:\n-      return ffebld_constant_integer6 (c) == 0;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-    case FFEBLD_constINTEGER7:\n-      return ffebld_constant_integer7 (c) == 0;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-    case FFEBLD_constINTEGER8:\n-      return ffebld_constant_integer8 (c) == 0;\n-#endif\n-\n #if FFETARGET_okLOGICAL1\n     case FFEBLD_constLOGICAL1:\n       return ffebld_constant_logical1 (c) == 0;\n@@ -518,26 +303,6 @@ ffebld_constant_is_zero (ffebldConstant c)\n       return ffebld_constant_logical4 (c) == 0;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-    case FFEBLD_constLOGICAL5:\n-      return ffebld_constant_logical5 (c) == 0;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-    case FFEBLD_constLOGICAL6:\n-      return ffebld_constant_logical6 (c) == 0;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-    case FFEBLD_constLOGICAL7:\n-      return ffebld_constant_logical7 (c) == 0;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-    case FFEBLD_constLOGICAL8:\n-      return ffebld_constant_logical8 (c) == 0;\n-#endif\n-\n #if FFETARGET_okREAL1\n     case FFEBLD_constREAL1:\n       return ffetarget_iszero_real1 (ffebld_constant_real1 (c));\n@@ -553,31 +318,6 @@ ffebld_constant_is_zero (ffebldConstant c)\n       return ffetarget_iszero_real3 (ffebld_constant_real3 (c));\n #endif\n \n-#if FFETARGET_okREAL4\n-    case FFEBLD_constREAL4:\n-      return ffetarget_iszero_real4 (ffebld_constant_real4 (c));\n-#endif\n-\n-#if FFETARGET_okREAL5\n-    case FFEBLD_constREAL5:\n-      return ffetarget_iszero_real5 (ffebld_constant_real5 (c));\n-#endif\n-\n-#if FFETARGET_okREAL6\n-    case FFEBLD_constREAL6:\n-      return ffetarget_iszero_real6 (ffebld_constant_real6 (c));\n-#endif\n-\n-#if FFETARGET_okREAL7\n-    case FFEBLD_constREAL7:\n-      return ffetarget_iszero_real7 (ffebld_constant_real7 (c));\n-#endif\n-\n-#if FFETARGET_okREAL8\n-    case FFEBLD_constREAL8:\n-      return ffetarget_iszero_real8 (ffebld_constant_real8 (c));\n-#endif\n-\n #if FFETARGET_okCOMPLEX1\n     case FFEBLD_constCOMPLEX1:\n       return ffetarget_iszero_real1 (ffebld_constant_complex1 (c).real)\n@@ -596,45 +336,11 @@ ffebld_constant_is_zero (ffebldConstant c)\n      && ffetarget_iszero_real3 (ffebld_constant_complex3 (c).imaginary);\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-    case FFEBLD_constCOMPLEX4:\n-      return ffetarget_iszero_real4 (ffebld_constant_complex4 (c).real)\n-     && ffetarget_iszero_real4 (ffebld_constant_complex4 (c).imaginary);\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-    case FFEBLD_constCOMPLEX5:\n-      return ffetarget_iszero_real5 (ffebld_constant_complex5 (c).real)\n-     && ffetarget_iszero_real5 (ffebld_constant_complex5 (c).imaginary);\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-    case FFEBLD_constCOMPLEX6:\n-      return ffetarget_iszero_real6 (ffebld_constant_complex6 (c).real)\n-     && ffetarget_iszero_real6 (ffebld_constant_complex6 (c).imaginary);\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-    case FFEBLD_constCOMPLEX7:\n-      return ffetarget_iszero_real7 (ffebld_constant_complex7 (c).real)\n-     && ffetarget_iszero_real7 (ffebld_constant_complex7 (c).imaginary);\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-    case FFEBLD_constCOMPLEX8:\n-      return ffetarget_iszero_real8 (ffebld_constant_complex8 (c).real)\n-     && ffetarget_iszero_real8 (ffebld_constant_complex8 (c).imaginary);\n-#endif\n-\n #if FFETARGET_okCHARACTER1\n     case FFEBLD_constCHARACTER1:\n       return ffetarget_iszero_character1 (ffebld_constant_character1 (c));\n #endif\n \n-#if FFETARGET_okCHARACTER2 || FFETARGET_okCHARACTER3  /* ... */\n-#error \"no support for these!!\"\n-#endif\n-\n     case FFEBLD_constHOLLERITH:\n       return ffetarget_iszero_hollerith (ffebld_constant_hollerith (c));\n \n@@ -1564,30 +1270,6 @@ ffebld_constantarray_get (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-\tcase FFEINFO_kindtypeINTEGER5:\n-\t  u.integer5 = *(array.integer5 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-\tcase FFEINFO_kindtypeINTEGER6:\n-\t  u.integer6 = *(array.integer6 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-\tcase FFEINFO_kindtypeINTEGER7:\n-\t  u.integer7 = *(array.integer7 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-\tcase FFEINFO_kindtypeINTEGER8:\n-\t  u.integer8 = *(array.integer8 + offset);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad INTEGER kindtype\" == NULL);\n \t  break;\n@@ -1621,30 +1303,6 @@ ffebld_constantarray_get (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-\tcase FFEINFO_kindtypeLOGICAL5:\n-\t  u.logical5 = *(array.logical5 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-\tcase FFEINFO_kindtypeLOGICAL6:\n-\t  u.logical6 = *(array.logical6 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-\tcase FFEINFO_kindtypeLOGICAL7:\n-\t  u.logical7 = *(array.logical7 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-\tcase FFEINFO_kindtypeLOGICAL8:\n-\t  u.logical8 = *(array.logical8 + offset);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad LOGICAL kindtype\" == NULL);\n \t  break;\n@@ -1672,36 +1330,6 @@ ffebld_constantarray_get (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  u.real4 = *(array.real4 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  u.real5 = *(array.real5 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  u.real6 = *(array.real6 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  u.real7 = *(array.real7 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  u.real8 = *(array.real8 + offset);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad REAL kindtype\" == NULL);\n \t  break;\n@@ -1729,36 +1357,6 @@ ffebld_constantarray_get (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  u.complex4 = *(array.complex4 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  u.complex5 = *(array.complex5 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  u.complex6 = *(array.complex6 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  u.complex7 = *(array.complex7 + offset);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  u.complex8 = *(array.complex8 + offset);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad COMPLEX kindtype\" == NULL);\n \t  break;\n@@ -1775,55 +1373,6 @@ ffebld_constantarray_get (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  u.character2.length = 1;\n-\t  u.character2.text = array.character2 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  u.character3.length = 1;\n-\t  u.character3.text = array.character3 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  u.character4.length = 1;\n-\t  u.character4.text = array.character4 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-\tcase FFEINFO_kindtypeCHARACTER5:\n-\t  u.character5.length = 1;\n-\t  u.character5.text = array.character5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-\tcase FFEINFO_kindtypeCHARACTER6:\n-\t  u.character6.length = 1;\n-\t  u.character6.text = array.character6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-\tcase FFEINFO_kindtypeCHARACTER7:\n-\t  u.character7.length = 1;\n-\t  u.character7.text = array.character7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-\tcase FFEINFO_kindtypeCHARACTER8:\n-\t  u.character8.length = 1;\n-\t  u.character8.text = array.character8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad CHARACTER kindtype\" == NULL);\n \t  break;\n@@ -1889,42 +1438,6 @@ ffebld_constantarray_new (ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-\tcase FFEINFO_kindtypeINTEGER5:\n-\t  ptr.integer5 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetInteger5),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-\tcase FFEINFO_kindtypeINTEGER6:\n-\t  ptr.integer6 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetInteger6),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-\tcase FFEINFO_kindtypeINTEGER7:\n-\t  ptr.integer7 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetInteger7),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-\tcase FFEINFO_kindtypeINTEGER8:\n-\t  ptr.integer8 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetInteger8),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad INTEGER kindtype\" == NULL);\n \t  break;\n@@ -1970,42 +1483,6 @@ ffebld_constantarray_new (ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-\tcase FFEINFO_kindtypeLOGICAL5:\n-\t  ptr.logical5 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetLogical5),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-\tcase FFEINFO_kindtypeLOGICAL6:\n-\t  ptr.logical6 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetLogical6),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-\tcase FFEINFO_kindtypeLOGICAL7:\n-\t  ptr.logical7 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetLogical7),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-\tcase FFEINFO_kindtypeLOGICAL8:\n-\t  ptr.logical8 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetLogical8),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad LOGICAL kindtype\" == NULL);\n \t  break;\n@@ -2042,51 +1519,6 @@ ffebld_constantarray_new (ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  ptr.real4 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t      \"ffebldConstantArray\",\n-\t\t\t\t      size *= sizeof (ffetargetReal4),\n-\t\t\t\t      0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  ptr.real5 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t      \"ffebldConstantArray\",\n-\t\t\t\t      size *= sizeof (ffetargetReal5),\n-\t\t\t\t      0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  ptr.real6 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t      \"ffebldConstantArray\",\n-\t\t\t\t      size *= sizeof (ffetargetReal6),\n-\t\t\t\t      0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  ptr.real7 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t      \"ffebldConstantArray\",\n-\t\t\t\t      size *= sizeof (ffetargetReal7),\n-\t\t\t\t      0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  ptr.real8 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t      \"ffebldConstantArray\",\n-\t\t\t\t      size *= sizeof (ffetargetReal8),\n-\t\t\t\t      0);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad REAL kindtype\" == NULL);\n \t  break;\n@@ -2123,56 +1555,11 @@ ffebld_constantarray_new (ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  ptr.complex4 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetComplex4),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  ptr.complex5 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetComplex5),\n-\t\t\t\t\t 0);\n+\tdefault:\n+\t  assert (\"bad COMPLEX kindtype\" == NULL);\n \t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  ptr.complex6 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetComplex6),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  ptr.complex7 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetComplex7),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  ptr.complex8 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t \"ffebldConstantArray\",\n-\t\t\t\t\t size *= sizeof (ffetargetComplex8),\n-\t\t\t\t\t 0);\n-\t  break;\n-#endif\n-\n-\tdefault:\n-\t  assert (\"bad COMPLEX kindtype\" == NULL);\n-\t  break;\n-\t}\n-      break;\n+\t}\n+      break;\n \n     case FFEINFO_basictypeCHARACTER:\n       switch (kt)\n@@ -2187,76 +1574,6 @@ ffebld_constantarray_new (ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  ptr.character2 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t   \"ffebldConstantArray\",\n-\t\t\t\t\t   size\n-\t\t\t\t\t   *= sizeof (ffetargetCharacterUnit2),\n-\t\t\t\t\t   0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  ptr.character3 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t   \"ffebldConstantArray\",\n-\t\t\t\t\t   size\n-\t\t\t\t\t   *= sizeof (ffetargetCharacterUnit3),\n-\t\t\t\t\t   0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  ptr.character4 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t   \"ffebldConstantArray\",\n-\t\t\t\t\t   size\n-\t\t\t\t\t   *= sizeof (ffetargetCharacterUnit4),\n-\t\t\t\t\t   0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-\tcase FFEINFO_kindtypeCHARACTER5:\n-\t  ptr.character5 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t   \"ffebldConstantArray\",\n-\t\t\t\t\t   size\n-\t\t\t\t\t   *= sizeof (ffetargetCharacterUnit5),\n-\t\t\t\t\t   0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-\tcase FFEINFO_kindtypeCHARACTER6:\n-\t  ptr.character6 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t   \"ffebldConstantArray\",\n-\t\t\t\t\t   size\n-\t\t\t\t\t   *= sizeof (ffetargetCharacterUnit6),\n-\t\t\t\t\t   0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-\tcase FFEINFO_kindtypeCHARACTER7:\n-\t  ptr.character7 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t   \"ffebldConstantArray\",\n-\t\t\t\t\t   size\n-\t\t\t\t\t   *= sizeof (ffetargetCharacterUnit7),\n-\t\t\t\t\t   0);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-\tcase FFEINFO_kindtypeCHARACTER8:\n-\t  ptr.character8 = malloc_new_zkp (ffebld_constant_pool(),\n-\t\t\t\t\t   \"ffebldConstantArray\",\n-\t\t\t\t\t   size\n-\t\t\t\t\t   *= sizeof (ffetargetCharacterUnit8),\n-\t\t\t\t\t   0);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad CHARACTER kindtype\" == NULL);\n \t  break;\n@@ -2313,30 +1630,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-\tcase FFEINFO_kindtypeINTEGER5:\n-\t  *aptr = array.integer5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-\tcase FFEINFO_kindtypeINTEGER6:\n-\t  *aptr = array.integer6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-\tcase FFEINFO_kindtypeINTEGER7:\n-\t  *aptr = array.integer7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-\tcase FFEINFO_kindtypeINTEGER8:\n-\t  *aptr = array.integer8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad INTEGER akindtype\" == NULL);\n \t  break;\n@@ -2370,30 +1663,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-\tcase FFEINFO_kindtypeLOGICAL5:\n-\t  *aptr = array.logical5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-\tcase FFEINFO_kindtypeLOGICAL6:\n-\t  *aptr = array.logical6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-\tcase FFEINFO_kindtypeLOGICAL7:\n-\t  *aptr = array.logical7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-\tcase FFEINFO_kindtypeLOGICAL8:\n-\t  *aptr = array.logical8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad LOGICAL akindtype\" == NULL);\n \t  break;\n@@ -2421,36 +1690,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *aptr = array.real4 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *aptr = array.real5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *aptr = array.real6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *aptr = array.real7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *aptr = array.real8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad REAL akindtype\" == NULL);\n \t  break;\n@@ -2478,36 +1717,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *aptr = array.complex4 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *aptr = array.complex5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *aptr = array.complex6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *aptr = array.complex7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *aptr = array.complex8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad COMPLEX akindtype\" == NULL);\n \t  break;\n@@ -2523,48 +1732,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  *aptr = array.character2 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  *aptr = array.character3 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  *aptr = array.character4 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-\tcase FFEINFO_kindtypeCHARACTER5:\n-\t  *aptr = array.character5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-\tcase FFEINFO_kindtypeCHARACTER6:\n-\t  *aptr = array.character6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-\tcase FFEINFO_kindtypeCHARACTER7:\n-\t  *aptr = array.character7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-\tcase FFEINFO_kindtypeCHARACTER8:\n-\t  *aptr = array.character8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad CHARACTER akindtype\" == NULL);\n \t  break;\n@@ -2609,34 +1776,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-\tcase FFEINFO_kindtypeINTEGER5:\n-\t  *cptr = source_array.integer5;\n-\t  *size = sizeof (*source_array.integer5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-\tcase FFEINFO_kindtypeINTEGER6:\n-\t  *cptr = source_array.integer6;\n-\t  *size = sizeof (*source_array.integer6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-\tcase FFEINFO_kindtypeINTEGER7:\n-\t  *cptr = source_array.integer7;\n-\t  *size = sizeof (*source_array.integer7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-\tcase FFEINFO_kindtypeINTEGER8:\n-\t  *cptr = source_array.integer8;\n-\t  *size = sizeof (*source_array.integer8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad INTEGER ckindtype\" == NULL);\n \t  break;\n@@ -2674,34 +1813,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-\tcase FFEINFO_kindtypeLOGICAL5:\n-\t  *cptr = source_array.logical5;\n-\t  *size = sizeof (*source_array.logical5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-\tcase FFEINFO_kindtypeLOGICAL6:\n-\t  *cptr = source_array.logical6;\n-\t  *size = sizeof (*source_array.logical6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-\tcase FFEINFO_kindtypeLOGICAL7:\n-\t  *cptr = source_array.logical7;\n-\t  *size = sizeof (*source_array.logical7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-\tcase FFEINFO_kindtypeLOGICAL8:\n-\t  *cptr = source_array.logical8;\n-\t  *size = sizeof (*source_array.logical8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad LOGICAL ckindtype\" == NULL);\n \t  break;\n@@ -2732,41 +1843,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *cptr = source_array.real4;\n-\t  *size = sizeof (*source_array.real4);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *cptr = source_array.real5;\n-\t  *size = sizeof (*source_array.real5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *cptr = source_array.real6;\n-\t  *size = sizeof (*source_array.real6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *cptr = source_array.real7;\n-\t  *size = sizeof (*source_array.real7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *cptr = source_array.real8;\n-\t  *size = sizeof (*source_array.real8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad REAL ckindtype\" == NULL);\n \t  break;\n@@ -2797,41 +1873,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *cptr = source_array.complex4;\n-\t  *size = sizeof (*source_array.complex4);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *cptr = source_array.complex5;\n-\t  *size = sizeof (*source_array.complex5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *cptr = source_array.complex6;\n-\t  *size = sizeof (*source_array.complex6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *cptr = source_array.complex7;\n-\t  *size = sizeof (*source_array.complex7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *cptr = source_array.complex8;\n-\t  *size = sizeof (*source_array.complex8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad COMPLEX ckindtype\" == NULL);\n \t  break;\n@@ -2848,55 +1889,6 @@ ffebld_constantarray_preparray (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  *cptr = source_array.character2;\n-\t  *size = sizeof (*source_array.character2);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  *cptr = source_array.character3;\n-\t  *size = sizeof (*source_array.character3);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  *cptr = source_array.character4;\n-\t  *size = sizeof (*source_array.character4);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-\tcase FFEINFO_kindtypeCHARACTER5:\n-\t  *cptr = source_array.character5;\n-\t  *size = sizeof (*source_array.character5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-\tcase FFEINFO_kindtypeCHARACTER6:\n-\t  *cptr = source_array.character6;\n-\t  *size = sizeof (*source_array.character6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-\tcase FFEINFO_kindtypeCHARACTER7:\n-\t  *cptr = source_array.character7;\n-\t  *size = sizeof (*source_array.character7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-\tcase FFEINFO_kindtypeCHARACTER8:\n-\t  *cptr = source_array.character8;\n-\t  *size = sizeof (*source_array.character8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad CHARACTER ckindtype\" == NULL);\n \t  break;\n@@ -2959,30 +1951,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-\tcase FFEINFO_kindtypeINTEGER5:\n-\t  *aptr = array.integer5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-\tcase FFEINFO_kindtypeINTEGER6:\n-\t  *aptr = array.integer6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-\tcase FFEINFO_kindtypeINTEGER7:\n-\t  *aptr = array.integer7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-\tcase FFEINFO_kindtypeINTEGER8:\n-\t  *aptr = array.integer8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad INTEGER akindtype\" == NULL);\n \t  break;\n@@ -3016,30 +1984,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-\tcase FFEINFO_kindtypeLOGICAL5:\n-\t  *aptr = array.logical5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-\tcase FFEINFO_kindtypeLOGICAL6:\n-\t  *aptr = array.logical6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-\tcase FFEINFO_kindtypeLOGICAL7:\n-\t  *aptr = array.logical7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-\tcase FFEINFO_kindtypeLOGICAL8:\n-\t  *aptr = array.logical8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad LOGICAL akindtype\" == NULL);\n \t  break;\n@@ -3067,36 +2011,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *aptr = array.real4 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *aptr = array.real5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *aptr = array.real6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *aptr = array.real7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *aptr = array.real8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad REAL akindtype\" == NULL);\n \t  break;\n@@ -3124,36 +2038,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *aptr = array.complex4 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *aptr = array.complex5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *aptr = array.complex6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *aptr = array.complex7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *aptr = array.complex8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad COMPLEX akindtype\" == NULL);\n \t  break;\n@@ -3169,48 +2053,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  *aptr = array.character2 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  *aptr = array.character3 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  *aptr = array.character4 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-\tcase FFEINFO_kindtypeCHARACTER5:\n-\t  *aptr = array.character5 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-\tcase FFEINFO_kindtypeCHARACTER6:\n-\t  *aptr = array.character6 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-\tcase FFEINFO_kindtypeCHARACTER7:\n-\t  *aptr = array.character7 + offset;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-\tcase FFEINFO_kindtypeCHARACTER8:\n-\t  *aptr = array.character8 + offset;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad CHARACTER akindtype\" == NULL);\n \t  break;\n@@ -3255,34 +2097,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-\tcase FFEINFO_kindtypeINTEGER5:\n-\t  *cptr = &constant->integer5;\n-\t  *size = sizeof (constant->integer5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-\tcase FFEINFO_kindtypeINTEGER6:\n-\t  *cptr = &constant->integer6;\n-\t  *size = sizeof (constant->integer6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-\tcase FFEINFO_kindtypeINTEGER7:\n-\t  *cptr = &constant->integer7;\n-\t  *size = sizeof (constant->integer7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-\tcase FFEINFO_kindtypeINTEGER8:\n-\t  *cptr = &constant->integer8;\n-\t  *size = sizeof (constant->integer8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad INTEGER ckindtype\" == NULL);\n \t  break;\n@@ -3320,34 +2134,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-\tcase FFEINFO_kindtypeLOGICAL5:\n-\t  *cptr = &constant->logical5;\n-\t  *size = sizeof (constant->logical5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-\tcase FFEINFO_kindtypeLOGICAL6:\n-\t  *cptr = &constant->logical6;\n-\t  *size = sizeof (constant->logical6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-\tcase FFEINFO_kindtypeLOGICAL7:\n-\t  *cptr = &constant->logical7;\n-\t  *size = sizeof (constant->logical7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-\tcase FFEINFO_kindtypeLOGICAL8:\n-\t  *cptr = &constant->logical8;\n-\t  *size = sizeof (constant->logical8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad LOGICAL ckindtype\" == NULL);\n \t  break;\n@@ -3378,41 +2164,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *cptr = &constant->real4;\n-\t  *size = sizeof (constant->real4);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *cptr = &constant->real5;\n-\t  *size = sizeof (constant->real5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *cptr = &constant->real6;\n-\t  *size = sizeof (constant->real6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *cptr = &constant->real7;\n-\t  *size = sizeof (constant->real7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *cptr = &constant->real8;\n-\t  *size = sizeof (constant->real8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad REAL ckindtype\" == NULL);\n \t  break;\n@@ -3443,41 +2194,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *cptr = &constant->complex4;\n-\t  *size = sizeof (constant->complex4);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *cptr = &constant->complex5;\n-\t  *size = sizeof (constant->complex5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *cptr = &constant->complex6;\n-\t  *size = sizeof (constant->complex6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *cptr = &constant->complex7;\n-\t  *size = sizeof (constant->complex7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *cptr = &constant->complex8;\n-\t  *size = sizeof (constant->complex8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad COMPLEX ckindtype\" == NULL);\n \t  break;\n@@ -3494,55 +2210,6 @@ ffebld_constantarray_prepare (void **aptr, void **cptr, size_t *size,\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  *cptr = ffetarget_text_character2 (constant->character2);\n-\t  *size = ffetarget_length_character2 (constant->character2);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  *cptr = ffetarget_text_character3 (constant->character3);\n-\t  *size = ffetarget_length_character3 (constant->character3);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  *cptr = ffetarget_text_character4 (constant->character4);\n-\t  *size = ffetarget_length_character4 (constant->character4);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-\tcase FFEINFO_kindtypeCHARACTER5:\n-\t  *cptr = ffetarget_text_character5 (constant->character5);\n-\t  *size = ffetarget_length_character5 (constant->character5);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-\tcase FFEINFO_kindtypeCHARACTER6:\n-\t  *cptr = ffetarget_text_character6 (constant->character6);\n-\t  *size = ffetarget_length_character6 (constant->character6);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-\tcase FFEINFO_kindtypeCHARACTER7:\n-\t  *cptr = ffetarget_text_character7 (constant->character7);\n-\t  *size = ffetarget_length_character7 (constant->character7);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-\tcase FFEINFO_kindtypeCHARACTER8:\n-\t  *cptr = ffetarget_text_character8 (constant->character8);\n-\t  *size = ffetarget_length_character8 (constant->character8);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad CHARACTER ckindtype\" == NULL);\n \t  break;\n@@ -3592,30 +2259,6 @@ ffebld_constantarray_put (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okINTEGER5\n-\tcase FFEINFO_kindtypeINTEGER5:\n-\t  *(array.integer5 + offset) = constant.integer5;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER6\n-\tcase FFEINFO_kindtypeINTEGER6:\n-\t  *(array.integer6 + offset) = constant.integer6;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER7\n-\tcase FFEINFO_kindtypeINTEGER7:\n-\t  *(array.integer7 + offset) = constant.integer7;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER8\n-\tcase FFEINFO_kindtypeINTEGER8:\n-\t  *(array.integer8 + offset) = constant.integer8;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad INTEGER kindtype\" == NULL);\n \t  break;\n@@ -3649,30 +2292,6 @@ ffebld_constantarray_put (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okLOGICAL5\n-\tcase FFEINFO_kindtypeLOGICAL5:\n-\t  *(array.logical5 + offset) = constant.logical5;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL6\n-\tcase FFEINFO_kindtypeLOGICAL6:\n-\t  *(array.logical6 + offset) = constant.logical6;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL7\n-\tcase FFEINFO_kindtypeLOGICAL7:\n-\t  *(array.logical7 + offset) = constant.logical7;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okLOGICAL8\n-\tcase FFEINFO_kindtypeLOGICAL8:\n-\t  *(array.logical8 + offset) = constant.logical8;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad LOGICAL kindtype\" == NULL);\n \t  break;\n@@ -3700,36 +2319,6 @@ ffebld_constantarray_put (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *(array.real4 + offset) = constant.real4;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *(array.real5 + offset) = constant.real5;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *(array.real6 + offset) = constant.real6;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *(array.real7 + offset) = constant.real7;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *(array.real8 + offset) = constant.real8;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad REAL kindtype\" == NULL);\n \t  break;\n@@ -3757,36 +2346,6 @@ ffebld_constantarray_put (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  *(array.complex4 + offset) = constant.complex4;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX5\n-\tcase FFEINFO_kindtypeREAL5:\n-\t  *(array.complex5 + offset) = constant.complex5;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX6\n-\tcase FFEINFO_kindtypeREAL6:\n-\t  *(array.complex6 + offset) = constant.complex6;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX7\n-\tcase FFEINFO_kindtypeREAL7:\n-\t  *(array.complex7 + offset) = constant.complex7;\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX8\n-\tcase FFEINFO_kindtypeREAL8:\n-\t  *(array.complex8 + offset) = constant.complex8;\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad COMPLEX kindtype\" == NULL);\n \t  break;\n@@ -3804,62 +2363,6 @@ ffebld_constantarray_put (ffebldConstantArray array, ffeinfoBasictype bt,\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  memcpy (array.character2 + offset,\n-\t\t  ffetarget_text_character2 (constant.character2),\n-\t\t  ffetarget_length_character2 (constant.character2));\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  memcpy (array.character3 + offset,\n-\t\t  ffetarget_text_character3 (constant.character3),\n-\t\t  ffetarget_length_character3 (constant.character3));\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  memcpy (array.character4 + offset,\n-\t\t  ffetarget_text_character4 (constant.character4),\n-\t\t  ffetarget_length_character4 (constant.character4));\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER5\n-\tcase FFEINFO_kindtypeCHARACTER5:\n-\t  memcpy (array.character5 + offset,\n-\t\t  ffetarget_text_character5 (constant.character5),\n-\t\t  ffetarget_length_character5 (constant.character5));\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER6\n-\tcase FFEINFO_kindtypeCHARACTER6:\n-\t  memcpy (array.character6 + offset,\n-\t\t  ffetarget_text_character6 (constant.character6),\n-\t\t  ffetarget_length_character6 (constant.character6));\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER7\n-\tcase FFEINFO_kindtypeCHARACTER7:\n-\t  memcpy (array.character7 + offset,\n-\t\t  ffetarget_text_character7 (constant.character7),\n-\t\t  ffetarget_length_character7 (constant.character7));\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER8\n-\tcase FFEINFO_kindtypeCHARACTER8:\n-\t  memcpy (array.character8 + offset,\n-\t\t  ffetarget_text_character8 (constant.character8),\n-\t\t  ffetarget_length_character8 (constant.character8));\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad CHARACTER kindtype\" == NULL);\n \t  break;\n@@ -3896,27 +2399,6 @@ ffebld_init_1 ()\n #if FFETARGET_okCHARACTER1\n   ffebld_constant_character1_ = NULL;\n #endif\n-#if FFETARGET_okCHARACTER2\n-  ffebld_constant_character2_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER3\n-  ffebld_constant_character3_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER4\n-  ffebld_constant_character4_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER5\n-  ffebld_constant_character5_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER6\n-  ffebld_constant_character6_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER7\n-  ffebld_constant_character7_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER8\n-  ffebld_constant_character8_ = NULL;\n-#endif\n #if FFETARGET_okCOMPLEX1\n   ffebld_constant_complex1_ = NULL;\n #endif\n@@ -3926,21 +2408,6 @@ ffebld_init_1 ()\n #if FFETARGET_okCOMPLEX3\n   ffebld_constant_complex3_ = NULL;\n #endif\n-#if FFETARGET_okCOMPLEX4\n-  ffebld_constant_complex4_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-  ffebld_constant_complex5_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-  ffebld_constant_complex6_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-  ffebld_constant_complex7_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-  ffebld_constant_complex8_ = NULL;\n-#endif\n #if FFETARGET_okINTEGER1\n   ffebld_constant_integer1_ = NULL;\n #endif\n@@ -3953,18 +2420,6 @@ ffebld_init_1 ()\n #if FFETARGET_okINTEGER4\n   ffebld_constant_integer4_ = NULL;\n #endif\n-#if FFETARGET_okINTEGER5\n-  ffebld_constant_integer5_ = NULL;\n-#endif\n-#if FFETARGET_okINTEGER6\n-  ffebld_constant_integer6_ = NULL;\n-#endif\n-#if FFETARGET_okINTEGER7\n-  ffebld_constant_integer7_ = NULL;\n-#endif\n-#if FFETARGET_okINTEGER8\n-  ffebld_constant_integer8_ = NULL;\n-#endif\n #if FFETARGET_okLOGICAL1\n   ffebld_constant_logical1_ = NULL;\n #endif\n@@ -3977,18 +2432,6 @@ ffebld_init_1 ()\n #if FFETARGET_okLOGICAL4\n   ffebld_constant_logical4_ = NULL;\n #endif\n-#if FFETARGET_okLOGICAL5\n-  ffebld_constant_logical5_ = NULL;\n-#endif\n-#if FFETARGET_okLOGICAL6\n-  ffebld_constant_logical6_ = NULL;\n-#endif\n-#if FFETARGET_okLOGICAL7\n-  ffebld_constant_logical7_ = NULL;\n-#endif\n-#if FFETARGET_okLOGICAL8\n-  ffebld_constant_logical8_ = NULL;\n-#endif\n #if FFETARGET_okREAL1\n   ffebld_constant_real1_ = NULL;\n #endif\n@@ -3997,21 +2440,6 @@ ffebld_init_1 ()\n #endif\n #if FFETARGET_okREAL3\n   ffebld_constant_real3_ = NULL;\n-#endif\n-#if FFETARGET_okREAL4\n-  ffebld_constant_real4_ = NULL;\n-#endif\n-#if FFETARGET_okREAL5\n-  ffebld_constant_real5_ = NULL;\n-#endif\n-#if FFETARGET_okREAL6\n-  ffebld_constant_real6_ = NULL;\n-#endif\n-#if FFETARGET_okREAL7\n-  ffebld_constant_real7_ = NULL;\n-#endif\n-#if FFETARGET_okREAL8\n-  ffebld_constant_real8_ = NULL;\n #endif\n   ffebld_constant_hollerith_ = NULL;\n   for (i = FFEBLD_constTYPELESS_FIRST; i <= FFEBLD_constTYPELESS_LAST; ++i)\n@@ -4036,27 +2464,6 @@ ffebld_init_2 ()\n #if FFETARGET_okCHARACTER1\n   ffebld_constant_character1_ = NULL;\n #endif\n-#if FFETARGET_okCHARACTER2\n-  ffebld_constant_character2_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER3\n-  ffebld_constant_character3_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER4\n-  ffebld_constant_character4_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER5\n-  ffebld_constant_character5_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER6\n-  ffebld_constant_character6_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER7\n-  ffebld_constant_character7_ = NULL;\n-#endif\n-#if FFETARGET_okCHARACTER8\n-  ffebld_constant_character8_ = NULL;\n-#endif\n #if FFETARGET_okCOMPLEX1\n   ffebld_constant_complex1_ = NULL;\n #endif\n@@ -4066,21 +2473,6 @@ ffebld_init_2 ()\n #if FFETARGET_okCOMPLEX3\n   ffebld_constant_complex3_ = NULL;\n #endif\n-#if FFETARGET_okCOMPLEX4\n-  ffebld_constant_complex4_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-  ffebld_constant_complex5_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-  ffebld_constant_complex6_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-  ffebld_constant_complex7_ = NULL;\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-  ffebld_constant_complex8_ = NULL;\n-#endif\n #if FFETARGET_okINTEGER1\n   ffebld_constant_integer1_ = NULL;\n #endif\n@@ -4093,18 +2485,6 @@ ffebld_init_2 ()\n #if FFETARGET_okINTEGER4\n   ffebld_constant_integer4_ = NULL;\n #endif\n-#if FFETARGET_okINTEGER5\n-  ffebld_constant_integer5_ = NULL;\n-#endif\n-#if FFETARGET_okINTEGER6\n-  ffebld_constant_integer6_ = NULL;\n-#endif\n-#if FFETARGET_okINTEGER7\n-  ffebld_constant_integer7_ = NULL;\n-#endif\n-#if FFETARGET_okINTEGER8\n-  ffebld_constant_integer8_ = NULL;\n-#endif\n #if FFETARGET_okLOGICAL1\n   ffebld_constant_logical1_ = NULL;\n #endif\n@@ -4117,18 +2497,6 @@ ffebld_init_2 ()\n #if FFETARGET_okLOGICAL4\n   ffebld_constant_logical4_ = NULL;\n #endif\n-#if FFETARGET_okLOGICAL5\n-  ffebld_constant_logical5_ = NULL;\n-#endif\n-#if FFETARGET_okLOGICAL6\n-  ffebld_constant_logical6_ = NULL;\n-#endif\n-#if FFETARGET_okLOGICAL7\n-  ffebld_constant_logical7_ = NULL;\n-#endif\n-#if FFETARGET_okLOGICAL8\n-  ffebld_constant_logical8_ = NULL;\n-#endif\n #if FFETARGET_okREAL1\n   ffebld_constant_real1_ = NULL;\n #endif\n@@ -4137,21 +2505,6 @@ ffebld_init_2 ()\n #endif\n #if FFETARGET_okREAL3\n   ffebld_constant_real3_ = NULL;\n-#endif\n-#if FFETARGET_okREAL4\n-  ffebld_constant_real4_ = NULL;\n-#endif\n-#if FFETARGET_okREAL5\n-  ffebld_constant_real5_ = NULL;\n-#endif\n-#if FFETARGET_okREAL6\n-  ffebld_constant_real6_ = NULL;\n-#endif\n-#if FFETARGET_okREAL7\n-  ffebld_constant_real7_ = NULL;\n-#endif\n-#if FFETARGET_okREAL8\n-  ffebld_constant_real8_ = NULL;\n #endif\n   ffebld_constant_hollerith_ = NULL;\n   for (i = FFEBLD_constTYPELESS_FIRST; i <= FFEBLD_constTYPELESS_LAST; ++i)"}, {"sha": "a726dec5ab0818734db25fc4661299e1ed7efc33", "filename": "gcc/f/bld.h", "status": "modified", "additions": 0, "deletions": 265, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fbld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fbld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbld.h?ref=22e494a0aec5a8385713d5522ea351e43fcea530", "patch": "@@ -154,18 +154,6 @@ union _ffebld_constant_union_\n #if FFETARGET_okINTEGER4\n     ffetargetInteger4 integer4;\n #endif\n-#if FFETARGET_okINTEGER5\n-    ffetargetInteger5 integer5;\n-#endif\n-#if FFETARGET_okINTEGER6\n-    ffetargetInteger6 integer6;\n-#endif\n-#if FFETARGET_okINTEGER7\n-    ffetargetInteger7 integer7;\n-#endif\n-#if FFETARGET_okINTEGER8\n-    ffetargetInteger8 integer8;\n-#endif\n #if FFETARGET_okLOGICAL1\n     ffetargetLogical1 logical1;\n #endif\n@@ -178,18 +166,6 @@ union _ffebld_constant_union_\n #if FFETARGET_okLOGICAL4\n     ffetargetLogical4 logical4;\n #endif\n-#if FFETARGET_okLOGICAL5\n-    ffetargetLogical5 logical5;\n-#endif\n-#if FFETARGET_okLOGICAL6\n-    ffetargetLogical6 logical6;\n-#endif\n-#if FFETARGET_okLOGICAL7\n-    ffetargetLogical7 logical7;\n-#endif\n-#if FFETARGET_okLOGICAL8\n-    ffetargetLogical8 logical8;\n-#endif\n #if FFETARGET_okREAL1\n     ffetargetReal1 real1;\n #endif\n@@ -199,21 +175,6 @@ union _ffebld_constant_union_\n #if FFETARGET_okREAL3\n     ffetargetReal3 real3;\n #endif\n-#if FFETARGET_okREAL4\n-    ffetargetReal4 real4;\n-#endif\n-#if FFETARGET_okREAL5\n-    ffetargetReal5 real5;\n-#endif\n-#if FFETARGET_okREAL6\n-    ffetargetReal6 real6;\n-#endif\n-#if FFETARGET_okREAL7\n-    ffetargetReal7 real7;\n-#endif\n-#if FFETARGET_okREAL8\n-    ffetargetReal8 real8;\n-#endif\n #if FFETARGET_okCOMPLEX1\n     ffetargetComplex1 complex1;\n #endif\n@@ -223,44 +184,8 @@ union _ffebld_constant_union_\n #if FFETARGET_okCOMPLEX3\n     ffetargetComplex3 complex3;\n #endif\n-#if FFETARGET_okCOMPLEX4\n-    ffetargetComplex4 complex4;\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-    ffetargetComplex5 complex5;\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-    ffetargetComplex6 complex6;\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-    ffetargetComplex7 complex7;\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-    ffetargetComplex8 complex8;\n-#endif\n #if FFETARGET_okCHARACTER1\n     ffetargetCharacter1 character1;\n-#endif\n-#if FFETARGET_okCHARACTER2\n-    ffetargetCharacter2 character2;\n-#endif\n-#if FFETARGET_okCHARACTER3\n-    ffetargetCharacter3 character3;\n-#endif\n-#if FFETARGET_okCHARACTER4\n-    ffetargetCharacter4 character4;\n-#endif\n-#if FFETARGET_okCHARACTER5\n-    ffetargetCharacter5 character5;\n-#endif\n-#if FFETARGET_okCHARACTER6\n-    ffetargetCharacter6 character6;\n-#endif\n-#if FFETARGET_okCHARACTER7\n-    ffetargetCharacter7 character7;\n-#endif\n-#if FFETARGET_okCHARACTER8\n-    ffetargetCharacter8 character8;\n #endif\n   };\n \n@@ -278,18 +203,6 @@ union _ffebld_constant_array_\n #if FFETARGET_okINTEGER4\n     ffetargetInteger4 *integer4;\n #endif\n-#if FFETARGET_okINTEGER5\n-    ffetargetInteger5 *integer5;\n-#endif\n-#if FFETARGET_okINTEGER6\n-    ffetargetInteger6 *integer6;\n-#endif\n-#if FFETARGET_okINTEGER7\n-    ffetargetInteger7 *integer7;\n-#endif\n-#if FFETARGET_okINTEGER8\n-    ffetargetInteger8 *integer8;\n-#endif\n #if FFETARGET_okLOGICAL1\n     ffetargetLogical1 *logical1;\n #endif\n@@ -302,18 +215,6 @@ union _ffebld_constant_array_\n #if FFETARGET_okLOGICAL4\n     ffetargetLogical4 *logical4;\n #endif\n-#if FFETARGET_okLOGICAL5\n-    ffetargetLogical5 *logical5;\n-#endif\n-#if FFETARGET_okLOGICAL6\n-    ffetargetLogical6 *logical6;\n-#endif\n-#if FFETARGET_okLOGICAL7\n-    ffetargetLogical7 *logical7;\n-#endif\n-#if FFETARGET_okLOGICAL8\n-    ffetargetLogical8 *logical8;\n-#endif\n #if FFETARGET_okREAL1\n     ffetargetReal1 *real1;\n #endif\n@@ -323,21 +224,6 @@ union _ffebld_constant_array_\n #if FFETARGET_okREAL3\n     ffetargetReal3 *real3;\n #endif\n-#if FFETARGET_okREAL4\n-    ffetargetReal4 *real4;\n-#endif\n-#if FFETARGET_okREAL5\n-    ffetargetReal5 *real5;\n-#endif\n-#if FFETARGET_okREAL6\n-    ffetargetReal6 *real6;\n-#endif\n-#if FFETARGET_okREAL7\n-    ffetargetReal7 *real7;\n-#endif\n-#if FFETARGET_okREAL8\n-    ffetargetReal8 *real8;\n-#endif\n #if FFETARGET_okCOMPLEX1\n     ffetargetComplex1 *complex1;\n #endif\n@@ -347,44 +233,8 @@ union _ffebld_constant_array_\n #if FFETARGET_okCOMPLEX3\n     ffetargetComplex3 *complex3;\n #endif\n-#if FFETARGET_okCOMPLEX4\n-    ffetargetComplex4 *complex4;\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-    ffetargetComplex5 *complex5;\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-    ffetargetComplex6 *complex6;\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-    ffetargetComplex7 *complex7;\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-    ffetargetComplex8 *complex8;\n-#endif\n #if FFETARGET_okCHARACTER1\n     ffetargetCharacterUnit1 *character1;\n-#endif\n-#if FFETARGET_okCHARACTER2\n-    ffetargetCharacterUnit2 *character2;\n-#endif\n-#if FFETARGET_okCHARACTER3\n-    ffetargetCharacterUnit3 *character3;\n-#endif\n-#if FFETARGET_okCHARACTER4\n-    ffetargetCharacterUnit4 *character4;\n-#endif\n-#if FFETARGET_okCHARACTER5\n-    ffetargetCharacterUnit5 *character5;\n-#endif\n-#if FFETARGET_okCHARACTER6\n-    ffetargetCharacterUnit6 *character6;\n-#endif\n-#if FFETARGET_okCHARACTER7\n-    ffetargetCharacterUnit7 *character7;\n-#endif\n-#if FFETARGET_okCHARACTER8\n-    ffetargetCharacterUnit8 *character8;\n #endif\n   };\n \n@@ -479,34 +329,6 @@ bool ffebld_constant_is_zero (ffebldConstant c);\n ffebldConstant ffebld_constant_new_character1 (ffelexToken t);\n ffebldConstant ffebld_constant_new_character1_val (ffetargetCharacter1 val);\n #endif\n-#if FFETARGET_okCHARACTER2\n-ffebldConstant ffebld_constant_new_character2 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_character2_val (ffetargetCharacter2 val);\n-#endif\n-#if FFETARGET_okCHARACTER3\n-ffebldConstant ffebld_constant_new_character3 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_character3_val (ffetargetCharacter3 val);\n-#endif\n-#if FFETARGET_okCHARACTER4\n-ffebldConstant ffebld_constant_new_character4 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_character4_val (ffetargetCharacter4 val);\n-#endif\n-#if FFETARGET_okCHARACTER5\n-ffebldConstant ffebld_constant_new_character5 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_character5_val (ffetargetCharacter5 val);\n-#endif\n-#if FFETARGET_okCHARACTER6\n-ffebldConstant ffebld_constant_new_character6 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_character6_val (ffetargetCharacter6 val);\n-#endif\n-#if FFETARGET_okCHARACTER7\n-ffebldConstant ffebld_constant_new_character7 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_character7_val (ffetargetCharacter7 val);\n-#endif\n-#if FFETARGET_okCHARACTER8\n-ffebldConstant ffebld_constant_new_character8 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_character8_val (ffetargetCharacter8 val);\n-#endif\n #if FFETARGET_okCOMPLEX1\n ffebldConstant ffebld_constant_new_complex1 (ffebldConstant real,\n \t\t\t\t\t     ffebldConstant imaginary);\n@@ -522,31 +344,6 @@ ffebldConstant ffebld_constant_new_complex3 (ffebldConstant real,\n \t\t\t\t\t     ffebldConstant imaginary);\n ffebldConstant ffebld_constant_new_complex3_val (ffetargetComplex3 val);\n #endif\n-#if FFETARGET_okCOMPLEX4\n-ffebldConstant ffebld_constant_new_complex4 (ffebldConstant real,\n-\t\t\t\t\t     ffebldConstant imaginary);\n-ffebldConstant ffebld_constant_new_complex4_val (ffetargetComplex4 val);\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-ffebldConstant ffebld_constant_new_complex5 (ffebldConstant real,\n-\t\t\t\t\t     ffebldConstant imaginary);\n-ffebldConstant ffebld_constant_new_complex5_val (ffetargetComplex5 val);\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-ffebldConstant ffebld_constant_new_complex6 (ffebldConstant real,\n-\t\t\t\t\t     ffebldConstant imaginary);\n-ffebldConstant ffebld_constant_new_complex6_val (ffetargetComplex6 val);\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-ffebldConstant ffebld_constant_new_complex7 (ffebldConstant real,\n-\t\t\t\t\t     ffebldConstant imaginary);\n-ffebldConstant ffebld_constant_new_complex7_val (ffetargetComplex7 val);\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-ffebldConstant ffebld_constant_new_complex8 (ffebldConstant real,\n-\t\t\t\t\t     ffebldConstant imaginary);\n-ffebldConstant ffebld_constant_new_complex8_val (ffetargetComplex8 val);\n-#endif\n ffebldConstant ffebld_constant_new_hollerith (ffelexToken t);\n ffebldConstant ffebld_constant_new_hollerith_val (ffetargetHollerith val);\n #if FFETARGET_okINTEGER1\n@@ -565,22 +362,6 @@ ffebldConstant ffebld_constant_new_integer3_val (ffetargetInteger3 val);\n ffebldConstant ffebld_constant_new_integer4 (ffelexToken t);\n ffebldConstant ffebld_constant_new_integer4_val (ffetargetInteger4 val);\n #endif\n-#if FFETARGET_okINTEGER5\n-ffebldConstant ffebld_constant_new_integer5 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_integer5_val (ffetargetInteger5 val);\n-#endif\n-#if FFETARGET_okINTEGER6\n-ffebldConstant ffebld_constant_new_integer6 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_integer6_val (ffetargetInteger6 val);\n-#endif\n-#if FFETARGET_okINTEGER7\n-ffebldConstant ffebld_constant_new_integer7 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_integer7_val (ffetargetInteger7 val);\n-#endif\n-#if FFETARGET_okINTEGER8\n-ffebldConstant ffebld_constant_new_integer8 (ffelexToken t);\n-ffebldConstant ffebld_constant_new_integer8_val (ffetargetInteger8 val);\n-#endif\n ffebldConstant ffebld_constant_new_integerbinary (ffelexToken t);\n ffebldConstant ffebld_constant_new_integerhex (ffelexToken t);\n ffebldConstant ffebld_constant_new_integeroctal (ffelexToken t);\n@@ -600,22 +381,6 @@ ffebldConstant ffebld_constant_new_logical3_val (ffetargetLogical3 val);\n ffebldConstant ffebld_constant_new_logical4 (bool truth);\n ffebldConstant ffebld_constant_new_logical4_val (ffetargetLogical4 val);\n #endif\n-#if FFETARGET_okLOGICAL5\n-ffebldConstant ffebld_constant_new_logical5 (bool truth);\n-ffebldConstant ffebld_constant_new_logical5_val (ffetargetLogical5 val);\n-#endif\n-#if FFETARGET_okLOGICAL6\n-ffebldConstant ffebld_constant_new_logical6 (bool truth);\n-ffebldConstant ffebld_constant_new_logical6_val (ffetargetLogical6 val);\n-#endif\n-#if FFETARGET_okLOGICAL7\n-ffebldConstant ffebld_constant_new_logical7 (bool truth);\n-ffebldConstant ffebld_constant_new_logical7_val (ffetargetLogical7 val);\n-#endif\n-#if FFETARGET_okLOGICAL8\n-ffebldConstant ffebld_constant_new_logical8 (bool truth);\n-ffebldConstant ffebld_constant_new_logical8_val (ffetargetLogical8 val);\n-#endif\n #if FFETARGET_okREAL1\n ffebldConstant ffebld_constant_new_real1 (ffelexToken integer,\n \t    ffelexToken decimal, ffelexToken fraction, ffelexToken exponent,\n@@ -634,36 +399,6 @@ ffebldConstant ffebld_constant_new_real3 (ffelexToken integer,\n \t\t    ffelexToken exponent_sign, ffelexToken exponent_digits);\n ffebldConstant ffebld_constant_new_real3_val (ffetargetReal3 val);\n #endif\n-#if FFETARGET_okREAL4\n-ffebldConstant ffebld_constant_new_real4 (ffelexToken integer,\n-\t    ffelexToken decimal, ffelexToken fraction, ffelexToken exponent,\n-\t\t    ffelexToken exponent_sign, ffelexToken exponent_digits);\n-ffebldConstant ffebld_constant_new_real4_val (ffetargetReal4 val);\n-#endif\n-#if FFETARGET_okREAL5\n-ffebldConstant ffebld_constant_new_real5 (ffelexToken integer,\n-\t    ffelexToken decimal, ffelexToken fraction, ffelexToken exponent,\n-\t\t    ffelexToken exponent_sign, ffelexToken exponent_digits);\n-ffebldConstant ffebld_constant_new_real5_val (ffetargetReal5 val);\n-#endif\n-#if FFETARGET_okREAL6\n-ffebldConstant ffebld_constant_new_real6 (ffelexToken integer,\n-\t    ffelexToken decimal, ffelexToken fraction, ffelexToken exponent,\n-\t\t    ffelexToken exponent_sign, ffelexToken exponent_digits);\n-ffebldConstant ffebld_constant_new_real6_val (ffetargetReal6 val);\n-#endif\n-#if FFETARGET_okREAL7\n-ffebldConstant ffebld_constant_new_real7 (ffelexToken integer,\n-\t    ffelexToken decimal, ffelexToken fraction, ffelexToken exponent,\n-\t\t    ffelexToken exponent_sign, ffelexToken exponent_digits);\n-ffebldConstant ffebld_constant_new_real7_val (ffetargetReal7 val);\n-#endif\n-#if FFETARGET_okREAL8\n-ffebldConstant ffebld_constant_new_real8 (ffelexToken integer,\n-\t    ffelexToken decimal, ffelexToken fraction, ffelexToken exponent,\n-\t\t    ffelexToken exponent_sign, ffelexToken exponent_digits);\n-ffebldConstant ffebld_constant_new_real8_val (ffetargetReal8 val);\n-#endif\n ffebldConstant ffebld_constant_new_typeless_bm (ffelexToken t);\n ffebldConstant ffebld_constant_new_typeless_bv (ffelexToken t);\n ffebldConstant ffebld_constant_new_typeless_hxm (ffelexToken t);"}, {"sha": "568cb21e42e2a4bc1513bef6b109123570f47f8f", "filename": "gcc/f/com.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=22e494a0aec5a8385713d5522ea351e43fcea530", "patch": "@@ -10419,12 +10419,6 @@ ffecom_constantunion (ffebldConstantUnion *cu, ffeinfoBasictype bt,\n \t    break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t  case FFEINFO_kindtypeREAL4:\n-\t    val = ffetarget_value_real4 (ffebld_cu_val_real4 (*cu));\n-\t    break;\n-#endif\n-\n \t  default:\n \t    assert (\"bad REAL constant kind type\" == NULL);\n \t    /* Fall through. */\n@@ -10464,13 +10458,6 @@ ffecom_constantunion (ffebldConstantUnion *cu, ffeinfoBasictype bt,\n \t    break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t  case FFEINFO_kindtypeREAL4:\n-\t    real = ffetarget_value_real4 (ffebld_cu_val_complex4 (*cu).real);\n-\t    imag = ffetarget_value_real4 (ffebld_cu_val_complex4 (*cu).imaginary);\n-\t    break;\n-#endif\n-\n \t  default:\n \t    assert (\"bad REAL constant kind type\" == NULL);\n \t    /* Fall through. */"}, {"sha": "1777592de063012979b484f5b072dd7b45b5d0ba", "filename": "gcc/f/expr.c", "status": "modified", "additions": 0, "deletions": 899, "changes": 899, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fexpr.c?ref=22e494a0aec5a8385713d5522ea351e43fcea530", "patch": "@@ -516,14 +516,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer1_real4\n-\t\t    (ffebld_cu_ptr_integer1 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER1/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -557,14 +549,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer1_complex4\n-\t\t    (ffebld_cu_ptr_integer1 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER1/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -709,14 +693,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer2_real4\n-\t\t    (ffebld_cu_ptr_integer2 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER2/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -750,14 +726,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer2_complex4\n-\t\t    (ffebld_cu_ptr_integer2 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER2/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -902,14 +870,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer3_real4\n-\t\t    (ffebld_cu_ptr_integer3 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER3/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -943,14 +903,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer3_complex4\n-\t\t    (ffebld_cu_ptr_integer3 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER3/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -1095,14 +1047,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer4_real4\n-\t\t    (ffebld_cu_ptr_integer4 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER4/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -1136,14 +1080,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_integer4_complex4\n-\t\t    (ffebld_cu_ptr_integer4 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"INTEGER3/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -1752,14 +1688,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_real1_real4\n-\t\t    (ffebld_cu_ptr_real1 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"REAL1/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -1793,14 +1721,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_real1_complex4\n-\t\t    (ffebld_cu_ptr_real1 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"REAL1/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -1904,14 +1824,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_real2_real4\n-\t\t    (ffebld_cu_ptr_real2 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"REAL2/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -1945,14 +1857,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_real2_complex4\n-\t\t    (ffebld_cu_ptr_real2 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"REAL2/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -2056,14 +1960,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_real3_real4\n-\t\t    (ffebld_cu_ptr_real3 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"REAL3/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -2097,14 +1993,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_real3_complex4\n-\t\t    (ffebld_cu_ptr_real3 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"REAL3/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -2144,158 +2032,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  switch (ffeinfo_basictype (ffebld_info (l)))\n-\t    {\n-\t    case FFEINFO_basictypeINTEGER:\n-\t      switch (ffeinfo_kindtype (ffebld_info (l)))\n-\t\t{\n-#if FFETARGET_okINTEGER1\n-\t\tcase FFEINFO_kindtypeINTEGER1:\n-\t\t  error = ffetarget_convert_real4_integer1\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_integer1 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER2\n-\t\tcase FFEINFO_kindtypeINTEGER2:\n-\t\t  error = ffetarget_convert_real4_integer2\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_integer2 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER3\n-\t\tcase FFEINFO_kindtypeINTEGER3:\n-\t\t  error = ffetarget_convert_real4_integer3\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_integer3 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER4\n-\t\tcase FFEINFO_kindtypeINTEGER4:\n-\t\t  error = ffetarget_convert_real4_integer4\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_integer4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-\t\tdefault:\n-\t\t  assert (\"REAL4/INTEGER bad source kind type\" == NULL);\n-\t\t  break;\n-\t\t}\n-\t      break;\n-\n-\t    case FFEINFO_basictypeREAL:\n-\t      switch (ffeinfo_kindtype (ffebld_info (l)))\n-\t\t{\n-#if FFETARGET_okREAL1\n-\t\tcase FFEINFO_kindtypeREAL1:\n-\t\t  error = ffetarget_convert_real4_real1\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_real1 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL2\n-\t\tcase FFEINFO_kindtypeREAL2:\n-\t\t  error = ffetarget_convert_real4_real2\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_real2 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL3\n-\t\tcase FFEINFO_kindtypeREAL3:\n-\t\t  error = ffetarget_convert_real4_real3\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_real3 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-\t\tdefault:\n-\t\t  assert (\"REAL4/REAL bad source kind type\" == NULL);\n-\t\t  break;\n-\t\t}\n-\t      break;\n-\n-\t    case FFEINFO_basictypeCOMPLEX:\n-\t      switch (ffeinfo_kindtype (ffebld_info (l)))\n-\t\t{\n-#if FFETARGET_okCOMPLEX1\n-\t\tcase FFEINFO_kindtypeREAL1:\n-\t\t  error = ffetarget_convert_real4_complex1\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_complex1 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX2\n-\t\tcase FFEINFO_kindtypeREAL2:\n-\t\t  error = ffetarget_convert_real4_complex2\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_complex2 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX3\n-\t\tcase FFEINFO_kindtypeREAL3:\n-\t\t  error = ffetarget_convert_real4_complex3\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_complex3 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_real4_complex4\n-\t\t    (ffebld_cu_ptr_real4 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-\t\tdefault:\n-\t\t  assert (\"REAL4/COMPLEX bad source kind type\" == NULL);\n-\t\t  break;\n-\t\t}\n-\t      break;\n-\n-\t    case FFEINFO_basictypeCHARACTER:\n-\t      error = ffetarget_convert_real4_character1\n-\t\t(ffebld_cu_ptr_real4 (u),\n-\t\t ffebld_constant_character1 (ffebld_conter (l)));\n-\t      break;\n-\n-\t    case FFEINFO_basictypeHOLLERITH:\n-\t      error = ffetarget_convert_real4_hollerith\n-\t\t(ffebld_cu_ptr_real4 (u),\n-\t\t ffebld_constant_hollerith (ffebld_conter (l)));\n-\t      break;\n-\n-\t    case FFEINFO_basictypeTYPELESS:\n-\t      error = ffetarget_convert_real4_typeless\n-\t\t(ffebld_cu_ptr_real4 (u),\n-\t\t ffebld_constant_typeless (ffebld_conter (l)));\n-\t      break;\n-\n-\t    default:\n-\t      assert (\"REAL4 bad type\" == NULL);\n-\t      break;\n-\t    }\n-\n-\t  /* If conversion operation is not implemented, return original expr.  */\n-\t  if (error == FFEBAD_NOCANDO)\n-\t    return expr;\n-\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_real4_val\n-\t     (ffebld_cu_val_real4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -2378,14 +2114,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_complex1_real4\n-\t\t    (ffebld_cu_ptr_complex1 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"COMPLEX1/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -2411,14 +2139,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_complex1_complex4\n-\t\t    (ffebld_cu_ptr_complex1 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"COMPLEX1/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -2530,14 +2250,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_complex2_real4\n-\t\t    (ffebld_cu_ptr_complex2 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"COMPLEX2/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -2563,14 +2275,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_complex2_complex4\n-\t\t    (ffebld_cu_ptr_complex2 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"COMPLEX2/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -2682,14 +2386,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_complex3_real4\n-\t\t    (ffebld_cu_ptr_complex3 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"COMPLEX3/REAL bad source kind type\" == NULL);\n \t\t  break;\n@@ -2715,14 +2411,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t\t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_complex3_complex4\n-\t\t    (ffebld_cu_ptr_complex3 (u),\n-\t\t     ffebld_constant_complex4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n \t\tdefault:\n \t\t  assert (\"COMPLEX3/COMPLEX bad source kind type\" == NULL);\n \t\t  break;\n@@ -2762,158 +2450,6 @@ ffeexpr_collapse_convert (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  switch (ffeinfo_basictype (ffebld_info (l)))\n-\t    {\n-\t    case FFEINFO_basictypeINTEGER:\n-\t      switch (ffeinfo_kindtype (ffebld_info (l)))\n-\t\t{\n-#if FFETARGET_okINTEGER1\n-\t\tcase FFEINFO_kindtypeINTEGER1:\n-\t\t  error = ffetarget_convert_complex4_integer1\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_integer1 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER2\n-\t\tcase FFEINFO_kindtypeINTEGER2:\n-\t\t  error = ffetarget_convert_complex4_integer2\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_integer2 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER3\n-\t\tcase FFEINFO_kindtypeINTEGER3:\n-\t\t  error = ffetarget_convert_complex4_integer3\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_integer3 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okINTEGER4\n-\t\tcase FFEINFO_kindtypeINTEGER4:\n-\t\t  error = ffetarget_convert_complex4_integer4\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_integer4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-\t\tdefault:\n-\t\t  assert (\"COMPLEX4/INTEGER bad source kind type\" == NULL);\n-\t\t  break;\n-\t\t}\n-\t      break;\n-\n-\t    case FFEINFO_basictypeREAL:\n-\t      switch (ffeinfo_kindtype (ffebld_info (l)))\n-\t\t{\n-#if FFETARGET_okREAL1\n-\t\tcase FFEINFO_kindtypeREAL1:\n-\t\t  error = ffetarget_convert_complex4_real1\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_real1 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL2\n-\t\tcase FFEINFO_kindtypeREAL2:\n-\t\t  error = ffetarget_convert_complex4_real2\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_real2 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL3\n-\t\tcase FFEINFO_kindtypeREAL3:\n-\t\t  error = ffetarget_convert_complex4_real3\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_real3 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okREAL4\n-\t\tcase FFEINFO_kindtypeREAL4:\n-\t\t  error = ffetarget_convert_complex4_real4\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_real4 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-\t\tdefault:\n-\t\t  assert (\"COMPLEX4/REAL bad source kind type\" == NULL);\n-\t\t  break;\n-\t\t}\n-\t      break;\n-\n-\t    case FFEINFO_basictypeCOMPLEX:\n-\t      switch (ffeinfo_kindtype (ffebld_info (l)))\n-\t\t{\n-#if FFETARGET_okCOMPLEX1\n-\t\tcase FFEINFO_kindtypeREAL1:\n-\t\t  error = ffetarget_convert_complex4_complex1\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_complex1 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX2\n-\t\tcase FFEINFO_kindtypeREAL2:\n-\t\t  error = ffetarget_convert_complex4_complex2\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_complex2 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-#if FFETARGET_okCOMPLEX3\n-\t\tcase FFEINFO_kindtypeREAL3:\n-\t\t  error = ffetarget_convert_complex4_complex3\n-\t\t    (ffebld_cu_ptr_complex4 (u),\n-\t\t     ffebld_constant_complex3 (ffebld_conter (l)));\n-\t\t  break;\n-#endif\n-\n-\t\tdefault:\n-\t\t  assert (\"COMPLEX4/COMPLEX bad source kind type\" == NULL);\n-\t\t  break;\n-\t\t}\n-\t      break;\n-\n-\t    case FFEINFO_basictypeCHARACTER:\n-\t      error = ffetarget_convert_complex4_character1\n-\t\t(ffebld_cu_ptr_complex4 (u),\n-\t\t ffebld_constant_character1 (ffebld_conter (l)));\n-\t      break;\n-\n-\t    case FFEINFO_basictypeHOLLERITH:\n-\t      error = ffetarget_convert_complex4_hollerith\n-\t\t(ffebld_cu_ptr_complex4 (u),\n-\t\t ffebld_constant_hollerith (ffebld_conter (l)));\n-\t      break;\n-\n-\t    case FFEINFO_basictypeTYPELESS:\n-\t      error = ffetarget_convert_complex4_typeless\n-\t\t(ffebld_cu_ptr_complex4 (u),\n-\t\t ffebld_constant_typeless (ffebld_conter (l)));\n-\t      break;\n-\n-\t    default:\n-\t      assert (\"COMPLEX4 bad type\" == NULL);\n-\t      break;\n-\t    }\n-\n-\t  /* If conversion operation is not implemented, return original expr.  */\n-\t  if (error == FFEBAD_NOCANDO)\n-\t    return expr;\n-\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_complex4_val\n-\t     (ffebld_cu_val_complex4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -3302,15 +2838,6 @@ ffeexpr_collapse_uminus (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_uminus_real4 (ffebld_cu_ptr_real4 (u),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_real4_val\n-\t\t\t\t\t   (ffebld_cu_val_real4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -3347,15 +2874,6 @@ ffeexpr_collapse_uminus (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_uminus_complex4 (ffebld_cu_ptr_complex4 (u),\n-\t\t\t      ffebld_constant_complex4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_complex4_val\n-\t\t\t\t\t(ffebld_cu_val_complex4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -3646,16 +3164,6 @@ ffeexpr_collapse_add (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_add_real4 (ffebld_cu_ptr_real4 (u),\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_real4_val\n-\t\t\t\t\t   (ffebld_cu_val_real4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -3695,16 +3203,6 @@ ffeexpr_collapse_add (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_add_complex4 (ffebld_cu_ptr_complex4 (u),\n-\t\t\t       ffebld_constant_complex4 (ffebld_conter (l)),\n-\t\t\t      ffebld_constant_complex4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_complex4_val\n-\t\t\t\t\t(ffebld_cu_val_complex4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -3851,16 +3349,6 @@ ffeexpr_collapse_subtract (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_subtract_real4 (ffebld_cu_ptr_real4 (u),\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_real4_val\n-\t\t\t\t\t   (ffebld_cu_val_real4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -3900,16 +3388,6 @@ ffeexpr_collapse_subtract (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_subtract_complex4 (ffebld_cu_ptr_complex4 (u),\n-\t\t\t       ffebld_constant_complex4 (ffebld_conter (l)),\n-\t\t\t      ffebld_constant_complex4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_complex4_val\n-\t\t\t\t\t(ffebld_cu_val_complex4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -4056,16 +3534,6 @@ ffeexpr_collapse_multiply (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_multiply_real4 (ffebld_cu_ptr_real4 (u),\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_real4_val\n-\t\t\t\t\t   (ffebld_cu_val_real4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -4105,16 +3573,6 @@ ffeexpr_collapse_multiply (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_multiply_complex4 (ffebld_cu_ptr_complex4 (u),\n-\t\t\t       ffebld_constant_complex4 (ffebld_conter (l)),\n-\t\t\t      ffebld_constant_complex4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_complex4_val\n-\t\t\t\t\t(ffebld_cu_val_complex4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -4261,16 +3719,6 @@ ffeexpr_collapse_divide (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_divide_real4 (ffebld_cu_ptr_real4 (u),\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_real4_val\n-\t\t\t\t\t   (ffebld_cu_val_real4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -4310,16 +3758,6 @@ ffeexpr_collapse_divide (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_divide_complex4 (ffebld_cu_ptr_complex4 (u),\n-\t\t\t       ffebld_constant_complex4 (ffebld_conter (l)),\n-\t\t\t      ffebld_constant_complex4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_complex4_val\n-\t\t\t\t\t(ffebld_cu_val_complex4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -4563,39 +4001,6 @@ ffeexpr_collapse_concatenate (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_concatenate_character2 (ffebld_cu_ptr_character2 (u),\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (l)),\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (r)),\n-\t\t\t\t   ffebld_constant_pool (), &len);\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_character2_val\n-\t\t\t\t      (ffebld_cu_val_character2 (u)), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_concatenate_character3 (ffebld_cu_ptr_character3 (u),\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (l)),\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (r)),\n-\t\t\t\t   ffebld_constant_pool (), &len);\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_character3_val\n-\t\t\t\t      (ffebld_cu_val_character3 (u)), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_concatenate_character4 (ffebld_cu_ptr_character4 (u),\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (l)),\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (r)),\n-\t\t\t\t   ffebld_constant_pool (), &len);\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_character4_val\n-\t\t\t\t      (ffebld_cu_val_character4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -4740,16 +4145,6 @@ ffeexpr_collapse_eq (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_eq_real4 (&val,\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -4789,16 +4184,6 @@ ffeexpr_collapse_eq (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_eq_complex4 (&val,\n-\t\t\t       ffebld_constant_complex4 (ffebld_conter (l)),\n-\t\t\t      ffebld_constant_complex4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -4818,36 +4203,6 @@ ffeexpr_collapse_eq (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_eq_character2 (&val,\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character2 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_eq_character3 (&val,\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character3 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_eq_character4 (&val,\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -4992,16 +4347,6 @@ ffeexpr_collapse_ne (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_ne_real4 (&val,\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -5041,16 +4386,6 @@ ffeexpr_collapse_ne (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_ne_complex4 (&val,\n-\t\t\t       ffebld_constant_complex4 (ffebld_conter (l)),\n-\t\t\t      ffebld_constant_complex4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad complex kind type\" == NULL);\n \t  break;\n@@ -5070,36 +4405,6 @@ ffeexpr_collapse_ne (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_ne_character2 (&val,\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character2 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_ne_character3 (&val,\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character3 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_ne_character4 (&val,\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -5244,16 +4549,6 @@ ffeexpr_collapse_ge (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_ge_real4 (&val,\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -5273,36 +4568,6 @@ ffeexpr_collapse_ge (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_ge_character2 (&val,\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character2 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_ge_character3 (&val,\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character3 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_ge_character4 (&val,\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -5447,16 +4712,6 @@ ffeexpr_collapse_gt (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_gt_real4 (&val,\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -5476,36 +4731,6 @@ ffeexpr_collapse_gt (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_gt_character2 (&val,\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character2 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_gt_character3 (&val,\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character3 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_gt_character4 (&val,\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -5650,16 +4875,6 @@ ffeexpr_collapse_le (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_le_real4 (&val,\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -5679,36 +4894,6 @@ ffeexpr_collapse_le (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_le_character2 (&val,\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character2 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_le_character3 (&val,\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character3 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_le_character4 (&val,\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -5853,16 +5038,6 @@ ffeexpr_collapse_lt (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okREAL4\n-\tcase FFEINFO_kindtypeREAL4:\n-\t  error = ffetarget_lt_real4 (&val,\n-\t\t\t\t  ffebld_constant_real4 (ffebld_conter (l)),\n-\t\t\t\t ffebld_constant_real4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad real kind type\" == NULL);\n \t  break;\n@@ -5882,36 +5057,6 @@ ffeexpr_collapse_lt (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_lt_character2 (&val,\n-\t\t\t     ffebld_constant_character2 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character2 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_lt_character3 (&val,\n-\t\t\t     ffebld_constant_character3 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character3 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_lt_character4 (&val,\n-\t\t\t     ffebld_constant_character4 (ffebld_conter (l)),\n-\t\t\t    ffebld_constant_character4 (ffebld_conter (r)));\n-\t  expr = ffebld_new_conter_with_orig\n-\t    (ffebld_constant_new_logicaldefault (val), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -6906,36 +6051,6 @@ ffeexpr_collapse_substr (ffebld expr, ffelexToken t)\n \t  break;\n #endif\n \n-#if FFETARGET_okCHARACTER2\n-\tcase FFEINFO_kindtypeCHARACTER2:\n-\t  error = ffetarget_substr_character2 (ffebld_cu_ptr_character2 (u),\n-\t\tffebld_constant_character2 (ffebld_conter (l)), first, last,\n-\t\t\t\t   ffebld_constant_pool (), &len);\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_character2_val\n-\t\t\t\t      (ffebld_cu_val_character2 (u)), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER3\n-\tcase FFEINFO_kindtypeCHARACTER3:\n-\t  error = ffetarget_substr_character3 (ffebld_cu_ptr_character3 (u),\n-\t\tffebld_constant_character3 (ffebld_conter (l)), first, last,\n-\t\t\t\t   ffebld_constant_pool (), &len);\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_character3_val\n-\t\t\t\t      (ffebld_cu_val_character3 (u)), expr);\n-\t  break;\n-#endif\n-\n-#if FFETARGET_okCHARACTER4\n-\tcase FFEINFO_kindtypeCHARACTER4:\n-\t  error = ffetarget_substr_character4 (ffebld_cu_ptr_character4 (u),\n-\t\tffebld_constant_character4 (ffebld_conter (l)), first, last,\n-\t\t\t\t   ffebld_constant_pool (), &len);\n-\t  expr = ffebld_new_conter_with_orig (ffebld_constant_new_character4_val\n-\t\t\t\t      (ffebld_cu_val_character4 (u)), expr);\n-\t  break;\n-#endif\n-\n \tdefault:\n \t  assert (\"bad character kind type\" == NULL);\n \t  break;\n@@ -7666,17 +6781,6 @@ ffeexpr_cb_comma_c_ (ffelexToken ft, ffebld expr, ffelexToken t)\n       break;\n #endif\n \n-#if FFETARGET_okCOMPLEX4\n-    case FFEINFO_kindtypeREAL4:\n-      e->u.operand = ffebld_new_conter (ffebld_constant_new_complex4\n-\t      (ffebld_conter (ffeexpr_stack_->expr), ffebld_conter (expr)));\n-      ffebld_set_info (e->u.operand,\n-\t\t       ffeinfo_new (FFEINFO_basictypeCOMPLEX, nkt, 0,\n-\t\t\t\t  FFEINFO_kindENTITY, FFEINFO_whereCONSTANT,\n-\t\t\t\t    FFETARGET_charactersizeNONE));\n-      break;\n-#endif\n-\n     default:\n       if (ffebad_start ((nkt == FFEINFO_kindtypeREALDOUBLE)\n \t\t\t? FFEBAD_BAD_DBLCMPLX : FFEBAD_BAD_COMPLEX))\n@@ -8662,9 +7766,6 @@ ffeexpr_type_combine (ffeinfoBasictype *xnbt, ffeinfoKindtype *xnkt,\n #endif\n #if FFETARGET_okCOMPLEX3\n \tcase FFEINFO_kindtypeREAL3:\n-#endif\n-#if FFETARGET_okCOMPLEX4\n-\tcase FFEINFO_kindtypeREAL4:\n #endif\n \t  break;\t\t/* Fine and dandy. */\n "}, {"sha": "eff6ab9df40b59cbf2853e21dc5239f707153b52", "filename": "gcc/f/target.h", "status": "modified", "additions": 2, "deletions": 216, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22e494a0aec5a8385713d5522ea351e43fcea530/gcc%2Ff%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.h?ref=22e494a0aec5a8385713d5522ea351e43fcea530", "patch": "@@ -1,5 +1,6 @@\n /* target.h -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995, 1996, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2002, 2003\n+   Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -265,26 +266,6 @@ typedef short int ffetargetInteger3;\n typedef long long int ffetargetInteger4;\n #define ffetargetInteger4_f \"ll\"\n #endif\n-#if FFETARGET_okINTEGER5\n-typedef ? ffetargetInteger5;\n-#define ffetargetInteger5_f\n-?\n-#endif\n-#if FFETARGET_okINTEGER6\n-typedef ? ffetargetInteger6;\n-#define ffetargetInteger6_f\n-?\n-#endif\n-#if FFETARGET_okINTEGER7\n-typedef ? ffetargetInteger7;\n-#define ffetargetInteger7_f\n-?\n-#endif\n-#if FFETARGET_okINTEGER8\n-typedef ? ffetargetInteger8;\n-#define ffetargetInteger8_f\n-?\n-#endif\n #if FFETARGET_okLOGICAL1\n #ifdef FFETARGET_32bit_longs\n typedef long int ffetargetLogical1;\n@@ -306,26 +287,6 @@ typedef short int ffetargetLogical3;\n typedef long long int ffetargetLogical4;\n #define ffetargetLogical4_f \"ll\"\n #endif\n-#if FFETARGET_okLOGICAL5\n-typedef ? ffetargetLogical5;\n-#define ffetargetLogical5_f\n-?\n-#endif\n-#if FFETARGET_okLOGICAL6\n-typedef ? ffetargetLogical6;\n-#define ffetargetLogical6_f\n-?\n-#endif\n-#if FFETARGET_okLOGICAL7\n-typedef ? ffetargetLogical7;\n-#define ffetargetLogical7_f\n-?\n-#endif\n-#if FFETARGET_okLOGICAL8\n-typedef ? ffetargetLogical8;\n-#define ffetargetLogical8_f\n-?\n-#endif\n #if FFETARGET_okREAL1\n typedef int ffetargetReal1;\n #define ffetargetReal1_f \"\"\n@@ -356,26 +317,6 @@ typedef struct { int v[2]; } ffetargetReal2;\n typedef long ffetargetReal3[?];\n ?\n #endif\n-#if FFETARGET_okREAL4\n-typedef long ffetargetReal4[?];\n-?\n-#endif\n-#if FFETARGET_okREAL5\n-typedef long ffetargetReal5[?];\n-?\n-#endif\n-#if FFETARGET_okREAL6\n-typedef long ffetargetReal6[?];\n-?\n-#endif\n-#if FFETARGET_okREAL7\n-typedef long ffetargetReal7[?];\n-?\n-#endif\n-#if FFETARGET_okREAL8\n-typedef long ffetargetReal8[?];\n-?\n-#endif\n #if FFETARGET_okCOMPLEX1\n struct _ffetarget_complex_1_\n   {\n@@ -400,46 +341,6 @@ struct _ffetarget_complex_3_\n   };\n typedef struct _ffetarget_complex_3_ ffetargetComplex3;\n #endif\n-#if FFETARGET_okCOMPLEX4\n-struct _ffetarget_complex_4_\n-  {\n-    ffetargetReal4 real;\n-    ffetargetReal4 imaginary;\n-  };\n-typedef struct _ffetarget_complex_4_ ffetargetComplex4;\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-struct _ffetarget_complex_5_\n-  {\n-    ffetargetReal5 real;\n-    ffetargetReal5 imaginary;\n-  };\n-typedef struct _ffetarget_complex_5_ ffetargetComplex5;\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-struct _ffetarget_complex_6_\n-  {\n-    ffetargetReal6 real;\n-    ffetargetReal6 imaginary;\n-  };\n-typedef struct _ffetarget_complex_6_ ffetargetComplex6;\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-struct _ffetarget_complex_7_\n-  {\n-    ffetargetReal7 real;\n-    ffetargetReal7 imaginary;\n-  };\n-typedef struct _ffetarget_complex_7_ ffetargetComplex7;\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-struct _ffetarget_complex_8_\n-  {\n-    ffetargetReal8 real;\n-    ffetargetReal8 imaginary;\n-  };\n-typedef struct _ffetarget_complex_8_ ffetargetComplex8;\n-#endif\n #if FFETARGET_okCHARACTER1\n struct _ffetarget_char_1_\n   {\n@@ -449,34 +350,6 @@ struct _ffetarget_char_1_\n typedef struct _ffetarget_char_1_ ffetargetCharacter1;\n typedef unsigned char ffetargetCharacterUnit1;\n #endif\n-#if FFETARGET_okCHARACTER2\n-typedef ? ffetargetCharacter2;\n-typedef ? ffetargetCharacterUnit2;\n-#endif\n-#if FFETARGET_okCHARACTER3\n-typedef ? ffetargetCharacter3;\n-typedef ? ffetargetCharacterUnit3;\n-#endif\n-#if FFETARGET_okCHARACTER4\n-typedef ? ffetargetCharacter4;\n-typedef ? ffetargetCharacterUnit4;\n-#endif\n-#if FFETARGET_okCHARACTER5\n-typedef ? ffetargetCharacter5;\n-typedef ? ffetargetCharacterUnit5;\n-#endif\n-#if FFETARGET_okCHARACTER6\n-typedef ? ffetargetCharacter6;\n-typedef ? ffetargetCharacterUnit6;\n-#endif\n-#if FFETARGET_okCHARACTER7\n-typedef ? ffetargetCharacter7;\n-typedef ? ffetargetCharacterUnit7;\n-#endif\n-#if FFETARGET_okCHARACTER8\n-typedef ? ffetargetCharacter8;\n-typedef ? ffetargetCharacterUnit8;\n-#endif\n \n typedef unsigned long long int ffetargetTypeless;\n \n@@ -604,26 +477,6 @@ ffebad ffetarget_divide_complex2 (ffetargetComplex2 *res, ffetargetComplex2 l,\n ffebad ffetarget_divide_complex3 (ffetargetComplex3 *res, ffetargetComplex3 l,\n \t\t\t\t  ffetargetComplex3 r);\n #endif\n-#if FFETARGET_okCOMPLEX4\n-ffebad ffetarget_divide_complex4 (ffetargetComplex4 *res, ffetargetComplex4 l,\n-\t\t\t\t  ffetargetComplex4 r);\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-ffebad ffetarget_divide_complex5 (ffetargetComplex5 *res, ffetargetComplex5 l,\n-\t\t\t\t  ffetargetComplex5 r);\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-ffebad ffetarget_divide_complex6 (ffetargetComplex6 *res, ffetargetComplex6 l,\n-\t\t\t\t  ffetargetComplex6 r);\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-ffebad ffetarget_divide_complex7 (ffetargetComplex7 *res, ffetargetComplex7 l,\n-\t\t\t\t  ffetargetComplex7 r);\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-ffebad ffetarget_divide_complex8 (ffetargetComplex8 *res, ffetargetComplex8 l,\n-\t\t\t\t  ffetargetComplex8 r);\n-#endif\n #if FFETARGET_okINTEGER1\n bool ffetarget_integer1 (ffetargetInteger1 *val, ffelexToken integer);\n #endif\n@@ -636,18 +489,6 @@ bool ffetarget_integer3 (ffetargetInteger3 *val, ffelexToken integer);\n #if FFETARGET_okINTEGER4\n bool ffetarget_integer4 (ffetargetInteger4 *val, ffelexToken integer);\n #endif\n-#if FFETARGET_okINTEGER5\n-bool ffetarget_integer5 (ffetargetInteger5 *val, ffelexToken integer);\n-#endif\n-#if FFETARGET_okINTEGER6\n-bool ffetarget_integer6 (ffetargetInteger6 *val, ffelexToken integer);\n-#endif\n-#if FFETARGET_okINTEGER7\n-bool ffetarget_integer7 (ffetargetInteger7 *val, ffelexToken integer);\n-#endif\n-#if FFETARGET_okINTEGER8\n-bool ffetarget_integer8 (ffetargetInteger8 *val, ffelexToken integer);\n-#endif\n bool ffetarget_integerbinary (ffetargetIntegerDefault *val,\n \t\t\t     ffelexToken integer);\n bool ffetarget_integerhex (ffetargetIntegerDefault *val,\n@@ -686,31 +527,6 @@ ffebad ffetarget_multiply_complex3 (ffetargetComplex3 *res,\n \t\t\t\t    ffetargetComplex3 l,\n \t\t\t\t    ffetargetComplex3 r);\n #endif\n-#if FFETARGET_okCOMPLEX4\n-ffebad ffetarget_multiply_complex4 (ffetargetComplex4 *res,\n-\t\t\t\t    ffetargetComplex4 l,\n-\t\t\t\t    ffetargetComplex4 r);\n-#endif\n-#if FFETARGET_okCOMPLEX5\n-ffebad ffetarget_multiply_complex5 (ffetargetComplex5 *res,\n-\t\t\t\t    ffetargetComplex5 l,\n-\t\t\t\t    ffetargetComplex5 r);\n-#endif\n-#if FFETARGET_okCOMPLEX6\n-ffebad ffetarget_multiply_complex6 (ffetargetComplex6 *res,\n-\t\t\t\t    ffetargetComplex6 l,\n-\t\t\t\t    ffetargetComplex6 r);\n-#endif\n-#if FFETARGET_okCOMPLEX7\n-ffebad ffetarget_multiply_complex7 (ffetargetComplex7 *res,\n-\t\t\t\t    ffetargetComplex7 l,\n-\t\t\t\t    ffetargetComplex7 r);\n-#endif\n-#if FFETARGET_okCOMPLEX8\n-ffebad ffetarget_multiply_complex8 (ffetargetComplex8 *res,\n-\t\t\t\t    ffetargetComplex8 l,\n-\t\t\t\t    ffetargetComplex8 r);\n-#endif\n ffebad ffetarget_power_complexdefault_integerdefault (ffetargetComplexDefault *res,\n \t\t\t\t\t\t  ffetargetComplexDefault l,\n \t\t\t\t\t\t ffetargetIntegerDefault r);\n@@ -751,36 +567,6 @@ bool ffetarget_real3 (ffetargetReal3 *value, ffelexToken integer,\n \t\t      ffelexToken exponent, ffelexToken exponent_sign,\n \t\t      ffelexToken exponent_digits);\n #endif\n-#if FFETARGET_okREAL4\n-bool ffetarget_real4 (ffetargetReal4 *value, ffelexToken integer,\n-\t\t      ffelexToken decimal, ffelexToken fraction,\n-\t\t      ffelexToken exponent, ffelexToken exponent_sign,\n-\t\t      ffelexToken exponent_digits);\n-#endif\n-#if FFETARGET_okREAL5\n-bool ffetarget_real5 (ffetargetReal5 *value, ffelexToken integer,\n-\t\t      ffelexToken decimal, ffelexToken fraction,\n-\t\t      ffelexToken exponent, ffelexToken exponent_sign,\n-\t\t      ffelexToken exponent_digits);\n-#endif\n-#if FFETARGET_okREAL6\n-bool ffetarget_real6 (ffetargetReal6 *value, ffelexToken integer,\n-\t\t      ffelexToken decimal, ffelexToken fraction,\n-\t\t      ffelexToken exponent, ffelexToken exponent_sign,\n-\t\t      ffelexToken exponent_digits);\n-#endif\n-#if FFETARGET_okREAL7\n-bool ffetarget_real7 (ffetargetReal7 *value, ffelexToken integer,\n-\t\t      ffelexToken decimal, ffelexToken fraction,\n-\t\t      ffelexToken exponent, ffelexToken exponent_sign,\n-\t\t      ffelexToken exponent_digits);\n-#endif\n-#if FFETARGET_okREAL8\n-bool ffetarget_real8 (ffetargetReal8 *value, ffelexToken integer,\n-\t\t      ffelexToken decimal, ffelexToken fraction,\n-\t\t      ffelexToken exponent, ffelexToken exponent_sign,\n-\t\t      ffelexToken exponent_digits);\n-#endif\n bool ffetarget_typeless_binary (ffetargetTypeless *value, ffelexToken token);\n bool ffetarget_typeless_octal (ffetargetTypeless *value, ffelexToken token);\n bool ffetarget_typeless_hex (ffetargetTypeless *value, ffelexToken token);"}]}