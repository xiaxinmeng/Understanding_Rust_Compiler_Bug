{"sha": "eb10bc5225e03c32175b32c4778e937e64f7ddaa", "node_id": "C_kwDOANBUbNoAKGViMTBiYzUyMjVlMDNjMzIxNzViMzJjNDc3OGU5MzdlNjRmN2RkYWE", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-08-23T15:26:01Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-12-13T13:00:05Z"}, "message": "gccrs: Add Base62 implementation\n\nUsed for V0 symbol mangling scheme which is still in development.\n\n\tgcc/rust/\n\t* util/rust-base62.cc: New.\n\t* util/rust-base62.h: New.", "tree": {"sha": "4fdcbb2f4aaf83be4dfc20799a76085026b3726c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fdcbb2f4aaf83be4dfc20799a76085026b3726c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb10bc5225e03c32175b32c4778e937e64f7ddaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb10bc5225e03c32175b32c4778e937e64f7ddaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb10bc5225e03c32175b32c4778e937e64f7ddaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb10bc5225e03c32175b32c4778e937e64f7ddaa/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15b0278905ed80413867ad78868a597dd7227170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15b0278905ed80413867ad78868a597dd7227170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15b0278905ed80413867ad78868a597dd7227170"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "bdab23338c3dfa5a2864775c00534621412e0649", "filename": "gcc/rust/util/rust-base62.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb10bc5225e03c32175b32c4778e937e64f7ddaa/gcc%2Frust%2Futil%2Frust-base62.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb10bc5225e03c32175b32c4778e937e64f7ddaa/gcc%2Frust%2Futil%2Frust-base62.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-base62.cc?ref=eb10bc5225e03c32175b32c4778e937e64f7ddaa", "patch": "@@ -0,0 +1,46 @@\n+// Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"rust-base62.h\"\n+\n+namespace Rust {\n+\n+std::string\n+base62_integer (uint64_t value)\n+{\n+  const static std::string base_64\n+    = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@$\";\n+  std::string buffer (128, '\\0');\n+  size_t idx = 0;\n+  size_t base = 62;\n+\n+  do\n+    {\n+      buffer[idx] = base_64[(value % base)];\n+      idx++;\n+      value = value / base;\n+    }\n+  while (value != 0);\n+\n+  std::reverse (buffer.begin (), buffer.begin () + idx);\n+  return buffer.substr (0, idx);\n+}\n+\n+} // namespace Rust\n+\n+// FIXME: Add unit testing using the selftest framework"}, {"sha": "fa610d3e5a4ee74f094702f2943fffc090f97e0a", "filename": "gcc/rust/util/rust-base62.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb10bc5225e03c32175b32c4778e937e64f7ddaa/gcc%2Frust%2Futil%2Frust-base62.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb10bc5225e03c32175b32c4778e937e64f7ddaa/gcc%2Frust%2Futil%2Frust-base62.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-base62.h?ref=eb10bc5225e03c32175b32c4778e937e64f7ddaa", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef RUST_BASE62_H\n+#define RUST_BASE62_H\n+\n+#include \"rust-system.h\"\n+\n+namespace Rust {\n+\n+/**\n+ * Get the Base62 representation of an integer\n+ */\n+std::string\n+base62_integer (uint64_t value);\n+\n+} // namespace Rust\n+\n+#endif /* !RUST_BASE62_H */"}]}