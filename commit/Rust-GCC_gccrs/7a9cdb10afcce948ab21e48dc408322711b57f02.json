{"sha": "7a9cdb10afcce948ab21e48dc408322711b57f02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5Y2RiMTBhZmNjZTk0OGFiMjFlNDhkYzQwODMyMjcxMWI1N2YwMg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2003-03-22T21:51:04Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2003-03-22T21:51:04Z"}, "message": "fix Solaris 2.6 initializers\n\nCo-Authored-By: Bruce Korb <bkorb@gnu.org>\n\nFrom-SVN: r64727", "tree": {"sha": "353ba55de71b13b134144820af7d151c3847a805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/353ba55de71b13b134144820af7d151c3847a805"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a9cdb10afcce948ab21e48dc408322711b57f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9cdb10afcce948ab21e48dc408322711b57f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a9cdb10afcce948ab21e48dc408322711b57f02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9cdb10afcce948ab21e48dc408322711b57f02/comments", "author": null, "committer": null, "parents": [{"sha": "8330e2c64280df20604dceb1a159452735ffaa02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8330e2c64280df20604dceb1a159452735ffaa02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8330e2c64280df20604dceb1a159452735ffaa02"}], "stats": {"total": 237, "additions": 163, "deletions": 74}, "files": [{"sha": "58e6a45c9689771b35bd90a6aa6a20139fde931d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a9cdb10afcce948ab21e48dc408322711b57f02", "patch": "@@ -1,3 +1,12 @@\n+2003-03-22  DJ Delorie  <dj at redhat dot com>,\n+\tBruce Korb  <bkorb at gnu dot org>\n+\n+\t* fixinc/inclhack.def (solaris_mutex_init_1): New; Fix\n+\tbuggy Solaris 2.6 mutex/cond initializers.\n+\t(solaris_mutex_init): Rename to solaris_mutex_init_2.\n+\t* fixinc/fixincl.x: Regenerate.\n+\t* fixinc/tests/base/pthread.h: Update.\n+\n 2003-03-22  Andreas Jaeger  <aj@suse.de>\n \n \t* config/i386/i386.c (ix86_init_machine_status): Return value."}, {"sha": "bc5e4b8732f73c0c396a17e0247617e036623883", "filename": "gcc/fixinc/check.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.tpl?ref=7a9cdb10afcce948ab21e48dc408322711b57f02", "patch": "@@ -17,7 +17,7 @@ TARGET_MACHINE='*'\n DESTDIR=`${PWDCMD-pwd}`/res\n SRCDIR=`${PWDCMD-pwd}`/inc\n FIND_BASE='.'\n-VERBOSE=1\n+VERBOSE=[=` echo ${VERBOSE-1} `=]\n INPUT=`${PWDCMD-pwd}`\n ORIGDIR=${INPUT}\n "}, {"sha": "cd3303ac3491a1298c415a996dc99612289a1018", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=7a9cdb10afcce948ab21e48dc408322711b57f02", "patch": "@@ -284,6 +284,7 @@ ENV_TABLE\n     case 'A':\n       verbose_level = VERB_APPLIES;    break;\n \n+    default:\n     case 'p':\n     case 'P':\n       verbose_level = VERB_PROGRESS;   break;\n@@ -296,11 +297,14 @@ ENV_TABLE\n     case 'E':\n       verbose_level = VERB_EVERYTHING; break;\n     }\n-\n- while ((pz_find_base[0] == '.') && (pz_find_base[1] == '/'))\n-   pz_find_base += 2;\n- if ((pz_find_base[0] != '.') || (pz_find_base[1] != NUL))\n-   find_base_len = strlen( pz_find_base );\n+  if (verbose_level >= VERB_EVERYTHING) {\n+    verbose_level = VERB_EVERYTHING;\n+    fputs (\"fixinc verbosity:  EVERYTHING\\n\", stderr);\n+  }\n+  while ((pz_find_base[0] == '.') && (pz_find_base[1] == '/'))\n+    pz_find_base += 2;\n+  if ((pz_find_base[0] != '.') || (pz_find_base[1] != NUL))\n+    find_base_len = strlen( pz_find_base );\n \n   /*  Compile all the regular expressions now.\n       That way, it is done only once for the whole run."}, {"sha": "79bea142b64b5ba240d2b9af4971cb81ace00d43", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 106, "deletions": 65, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=7a9cdb10afcce948ab21e48dc408322711b57f02", "patch": "@@ -5,7 +5,7 @@\n  * files which are fixed to work correctly with ANSI C and placed in a\n  * directory that GNU C will search.\n  *\n- * This file contains 147 fixup descriptions.\n+ * This file contains 148 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2336,6 +2336,46 @@ static const char* apzIp_Missing_SemiPatch[] = { \"sed\",\n     \"-e\", \"/^struct/,/^};/s/}$/};/\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Irix___Restrict fix\n+ */\n+tSCC zIrix___RestrictName[] =\n+     \"irix___restrict\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zIrix___RestrictList[] =\n+  \"|internal/sgimacros.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzIrix___RestrictMachs[] = {\n+        \"mips-sgi-irix6.5\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zIrix___RestrictSelect0[] =\n+       \"(#ifdef __c99\\n\\\n+)(#[ \\t]*define __restrict restrict)\";\n+\n+#define    IRIX___RESTRICT_TEST_CT  1\n+static tTestDesc aIrix___RestrictTests[] = {\n+  { TT_EGREP,    zIrix___RestrictSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Irix___Restrict\n+ */\n+static const char* apzIrix___RestrictPatch[] = {\n+    \"format\",\n+    \"%1#  ifndef __cplusplus\\n\\\n+%2\\n\\\n+#  endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Irix_Asm_Apostrophe fix\n@@ -2407,46 +2447,6 @@ static const char* apzIrix_Limits_ConstPatch[] = {\n     \"extern __const \",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Irix___Restrict fix\n- */\n-tSCC zIrix___RestrictName[] =\n-     \"irix___restrict\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zIrix___RestrictList[] =\n-  \"|internal/sgimacros.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzIrix___RestrictMachs[] = {\n-        \"mips-sgi-irix6.5\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zIrix___RestrictSelect0[] =\n-       \"(#ifdef __c99\\n\\\n-)(#[ \\t]*define __restrict restrict)\";\n-\n-#define    IRIX___RESTRICT_TEST_CT  1\n-static tTestDesc aIrix___RestrictTests[] = {\n-  { TT_EGREP,    zIrix___RestrictSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Irix___Restrict\n- */\n-static const char* apzIrix___RestrictPatch[] = {\n-    \"format\",\n-    \"%1#  ifndef __cplusplus\\n\\\n-%2\\n\\\n-#  endif\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Irix_Socklen_T fix\n@@ -3749,35 +3749,70 @@ static const char* apzSco_UtimePatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Solaris_Mutex_Init fix\n+ *  Description of Solaris_Mutex_Init_1 fix\n  */\n-tSCC zSolaris_Mutex_InitName[] =\n-     \"solaris_mutex_init\";\n+tSCC zSolaris_Mutex_Init_1Name[] =\n+     \"solaris_mutex_init_1\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zSolaris_Mutex_InitList[] =\n+tSCC zSolaris_Mutex_Init_1List[] =\n   \"|pthread.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzSolaris_Mutex_InitMachs (const char**)NULL\n+#define apzSolaris_Mutex_Init_1Machs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zSolaris_Mutex_InitSelect0[] =\n+tSCC zSolaris_Mutex_Init_1Select0[] =\n+       \"@\\\\(#\\\\)pthread.h[ \\t]+1.1[0-9][ \\t]+97/[0-9/]+ SMI\";\n+\n+#define    SOLARIS_MUTEX_INIT_1_TEST_CT  1\n+static tTestDesc aSolaris_Mutex_Init_1Tests[] = {\n+  { TT_EGREP,    zSolaris_Mutex_Init_1Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Mutex_Init_1\n+ */\n+static const char* apzSolaris_Mutex_Init_1Patch[] = { \"sed\",\n+    \"-e\", \"/define[ \\t]*PTHREAD_MUTEX_INI/s/{0, 0,/{{{0}, 0}, {{{0}}},/\\n\\\n+/define[ \\t]*PTHREAD_COND_INI/s/{0,/{{{0},0},/\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Mutex_Init_2 fix\n+ */\n+tSCC zSolaris_Mutex_Init_2Name[] =\n+     \"solaris_mutex_init_2\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_Mutex_Init_2List[] =\n+  \"|pthread.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzSolaris_Mutex_Init_2Machs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris_Mutex_Init_2Select0[] =\n        \"@\\\\(#\\\\)pthread.h[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n \n-#define    SOLARIS_MUTEX_INIT_TEST_CT  1\n-static tTestDesc aSolaris_Mutex_InitTests[] = {\n-  { TT_EGREP,    zSolaris_Mutex_InitSelect0, (regex_t*)NULL }, };\n+#define    SOLARIS_MUTEX_INIT_2_TEST_CT  1\n+static tTestDesc aSolaris_Mutex_Init_2Tests[] = {\n+  { TT_EGREP,    zSolaris_Mutex_Init_2Select0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Solaris_Mutex_Init\n+ *  Fix Command Arguments for Solaris_Mutex_Init_2\n  */\n-static const char* apzSolaris_Mutex_InitPatch[] = {\n+static const char* apzSolaris_Mutex_Init_2Patch[] = {\n     \"format\",\n     \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\\\n %0\\n\\\n@@ -5803,9 +5838,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          159\n+#define REGEX_COUNT          160\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            147\n+#define FIX_COUNT            148\n \n /*\n  *  Enumerate the fixes\n@@ -5867,9 +5902,9 @@ typedef enum {\n     IO_QUOTES_DEF_FIXIDX,\n     IO_QUOTES_USE_FIXIDX,\n     IP_MISSING_SEMI_FIXIDX,\n+    IRIX___RESTRICT_FIXIDX,\n     IRIX_ASM_APOSTROPHE_FIXIDX,\n     IRIX_LIMITS_CONST_FIXIDX,\n-    IRIX___RESTRICT_FIXIDX,\n     IRIX_SOCKLEN_T_FIXIDX,\n     IRIX_STDIO_VA_LIST_FIXIDX,\n     IRIX_WCSFTIME_FIXIDX,\n@@ -5904,7 +5939,8 @@ typedef enum {\n     RS6000_PARAM_FIXIDX,\n     SCO_STATIC_FUNC_FIXIDX,\n     SCO_UTIME_FIXIDX,\n-    SOLARIS_MUTEX_INIT_FIXIDX,\n+    SOLARIS_MUTEX_INIT_1_FIXIDX,\n+    SOLARIS_MUTEX_INIT_2_FIXIDX,\n     SOLARIS_STDIO_TAG_FIXIDX,\n     SOLARIS_WIDEC_FIXIDX,\n     STATSSWTCH_FIXIDX,\n@@ -6241,6 +6277,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      IP_MISSING_SEMI_TEST_CT, FD_MACH_ONLY,\n      aIp_Missing_SemiTests,   apzIp_Missing_SemiPatch, 0 },\n \n+  {  zIrix___RestrictName,    zIrix___RestrictList,\n+     apzIrix___RestrictMachs,\n+     IRIX___RESTRICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aIrix___RestrictTests,   apzIrix___RestrictPatch, 0 },\n+\n   {  zIrix_Asm_ApostropheName,    zIrix_Asm_ApostropheList,\n      apzIrix_Asm_ApostropheMachs,\n      IRIX_ASM_APOSTROPHE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -6251,11 +6292,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      IRIX_LIMITS_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aIrix_Limits_ConstTests,   apzIrix_Limits_ConstPatch, 0 },\n \n-  {  zIrix___RestrictName,    zIrix___RestrictList,\n-     apzIrix___RestrictMachs,\n-     IRIX___RESTRICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aIrix___RestrictTests,   apzIrix___RestrictPatch, 0 },\n-\n   {  zIrix_Socklen_TName,    zIrix_Socklen_TList,\n      apzIrix_Socklen_TMachs,\n      IRIX_SOCKLEN_T_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -6426,10 +6462,15 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SCO_UTIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSco_UtimeTests,   apzSco_UtimePatch, 0 },\n \n-  {  zSolaris_Mutex_InitName,    zSolaris_Mutex_InitList,\n-     apzSolaris_Mutex_InitMachs,\n-     SOLARIS_MUTEX_INIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aSolaris_Mutex_InitTests,   apzSolaris_Mutex_InitPatch, 0 },\n+  {  zSolaris_Mutex_Init_1Name,    zSolaris_Mutex_Init_1List,\n+     apzSolaris_Mutex_Init_1Machs,\n+     SOLARIS_MUTEX_INIT_1_TEST_CT, FD_MACH_ONLY,\n+     aSolaris_Mutex_Init_1Tests,   apzSolaris_Mutex_Init_1Patch, 0 },\n+\n+  {  zSolaris_Mutex_Init_2Name,    zSolaris_Mutex_Init_2List,\n+     apzSolaris_Mutex_Init_2Machs,\n+     SOLARIS_MUTEX_INIT_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris_Mutex_Init_2Tests,   apzSolaris_Mutex_Init_2Patch, 0 },\n \n   {  zSolaris_Stdio_TagName,    zSolaris_Stdio_TagList,\n      apzSolaris_Stdio_TagMachs,"}, {"sha": "5ceadfb1a3230abd8c7c668e67bc074b9a96f00b", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=7a9cdb10afcce948ab21e48dc408322711b57f02", "patch": "@@ -2056,6 +2056,25 @@ fix = {\n };\n \n \n+/*\n+ *  Sun Solaris 2.6 defines PTHREAD_{MUTEX|COND}_INITIALIZER incorrectly,\n+ *  so we replace them with versions that correspond to the definition.  We\n+ *  also explicitly name this fix \"1\" and the next fix \"2\" because this one\n+ *  does not deal with the last field.  This fix needs to run before the next.\n+ */\n+fix = {\n+    hackname = solaris_mutex_init_1;\n+    select = '@\\(#\\)pthread.h' \"[ \\t]+1.1[0-9][ \\t]+97/[0-9/]+ SMI\";\n+    files = pthread.h;\n+    sed   = \"/define[ \\t]*PTHREAD_MUTEX_INI/s/{0, 0,/{{{0}, 0}, {{{0}}},/\\n\"\n+            \"/define[ \\t]*PTHREAD_COND_INI/s/{0,/{{{0},0},/\";\n+    test_text =\n+    '#ident \"@(#)pthread.h  1.16    97/05/05 SMI\"'\"\\n\"\n+    \"#define PTHREAD_MUTEX_INITIALIZER\\t{0, 0, 0}\\n\"\n+    \"#define PTHREAD_COND_INITIALIZER\\t{0, 0} /* */\\n\";\n+};\n+\n+\n /*\n  * Sun Solaris defines PTHREAD_MUTEX_INITIALIZER with a trailing\n  * \"0\" for the last field of the pthread_mutex_t structure, which is\n@@ -2064,7 +2083,7 @@ fix = {\n  * initializer to \"{0}\" instead\n  */\n fix = {\n-    hackname = solaris_mutex_init;\n+    hackname = solaris_mutex_init_2;\n     select = '@\\(#\\)pthread.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n     files = pthread.h;\n     c_fix = format;"}, {"sha": "ec7ff351f45cc01c704563ba9e0a4fe6150eb3b4", "filename": "gcc/fixinc/tests/base/pthread.h", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9cdb10afcce948ab21e48dc408322711b57f02/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fpthread.h?ref=7a9cdb10afcce948ab21e48dc408322711b57f02", "patch": "@@ -20,7 +20,23 @@ extern int __page_size;\n #endif  /* PTHREAD_PAGE_SIZE_CHECK */\n \n \n-#if defined( SOLARIS_MUTEX_INIT_CHECK )\n+#if defined( SOLARIS_MUTEX_INIT_1_CHECK )\n+#ident \"@(#)pthread.h  1.16    97/05/05 SMI\"\n+#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\n+#define PTHREAD_MUTEX_INITIALIZER\t{{{0}, 0}, {{{0}}}, 0}\n+#else\n+#define PTHREAD_MUTEX_INITIALIZER\t{{{0}, 0}, {{{0}}}, {0}}\n+#endif\n+#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\n+#define PTHREAD_COND_INITIALIZER\t{{{0},0}, 0} /* */\n+#else\n+#define PTHREAD_COND_INITIALIZER\t{{{0},0}, {0}} /* */\n+#endif\n+\n+#endif  /* SOLARIS_MUTEX_INIT_1_CHECK */\n+\n+\n+#if defined( SOLARIS_MUTEX_INIT_2_CHECK )\n #ident \"@(#)pthread.h  1.26  98/04/12 SMI\"\n #if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\n #define PTHREAD_MUTEX_INITIALIZER\t{{{0},0}, {{{0}}}, 0}\n@@ -33,7 +49,7 @@ extern int __page_size;\n #define PTHREAD_COND_INITIALIZER\t{{{0}, 0}, {0}}\t/* DEFAULTCV */\n #endif\n #define PTHREAD_RWLOCK_INITIALIZER\t{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\n-#endif  /* SOLARIS_MUTEX_INIT_CHECK */\n+#endif  /* SOLARIS_MUTEX_INIT_2_CHECK */\n \n \n #if defined( THREAD_KEYWORD_CHECK )"}]}