{"sha": "86db887aa6ae4c19c134d909899d3fc92781f737", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkYjg4N2FhNmFlNGMxOWMxMzRkOTA5ODk5ZDNmYzkyNzgxZjczNw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-06-27T22:58:37Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-06-27T22:58:37Z"}, "message": "re PR other/31400 (enable static linking of support libraries through -static-libXY)\n\n\tPR other/31400\n\n\t* gcc.c (process_command): Recognize the new -static-libgfortran\n\toption.\n\n\t* lang.opt (static-libgfortran): New option.\n\t* gfortranspec.c (ADD_ARG_LIBGFORTRAN): New macro.\n\t(Option): Add OPTION_static and OPTION_static_libgfortran.\n\t(lookup_option): Handle the new -static-libgfortran option.\n\t(lang_specific_driver): Check whether -static is passed.\n\tHandle the new -static-libgfortran option.\n\t* options.c (gfc_handle_option): If -static-libgfortran is\n\tpassed and isn't supported on this configuration, error out.\n\nFrom-SVN: r126068", "tree": {"sha": "a925f05a83569d4de9cc60c8b6dcf3ff583b607b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a925f05a83569d4de9cc60c8b6dcf3ff583b607b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86db887aa6ae4c19c134d909899d3fc92781f737", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86db887aa6ae4c19c134d909899d3fc92781f737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86db887aa6ae4c19c134d909899d3fc92781f737", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86db887aa6ae4c19c134d909899d3fc92781f737/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99920b6fbb5bb6006955dd497d40b666fb502216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99920b6fbb5bb6006955dd497d40b666fb502216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99920b6fbb5bb6006955dd497d40b666fb502216"}], "stats": {"total": 79, "additions": 74, "deletions": 5}, "files": [{"sha": "174f39ed6d74fcb4832eb529ef7557abd05af0ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86db887aa6ae4c19c134d909899d3fc92781f737", "patch": "@@ -1,3 +1,9 @@\n+2007-06-28 Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>\n+\n+\tPR other/31400\n+\t* gcc.c (process_command): Recognize the new -static-libgfortran\n+\toption.\n+\n 2007-06-27  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR target/32418"}, {"sha": "d8be930431653d6108b809034f9a4513560ffbcc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=86db887aa6ae4c19c134d909899d3fc92781f737", "patch": "@@ -1,3 +1,15 @@\n+2007-06-28 Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>\n+\n+\tPR other/31400\n+\t* lang.opt (static-libgfortran): New option.\n+\t* gfortranspec.c (ADD_ARG_LIBGFORTRAN): New macro.\n+\t(Option): Add OPTION_static and OPTION_static_libgfortran.\n+\t(lookup_option): Handle the new -static-libgfortran option.\n+\t(lang_specific_driver): Check whether -static is passed.\n+\tHandle the new -static-libgfortran option.\n+\t* options.c (gfc_handle_option): If -static-libgfortran is\n+\tpassed and isn't supported on this configuration, error out.\n+\n 2007-06-27  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/32467"}, {"sha": "5cc3e1520ca796c36a06618ac5791ecc0e7e3657", "filename": "gcc/fortran/gfortranspec.c", "status": "modified", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2Fgfortranspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2Fgfortranspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortranspec.c?ref=86db887aa6ae4c19c134d909899d3fc92781f737", "patch": "@@ -66,6 +66,20 @@ Boston, MA 02110-1301, USA.  */\n #define FORTRAN_LIBRARY \"-lgfortran\"\n #endif\n \n+#ifdef HAVE_LD_STATIC_DYNAMIC\n+#define ADD_ARG_LIBGFORTRAN(arg) \\\n+  { \\\n+    if (static_lib && !static_linking) \\\n+      append_arg (\"-Wl,-Bstatic\"); \\\n+    append_arg (arg); \\\n+    if (static_lib && !static_linking) \\\n+      append_arg (\"-Wl,-Bdynamic\"); \\\n+  }\n+#else\n+#define ADD_ARG_LIBGFORTRAN(arg) append_arg (arg);\n+#endif\n+\n+\n /* Options this driver needs to recognize, not just know how to\n    skip over.  */\n typedef enum\n@@ -82,6 +96,8 @@ typedef enum\n \t\t\t\t   -nodefaultlibs.  */\n   OPTION_o,\t\t\t/* Aka --output.  */\n   OPTION_S,\t\t\t/* Aka --assemble.  */\n+  OPTION_static,\t\t/* -static.  */\n+  OPTION_static_libgfortran,\t/* -static-libgfortran.  */\n   OPTION_syntax_only,\t\t/* -fsyntax-only.  */\n   OPTION_v,\t\t\t/* Aka --verbose.  */\n   OPTION_version,\t\t/* --version.  */\n@@ -170,6 +186,8 @@ lookup_option (Option *xopt, int *xskip, const char **xarg, const char *text)\n \topt = OPTION_nostdlib;\n       else if (!strcmp (text, \"-fsyntax-only\"))\n \topt = OPTION_syntax_only;\n+      else if (!strcmp (text, \"-static-libgfortran\"))\n+\topt = OPTION_static_libgfortran;\n       else if (!strcmp (text, \"-dumpversion\"))\n \topt = OPTION_version;\n       else if (!strcmp (text, \"-fversion\"))\t/* Really --version!! */\n@@ -265,6 +283,12 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   /* By default, we throw on the math library if we have one.  */\n   int need_math = (MATH_LIBRARY[0] != '\\0');\n \n+  /* Whether we should link a static libgfortran.  */\n+  int static_lib = 0;\n+\n+  /* Whether we need to link statically.  */\n+  int static_linking = 0;\n+\n   /* The number of input and output files in the incoming arg list.  */\n   int n_infiles = 0;\n   int n_outfiles = 0;\n@@ -323,6 +347,13 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n \t  library = 0;\n \t  break;\n \n+\tcase OPTION_static_libgfortran:\n+\t  static_lib = 1;\n+\t  break;\n+\n+\tcase OPTION_static:\n+\t  static_linking = 1;\n+\n \tcase OPTION_l:\n \t  ++n_infiles;\n \t  break;\n@@ -468,11 +499,16 @@ For more information about these matters, see the file named COPYING\\n\\n\"));\n \t\t      append_arg (FORTRAN_INIT);\n \t\t      use_init = 1;\n \t\t    }\n-\t\t  append_arg (FORTRAN_LIBRARY);\n+\n+\t\t  ADD_ARG_LIBGFORTRAN (FORTRAN_LIBRARY);\n \t\t}\n \t    }\n \t  else if (strcmp (argv[i], FORTRAN_LIBRARY) == 0)\n-\t    saw_library = 1;\t/* -l<library>.  */\n+\t    {\n+\t      saw_library = 1;\t/* -l<library>.  */\n+\t      ADD_ARG_LIBGFORTRAN (argv[i]);\n+\t      continue;\n+\t    }\n \t  else\n \t    {\t\t\t/* Other library, or filename.  */\n \t      if (saw_library == 1 && need_math)\n@@ -498,7 +534,9 @@ For more information about these matters, see the file named COPYING\\n\\n\"));\n \t      append_arg (FORTRAN_INIT);\n \t      use_init = 1;\n \t    }\n-\t  append_arg (library);\n+\t  ADD_ARG_LIBGFORTRAN (library);\n+\t  /* Fall through.  */\n+\n \tcase 1:\n \t  if (need_math)\n \t    append_arg (MATH_LIBRARY);"}, {"sha": "f5385a165998c2519ad95431cf99cf98e7ddac60", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=86db887aa6ae4c19c134d909899d3fc92781f737", "patch": "@@ -253,6 +253,10 @@ funderscoring\n Fortran\n Append underscores to externally visible names\n \n+static-libgfortran\n+Fortran\n+Statically link the GNU Fortran helper library (libgfortran)\n+\n std=f2003\n Fortran\n Conform to the ISO Fortran 2003 standard"}, {"sha": "50f5e9400ac068e9eb79c21d295216a5ce01230a", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=86db887aa6ae4c19c134d909899d3fc92781f737", "patch": "@@ -551,6 +551,13 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.flag_second_underscore = value;\n       break;\n \n+    case OPT_static_libgfortran:\n+#ifndef HAVE_LD_STATIC_DYNAMIC\n+      gfc_fatal_error (\"-static-libgfortran is not supported in this \"\n+\t\t       \"configuration\");\n+#endif\n+      break;\n+\n     case OPT_fimplicit_none:\n       gfc_option.flag_implicit_none = value;\n       break;"}, {"sha": "32fb21bfaff7348e9fd4a235aa3f37c603653fb1", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86db887aa6ae4c19c134d909899d3fc92781f737/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=86db887aa6ae4c19c134d909899d3fc92781f737", "patch": "@@ -4214,11 +4214,13 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t  switches[n_switches].live_cond = SWITCH_OK;\n \t  switches[n_switches].validated = 0;\n \t  switches[n_switches].ordering = 0;\n-\t  /* These are always valid, since gcc.c itself understands them.  */\n+\t  /* These are always valid, since gcc.c itself understands the\n+\t     first four and gfortranspec.c understands -static-libgfortran.  */\n \t  if (!strcmp (p, \"save-temps\")\n \t      || !strcmp (p, \"static-libgcc\")\n \t      || !strcmp (p, \"shared-libgcc\")\n-\t      || !strcmp (p, \"pipe\"))\n+\t      || !strcmp (p, \"pipe\")\n+\t      || !strcmp (p, \"static-libgfortran\"))\n \t    switches[n_switches].validated = 1;\n \t  else\n \t    {"}]}