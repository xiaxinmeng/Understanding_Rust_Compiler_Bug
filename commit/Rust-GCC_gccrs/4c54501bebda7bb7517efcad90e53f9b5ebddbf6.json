{"sha": "4c54501bebda7bb7517efcad90e53f9b5ebddbf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM1NDUwMWJlYmRhN2JiNzUxN2VmY2FkOTBlNTNmOWI1ZWJkZGJmNg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2005-03-26T18:33:53Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-03-26T18:33:53Z"}, "message": "Fix illogical logic.\n\nFrom-SVN: r97082", "tree": {"sha": "210151a42decaa567f7ebabb0096919bbeb64b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/210151a42decaa567f7ebabb0096919bbeb64b5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c54501bebda7bb7517efcad90e53f9b5ebddbf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c54501bebda7bb7517efcad90e53f9b5ebddbf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c54501bebda7bb7517efcad90e53f9b5ebddbf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c54501bebda7bb7517efcad90e53f9b5ebddbf6/comments", "author": null, "committer": null, "parents": [{"sha": "d7b1468bf39286cfb5b7be86e87af3bea4e3b812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b1468bf39286cfb5b7be86e87af3bea4e3b812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b1468bf39286cfb5b7be86e87af3bea4e3b812"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "04b9e40f8d2d3810ace3262e14953701981405b5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c54501bebda7bb7517efcad90e53f9b5ebddbf6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c54501bebda7bb7517efcad90e53f9b5ebddbf6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4c54501bebda7bb7517efcad90e53f9b5ebddbf6", "patch": "@@ -1,3 +1,7 @@\n+2005-03-26  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* arith.c (check_result): Fix illogical logic.\n+\n 2005-03-26  Canqun Yang  <canqun@nudt.edu.cn>\n \n \t* trans-common.c (create_common): Build RECORD_NODE for common blocks"}, {"sha": "50e2d0609180debaee3799eabc6e91f1f2fef366", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c54501bebda7bb7517efcad90e53f9b5ebddbf6/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c54501bebda7bb7517efcad90e53f9b5ebddbf6/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=4c54501bebda7bb7517efcad90e53f9b5ebddbf6", "patch": "@@ -552,21 +552,27 @@ gfc_range_check (gfc_expr * e)\n static arith\n check_result (arith rc, gfc_expr * x, gfc_expr * r, gfc_expr ** rp)\n {\n-  if (rc != ARITH_OK)\n-    gfc_free_expr (r);\n-  else\n-    {\n-      if (rc == ARITH_UNDERFLOW && gfc_option.warn_underflow)\n-        gfc_warning (\"%s at %L\", gfc_arith_error (rc), &x->where);\n+  arith val = rc;\n \n-      if (rc == ARITH_ASYMMETRIC)\n-\tgfc_warning (\"%s at %L\", gfc_arith_error (rc), &x->where);\n+  if (val == ARITH_UNDERFLOW)\n+    {\n+      if (gfc_option.warn_underflow)\n+\tgfc_warning (\"%s at %L\", gfc_arith_error (val), &x->where);\n+      val = ARITH_OK;\n+    }\n \n-      rc = ARITH_OK;\n-      *rp = r;\n+  if (val == ARITH_ASYMMETRIC)\n+    {\n+      gfc_warning (\"%s at %L\", gfc_arith_error (val), &x->where);\n+      val = ARITH_OK;\n     }\n \n-  return rc;\n+  if (val != ARITH_OK)\n+    gfc_free_expr (r);\n+  else\n+    *rp = r;\n+\n+  return val;\n }\n \n "}]}