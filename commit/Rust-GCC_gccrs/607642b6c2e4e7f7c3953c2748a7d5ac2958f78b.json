{"sha": "607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA3NjQyYjZjMmU0ZTdmN2MzOTUzYzI3NDhhN2Q1YWMyOTU4Zjc4Yg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-12T12:45:58Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-12T12:45:58Z"}, "message": "Makefile.am: Use it.\n\n\n2000-10-11  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* libsupc++/Makefile.am: Use it.\n\t* libio/Makefile.am: Use it.\n\t* libmath/Makefile.am: Use it.\n\t* src/Makefile.am: Use it.\n\t* Makefile.am (AM_MAKEFLAGS): Remove includes.\n\n\t* acinclude.m4 (GLIBCPP_EXPORT_INCLUES): Move include macros here.\n\t(GLIBCPP_EXPORT_FLAGS): Move CXX flag setting here.\n\t* configure.in: Use it.\n\n\t* mkcheck.in (SRC_DIR): Use C_INCLUDE_DIR.\n\n\t* src/Makefile.am (CXXCOMPILE): Remove.\n\t* src/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.am (CXXCOMPILE): Same here.\n\t* libsupc++/Makefile.in: Regenerate.\n\n\t* include/c_std/*: Merge with shadow.\n\t* include/c_std/bits/*: Same.\n\nFrom-SVN: r36851", "tree": {"sha": "031a616bb84310ad2d8ded059d0948c11dff81a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/031a616bb84310ad2d8ded059d0948c11dff81a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/comments", "author": null, "committer": null, "parents": [{"sha": "1384173a1c1246fec61fafcf71639cf98fdbd4f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1384173a1c1246fec61fafcf71639cf98fdbd4f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1384173a1c1246fec61fafcf71639cf98fdbd4f3"}], "stats": {"total": 936, "additions": 69, "deletions": 867}, "files": [{"sha": "7017de99b27845f1db6a990353c32c52698a5537", "filename": "libstdc++-v3/include/c_std/bits/std_cassert.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,39 +34,16 @@\n #ifndef _CPP_CASSERT\n #define _CPP_CASSERT 1\n \n-#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-# undef _IN_C_LEGACY_\n-# define _ASSERT_NEED_C_LEGACY_\n-#endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n #   define _IN_C_LEGACY_\n #   pragma GCC system_header\n #   include_next <assert.h>\n   }\n-\n } // namespace _C_legacy\n \n-\n #undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-#ifdef _ASSERT_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-# define _IN_C_LEGACY_\n-# undef _ASSERT_NEED_C_LEGACY_\n-#endif /* _ASSERT_NEED_C_LEGACY_ */\n-\n #endif\n \n \n-\n-"}, {"sha": "d164d9c198efe0a98a96f9e53f411a922c96e696", "filename": "libstdc++-v3/include/c_std/bits/std_cctype.h", "status": "modified", "additions": 7, "deletions": 36, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cctype.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -33,19 +33,11 @@\n #ifndef _CPP_CCTYPE\n #define _CPP_CCTYPE 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _CTYPE_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <ctype.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <ctype.h>\n   }\n \n   inline int \n@@ -146,29 +138,8 @@ namespace std {\n   \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::isalnum;\n-  using std::isalpha;\n-  using std::iscntrl;\n-  using std::isdigit;\n-  using std::isgraph;\n-  using std::islower;\n-  using std::isprint;\n-  using std::ispunct;\n-  using std::isspace;\n-  using std::isupper;\n-  using std::isxdigit;\n-  using std::tolower;\n-  using std::toupper;\n-\n-# ifdef _CTYPE_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _CTYPE_NEED_C_LEGACY_\n-# endif /* _CTYPE_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CCTYPE*/\n+#endif\n+\n+\n+\n "}, {"sha": "fb7a73fe64dba59a28d04f33e108c21f01a70d8a", "filename": "libstdc++-v3/include/c_std/bits/std_cerrno.h", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -33,19 +33,11 @@\n #ifndef _CPP_CERRNO\n #define _CPP_CERRNO 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _ERRNO_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <errno.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <errno.h>\n   }\n \n   //  inline int& \n@@ -62,17 +54,5 @@ namespace std {\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::errno;\n-\n-# ifdef _ERRNO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _ERRNO_NEED_C_LEGACY_\n-# endif /* _ERRNO_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CERRNO*/\n+#endif\n "}, {"sha": "d8885e69c44cb22b472bbaf4945262b4cdb15a4b", "filename": "libstdc++-v3/include/c_std/bits/std_cfloat.h", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cfloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cfloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cfloat.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,36 +34,17 @@\n #ifndef _CPP_CFLOAT\n #define _CPP_CFLOAT 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _FLOAT_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <float.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <float.h>\n   }\n } // namespace _C_legacy\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _FLOAT_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _FLOAT_NEED_C_LEGACY_\n-# endif /* _FLOAT_NEED_C_LEGACY_ */\n-\n-#endif  /*_CPP_CFLOAT*/\n+#endif\n \n \n "}, {"sha": "d0db90521b062618c2db95f98b64db61815662bc", "filename": "libstdc++-v3/include/c_std/bits/std_climits.h", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_climits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_climits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_climits.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,36 +34,17 @@\n #ifndef _CPP_CLIMITS\n #define _CPP_CLIMTIS 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LIMITS_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <limits.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <limits.h>\n   }\n } // namespace _C_legacy\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _LIMITS_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LIMITS_NEED_C_LEGACY_\n-# endif /* _LIMITS_NEED_C_LEGACY_ */\n-\n-#endif  /*_CPP_CLIMITS*/\n+#endif\n \n \n "}, {"sha": "86d600e262e96fb29f71e3b63ad4a889f1573683", "filename": "libstdc++-v3/include/c_std/bits/std_clocale.h", "status": "modified", "additions": 4, "deletions": 26, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_clocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_clocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_clocale.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -36,19 +36,11 @@\n \n # include <bits/std_cstddef.h> \n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LOCALE_NEED_C_LEGACY_\n-#endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <locale.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <locale.h>\n   }\n \n   typedef lconv _CPP_lconv_capture;\n@@ -70,21 +62,7 @@ namespace std {\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::lconv;\n-  using std::setlocale;\n-  using std::localeconv;\n-\n-# ifdef _LOCALE_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LOCALE_NEED_C_LEGACY_\n-# endif /* _LOCALE_NEED_C_LEGACY_ */\n-\n-#endif  /*_CPP_CLOCALE*/\n+#endif \n \n \n "}, {"sha": "6113417eae54044298dbe85a84aad0370654179e", "filename": "libstdc++-v3/include/c_std/bits/std_cmath.h", "status": "modified", "additions": 7, "deletions": 253, "changes": 260, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,21 +34,13 @@\n #ifndef _CPP_CMATH\n #define _CPP_CMATH 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _MATH_NEED_C_LEGACY_\n-# endif\n-\n # include <bits/c++config.h>\n \n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <math.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <math.h>\n   }\n \n #if _GLIBCPP_HAVE_ACOSF\n@@ -543,6 +535,9 @@ namespace _C_legacy {\n   inline long double \n   _CPP_tanh_capture(long double __x) { return tanh(static_cast<double>(__x)); }\n #endif\n+\n+  namespace _C_shadow { }\n+\n } // namespace _C_legacy\n \n # undef abs\n@@ -802,252 +797,11 @@ namespace std {\n \n   inline long double \n   tanh(long double __x) { return _C_legacy::_CPP_tanh_capture(__x); }\n-\n-  // From ISO/IEC 9899:1999\n-  inline float \n-  absf(float __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline float \n-  acosf(float __x) { return _C_legacy::_CPP_acos_capture(__x); }\n-\n-  inline float \n-  asinf(float __x) { return _C_legacy::_CPP_asin_capture(__x); }\n-\n-  inline float \n-  atanf(float __x) { return _C_legacy::_CPP_atan_capture(__x); }\n-\n-  inline float \n-  atan2f(float __y, float __x) \n-  { return _C_legacy::_CPP_atan2_capture(__y, __x); }\n-\n-  inline float \n-  ceilf(float __x) { return _C_legacy::_CPP_ceil_capture(__x); }\n-\n-  inline float \n-  cosf(float __x) { return _C_legacy::_CPP_cos_capture(__x); }\n-\n-  inline float \n-  coshf(float __x) { return _C_legacy::_CPP_cosh_capture(__x); }\n-\n-  inline float \n-  expf(float __x) { return _C_legacy::_CPP_exp_capture(__x); }\n-\n-  inline float \n-  fabsf(float __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline float \n-  floorf(float __x) { return _C_legacy::_CPP_floor_capture(__x); }\n-\n-  inline float \n-  fmodf(float __x, float __y) \n-  { return _C_legacy::_CPP_fmod_capture(__x, __y); }\n-\n-  inline float \n-  frexpf(float __x, int* __exp) \n-  { return _C_legacy::_CPP_frexp_capture(__x, __exp); }\n-\n-  inline float \n-  ldexpf(float __x, int __exp)\n-  { return _C_legacy::_CPP_ldexp_capture(__x, __exp); }\n-\n-  inline float \n-  logf(float __x) { return _C_legacy::_CPP_log_capture(__x); }\n-\n-  inline float \n-  log10f(float __x) { return _C_legacy::_CPP_log10_capture(__x); }\n-\n-  inline float \n-  modff(float __x, float* __iptr) \n-  { return _C_legacy::_CPP_modf_capture(__x, __iptr); }\n-\n-  inline float \n-  powf(float __x, float __y) { return _C_legacy::_CPP_pow_capture(__x, __y); }\n-\n-  float \n-  powf(float, int);\n-\n-  inline float \n-  sinf(float __x) { return _C_legacy::_CPP_sin_capture(__x); }\n-\n-  inline float \n-  sinhf(float __x) { return _C_legacy::_CPP_sinh_capture(__x); }\n-\n-  inline float \n-  sqrtf(float __x) { return _C_legacy::_CPP_sqrt_capture(__x); }\n-\n-  inline float \n-  tanf(float __x) { return _C_legacy::_CPP_tan_capture(__x); }\n-\n-  inline float \n-  tanhf(float __x) { return _C_legacy::_CPP_tanh_capture(__x); }\n-\n-  // From ISO/IEC 9899:1999\n-  inline long double \n-  absl(long double __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline long double \n-  acosl(long double __x) { return _C_legacy::_CPP_acos_capture(__x); }\n-\n-  inline long double \n-  asinl(long double __x) { return _C_legacy::_CPP_asin_capture(__x); }\n-\n-  inline long double \n-  atanl(long double __x) { return _C_legacy::_CPP_atan_capture(__x); }\n-\n-  inline long double \n-  atan2l(long double __y, long double __x) \n-  { return _C_legacy::_CPP_atan2_capture(__y, __x); }\n-\n-  inline long double \n-  ceill(long double __x) { return _C_legacy::_CPP_ceil_capture(__x); }\n-\n-  inline long double \n-  cosl(long double __x) { return _C_legacy::_CPP_cos_capture(__x); }\n-\n-  inline long double \n-  coshl(long double __x) { return _C_legacy::_CPP_cosh_capture(__x); }\n-\n-  inline long double \n-  expl(long double __x) { return _C_legacy::_CPP_exp_capture(__x); }\n-\n-  inline long double \n-  fabsl(long double __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline long double \n-  floorl(long double __x) { return _C_legacy::_CPP_floor_capture(__x); }\n-\n-  inline long double \n-  fmodl(long double __x, long double __y) \n-  { return _C_legacy::_CPP_fmod_capture(__x, __y); }\n-\n-  inline long double \n-  frexpl(long double __x, int* __exp)\n-  { return _C_legacy::_CPP_frexp_capture(__x, __exp); }\n-\n-  inline long double \n-  ldexpl(long double __x, int __exp)\n-  { return _C_legacy::_CPP_ldexp_capture(__x, __exp); }\n-\n-  inline long double \n-  logl(long double __x) { return _C_legacy::_CPP_log_capture(__x); }\n-\n-  inline long double \n-  log10l(long double __x) { return _C_legacy::_CPP_log10_capture(__x); }\n-\n-  inline long double \n-  modfl(long double __x, long double* __iptr) \n-  { return _C_legacy::_CPP_modf_capture(__x, __iptr); }\n-\n-  inline long double \n-  powl(long double __x, long double __y)\n-  { return _C_legacy::_CPP_pow_capture(__x, __y); }\n-\n-  long double \n-  powl(long double, int);\n-\n-  inline long double \n-  sinl(long double __x) { return _C_legacy::_CPP_sin_capture(__x); }\n-\n-  inline long double \n-  sinhl(long double __x) { return _C_legacy::_CPP_sinh_capture(__x); }\n-\n-  inline long double \n-  sqrtl(long double __x) { return _C_legacy::_CPP_sqrt_capture(__x); }\n-\n-  inline long double \n-  tanl(long double __x) { return _C_legacy::_CPP_tan_capture(__x); }\n-\n-  inline long double \n-  tanhl(long double __x) { return _C_legacy::_CPP_tanh_capture(__x); }\n } // namespace std\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::abs;\n-  using std::acos;\n-  using std::asin;\n-  using std::atan;\n-  using std::atan2;\n-  using std::cos;\n-  using std::sin;\n-  using std::tan;\n-  using std::cosh;\n-  using std::sinh;\n-  using std::tanh;\n-  using std::exp;\n-  using std::frexp;\n-  using std::ldexp;\n-  using std::log;\n-  using std::log10;\n-  using std::modf;\n-  using std::pow;\n-  using std::sqrt;\n-  using std::ceil;\n-  using std::fabs;\n-  using std::floor;\n-  using std::fmod;\n-\n-  // From ISO/IEC 9899:1999\n-  using std::absf;\n-  using std::acosf;\n-  using std::asinf;\n-  using std::atanf;\n-  using std::atan2f;\n-  using std::cosf;\n-  using std::sinf;\n-  using std::tanf;\n-  using std::coshf;\n-  using std::sinhf;\n-  using std::tanhf;\n-  using std::expf;\n-  using std::frexpf;\n-  using std::ldexpf;\n-  using std::logf;\n-  using std::log10f;\n-  using std::modff;\n-  using std::powf;\n-  using std::sqrtf;\n-  using std::ceilf;\n-  using std::fabsf;\n-  using std::floorf;\n-  using std::fmodf;\n-\n-  // From ISO/IEC 9899:1999\n-  using std::absl;\n-  using std::acosl;\n-  using std::asinl;\n-  using std::atanl;\n-  using std::atan2l;\n-  using std::cosl;\n-  using std::sinl;\n-  using std::tanl;\n-  using std::coshl;\n-  using std::sinhl;\n-  using std::tanhl;\n-  using std::expl;\n-  using std::frexpl;\n-  using std::ldexpl;\n-  using std::logl;\n-  using std::log10l;\n-  using std::modfl;\n-  using std::powl;\n-  using std::sqrtl;\n-  using std::ceill;\n-  using std::fabsl;\n-  using std::floorl;\n-  using std::fmodl;\n-\n-# ifdef _MATH_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _MATH_NEED_C_LEGACY_\n-# endif /* _MATH_NEED_C_LEGACY_ */\n-\n-#endif  /*_CPP_CMATH*/\n+#endif\n \n \n "}, {"sha": "21c03d519edbcc9277bb0b6255ad401bc33b856b", "filename": "libstdc++-v3/include/c_std/bits/std_csetjmp.h", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,19 +34,11 @@\n #ifndef _CPP_CSETJMP\n #define _CPP_CSETJMP 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _SETJMP_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <setjmp.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <setjmp.h>\n   }\n   inline int \n   _CPP_setjmp_capture(jmp_buf __jb) { return setjmp(__jb); }\n@@ -65,20 +57,7 @@ namespace std {\n   \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::jmp_buf;\n-  using std::longjmp;\n-\n-# ifdef _SETJMP_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _SETJMP_NEED_C_LEGACY_\n-# endif /* _SETJMP_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CSETJUMP*/\n+#endif\n \n \n "}, {"sha": "71f91260214ec06e908a87cd93c31fd1b5a6a865", "filename": "libstdc++-v3/include/c_std/bits/std_csignal.h", "status": "modified", "additions": 6, "deletions": 29, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csignal.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,23 +34,15 @@\n #ifndef _CPP_CSIGNAL\n #define _CPP_CSIGNAL 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _SIGNAL_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n+#     define _IN_C_LEGACY_\n     // XXX\n-#   undef __need_sig_atomic_t\n-#   undef __need_sigset_t\n+#     undef __need_sig_atomic_t\n+#     undef __need_sigset_t\n \n-#   pragma GCC system_header\n-#   include_next <signal.h>\n+#     pragma GCC system_header\n+#     include_next <signal.h>\n   }\n } // namespace _C_legacy\n \n@@ -67,22 +59,7 @@ namespace std {\n   \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::sig_atomic_t;\n-\n-  using std::raise;\n-  using std::signal;\n-\n-# ifdef _SIGNAL_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _SIGNAL_NEED_C_LEGACY_\n-#  endif /* _SIGNAL_NEED_C_LEGACY_ */\n-\n-#endif  /*_CPP_CSIGNAL*/\n+#endif\n \n \n "}, {"sha": "eb1b7909e744009f16883ebb55a3dd33ce076c94", "filename": "libstdc++-v3/include/c_std/bits/std_cstdarg.h", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdarg.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,14 +34,6 @@\n #ifndef _CPP_CSTDARG\n #define _CPP_CSTDARG 1\n \n-#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDARG_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n #     define _IN_C_LEGACY_\n@@ -58,17 +50,5 @@ namespace std {\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::va_list;\n-\n-# ifdef _STDARG_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDARG_NEED_C_LEGACY_\n-# endif /* _STDARG_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CSTDARG*/\n+#endif\n "}, {"sha": "5ebcb61c80846b66e942f40fcedccdd6f8597613", "filename": "libstdc++-v3/include/c_std/bits/std_cstddef.h", "status": "modified", "additions": 4, "deletions": 34, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstddef.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,28 +34,16 @@\n #ifndef _CPP_CSTDDEF\n #define _CPP_CSTDDEF 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDDEF_NEED_C_LEGACY_\n-# endif\n-\n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-\n-//#   define __need_ptrdiff_t\n-//#   define __need_size_t\n-#   include_next <stddef.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <stddef.h>\n   }\n } // namespace _C_legacy\n \n #  undef ptrdiff_t  \n #  undef size_t  \n-#  undef wchar_t\n \n namespace std {\n   using _C_legacy::ptrdiff_t;\n@@ -64,25 +52,7 @@ namespace std {\n   \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::ptrdiff_t;\n-  using std::size_t;\n-\n-  // 3.9.1 Fundamental Types\n-  // p 5\n-  // wchar_t is a fundamental type\n-  // using std::wchar_t;\n-\n-# ifdef _STDDEF_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDDEF_NEED_C_LEGACY_\n-# endif /* _STDDEF_NEED_C_LEGACY_ */\n-\n-#endif  /*_CPP_CSTDDEF*/\n+#endif\n \n \n "}, {"sha": "db2761281d08d1ffbfe68bd7371e372e8d58a274", "filename": "libstdc++-v3/include/c_std/bits/std_cstdio.h", "status": "modified", "additions": 5, "deletions": 68, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,23 +34,15 @@\n #ifndef _CPP_CSTDIO\n #define _CPP_CSTDIO 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDIO_NEED_C_LEGACY_\n-# endif\n-\n # include <bits/std_cstddef.h>  \n # include <bits/std_cstdarg.h>  \n \n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   undef __need_FILE\n-#   pragma GCC system_header\n-#   include_next <stdio.h>\n+#     define _IN_C_LEGACY_\n+#     undef __need_FILE\n+#     pragma GCC system_header\n+#     include_next <stdio.h>\n   }\n \n   typedef FILE _CPP_FILE_capture;\n@@ -287,60 +279,5 @@ namespace std {\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::FILE;\n-  using std::fpos_t; \n-\n-  using std::remove;\n-  using std::rename;\n-  using std::tmpfile;\n-  using std::tmpnam;\n-  using std::fclose;\n-  using std::fflush;\n-  using std::fopen;\n-  using std::freopen;\n-  using std::setbuf;\n-  using std::setvbuf;\n-  using std::fprintf;\n-  using std::fscanf;\n-  using std::printf;\n-  using std::scanf;\n-  using std::sprintf;\n-  using std::sscanf;\n-  using std::vfprintf;\n-  using std::vprintf;\n-  using std::vsprintf;\n-  using std::fgetc;\n-  using std::fgets;\n-  using std::fputc;\n-  using std::fputs;\n-  using std::getc;\n-  using std::getchar;\n-  using std::gets;\n-  using std::putc;\n-  using std::putchar;\n-  using std::puts;\n-  using std::ungetc;\n-  using std::fread;\n-  using std::fwrite;\n-  using std::fgetpos;\n-  using std::fseek;\n-  using std::fsetpos;\n-  using std::ftell;\n-  using std::rewind;\n-  using std::clearerr;\n-  using std::feof;\n-  using std::ferror;\n-  using std::perror;\n-\n-# ifdef _STDIO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDIO_NEED_C_LEGACY_\n-# endif /* _STDIO_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CSTDIO*/\n+#endif\n "}, {"sha": "44a316ec40f5c9954c1eb21a71d989459489217b", "filename": "libstdc++-v3/include/c_std/bits/std_cstdlib.h", "status": "modified", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -38,14 +38,6 @@\n #ifndef _CPP_CSTDLIB\n #define _CPP_CSTDLIB 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDLIB_NEED_C_LEGACY_\n-# endif\n-\n # include <bits/c++config.h>\n # include <bits/std_cstddef.h>  \n \n@@ -194,58 +186,6 @@ namespace std {\n   \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::div_t;\n-  using std::ldiv_t;\n-#ifdef _GLIBCPP_USE_LONG_LONG\n-  using std::lldiv_t;\n #endif\n \n-  using std::abort;\n-  using std::abs;\n-  using std::atexit;\n-  using std::atof;\n-  using std::atoi;\n-  using std::atol;\n-  using std::bsearch;\n-  using std::calloc;\n-  using std::div;\n-  using std::exit;\n-  using std::free;\n-  using std::getenv;\n-  using std::labs;\n-  using std::ldiv;\n-  using std::malloc;\n-  using std::mblen;\n-  using std::mbstowcs;\n-  using std::mbtowc;\n-  using std::qsort;\n-  using std::rand;\n-  using std::realloc;\n-  using std::srand;\n-  using std::strtod;\n-  using std::strtol;\n-  using std::strtoul;\n-  using std::system;\n-  using std::wcstombs;\n-  using std::wctomb;\n-\n-#ifdef _GLIBCPP_USE_LONG_LONG\n-  using std::strtoll;\n-  using std::strtoull;\n-  using std::strtof;\n-  using std::strtold;\n-#endif\n-\n-# ifdef _STDLIB_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDLIB_NEED_C_LEGACY_\n-# endif /* _STDLIB_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CSTDLIB*/\n-\n "}, {"sha": "38b9e6b617d7abf20401c783c636be7326485b1a", "filename": "libstdc++-v3/include/c_std/bits/std_cstring.h", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstring.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,14 +34,6 @@\n #ifndef _CPP_CSTRING\n #define _CPP_CSTRING 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STRING_NEED_C_LEGACY_\n-# endif\n-\n # if defined __GLIBC__ && __GLIBC__ >= 2\n // We must not see the optimized string functions GNU libc defines.\n #  define __NO_STRING_INLINES\n@@ -283,38 +275,5 @@ namespace std {\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::memcpy;\n-  using std::memmove;\n-  using std::strcpy;\n-  using std::strncpy;\n-  using std::strcat;\n-  using std::strncat;\n-  using std::memcmp;\n-  using std::strcmp;\n-  using std::strcoll;\n-  using std::strncmp;\n-  using std::strxfrm;\n-  using std::memchr;\n-  using std::strchr;\n-  using std::strcspn;\n-  using std::strpbrk;\n-  using std::strrchr;\n-  using std::strspn;\n-  using std::strstr;\n-  using std::strtok;\n-  using std::memset;\n-  using std::strerror;\n-  using std::strlen;\n-\n-# ifdef _STRING_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STRING_NEED_C_LEGACY_\n-# endif /* _STRING_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CSTRING*/\n+#endif\n "}, {"sha": "44709f0238fc9e202454a48c239ae07d15a71a9a", "filename": "libstdc++-v3/include/c_std/bits/std_ctime.h", "status": "modified", "additions": 7, "deletions": 40, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_ctime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_ctime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_ctime.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,28 +34,20 @@\n #ifndef _CPP_CTIME\n #define _CPP_CTIME 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _TIME_NEED_C_LEGACY_\n-# endif\n-\n # include <bits/std_cstddef.h>  \n \n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n \n       // XXX\n       // glibc 2.1.x time.h is on crack\n-#   undef __need_time_t\n-#   undef __need_clock_t\n-#   undef __need_timespec\n+#     undef __need_time_t\n+#     undef __need_clock_t\n+#     undef __need_timespec\n \n-#   include_next <time.h>\n+#     include_next <time.h>\n   }\n \n   typedef clock_t\t_CPP_clock_t_capture;\n@@ -111,30 +103,5 @@ namespace std {\n   \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::clock_t;\n-  using std::time_t;\n-  using std::tm;\n-\n-  using std::clock;\n-  using std::difftime;\n-  using std::mktime;\n-  using std::time;\n-  using std::asctime;\n-  using std::ctime;\n-  using std::gmtime;\n-  using std::localtime;\n-  using std::strftime;\n-\n-# ifdef _TIME_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _TIME_NEED_C_LEGACY_\n-# endif /* _TIME_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CTIME*/\n-\n+#endif\n "}, {"sha": "db659f469f2e23497c03dc2e1b57ecb21a5b25f8", "filename": "libstdc++-v3/include/c_std/bits/std_cwchar.h", "status": "modified", "additions": 6, "deletions": 97, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwchar.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -32,22 +32,13 @@\n \n #ifndef _CPP_CWCHAR\n # define _CPP_CWCHAR 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_  /* sub-included by a C header */\n-#  define _WCHAR_NEED_C_LEGACY_\n-# endif\n-\n # include <bits/std_cstdio.h> \n \n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <wchar.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <wchar.h>\n   }\n \n #if 0\n@@ -98,6 +89,7 @@ namespace _C_legacy {\n #endif\n } // namespace _C_legacy\n \n+# undef wchar_t\n # undef wint_t\n # undef mbstate_t\n \n@@ -162,7 +154,8 @@ namespace _C_legacy {\n # undef wcsrtombs\n \n namespace std {\n-  using _C_legacy::wint_t;\n+\n+  using _C_legacy::wint_t; \n   using _C_legacy::mbstate_t;\n \n #if 0\n@@ -274,92 +267,8 @@ namespace std {\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::wint_t;\n-  using std::mbstate_t;\n-\n-#if 0\n-  using std::fwprintf;\n-  using std::fwscanf;\n-  using std::swprintf;\n-  using std::swscanf;\n-  using std::vfwprintf;\n-  using std::vfwscanf;\n-  using std::vswprintf;\n-  using std::vswscanf;\n-  using std::vwprintf;\n-  using std::vwscanf;\n-  using std::wprintf;\n-  using std::wscanf;\n-  using std::fgetwc;\n-  using std::fgetws;\n-  using std::fputwc;\n-  using std::fputws;\n-  using std::fwide;\n-  using std::getwc;\n-  using std::getwchar;\n-  using std::putwc;\n-  using std::putwchar;\n-  using std::ungetwc;\n-#endif\n-\n-  using std::wcstod;\n-  using std::wcstof;\n-  using std::wcstold;\n-  using std::wcstol;\n-  using std::wcstoll;\n-  using std::wcstoul;\n-  using std::wcstoull;\n-  using std::wcscpy;\n-  using std::wcsncpy;\n-  using std::wcscat;\n-  using std::wcsncat;\n-\n-#if 0\n-  using std::wcsmp;\n #endif\n \n-  using std::wcscoll;\n-  using std::wcsncmp;\n-  using std::wcsxfrm;\n-  using std::wcschr;\n-  using std::wcscspn;\n-  using std::wcslen;\n-  using std::wcspbrk;\n-  using std::wcsrchr;\n-  using std::wcsspn;\n-  using std::wcsstr;\n-  using std::wcstok;\n-  using std::wmemchr;\n-  using std::wmemcmp;\n-  using std::wmemcpy;\n-  using std::wmemmove;\n-  using std::wmemset;\n-\n-#if 0\n-  using std::wcsftime;\n-#endif\n-\n-  using std::btowc;\n-  using std::wctob;\n-  using std::mbsinit;\n-  using std::mbrlen;\n-  using std::mbrtowc;\n-  using std::wcrtomb;\n-  using std::mbsrtowcs;\n-  using std::wcsrtombs;\n-\n-# ifdef _WCHAR_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _WCHAR_NEED_C_LEGACY_\n-# endif /* _WCHAR_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CWCHAR*/\n-\n \n \n "}, {"sha": "1a6a64282fd96976d140ff0ba36c1b0cd1d6cae2", "filename": "libstdc++-v3/include/c_std/bits/std_cwctype.h", "status": "modified", "additions": 5, "deletions": 43, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/607642b6c2e4e7f7c3953c2748a7d5ac2958f78b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cwctype.h?ref=607642b6c2e4e7f7c3953c2748a7d5ac2958f78b", "patch": "@@ -34,24 +34,17 @@\n #ifndef _CPP_CWCTYPE\n #define _CPP_CWCTYPE 1\n \n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _CWCHAR_NEED_C_LEGACY_\n-# endif\n-\n # include <bits/std_cwchar.h>  \n \n namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <wctype.h>\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <wctype.h>\n   }\n } // namespace _C_legacy\n \n+\n # undef wctype_t\n # undef wctrans_t\n # undef iswalpha\n@@ -132,36 +125,5 @@ namespace std {\n \n # undef _IN_C_LEGACY_\n \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::wint_t;\n-  using std::wctype_t;\n-  using std::wctrans_t;\n-  using std::iswalpha;\n-  using std::iswupper;\n-  using std::iswlower;\n-  using std::iswdigit;\n-  using std::iswxdigit;\n-  using std::iswalnum;\n-  using std::iswspace;\n-  using std::iswpunct;\n-  using std::iswprint;\n-  using std::iswgraph;\n-  using std::iswcntrl;\n-  using std::iswctype;\n-  using std::towctrans;\n-  using std::towlower;\n-  using std::towupper;\n-  using std::wctrans;\n-  using std::wctype;\n-\n-# ifdef _CWCHAR_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _CWCHAR_NEED_C_LEGACY_\n-# endif /* _CWCHAR_NEED_C_LEGACY_ */\n-\n-#endif /*_CPP_CWCTYPE*/\n+#endif\n "}]}