{"sha": "5d8062175840a586ad1f4724c52317e8cc016e98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ4MDYyMTc1ODQwYTU4NmFkMWY0NzI0YzUyMzE3ZThjYzAxNmU5OA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-04-04T15:01:15Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-04-04T15:01:15Z"}, "message": "sh.h (ACTUAL_NORMAL_MODE): New macro, broken out of (NORMAL_MODE).\n\n\t* sh.h (ACTUAL_NORMAL_MODE): New macro, broken out of\n\t(NORMAL_MODE).\n\t* sh.c (fpscr_set_from_mem): Use ACTUAL_NORMAL_MODE.\n\nFrom-SVN: r65241", "tree": {"sha": "13391c7284558912c1e51886b51c95f5bc0cb308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13391c7284558912c1e51886b51c95f5bc0cb308"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d8062175840a586ad1f4724c52317e8cc016e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8062175840a586ad1f4724c52317e8cc016e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d8062175840a586ad1f4724c52317e8cc016e98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8062175840a586ad1f4724c52317e8cc016e98/comments", "author": null, "committer": null, "parents": [{"sha": "0dc5ac92ebfb70eeb8485ba52252808be43ca971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dc5ac92ebfb70eeb8485ba52252808be43ca971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dc5ac92ebfb70eeb8485ba52252808be43ca971"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "6317830cd7823facc26751e040fc03346f71fca0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8062175840a586ad1f4724c52317e8cc016e98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8062175840a586ad1f4724c52317e8cc016e98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d8062175840a586ad1f4724c52317e8cc016e98", "patch": "@@ -1,3 +1,9 @@\n+Fri Apr  4 15:58:52 2003  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.h (ACTUAL_NORMAL_MODE): New macro, broken out of\n+\t(NORMAL_MODE).\n+\t* sh.c (fpscr_set_from_mem): Use ACTUAL_NORMAL_MODE.\n+\n 2003-04-04  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \t\n \t* doc/contrib.texi (Contributors): Add entries for Wolfgang"}, {"sha": "54ad2cfba001d517c075d5fdebb6de51efce1efb", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8062175840a586ad1f4724c52317e8cc016e98/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8062175840a586ad1f4724c52317e8cc016e98/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=5d8062175840a586ad1f4724c52317e8cc016e98", "patch": "@@ -7180,7 +7180,7 @@ fpscr_set_from_mem (mode, regs_live)\n   enum attr_fp_mode fp_mode = mode;\n   rtx addr_reg = get_free_reg (regs_live);\n \n-  if (fp_mode == (enum attr_fp_mode) NORMAL_MODE (FP_MODE))\n+  if (fp_mode == (enum attr_fp_mode) ACTUAL_NORMAL_MODE (FP_MODE))\n     emit_insn (gen_fpu_switch1 (addr_reg));\n   else\n     emit_insn (gen_fpu_switch0 (addr_reg));"}, {"sha": "1b2f3816e1c323e5f69b2ecbb6fe114e92529ca9", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8062175840a586ad1f4724c52317e8cc016e98/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8062175840a586ad1f4724c52317e8cc016e98/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=5d8062175840a586ad1f4724c52317e8cc016e98", "patch": "@@ -3288,10 +3288,12 @@ extern int rtx_equal_function_value_matters;\n \n #define OPTIMIZE_MODE_SWITCHING(ENTITY) TARGET_SH4\n \n+#define ACTUAL_NORMAL_MODE(ENTITY) \\\n+  (TARGET_FPU_SINGLE ? FP_MODE_SINGLE : FP_MODE_DOUBLE)\n+\n #define NORMAL_MODE(ENTITY) \\\n   (sh_cfun_interrupt_handler_p () ? FP_MODE_NONE \\\n-   : TARGET_FPU_SINGLE ? FP_MODE_SINGLE \\\n-   : FP_MODE_DOUBLE)\n+   : ACTUAL_NORMAL_MODE (ENTITY))\n \n #define EPILOGUE_USES(REGNO)       ((TARGET_SH2E || TARGET_SH4)\t\t\\\n \t\t\t\t    && (REGNO) == FPSCR_REG)"}]}