{"sha": "e7ba564fca6cb914e202ed4807142b7008bcde0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdiYTU2NGZjYTZjYjkxNGUyMDJlZDQ4MDcxNDJiNzAwOGJjZGUwYw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-02-25T15:52:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-25T15:52:52Z"}, "message": "rtsfind.adb (Is_RTE): Protect against entity with no scope field (previously this call blew up on the...\n\n2014-02-25  Robert Dewar  <dewar@adacore.com>\n\n\t* rtsfind.adb (Is_RTE): Protect against entity with no scope\n\tfield (previously this call blew up on the Standard entity).\n\t* sem_attr.adb (Analyze_Attribute, case Access): Remove\n\ttest for No_Abort_Statements, this is now handled in\n\tSet_Entity_With_Checks.\n\t* exp_ch6.adb, sem_ch10.adb, sem_ch4.adb, sem_ch8.adb, sem_res.adb:\n\tChange name Set_Entity_With_Style_Check => Set_Entity_With_Checks.\n\t* sem_util.ads, sem_util.adb: Change name Set_Entity_With_Style_Check =>\n\tSet_Entity_With_Checks.\n\t(Set_Entity_With_Checks): Add checks for No_Dynamic_Attachment,\n\tAdd checks for No_Abort_Statements.\n\n2014-02-25  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb (Expand_Entry_Barrier): Add comment that call to\n\tCheck_Restriction is OK.\n\nFrom-SVN: r208148", "tree": {"sha": "12a5a685674be8dfe39778e861e961ac374d255c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a5a685674be8dfe39778e861e961ac374d255c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7ba564fca6cb914e202ed4807142b7008bcde0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ba564fca6cb914e202ed4807142b7008bcde0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7ba564fca6cb914e202ed4807142b7008bcde0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ba564fca6cb914e202ed4807142b7008bcde0c/comments", "author": null, "committer": null, "parents": [{"sha": "2886a49530f3c37c1265224a4f5a63ab91a3bd19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2886a49530f3c37c1265224a4f5a63ab91a3bd19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2886a49530f3c37c1265224a4f5a63ab91a3bd19"}], "stats": {"total": 214, "additions": 127, "deletions": 87}, "files": [{"sha": "98c8cecd3dbac1722f3a9b24d2023d66bde3bfa3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -1,3 +1,22 @@\n+2014-02-25  Robert Dewar  <dewar@adacore.com>\n+\n+\t* rtsfind.adb (Is_RTE): Protect against entity with no scope\n+\tfield (previously this call blew up on the Standard entity).\n+\t* sem_attr.adb (Analyze_Attribute, case Access): Remove\n+\ttest for No_Abort_Statements, this is now handled in\n+\tSet_Entity_With_Checks.\n+\t* exp_ch6.adb, sem_ch10.adb, sem_ch4.adb, sem_ch8.adb, sem_res.adb:\n+\tChange name Set_Entity_With_Style_Check => Set_Entity_With_Checks.\n+\t* sem_util.ads, sem_util.adb: Change name Set_Entity_With_Style_Check =>\n+\tSet_Entity_With_Checks.\n+\t(Set_Entity_With_Checks): Add checks for No_Dynamic_Attachment,\n+\tAdd checks for No_Abort_Statements.\n+\n+2014-02-25  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_Entry_Barrier): Add comment that call to\n+\tCheck_Restriction is OK.\n+\n 2014-02-25  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Process_Full_View): Better error message when"}, {"sha": "46cc9ca4d103d0f3f3adc541a595644adb271a24", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3641,21 +3641,6 @@ package body Exp_Ch6 is\n          Subp := Parent_Subp;\n       end if;\n \n-      --  Check for violation of No_Dynamic_Attachment\n-\n-      if Restriction_Check_Required (No_Dynamic_Attachment)\n-        and then RTU_Loaded (Ada_Interrupts)\n-        and then (Is_RTE (Subp, RE_Is_Reserved)      or else\n-                  Is_RTE (Subp, RE_Is_Attached)      or else\n-                  Is_RTE (Subp, RE_Current_Handler)  or else\n-                  Is_RTE (Subp, RE_Attach_Handler)   or else\n-                  Is_RTE (Subp, RE_Exchange_Handler) or else\n-                  Is_RTE (Subp, RE_Detach_Handler)   or else\n-                  Is_RTE (Subp, RE_Reference))\n-      then\n-         Check_Restriction (No_Dynamic_Attachment, Call_Node);\n-      end if;\n-\n       --  Deal with case where call is an explicit dereference\n \n       if Nkind (Name (Call_Node)) = N_Explicit_Dereference then"}, {"sha": "0103cfac95bba573384f45a3e56e29c0c2137880", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -6330,11 +6330,16 @@ package body Exp_Ch9 is\n          end if;\n       end if;\n \n-      --  It is not a boolean variable or literal, so check the restriction\n-      --  and otherwise emit warning if barrier contains global entities and\n-      --  is thus potentially unsynchronized.\n+      --  It is not a boolean variable or literal, so check the restriction.\n+      --  Note that it is safe to be calling Check_Restriction from here, even\n+      --  though this is part of the expander, since Expand_Entry_Barrier is\n+      --  called from Sem_Ch9 even in -gnatc mode.\n \n       Check_Restriction (Simple_Barriers, Cond);\n+\n+      --  Emit warning if barrier contains global entities and is thus\n+      --  potentially unsynchronized.\n+\n       Check_Unprotected_Barrier (Cond);\n    end Expand_Entry_Barrier;\n \n@@ -9079,6 +9084,12 @@ package body Exp_Ch9 is\n                   --  warning on a protected type declaration.\n \n                   if not Comes_From_Source (Prot_Typ) then\n+\n+                     --  It's ok to be checking this restriction at expansion\n+                     --  time, because this is only for the restricted profile,\n+                     --  which is not subject to strict RM conformance, so it\n+                     --  is OK to miss this check in -gnatc mode.\n+\n                      Check_Restriction (No_Implicit_Heap_Allocations, Priv);\n \n                   elsif Restriction_Active (No_Implicit_Heap_Allocations) then"}, {"sha": "ad3713376d36ef41df60d6f29f3a9eeb6976519f", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -464,7 +464,7 @@ package body Rtsfind is\n \n       S := Scope (Ent);\n \n-      if Ekind (S) /= E_Package then\n+      if No (S) or else Ekind (S) /= E_Package then\n          return False;\n       end if;\n "}, {"sha": "a561f066d8666220a7fd3b254877ef952e2e0890", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -9645,9 +9645,7 @@ package body Sem_Attr is\n             | Attribute_Unchecked_Access\n             | Attribute_Unrestricted_Access =>\n \n-         Access_Attribute : declare\n-            Nam : Entity_Id;\n-\n+         Access_Attribute :\n          begin\n             if Is_Variable (P) then\n                Note_Possible_Modification (P, Sure => False);\n@@ -9692,26 +9690,13 @@ package body Sem_Attr is\n                --    If it is an object, complete its resolution.\n \n                elsif Is_Overloadable (Entity (P)) then\n-                  Nam := Entity (P);\n \n                   --  Avoid insertion of freeze actions in spec expression mode\n \n                   if not In_Spec_Expression then\n                      Freeze_Before (N, Entity (P));\n                   end if;\n \n-                  --  Forbid access to Abort_Task if restriction active\n-\n-                  if Restriction_Check_Required (No_Abort_Statements)\n-                    and then\n-                      (Is_RTE (Nam, RE_Abort_Task)\n-                        or else\n-                         (Present (Alias (Nam))\n-                           and then Is_RTE (Alias (Nam), RE_Abort_Task)))\n-                  then\n-                     Check_Restriction (No_Abort_Statements, N);\n-                  end if;\n-\n                elsif Is_Type (Entity (P)) then\n                   null;\n                else"}, {"sha": "49f7df1023b9cbfb29c908387fc49877313ba660", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2632,7 +2632,7 @@ package body Sem_Ch10 is\n       --  to consider the unit as unreferenced if this is the only reference\n       --  that occurs.\n \n-      Set_Entity_With_Style_Check (Name (N), E_Name);\n+      Set_Entity_With_Checks (Name (N), E_Name);\n       Generate_Reference (E_Name, Name (N), 'w', Set_Ref => False);\n \n       --  Generate references and check No_Dependence restriction for parents\n@@ -2657,7 +2657,7 @@ package body Sem_Ch10 is\n                exit;\n             end if;\n \n-            Set_Entity_With_Style_Check (Pref, Par_Name);\n+            Set_Entity_With_Checks (Pref, Par_Name);\n \n             Generate_Reference (Par_Name, Pref);\n             Check_Restriction_No_Dependence (Pref, N);\n@@ -2697,7 +2697,7 @@ package body Sem_Ch10 is\n          --  Guard against missing or misspelled child units\n \n          if Present (Par_Name) then\n-            Set_Entity_With_Style_Check (Pref, Par_Name);\n+            Set_Entity_With_Checks (Pref, Par_Name);\n             Generate_Reference (Par_Name, Pref);\n \n          else"}, {"sha": "b3da4adf9da0c9a740c20bbee058d2cd061bf7fa", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1298,7 +1298,7 @@ package body Sem_Ch4 is\n             --  Resolution yields a single interpretation. Verify that the\n             --  reference has capitalization consistent with the declaration.\n \n-            Set_Entity_With_Style_Check (Nam, Entity (Nam));\n+            Set_Entity_With_Checks (Nam, Entity (Nam));\n             Generate_Reference (Entity (Nam), Nam);\n \n             Set_Etype (Nam, Etype (Entity (Nam)));\n@@ -3503,7 +3503,7 @@ package body Sem_Ch4 is\n                   if Is_Overloadable (Comp) then\n                      Add_One_Interp (Sel, Comp, Etype (Comp));\n                   else\n-                     Set_Entity_With_Style_Check (Sel, Comp);\n+                     Set_Entity_With_Checks (Sel, Comp);\n                      Generate_Reference (Comp, Sel);\n                   end if;\n \n@@ -4002,7 +4002,7 @@ package body Sem_Ch4 is\n          Comp := First_Component (Rec);\n          while Present (Comp) loop\n             if Chars (Comp) = Chars (Sel) then\n-               Set_Entity_With_Style_Check (Sel, Comp);\n+               Set_Entity_With_Checks (Sel, Comp);\n                Set_Etype (Sel, Etype (Comp));\n                Set_Etype (N,   Etype (Comp));\n                return;\n@@ -4239,7 +4239,7 @@ package body Sem_Ch4 is\n             if Chars (Comp) = Chars (Sel)\n               and then Is_Visible_Component (Comp, N)\n             then\n-               Set_Entity_With_Style_Check (Sel, Comp);\n+               Set_Entity_With_Checks (Sel, Comp);\n                Set_Etype (Sel, Etype (Comp));\n \n                if Ekind (Comp) = E_Discriminant then\n@@ -4420,7 +4420,7 @@ package body Sem_Ch4 is\n          while Present (Comp) loop\n             if Chars (Comp) = Chars (Sel) then\n                if Ekind (Comp) = E_Discriminant then\n-                  Set_Entity_With_Style_Check (Sel, Comp);\n+                  Set_Entity_With_Checks (Sel, Comp);\n                   Generate_Reference (Comp, Sel);\n \n                   Set_Etype (Sel, Etype (Comp));\n@@ -4497,7 +4497,7 @@ package body Sem_Ch4 is\n                             and then not Is_Protected_Type (Prefix_Type)\n                             and then Is_Entity_Name (Name))\n                then\n-                  Set_Entity_With_Style_Check (Sel, Comp);\n+                  Set_Entity_With_Checks (Sel, Comp);\n                   Generate_Reference (Comp, Sel);\n \n                   --  The selector is not overloadable, so we have a candidate\n@@ -4706,7 +4706,7 @@ package body Sem_Ch4 is\n                   if Chars (Comp) = Chars (Sel)\n                     and then Is_Visible_Component (Comp)\n                   then\n-                     Set_Entity_With_Style_Check (Sel, Comp);\n+                     Set_Entity_With_Checks (Sel, Comp);\n                      Generate_Reference (Comp, Sel);\n                      Set_Etype (Sel, Etype (Comp));\n                      Set_Etype (N,   Etype (Comp));"}, {"sha": "a727679270d41644fcebc3008c82245fca5cede5", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3664,7 +3664,7 @@ package body Sem_Ch8 is\n         or else Ekind (E) /= E_Discriminant\n         or else Inside_A_Generic\n       then\n-         Set_Entity_With_Style_Check (N, E);\n+         Set_Entity_With_Checks (N, E);\n \n       --  The replacement of a discriminant by the corresponding discriminal\n       --  is not done for a task discriminant that appears in a default\n@@ -5058,16 +5058,16 @@ package body Sem_Ch8 is\n          end if;\n \n          --  Set the entity. Note that the reason we call Set_Entity for the\n-         --  overloadable case, as opposed to Set_Entity_With_Style_Check is\n+         --  overloadable case, as opposed to Set_Entity_With_Checks is\n          --  that in the overloaded case, the initial call can set the wrong\n          --  homonym. The call that sets the right homonym is in Sem_Res and\n-         --  that call does use Set_Entity_With_Style_Check, so we don't miss\n+         --  that call does use Set_Entity_With_Checks, so we don't miss\n          --  a style check.\n \n          if Is_Overloadable (E) then\n             Set_Entity (N, E);\n          else\n-            Set_Entity_With_Style_Check (N, E);\n+            Set_Entity_With_Checks (N, E);\n          end if;\n \n          if Is_Type (E) then\n@@ -6579,7 +6579,7 @@ package body Sem_Ch8 is\n                   C := Class_Wide_Type (Entity (Prefix (N)));\n                end if;\n \n-               Set_Entity_With_Style_Check (N, C);\n+               Set_Entity_With_Checks (N, C);\n                Generate_Reference (C, N);\n                Set_Etype (N, C);\n             end if;"}, {"sha": "5a70b2d56baa870ddd989cba4df178a67804311e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5406,18 +5406,7 @@ package body Sem_Res is\n \n       elsif not (Is_Type (Entity (Subp))) then\n          Nam := Entity (Subp);\n-         Set_Entity_With_Style_Check (Subp, Nam);\n-\n-         --  Check restriction No_Abort_Statements, which is triggered by a\n-         --  call to Ada.Task_Identification.Abort_Task.\n-\n-         if Restriction_Check_Required (No_Abort_Statements)\n-           and then (Is_RTE (Nam, RE_Abort_Task)\n-                      or else (Present (Alias (Nam))\n-                                and then Is_RTE (Alias (Nam), RE_Abort_Task)))\n-         then\n-            Check_Restriction (No_Abort_Statements, N);\n-         end if;\n+         Set_Entity_With_Checks (Subp, Nam);\n \n       --  Otherwise we must have the case of an overloaded call\n \n@@ -5433,7 +5422,7 @@ package body Sem_Res is\n          while Present (It.Typ) loop\n             if Covers (Typ, It.Typ) then\n                Nam := It.Nam;\n-               Set_Entity_With_Style_Check (Subp, Nam);\n+               Set_Entity_With_Checks (Subp, Nam);\n                exit;\n             end if;\n \n@@ -6235,7 +6224,7 @@ package body Sem_Res is\n          C := Current_Entity (N);\n          while Present (C) loop\n             if Etype (C) = B_Typ then\n-               Set_Entity_With_Style_Check (N, C);\n+               Set_Entity_With_Checks (N, C);\n                Generate_Reference (C, N);\n                return;\n             end if;\n@@ -6507,7 +6496,7 @@ package body Sem_Res is\n       --  not do a style check during the first phase of analysis.\n \n       elsif Ekind (E) = E_Enumeration_Literal then\n-         Set_Entity_With_Style_Check (N, E);\n+         Set_Entity_With_Checks (N, E);\n          Eval_Entity_Name (N);\n \n       --  Case of subtype name appearing as an operand in expression\n@@ -9226,7 +9215,7 @@ package body Sem_Res is\n \n          Resolve (P, It1.Typ);\n          Set_Etype (N, Typ);\n-         Set_Entity_With_Style_Check (S, Comp1);\n+         Set_Entity_With_Checks (S, Comp1);\n \n       else\n          --  Resolve prefix with its type"}, {"sha": "6894a3ae9370e0e6a5e1a8e7e5094214c77fef19", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 47, "deletions": 7, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -15805,19 +15805,59 @@ package body Sem_Util is\n       end if;\n    end Set_Debug_Info_Needed;\n \n-   ---------------------------------\n-   -- Set_Entity_With_Style_Check --\n-   ---------------------------------\n+   ----------------------------\n+   -- Set_Entity_With_Checks --\n+   ----------------------------\n \n-   procedure Set_Entity_With_Style_Check (N : Node_Id; Val : Entity_Id) is\n+   procedure Set_Entity_With_Checks (N : Node_Id; Val : Entity_Id) is\n       Val_Actual : Entity_Id;\n       Nod        : Node_Id;\n+      Post_Node  : Node_Id;\n \n    begin\n       --  Unconditionally set the entity\n \n       Set_Entity (N, Val);\n \n+      --  Remaining checks are only done on source nodes\n+\n+      if not Comes_From_Source (N) then\n+         return;\n+      end if;\n+\n+      --  The node to post on is the selector in the case of an expanded name,\n+      --  and otherwise the node itself.\n+\n+      if Nkind (N) = N_Expanded_Name then\n+         Post_Node := Selector_Name (N);\n+      else\n+         Post_Node := N;\n+      end if;\n+\n+      --  Check for violation of No_Abort_Statements, which is triggered by\n+      --  call to Ada.Task_Identification.Abort_Task.\n+\n+      if Restriction_Check_Required (No_Abort_Statements)\n+        and then (Is_RTE (Val, RE_Abort_Task))\n+      then\n+         Check_Restriction (No_Abort_Statements, Post_Node);\n+      end if;\n+\n+      --  Check for violation of No_Dynamic_Attachment\n+\n+      if Restriction_Check_Required (No_Dynamic_Attachment)\n+        and then RTU_Loaded (Ada_Interrupts)\n+        and then (Is_RTE (Val, RE_Is_Reserved)      or else\n+                  Is_RTE (Val, RE_Is_Attached)      or else\n+                  Is_RTE (Val, RE_Current_Handler)  or else\n+                  Is_RTE (Val, RE_Attach_Handler)   or else\n+                  Is_RTE (Val, RE_Exchange_Handler) or else\n+                  Is_RTE (Val, RE_Detach_Handler)   or else\n+                  Is_RTE (Val, RE_Reference))\n+      then\n+         Check_Restriction (No_Dynamic_Attachment, Post_Node);\n+      end if;\n+\n       --  Check for No_Implementation_Identifiers\n \n       if Restriction_Check_Required (No_Implementation_Identifiers) then\n@@ -15834,7 +15874,7 @@ package body Sem_Util is\n            and then not (Ekind_In (Val, E_Package, E_Generic_Package)\n                           and then Is_Library_Level_Entity (Val))\n          then\n-            Check_Restriction (No_Implementation_Identifiers, N);\n+            Check_Restriction (No_Implementation_Identifiers, Post_Node);\n          end if;\n       end if;\n \n@@ -15877,7 +15917,7 @@ package body Sem_Util is\n       end if;\n \n       Set_Entity (N, Val);\n-   end Set_Entity_With_Style_Check;\n+   end Set_Entity_With_Checks;\n \n    ------------------------\n    -- Set_Name_Entity_Id --"}, {"sha": "4e55734f20270e7044dd33f021cf88204e154973", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ba564fca6cb914e202ed4807142b7008bcde0c/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=e7ba564fca6cb914e202ed4807142b7008bcde0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1765,11 +1765,22 @@ package Sem_Util is\n    --  This routine should always be used instead of Set_Needs_Debug_Info to\n    --  ensure that subsidiary entities are properly handled.\n \n-   procedure Set_Entity_With_Style_Check (N : Node_Id; Val : Entity_Id);\n-   --  This procedure has the same calling sequence as Set_Entity, but\n-   --  if Style_Check is set, then it calls a style checking routine which\n-   --  can check identifier spelling style. This procedure also takes care\n-   --  of checking the restriction No_Implementation_Identifiers.\n+   procedure Set_Entity_With_Checks (N : Node_Id; Val : Entity_Id);\n+   --  This procedure has the same calling sequence as Set_Entity, but it\n+   --  performs additional checks as follows:\n+   --\n+   --    If Style_Check is set, then it calls a style checking routine which\n+   --    can check identifier spelling style. This procedure also takes care\n+   --    of checking the restriction No_Implementation_Identifiers.\n+   --\n+   --    If restriction No_Abort_Statements is set, then it checks that the\n+   --    entity is not Ada.Task_Identification.Abort_Task.\n+   --\n+   --    If restriction No_Dynamic_Attachment is set, then it checks that the\n+   --    entity is not one of the restricted names for this restriction.\n+   --\n+   --    If restriction No_Implementation_Identifiers is set, then it checks\n+   --    that the entity is not implementation defined.\n \n    procedure Set_Name_Entity_Id (Id : Name_Id; Val : Entity_Id);\n    pragma Inline (Set_Name_Entity_Id);"}]}