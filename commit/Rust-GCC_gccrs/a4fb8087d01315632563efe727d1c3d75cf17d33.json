{"sha": "a4fb8087d01315632563efe727d1c3d75cf17d33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmYjgwODdkMDEzMTU2MzI1NjNlZmU3MjdkMWMzZDc1Y2YxN2QzMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2010-01-25T16:25:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-01-25T16:25:29Z"}, "message": "* gnat.dg/array_bounds_test.adb: New test.\n\nFrom-SVN: r156216", "tree": {"sha": "c6e2ec3489a926640c571211ae81e23258957dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6e2ec3489a926640c571211ae81e23258957dc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4fb8087d01315632563efe727d1c3d75cf17d33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fb8087d01315632563efe727d1c3d75cf17d33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4fb8087d01315632563efe727d1c3d75cf17d33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fb8087d01315632563efe727d1c3d75cf17d33/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d92367153068c7889944f3187462bbc590caa9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d92367153068c7889944f3187462bbc590caa9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d92367153068c7889944f3187462bbc590caa9d"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "d0a4de2315bf9fe309dff63ef43a976558129013", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fb8087d01315632563efe727d1c3d75cf17d33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fb8087d01315632563efe727d1c3d75cf17d33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4fb8087d01315632563efe727d1c3d75cf17d33", "patch": "@@ -1,3 +1,7 @@\n+2010-01-25  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat.dg/array_bounds_test.adb: New test.\n+\n 2010-01-25  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/42858"}, {"sha": "5be27ff804b5e42cc6b4d3392101c6ab2656fe0e", "filename": "gcc/testsuite/gnat.dg/array_bounds_test.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fb8087d01315632563efe727d1c3d75cf17d33/gcc%2Ftestsuite%2Fgnat.dg%2Farray_bounds_test.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fb8087d01315632563efe727d1c3d75cf17d33/gcc%2Ftestsuite%2Fgnat.dg%2Farray_bounds_test.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray_bounds_test.adb?ref=a4fb8087d01315632563efe727d1c3d75cf17d33", "patch": "@@ -0,0 +1,15 @@\n+--  { dg-do run }\n+\n+with Ada.Streams; use Ada.Streams;\n+procedure Array_Bounds_Test is\n+    One    : constant Stream_Element := 1;\n+    Two    : constant Stream_Element := 2;\n+    Sample : constant Stream_Element_Array := (0 => One) & Two;\n+begin\n+   if Sample'First /= 0 then\n+      raise Program_Error;\n+   end if;\n+   if Sample'Last /= 1 then\n+      raise Program_Error;\n+   end if;\n+end Array_Bounds_Test;"}]}