{"sha": "3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMxMWQ5M2NiZjlkODY3MGY2MTM5MGEyZDNiOWE0Yzg0OTVhY2U0Nw==", "commit": {"author": {"name": "Jan Willem Jagersma", "email": "jwjagersma@gmail.com", "date": "2018-08-01T06:52:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-08-01T06:52:44Z"}, "message": "re PR target/86651 (lto-wrapper.exe: fatal error: simple_object_copy_lto_debug_sections not implemented: Invalid argument)\n\n2018-08-01 Jan Willem Jagersma  <jwjagersma@gmail.com>\n\n\tPR target/86651\n\t* dwarf2out.c (dwarf2out_early_finish): Do not generate assembly in LTO\n\tmode for COFF targets.\n\t* defaults.h (TARGET_COFF): Define.\n\t* config/i386/djgpp.h (TARGET_ASM_LTO_START, TARGET_ASM_LTO_END,\n\tTARGET_COFF): Define.\n\t(i386_djgpp_asm_lto_start, i386_djgpp_asm_lto_end): Declare.\n\t* config/i386/djgpp.c (saved_debug_info_level): New static variable.\n\t(i386_djgpp_asm_lto_start, i386_djgpp_asm_lto_end): New functions.\n\nFrom-SVN: r263191", "tree": {"sha": "ebeb0f49f33e1d621b867c61b55f71235027ea30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebeb0f49f33e1d621b867c61b55f71235027ea30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/comments", "author": {"login": "jwt27", "id": 5897442, "node_id": "MDQ6VXNlcjU4OTc0NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5897442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwt27", "html_url": "https://github.com/jwt27", "followers_url": "https://api.github.com/users/jwt27/followers", "following_url": "https://api.github.com/users/jwt27/following{/other_user}", "gists_url": "https://api.github.com/users/jwt27/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwt27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwt27/subscriptions", "organizations_url": "https://api.github.com/users/jwt27/orgs", "repos_url": "https://api.github.com/users/jwt27/repos", "events_url": "https://api.github.com/users/jwt27/events{/privacy}", "received_events_url": "https://api.github.com/users/jwt27/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "027c71411cee14ec4a45bd69f85184189457e8f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/027c71411cee14ec4a45bd69f85184189457e8f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/027c71411cee14ec4a45bd69f85184189457e8f9"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "ef167fe415d937adf0091330a3d785ca322bd0ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "patch": "@@ -1,3 +1,15 @@\n+2018-08-01 Jan Willem Jagersma  <jwjagersma@gmail.com>\n+\n+\tPR target/86651\n+\t* dwarf2out.c (dwarf2out_early_finish): Do not generate assembly in LTO\n+\tmode for COFF targets.\n+\t* defaults.h (TARGET_COFF): Define.\n+\t* config/i386/djgpp.h (TARGET_ASM_LTO_START, TARGET_ASM_LTO_END,\n+\tTARGET_COFF): Define.\n+\t(i386_djgpp_asm_lto_start, i386_djgpp_asm_lto_end): Declare.\n+\t* config/i386/djgpp.c (saved_debug_info_level): New static variable.\n+\t(i386_djgpp_asm_lto_start, i386_djgpp_asm_lto_end): New functions.\n+\n 2018-07-31  Alexandre Oliva <oliva@adacore.com>\n \n \t* gimple-streamer-in.c (input_bb): Restore BB discriminator."}, {"sha": "d187c3a745229c248e2d1c40970fa93aebb22749", "filename": "gcc/config/i386/djgpp.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fconfig%2Fi386%2Fdjgpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fconfig%2Fi386%2Fdjgpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.c?ref=3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "patch": "@@ -47,3 +47,20 @@ i386_djgpp_asm_named_section(const char *name, unsigned int flags,\n \n   fprintf (asm_out_file, \"\\t.section\\t%s,\\\"%s\\\"\\n\", name, flagchars);\n }\n+\n+/* Kludge because of missing COFF support for early LTO debug.  */\n+\n+static enum debug_info_levels saved_debug_info_level;\n+\n+void\n+i386_djgpp_asm_lto_start (void)\n+{\n+  saved_debug_info_level = debug_info_level;\n+  debug_info_level = DINFO_LEVEL_NONE;\n+}\n+\n+void\n+i386_djgpp_asm_lto_end (void)\n+{\n+  debug_info_level = saved_debug_info_level;\n+}"}, {"sha": "dd8c71b833a716a6e8ec1e2992903bfd7ddc2334", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "patch": "@@ -157,8 +157,19 @@ along with GCC; see the file COPYING3.  If not see\n #undef MAKE_DECL_ONE_ONLY\n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n \n+#undef TARGET_COFF\n+#define TARGET_COFF 1\n+\n+/* Kludge because of missing COFF support for early LTO debug.  */\n+#undef  TARGET_ASM_LTO_START\n+#define TARGET_ASM_LTO_START i386_djgpp_asm_lto_start\n+#undef  TARGET_ASM_LTO_END\n+#define TARGET_ASM_LTO_END i386_djgpp_asm_lto_end\n+\n /* Function protypes for gcc/i386/djgpp.c */\n \n void\n i386_djgpp_asm_named_section(const char *name, unsigned int flags,\n \t\t\t     tree decl);\n+void i386_djgpp_asm_lto_start (void);\n+void i386_djgpp_asm_lto_end (void);"}, {"sha": "9035b333be8f933f53c2428d3a4adeae102d533a", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "patch": "@@ -1282,6 +1282,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_PECOFF 0\n #endif\n \n+#ifndef TARGET_COFF\n+#define TARGET_COFF 0\n+#endif\n+\n #ifndef EH_RETURN_HANDLER_RTX\n #define EH_RETURN_HANDLER_RTX NULL\n #endif"}, {"sha": "ffbde6f9961c23de3cdb4ad5afa0511e1c9ce2a0", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3311d93cbf9d8670f61390a2d3b9a4c8495ace47/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=3311d93cbf9d8670f61390a2d3b9a4c8495ace47", "patch": "@@ -31942,10 +31942,10 @@ dwarf2out_early_finish (const char *filename)\n \n   /* Do not generate DWARF assembler now when not producing LTO bytecode.  */\n   if ((!flag_generate_lto && !flag_generate_offload)\n-      /* FIXME: Disable debug info generation for PE-COFF targets since the\n+      /* FIXME: Disable debug info generation for (PE-)COFF targets since the\n \t copy_lto_debug_sections operation of the simple object support in\n \t libiberty is not implemented for them yet.  */\n-      || TARGET_PECOFF)\n+      || TARGET_PECOFF || TARGET_COFF)\n     return;\n \n   /* Now as we are going to output for LTO initialize sections and labels"}]}