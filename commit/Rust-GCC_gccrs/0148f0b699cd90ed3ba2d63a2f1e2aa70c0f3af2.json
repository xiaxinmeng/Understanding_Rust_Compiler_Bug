{"sha": "0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE0OGYwYjY5OWNkOTBlZDNiYTJkNjNhMmYxZTJhYTcwYzBmM2FmMg==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-18T10:47:48Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-18T10:47:48Z"}, "message": "i386.md (define_attr \"isa\"): Add avx512dq, noavx512dq.\n\ngcc/\n\t* config/i386/i386.md\n\t(define_attr \"isa\"): Add avx512dq, noavx512dq.\n\t(define_attr \"enabled\"): Ditto.\n\t* config/i386/sse.md\n\t(define_insn \"vec_extract_hi_<mode><mask_name>\"): Support masking.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r214088", "tree": {"sha": "55f801762fcdfaf711417f9495e118347afa2218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f801762fcdfaf711417f9495e118347afa2218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2/comments", "author": null, "committer": null, "parents": [{"sha": "e0aacde412ca93a489ee8400c059d7353bbff821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0aacde412ca93a489ee8400c059d7353bbff821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0aacde412ca93a489ee8400c059d7353bbff821"}], "stats": {"total": 55, "additions": 37, "deletions": 18}, "files": [{"sha": "c2d64b20cfceee268cde59a727e8b272dc4e8309", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2", "patch": "@@ -1,3 +1,18 @@\n+2014-08-18  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.md\n+\t(define_attr \"isa\"): Add avx512dq, noavx512dq.\n+\t(define_attr \"enabled\"): Ditto.\n+\t* config/i386/sse.md\n+\t(define_insn \"vec_extract_hi_<mode><mask_name>\"): Support masking.\n+\n 2014-08-18  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "3a797c84b49ad37a944569f2bbb1afbecf0a56c9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2", "patch": "@@ -741,7 +741,7 @@\n (define_attr \"isa\" \"base,x64,x64_sse4,x64_sse4_noavx,x64_avx,nox64,\n \t\t    sse2,sse2_noavx,sse3,sse4,sse4_noavx,avx,noavx,\n \t\t    avx2,noavx2,bmi,bmi2,fma4,fma,avx512f,noavx512f,\n-\t\t    fma_avx512f,avx512bw,noavx512bw\"\n+\t\t    fma_avx512f,avx512bw,noavx512bw,avx512dq,noavx512dq\"\n   (const_string \"base\"))\n \n (define_attr \"enabled\" \"\"\n@@ -774,6 +774,8 @@\n \t   (symbol_ref \"TARGET_FMA || TARGET_AVX512F\")\n \t (eq_attr \"isa\" \"avx512bw\") (symbol_ref \"TARGET_AVX512BW\")\n \t (eq_attr \"isa\" \"noavx512bw\") (symbol_ref \"!TARGET_AVX512BW\")\n+\t (eq_attr \"isa\" \"avx512dq\") (symbol_ref \"TARGET_AVX512DQ\")\n+\t (eq_attr \"isa\" \"noavx512dq\") (symbol_ref \"!TARGET_AVX512DQ\")\n \t]\n \t(const_int 1)))\n "}, {"sha": "80dbf1775c43528fe8cbb36a8928c5fbb9ea4996", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=0148f0b699cd90ed3ba2d63a2f1e2aa70c0f3af2", "patch": "@@ -6131,6 +6131,25 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"vec_extract_hi_<mode><mask_name>\"\n+  [(set (match_operand:<ssehalfvecmode> 0 \"<store_mask_predicate>\" \"=<store_mask_constraint>,vm\")\n+\t(vec_select:<ssehalfvecmode>\n+\t  (match_operand:V16FI 1 \"register_operand\" \"v,v\")\n+\t  (parallel [(const_int 8) (const_int 9)\n+            (const_int 10) (const_int 11)\n+\t    (const_int 12) (const_int 13)\n+\t    (const_int 14) (const_int 15)])))]\n+  \"TARGET_AVX512F && (!<mask_applied> || TARGET_AVX512DQ)\"\n+  \"@\n+   vextract<shuffletype>32x8\\t{$0x1, %1, %0<mask_operand2>|%0<mask_operand2>, %1, 0x1}\n+   vextracti64x4\\t{$0x1, %1, %0|%0, %1, 0x1}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"isa\" \"avx512dq,noavx512dq\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_expand \"avx_vextractf128<mode>\"\n   [(match_operand:<ssehalfvecmode> 0 \"nonimmediate_operand\")\n    (match_operand:V_256 1 \"register_operand\")\n@@ -6177,23 +6196,6 @@\n   DONE;\n })\n \n-(define_insn \"vec_extract_hi_<mode>\"\n-  [(set (match_operand:<ssehalfvecmode> 0 \"nonimmediate_operand\" \"=v,m\")\n-\t(vec_select:<ssehalfvecmode>\n-\t  (match_operand:V16FI 1 \"nonimmediate_operand\" \"v,v\")\n-\t  (parallel [(const_int 8) (const_int 9)\n-\t\t     (const_int 10) (const_int 11)\n-\t\t     (const_int 12) (const_int 13)\n-\t\t     (const_int 14) (const_int 15)])))]\n-  \"TARGET_AVX512F\"\n-  \"vextracti64x4\\t{$0x1, %1, %0|%0, %1, 0x1}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"memory\" \"none,store\")\n-   (set_attr \"prefix\" \"evex\")\n-   (set_attr \"mode\" \"XI\")])\n-\n (define_insn_and_split \"vec_extract_lo_<mode>\"\n   [(set (match_operand:<ssehalfvecmode> 0 \"nonimmediate_operand\" \"=x,m\")\n \t(vec_select:<ssehalfvecmode>"}]}