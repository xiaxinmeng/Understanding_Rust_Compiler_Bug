{"sha": "377d9792759129b52e9fa1f5fff1e56c9cade399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3ZDk3OTI3NTkxMjliNTJlOWZhMWY1ZmZmMWU1NmM5Y2FkZTM5OQ==", "commit": {"author": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2013-10-18T12:39:34Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2013-10-18T12:39:34Z"}, "message": "tree-cfg.h: Rename from tree-flow.h.\n\n\n\t* tree-cfg.h: Rename from tree-flow.h.  Remove #includes.\n\t* tree-ssa.h: Relocate required #includes from tree-cfg.h.\n\t* tree-ssa-operands.h: Remove prototype.\n\t* tree-ssa-operands.c (virtual_operand_p): Move to gimple.c.\n\t* gimple.c (virtual_operand_p): Relocate from gimple.c.\n\t* gimple.h: Add prototype.\n\t* gimple-ssa.h: Include tree-ssa-operands.h.\n\t* tree-dump.c: Add tree-cfg.h to include list.\n\t* tree-ssa-alias.c: Add ipa-reference.h to include list.\n\t* config/alpha/alpha.c: Include gimple-ssa.h instead of tree-flow.h.\n\t* config/i386/i386.c: Don't include tree-flow.h.\n\t* config/rs6000/rs6000.c: Likewise.\n\n\t* lto/lto.c: Remove tree-flow.h from include list.\n\n\t* testsuite/g++.dg/plugin/header_plugin.c: Don't include tree-flow.h.\n\nFrom-SVN: r203817", "tree": {"sha": "aeb93841dcc0c6f4da704c90ee59e2127934f0f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb93841dcc0c6f4da704c90ee59e2127934f0f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/377d9792759129b52e9fa1f5fff1e56c9cade399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377d9792759129b52e9fa1f5fff1e56c9cade399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377d9792759129b52e9fa1f5fff1e56c9cade399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377d9792759129b52e9fa1f5fff1e56c9cade399/comments", "author": null, "committer": null, "parents": [{"sha": "8ad8afaf72139fb49d5cbcae89115c340ee59a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad8afaf72139fb49d5cbcae89115c340ee59a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad8afaf72139fb49d5cbcae89115c340ee59a6e"}], "stats": {"total": 123, "additions": 67, "deletions": 56}, "files": [{"sha": "71298916e3b167b333fa8ff13df40fd9b0c8a1d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -1,3 +1,18 @@\n+2013-10-18  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* tree-cfg.h: Rename from tree-flow.h.  Remove #includes.\n+\t* tree-ssa.h: Relocate required #includes from tree-cfg.h.\n+\t* tree-ssa-operands.h: Remove prototype.\n+\t* tree-ssa-operands.c (virtual_operand_p): Move to gimple.c.\n+\t* gimple.c (virtual_operand_p): Relocate from gimple.c.\n+\t* gimple.h: Add prototype.\n+\t* gimple-ssa.h: Include tree-ssa-operands.h.\n+\t* tree-dump.c: Add tree-cfg.h to include list.\n+\t* tree-ssa-alias.c: Add ipa-reference.h to include list.\n+\t* config/alpha/alpha.c: Include gimple-ssa.h instead of tree-flow.h.\n+\t* config/i386/i386.c: Don't include tree-flow.h.\n+\t* config/rs6000/rs6000.c: Likewise.\n+\n 2013-10-18  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n \n \t* config/frv/frv.c (frv_init_cumulative_args): Fix wrong cast."}, {"sha": "e39fc7731e6027d6ab1efe681ee58cfdf7b4789b", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -49,15 +49,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"splay-tree.h\"\n #include \"gimple.h\"\n-#include \"tree-flow.h\"\n+#include \"gimple-ssa.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-stdarg.h\"\n #include \"tm-constrs.h\"\n #include \"df.h\"\n #include \"libfuncs.h\"\n #include \"opts.h\"\n #include \"params.h\"\n-#include \"gimple-ssa.h\"\n \n /* Specify which cpu to schedule for.  */\n enum processor_type alpha_tune;"}, {"sha": "b8c3c1d712832bef20754aadcd4bd7cf9893806e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -61,7 +61,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"dumpfile.h\"\n #include \"tree-pass.h\"\n-#include \"tree-flow.h\"\n #include \"context.h\"\n #include \"pass_manager.h\"\n "}, {"sha": "4daebf26a30aaf2af572b2617999dadbe75eeddf", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -52,7 +52,6 @@\n #include \"cfgloop.h\"\n #include \"sched-int.h\"\n #include \"gimple.h\"\n-#include \"tree-flow.h\"\n #include \"intl.h\"\n #include \"params.h\"\n #include \"tm-constrs.h\""}, {"sha": "23aa099ba51d826d9d4853165d292c2290051c61", "filename": "gcc/gimple-ssa.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fgimple-ssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fgimple-ssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa.h?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -21,6 +21,8 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_GIMPLE_SSA_H\n #define GCC_GIMPLE_SSA_H\n \n+#include \"tree-ssa-operands.h\"\n+\n /* This structure is used to map a gimple statement to a label,\n    or list of labels to represent transaction restart.  */\n \n@@ -92,9 +94,6 @@ gimple_in_ssa_p (const struct function *fun)\n   return fun && fun->gimple_df && fun->gimple_df->in_ssa_p;\n }\n \n-/* Inline functions for manipulating various data structures defined in\n-   tree-flow.h.  See tree-flow.h for documentation.  */\n-\n /* Artificial variable used for the virtual operand FUD chain.  */\n static inline tree\n gimple_vop (const struct function *fun)"}, {"sha": "3ddceb95cf32a438297615689c2ab0fe359dd67c", "filename": "gcc/gimple.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -30,12 +30,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"gimple.h\"\n #include \"diagnostic.h\"\n-#include \"tree-flow.h\"\n #include \"value-prof.h\"\n #include \"flags.h\"\n #include \"alias.h\"\n #include \"demangle.h\"\n #include \"langhooks.h\"\n+#include \"bitmap.h\"\n \n \n /* All the tuples have their operand vector (if present) at the very bottom\n@@ -2776,6 +2776,25 @@ is_gimple_id (tree t)\n \t  || TREE_CODE (t) == STRING_CST);\n }\n \n+/* Return true if OP, an SSA name or a DECL is a virtual operand.  */\n+\n+bool\n+virtual_operand_p (tree op)\n+{\n+  if (TREE_CODE (op) == SSA_NAME)\n+    {\n+      op = SSA_NAME_VAR (op);\n+      if (!op)\n+\treturn false;\n+    }\n+\n+  if (TREE_CODE (op) == VAR_DECL)\n+    return VAR_DECL_IS_VIRTUAL_OPERAND (op);\n+\n+  return false;\n+}\n+\n+\n /* Return true if T is a non-aggregate register variable.  */\n \n bool"}, {"sha": "d8528acade5cf5230435627fa82c74cc88f5cbb6", "filename": "gcc/gimple.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -847,6 +847,8 @@ unsigned get_gimple_rhs_num_ops (enum tree_code);\n gimple gimple_alloc_stat (enum gimple_code, unsigned MEM_STAT_DECL);\n const char *gimple_decl_printable_name (tree, int);\n \n+/* Returns true iff T is a virtual ssa name decl.  */\n+extern bool virtual_operand_p (tree);\n /* Returns true iff T is a scalar register variable.  */\n extern bool is_gimple_reg (tree);\n /* Returns true iff T is any sort of variable.  */"}, {"sha": "0bc08627d89e43f54e26dc6387c92a7c15e565e6", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -1,3 +1,7 @@\n+2013-10-18  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* lto.c: Remove tree-flow.h from include list.\n+\n 2013-10-15  Richard Biener  <rguenther@suse.de>\n \n \t* lto.c (hash_canonical_type): Split out from ..."}, {"sha": "bca1dd12032c11f61e11fb4d4802c881b9093e05", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"toplev.h\"\n #include \"tree.h\"\n-#include \"tree-flow.h\"\n #include \"diagnostic-core.h\"\n #include \"tm.h\"\n #include \"cgraph.h\""}, {"sha": "f92ac71eefe8ad412eba435aaa5c47f514c69f40", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -1,9 +1,13 @@\n+2013-10-18  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* g++.dg/plugin/header_plugin.c: Don't include tree-flow.h.\n+\n 2013-10-18  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.dg/tree-ssa/gen-vect-11.c: Use dynamic vector cost model.\n-        gcc.dg/tree-ssa/gen-vect-11a.c: Likewise.\n-        gcc.dg/tree-ssa/gen-vect-2.c: Likewise.\n-        gcc.dg/tree-ssa/gen-vect-25.c: Likewise.\n+\t* gcc.dg/tree-ssa/gen-vect-11a.c: Likewise.\n+\t* gcc.dg/tree-ssa/gen-vect-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/gen-vect-25.c: Likewise.\n \n 2013-10-17  Charles Bayis  <charles.baylis@linaro.org>\n "}, {"sha": "a024194e19f3591549d406789fbeace703b6e452", "filename": "gcc/testsuite/g++.dg/plugin/header_plugin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fheader_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fheader_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fheader_plugin.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -17,7 +17,6 @@\n #include \"c-family/c-pretty-print.h\"\n #include \"tree-iterator.h\"\n #include \"plugin.h\"\n-#include \"tree-flow.h\"\n #include \"langhooks.h\"\n #include \"cp/cxx-pretty-print.h\"\n #include \"cp/name-lookup.h\""}, {"sha": "d6a5d8fce0df0691653b1ca8abf8b4bb663f6e02", "filename": "gcc/tree-cfg.h", "status": "renamed", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-cfg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-cfg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.h?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -18,24 +18,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#ifndef _TREE_FLOW_H\n-#define _TREE_FLOW_H 1\n-\n-#include \"bitmap.h\"\n-#include \"sbitmap.h\"\n-#include \"basic-block.h\"\n-#include \"hashtab.h\"\n-#include \"gimple.h\"\n-#include \"tree-ssa-operands.h\"\n-#include \"cgraph.h\"\n-#include \"ipa-reference.h\"\n-#include \"tree-ssa-alias.h\"\n-#include \"tree-cfgcleanup.h\"\n-#include \"tree-dfa.h\"\n-#include \"tree-pretty-print.h\"\n-#include \"gimple-low.h\"\n-#include \"tree-into-ssa.h\"\n-#include \"tree-ssa-loop.h\"\n+#ifndef _TREE_CFG_H\n+#define _TREE_CFG_H\n \n /* Location to track pending stmt for edge insertion.  */\n #define PENDING_STMT(e)\t((e)->insns.g)\n@@ -95,7 +79,7 @@ extern void debug_verbose (struct loop *ptr);\n extern void debug_loops (int);\n extern void debug_loop (struct loop *, int);\n extern void debug_loop_num (unsigned, int);\n-void remove_edge_and_dominated_blocks (edge);\n+extern void remove_edge_and_dominated_blocks (edge);\n extern bool gimple_purge_dead_eh_edges (basic_block);\n extern bool gimple_purge_all_dead_eh_edges (const_bitmap);\n extern bool gimple_purge_dead_abnormal_call_edges (basic_block);\n@@ -109,4 +93,4 @@ extern tree gimplify_build1 (gimple_stmt_iterator *, enum tree_code,\n extern void extract_true_false_edges_from_block (basic_block, edge *, edge *);\n extern unsigned int execute_fixup_cfg (void);\n \n-#endif /* _TREE_FLOW_H  */\n+#endif /* _TREE_CFG_H  */", "previous_filename": "gcc/tree-flow.h"}, {"sha": "17db244da6458f704310e7f21ae25bb2e73594fa", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -29,7 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n #include \"tree-pretty-print.h\"\n-#include \"tree-flow.h\"\n+#include \"tree-cfg.h\"\n \n static unsigned int queue (dump_info_p, const_tree, int);\n static void dump_index (dump_info_p, unsigned int);"}, {"sha": "605377e6feb8436d4d6096087b9a084fb3168d13", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -42,6 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"pointer-set.h\"\n #include \"alloc-pool.h\"\n #include \"tree-ssa-alias.h\"\n+#include \"ipa-reference.h\"\n \n /* Broad overview of how alias analysis on gimple works:\n "}, {"sha": "f397bb94f0ae5ca74b94f3866e2f2af0fb3743d5", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -1287,24 +1287,6 @@ debug_immediate_uses_for (tree var)\n }\n \n \n-/* Return true if OP, an SSA name or a DECL is a virtual operand.  */\n-\n-bool\n-virtual_operand_p (tree op)\n-{\n-  if (TREE_CODE (op) == SSA_NAME)\n-    {\n-      op = SSA_NAME_VAR (op);\n-      if (!op)\n-\treturn false;\n-    }\n-\n-  if (TREE_CODE (op) == VAR_DECL)\n-    return VAR_DECL_IS_VIRTUAL_OPERAND (op);\n-\n-  return false;\n-}\n-\n /* Unlink STMTs virtual definition from the IL by propagating its use.  */\n \n void"}, {"sha": "759b155a3e73f269ecbcf341b80e5e6640edd916", "filename": "gcc/tree-ssa-operands.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa-operands.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa-operands.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.h?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -103,7 +103,6 @@ extern void dump_immediate_uses (FILE *file);\n extern void debug_immediate_uses (void);\n extern void debug_immediate_uses_for (tree var);\n \n-extern bool virtual_operand_p (tree);\n extern void unlink_stmt_vdef (gimple);\n \n /* Return the tree pointed-to by USE.  */"}, {"sha": "8c26fd1a2fe62d90bd56f89a25e2bdbc9034eca2", "filename": "gcc/tree-ssa.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d9792759129b52e9fa1f5fff1e56c9cade399/gcc%2Ftree-ssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.h?ref=377d9792759129b52e9fa1f5fff1e56c9cade399", "patch": "@@ -20,16 +20,23 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_TREE_SSA_H\n #define GCC_TREE_SSA_H\n \n+#include \"bitmap.h\"\n+#include \"sbitmap.h\"\n #include \"gimple.h\"\n-#include \"tree-ssa-operands.h\"\n-#include \"tree-phinodes.h\"\n #include \"gimple-ssa.h\"\n+#include \"cgraph.h\"\n+#include \"tree-cfgcleanup.h\"\n+#include \"tree-cfg.h\"\n+#include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-dom.h\"\n-#include \"tree-flow.h\"\n #include \"tree-ssa-threadedge.h\"\n #include \"tree-ssa-address.h\"\n+#include \"tree-ssa-loop.h\"\n+#include \"tree-into-ssa.h\"\n+#include \"gimple-low.h\"\n+#include \"tree-dfa.h\"\n \n /* Mapping for redirected edges.  */\n struct _edge_var_map {"}]}