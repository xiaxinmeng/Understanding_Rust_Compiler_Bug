{"sha": "4bcd6597a33c86615059873504b3140f49c3b96c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjZDY1OTdhMzNjODY2MTUwNTk4NzM1MDRiMzE0MGY0OWMzYjk2Yw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-02-17T15:00:37Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-02-17T15:00:37Z"}, "message": "rs6000: Fix extendsfdf2 for signaling NaNs\n\nA cast from float to double should turn a signaling NaN into a quiet\nNaN, if using -fsignaling-nans.  On PowerPC single-precision floats are\nstored as double precision in registers, and so, the cast normally does\nnothing.  This causes gcc.dg/pr59833.c to fail (it does such a cast,\nand expects a quiet NaN as output).\n\nThis patch adds a new pattern, used with -fsignaling-nans in effect,\nthat creates an frsp instruction (or xsrsp) in this case.  Since the\ninput already is SFmode, that instruction turns signaling NaNs into\nquiet NaNs and does nothing more.\n\n\n\t* config/rs6000/rs6000.md (extendsfdf2): Remove default arguments.\n\tIf HONOR_SNANS (SFmode) force the input to a register.\n\t(*extendsfdf2_fpr): Add !HONOR_SNANS (SFmode) condition.\n\t(*extendsfdf2_snan): New pattern, used when using SNaNs; it generates\n\tan frsp or similar insn.\n\nFrom-SVN: r245534", "tree": {"sha": "c24026ef6a29900599fb94c54cebfb9bcba423b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c24026ef6a29900599fb94c54cebfb9bcba423b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bcd6597a33c86615059873504b3140f49c3b96c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcd6597a33c86615059873504b3140f49c3b96c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bcd6597a33c86615059873504b3140f49c3b96c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcd6597a33c86615059873504b3140f49c3b96c/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3185712c775f226df6f06304a1d7e0e87a1b99c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3185712c775f226df6f06304a1d7e0e87a1b99c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3185712c775f226df6f06304a1d7e0e87a1b99c3"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "0339ac9c5d3d66aec401760d85b3a80fcda33e2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcd6597a33c86615059873504b3140f49c3b96c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcd6597a33c86615059873504b3140f49c3b96c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bcd6597a33c86615059873504b3140f49c3b96c", "patch": "@@ -1,3 +1,11 @@\n+2017-02-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (extendsfdf2): Remove default arguments.\n+\tIf HONOR_SNANS (SFmode) force the input to a register.\n+\t(*extendsfdf2_fpr): Add !HONOR_SNANS (SFmode) condition.\n+\t(*extendsfdf2_snan): New pattern, used when using SNaNs; it generates\n+\tan frsp or similar insn.\n+\n 2017-02-17  Martin Liska  <mliska@suse.cz>\n \n \tPR rtl-optimization/79577"}, {"sha": "58e63c18f00b575efd7227e3a12b0655a4e282fa", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcd6597a33c86615059873504b3140f49c3b96c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcd6597a33c86615059873504b3140f49c3b96c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4bcd6597a33c86615059873504b3140f49c3b96c", "patch": "@@ -4648,15 +4648,19 @@\n \n ;; Floating point conversions\n (define_expand \"extendsfdf2\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n-\t(float_extend:DF (match_operand:SF 1 \"reg_or_none500mem_operand\" \"\")))]\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\")\n+\t(float_extend:DF (match_operand:SF 1 \"reg_or_none500mem_operand\")))]\n   \"TARGET_HARD_FLOAT && ((TARGET_FPRS && TARGET_DOUBLE_FLOAT) || TARGET_E500_DOUBLE)\"\n-  \"\")\n+{\n+  if (HONOR_SNANS (SFmode))\n+    operands[1] = force_reg (SFmode, operands[1]);\n+})\n \n (define_insn_and_split \"*extendsfdf2_fpr\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,?d,d,ws,?ws,wu,wb\")\n \t(float_extend:DF (match_operand:SF 1 \"reg_or_mem_operand\" \"0,f,m,0,wy,Z,wY\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\n+   && !HONOR_SNANS (SFmode)\"\n   \"@\n    #\n    fmr %0,%1\n@@ -4673,6 +4677,16 @@\n }\n   [(set_attr \"type\" \"fp,fpsimple,fpload,fp,fpsimple,fpload,fpload\")])\n \n+(define_insn \"*extendsfdf2_snan\"\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,ws\")\n+\t(float_extend:DF (match_operand:SF 1 \"gpc_reg_operand\" \"f,wy\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT\n+   && HONOR_SNANS (SFmode)\"\n+  \"@\n+   frsp %0,%1\n+   xsrsp %x0,%x1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n (define_expand \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n \t(float_truncate:SF (match_operand:DF 1 \"gpc_reg_operand\" \"\")))]"}]}