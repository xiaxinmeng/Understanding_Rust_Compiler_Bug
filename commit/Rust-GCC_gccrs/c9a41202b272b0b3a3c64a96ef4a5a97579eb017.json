{"sha": "c9a41202b272b0b3a3c64a96ef4a5a97579eb017", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhNDEyMDJiMjcyYjBiM2EzYzY0YTk2ZWY0YTVhOTc1NzllYjAxNw==", "commit": {"author": {"name": "Andrew Burgess", "email": "andrew.burgess@embecosm.com", "date": "2020-05-11T21:32:35Z"}, "committer": {"name": "Andrew Burgess", "email": "andrew.burgess@embecosm.com", "date": "2020-05-15T10:19:15Z"}, "message": "contrib: Handle GDB specific test result types\n\nThis commit is for the benefit of GDB, but as the binutils-gdb\nrepository shares the contrib/ directory with gcc, this commit must\nfirst be applied to gcc then copied back to binutils-gdb.\n\nThis commit extends the two scripts contrib/dg-extract-results.{py,sh}\nto handle some new, GDB specific test result types.  These test\nresults types should never appear in GCC, or any other tool that\nshares the contrib/ directly, so this change should be harmless.\n\nIn this patch series:\n  https://sourceware.org/pipermail/gdb-patches/2020-April/167847.html\nchanges were made in GDB's use of Dejagnu so that two additional\nconditions could be detected, these are:\n\n  1. Test names that contain either the build or source paths.  Such\n  test names make it difficult to compare the results of two test runs\n  of GDB from two different directories, and\n\n  2. Duplicate test names.  Duplicates make it difficult to track down\n  exactly which test has failed.\n\nWhen running Dejagnu on GDB we can now (sometimes) see two additional\ntest result types matching the above conditions, these are '# of paths\nin test names' and '# of duplicate test names'.\n\nIf the test is run in parallel mode (make -j...) then these extra test\nresults will appear in the individual test summary files, but are not\nmerged into the final summary file.\n\nAdditionally, within the summary file there are now two new types of\ntest summary line, these are 'PATH: ...' and 'DUPLICATE: ...', these\nallow users to quickly search the test summary to track down where the\noffending test names are.  These lines are similarly not merged into\nthe unified gdb.sum file after a parallel test run.\n\nThis commit extends the dg-extract-results.* scripts to calculate the\ntotals for the two new result types, and to copy the new test summary\nlines into the unified summary file.\n\ncontrib/ChangeLog:\n\n\t* dg-extract-results.py: Handle GDB specific test types.\n\t* dg-extract-results.sh: Likewise.", "tree": {"sha": "1e403542853d4770872184d2fc78a0194ec9ed6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e403542853d4770872184d2fc78a0194ec9ed6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a41202b272b0b3a3c64a96ef4a5a97579eb017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a41202b272b0b3a3c64a96ef4a5a97579eb017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a41202b272b0b3a3c64a96ef4a5a97579eb017", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a41202b272b0b3a3c64a96ef4a5a97579eb017/comments", "author": {"login": "T-J-Teru", "id": 475372, "node_id": "MDQ6VXNlcjQ3NTM3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-J-Teru", "html_url": "https://github.com/T-J-Teru", "followers_url": "https://api.github.com/users/T-J-Teru/followers", "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}", "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions", "organizations_url": "https://api.github.com/users/T-J-Teru/orgs", "repos_url": "https://api.github.com/users/T-J-Teru/repos", "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}", "received_events_url": "https://api.github.com/users/T-J-Teru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-J-Teru", "id": 475372, "node_id": "MDQ6VXNlcjQ3NTM3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-J-Teru", "html_url": "https://github.com/T-J-Teru", "followers_url": "https://api.github.com/users/T-J-Teru/followers", "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}", "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions", "organizations_url": "https://api.github.com/users/T-J-Teru/orgs", "repos_url": "https://api.github.com/users/T-J-Teru/repos", "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}", "received_events_url": "https://api.github.com/users/T-J-Teru/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaf1ee48316f9b414b11c17e298198925d816595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf1ee48316f9b414b11c17e298198925d816595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf1ee48316f9b414b11c17e298198925d816595"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "7de8b1f63401e21c38e3a34980b5d23fbbbcefe3", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a41202b272b0b3a3c64a96ef4a5a97579eb017/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a41202b272b0b3a3c64a96ef4a5a97579eb017/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=c9a41202b272b0b3a3c64a96ef4a5a97579eb017", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dg-extract-results.py: Handle GDB specific test types.\n+\t* dg-extract-results.sh: Likewise.\n+\n 2020-05-14  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/test_email.py: New file."}, {"sha": "30aa68771d491451f72d6dbd18f6d5ac339451b5", "filename": "contrib/dg-extract-results.py", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a41202b272b0b3a3c64a96ef4a5a97579eb017/contrib%2Fdg-extract-results.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a41202b272b0b3a3c64a96ef4a5a97579eb017/contrib%2Fdg-extract-results.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.py?ref=c9a41202b272b0b3a3c64a96ef4a5a97579eb017", "patch": "@@ -117,7 +117,7 @@ def __init__ (self):\n         self.tool_re = re.compile (r'^\\t\\t=== (.*) tests ===$')\n         self.result_re = re.compile (r'^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED'\n                                      r'|WARNING|ERROR|UNSUPPORTED|UNTESTED'\n-                                     r'|KFAIL|KPASS):\\s*(.+)')\n+                                     r'|KFAIL|KPASS|PATH|DUPLICATE):\\s*(.+)')\n         self.completed_re = re.compile (r'.* completed at (.*)')\n         # Pieces of text to write at the head of the output.\n         # start_line is a pair in which the first element is a datetime\n@@ -143,7 +143,9 @@ def __init__ (self):\n             '# of known failures\\t\\t',\n             '# of untested testcases\\t\\t',\n             '# of unresolved testcases\\t',\n-            '# of unsupported tests\\t\\t'\n+            '# of unsupported tests\\t\\t',\n+            '# of paths in test names\\t',\n+            '# of duplicate test names\\t'\n         ]\n         self.runs = dict()\n "}, {"sha": "ff6c50d029c8453b0a2337581a15013214d14be1", "filename": "contrib/dg-extract-results.sh", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a41202b272b0b3a3c64a96ef4a5a97579eb017/contrib%2Fdg-extract-results.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a41202b272b0b3a3c64a96ef4a5a97579eb017/contrib%2Fdg-extract-results.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.sh?ref=c9a41202b272b0b3a3c64a96ef4a5a97579eb017", "patch": "@@ -326,7 +326,7 @@ BEGIN {\n   }\n }\n /^\\t\\t=== .* ===$/ { curvar = \"\"; next }\n-/^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED|WARNING|ERROR|UNSUPPORTED|UNTESTED|KFAIL|KPASS):/ {\n+/^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED|WARNING|ERROR|UNSUPPORTED|UNTESTED|KFAIL|KPASS|PATH|DUPLICATE):/ {\n   testname=\\$2\n   # Ugly hack for gfortran.dg/dg.exp\n   if (\"$TOOL\" == \"gfortran\" && testname ~ /^gfortran.dg\\/g77\\//)\n@@ -400,6 +400,7 @@ BEGIN {\n   variant=\"$VAR\"\n   tool=\"$TOOL\"\n   passcnt=0; failcnt=0; untstcnt=0; xpasscnt=0; xfailcnt=0; kpasscnt=0; kfailcnt=0; unsupcnt=0; unrescnt=0; dgerrorcnt=0;\n+  pathcnt=0; dupcnt=0\n   curvar=\"\"; insummary=0\n }\n /^Running target /\t\t{ curvar = \\$3; next }\n@@ -414,6 +415,8 @@ BEGIN {\n /^# of untested testcases/\t{ if (insummary == 1) untstcnt += \\$5; next; }\n /^# of unresolved testcases/\t{ if (insummary == 1) unrescnt += \\$5; next; }\n /^# of unsupported tests/\t{ if (insummary == 1) unsupcnt += \\$5; next; }\n+/^# of paths in test names/\t{ if (insummary == 1) pathcnt += \\$7; next; }\n+/^# of duplicate test names/\t{ if (insummary == 1) dupcnt += \\$6; next; }\n /^$/\t\t\t\t{ if (insummary == 1)\n \t\t\t\t    { insummary = 0; curvar = \"\" }\n \t\t\t\t  next\n@@ -431,6 +434,8 @@ END {\n   if (untstcnt != 0) printf (\"# of untested testcases\\t\\t%d\\n\", untstcnt)\n   if (unrescnt != 0) printf (\"# of unresolved testcases\\t%d\\n\", unrescnt)\n   if (unsupcnt != 0) printf (\"# of unsupported tests\\t\\t%d\\n\", unsupcnt)\n+  if (pathcnt != 0) printf (\"# of paths in test names\\t%d\\n\", pathcnt)\n+  if (dupcnt != 0) printf (\"# of duplicate test names\\t%d\\n\", dupcnt)\n }\n EOF\n \n@@ -452,6 +457,7 @@ cat << EOF > $TOTAL_AWK\n BEGIN {\n   tool=\"$TOOL\"\n   passcnt=0; failcnt=0; untstcnt=0; xpasscnt=0; xfailcnt=0; kfailcnt=0; unsupcnt=0; unrescnt=0; dgerrorcnt=0\n+  pathcnt=0; dupcnt=0\n }\n /^# of DejaGnu errors/\t\t{ dgerrorcnt += \\$5 }\n /^# of expected passes/\t\t{ passcnt += \\$5 }\n@@ -463,6 +469,8 @@ BEGIN {\n /^# of untested testcases/\t{ untstcnt += \\$5 }\n /^# of unresolved testcases/\t{ unrescnt += \\$5 }\n /^# of unsupported tests/\t{ unsupcnt += \\$5 }\n+/^# of paths in test names/\t{ pathcnt += \\$7 }\n+/^# of duplicate test names/\t{ dupcnt += \\$6 }\n END {\n   printf (\"\\n\\t\\t=== %s Summary ===\\n\\n\", tool)\n   if (dgerrorcnt != 0) printf (\"# of DejaGnu errors\\t\\t%d\\n\", dgerrorcnt)\n@@ -475,6 +483,8 @@ END {\n   if (untstcnt != 0) printf (\"# of untested testcases\\t\\t%d\\n\", untstcnt)\n   if (unrescnt != 0) printf (\"# of unresolved testcases\\t%d\\n\", unrescnt)\n   if (unsupcnt != 0) printf (\"# of unsupported tests\\t\\t%d\\n\", unsupcnt)\n+  if (pathcnt != 0) printf (\"# of paths in test names\\t%d\\n\", pathcnt)\n+  if (dupcnt != 0) printf (\"# of duplicate test names\\t%d\\n\", dupcnt)\n }\n EOF\n "}]}