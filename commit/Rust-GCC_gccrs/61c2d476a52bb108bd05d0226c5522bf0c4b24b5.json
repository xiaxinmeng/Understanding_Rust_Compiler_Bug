{"sha": "61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFjMmQ0NzZhNTJiYjEwOGJkMDVkMDIyNmM1NTIyYmYwYzRiMjRiNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-09T07:33:51Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-09T07:33:51Z"}, "message": "Fortran: Fixes for OpenMP loop-iter privatization (PRs 95109 + 94690)\n\nThis commit also fixes a gfortran.dg/gomp/target1.f90 regression;\ntarget1.f90 tests the resolve.c and openmp.c changes.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/95109\n\tPR fortran/94690\n\t* resolve.c (gfc_resolve_code): Also call\n\tgfc_resolve_omp_parallel_blocks for 'distribute parallel do (simd)'.\n\t* openmp.c (gfc_resolve_omp_parallel_blocks): Handle it.\n\t(gfc_resolve_do_iterator): Remove special code for SIMD, which is\n\tnot needed.\n\t* trans-openmp.c (gfc_trans_omp_target): For TARGET_PARALLEL_DO_SIMD,\n\tcall simd not do processing function.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/95109\n\tPR fortran/94690\n\t* gfortran.dg/gomp/combined-if.f90: Update scan-tree-dump-times for\n\t'omp simd.*if'.\n\t* gfortran.dg/gomp/openmp-simd-5.f90: New test.", "tree": {"sha": "77831ed52a09f74543818b2c7404420fb07d29e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77831ed52a09f74543818b2c7404420fb07d29e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f56f1a5a755e4f2080ff709ad7bf4088b84faefe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f56f1a5a755e4f2080ff709ad7bf4088b84faefe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f56f1a5a755e4f2080ff709ad7bf4088b84faefe"}], "stats": {"total": 63, "additions": 36, "deletions": 27}, "files": [{"sha": "1efce33e5194d1b4baf38b4ed33dc7fefb77f27e", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "patch": "@@ -5962,6 +5962,8 @@ gfc_resolve_omp_parallel_blocks (gfc_code *code, gfc_namespace *ns)\n \n   switch (code->op)\n     {\n+    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO:\n+    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD:\n     case EXEC_OMP_PARALLEL_DO:\n     case EXEC_OMP_PARALLEL_DO_SIMD:\n     case EXEC_OMP_TARGET_PARALLEL_DO:\n@@ -6047,31 +6049,6 @@ gfc_resolve_do_iterator (gfc_code *code, gfc_symbol *sym, bool add_clause)\n   if (omp_current_ctx->sharing_clauses->contains (sym))\n     return;\n \n-  if (omp_current_ctx->is_openmp && omp_current_ctx->code->block)\n-    {\n-      /* SIMD is handled differently and, hence, ignored here.  */\n-      gfc_code *omp_code = omp_current_ctx->code->block;\n-      for ( ; omp_code->next; omp_code = omp_code->next)\n-\tswitch (omp_code->op)\n-\t  {\n-\t  case EXEC_OMP_SIMD:\n-\t  case EXEC_OMP_DO_SIMD:\n-\t  case EXEC_OMP_PARALLEL_DO_SIMD:\n-\t  case EXEC_OMP_DISTRIBUTE_SIMD:\n-\t  case EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD:\n-\t  case EXEC_OMP_TEAMS_DISTRIBUTE_SIMD:\n-\t  case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD:\n-\t  case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n-\t  case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n-\t  case EXEC_OMP_TARGET_PARALLEL_DO_SIMD:\n-\t  case EXEC_OMP_TARGET_SIMD:\n-\t  case EXEC_OMP_TASKLOOP_SIMD:\n-\t    return;\n-\t  default:\n-\t    break;\n-\t  }\n-    }\n-\n   if (! omp_current_ctx->private_iterators->add (sym) && add_clause)\n     {\n       gfc_omp_clauses *omp_clauses = omp_current_ctx->code->ext.omp_clauses;"}, {"sha": "f4ce49f84323b425cd283714653b34df95a4c998", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "patch": "@@ -11722,6 +11722,8 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t      omp_workshare_flag = 1;\n \t      gfc_resolve_omp_parallel_blocks (code, ns);\n \t      break;\n+\t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO:\n+\t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD:\n \t    case EXEC_OMP_PARALLEL:\n \t    case EXEC_OMP_PARALLEL_DO:\n \t    case EXEC_OMP_PARALLEL_DO_SIMD:"}, {"sha": "0e1da0426b48b5c5f9c167923899051e5a780f33", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "patch": "@@ -5591,13 +5591,19 @@ gfc_trans_omp_target (gfc_code *code)\n       }\n       break;\n     case EXEC_OMP_TARGET_PARALLEL_DO:\n-    case EXEC_OMP_TARGET_PARALLEL_DO_SIMD:\n       stmt = gfc_trans_omp_parallel_do (code, &block, clausesa);\n       if (TREE_CODE (stmt) != BIND_EXPR)\n \tstmt = build3_v (BIND_EXPR, NULL, stmt, poplevel (1, 0));\n       else\n \tpoplevel (0, 0);\n       break;\n+    case EXEC_OMP_TARGET_PARALLEL_DO_SIMD:\n+      stmt = gfc_trans_omp_parallel_do_simd (code, &block, clausesa);\n+      if (TREE_CODE (stmt) != BIND_EXPR)\n+\tstmt = build3_v (BIND_EXPR, NULL, stmt, poplevel (1, 0));\n+      else\n+\tpoplevel (0, 0);\n+      break;\n     case EXEC_OMP_TARGET_SIMD:\n       stmt = gfc_trans_omp_do (code, EXEC_OMP_SIMD, &block,\n \t\t\t       &clausesa[GFC_OMP_SPLIT_SIMD], NULL_TREE);"}, {"sha": "d9e4a26ca0cdc21948ff0796a2901b534e8ccacc", "filename": "gcc/testsuite/gfortran.dg/gomp/combined-if.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcombined-if.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcombined-if.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcombined-if.f90?ref=61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "patch": "@@ -104,6 +104,6 @@ subroutine test_target_teams_distribute_parallel_loop_simd\n end module\n \n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target.* if\\\\(\" 9 \"omplower\" } }\n-! { dg-final { scan-tree-dump-times \"(?n)#pragma omp simd.* if\\\\(\" 4 \"omplower\" { target { ! offload_nvptx } } } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp simd.* if\\\\(\" 5 \"omplower\" { target { ! offload_nvptx } } } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp simd.* if\\\\(\" 7 \"omplower\" { target { offload_nvptx } } } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp parallel.* if\\\\(\" 6 \"omplower\" } }"}, {"sha": "b6d4cfa70800afd2f792bd5062142291dd012c11", "filename": "gcc/testsuite/gfortran.dg/gomp/openmp-simd-5.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c2d476a52bb108bd05d0226c5522bf0c4b24b5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-5.f90?ref=61c2d476a52bb108bd05d0226c5522bf0c4b24b5", "patch": "@@ -0,0 +1,24 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+!\n+! Related:\n+!   PR fortran/95109\n+!   PR fortran/94690\n+!\n+implicit none\n+integer :: i, j, k, ll\n+integer :: a\n+!$omp target parallel do simd collapse(1)\n+  do i = 1, 5\n+    do j = 1, 5\n+      do k = 1, 5\n+        a = a + 1\n+      end do\n+      do ll = 1, 5\n+        a = a + 1\n+      end do\n+    end do\n+  end do\n+!$omp end target parallel do simd\n+end\n+\n+! { dg-final { scan-tree-dump-times \"omp simd linear\\\\(i:1\\\\) private\\\\(j\\\\) private\\\\(ll\\\\) private\\\\(k\\\\) collapse\\\\(1\\\\)\" 1 \"original\" } }"}]}