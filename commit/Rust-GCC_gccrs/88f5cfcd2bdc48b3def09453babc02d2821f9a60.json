{"sha": "88f5cfcd2bdc48b3def09453babc02d2821f9a60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmNWNmY2QyYmRjNDhiM2RlZjA5NDUzYmFiYzAyZDI4MjFmOWE2MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-06-20T06:30:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-06-20T06:30:19Z"}, "message": "tree-ssa-math-opts.c (do_shift_rotate, [...]): Cast 0xff to uint64_t before shifting it up.\n\n\t* tree-ssa-math-opts.c (do_shift_rotate, find_bswap_or_nop_1): Cast\n\t0xff to uint64_t before shifting it up.\n\nFrom-SVN: r211837", "tree": {"sha": "62c9e67f61bb42960cddae702071f0e081ea7958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62c9e67f61bb42960cddae702071f0e081ea7958"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88f5cfcd2bdc48b3def09453babc02d2821f9a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f5cfcd2bdc48b3def09453babc02d2821f9a60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f5cfcd2bdc48b3def09453babc02d2821f9a60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f5cfcd2bdc48b3def09453babc02d2821f9a60/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d45574aa297574840e7b0d4ab3ec13f7d9d5b64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d45574aa297574840e7b0d4ab3ec13f7d9d5b64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d45574aa297574840e7b0d4ab3ec13f7d9d5b64"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "357596f82513cce6631c5f12526cfc4fb81c9f96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f5cfcd2bdc48b3def09453babc02d2821f9a60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f5cfcd2bdc48b3def09453babc02d2821f9a60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88f5cfcd2bdc48b3def09453babc02d2821f9a60", "patch": "@@ -1,3 +1,8 @@\n+2014-06-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-ssa-math-opts.c (do_shift_rotate, find_bswap_or_nop_1): Cast\n+\t0xff to uint64_t before shifting it up.\n+\n 2014-06-20  Julian Brown  <julian@codesourcery.com>\n \t    Chung-Lin Tang  <cltang@codesourcery.com>\n "}, {"sha": "ca2b30dbc520f54dc7710c42a046762a0d4bf28f", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f5cfcd2bdc48b3def09453babc02d2821f9a60/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f5cfcd2bdc48b3def09453babc02d2821f9a60/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=88f5cfcd2bdc48b3def09453babc02d2821f9a60", "patch": "@@ -1669,7 +1669,8 @@ do_shift_rotate (enum tree_code code,\n       break;\n     case RSHIFT_EXPR:\n       /* Arithmetic shift of signed type: result is dependent on the value.  */\n-      if (!TYPE_UNSIGNED (n->type) && (n->n & (0xff << (bitsize - 8))))\n+      if (!TYPE_UNSIGNED (n->type)\n+\t  && (n->n & ((uint64_t) 0xff << (bitsize - 8))))\n \treturn false;\n       n->n >>= count;\n       break;\n@@ -1903,7 +1904,7 @@ find_bswap_or_nop_1 (gimple stmt, struct symbolic_number *n, int limit)\n \t    old_type_size = TYPE_PRECISION (n->type);\n \t    if (!TYPE_UNSIGNED (n->type)\n \t\t&& type_size > old_type_size\n-\t\t&& n->n & (0xff << (old_type_size - 8)))\n+\t\t&& n->n & ((uint64_t) 0xff << (old_type_size - 8)))\n \t      return NULL;\n \n \t    if (type_size / BITS_PER_UNIT < (int)(sizeof (int64_t)))"}]}