{"sha": "220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwZDFmZDlkZmQ4ZDdhYmNiOWQ1Y2MzOGY1ZWU4ZTViYTdjMmE2NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:16:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:16:09Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* ali.adb (Initialize_ALI): Initialize SSO_Default_Specified\n\t(Scan_ALI): Set SSO_Default in ALIs_Record (Scan_ALI): Set\n\tSSO_Default_Specified.\n\t* ali.ads (ALIs_Record): Add field SSO_Default\n\t(SSO_Default_Specified): New global switch.\n\t* bcheck.adb (Check_Consistent_SSO_Default): New procedure\n\t(Check_Configuration_Consistency): Call this procedure\n\t* einfo.adb (SSO_Set_High_By_Default): New\n\tfunction (SSO_Set_Low_By_Default): New function\n\t(Set_SSO_Set_High_By_Default): New procedure\n\t(Set_SSO_Set_Low_By_Default): New procedure (Write_Entity_Flags):\n\tList new flags\n\t* einfo.ads (SSO_Set_Low_By_Default): New flag\n\t(SSO_Set_High_By_Default): New flag\n\t* freeze.adb (Set_SSO_From_Default): New procedure\n\t(Freeze_Array_Type): Call Set_SSO_From_Default\n\t(Freeze_Record_Type): Call Set_SSO_From_Default\n\t* gnat_rm.texi: Document pragma Default_Scalar_Storage_Order\n\t* lib-writ.adb (Write_ALI): Set OL/OH in P line as needed\n\t* lib-writ.ads: Add OL/OH parameters to P line\n\t* opt.adb: Set Default_SSO, Default_SSO_Config as appropriate\n\t* opt.ads (Default_SSO): New global switch (Default_SSO_Config):\n\tNew global switch\n\t* repinfo.adb (List_Scalar_Storage_Order): List SSO when it is\n\tset by default using pragma Default_Scalar_Storage_Order.\n\t* sem.ads (Scope_Stack_Entry): Add component Save_Default_SSO\n\t* sem_ch13.adb (Inherit_Delayed_Rep_Aspects):\n\tClear SSO defaults when explicit SSO is inherited.\n\t(Analyze_Attribute_Definition_Clause): Clear SSO defaults when\n\texplicit SSO is specified.\n\t(Inherit_Aspects_At_Freeze_Point):\n\tClear SSO default when inheriting SSO.\n\t* sem_ch3.adb (Set_Default_SSO): New procedure\n\t(Analyze_Private_Extension_Declaration): Set defualt SSO\n\t(Array_Type_Declaration): ditto (Build_Derived_Array_Type): ditto\n\t(Build_Derived_Private_Type): ditto (Build_Derived_Record_Type):\n\tditto (Build_Derived_Type): ditto (Make_Class_Wide_Type): ditto\n\t(Record_Type_Declaration): ditto\n\t* sem_ch8.adb (Pop_Scope): Restore Default_SSO (Push_Scope):\n\tSave Default_SSO\n\t* sem_prag.adb (Analyze_Pragma, case\n\tDefault_Scalar_Storage_Order): Set Default_SSO\n\n2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Valid_Operator_Definition): Verify that\n\tall parameter have mode IN. This check must be done here for\n\tsubprogram instantiations that have operator names, because their\n\tanalysis does not follow the same path as that for subprogram\n\tdeclarations.\n\nFrom-SVN: r213167", "tree": {"sha": "5389f6a46906c759c37c6dffed297c34f415d891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5389f6a46906c759c37c6dffed297c34f415d891"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/comments", "author": null, "committer": null, "parents": [{"sha": "a08bf2de29311011ebdfe1454afb832b0cdbb453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a08bf2de29311011ebdfe1454afb832b0cdbb453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a08bf2de29311011ebdfe1454afb832b0cdbb453"}], "stats": {"total": 544, "additions": 507, "deletions": 37}, "files": [{"sha": "82be63d5d5a445db56ce630ae7e02e55cd072b07", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -1,3 +1,56 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* ali.adb (Initialize_ALI): Initialize SSO_Default_Specified\n+\t(Scan_ALI): Set SSO_Default in ALIs_Record (Scan_ALI): Set\n+\tSSO_Default_Specified.\n+\t* ali.ads (ALIs_Record): Add field SSO_Default\n+\t(SSO_Default_Specified): New global switch.\n+\t* bcheck.adb (Check_Consistent_SSO_Default): New procedure\n+\t(Check_Configuration_Consistency): Call this procedure\n+\t* einfo.adb (SSO_Set_High_By_Default): New\n+\tfunction (SSO_Set_Low_By_Default): New function\n+\t(Set_SSO_Set_High_By_Default): New procedure\n+\t(Set_SSO_Set_Low_By_Default): New procedure (Write_Entity_Flags):\n+\tList new flags\n+\t* einfo.ads (SSO_Set_Low_By_Default): New flag\n+\t(SSO_Set_High_By_Default): New flag\n+\t* freeze.adb (Set_SSO_From_Default): New procedure\n+\t(Freeze_Array_Type): Call Set_SSO_From_Default\n+\t(Freeze_Record_Type): Call Set_SSO_From_Default\n+\t* gnat_rm.texi: Document pragma Default_Scalar_Storage_Order\n+\t* lib-writ.adb (Write_ALI): Set OL/OH in P line as needed\n+\t* lib-writ.ads: Add OL/OH parameters to P line\n+\t* opt.adb: Set Default_SSO, Default_SSO_Config as appropriate\n+\t* opt.ads (Default_SSO): New global switch (Default_SSO_Config):\n+\tNew global switch\n+\t* repinfo.adb (List_Scalar_Storage_Order): List SSO when it is\n+\tset by default using pragma Default_Scalar_Storage_Order.\n+\t* sem.ads (Scope_Stack_Entry): Add component Save_Default_SSO\n+\t* sem_ch13.adb (Inherit_Delayed_Rep_Aspects):\n+\tClear SSO defaults when explicit SSO is inherited.\n+\t(Analyze_Attribute_Definition_Clause): Clear SSO defaults when\n+\texplicit SSO is specified.\n+\t(Inherit_Aspects_At_Freeze_Point):\n+\tClear SSO default when inheriting SSO.\n+\t* sem_ch3.adb (Set_Default_SSO): New procedure\n+\t(Analyze_Private_Extension_Declaration): Set defualt SSO\n+\t(Array_Type_Declaration): ditto (Build_Derived_Array_Type): ditto\n+\t(Build_Derived_Private_Type): ditto (Build_Derived_Record_Type):\n+\tditto (Build_Derived_Type): ditto (Make_Class_Wide_Type): ditto\n+\t(Record_Type_Declaration): ditto\n+\t* sem_ch8.adb (Pop_Scope): Restore Default_SSO (Push_Scope):\n+\tSave Default_SSO\n+\t* sem_prag.adb (Analyze_Pragma, case\n+\tDefault_Scalar_Storage_Order): Set Default_SSO\n+\n+2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Valid_Operator_Definition): Verify that\n+\tall parameter have mode IN. This check must be done here for\n+\tsubprogram instantiations that have operator names, because their\n+\tanalysis does not follow the same path as that for subprogram\n+\tdeclarations.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb (Freeze_Entity, Concurrent_Type case): Add a guard"}, {"sha": "d94cb7e0e09ab9251a015e644929a7874e4c85ff", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -115,6 +115,7 @@ package body ALI is\n       Normalize_Scalars_Specified            := False;\n       Partition_Elaboration_Policy_Specified := ' ';\n       Queuing_Policy_Specified               := ' ';\n+      SSO_Default_Specified                  := False;\n       Static_Elaboration_Model_Used          := False;\n       Task_Dispatching_Policy_Specified      := ' ';\n       Unreserve_All_Interrupts_Specified     := False;\n@@ -892,6 +893,7 @@ package body ALI is\n         Restrictions                 => No_Restrictions,\n         SAL_Interface                => False,\n         Sfile                        => No_File,\n+        SSO_Default                  => ' ',\n         Task_Dispatching_Policy      => ' ',\n         Time_Slice_Value             => -1,\n         WC_Encoding                  => 'b',\n@@ -1131,6 +1133,19 @@ package body ALI is\n                   Fatal_Error_Ignore;\n                end if;\n \n+            --  Processing for OH/OL\n+\n+            elsif C = 'O' then\n+               C := Getc;\n+\n+               if C = 'L' or else C = 'H' then\n+                  ALIs.Table (Id).SSO_Default := C;\n+                  SSO_Default_Specified := True;\n+\n+               else\n+                  Fatal_Error_Ignore;\n+               end if;\n+\n             --  Processing for Qx\n \n             elsif C = 'Q' then"}, {"sha": "1b05ba6717b928f4e1b0c355806b4d4eab8f9425", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -188,6 +188,12 @@ package ALI is\n       --  Set to True if file was compiled with Normalize_Scalars. Not set if\n       --  'P' appears in Ignore_Lines.\n \n+      SSO_Default : Character;\n+      --  Set to 'H' or 'L' if file was compiled with a configuration pragma\n+      --  file containing Default_Scalar_Storage_Order (High/Low_Order_First).\n+      --  Set to ' ' if neither pragma was present. Not set if 'P' appears in\n+      --  Ignore_Lines.\n+\n       Unit_Exception_Table : Boolean;\n       --  Set to True if unit exception table pointer generated. Not set if 'P'\n       --  appears in Ignore_Lines.\n@@ -501,6 +507,11 @@ package ALI is\n    --  ali files, showing whether a restriction pragma exists anywhere, and\n    --  accumulating the aggregate knowledge of violations.\n \n+   SSO_Default_Specified : Boolean := False;\n+   --  Set to True if at least one ALI file contains an OH/OL flag indicating\n+   --  that it was compiled with a configuration pragmas file containing the\n+   --  pragma Default_Scalar_Storage_Order (OH/OL present in ALI file P line).\n+\n    Stack_Check_Switch_Set : Boolean := False;\n    --  Set to True if at least one ALI file contains '-fstack-check' in its\n    --  argument list."}, {"sha": "a141013f84374ac548239181a56fc5558e20d13f", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -56,6 +56,7 @@ package body Bcheck is\n    procedure Check_Consistent_Queuing_Policy;\n    procedure Check_Consistent_Restrictions;\n    procedure Check_Consistent_Restriction_No_Default_Initialization;\n+   procedure Check_Consistent_SSO_Default;\n    procedure Check_Consistent_Zero_Cost_Exception_Handling;\n \n    procedure Consistency_Error_Msg (Msg : String);\n@@ -88,6 +89,10 @@ package body Bcheck is\n          Check_Consistent_Partition_Elaboration_Policy;\n       end if;\n \n+      if SSO_Default_Specified then\n+         Check_Consistent_SSO_Default;\n+      end if;\n+\n       if Zero_Cost_Exceptions_Specified then\n          Check_Consistent_Zero_Cost_Exception_Handling;\n       end if;\n@@ -1108,6 +1113,73 @@ package body Bcheck is\n       end loop;\n    end Check_Consistent_Restriction_No_Default_Initialization;\n \n+   ----------------------------------\n+   -- Check_Consistent_SSO_Default --\n+   ----------------------------------\n+\n+   procedure Check_Consistent_SSO_Default is\n+      Default : Character;\n+\n+   begin\n+      Default := ALIs.Table (ALIs.First).SSO_Default;\n+\n+      --  Check all entries match the default above from the first entry\n+\n+      for A1 in ALIs.First + 1 .. ALIs.Last loop\n+         if ALIs.Table (A1).SSO_Default /= Default then\n+            Default := '?';\n+            exit;\n+         end if;\n+      end loop;\n+\n+      --  All match, return\n+\n+      if Default /= '?' then\n+         return;\n+      end if;\n+\n+      --  Here we have a mismatch\n+\n+      Consistency_Error_Msg\n+        (\"files not compiled with same Default_Scalar_Storage_Order\");\n+\n+      Write_Eol;\n+      Write_Str (\"files compiled with High_Order_First\");\n+      Write_Eol;\n+\n+      for A1 in ALIs.First .. ALIs.Last loop\n+         if ALIs.Table (A1).SSO_Default = 'H' then\n+            Write_Str (\"  \");\n+            Write_Name (ALIs.Table (A1).Sfile);\n+            Write_Eol;\n+         end if;\n+      end loop;\n+\n+      Write_Eol;\n+      Write_Str (\"files compiled with Low_Order_First\");\n+      Write_Eol;\n+\n+      for A1 in ALIs.First .. ALIs.Last loop\n+         if ALIs.Table (A1).SSO_Default = 'L' then\n+            Write_Str (\"  \");\n+            Write_Name (ALIs.Table (A1).Sfile);\n+            Write_Eol;\n+         end if;\n+      end loop;\n+\n+      Write_Eol;\n+      Write_Str (\"files compiled with no Default_Scalar_Storage_Order\");\n+      Write_Eol;\n+\n+      for A1 in ALIs.First .. ALIs.Last loop\n+         if ALIs.Table (A1).SSO_Default = ' ' then\n+            Write_Str (\"  \");\n+            Write_Name (ALIs.Table (A1).Sfile);\n+            Write_Eol;\n+         end if;\n+      end loop;\n+   end Check_Consistent_SSO_Default;\n+\n    ---------------------------------------------------\n    -- Check_Consistent_Zero_Cost_Exception_Handling --\n    ---------------------------------------------------"}, {"sha": "35a88befa3259b071c23171e537203b3ab434d19", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -564,13 +564,13 @@ package body Einfo is\n    --    Stores_Attribute_Old_Prefix     Flag270\n \n    --    (Has_Protected)                 Flag271\n+   --    (SSO_Set_Low_By_Default)        Flag272\n+   --    (SSO_Set_Low_By_Default)        Flag273\n \n    --    (unused)                        Flag1\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n-   --    (unused)                        Flag272\n-   --    (unused)                        Flag273\n    --    (unused)                        Flag274\n    --    (unused)                        Flag275\n    --    (unused)                        Flag276\n@@ -2972,6 +2972,18 @@ package body Einfo is\n       return Node19 (Id);\n    end Spec_Entity;\n \n+   function SSO_Set_High_By_Default (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Record_Type (Id) or else Is_Array_Type (Id));\n+      return Flag273 (Base_Type (Id));\n+   end SSO_Set_High_By_Default;\n+\n+   function SSO_Set_Low_By_Default (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Record_Type (Id) or else Is_Array_Type (Id));\n+      return Flag272 (Base_Type (Id));\n+   end SSO_Set_Low_By_Default;\n+\n    function Static_Discrete_Predicate (Id : E) return S is\n    begin\n       pragma Assert (Is_Discrete_Type (Id));\n@@ -5768,6 +5780,22 @@ package body Einfo is\n       Set_Node19 (Id, V);\n    end Set_Spec_Entity;\n \n+   procedure Set_SSO_Set_High_By_Default (Id : E; V : B := True) is\n+   begin\n+      pragma Assert\n+        (Is_Base_Type (Id)\n+         and then (Is_Record_Type (Id) or else Is_Array_Type (Id)));\n+      Set_Flag273 (Id, V);\n+   end Set_SSO_Set_High_By_Default;\n+\n+   procedure Set_SSO_Set_Low_By_Default (Id : E; V : B := True) is\n+   begin\n+      pragma Assert\n+        (Is_Base_Type (Id)\n+         and then (Is_Record_Type (Id) or else Is_Array_Type (Id)));\n+      Set_Flag272 (Id, V);\n+   end Set_SSO_Set_Low_By_Default;\n+\n    procedure Set_Static_Discrete_Predicate (Id : E; V : S) is\n    begin\n       pragma Assert (Is_Discrete_Type (Id) and then Has_Predicates (Id));\n@@ -8448,6 +8476,8 @@ package body Einfo is\n       W (\"Size_Known_At_Compile_Time\",      Flag92  (Id));\n       W (\"SPARK_Aux_Pragma_Inherited\",      Flag266 (Id));\n       W (\"SPARK_Pragma_Inherited\",          Flag265 (Id));\n+      W (\"SSO_Set_High_By_Default\",         Flag273 (Id));\n+      W (\"SSO_Set_Low_By_Default\",          Flag272 (Id));\n       W (\"Static_Elaboration_Desired\",      Flag77  (Id));\n       W (\"Stores_Attribute_Old_Prefix\",     Flag270 (Id));\n       W (\"Strict_Alignment\",                Flag145 (Id));"}, {"sha": "753a03060480fe99a6b7f1115bcf6b55d2cc4bfb", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -3897,6 +3897,16 @@ package Einfo is\n --       case where there is a separate spec, where this field references\n --       the corresponding parameter entities in the spec.\n \n+--    SSO_Set_High_By_Default (Flag273) [base type only]\n+--       Defined for record and array types. Set in the base type if a pragma\n+--       Default_Scalar_Storage_Order (High_Order_First) was active at the time\n+--       the record or array was declared and therefore applies to it.\n+\n+--    SSO_Set_Low_By_Default (Flag272) [base type only]\n+--       Defined for record and array types. Set in the base type if a pragma\n+--       Default_Scalar_Storage_Order (High_Order_First) was active at the time\n+--       the record or array was declared and therefore applies to it.\n+\n --    Static_Discrete_Predicate (List25)\n --       Defined in discrete types/subtypes with static predicates (with the\n --       two flags Has_Predicates and Has_Static_Predicate set). Set if the\n@@ -5367,6 +5377,8 @@ package Einfo is\n    --    Has_Pragma_Pack                     (Flag121)  (impl base type only)\n    --    Is_Constrained                      (Flag12)\n    --    Reverse_Storage_Order               (Flag93)   (base type only)\n+   --    SSO_Set_High_By_Default             (Flag273)  (base type only)\n+   --    SSO_Set_Low_By_Default              (Flag272)  (base type only)\n    --    Next_Index                          (synth)\n    --    Number_Dimensions                   (synth)\n    --    (plus type attributes)\n@@ -5392,6 +5404,8 @@ package Einfo is\n    --    First_Entity                        (Node17)\n    --    Equivalent_Type                     (Node18)   (always Empty for type)\n    --    Last_Entity                         (Node20)\n+   --    SSO_Set_High_By_Default             (Flag273)  (base type only)\n+   --    SSO_Set_Low_By_Default              (Flag272)  (base type only)\n    --    First_Component                     (synth)\n    --    First_Component_Or_Discriminant     (synth)\n    --    (plus type attributes)\n@@ -6023,6 +6037,8 @@ package Einfo is\n    --    OK_To_Reorder_Components            (Flag239)  (base type only)\n    --    Reverse_Bit_Order                   (Flag164)  (base type only)\n    --    Reverse_Storage_Order               (Flag93)   (base type only)\n+   --    SSO_Set_High_By_Default             (Flag273)  (base type only)\n+   --    SSO_Set_Low_By_Default              (Flag272)  (base type only)\n    --    First_Component                     (synth)\n    --    First_Component_Or_Discriminant     (synth)\n    --    (plus type attributes)\n@@ -6049,6 +6065,8 @@ package Einfo is\n    --    OK_To_Reorder_Components            (Flag239)  (base type only)\n    --    Reverse_Bit_Order                   (Flag164)  (base type only)\n    --    Reverse_Storage_Order               (Flag93)   (base type only)\n+   --    SSO_Set_High_By_Default             (Flag273)  (base type only)\n+   --    SSO_Set_Low_By_Default              (Flag272)  (base type only)\n    --    First_Component                     (synth)\n    --    First_Component_Or_Discriminant     (synth)\n    --    (plus type attributes)\n@@ -6073,6 +6091,8 @@ package Einfo is\n    --    Component_Type                      (Node20)   (base type only)\n    --    Static_Real_Or_String_Predicate     (Node25)\n    --    Is_Constrained                      (Flag12)\n+   --    SSO_Set_High_By_Default             (Flag273)  (base type only)\n+   --    SSO_Set_Low_By_Default              (Flag272)  (base type only)\n    --    Next_Index                          (synth)\n    --    Number_Dimensions                   (synth)\n    --    (plus type attributes)\n@@ -6812,6 +6832,8 @@ package Einfo is\n    function SPARK_Pragma                        (Id : E) return N;\n    function SPARK_Pragma_Inherited              (Id : E) return B;\n    function Spec_Entity                         (Id : E) return E;\n+   function SSO_Set_High_By_Default             (Id : E) return B;\n+   function SSO_Set_Low_By_Default              (Id : E) return B;\n    function Static_Elaboration_Desired          (Id : E) return B;\n    function Static_Initialization               (Id : E) return N;\n    function Static_Discrete_Predicate           (Id : E) return S;\n@@ -7447,6 +7469,8 @@ package Einfo is\n    procedure Set_SPARK_Pragma                    (Id : E; V : N);\n    procedure Set_SPARK_Pragma_Inherited          (Id : E; V : B := True);\n    procedure Set_Spec_Entity                     (Id : E; V : E);\n+   procedure Set_SSO_Set_High_By_Default         (Id : E; V : B := True);\n+   procedure Set_SSO_Set_Low_By_Default          (Id : E; V : B := True);\n    procedure Set_Static_Elaboration_Desired      (Id : E; V : B);\n    procedure Set_Static_Initialization           (Id : E; V : N);\n    procedure Set_Static_Discrete_Predicate       (Id : E; V : S);\n@@ -8232,6 +8256,8 @@ package Einfo is\n    pragma Inline (SPARK_Pragma);\n    pragma Inline (SPARK_Pragma_Inherited);\n    pragma Inline (Spec_Entity);\n+   pragma Inline (SSO_Set_High_By_Default);\n+   pragma Inline (SSO_Set_Low_By_Default);\n    pragma Inline (Static_Elaboration_Desired);\n    pragma Inline (Static_Initialization);\n    pragma Inline (Static_Discrete_Predicate);\n@@ -8666,6 +8692,8 @@ package Einfo is\n    pragma Inline (Set_SPARK_Pragma);\n    pragma Inline (Set_SPARK_Pragma_Inherited);\n    pragma Inline (Set_Spec_Entity);\n+   pragma Inline (Set_SSO_Set_High_By_Default);\n+   pragma Inline (Set_SSO_Set_Low_By_Default);\n    pragma Inline (Set_Static_Elaboration_Desired);\n    pragma Inline (Set_Static_Initialization);\n    pragma Inline (Set_Static_Discrete_Predicate);"}, {"sha": "046af103674a62d51b72fed341fcbd89b0cb4242", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 47, "deletions": 7, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -180,6 +180,14 @@ package body Freeze is\n    --  the flag if Debug_Info_Off is set. This procedure also ensures that\n    --  subsidiary entities have the flag set as required.\n \n+   procedure Set_SSO_From_Default (T : Entity_Id);\n+   --  T is a record or array type that is being frozen. If it is a base type,\n+   --  and if SSO_Set_Low/High_By_Default is set, then Reverse_Storage order\n+   --  will be set appropriately. Note that an explicit occurrence of aspect\n+   --  Scalar_Storage_Order or an explicit setting of this aspect with an\n+   --  attribute definition clause occurs, then these two flags are reset in\n+   --  any case, so call will have no effect.\n+\n    procedure Undelay_Type (T : Entity_Id);\n    --  T is a type of a component that we know to be an Itype. We don't want\n    --  this to have a Freeze_Node, so ensure it doesn't. Do the same for any\n@@ -2074,7 +2082,11 @@ package body Freeze is\n \n          --  Processing that is done only for base types\n \n-         if Ekind (Arr) = E_Array_Type then\n+         if Ekind (Arr) = E_Array_Type then  -- what about E_String_Type ???\n+\n+            --  Deal with default setting of reverse storage order\n+\n+            Set_SSO_From_Default (Arr);\n \n             --  Propagate flags for component type\n \n@@ -3091,6 +3103,12 @@ package body Freeze is\n             end loop;\n          end;\n \n+         --  Deal with default setting of reverse storage order\n+\n+         Set_SSO_From_Default (Rec);\n+\n+         --  Now deal with reverse storage order/bit order issues\n+\n          if Present (SSO_ADC) then\n \n             --  Check compatibility of Scalar_Storage_Order with Bit_Order, if\n@@ -4692,12 +4710,11 @@ package body Freeze is\n          then\n             Freeze_Record_Type (E);\n \n-         --  For a concurrent type, freeze corresponding record type. This\n-         --  does not correspond to any specific rule in the RM, but the\n-         --  record type is essentially part of the concurrent type.\n-         --  Freeze as well all local entities. This includes record types\n-         --  created for entry parameter blocks, and whatever local entities\n-         --  may appear in the private part.\n+         --  For a concurrent type, freeze corresponding record type. This does\n+         --  not correspond to any specific rule in the RM, but the record type\n+         --  is essentially part of the concurrent type. Also freeze all local\n+         --  entities. This includes record types created for entry parameter\n+         --  blocks and whatever local entities may appear in the private part.\n \n          elsif Is_Concurrent_Type (E) then\n             if Present (Corresponding_Record_Type (E)) then\n@@ -7174,6 +7191,29 @@ package body Freeze is\n       end if;\n    end Set_Component_Alignment_If_Not_Set;\n \n+   --------------------------\n+   -- Set_SSO_From_Default --\n+   --------------------------\n+\n+   procedure Set_SSO_From_Default (T : Entity_Id) is\n+   begin\n+      if (Is_Record_Type (T) or else Is_Array_Type (T))\n+        and then Is_Base_Type (T)\n+      then\n+         if (Bytes_Big_Endian and then SSO_Set_Low_By_Default (T))\n+              or else\n+            ((not Bytes_Big_Endian) and then SSO_Set_High_By_Default (T))\n+         then\n+            --  If flags cause reverse storage order, then set the result. Note\n+            --  that we would have ignored the pragma setting the non default\n+            --  storage order in any case, hence the assertion at this point.\n+\n+            pragma Assert (Support_Nondefault_SSO_On_Target);\n+            Set_Reverse_Storage_Order (T);\n+         end if;\n+      end if;\n+   end Set_SSO_From_Default;\n+\n    ------------------\n    -- Undelay_Type --\n    ------------------"}, {"sha": "3319bd7b48737a27facc37c864dcca255dc3fe28", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 87, "deletions": 4, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -140,6 +140,7 @@ Implementation Defined Pragmas\n * Pragma CPU::\n * Pragma Debug::\n * Pragma Debug_Policy::\n+* Pragma Default_Scalar_Storage_Order::\n * Pragma Default_Storage_Pool::\n * Pragma Depends::\n * Pragma Detect_Blocking::\n@@ -990,6 +991,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma CPU::\n * Pragma Debug::\n * Pragma Debug_Policy::\n+* Pragma Default_Scalar_Storage_Order::\n * Pragma Default_Storage_Pool::\n * Pragma Depends::\n * Pragma Detect_Blocking::\n@@ -2507,8 +2509,79 @@ This pragma is equivalent to a corresponding @code{Check_Policy} pragma\n with a first argument of @code{Debug}. It is retained for historical\n compatibility reasons.\n \n+@node Pragma Default_Scalar_Storage_Order\n+@unnumberedsec Pragma Default_Scalar_Storage_Order\n+@cindex Default_Scalar_Storage_Order\n+@cindex Scalar_Storage_Order\n+@findex Default_Scalar_Storage_Order\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Default_Scalar_Storage_Order (High_Order_First | Low_Order_First);\n+@end smallexample\n+\n+@noindent\n+Normally if no explicit @code{Scalar_Storage_Order} is given for a record\n+type or array type, then the scalar storage order defaults to the ordinary\n+default for the target. But this default may be overridden using this pragma.\n+The pragma may appear as a configuration pragma, or locally within a package\n+spec or declarative part. In the latter case, it applies to all subsequent\n+types declared within that package spec or declarative part.\n+\n+If this pragma is used as a configuration pragma which appears within a\n+configuration pragma file (as opposed to appearing explicitly at the start\n+of a single unit), then the binder will require that all units in a partition\n+be compiled in a similar manner, including all units in the run-time that\n+are included in the partition.\n+\n+The following example shows the use of this pragma:\n+\n+@smallexample @c ada\n+pragma Default_Scalar_Storage_Order (High_Order_First);\n+with System; use System;\n+package DSSO1 is\n+   type H1 is record\n+      a : Integer;\n+   end record;\n+\n+   type L2 is record\n+      a : Integer;\n+   end record;\n+   for L2'Scalar_Storage_Order use Low_Order_First;\n+\n+   type L2a is new L2;\n+\n+   package Inner is\n+      type H3 is record\n+         a : Integer;\n+      end record;\n+\n+      pragma Default_Scalar_Storage_Order (Low_Order_First);\n+\n+      type L4 is record\n+         a : Integer;\n+      end record;\n+   end Inner;\n+\n+   type H4a is new Inner.L4;\n+\n+   type H5 is record\n+      a : Integer;\n+   end record;\n+end DSSO1;\n+@end smallexample\n+\n+@noindent\n+In this example record types L.. have @code{Low_Order_First} scalar\n+storage order, and record types H.. have @code{High_Order_First}.\n+Note that in the case of @code{H4a}, the order is not inherited\n+from the parent type. Only an explicitly set @code{Scalar_Storage_Order}\n+gets inherited on type derivation.\n+\n @node Pragma Default_Storage_Pool\n @unnumberedsec Pragma Default_Storage_Pool\n+@cindex Default_Storage_Pool\n @findex Default_Storage_Pool\n @noindent\n Syntax:\n@@ -9306,7 +9379,9 @@ this attribute.\n @noindent\n For every array or record type @var{S}, the representation attribute\n @code{Scalar_Storage_Order} denotes the order in which storage elements\n-that make up scalar components are ordered within S:\n+that make up scalar components are ordered within S. The value given must\n+be a static expression of type System.Bit_Order. The following is an example\n+of the use of this feature:\n \n @smallexample @c ada\n    --  Component type definitions\n@@ -9340,6 +9415,7 @@ that make up scalar components are ordered within S:\n    --  the former is used.\n @end smallexample\n \n+@noindent\n Other properties are as for standard representation attribute @code{Bit_Order},\n as defined by Ada RM 13.5.3(4). The default is @code{System.Default_Bit_Order}.\n \n@@ -9349,10 +9425,12 @@ this means that if a @code{Scalar_Storage_Order} attribute definition\n clause is not confirming, then the type's @code{Bit_Order} shall be\n specified explicitly and set to the same value.\n \n-For a record extension, the derived type shall have the same scalar storage\n-order as the parent type.\n+Derived types inherit an explicitly set scalar storage order from their parent\n+types. This may be overridden for the derived type by giving an explicit scalar\n+storage order for the derived type. For a record extension, the derived type\n+must have the same scalar storage order as the parent type.\n \n-If a component of @var{S} is of a record or array type, then that type shall\n+If a component of @var{S} is of a record or array type, then that type must\n also have a @code{Scalar_Storage_Order} attribute definition clause.\n \n A component of a record or array type that is a packed array, or that\n@@ -9392,6 +9470,11 @@ are relaxed. Instead, the following rules apply:\n \n @end itemize\n \n+If no scalar storage order is specified for a type (either directly, or by\n+inheritance in the case of a derived type), then the default is normally\n+the native ordering of the target, but this default can be overridden using\n+pragma @code{Default_Scalar_Storage_Order}.\n+\n @node Attribute Simple_Storage_Pool\n @unnumberedsec Attribute Simple_Storage_Pool\n @cindex Storage pool, simple"}, {"sha": "5ca7b4b5bfbdbb9068541f775625d2a43316212c", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -1159,6 +1159,11 @@ package body Lib.Writ is\n          Write_Info_Str (\" NS\");\n       end if;\n \n+      if Default_SSO_Config /= ' ' then\n+         Write_Info_Str (\" O\");\n+         Write_Info_Char (Default_SSO_Config);\n+      end if;\n+\n       if Sec_Stack_Used then\n          Write_Info_Str (\" SS\");\n       end if;"}, {"sha": "66f08dc987d9137d1f1af5fef4613032623c6f38", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -220,6 +220,12 @@ package Lib.Writ is\n    --         NS   Normalize_Scalars pragma in effect for all units in\n    --              this file.\n \n+   --         OH   Pragma Default_Scalar_Storage_Order (High_Order_First) is\n+   --              present in a configuration pragma file that applies.\n+\n+   --         OL   Pragma Default_Scalar_Storage_Order (Low_Order_First) is\n+   --              present in a configuration pragma file that applies.\n+\n    --         Qx   A valid Queueing_Policy pragma applies to all the units\n    --              in this file, where x is the first character (upper case)\n    --              of the policy name (e.g. 'P' for Priority_Queueing)."}, {"sha": "115500dfaa0f853e9a7e7183436234e6aff9d366", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -52,6 +52,7 @@ package body Opt is\n       Check_Float_Overflow_Config           := Check_Float_Overflow;\n       Check_Policy_List_Config              := Check_Policy_List;\n       Default_Pool_Config                   := Default_Pool;\n+      Default_SSO_Config                    := Default_SSO;\n       Dynamic_Elaboration_Checks_Config     := Dynamic_Elaboration_Checks;\n       Exception_Locations_Suppressed_Config := Exception_Locations_Suppressed;\n       Extensions_Allowed_Config             := Extensions_Allowed;\n@@ -90,6 +91,7 @@ package body Opt is\n       Check_Float_Overflow           := Save.Check_Float_Overflow;\n       Check_Policy_List              := Save.Check_Policy_List;\n       Default_Pool                   := Save.Default_Pool;\n+      Default_SSO                    := Save.Default_SSO;\n       Dynamic_Elaboration_Checks     := Save.Dynamic_Elaboration_Checks;\n       Exception_Locations_Suppressed := Save.Exception_Locations_Suppressed;\n       Extensions_Allowed             := Save.Extensions_Allowed;\n@@ -130,6 +132,7 @@ package body Opt is\n       Save.Check_Float_Overflow           := Check_Float_Overflow;\n       Save.Check_Policy_List              := Check_Policy_List;\n       Save.Default_Pool                   := Default_Pool;\n+      Save.Default_SSO                    := Default_SSO;\n       Save.Dynamic_Elaboration_Checks     := Dynamic_Elaboration_Checks;\n       Save.Exception_Locations_Suppressed := Exception_Locations_Suppressed;\n       Save.Extensions_Allowed             := Extensions_Allowed;\n@@ -190,6 +193,7 @@ package body Opt is\n             Assertions_Enabled       := Assertions_Enabled_Config;\n             Assume_No_Invalid_Values := Assume_No_Invalid_Values_Config;\n             Check_Policy_List        := Check_Policy_List_Config;\n+            Default_SSO              := Default_SSO_Config;\n             SPARK_Mode               := SPARK_Mode_Config;\n             SPARK_Mode_Pragma        := SPARK_Mode_Pragma_Config;\n          else\n@@ -210,6 +214,7 @@ package body Opt is\n          Assume_No_Invalid_Values    := Assume_No_Invalid_Values_Config;\n          Check_Float_Overflow        := Check_Float_Overflow_Config;\n          Check_Policy_List           := Check_Policy_List_Config;\n+         Default_SSO                 := Default_SSO_Config;\n          Dynamic_Elaboration_Checks  := Dynamic_Elaboration_Checks_Config;\n          Extensions_Allowed          := Extensions_Allowed_Config;\n          External_Name_Exp_Casing    := External_Name_Exp_Casing_Config;"}, {"sha": "ba28fe31e86be587b22b84eae0c9914fea3fdcca", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -418,17 +418,26 @@ package Opt is\n    --  to trigger the activation of the remote debugging interface.\n    --  Is this still true ???\n \n+   Default_Exit_Status : Int := 0;\n+   --  GNATBIND\n+   --  Set the default exit status value. Set by the -Xnnn switch for the\n+   --  binder.\n+\n    Debug_Generated_Code : Boolean := False;\n    --  GNAT\n    --  Set True (-gnatD switch) to debug generated expanded code instead\n    --  of the original source code. Causes debugging information to be\n    --  written with respect to the generated code file that is written.\n \n-   Default_Exit_Status : Int := 0;\n-   --  GNATBIND\n-   --  Set the default exit status value. Set by the -Xnnn switch for the\n-   --  binder.\n-\n+   Default_Pool : Node_Id := Empty;\n+   --  GNAT\n+   --  Used to record the storage pool name (or null literal) that is the\n+   --  argument of an applicable pragma Default_Storage_Pool.\n+   --    Empty:       No pragma Default_Storage_Pool applies.\n+   --    N_Null node: \"pragma Default_Storage_Pool (null);\" applies.\n+   --    otherwise:   \"pragma Default_Storage_Pool (X);\" applies, and\n+   --                 this points to the name X.\n+   --  Push_Scope and Pop_Scope in Sem_Ch8 save and restore this value.\n    Default_Stack_Size : Int := -1;\n    --  GNATBIND\n    --  Set to default primary stack size in units of bytes. Set by\n@@ -442,15 +451,11 @@ package Opt is\n    --  default was set by the binder, and that the default should be the\n    --  initial value of System.Secondary_Stack.Default_Secondary_Stack_Size.\n \n-   Default_Pool : Node_Id := Empty;\n+   Default_SSO : Character := ' ';\n    --  GNAT\n-   --  Used to record the storage pool name (or null literal) that is the\n-   --  argument of an applicable pragma Default_Storage_Pool.\n-   --    Empty:       No pragma Default_Storage_Pool applies.\n-   --    N_Null node: \"pragma Default_Storage_Pool (null);\" applies.\n-   --    otherwise:   \"pragma Default_Storage_Pool (X);\" applies, and\n-   --                 this points to the name X.\n-   --  Push_Scope and Pop_Scope in Sem_Ch8 save and restore this value.\n+   --  Set if a pragma Default_Scalar_Storage_Order has been given. The value\n+   --  of ' ' indicates that no default has been set, otherwise the value is\n+   --  either 'H' for High_Order_First or 'L' for Lower_Order_First.\n \n    Detect_Blocking : Boolean := False;\n    --  GNAT\n@@ -1809,7 +1814,8 @@ package Opt is\n    --  These are settings that are used to establish the mode at the start of\n    --  each unit. The values defined below can be affected either by command\n    --  line switches, or by the use of appropriate configuration pragmas in a\n-   --  configuration pragma file.\n+   --  configuration pragma file (but NOT by a local use of a configuration\n+   --  pragma in a single file).\n \n    Ada_Version_Config : Ada_Version_Type;\n    --  GNAT\n@@ -1863,6 +1869,12 @@ package Opt is\n    --  Same as Default_Pool above, except this is only for Default_Storage_Pool\n    --  pragmas that are configuration pragmas.\n \n+   Default_SSO_Config : Character := ' ';\n+   --  GNAT\n+   --  Set if a pragma Default_Scalar_Storage_Order appears as a configuration\n+   --  pragma. A value of ' ' means that no pragma was given, otherwise the\n+   --  value is 'H' for High_Order_First or 'L' for Low_Order_First.\n+\n    Dynamic_Elaboration_Checks_Config : Boolean := False;\n    --  GNAT\n    --  Set True for dynamic elaboration checking mode, as set by the -gnatE\n@@ -2116,6 +2128,7 @@ private\n       Check_Float_Overflow           : Boolean;\n       Check_Policy_List              : Node_Id;\n       Default_Pool                   : Node_Id;\n+      Default_SSO                    : Character;\n       Dynamic_Elaboration_Checks     : Boolean;\n       Exception_Locations_Suppressed : Boolean;\n       Extensions_Allowed             : Boolean;"}, {"sha": "dbec602e98566292491df7c6f15343bb0dda352d", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -1092,10 +1092,14 @@ package body Repinfo is\n    --  Start of processing for List_Scalar_Storage_Order\n \n    begin\n-      if Has_Rep_Item (Ent, Name_Scalar_Storage_Order) then\n+      --  List info if set explicitly or by use of Default_Scalar_Storage_Order\n \n-         --  For a record type with explicitly specified scalar storage order,\n-         --  also display explicit Bit_Order.\n+      if Has_Rep_Item (Ent, Name_Scalar_Storage_Order)\n+        or else SSO_Set_Low_By_Default (Ent)\n+        or else SSO_Set_High_By_Default (Ent)\n+      then\n+         --  For a record type with specified scalar storage order, also\n+         --  display explicit Bit_Order.\n \n          if Is_Record_Type (Ent) then\n             List_Attr (\"Bit_Order\");"}, {"sha": "681df14671a74e641d24d6569685ff089504504d", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -486,6 +486,9 @@ package Sem is\n       Save_SPARK_Mode_Pragma : Node_Id;\n       --  Setting of SPARK_Mode_Pragma on entry to restore on exit\n \n+      Save_Default_SSO : Character;\n+      --  Setting of Default_SSO on entry to restore on exit\n+\n       Save_Uneval_Old : Character;\n       --  Setting of Uneval_Old on entry to restore on exit\n "}, {"sha": "f6a4be12f83a722a1a547c6cbe1cc6b0aca4b287", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -932,6 +932,12 @@ package body Sem_Ch13 is\n                           and then Reverse_Storage_Order (P)\n                         then\n                            Set_Reverse_Storage_Order (Base_Type (E));\n+\n+                           --  Clear default SSO indications, since the aspect\n+                           --  overrides the default.\n+\n+                           Set_SSO_Set_Low_By_Default  (Base_Type (E), False);\n+                           Set_SSO_Set_High_By_Default (Base_Type (E), False);\n                         end if;\n \n                      --  Small\n@@ -3272,6 +3278,18 @@ package body Sem_Ch13 is\n \n                Typ := Etype (F);\n \n+               --  If the attribute specification comes from an aspect\n+               --  specification for a class-wide stream, the parameter\n+               --  must be a class-wide type of the entity to which the\n+               --  aspect applies.\n+\n+               if From_Aspect_Specification (N)\n+                 and then Class_Present (Parent (N))\n+                 and then Is_Class_Wide_Type (Typ)\n+               then\n+                  Typ := Etype (Typ);\n+               end if;\n+\n             else\n                Typ := Etype (Subp);\n             end if;\n@@ -4758,6 +4776,12 @@ package body Sem_Ch13 is\n                         & \"not supported on target\", Expr);\n                   end if;\n                end if;\n+\n+               --  Clear SSO default indications since explicit setting of the\n+               --  order overrides the defaults.\n+\n+               Set_SSO_Set_Low_By_Default  (Base_Type (U_Ent), False);\n+               Set_SSO_Set_High_By_Default (Base_Type (U_Ent), False);\n             end if;\n          end Scalar_Storage_Order;\n \n@@ -10311,6 +10335,12 @@ package body Sem_Ch13 is\n                   Set_Reverse_Storage_Order (Bas_Typ,\n                     Reverse_Storage_Order (Entity (Name\n                       (Get_Rep_Item (Typ, Name_Scalar_Storage_Order)))));\n+\n+                  --  Clear default SSO indications, since the inherited aspect\n+                  --  which was set explicitly overrides the default.\n+\n+                  Set_SSO_Set_Low_By_Default  (Bas_Typ, False);\n+                  Set_SSO_Set_High_By_Default (Bas_Typ, False);\n                end if;\n             end if;\n          end;"}, {"sha": "a2aeaf96c4ca3b290a6f121d6a288c3c9cb429df", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 43, "deletions": 5, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -699,6 +699,11 @@ package body Sem_Ch3 is\n    --  scalar range. Subt provides the parent subtype to be used to analyze,\n    --  resolve, and check the given range.\n \n+   procedure Set_Default_SSO (T : Entity_Id);\n+   --  T is the entity for an array or record being declared. This procedure\n+   --  sets the flags SSO_Set_Low_By_Default/SSO_Set_High_By_Default according\n+   --  to the setting of Opt.Default_SSO.\n+\n    procedure Signed_Integer_Type_Declaration (T : Entity_Id; Def : Node_Id);\n    --  Create a new signed integer entity, and apply the constraint to obtain\n    --  the required first named subtype of this type.\n@@ -846,8 +851,7 @@ package body Sem_Ch3 is\n             Set_Ekind\n               (Anon_Type, E_Anonymous_Access_Protected_Subprogram_Type);\n          else\n-            Set_Ekind\n-              (Anon_Type, E_Anonymous_Access_Subprogram_Type);\n+            Set_Ekind (Anon_Type, E_Anonymous_Access_Subprogram_Type);\n          end if;\n \n          Set_Can_Use_Internal_Rep\n@@ -4176,6 +4180,7 @@ package body Sem_Ch3 is\n       Set_Scope            (T, Current_Scope);\n       Set_Ekind            (T, E_Record_Type_With_Private);\n       Init_Size_Align      (T);\n+      Set_Default_SSO      (T);\n \n       Set_Etype            (T,            Parent_Base);\n       Set_Has_Task         (T, Has_Task  (Parent_Base));\n@@ -5154,6 +5159,7 @@ package body Sem_Ch3 is\n          Set_Etype              (Implicit_Base, Implicit_Base);\n          Set_Scope              (Implicit_Base, Current_Scope);\n          Set_Has_Delayed_Freeze (Implicit_Base);\n+         Set_Default_SSO        (Implicit_Base);\n \n          --  The constrained array type is a subtype of the unconstrained one\n \n@@ -5201,6 +5207,7 @@ package body Sem_Ch3 is\n                                           Is_Controlled (Element_Type));\n          Set_Finalize_Storage_Only    (T, Finalize_Storage_Only\n                                                         (Element_Type));\n+         Set_Default_SSO              (T);\n       end if;\n \n       --  Common attributes for both cases\n@@ -5680,8 +5687,8 @@ package body Sem_Ch3 is\n          if Nkind (Indic) /= N_Subtype_Indication then\n             Make_Implicit_Base;\n \n-            Set_Ekind             (Derived_Type, Ekind (Parent_Type));\n-            Set_Etype             (Derived_Type, Implicit_Base);\n+            Set_Ekind                     (Derived_Type, Ekind (Parent_Type));\n+            Set_Etype                     (Derived_Type, Implicit_Base);\n             Copy_Array_Subtype_Attributes (Derived_Type, Parent_Type);\n \n          else\n@@ -6582,6 +6589,7 @@ package body Sem_Ch3 is\n \n                Set_Ekind (Full_Der, E_Record_Type);\n                Set_Is_Underlying_Record_View (Full_Der);\n+               Set_Default_SSO (Full_Der);\n \n                Analyze (Decl);\n \n@@ -7496,6 +7504,7 @@ package body Sem_Ch3 is\n       if Private_Extension then\n          Type_Def := N;\n          Set_Ekind (Derived_Type, E_Record_Type_With_Private);\n+         Set_Default_SSO (Derived_Type);\n \n       else\n          Type_Def := Type_Definition (N);\n@@ -7509,6 +7518,7 @@ package body Sem_Ch3 is\n \n          if Present (Record_Extension_Part (Type_Def)) then\n             Set_Ekind (Derived_Type, E_Record_Type);\n+            Set_Default_SSO (Derived_Type);\n \n             --  Create internal access types for components with anonymous\n             --  access types.\n@@ -7819,7 +7829,6 @@ package body Sem_Ch3 is\n          else\n             declare\n                GB : constant Node_Id := Enclosing_Generic_Body (Derived_Type);\n-\n             begin\n                if Present (GB)\n                  and then GB /= Enclosing_Generic_Body (Parent_Base)\n@@ -8472,6 +8481,15 @@ package body Sem_Ch3 is\n \n       Set_Convention     (Derived_Type, Convention     (Parent_Base));\n \n+      --  Set SSO default for record or array type\n+\n+      if (Is_Array_Type (Derived_Type)\n+          or else Is_Record_Type (Derived_Type))\n+        and then Is_Base_Type (Derived_Type)\n+      then\n+         Set_Default_SSO (Derived_Type);\n+      end if;\n+\n       --  Propagate invariant information. The new type has invariants if\n       --  they are inherited from the parent type, and these invariants can\n       --  be further inherited, so both flags are set.\n@@ -17087,6 +17105,7 @@ package body Sem_Ch3 is\n       Set_Is_Abstract_Type            (CW_Type, False);\n       Set_Is_Constrained              (CW_Type, False);\n       Set_Is_First_Subtype            (CW_Type, Is_First_Subtype (T));\n+      Set_Default_SSO                 (CW_Type);\n \n       if Ekind (T) = E_Class_Wide_Subtype then\n          Set_Etype             (CW_Type, Etype (Base_Type (T)));\n@@ -20056,6 +20075,7 @@ package body Sem_Ch3 is\n       Init_Size_Align       (T);\n       Set_Interfaces        (T, No_Elist);\n       Set_Stored_Constraint (T, No_Elist);\n+      Set_Default_SSO       (T);\n \n       --  Normal case\n \n@@ -20421,6 +20441,24 @@ package body Sem_Ch3 is\n       end if;\n    end Set_Completion_Referenced;\n \n+   ---------------------\n+   -- Set_Default_SSO --\n+   ---------------------\n+\n+   procedure Set_Default_SSO (T : Entity_Id) is\n+   begin\n+      case Opt.Default_SSO is\n+         when ' ' =>\n+            null;\n+         when 'L' =>\n+            Set_SSO_Set_Low_By_Default (T, True);\n+         when 'H' =>\n+            Set_SSO_Set_High_By_Default (T, True);\n+         when others =>\n+            raise Program_Error;\n+      end case;\n+   end Set_Default_SSO;\n+\n    ---------------------\n    -- Set_Fixed_Range --\n    ---------------------"}, {"sha": "1f3a4c50dd78e9654292c7778fc43c1d3c3655b0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -12017,6 +12017,15 @@ package body Sem_Ch6 is\n             Error_Msg_N\n               (\"default values not allowed for operator parameters\",\n                Parent (F));\n+\n+         --  For function instantiations that are operators, we must check\n+         --  separately that the corresponding generic only has in-parameters.\n+         --  For subprogram declarations this is done in Set_Formal_Mode.\n+         --  Such an error could not arise in earlier versions of the language.\n+\n+         elsif Ekind (F) /= E_In_Parameter then\n+            Error_Msg_N\n+              (\"operators can only have IN parameters\", F);\n          end if;\n \n          Next_Formal (F);"}, {"sha": "8643caee853e2cdfcc80509410e071d92af9fa1b", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -7533,6 +7533,7 @@ package body Sem_Ch8 is\n       Default_Pool             := SST.Save_Default_Storage_Pool;\n       SPARK_Mode               := SST.Save_SPARK_Mode;\n       SPARK_Mode_Pragma        := SST.Save_SPARK_Mode_Pragma;\n+      Default_SSO              := SST.Save_Default_SSO;\n       Uneval_Old               := SST.Save_Uneval_Old;\n \n       if Debug_Flag_W then\n@@ -7606,6 +7607,7 @@ package body Sem_Ch8 is\n          SST.Save_Default_Storage_Pool     := Default_Pool;\n          SST.Save_SPARK_Mode               := SPARK_Mode;\n          SST.Save_SPARK_Mode_Pragma        := SPARK_Mode_Pragma;\n+         SST.Save_Default_SSO              := Default_SSO;\n          SST.Save_Uneval_Old               := Uneval_Old;\n \n          if Scope_Stack.Last > Scope_Stack.First then"}, {"sha": "66b5640bf1fee2dd6f8ca9f02ffff51f71bedabf", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=220d1fd9dfd8d7abcb9d5cc38f5ee8e5ba7c2a64", "patch": "@@ -13176,7 +13176,10 @@ package body Sem_Prag is\n          --  pragma Default_Scalar_Storage_Order\n          --           (High_Order_First | Low_Order_First);\n \n-         when Pragma_Default_Scalar_Storage_Order =>\n+         when Pragma_Default_Scalar_Storage_Order => DSSO : declare\n+            Default : Character;\n+\n+         begin\n             GNAT_Pragma;\n             Check_Arg_Count (1);\n \n@@ -13189,7 +13192,27 @@ package body Sem_Prag is\n \n             Check_No_Identifiers;\n             Check_Arg_Is_One_Of\n-              (Arg1, Name_Low_Order_First, Name_High_Order_First);\n+              (Arg1, Name_High_Order_First, Name_Low_Order_First);\n+            Get_Name_String (Chars (Get_Pragma_Arg (Arg1)));\n+            Default := Fold_Upper (Name_Buffer (1));\n+\n+            if not Support_Nondefault_SSO_On_Target\n+              and then (Ttypes.Bytes_Big_Endian /= (Default = 'H'))\n+            then\n+               if Warn_On_Unrecognized_Pragma then\n+                  Error_Msg_N\n+                    (\"non-default Scalar_Storage_Order not supported \"\n+                     & \"on target?g?\", N);\n+                  Error_Msg_N\n+                    (\"\\pragma Default_Scalar_Storage_Order ignored?g?\", N);\n+               end if;\n+\n+            --  Here set the specified default\n+\n+            else\n+               Opt.Default_SSO := Default;\n+            end if;\n+         end DSSO;\n \n          --------------------------\n          -- Default_Storage_Pool --"}]}