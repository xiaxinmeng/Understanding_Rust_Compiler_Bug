{"sha": "6c051d60a93154eae6e916ac87f69b79552f202a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwNTFkNjBhOTMxNTRlYWU2ZTkxNmFjODdmNjliNzk1NTJmMjAyYQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-11-25T17:58:35Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-11-25T17:58:35Z"}, "message": "re PR rtl-optimization/67954 (internal compiler error: in patch_jump_insn, at cfgrtl.c:1303)\n\n2015-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/67954\n\t* lra-constraints.c (curr_insn_transform): Add check on scratch\n\tpseudo when change class to NO_REGS.  Add an assert.\n\nFrom-SVN: r230894", "tree": {"sha": "c4b239ce2edafdf308b2a5765ce2570f123192aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4b239ce2edafdf308b2a5765ce2570f123192aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c051d60a93154eae6e916ac87f69b79552f202a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c051d60a93154eae6e916ac87f69b79552f202a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c051d60a93154eae6e916ac87f69b79552f202a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c051d60a93154eae6e916ac87f69b79552f202a/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df1bddedd4af1edd151461e544d34dfdb8e53b7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1bddedd4af1edd151461e544d34dfdb8e53b7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1bddedd4af1edd151461e544d34dfdb8e53b7e"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "48f96a0707de930f6380bd49cefbcc139e11a1ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c051d60a93154eae6e916ac87f69b79552f202a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c051d60a93154eae6e916ac87f69b79552f202a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c051d60a93154eae6e916ac87f69b79552f202a", "patch": "@@ -1,3 +1,9 @@\n+2015-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/67954\n+\t* lra-constraints.c (curr_insn_transform): Add check on scratch\n+\tpseudo when change class to NO_REGS.  Add an assert.\n+\n 2015-11-25  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx.md (load_arg_reg<mode>): Arg number"}, {"sha": "c62bf6a2ceadd9404188cf53c9826a64005ed38f", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c051d60a93154eae6e916ac87f69b79552f202a/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c051d60a93154eae6e916ac87f69b79552f202a/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=6c051d60a93154eae6e916ac87f69b79552f202a", "patch": "@@ -3725,7 +3725,8 @@ curr_insn_transform (bool check_only_p)\n \t\t assigment pass and the scratch pseudo will be\n \t\t spilled.  Spilled scratch pseudos are transformed\n \t\t back to scratches at the LRA end.  */\n-\t      && lra_former_scratch_operand_p (curr_insn, i))\n+\t      && lra_former_scratch_operand_p (curr_insn, i)\n+\t      && lra_former_scratch_p (REGNO (op)))\n \t    {\n \t      int regno = REGNO (op);\n \t      lra_change_class (regno, NO_REGS, \"      Change to\", true);\n@@ -3734,6 +3735,8 @@ curr_insn_transform (bool check_only_p)\n \t\t   spilled pseudo as there is only one such insn, the\n \t\t   current one.  */\n \t\treg_renumber[regno] = -1;\n+\t      lra_assert (bitmap_single_bit_set_p\n+\t\t\t  (&lra_reg_info[REGNO (op)].insn_bitmap));\n \t    }\n \t  /* We can do an optional reload.  If the pseudo got a hard\n \t     reg, we might improve the code through inheritance.  If"}]}