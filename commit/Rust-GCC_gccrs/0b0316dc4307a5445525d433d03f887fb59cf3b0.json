{"sha": "0b0316dc4307a5445525d433d03f887fb59cf3b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIwMzE2ZGM0MzA3YTU0NDU1MjVkNDMzZDAzZjg4N2ZiNTljZjNiMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-28T21:23:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-28T21:23:09Z"}, "message": "genattrtab.c (write_eligible_delay): Add new variable \"flags\" to the generated functions.\n\n\t* genattrtab.c (write_eligible_delay): Add new variable\n\t\"flags\" to the generated functions.  All callers changed.\n\t(check_attr_test): Handle ATTR_FLAG.\n\t(clear_struct_flag): Likewise.\n\t(count_sub_rtxs): Likewise.\n\t(write_test_expr): Likewise.\n\nFrom-SVN: r3903", "tree": {"sha": "f9996095f9a6d390fe9822357537c5bcf7199f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9996095f9a6d390fe9822357537c5bcf7199f9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b0316dc4307a5445525d433d03f887fb59cf3b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0316dc4307a5445525d433d03f887fb59cf3b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b0316dc4307a5445525d433d03f887fb59cf3b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0316dc4307a5445525d433d03f887fb59cf3b0/comments", "author": null, "committer": null, "parents": [{"sha": "417a6986d30d3fe114ec5679d2702c6e0eac40a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/417a6986d30d3fe114ec5679d2702c6e0eac40a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/417a6986d30d3fe114ec5679d2702c6e0eac40a2"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "13228bbd1a9fd8d8e55aea07f92c07a15a991cc8", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0316dc4307a5445525d433d03f887fb59cf3b0/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0316dc4307a5445525d433d03f887fb59cf3b0/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=0b0316dc4307a5445525d433d03f887fb59cf3b0", "patch": "@@ -994,6 +994,9 @@ check_attr_test (exp, is_const)\n \t}\n       break;\n \n+    case ATTR_FLAG:\n+      break;\n+\n     case CONST_INT:\n       /* Either TRUE or FALSE.  */\n       if (XWINT (exp, 0))\n@@ -3855,6 +3858,7 @@ clear_struct_flag (x)\n     case PC:\n     case CC0:\n     case EQ_ATTR:\n+    case ATTR_FLAG:\n       return;\n     }\n \n@@ -3905,6 +3909,7 @@ count_sub_rtxs (x, max)\n     case PC:\n     case CC0:\n     case EQ_ATTR:\n+    case ATTR_FLAG:\n       return 1;\n     }\n \n@@ -4410,6 +4415,13 @@ write_test_expr (exp, in_comparison)\n \t}\n       break;\n \n+    /* Comparison test of flags for define_delays.  */\n+    case ATTR_FLAG:\n+      if (in_comparison)\n+\tfatal (\"ATTR_FLAG not valid inside comparison\");\n+      printf (\"(flags & ATTR_FLAG_%s) != 0\", XSTR (exp, 0));\n+      break;\n+\n     /* See if an operand matches a predicate.  */\n     case MATCH_OPERAND:\n       /* If only a mode is given, just ensure the mode matches the operand.\n@@ -4551,6 +4563,9 @@ walk_attr_value (exp)\n     case PC:\n       address_used = 1;\n       return;\n+\n+    case ATTR_FLAG:\n+      return;\n     }\n \n   for (i = 0, fmt = GET_RTX_FORMAT (code); i < GET_RTX_LENGTH (code); i++)\n@@ -4919,10 +4934,12 @@ write_eligible_delay (kind)\n   /* Write function prelude.  */\n \n   printf (\"int\\n\");\n-  printf (\"eligible_for_%s (delay_insn, slot, candidate_insn)\\n\", kind);\n+  printf (\"eligible_for_%s (delay_insn, slot, candidate_insn, flags)\\n\", \n+\t   kind);\n   printf (\"     rtx delay_insn;\\n\");\n   printf (\"     int slot;\\n\");\n   printf (\"     rtx candidate_insn;\\n\");\n+  printf (\"     int flags;\\n\");\n   printf (\"{\\n\");\n   printf (\"  rtx insn;\\n\");\n   printf (\"\\n\");"}]}