{"sha": "366e6bd1733bb53b0f555ea4365e9d16f24fa143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2ZTZiZDE3MzNiYjUzYjBmNTU1ZWE0MzY1ZTlkMTZmMjRmYTE0Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-12-09T17:54:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-12-09T17:54:27Z"}, "message": "type_traits: Implement remove_extent and remove_all_extents.\n\n2004-12-09  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/type_traits: Implement remove_extent and\n\tremove_all_extents.\n\t* testsuite/tr1/4_metaprogramming/array_modifications/\n\tremove_all_extents.cc: New.\n\t* testsuite/tr1/4_metaprogramming/array_modifications/\n\tremove_extent.cc: Likewise.\n\nFrom-SVN: r91958", "tree": {"sha": "649ea26a46033cfbb893bc486b9a1d1ad0c58c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/649ea26a46033cfbb893bc486b9a1d1ad0c58c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/366e6bd1733bb53b0f555ea4365e9d16f24fa143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366e6bd1733bb53b0f555ea4365e9d16f24fa143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366e6bd1733bb53b0f555ea4365e9d16f24fa143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366e6bd1733bb53b0f555ea4365e9d16f24fa143/comments", "author": null, "committer": null, "parents": [{"sha": "88d6095610c1186ca5cdf4e2dc85c6ab2c59ce31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d6095610c1186ca5cdf4e2dc85c6ab2c59ce31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88d6095610c1186ca5cdf4e2dc85c6ab2c59ce31"}], "stats": {"total": 152, "additions": 149, "deletions": 3}, "files": [{"sha": "4e510e99834280d4f5ea369e9faac73ca0f8f338", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=366e6bd1733bb53b0f555ea4365e9d16f24fa143", "patch": "@@ -1,3 +1,12 @@\n+2004-12-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/type_traits: Implement remove_extent and\n+\tremove_all_extents.\n+\t* testsuite/tr1/4_metaprogramming/array_modifications/\n+\tremove_all_extents.cc: New.\n+\t* testsuite/tr1/4_metaprogramming/array_modifications/\n+\tremove_extent.cc: Likewise.\n+\n 2004-12-08  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits: Implement is_same, add_reference and"}, {"sha": "6b698b0623a2a2ff20effcef6ad93008a78dab55", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=366e6bd1733bb53b0f555ea4365e9d16f24fa143", "patch": "@@ -300,10 +300,40 @@ namespace tr1\n \n   /// @brief  array modififications [4.7.3].\n   template<typename _Tp>\n-    struct remove_extent;\n-  \n+    struct remove_extent\n+    {\n+      typedef _Tp   type;\n+    };\n+\n+  template<typename _Tp, std::size_t _Size>\n+    struct remove_extent<_Tp[_Size]>\n+    {\n+      typedef _Tp   type;\n+    };\n+\n+  template<typename _Tp>\n+    struct remove_extent<_Tp[]>\n+    {\n+      typedef _Tp   type;\n+    };\n+\n   template<typename _Tp>\n-    struct remove_all_extents;\n+    struct remove_all_extents\n+    {\n+      typedef _Tp   type;\n+    };\n+\n+  template<typename _Tp, std::size_t _Size>\n+    struct remove_all_extents<_Tp[_Size]>\n+    {\n+      typedef typename remove_all_extents<_Tp>::type   type;\n+    };\n+\n+  template<typename _Tp>\n+    struct remove_all_extents<_Tp[]>\n+    {\n+      typedef typename remove_all_extents<_Tp>::type   type;\n+    };\n \n   /// @brief  pointer modifications [4.7.4].\n   template<typename _Tp>"}, {"sha": "c02a63449a64c9cc241a68fe8a7baeb8880f54d0", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/array_modifications/remove_all_extents.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Farray_modifications%2Fremove_all_extents.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Farray_modifications%2Fremove_all_extents.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Farray_modifications%2Fremove_all_extents.cc?ref=366e6bd1733bb53b0f555ea4365e9d16f24fa143", "patch": "@@ -0,0 +1,54 @@\n+// 2004-12-09  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.7.3 Array modifications\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::remove_all_extents;\n+  using std::tr1::is_same;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (is_same<remove_all_extents<int>::type, int>::value) );\n+  VERIFY( (is_same<remove_all_extents<int[2]>::type, int>::value) );\n+  VERIFY( (is_same<remove_all_extents<int[2][3]>::type, int>::value) );\n+  VERIFY( (is_same<remove_all_extents<int[][3]>::type, int>::value) );\n+  VERIFY( (is_same<remove_all_extents<const int[2][3]>::type,\n+\t   const int>::value) );\n+  VERIFY( (is_same<remove_all_extents<ClassType>::type, ClassType>::value) );\n+  VERIFY( (is_same<remove_all_extents<ClassType[2]>::type, ClassType>::value) );\n+  VERIFY( (is_same<remove_all_extents<ClassType[2][3]>::type,\n+\t   ClassType>::value) );\n+  VERIFY( (is_same<remove_all_extents<ClassType[][3]>::type,\n+\t   ClassType>::value) );\n+  VERIFY( (is_same<remove_all_extents<const ClassType[2][3]>::type,\n+\t   const ClassType>::value) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "9cd372da05efafeab3f4d886403bf5b0ecc60b87", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/array_modifications/remove_extent.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Farray_modifications%2Fremove_extent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366e6bd1733bb53b0f555ea4365e9d16f24fa143/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Farray_modifications%2Fremove_extent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Farray_modifications%2Fremove_extent.cc?ref=366e6bd1733bb53b0f555ea4365e9d16f24fa143", "patch": "@@ -0,0 +1,53 @@\n+// 2004-12-09  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.7.3 Array modifications\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::remove_extent;\n+  using std::tr1::is_same;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (is_same<remove_extent<int>::type, int>::value) );\n+  VERIFY( (is_same<remove_extent<int[2]>::type, int>::value) );\n+  VERIFY( (is_same<remove_extent<int[2][3]>::type, int[3]>::value) );\n+  VERIFY( (is_same<remove_extent<int[][3]>::type, int[3]>::value) );\n+  VERIFY( (is_same<remove_extent<const int[2]>::type, const int>::value) );\n+  VERIFY( (is_same<remove_extent<ClassType>::type, ClassType>::value) );\n+  VERIFY( (is_same<remove_extent<ClassType[2]>::type, ClassType>::value) );\n+  VERIFY( (is_same<remove_extent<ClassType[2][3]>::type,\n+\t   ClassType[3]>::value) );\n+  VERIFY( (is_same<remove_extent<ClassType[][3]>::type,\n+\t   ClassType[3]>::value) );\n+  VERIFY( (is_same<remove_extent<const ClassType[2]>::type,\n+\t   const ClassType>::value) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}