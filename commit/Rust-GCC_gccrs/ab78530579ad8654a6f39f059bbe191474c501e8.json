{"sha": "ab78530579ad8654a6f39f059bbe191474c501e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI3ODUzMDU3OWFkODY1NGE2ZjM5ZjA1OWJiZTE5MTQ3NGM1MDFlOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-07-05T20:04:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-07-05T20:04:49Z"}, "message": "call.c (joust): Don't complain about `operator char *()' beating `operator const char *() const'.\n\n        * call.c (joust): Don't complain about `operator char *()' beating\n        `operator const char *() const'.\n\nFrom-SVN: r34875", "tree": {"sha": "78cfcf3749e96b97ce4223f406650bdcc539c3f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78cfcf3749e96b97ce4223f406650bdcc539c3f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab78530579ad8654a6f39f059bbe191474c501e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab78530579ad8654a6f39f059bbe191474c501e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab78530579ad8654a6f39f059bbe191474c501e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab78530579ad8654a6f39f059bbe191474c501e8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1337b40caeb25f5fe4869760b9b55d3cce87394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1337b40caeb25f5fe4869760b9b55d3cce87394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1337b40caeb25f5fe4869760b9b55d3cce87394"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "cd6c0d7724ba5386db7cd565b25b53b982ca00be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab78530579ad8654a6f39f059bbe191474c501e8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab78530579ad8654a6f39f059bbe191474c501e8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab78530579ad8654a6f39f059bbe191474c501e8", "patch": "@@ -1,3 +1,8 @@\n+2000-07-05  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (joust): Don't complain about `operator char *()' beating\n+\t`operator const char *() const'.\n+\n 2000-07-04  scott snyder  <snyder@fnal.gov>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "48ce6fb76a9e52968b13879a7793bf1d4851d903", "filename": "gcc/cp/call.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab78530579ad8654a6f39f059bbe191474c501e8/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab78530579ad8654a6f39f059bbe191474c501e8/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=ab78530579ad8654a6f39f059bbe191474c501e8", "patch": "@@ -5050,11 +5050,21 @@ joust (cand1, cand2, warn)\n       if (comp != winner)\n \t{\n \t  struct z_candidate *w, *l;\n+\t  tree convn;\n \t  if (winner == 1)\n \t    w = cand1, l = cand2;\n \t  else\n \t    w = cand2, l = cand1;\n-\t  if (warn)\n+\t  if (DECL_CONTEXT (cand1->fn) == DECL_CONTEXT (cand2->fn)\n+\t      && ! DECL_CONSTRUCTOR_P (cand1->fn)\n+\t      && ! DECL_CONSTRUCTOR_P (cand2->fn)\n+\t      && (convn = standard_conversion\n+\t\t  (TREE_TYPE (TREE_TYPE (l->fn)),\n+\t\t   TREE_TYPE (TREE_TYPE (w->fn)), NULL_TREE))\n+\t      && TREE_CODE (convn) == QUAL_CONV)\n+\t    /* Don't complain about `operator char *()' beating\n+\t       `operator const char *() const'.  */;\n+\t  else if (warn)\n \t    {\n \t      tree source = source_type (TREE_VEC_ELT (w->convs, 0));\n \t      if (! DECL_CONSTRUCTOR_P (w->fn))"}]}