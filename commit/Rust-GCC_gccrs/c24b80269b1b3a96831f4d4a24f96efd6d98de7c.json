{"sha": "c24b80269b1b3a96831f4d4a24f96efd6d98de7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0YjgwMjY5YjFiM2E5NjgzMWY0ZDRhMjRmOTZlZmQ2ZDk4ZGU3Yw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2003-01-22T07:31:51Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-01-22T07:31:51Z"}, "message": "genautomata.c (output_internal_insn_latency_func, [...]): Short circuit when there is no automaton to generate code for.\n\n\t* genautomata.c (output_internal_insn_latency_func,\n\toutput_print_reservation_func): Short circuit when there is no\n\tautomaton to generate code for.\n\nFrom-SVN: r61588", "tree": {"sha": "14a2e445c6451f90f4771e977b830c691ef8ce2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14a2e445c6451f90f4771e977b830c691ef8ce2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c24b80269b1b3a96831f4d4a24f96efd6d98de7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24b80269b1b3a96831f4d4a24f96efd6d98de7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c24b80269b1b3a96831f4d4a24f96efd6d98de7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24b80269b1b3a96831f4d4a24f96efd6d98de7c/comments", "author": null, "committer": null, "parents": [{"sha": "a87294064591321c2b7ffdf3ffe2429c3f04c172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87294064591321c2b7ffdf3ffe2429c3f04c172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a87294064591321c2b7ffdf3ffe2429c3f04c172"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "923bd7b0a7ccf5451316d63d3f7dd9c5fa759647", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24b80269b1b3a96831f4d4a24f96efd6d98de7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24b80269b1b3a96831f4d4a24f96efd6d98de7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c24b80269b1b3a96831f4d4a24f96efd6d98de7c", "patch": "@@ -1,3 +1,9 @@\n+2003-01-21  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* genautomata.c (output_internal_insn_latency_func,\n+\toutput_print_reservation_func): Short circuit when there is no\n+\tautomaton to generate code for.\n+\n 2003-01-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (ssa-ccp.o): Depend on coretypes.h $(TM_H)."}, {"sha": "bb1a9d9a6c66eabf844d5fe1a89b6d4b451f0903", "filename": "gcc/genautomata.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24b80269b1b3a96831f4d4a24f96efd6d98de7c/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24b80269b1b3a96831f4d4a24f96efd6d98de7c/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=c24b80269b1b3a96831f4d4a24f96efd6d98de7c", "patch": "@@ -8920,12 +8920,19 @@ output_internal_insn_latency_func ()\n \t   INTERNAL_INSN_LATENCY_FUNC_NAME, INTERNAL_INSN_CODE_NAME,\n \t   INTERNAL_INSN2_CODE_NAME, INSN_PARAMETER_NAME,\n \t   INSN2_PARAMETER_NAME);\n-  fprintf (output_file, \"\\n\\tint %s;\\n\\tint %s;\\n\",\n+  fprintf (output_file,\n+\t   \"\\n\\tint %s ATTRIBUTE_UNUSED;\\n\\tint %s ATTRIBUTE_UNUSED;\\n\",\n \t   INTERNAL_INSN_CODE_NAME, INTERNAL_INSN2_CODE_NAME);\n   fprintf (output_file,\n \t   \"\\trtx %s ATTRIBUTE_UNUSED;\\n\\trtx %s ATTRIBUTE_UNUSED;\\n{\\n\",\n \t   INSN_PARAMETER_NAME, INSN2_PARAMETER_NAME);\n \n+  if (DECL_INSN_RESERV (advance_cycle_insn_decl)->insn_num == 0)\n+    {\n+      fputs (\"  return 0;\\n}\\n\\n\", output_file);\n+      return;\n+    }\n+\n   fprintf (output_file, \"  static const %s default_latencies[] =\\n    {\",\n \t   tabletype);\n \n@@ -9015,11 +9022,20 @@ output_print_reservation_func ()\n   decl_t decl;\n   int i, j;\n \n-  fprintf (output_file, \"void\\n%s (%s, %s)\\n\\tFILE *%s;\\n\\trtx %s;\\n{\\n\",\n+  fprintf (output_file,\n+\t   \"void\\n%s (%s, %s)\\n\\tFILE *%s;\\n\\trtx %s ATTRIBUTE_UNUSED;\\n{\\n\",\n            PRINT_RESERVATION_FUNC_NAME, FILE_PARAMETER_NAME,\n            INSN_PARAMETER_NAME, FILE_PARAMETER_NAME,\n            INSN_PARAMETER_NAME);\n \n+  if (DECL_INSN_RESERV (advance_cycle_insn_decl)->insn_num == 0)\n+    {\n+      fprintf (output_file, \"  fputs (\\\"%s\\\", %s);\\n}\\n\\n\",\n+\t       NOTHING_NAME, FILE_PARAMETER_NAME);\n+      return;\n+    }\n+\n+\n   fputs (\"  static const char *const reservation_names[] =\\n    {\",\n \t output_file);\n "}]}