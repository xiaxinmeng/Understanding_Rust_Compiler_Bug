{"sha": "d3a9082d7acc3ef443de6f14a16e7063d92844b1", "node_id": "C_kwDOANBUbNoAKGQzYTkwODJkN2FjYzNlZjQ0M2RlNmYxNGExNmU3MDYzZDkyODQ0YjE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-11-17T10:45:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-11-17T17:45:29Z"}, "message": "doc: document -fimplicit-constexpr\n\nI forgot this in the implementation patch.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi (C++ Dialect Options): Document\n\t-fimplicit-constexpr.", "tree": {"sha": "424af098455e4cb9a77c1143342a1e623f4a46d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/424af098455e4cb9a77c1143342a1e623f4a46d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3a9082d7acc3ef443de6f14a16e7063d92844b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9082d7acc3ef443de6f14a16e7063d92844b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a9082d7acc3ef443de6f14a16e7063d92844b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9082d7acc3ef443de6f14a16e7063d92844b1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ea8803e65eb546f58d3dccf5aff94a1638ba8b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea8803e65eb546f58d3dccf5aff94a1638ba8b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea8803e65eb546f58d3dccf5aff94a1638ba8b2"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "bd6b9f6010cc516e407f45f2ed7eb42864a2cda7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3a9082d7acc3ef443de6f14a16e7063d92844b1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3a9082d7acc3ef443de6f14a16e7063d92844b1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d3a9082d7acc3ef443de6f14a16e7063d92844b1", "patch": "@@ -3106,6 +3106,13 @@ word as an identifier.  You can use the keyword @code{__typeof__} instead.\n This option is implied by the strict ISO C++ dialects: @option{-ansi},\n @option{-std=c++98}, @option{-std=c++11}, etc.\n \n+@item -fimplicit-constexpr\n+@opindex fimplicit-constexpr\n+Make inline functions implicitly constexpr, if they satisfy the\n+requirements for a constexpr function.  This option can be used in\n+C++14 mode or later.  This can result in initialization changing from\n+dynamic to static and other optimizations.\n+\n @item -fno-implicit-templates\n @opindex fno-implicit-templates\n @opindex fimplicit-templates"}]}