{"sha": "7a59efae86cfa74ed45a0a78139082e8443873b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E1OWVmYWU4NmNmYTc0ZWQ0NWEwYTc4MTM5MDgyZTg0NDM4NzNiMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-03-07T16:58:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-03-07T16:58:43Z"}, "message": "std_fstream.h (basic_fstream<>::open, [...]): Implement the resolution of DR 409 [Ready], call clear() on success.\n\n2005-03-07  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/std/std_fstream.h (basic_fstream<>::open,\n\tbasic_ifstream<>::open, basic_ofstream<>::open): Implement the\n\tresolution of DR 409 [Ready], call clear() on success.\n\t* docs/html/ext/howto.html: Add an entry for DR 409.\n\t* docs/html/faq/index.html (4_4): Clarify the new behavior.\n\t* testsuite/27_io/basic_ifstream/open/char/1.cc: Adjust.\n\t* testsuite/27_io/basic_ofstream/open/char/1.cc: Likewise.\n\nFrom-SVN: r96030", "tree": {"sha": "3e24f4d2bc47123bfe232405f1429986a7a805e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e24f4d2bc47123bfe232405f1429986a7a805e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a59efae86cfa74ed45a0a78139082e8443873b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a59efae86cfa74ed45a0a78139082e8443873b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a59efae86cfa74ed45a0a78139082e8443873b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a59efae86cfa74ed45a0a78139082e8443873b1/comments", "author": null, "committer": null, "parents": [{"sha": "9ed9eda6736c84c03229e92b3a0c0d23792b5728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed9eda6736c84c03229e92b3a0c0d23792b5728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed9eda6736c84c03229e92b3a0c0d23792b5728"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "a11e34f5387739d546f7a235fd3040819bc9f02c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7a59efae86cfa74ed45a0a78139082e8443873b1", "patch": "@@ -1,3 +1,13 @@\n+2005-03-07  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/std/std_fstream.h (basic_fstream<>::open,\n+\tbasic_ifstream<>::open, basic_ofstream<>::open): Implement the\n+\tresolution of DR 409 [Ready], call clear() on success.\n+\t* docs/html/ext/howto.html: Add an entry for DR 409.\n+\t* docs/html/faq/index.html (4_4): Clarify the new behavior.\n+\t* testsuite/27_io/basic_ifstream/open/char/1.cc: Adjust.\n+\t* testsuite/27_io/basic_ofstream/open/char/1.cc: Likewise.\n+\n 2005-03-05  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* testsuite/22_locale/collate/compare/wchar_t/2.cc,"}, {"sha": "72317f83c5daeaf2c24b1128d6040cc525abf099", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=7a59efae86cfa74ed45a0a78139082e8443873b1", "patch": "@@ -503,6 +503,12 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n     <dd>Replace &quot;new&quot; with &quot;::new&quot;.\n     </dd>\n \n+    <dt><a href=\"lwg-active.html#409\">409</a>:\n+        <em>Closing an fstream should clear the error state</em>\n+    </dt>\n+    <dd>Have <code>open</code> clear the error flags.\n+    </dd>\n+\n     <dt><a href=\"lwg-active.html#434\">434</a>:\n         <em>bitset::to_string() hard to use</em>\n     </dt>"}, {"sha": "a0315981b1c9568336dbc4dc687609414d002fe6", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=7a59efae86cfa74ed45a0a78139082e8443873b1", "patch": "@@ -721,6 +721,9 @@ <h2><a name=\"4_4\">4.4 Things in libstdc++ that only look like bugs</a></h2>\n          DR #22</a> is to leave the flags unchanged.  You must insert a call\n          to <code>fs.clear()</code> between the calls to close() and open(),\n          and then everything will work like we all expect it to work.\n+\t <strong>Update:</strong> for GCC 4.0 we implemented the resolution\n+\t of <a href=\"../ext/howto.html#5\">DR #409</a> and open() now calls\n+\t <code>clear()</code> on success!\n       </p>\n       <p><a name=\"4_4_rel_ops\"><strong>rel_ops</strong></a>\n          Another is the <code>rel_ops</code> namespace and the template"}, {"sha": "fb042ae2feceef481f966b37d19c7c3022e551c3", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=7a59efae86cfa74ed45a0a78139082e8443873b1", "patch": "@@ -496,6 +496,10 @@ namespace std\n       {\n \tif (!_M_filebuf.open(__s, __mode | ios_base::in))\n \t  this->setstate(ios_base::failbit);\n+\telse\n+\t  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t  // 409. Closing an fstream should clear error state\n+\t  this->clear();\n       }\n \n       /**\n@@ -623,6 +627,10 @@ namespace std\n       {\n \tif (!_M_filebuf.open(__s, __mode | ios_base::out))\n \t  this->setstate(ios_base::failbit);\n+\telse\n+\t  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t  // 409. Closing an fstream should clear error state\n+\t  this->clear();\n       }\n \n       /**\n@@ -749,6 +757,10 @@ namespace std\n       {\n \tif (!_M_filebuf.open(__s, __mode))\n \t  this->setstate(ios_base::failbit);\n+\telse\n+\t  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t  // 409. Closing an fstream should clear error state\n+\t  this->clear();\n       }\n \n       /**"}, {"sha": "cbc4c7ac109ea682caf0a50a85f8bca92cfb57e9", "filename": "libstdc++-v3/testsuite/27_io/basic_ifstream/open/char/1.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ifstream%2Fopen%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ifstream%2Fopen%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ifstream%2Fopen%2Fchar%2F1.cc?ref=7a59efae86cfa74ed45a0a78139082e8443873b1", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2000, 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2003, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,9 +40,10 @@ void test01()\n   \n   ifs1.open(name_01);\n   VERIFY( ifs1.is_open() );\n-  // fail bit still true\n-  VERIFY( !(ifs1) );\n-  VERIFY( ifs1.rdstate() == std::ios_base::failbit );\n+\n+  // As per the resolution of DR 409.\n+  VERIFY( (ifs1) );\n+  VERIFY( ifs1.rdstate() == std::ios_base::goodbit );\n \n   ifs1.close();\n }"}, {"sha": "64b9e342c38d6e0429299b4d8564479b4ac7fa12", "filename": "libstdc++-v3/testsuite/27_io/basic_ofstream/open/char/1.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fopen%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a59efae86cfa74ed45a0a78139082e8443873b1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fopen%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fopen%2Fchar%2F1.cc?ref=7a59efae86cfa74ed45a0a78139082e8443873b1", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2000, 2001, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2003, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,9 +41,10 @@ void test01()\n   \n   ofs1.open(name_02);\n   VERIFY( ofs1.is_open() );\n-  // fail bit still true\n-  VERIFY( !(ofs1) );\n-  VERIFY( ofs1.rdstate() == std::ios_base::failbit );\n+\n+  // As per the resolution of DR 409.\n+  VERIFY( (ofs1) );\n+  VERIFY( ofs1.rdstate() == std::ios_base::goodbit );\n \n   ofs1.close();\n }"}]}