{"sha": "86e01104131611a89c0b2f58fa1be720f29e550d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZlMDExMDQxMzE2MTFhODljMGIyZjU4ZmExYmU3MjBmMjllNTUwZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-07-10T13:02:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-07-10T13:02:34Z"}, "message": "hash-map.h (hash_map::iterator::operator*): Return references to key and value.\n\n2018-07-10  Richard Biener  <rguenther@suse.de>\n\n\t* hash-map.h (hash_map::iterator::operator*): Return\n\treferences to key and value.\n\nFrom-SVN: r262539", "tree": {"sha": "f8f8659d1de452ccf0832c8e55bc1b6149fa6796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8f8659d1de452ccf0832c8e55bc1b6149fa6796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86e01104131611a89c0b2f58fa1be720f29e550d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e01104131611a89c0b2f58fa1be720f29e550d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86e01104131611a89c0b2f58fa1be720f29e550d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e01104131611a89c0b2f58fa1be720f29e550d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1bc6caec5fdc1affd2047d518137f7de32cd5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1bc6caec5fdc1affd2047d518137f7de32cd5d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1bc6caec5fdc1affd2047d518137f7de32cd5d6"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "f8717804b2aee377ee6239edd4f121718ce9c855", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e01104131611a89c0b2f58fa1be720f29e550d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e01104131611a89c0b2f58fa1be720f29e550d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86e01104131611a89c0b2f58fa1be720f29e550d", "patch": "@@ -1,3 +1,8 @@\n+2018-07-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* hash-map.h (hash_map::iterator::operator*): Return\n+\treferences to key and value.\n+\n 2018-07-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/86443"}, {"sha": "39848289d80c8efb847f3fb7a122ed5329f11299", "filename": "gcc/hash-map.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e01104131611a89c0b2f58fa1be720f29e550d/gcc%2Fhash-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e01104131611a89c0b2f58fa1be720f29e550d/gcc%2Fhash-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map.h?ref=86e01104131611a89c0b2f58fa1be720f29e550d", "patch": "@@ -223,10 +223,10 @@ class GTY((user)) hash_map\n       return *this;\n     }\n \n-    std::pair<Key, Value> operator* ()\n+    std::pair<const Key&, Value&> operator* ()\n     {\n       hash_entry &e = *m_iter;\n-      return std::pair<Key, Value> (e.m_key, e.m_value);\n+      return std::pair<const Key&, Value&> (e.m_key, e.m_value);\n     }\n \n     bool"}]}