{"sha": "9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY4NDgzY2E4Zjg1OGVhMTllM2UwZmNmNTY3ODIwZTMxOTVmZTJkZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-12-03T15:49:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-03T15:49:12Z"}, "message": "[Ada] Fix problematic overloading of operator in Ada 95 mode\n\nThe change reverts the test deciding whether an initialization procedure\ncan be inherited from parent to derived type to the original\nimplementation, which allowed inheriting a null procedure.\n\nThis prevents the creation of another null initialization procedure for\nthe derived type, which in turn can avoid an artificial overloading\nwhich can wreak havoc in the analysis of private declarations of a\npackage.\n\n2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb (Build_Record_Init_Proc): Inherit an\n\tinitialization procedure if it is present, even if it is null.\n\ngcc/testsuite/\n\n\t* gnat.dg/overload2.adb, gnat.dg/overload2_p.adb,\n\tgnat.dg/overload2_p.ads, gnat.dg/overload2_q.adb,\n\tgnat.dg/overload2_q.ads: New testcase.\n\nFrom-SVN: r266753", "tree": {"sha": "66452a5079e3ab6a4a9e1bf0d4c9aaced7b77d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66452a5079e3ab6a4a9e1bf0d4c9aaced7b77d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/comments", "author": null, "committer": null, "parents": [{"sha": "c899d4bafcad17c7d493123cdf75ce4f54e0f8c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c899d4bafcad17c7d493123cdf75ce4f54e0f8c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c899d4bafcad17c7d493123cdf75ce4f54e0f8c1"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "481f9da53e6b09d8b0ede2f42e67b2f9a783fd5c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -1,3 +1,8 @@\n+2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Record_Init_Proc): Inherit an\n+\tinitialization procedure if it is present, even if it is null.\n+\n 2018-12-03  Patrick Bernardi  <bernardi@adacore.com>\n \n \t* libgnarl/s-taskin.ads (ATC_Level_Base): Redefine to span from"}, {"sha": "35b8fe3c816602da0df16d69ff9c54022207828a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -3712,7 +3712,7 @@ package body Exp_Ch3 is\n         and then not Is_Unchecked_Union (Rec_Type)\n         and then not Has_New_Non_Standard_Rep (Rec_Type)\n         and then not Parent_Subtype_Renaming_Discrims\n-        and then Has_Non_Null_Base_Init_Proc (Etype (Rec_Type))\n+        and then Present (Base_Init_Proc (Etype (Rec_Type)))\n       then\n          Copy_TSS (Base_Init_Proc (Etype (Rec_Type)), Rec_Type);\n "}, {"sha": "b69ad66131680fe2239491846f16d58f13e40f8f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -1,3 +1,9 @@\n+2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/overload2.adb, gnat.dg/overload2_p.adb,\n+\tgnat.dg/overload2_p.ads, gnat.dg/overload2_q.adb,\n+\tgnat.dg/overload2_q.ads: New testcase.\n+\n 2018-12-03  Fritz Reese  <fritzoreese@gmail.com>\n             Mark Eggleston <mark.eggleston@codethink.co.uk>\n "}, {"sha": "56c8587b57dc81b7148b45738a7d14027cb3c5a2", "filename": "gcc/testsuite/gnat.dg/overload2.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2.adb?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -0,0 +1,13 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnat95\" }\n+\n+with Overload2_P; use Overload2_P;\n+with text_io; use text_io;\n+procedure overload2 is\n+  this, that: t;\n+  yes : boolean := this /= that;\n+begin\n+  if not yes then\n+     put_line (\"FAILED\");\n+  end if;\n+end;"}, {"sha": "49343cd90e00ee88327506a1ab1247a3ad8541aa", "filename": "gcc/testsuite/gnat.dg/overload2_p.adb", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_p.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_p.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_p.adb?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -0,0 +1,6 @@\n+--  { dg-options \"-gnat95 -gnatws\" }\n+\n+package body overload2_p is\n+   function \"=\" (this, that: t) return boolean is begin return True; end;\n+   this, that : t;\n+end;"}, {"sha": "8d4da7485313faefc524bf8667b56b80d2610d82", "filename": "gcc/testsuite/gnat.dg/overload2_p.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_p.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_p.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_p.ads?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -0,0 +1,6 @@\n+with overload2_q;\n+package overload2_p is\n+   type t is new overload2_q.t;\n+private\n+   function \"=\" (this, that: t) return boolean;\n+end;"}, {"sha": "55a756eb3873721bf69206501315bc66376403fd", "filename": "gcc/testsuite/gnat.dg/overload2_q.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_q.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_q.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_q.adb?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-options \"-gnat95\" }\n+\n+package body overload2_q is\n+  function \"=\" (this, that: t) return boolean is begin return False; end;\n+end;"}, {"sha": "c4e89aa0ce0ccefbe07b01393a79df66a0fef9a4", "filename": "gcc/testsuite/gnat.dg/overload2_q.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_q.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8483ca8f858ea19e3e0fcf567820e3195fe2de/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_q.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Foverload2_q.ads?ref=9f8483ca8f858ea19e3e0fcf567820e3195fe2de", "patch": "@@ -0,0 +1,4 @@\n+package overload2_q is\n+  type t is null record;\n+  function \"=\" (this, that: t) return boolean;\n+end;"}]}