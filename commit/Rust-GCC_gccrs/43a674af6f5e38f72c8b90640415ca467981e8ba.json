{"sha": "43a674af6f5e38f72c8b90640415ca467981e8ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNhNjc0YWY2ZjVlMzhmNzJjOGI5MDY0MDQxNWNhNDY3OTgxZThiYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-11-10T00:08:15Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-11-10T00:08:15Z"}, "message": "(strength_reduce): Accept VOIDmode initial values.\n\nFrom-SVN: r6046", "tree": {"sha": "3dd67a7043d2755e50d8ea0eebd16078845a2806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dd67a7043d2755e50d8ea0eebd16078845a2806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43a674af6f5e38f72c8b90640415ca467981e8ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a674af6f5e38f72c8b90640415ca467981e8ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a674af6f5e38f72c8b90640415ca467981e8ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a674af6f5e38f72c8b90640415ca467981e8ba/comments", "author": null, "committer": null, "parents": [{"sha": "b1533c05154cce85966c3456e1eb98327ce9847c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1533c05154cce85966c3456e1eb98327ce9847c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1533c05154cce85966c3456e1eb98327ce9847c"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "ddccde5022ddbd5dbd0dc15ef80015a9da89dbc3", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43a674af6f5e38f72c8b90640415ca467981e8ba/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43a674af6f5e38f72c8b90640415ca467981e8ba/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=43a674af6f5e38f72c8b90640415ca467981e8ba", "patch": "@@ -3410,7 +3410,8 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t\t \"Biv %d initialized at insn %d: initial value \",\n \t\t bl->regno, INSN_UID (bl->init_insn));\n \n-      if (GET_MODE (src) == GET_MODE (regno_reg_rtx[bl->regno])\n+      if ((GET_MODE (src) == GET_MODE (regno_reg_rtx[bl->regno])\n+\t   || GET_MODE (src) == VOIDmode)\n \t  && valid_initial_value_p (src, bl->init_insn, call_seen, loop_start))\n \t{\n \t  bl->initial_value = src;"}]}