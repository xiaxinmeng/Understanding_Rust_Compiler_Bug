{"sha": "b7de5864618a5825351f1262287b0bcaaaf08db5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkZTU4NjQ2MThhNTgyNTM1MWYxMjYyMjg3YjBiY2FhYWYwOGRiNQ==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@atrey.karlin.mff.cuni.cz", "date": "2003-07-31T18:29:34Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2003-07-31T18:29:34Z"}, "message": "* fold-const.c (fold): Fold some comparisons of bit operations.\n\nFrom-SVN: r70009", "tree": {"sha": "f8f5e57558cf91a668b545f5720692e87cd5d862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8f5e57558cf91a668b545f5720692e87cd5d862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7de5864618a5825351f1262287b0bcaaaf08db5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7de5864618a5825351f1262287b0bcaaaf08db5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7de5864618a5825351f1262287b0bcaaaf08db5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7de5864618a5825351f1262287b0bcaaaf08db5/comments", "author": null, "committer": null, "parents": [{"sha": "049d2251b8dee35834676247dc19c8a249ab4cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/049d2251b8dee35834676247dc19c8a249ab4cbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/049d2251b8dee35834676247dc19c8a249ab4cbd"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "caa596bc59af34b12ce6063da6e849875b2b0251", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7de5864618a5825351f1262287b0bcaaaf08db5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7de5864618a5825351f1262287b0bcaaaf08db5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7de5864618a5825351f1262287b0bcaaaf08db5", "patch": "@@ -1,3 +1,7 @@\n+2003-07-31  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* fold-const.c (fold): Fold some comparisons of bit operations.\n+\n Thu Jul 31 19:49:53 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (create_edge): Fix typo."}, {"sha": "aea392f8ab4ee233d53ad09ca4df09620dd53573", "filename": "gcc/fold-const.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7de5864618a5825351f1262287b0bcaaaf08db5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7de5864618a5825351f1262287b0bcaaaf08db5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b7de5864618a5825351f1262287b0bcaaaf08db5", "patch": "@@ -7182,6 +7182,34 @@ fold (tree expr)\n       if (tem)\n \treturn tem;\n \n+      /* If we have (A & C) == D where D & ~C != 0, convert this into 0.\n+\t Similarly for NE_EXPR.  */\n+      if ((code == EQ_EXPR || code == NE_EXPR)\n+\t  && TREE_CODE (arg0) == BIT_AND_EXPR\n+\t  && TREE_CODE (arg1) == INTEGER_CST\n+\t  && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST)\n+\t{\n+\t  tree dandnotc = fold (build (BIT_ANDTC_EXPR, TREE_TYPE (arg0),\n+\t\t\t\t       arg1, TREE_OPERAND (arg0, 1)));\n+\t  tree rslt = code == EQ_EXPR ? integer_zero_node : integer_one_node;\n+\t  if (!integer_zerop (dandnotc))\n+\t    return omit_one_operand (type, rslt, arg0);\n+\t}\n+\n+      /* If we have (A | C) == D where C & ~D != 0, convert this into 0.\n+\t Similarly for NE_EXPR.  */\n+      if ((code == EQ_EXPR || code == NE_EXPR)\n+\t  && TREE_CODE (arg0) == BIT_IOR_EXPR\n+\t  && TREE_CODE (arg1) == INTEGER_CST\n+\t  && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST)\n+\t{\n+\t  tree candnotd = fold (build (BIT_ANDTC_EXPR, TREE_TYPE (arg0),\n+\t\t\t\t       TREE_OPERAND (arg0, 1), arg1));\n+\t  tree rslt = code == EQ_EXPR ? integer_zero_node : integer_one_node;\n+\t  if (!integer_zerop (candnotd))\n+\t    return omit_one_operand (type, rslt, arg0);\n+\t}\n+\n       /* If X is unsigned, convert X < (1 << Y) into X >> Y == 0\n \t and similarly for >= into !=.  */\n       if ((code == LT_EXPR || code == GE_EXPR)"}]}