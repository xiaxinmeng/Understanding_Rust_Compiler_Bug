{"sha": "051342116322b25db0ef6c38838a76c7a0c1231a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUxMzQyMTE2MzIyYjI1ZGIwZWY2YzM4ODM4YTc2YzdhMGMxMjMxYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-01-19T22:50:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-01-19T22:50:43Z"}, "message": "re PR c++/23287 (Explicitly invoking destructor of template class in a template and is dependent)\n\n        PR c++/23287\n        * parser.c (cp_parser_unqualified_id): In a template,\n        accept ~identifier.\n        * typeck.c (lookup_destructor): Handle IDENTIFIER_NODE.\n\nFrom-SVN: r143502", "tree": {"sha": "f5ff955481a4d4f4585623f8173ca24598645feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5ff955481a4d4f4585623f8173ca24598645feb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/051342116322b25db0ef6c38838a76c7a0c1231a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051342116322b25db0ef6c38838a76c7a0c1231a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/051342116322b25db0ef6c38838a76c7a0c1231a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051342116322b25db0ef6c38838a76c7a0c1231a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9295d9eda367410dec7f531b76fb8b120ffd6375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9295d9eda367410dec7f531b76fb8b120ffd6375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9295d9eda367410dec7f531b76fb8b120ffd6375"}], "stats": {"total": 63, "additions": 60, "deletions": 3}, "files": [{"sha": "5808ee5f7d88d624c627c772ad244779d782a5b2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=051342116322b25db0ef6c38838a76c7a0c1231a", "patch": "@@ -1,3 +1,10 @@\n+2009-01-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/23287\n+\t* parser.c (cp_parser_unqualified_id): In a template,\n+\taccept ~identifier.\n+\t* typeck.c (lookup_destructor): Handle IDENTIFIER_NODE.\n+\n 2009-01-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38877"}, {"sha": "5baf5f55196fd34aa0cf6d37e0726d2c10f3e500", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=051342116322b25db0ef6c38838a76c7a0c1231a", "patch": "@@ -3880,6 +3880,8 @@ cp_parser_unqualified_id (cp_parser* parser,\n \t    parser->scope = NULL_TREE;\n \t    parser->object_scope = NULL_TREE;\n \t    parser->qualifying_scope = NULL_TREE;\n+\t    if (processing_template_decl)\n+\t      cp_parser_parse_tentatively (parser);\n \t    type_decl\n \t      = cp_parser_class_name (parser,\n \t\t\t\t      /*typename_keyword_p=*/false,\n@@ -3888,6 +3890,14 @@ cp_parser_unqualified_id (cp_parser* parser,\n \t\t\t\t      /*check_dependency=*/false,\n \t\t\t\t      /*class_head_p=*/false,\n \t\t\t\t      declarator_p);\n+\t    if (processing_template_decl\n+\t\t&& ! cp_parser_parse_definitely (parser))\n+\t      {\n+\t\t/* We couldn't find a type with this name, so just accept\n+\t\t   it and check for a match at instantiation time.  */\n+\t\ttype_decl = cp_parser_identifier (parser);\n+\t\treturn build_nt (BIT_NOT_EXPR, type_decl);\n+\t      }\n \t  }\n \t/* If an error occurred, assume that the name of the\n \t   destructor is the same as the name of the qualifying"}, {"sha": "6c69256aa39976114ee76662e20462b87611adba", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=051342116322b25db0ef6c38838a76c7a0c1231a", "patch": "@@ -2101,8 +2101,8 @@ build_class_member_access_expr (tree object, tree member,\n   return result;\n }\n \n-/* Return the destructor denoted by OBJECT.SCOPE::~DTOR_NAME, or, if\n-   SCOPE is NULL, by OBJECT.~DTOR_NAME.  */\n+/* Return the destructor denoted by OBJECT.SCOPE::DTOR_NAME, or, if\n+   SCOPE is NULL, by OBJECT.DTOR_NAME, where DTOR_NAME is ~type.  */\n \n static tree\n lookup_destructor (tree object, tree scope, tree dtor_name)\n@@ -2117,7 +2117,21 @@ lookup_destructor (tree object, tree scope, tree dtor_name)\n \t     scope, dtor_type);\n       return error_mark_node;\n     }\n-  if (!DERIVED_FROM_P (dtor_type, TYPE_MAIN_VARIANT (object_type)))\n+  if (TREE_CODE (dtor_type) == IDENTIFIER_NODE)\n+    {\n+      /* In a template, names we can't find a match for are still accepted\n+\t destructor names, and we check them here.  */\n+      if (check_dtor_name (object_type, dtor_type))\n+\tdtor_type = object_type;\n+      else\n+\t{\n+\t  error (\"object type %qT does not match destructor name ~%qT\",\n+\t\t object_type, dtor_type);\n+\t  return error_mark_node;\n+\t}\n+      \n+    }\n+  else if (!DERIVED_FROM_P (dtor_type, TYPE_MAIN_VARIANT (object_type)))\n     {\n       error (\"the type being destroyed is %qT, but the destructor refers to %qT\",\n \t     TYPE_MAIN_VARIANT (object_type), dtor_type);"}, {"sha": "e9bfcd25dea8ddcbd27c7b28c531b0397d36095f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=051342116322b25db0ef6c38838a76c7a0c1231a", "patch": "@@ -1,3 +1,8 @@\n+2009-01-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/23287\n+\t* g++.dg/template/dtor5.C: New test.\n+\n 2009-01-19  Mikael Morin  <mikael.morin@tele2.fr>\n \n \tPR fortran/38859"}, {"sha": "8fa4eeb6f069176f4a239094d622d34571044b93", "filename": "gcc/testsuite/g++.dg/template/dtor5.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051342116322b25db0ef6c38838a76c7a0c1231a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor5.C?ref=051342116322b25db0ef6c38838a76c7a0c1231a", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/23287\n+\n+template <class T> struct A\n+{\n+  int i;\n+  ~A();\n+}; \n+\n+template <class T> void f(A<T> *ap) {\n+  ap->~A(); \n+} \n+\n+template <class T> void g(A<T> *ap) {\n+  ap->~B(); \t\t\t// { dg-error \"destructor name\" }\n+} \n+\n+int main()\n+{\n+  f(new A<int>);\n+  g(new A<int>);\n+}"}]}