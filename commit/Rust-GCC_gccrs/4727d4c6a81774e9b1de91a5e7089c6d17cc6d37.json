{"sha": "4727d4c6a81774e9b1de91a5e7089c6d17cc6d37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcyN2Q0YzZhODE3NzRlOWIxZGU5MWE1ZTcwODljNmQxN2NjNmQzNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-05-20T20:58:21Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-05-20T20:58:21Z"}, "message": "constexpr.c (cxx_bind_parameters_in_call): Avoid gratuitous if ...\n\n\t* constexpr.c (cxx_bind_parameters_in_call): Avoid gratuitous if\n\t... goto.\n\t(cxx_eval_call_expression): Fix comment grammar.\n\nFrom-SVN: r236543", "tree": {"sha": "0aa8e629502c8c34310859ed6f57fd064a043dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aa8e629502c8c34310859ed6f57fd064a043dd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86e1c0b36f17f3a4153f982f1c5cf19bb867580e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e1c0b36f17f3a4153f982f1c5cf19bb867580e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86e1c0b36f17f3a4153f982f1c5cf19bb867580e"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "9618a28dadd76f4bd5f2cfc25f0043b11d5dd56c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4727d4c6a81774e9b1de91a5e7089c6d17cc6d37", "patch": "@@ -1,3 +1,9 @@\n+2016-05-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* constexpr.c (cxx_bind_parameters_in_call): Avoid gratuitous if\n+\t... goto.\n+\t(cxx_eval_call_expression): Fix comment grammar.\n+\n 2016-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/70572"}, {"sha": "7b562605b7b2c766869d3cbb97c2daddf3a9df5f", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4727d4c6a81774e9b1de91a5e7089c6d17cc6d37/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=4727d4c6a81774e9b1de91a5e7089c6d17cc6d37", "patch": "@@ -1201,18 +1201,18 @@ cxx_bind_parameters_in_call (const constexpr_ctx *ctx, tree t,\n       /* Just discard ellipsis args after checking their constantitude.  */\n       if (!parms)\n \tcontinue;\n-      if (*non_constant_p)\n-\t/* Don't try to adjust the type of non-constant args.  */\n-\tgoto next;\n-\n-      /* Make sure the binding has the same type as the parm.  */\n-      if (TREE_CODE (type) != REFERENCE_TYPE)\n-\targ = adjust_temp_type (type, arg);\n-      if (!TREE_CONSTANT (arg))\n-\t*non_constant_args = true;\n-      *p = build_tree_list (parms, arg);\n-      p = &TREE_CHAIN (*p);\n-    next:\n+\n+      if (!*non_constant_p)\n+\t{\n+\t  /* Make sure the binding has the same type as the parm.  But\n+\t     only for constant args.  */\n+\t  if (TREE_CODE (type) != REFERENCE_TYPE)\n+\t    arg = adjust_temp_type (type, arg);\n+\t  if (!TREE_CONSTANT (arg))\n+\t    *non_constant_args = true;\n+\t  *p = build_tree_list (parms, arg);\n+\t  p = &TREE_CHAIN (*p);\n+\t}\n       parms = TREE_CHAIN (parms);\n     }\n }\n@@ -1420,7 +1420,7 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t  *slot = entry = ggc_alloc<constexpr_call> ();\n \t  *entry = new_call;\n \t}\n-      /* Calls which are in progress have their result set to NULL\n+      /* Calls that are in progress have their result set to NULL,\n \t so that we can detect circular dependencies.  */\n       else if (entry->result == NULL)\n \t{"}]}