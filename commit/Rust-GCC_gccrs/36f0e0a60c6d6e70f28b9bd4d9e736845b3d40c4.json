{"sha": "36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZmMGUwYTYwYzZkNmU3MGYyOGI5YmQ0ZDllNzM2ODQ1YjNkNDBjNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-10-24T19:23:11Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-10-24T19:23:11Z"}, "message": "final.c (peephole): Delete prototype.\n\n        * final.c (peephole): Delete prototype.\n\n        * gcse.c (process_insert_insn, pre_edge_insert): Add prototypes.\n        (pre_insert_copies): Remove unused variable `bb'.\n\n        * genrecog.c (debug_decision_0, debug_decision_list, main): Add\n        prototypes.\n\n        * output.h (peephole): Add prototype.\n\nFrom-SVN: r30144", "tree": {"sha": "03fe5c172a634a5c35dfea2013271fd2f71b73e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03fe5c172a634a5c35dfea2013271fd2f71b73e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/comments", "author": null, "committer": null, "parents": [{"sha": "87bb6e4ba48847edd5462a6359d44d6686859f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87bb6e4ba48847edd5462a6359d44d6686859f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87bb6e4ba48847edd5462a6359d44d6686859f6e"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "49c2c36f5dcb9e117333def28098c9c17d49beab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "patch": "@@ -1,3 +1,15 @@\n+Sun Oct 24 15:20:59 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* final.c (peephole): Delete prototype.\n+\n+\t* gcse.c (process_insert_insn, pre_edge_insert): Add prototypes.\n+\t(pre_insert_copies): Remove unused variable `bb'.\n+\n+\t* genrecog.c (debug_decision_0, debug_decision_list, main): Add\n+\tprototypes.\n+\n+\t* output.h (peephole): Add prototype.\n+\n Sun Oct 24 11:35:30 1999  Mark P. Mitchell  <mark@codesourcery.com>\n \n \t* config/mips/iris6.h (SUBTARGET_ASM_OPTIMIZING_SPEC): Define to"}, {"sha": "e0092c0b02602e18ae4206e059566cecfa709d05", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "patch": "@@ -285,10 +285,6 @@ struct bb_str {\n   int length;\t\t\t/* string length */\n };\n \n-#ifdef HAVE_peephole\n-extern rtx peephole\t\tPROTO((rtx));\n-#endif\n-\n static struct bb_str *sbb_head\t= 0;\t\t/* Head of string list.  */\n static struct bb_str **sbb_tail\t= &sbb_head;\t/* Ptr to store next bb str */\n static int sbb_label_num\t= 0;\t\t/* Last label used */"}, {"sha": "24864145da4a048d9fad4921f85d7e7cf424f9fc", "filename": "gcc/gcse.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "patch": "@@ -621,9 +621,9 @@ static int can_disregard_other_sets   PROTO ((struct reg_set **, rtx, int));\n static int handle_avail_expr\t  PROTO ((rtx, struct expr *));\n static int classic_gcse\t       PROTO ((void));\n static int one_classic_gcse_pass      PROTO ((int));\n-\n static void invalidate_nonnull_info\tPROTO ((rtx, rtx));\n-\n+static rtx process_insert_insn\tPROTO ((struct expr *));\n+static int pre_edge_insert\tPROTO ((struct edge_list *, struct expr **));\n \f\n /* Entry point for global common subexpression elimination.\n    F is the first instruction in the function.  */\n@@ -4553,7 +4553,7 @@ pre_insert_copy_insn (expr, insn)\n static void\n pre_insert_copies ()\n {\n-  int i, bb;\n+  int i;\n \n   /* For each available expression in the table, copy the result to\n      `reaching_reg' if the expression reaches a deleted one."}, {"sha": "5aea00490f0fcfe11fa1f2ccffb0c91151b0fd0a", "filename": "gcc/genrecog.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "patch": "@@ -302,12 +302,16 @@ static void process_tree\n static void record_insn_name\n   PROTO((int, const char *));\n \n+static void debug_decision_0\n+  PROTO((struct decision *, int, int));\n static void debug_decision_1\n   PROTO((struct decision *, int));\n static void debug_decision_2\n   PROTO((struct decision_test *));\n extern void debug_decision\n   PROTO((struct decision *));\n+extern void debug_decision_list\n+  PROTO((struct decision *));\n \f\n static void\n message_with_line VPROTO ((int lineno, const char *msg, ...))\n@@ -2477,6 +2481,8 @@ process_tree (head, subroutine_type)\n   write_subroutine (head, subroutine_type);\n }\n \f\n+extern int main PROTO ((int, char **));\n+\n int\n main (argc, argv)\n      int argc;"}, {"sha": "d3fb02c33c85dd62d1244eb38b10fb04f41e9d67", "filename": "gcc/output.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=36f0e0a60c6d6e70f28b9bd4d9e736845b3d40c4", "patch": "@@ -314,6 +314,10 @@ extern void output_deferred_addressed_constants PROTO((void));\n /* Return the size of the constant pool.  */\n extern int get_pool_size\t\tPROTO((void));\n \n+#ifdef HAVE_peephole\n+extern rtx peephole\t\t\tPROTO((rtx));\n+#endif\n+\n #ifdef TREE_CODE\n /* Write all the constants in the constant pool.  */\n extern void output_constant_pool\tPROTO((char *, tree));"}]}