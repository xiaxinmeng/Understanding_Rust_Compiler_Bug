{"sha": "a1fc903a3f2f5eb03776b500f22115eb466d70c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFmYzkwM2EzZjJmNWViMDM3NzZiNTAwZjIyMTE1ZWI0NjZkNzBjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-09T14:50:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-09T14:50:48Z"}, "message": "[multiple changes]\n\n2012-03-09  Robert Dewar  <dewar@adacore.com>\n\n\t* s-osinte-linux.ads, sem_util.adb, s-taprop-linux.adb, exp_ch4.adb,\n\ta-strsup.ads, sem_ch6.adb, a-stwisu.ads, exp_ch3.adb,\n\ta-stzsup.ads: Minor reformatting.\n\n2012-03-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-ransee-vms.adb: Minor reformatting.\n\n2012-03-09  Arnaud Charlet  <charlet@adacore.com>\n\n\t* comperr.adb (Delete_SCIL_Files): Fix handling of\n\tN_Package_Renaming_Declaration and N_Generic_Package_Declaration.\n\nFrom-SVN: r185141", "tree": {"sha": "d1aedbd66af9c99b39741e1a46c7919ec53f4090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1aedbd66af9c99b39741e1a46c7919ec53f4090"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1fc903a3f2f5eb03776b500f22115eb466d70c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fc903a3f2f5eb03776b500f22115eb466d70c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1fc903a3f2f5eb03776b500f22115eb466d70c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fc903a3f2f5eb03776b500f22115eb466d70c6/comments", "author": null, "committer": null, "parents": [{"sha": "ea3a4ad0a334535466172e2860f7f5ed7795e331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3a4ad0a334535466172e2860f7f5ed7795e331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3a4ad0a334535466172e2860f7f5ed7795e331"}], "stats": {"total": 117, "additions": 73, "deletions": 44}, "files": [{"sha": "fdb14ddcb9ce5b5853624244c0bf8f8e45b0e214", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -1,3 +1,18 @@\n+2012-03-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-osinte-linux.ads, sem_util.adb, s-taprop-linux.adb, exp_ch4.adb,\n+\ta-strsup.ads, sem_ch6.adb, a-stwisu.ads, exp_ch3.adb,\n+\ta-stzsup.ads: Minor reformatting.\n+\n+2012-03-09  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-ransee-vms.adb: Minor reformatting.\n+\n+2012-03-09  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* comperr.adb (Delete_SCIL_Files): Fix handling of\n+\tN_Package_Renaming_Declaration and N_Generic_Package_Declaration.\n+\n 2012-03-09  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch6.adb (Check_Body_To_Inline): In AAMP and VM targets"}, {"sha": "d43a560a543acf0876ee92753a77d54fc9d64c20", "filename": "gcc/ada/a-strsup.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fa-strsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fa-strsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsup.ads?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -41,16 +41,17 @@ with Ada.Strings.Maps;\n package Ada.Strings.Superbounded is\n    pragma Preelaborate;\n \n+   --  Type Bounded_String in Ada.Strings.Bounded.Generic_Bounded_Length is\n+   --  derived from Super_String, with the constraint of the maximum length.\n+\n    type Super_String (Max_Length : Positive) is record\n       Current_Length : Natural := 0;\n       Data           : String (1 .. Max_Length);\n-      --  A previous version had a default initial value for Data, which is no\n-      --  longer necessary, because we now special-case this type in the\n-      --  compiler, so \"=\" composes properly for descendants of this\n-      --  type. Leaving it out is more efficient.\n+      --  A previous version had a default initial value for Data, which is\n+      --  no longer necessary, because we now special-case this type in the\n+      --  compiler, so \"=\" composes properly for descendants of this type.\n+      --  Leaving it out is more efficient.\n    end record;\n-   --  Type Bounded_String in Ada.Strings.Bounded.Generic_Bounded_Length is\n-   --  derived from this type, with the constraint of the maximum length.\n \n    --  The subprograms defined for Super_String are similar to those\n    --  defined for Bounded_String, except that they have different names, so"}, {"sha": "e2f3c570040e2f044180c89af633c518d851a3ba", "filename": "gcc/ada/a-stwisu.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fa-stwisu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fa-stwisu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwisu.ads?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -44,16 +44,17 @@ package Ada.Strings.Wide_Superbounded is\n \n    Wide_NUL : constant Wide_Character := Wide_Character'Val (0);\n \n+   --  Ada.Strings.Wide_Bounded.Generic_Bounded_Length.Wide_Bounded_String is\n+   --  derived from Super_String, with the constraint of the maximum length.\n+\n    type Super_String (Max_Length : Positive) is record\n       Current_Length : Natural := 0;\n       Data           : Wide_String (1 .. Max_Length);\n-      --  A previous version had a default initial value for Data, which is no\n-      --  longer necessary, because we now special-case this type in the\n-      --  compiler, so \"=\" composes properly for descendants of this\n-      --  type. Leaving it out is more efficient.\n+      --  A previous version had a default initial value for Data, which is\n+      --  no longer necessary, because we now special-case this type in the\n+      --  compiler, so \"=\" composes properly for descendants of this type.\n+      --  Leaving it out is more efficient.\n    end record;\n-   --  Ada.Strings.Wide_Bounded.Generic_Bounded_Length.Wide_Bounded_String is\n-   --  derived from this type, with the constraint of the maximum length.\n \n    --  The subprograms defined for Super_String are similar to those defined\n    --  for Bounded_Wide_String, except that they have different names, so that"}, {"sha": "728b0bc71f8ec4fbe88846614cab0f1bd222fbfe", "filename": "gcc/ada/a-stzsup.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fa-stzsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fa-stzsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzsup.ads?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -45,16 +45,17 @@ package Ada.Strings.Wide_Wide_Superbounded is\n    Wide_Wide_NUL : constant Wide_Wide_Character :=\n                      Wide_Wide_Character'Val (0);\n \n+   --  Wide_Wide_Bounded.Generic_Bounded_Length.Wide_Wide_Bounded_String is\n+   --  derived from Super_String, with the constraint of the maximum length.\n+\n    type Super_String (Max_Length : Positive) is record\n       Current_Length : Natural := 0;\n       Data           : Wide_Wide_String (1 .. Max_Length);\n-      --  A previous version had a default initial value for Data, which is no\n-      --  longer necessary, because we now special-case this type in the\n-      --  compiler, so \"=\" composes properly for descendants of this\n-      --  type. Leaving it out is more efficient.\n+      --  A previous version had a default initial value for Data, which is\n+      --  no longer necessary, because we now special-case this type in the\n+      --  compiler, so \"=\" composes properly for descendants of this type.\n+      --  Leaving it out is more efficient.\n    end record;\n-   --  Wide_Wide_Bounded.Generic_Bounded_Length.Wide_Wide_Bounded_String is\n-   --  derived from this type, with the constraint of the maximum length.\n \n    --  The subprograms defined for Super_String are similar to those defined\n    --  for Bounded_Wide_Wide_String, except that they have different names, so"}, {"sha": "207beb8c82bd58b3a558afaeb809d2fc14fb2e0f", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -477,7 +477,7 @@ package body Comperr is\n          Name_Len := K;\n       end Decode_Name_Buffer;\n \n-   --  Start of processing for Decode_Name_Buffer\n+   --  Start of processing for Delete_SCIL_Files\n \n    begin\n       --  If parsing was not successful, no Main_Unit is available, so return\n@@ -499,6 +499,13 @@ package body Comperr is\n          when N_Package_Body =>\n             Unit_Name := Corresponding_Spec (Main);\n \n+         when N_Package_Renaming_Declaration =>\n+            Unit_Name := Defining_Unit_Name (Main);\n+\n+         when N_Generic_Package_Declaration =>\n+            --  No SCIL file generated for generic package declarations\n+            return;\n+\n          --  Should never happen, but can be ignored in production\n \n          when others =>"}, {"sha": "5035751e3904e460fe2f7c85a46774126f6e944f", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -6116,8 +6116,7 @@ package body Exp_Ch3 is\n       --  This is done unconditionally to ensure that tools can be linked\n       --  properly with user programs compiled with older language versions.\n       --  In addition, this is needed because \"=\" composes for bounded strings\n-      --  in all language versions (see also\n-      --  Exp_Ch4.Expand_Composite_Equality).\n+      --  in all language versions (see Exp_Ch4.Expand_Composite_Equality).\n \n       elsif Comes_From_Source (Def_Id)\n         and then Convention (Def_Id) = Convention_Ada"}, {"sha": "075c9e8a9953521c6b24996e2427937f682fc3c1", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -2504,12 +2504,12 @@ package body Exp_Ch4 is\n                Op : constant Node_Id := Find_Primitive_Eq;\n \n             begin\n+               --  Use user-defined primitive if it exists, otherwise use\n+               --  predefined equality.\n+\n                if Present (Op) then\n                   return Op;\n                else\n-\n-               --  Use predefined equality if no user-defined primitive exists\n-\n                   return Make_Op_Eq (Loc, Lhs, Rhs);\n                end if;\n             end;"}, {"sha": "a99c4e53f93b821c528f2fb97c75c55d0c1b41ab", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -258,7 +258,8 @@ package System.OS_Interface is\n    PR_SET_NAME : constant := 15;\n \n    function prctl\n-     (option : int; arg2, arg3, arg4, arg5 : unsigned_long := 0) return int;\n+     (option                 : int;\n+      arg2, arg3, arg4, arg5 : unsigned_long := 0) return int;\n    pragma Import (C, prctl);\n \n    -------------"}, {"sha": "713edaef79f81715c79f40c8cf23401ceecdc4aa", "filename": "gcc/ada/s-ransee-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fs-ransee-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fs-ransee-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ransee-vms.adb?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -30,7 +30,7 @@\n ------------------------------------------------------------------------------\n \n --  Version used on OpenVMS systems, where Clock accuracy is too low for\n---  RM A.5.2 (45).\n+--  RM A.5.2(45).\n \n with Interfaces; use Interfaces;\n "}, {"sha": "6047d3125670b165556e408a67358d5e0e67f442", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -771,6 +771,7 @@ package body System.Task_Primitives.Operations is\n          declare\n             Task_Name : String (1 .. Parameters.Max_Task_Image_Length + 1);\n             Result    : int;\n+\n          begin\n             --  Set thread name to ease debugging\n "}, {"sha": "60d07c66edb0bf047a08cfecf1d1f6a5c98db275", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -4888,10 +4888,12 @@ package body Sem_Ch6 is\n          Remove (Body_To_Analyze);\n \n          --  Keep separate checks needed when compiling without optimizations\n-         --  AAMP and VM targets have no support for inlining in the backend\n-         --  and hence we use frontend inlining at all optimization levels.\n \n          if Optimization_Level = 0\n+\n+           --  AAMP and VM targets have no support for inlining in the backend\n+           --  and hence we use frontend inlining at all optimization levels.\n+\n            or else AAMP_On_Target\n            or else VM_Target /= No_VM\n          then"}, {"sha": "6886408a18e37d14f4b84634a40fdfdbf9f8664c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1fc903a3f2f5eb03776b500f22115eb466d70c6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a1fc903a3f2f5eb03776b500f22115eb466d70c6", "patch": "@@ -6751,18 +6751,18 @@ package body Sem_Util is\n    -----------------------\n \n    function Is_Bounded_String (T : Entity_Id) return Boolean is\n-      --  Check whether T is ultimately derived from Ada.Strings.-\n-      --  Superbounded.Super_String, or one of the [Wide_]Wide_\n-      --  versions. This will be True for all the Bounded_String types in\n-      --  instances of the Generic_Bounded_Length generics, and for types\n-      --  derived from those.\n-\n       Under : constant Entity_Id := Underlying_Type (Root_Type (T));\n+\n    begin\n-      return Present (Under) and then\n-        (Is_RTE (Root_Type (Under), RO_SU_Super_String)\n-           or else Is_RTE (Root_Type (Under), RO_WI_Super_String)\n-           or else Is_RTE (Root_Type (Under), RO_WW_Super_String));\n+      --  Check whether T is ultimately derived from Ada.Strings.Superbounded.\n+      --  Super_String, or one of the [Wide_]Wide_ versions. This will\n+      --  be True for all the Bounded_String types in instances of the\n+      --  Generic_Bounded_Length generics, and for types derived from those.\n+\n+      return Present (Under)\n+        and then (Is_RTE (Root_Type (Under), RO_SU_Super_String) or else\n+                  Is_RTE (Root_Type (Under), RO_WI_Super_String) or else\n+                  Is_RTE (Root_Type (Under), RO_WW_Super_String));\n    end Is_Bounded_String;\n \n    -----------------------------\n@@ -9422,13 +9422,14 @@ package body Sem_Util is\n \n    function Must_Inline (Subp : Entity_Id) return Boolean is\n    begin\n-      --  AAMP and VM targets have no support for inlining in the backend.\n-      --  Hence we do as much inlining as possible in the front end.\n-\n       return\n         (Optimization_Level = 0\n-           or else AAMP_On_Target\n-           or else VM_Target /= No_VM)\n+\n+          --  AAMP and VM targets have no support for inlining in the backend.\n+          --  Hence we do as much inlining as possible in the front end.\n+\n+          or else AAMP_On_Target\n+          or else VM_Target /= No_VM)\n         and then Has_Pragma_Inline (Subp)\n         and then (Has_Pragma_Inline_Always (Subp) or else Front_End_Inlining);\n    end Must_Inline;"}]}