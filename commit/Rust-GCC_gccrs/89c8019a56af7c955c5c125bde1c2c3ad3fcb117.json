{"sha": "89c8019a56af7c955c5c125bde1c2c3ad3fcb117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODljODAxOWE1NmFmN2M5NTVjNWMxMjViZGUxYzJjM2FkM2ZjYjExNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-15T00:38:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-15T00:38:47Z"}, "message": "(GCC_PASSES): Add $(exeext) to names.\n\n(FLAGS_TO_PASS): Add CLIB.\n(c-pragma.o): Add dependencies on except.h, function.h, defaults.h.\n\nFrom-SVN: r12712", "tree": {"sha": "10d3521b19f89df7bf302b88ebc7a700a54d9b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10d3521b19f89df7bf302b88ebc7a700a54d9b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89c8019a56af7c955c5c125bde1c2c3ad3fcb117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c8019a56af7c955c5c125bde1c2c3ad3fcb117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89c8019a56af7c955c5c125bde1c2c3ad3fcb117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c8019a56af7c955c5c125bde1c2c3ad3fcb117/comments", "author": null, "committer": null, "parents": [{"sha": "1e9b6647134042d52de4f879f6e7ea36fd85833d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9b6647134042d52de4f879f6e7ea36fd85833d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e9b6647134042d52de4f879f6e7ea36fd85833d"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "711c50d59b8d7896abe6cf6ef2efffc217a36ccb", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89c8019a56af7c955c5c125bde1c2c3ad3fcb117/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89c8019a56af7c955c5c125bde1c2c3ad3fcb117/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=89c8019a56af7c955c5c125bde1c2c3ad3fcb117", "patch": "@@ -340,7 +340,7 @@ OTHER_FIXINCLUDES_DIRS=\n \n # List of things which should already be built whenever we try to use xgcc\n # to compile anything (without linking).\n-GCC_PASSES=xgcc cc1 cpp $(EXTRA_PASSES)\n+GCC_PASSES=xgcc$(exeext) cc1$(exeext) cpp$(exeext) $(EXTRA_PASSES)\n \n # List of things which should already be built whenever we try to use xgcc\n # to link anything.\n@@ -489,6 +489,7 @@ FLAGS_TO_PASS = \\\n \t\"BISONFLAGS=$(BISONFLAGS)\" \\\n \t\"CC=set-by-configure\" \\\n \t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CLIB=$(CLIB)\" \\\n \t\"GCC_FOR_TARGET=$(GCC_FOR_TARGET)\" \\\n \t\"LDFLAGS=$(LDFLAGS)\" \\\n \t\"LEX=$(LEX)\" \\\n@@ -1114,7 +1115,8 @@ c-lex.o : c-lex.c $(CONFIG_H) $(TREE_H) c-lex.h c-tree.h $(srcdir)/c-parse.h \\\n     input.h flags.h $(srcdir)/c-gperf.h c-pragma.h\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(TREE_H) c-tree.h flags.h\n c-convert.o : c-convert.c $(CONFIG_H) $(TREE_H) flags.h\n-c-pragma.o: c-pragma.c $(CONFIG_H) $(TREE_H) c-pragma.h\n+c-pragma.o: c-pragma.c $(CONFIG_H) $(TREE_H) except.h function.h \\\n+    defaults.h c-pragma.h\n c-iterate.o: c-iterate.c $(CONFIG_H) $(TREE_H) $(RTL_H) c-tree.h flags.h\n \n # To make a configuration always use collect2, set USE_COLLECT2 to ld."}]}