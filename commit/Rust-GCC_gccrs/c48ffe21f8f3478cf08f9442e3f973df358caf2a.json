{"sha": "c48ffe21f8f3478cf08f9442e3f973df358caf2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ4ZmZlMjFmOGYzNDc4Y2YwOGY5NDQyZTNmOTczZGYzNThjYWYyYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-09-20T20:11:00Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-09-23T14:10:33Z"}, "message": "c: Fix -Wduplicated-branches ICE [PR97125]\n\nWe crash here because since r11-3302 the C FE uses codes like SWITCH_STMT\nin the else branches in the attached test, and inchash::add_expr in\ndo_warn_duplicated_branches doesn't handle these front-end codes.  In\nthe C++ FE this works because by the time we get to do_warn_duplicated_branches\nwe've already cp_genericize'd the SWITCH_STMT tree into a SWITCH_EXPR.\n\nThe fix is to call do_warn_duplicated_branches_r only after loops and other\nstructured control constructs have been lowered.\n\ngcc/c-family/ChangeLog:\n\n\tPR c/97125\n\t* c-gimplify.c (c_genericize): Only call do_warn_duplicated_branches_r\n\tafter loops and other structured control constructs have been lowered.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/97125\n\t* c-c++-common/Wduplicated-branches-15.c: New test.", "tree": {"sha": "17e7d1859baffb39faf67d842123e7d8a595b264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17e7d1859baffb39faf67d842123e7d8a595b264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c48ffe21f8f3478cf08f9442e3f973df358caf2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c48ffe21f8f3478cf08f9442e3f973df358caf2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c48ffe21f8f3478cf08f9442e3f973df358caf2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c48ffe21f8f3478cf08f9442e3f973df358caf2a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3457dae55f72bd4ac0f346bbebb02d1613ac4b5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3457dae55f72bd4ac0f346bbebb02d1613ac4b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3457dae55f72bd4ac0f346bbebb02d1613ac4b5c"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "d1e391590dd3f14a19d6f48a006c324d34a8fb19", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c48ffe21f8f3478cf08f9442e3f973df358caf2a/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c48ffe21f8f3478cf08f9442e3f973df358caf2a/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=c48ffe21f8f3478cf08f9442e3f973df358caf2a", "patch": "@@ -533,10 +533,6 @@ c_genericize (tree fndecl)\n \t\t &pset);\n     }\n \n-  if (warn_duplicated_branches)\n-    walk_tree_without_duplicates (&DECL_SAVED_TREE (fndecl),\n-\t\t\t\t  do_warn_duplicated_branches_r, NULL);\n-\n   /* Genericize loops and other structured control constructs.  The C++\n      front end has already done this in lang-specific code.  */\n   if (!c_dialect_cxx ())\n@@ -550,6 +546,10 @@ c_genericize (tree fndecl)\n       pop_cfun ();\n     }\n \n+  if (warn_duplicated_branches)\n+    walk_tree_without_duplicates (&DECL_SAVED_TREE (fndecl),\n+\t\t\t\t  do_warn_duplicated_branches_r, NULL);\n+\n   /* Dump the C-specific tree IR.  */\n   dump_orig = get_dump_info (TDI_original, &local_dump_flags);\n   if (dump_orig)"}, {"sha": "d49436070864c6882f7a9c3c9a41e6ffc2cfa330", "filename": "gcc/testsuite/c-c++-common/Wduplicated-branches-15.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c48ffe21f8f3478cf08f9442e3f973df358caf2a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWduplicated-branches-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c48ffe21f8f3478cf08f9442e3f973df358caf2a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWduplicated-branches-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWduplicated-branches-15.c?ref=c48ffe21f8f3478cf08f9442e3f973df358caf2a", "patch": "@@ -0,0 +1,32 @@\n+/* PR c/97125 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wduplicated-branches\" } */\n+\n+void foo (void);\n+\n+void\n+fn1 (void)\n+{\n+  if (0)\n+    foo ();\n+  else\n+    switch (0);\n+}\n+\n+void\n+fn2 (void)\n+{\n+  if (0)\n+    foo ();\n+  else\n+    while (0);\n+}\n+\n+void\n+fn3 (void)\n+{\n+  if (0)\n+    foo ();\n+  else\n+    for (;;);\n+}"}]}