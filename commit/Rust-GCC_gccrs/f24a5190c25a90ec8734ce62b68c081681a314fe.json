{"sha": "f24a5190c25a90ec8734ce62b68c081681a314fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI0YTUxOTBjMjVhOTBlYzg3MzRjZTYyYjY4YzA4MTY4MWEzMTRmZQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-05-16T14:16:22Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-05-16T14:16:22Z"}, "message": "re PR target/45099 ([avr] Warning could be issued for use of register variables that will fail.)\n\n\tPR target/45099\n\t* config/avr/avr.c (avr_function_arg_advance): Error if a fixed\n\tregister is needed for a function argument.\n\nFrom-SVN: r173791", "tree": {"sha": "bff378566d96eca2b82352d068ba987e3a19278a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bff378566d96eca2b82352d068ba987e3a19278a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f24a5190c25a90ec8734ce62b68c081681a314fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24a5190c25a90ec8734ce62b68c081681a314fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f24a5190c25a90ec8734ce62b68c081681a314fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24a5190c25a90ec8734ce62b68c081681a314fe/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3066f593a88b82882330dce0f3c1bd5e262974e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3066f593a88b82882330dce0f3c1bd5e262974e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3066f593a88b82882330dce0f3c1bd5e262974e1"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "b8af4fb3edecdaa325d663b976fc23c3029d61fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24a5190c25a90ec8734ce62b68c081681a314fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24a5190c25a90ec8734ce62b68c081681a314fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f24a5190c25a90ec8734ce62b68c081681a314fe", "patch": "@@ -1,3 +1,9 @@\n+2011-05-16  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/45099\n+\t* config/avr/avr.c (avr_function_arg_advance): Error if a fixed\n+\tregister is needed for a function argument.\n+\n 2011-05-16  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.c (struct type_hash_pair): New type."}, {"sha": "c8c363ad948b1499fc6fc82530dc5185a6fe6500", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24a5190c25a90ec8734ce62b68c081681a314fe/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24a5190c25a90ec8734ce62b68c081681a314fe/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=f24a5190c25a90ec8734ce62b68c081681a314fe", "patch": "@@ -1796,6 +1796,20 @@ avr_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n       cfun->machine->sibcall_fails = 1;\n     }\n \n+  /* Test if all registers needed by the ABI are actually available.  If the\n+     user has fixed a GPR needed to pass an argument, an (implicit) function\n+     call would clobber that fixed register.  See PR45099 for an example.  */\n+  \n+  if (cum->regno >= 0)\n+    {\n+      int regno;\n+\n+      for (regno = cum->regno; regno < cum->regno + bytes; regno++)\n+        if (fixed_regs[regno])\n+          error (\"Register %s is needed to pass a parameter but is fixed\",\n+                 reg_names[regno]);\n+    }\n+      \n   if (cum->nregs <= 0)\n     {\n       cum->nregs = 0;"}]}