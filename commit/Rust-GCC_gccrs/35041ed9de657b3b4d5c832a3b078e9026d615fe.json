{"sha": "35041ed9de657b3b4d5c832a3b078e9026d615fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUwNDFlZDlkZTY1N2IzYjRkNWM4MzJhM2IwNzhlOTAyNmQ2MTVmZQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-12-09T13:41:53Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-12-09T13:41:53Z"}, "message": "rs6000: Name set<mode>_cc, and delete some old mfcr patterns\n\nThis names the so far unnamed basic mfcr pattern \"set<mode>_cc\", and\nit deletes all the others (only the ashift one ever was generated, and\neven that one only once during a whole bootstrap+regtest, and that one\nis questionable -- we don't cost that pattern correctly).\n\n\n\t* config/rs6000/rs6000.md (unnamed mfcr define_insn): Name this\n\tset<mode>_cc.\n\t(unnamed define_insn_and_split): Delete.\n\t(unnamed define_insn): Delete.\n\t(unnamed define_insn): Delete.\n\t(unnamed define_split): Delete.\n\nFrom-SVN: r279127", "tree": {"sha": "4d891855fa78bcca4eb50e1f9e50b09bccd07ac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d891855fa78bcca4eb50e1f9e50b09bccd07ac7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35041ed9de657b3b4d5c832a3b078e9026d615fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35041ed9de657b3b4d5c832a3b078e9026d615fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35041ed9de657b3b4d5c832a3b078e9026d615fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35041ed9de657b3b4d5c832a3b078e9026d615fe/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6130412c18618b8c6cc0dbc63b27ff2b7d6f8ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6130412c18618b8c6cc0dbc63b27ff2b7d6f8ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6130412c18618b8c6cc0dbc63b27ff2b7d6f8ff"}], "stats": {"total": 120, "additions": 10, "deletions": 110}, "files": [{"sha": "29328fed1c171637757bf6be3a1c91e4993a7201", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35041ed9de657b3b4d5c832a3b078e9026d615fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35041ed9de657b3b4d5c832a3b078e9026d615fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35041ed9de657b3b4d5c832a3b078e9026d615fe", "patch": "@@ -1,3 +1,12 @@\n+2019-12-09  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (unnamed mfcr define_insn): Name this\n+\tset<mode>_cc.\n+\t(unnamed define_insn_and_split): Delete.\n+\t(unnamed define_insn): Delete.\n+\t(unnamed define_insn): Delete.\n+\t(unnamed define_split): Delete.\n+\n 2019-12-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* regstat.c (regstat_bb_compute_calls_crossed): Add a cast to"}, {"sha": "4c44c1f9cf35527f3a2aaea16e0ded8e1fbb64ec", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 110, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35041ed9de657b3b4d5c832a3b078e9026d615fe/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35041ed9de657b3b4d5c832a3b078e9026d615fe/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=35041ed9de657b3b4d5c832a3b078e9026d615fe", "patch": "@@ -11838,7 +11838,7 @@\n ;; mfcr and rlinm, but this is tricky.  Let's leave it for now.  In most\n ;; cases the insns below which don't use an intermediate CR field will\n ;; be used instead.\n-(define_insn \"\"\n+(define_insn \"set<mode>_cc\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n \t(match_operator:GPR 1 \"scc_comparison_operator\"\n \t\t\t    [(match_operand 2 \"cc_reg_operand\" \"y\")\n@@ -11852,115 +11852,6 @@\n \t(const_string \"mfcr\")))\n    (set_attr \"length\" \"8\")])\n \n-(define_insn_and_split \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:SI 1 \"scc_comparison_operator\"\n-\t\t\t\t       [(match_operand 2 \"cc_reg_operand\" \"y,y\")\n-\t\t\t\t\t(const_int 0)])\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 3 \"gpc_reg_operand\" \"=r,r\")\n-\t(match_op_dup 1 [(match_dup 2) (const_int 0)]))]\n-  \"TARGET_32BIT\"\n-  \"@\n-   mfcr %3%Q2\\;rlwinm. %3,%3,%J1,1\n-   #\"\n-  \"&& reload_completed\"\n-  [(set (match_dup 3)\n-\t(match_op_dup 1 [(match_dup 2) (const_int 0)]))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\"\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"8,16\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(ashift:SI (match_operator:SI 1 \"scc_comparison_operator\"\n-\t\t\t\t      [(match_operand 2 \"cc_reg_operand\" \"y\")\n-\t\t\t\t       (const_int 0)])\n-\t\t   (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n-  \"\"\n-{\n-  int is_bit = ccr_bit (operands[1], 1);\n-  int put_bit = 31 - (INTVAL (operands[3]) & 31);\n-  int count;\n-\n-  gcc_assert (is_bit != -1);\n-  if (is_bit >= put_bit)\n-    count = is_bit - put_bit;\n-  else\n-    count = 32 - (put_bit - is_bit);\n-\n-  operands[4] = GEN_INT (count);\n-  operands[5] = GEN_INT (put_bit);\n-\n-  return \"mfcr %0%Q2\\;rlwinm %0,%0,%4,%5,%5\";\n-}\n-  [(set (attr \"type\")\n-     (cond [(match_test \"TARGET_MFCRF\")\n-\t\t(const_string \"mfcrf\")\n-\t   ]\n-\t(const_string \"mfcr\")))\n-   (set_attr \"length\" \"8\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC\n-\t (ashift:SI (match_operator:SI 1 \"scc_comparison_operator\"\n-\t\t\t\t       [(match_operand 2 \"cc_reg_operand\" \"y,y\")\n-\t\t\t\t\t(const_int 0)])\n-\t\t    (match_operand:SI 3 \"const_int_operand\" \"n,n\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 4 \"gpc_reg_operand\" \"=r,r\")\n-\t(ashift:SI (match_op_dup 1 [(match_dup 2) (const_int 0)])\n-\t\t   (match_dup 3)))]\n-  \"\"\n-{\n-  int is_bit = ccr_bit (operands[1], 1);\n-  int put_bit = 31 - (INTVAL (operands[3]) & 31);\n-  int count;\n-\n-  gcc_assert (is_bit != -1);\n-  /* Force split for non-cc0 compare.  */\n-  if (which_alternative == 1)\n-     return \"#\";\n-\n-  if (is_bit >= put_bit)\n-    count = is_bit - put_bit;\n-  else\n-    count = 32 - (put_bit - is_bit);\n-\n-  operands[5] = GEN_INT (count);\n-  operands[6] = GEN_INT (put_bit);\n-\n-  return \"mfcr %4%Q2\\;rlwinm. %4,%4,%5,%6,%6\";\n-}\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"8,16\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\")\n-\t(compare:CC\n-\t (ashift:SI (match_operator:SI 1 \"scc_comparison_operator\"\n-\t\t\t\t       [(match_operand 2 \"cc_reg_operand\")\n-\t\t\t\t\t(const_int 0)])\n-\t\t    (match_operand:SI 3 \"const_int_operand\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 4 \"gpc_reg_operand\")\n-\t(ashift:SI (match_op_dup 1 [(match_dup 2) (const_int 0)])\n-\t\t   (match_dup 3)))]\n-  \"reload_completed\"\n-  [(set (match_dup 4)\n-\t(ashift:SI (match_op_dup 1 [(match_dup 2) (const_int 0)])\n-\t\t   (match_dup 3)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 4)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n \n (define_code_iterator cmp [eq ne lt ltu gt gtu le leu ge geu])\n (define_code_attr UNS [(eq \"CC\")"}]}