{"sha": "a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhZDhjMzBkNjI3ZTJlMjQzZWJkMDY2MmMyZDRkYWM3Nzg0NjJkNQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-11-05T10:03:54Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-11-05T10:03:54Z"}, "message": "NeXT runtime compatibility changes.\n\ngcc/testsuite:\n\n\t* objc.dg/torture/forward-1.m: Restore for m32 NeXT.\n\t* objc.dg/demangle-1.m: Remove NeXT ifdef around +initialize \n\tdeclaration and implementation.\n\t* objc.dg/property/dotsyntax-3.m: XFAIL NeXT m64 run.\n\t* obj-c++.dg/property/at-property-13.mm: Likewise.\n\t* obj-c++.dg/property/fsf-property-method-access.mm: Likewise.\n\t* obj-c++.dg/property/property-1.mm: Likewise.\n\t* obj-c++.dg/property/at-property-7.mm: Likewise.\n\t* obj-c++.dg/property/at-property-9.mm: Likewise.\n\t* obj-c++.dg/property/dotsyntax-2.mm: Likewise.\n\t* obj-c++.dg/property/at-property-10.mm: Likewise.\n\t* obj-c++.dg/property/synthesize-2.mm: Likewise.\n\t* obj-c++.dg/property/at-property-12.mm: Likewise.\n\t* obj-c++.dg/property/fsf-property-basic.mm: Likewise.\n\t* obj-c++.dg/property/fsf-property-named-ivar.mm: Likewise.\n\t* obj-c++.dg/property/at-property-6.mm: Likewise.\n\t* obj-c++.dg/property/at-property-8.mm: Likewise.\n\t* obj-c++.dg/property/dotsyntax-1.mm: Likewise.\n\t* obj-c++.dg/property/dotsyntax-3.mm: Likewise.\n\t* obj-c++.dg/property/at-property-11.mm: Likewise.\n\t* obj-c++.dg/template-8.mm: Likewise.\n\t* obj-c++.dg/encode-3.mm: Use abort (), cast char types.\n\t* obj-c++.dg/demangle-2.mm: Add +initialize:, XFAIL NeXT m64.\n\t* obj-c++.dg/property/at-property-2.mm: Comment out a case that ICEs and\n\tput a FIXME for this.\n\t* obj-c++.dg/property/property-2.mm: Remove.\n\t* obj-c++.dg/property/property-3.mm: Remove.\n\nFrom-SVN: r166352", "tree": {"sha": "8566f6b3a64cf422fda52552e87169f806c34d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8566f6b3a64cf422fda52552e87169f806c34d7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f59b812398ae891259f0bd563ca2a23238408a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f59b812398ae891259f0bd563ca2a23238408a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f59b812398ae891259f0bd563ca2a23238408a6"}], "stats": {"total": 309, "additions": 152, "deletions": 157}, "files": [{"sha": "2041a7a762047f906fb3284853107167111e5ea8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,3 +1,33 @@\n+2010-11-05  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* objc.dg/torture/forward-1.m: Restore for m32 NeXT.\n+\t* objc.dg/demangle-1.m: Remove NeXT ifdef around +initialize \n+\tdeclaration and implementation.\n+\t* objc.dg/property/dotsyntax-3.m: XFAIL NeXT m64 run.\n+\t* obj-c++.dg/property/at-property-13.mm: Likewise.\n+\t* obj-c++.dg/property/fsf-property-method-access.mm: Likewise.\n+\t* obj-c++.dg/property/property-1.mm: Likewise.\n+\t* obj-c++.dg/property/at-property-7.mm: Likewise.\n+\t* obj-c++.dg/property/at-property-9.mm: Likewise.\n+\t* obj-c++.dg/property/dotsyntax-2.mm: Likewise.\n+\t* obj-c++.dg/property/at-property-10.mm: Likewise.\n+\t* obj-c++.dg/property/synthesize-2.mm: Likewise.\n+\t* obj-c++.dg/property/at-property-12.mm: Likewise.\n+\t* obj-c++.dg/property/fsf-property-basic.mm: Likewise.\n+\t* obj-c++.dg/property/fsf-property-named-ivar.mm: Likewise.\n+\t* obj-c++.dg/property/at-property-6.mm: Likewise.\n+\t* obj-c++.dg/property/at-property-8.mm: Likewise.\n+\t* obj-c++.dg/property/dotsyntax-1.mm: Likewise.\n+\t* obj-c++.dg/property/dotsyntax-3.mm: Likewise.\n+\t* obj-c++.dg/property/at-property-11.mm: Likewise.\n+\t* obj-c++.dg/template-8.mm: Likewise.\n+\t* obj-c++.dg/encode-3.mm: Use abort (), cast char types.\n+\t* obj-c++.dg/demangle-2.mm: Add +initialize:, XFAIL NeXT m64.\n+\t* obj-c++.dg/property/at-property-2.mm: Comment out a case that ICEs and\n+\tput a FIXME for this.\n+\t* obj-c++.dg/property/property-2.mm: Remove.\n+\t* obj-c++.dg/property/property-3.mm: Remove.\n+\n 2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/46307\n@@ -76,10 +106,9 @@\n \t* objc.dg/encode-7-next.m: Use next-mapping.h, ignore deprecation \n \twarnings.\n \t* objc.dg/encode-7-next-64bit.m: Use next-mapping.h, ignore \n-\tdeprecation warnings.  Use Object1 implemenation.\n+\tdeprecation warnings.  Use Object1 implementation.\n \t* objc.dg/demangle-1.m: Provide +initialize.  XFAIL m64 NeXT run.\n-\t* objc/execute/forward-1.m: Move to objc.dg/torture and reduce scope\n-\tto m32 NeXT.\n+\t* objc/execute/forward-1.m: Remove.\n \t* objc/execute/forward-1.x: Remove.\n \t\n 2010-11-04  Jason Merrill  <jason@redhat.com>"}, {"sha": "f28208591372a443f155e09f40ffff15498c4871", "filename": "gcc/testsuite/obj-c++.dg/demangle-2.mm", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fdemangle-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fdemangle-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fdemangle-2.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Test demangling an Objective-C method.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n #include <cstring>\n #include <cstdlib>\n@@ -13,6 +14,7 @@ @interface DemangleTest\n + (int) testFunction1;\n + (int) test_function2;\n + (int) __testFunction3: (int)unused  andArgument: (char)unused2;\n++ (id) initialize;\n @end\n \n @implementation DemangleTest\n@@ -31,6 +33,7 @@ + (int) __testFunction3: (int)unused   andArgument: (char)unused2\n   std::cout << __PRETTY_FUNCTION__ << \"\\n\";\n   return std::strcmp (__PRETTY_FUNCTION__, \"+[DemangleTest __testFunction3:andArgument:]\");\n }\n++ (id) initialize { return self; }\n @end\n \n int main ()"}, {"sha": "44f288d7de09d9a17f8c67159c1e8da0794eefd1", "filename": "gcc/testsuite/obj-c++.dg/encode-3.mm", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-3.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do run } */\n \n extern \"C\" {\n-extern void _exit(int);\n-extern int strcmp(const char *, const char *);\n+extern void abort (void);\n+extern int strcmp (const char *, const char *);\n }\n \n template <class T>\n@@ -36,16 +36,16 @@ int main(void) {\n   const char *encode = @encode(long);\n \n   if (strcmp (encode, L))\n-    _exit(-(__LINE__));\n+    abort ();\n \n-  if (strcmp (enc, \"{Vec<float>=ff\" L \"q}\"))\n-    _exit(-(__LINE__));\n+  if (strcmp (enc, (const char *)\"{Vec<float>=ff\" L \"q}\"))\n+    abort ();\n \n-  if (strcmp (enc2, \"{Vec<double>=dd\" L \"q}\"))\n-    _exit(-(__LINE__));\n+  if (strcmp (enc2, (const char *)\"{Vec<double>=dd\" L \"q}\"))\n+    abort ();\n \n-  if (strcmp (enc3, \"{?=f[10d]i\" L \"q{Vec<const signed char>=rcrc\" L \"q}}\"))\n-    _exit(-(__LINE__));\n+  if (strcmp (enc3, (const char *)\"{?=f[10d]i\" L \"q{Vec<const signed char>=rcrc\" L \"q}}\"))\n+    abort ();\n \n   return 0;\n }"}, {"sha": "b867896f8b547719326eb172da30adcbeb97f349", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-10.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-10.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-10.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-10.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the property syntax in a number of expressions.  */\n "}, {"sha": "51c402346470ed2901018bf57dc9cf2b450e9703", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-11.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-11.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-11.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-11.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test that properties are found even if implemented in superclasses.  */\n "}, {"sha": "89001e73b85af93f5854605c3f57841e84d092e4", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-12.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-12.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-12.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-12.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test atomic, assign synthesized methods.  */\n "}, {"sha": "6786c3aa857960cde6cbb1bdf00dd866aa6a4a2c", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-13.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-13.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-13.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-13.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test retain and copy synthesized methods.  */\n "}, {"sha": "7966b9a44d0f7b57150618941e370a8216b849dd", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-2.mm", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-2.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -8,6 +8,7 @@ @interface MyRootClass\n }\n @property int name __attribute__((deprecated));\n @property int table __attribute__((xxx));       /* { dg-warning \".xxx. attribute directive ignored\" } */\n-@property void function (void);                 /* { dg-error \"can.t make .function. into a method\" } */\n-@property typedef int j;                        /* { dg-error \"invalid type for property\" } */\n+/* FIXME: the test below should not ICE.\n+@property void function (void);                  { dg-error \"can.t make .function. into a method\" } */\n+@property typedef int j;                        /*  { dg-error \"invalid type for property\" } */\n @end"}, {"sha": "f2e2044cc3ba313deb6e8e53689a7893511eda3a", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-6.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-6.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-6.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-6.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the property syntax with non-synthesized setter/getter\n    and with standard names.  */"}, {"sha": "dc8e90fc3b973e4dfd53aba7ee76264dc67858c1", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-7.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-7.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-7.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-7.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the property syntax with non-synthesized setter/getter\n    and with a non-standard name for the getter.  */"}, {"sha": "f404165675251bd4738d5d2a29188ca2c412e7de", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-8.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-8.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-8.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-8.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the property syntax with non-synthesized setter/getter\n    and with a non-standard name for the setter.  */"}, {"sha": "4b2b64d3f04239d141324636e1af1a9b561bcf31", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-9.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-9.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-9.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-9.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the property syntax with synthesized setter/getter\n    and with a non-standard name for the getter and setter.  */"}, {"sha": "8922f5f03404c87491ffd5ab65836a1a215f43f0", "filename": "gcc/testsuite/obj-c++.dg/property/dotsyntax-1.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-1.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the 'dot syntax' without a declarated property.  */\n "}, {"sha": "03e49aebc5279b6536b2f150ca80b6b4cc977769", "filename": "gcc/testsuite/obj-c++.dg/property/dotsyntax-2.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-2.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the 'dot syntax' without a declarated property.  This tests the case where\n    only the setter (or only the getter) exists.  */"}, {"sha": "d3478062882cb1f9b6ee455a2c0a588d2bb01e56", "filename": "gcc/testsuite/obj-c++.dg/property/dotsyntax-3.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-3.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the 'dot syntax' without a declarated property.  This tests the case where\n    the object is a Class.  */"}, {"sha": "2c3774a9324cb800921466289972bfff2bb7747c", "filename": "gcc/testsuite/obj-c++.dg/property/fsf-property-basic.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-basic.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-basic.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-basic.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Basic test, auto-generated getter/setter based on property name.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n #ifdef __cplusplus\n extern \"C\" {"}, {"sha": "11efb4af0ffb9b388f34f518439019680d64bdd7", "filename": "gcc/testsuite/obj-c++.dg/property/fsf-property-method-access.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-method-access.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-method-access.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-method-access.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* test access in methods, auto-generated getter/setter based on property name.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n #ifdef __cplusplus\n extern \"C\" {"}, {"sha": "d29f43106576945bf33191f5153486ab91d204f7", "filename": "gcc/testsuite/obj-c++.dg/property/fsf-property-named-ivar.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-named-ivar.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-named-ivar.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Ffsf-property-named-ivar.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Basic test, auto-generated getter/setter based on named ivar  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n #ifdef __cplusplus\n extern \"C\" {"}, {"sha": "4447946d1ab5343ba5be693e4af31d9e24a075da", "filename": "gcc/testsuite/obj-c++.dg/property/property-1.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-1.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* This program tests use of property provided setter/getter functions. */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-additional-sources \"../../objc-obj-c++-shared/Object1.mm\" } */\n \n #import \"../../objc-obj-c++-shared/Object1.h\""}, {"sha": "5d55b407cd632d8a05f247c3c4babae68de82da1", "filename": "gcc/testsuite/obj-c++.dg/property/property-2.mm", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f59b812398ae891259f0bd563ca2a23238408a6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f59b812398ae891259f0bd563ca2a23238408a6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-2.mm?ref=0f59b812398ae891259f0bd563ca2a23238408a6", "patch": "@@ -1,62 +0,0 @@\n-/* { dg-do run { target *-*-darwin* } } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n-/* We can't do this yet on m64, since we have not got the NSConstantString implementation\n-   built-in to the compiler, and therefore we get missing implementation warnings.  */\n-/* { dg-require-effective-target ilp32 } */\n-/* Force ABI = 0 in the NeXT headers, also suppress deprecation warnings.  */\n-/* { dg-options \"-framework Foundation -fobjc-exceptions -mmacosx-version-min=10.4 -Wno-deprecated-declarations\" } */\n-\n-#include <objc/objc-api.h>\n-#include <Foundation/Foundation.h>\n-\n-@interface Person : NSObject\n-@property NSString *firstName, *lastName;\n-@property(readonly) NSString *fullName;\n-@end\n-\n-@interface Group : NSObject\n-@property Person *techLead, *runtimeGuru, *propertiesMaven;\n-@end\n-\n-@implementation Group\n-@property Person *techLead, *runtimeGuru, *propertiesMaven;\n-- init {\n-  techLead = [[Person alloc] init];\n-  runtimeGuru = [[Person alloc] init];\n-  propertiesMaven = [[Person alloc] init];\n-  return self;\n-}\n-@end\n-\n-@implementation Person\n-@property NSString *firstName, *lastName;\n-@property(readonly) NSString *fullName;\n-- (NSString*)fullName { // computed getter\n-    return [NSString stringWithFormat:@\"%@ %@\", firstName, lastName];\n-}\n-@end\n-\n-NSString *playWithProperties()\n-{\n-  Group *g = [[Group alloc] init] ;\n-\n-  g.techLead.firstName = @\"Blaine\";\n-  g.techLead.lastName = @\"Garst\";\n-  g.runtimeGuru.firstName = @\"Greg\";\n-  g.runtimeGuru.lastName = @\"Parker\";\n-  g.propertiesMaven.firstName = @\"Patrick\";\n-  g.propertiesMaven.lastName = @\"Beard\";\n-\n-  return [NSString stringWithFormat:@\"techlead %@ runtimeGuru %@ propertiesMaven %@\",\n-                        g.techLead.fullName, g.runtimeGuru.fullName, g.propertiesMaven.fullName];\n-}\n-\n-main()\n-{\n-    char buf [256];\n-    NSAutoreleasePool* pool  = [[NSAutoreleasePool alloc] init];\n-    sprintf(buf, \"%s\", [playWithProperties() cString]);\n-    [pool release];\n-    return strcmp (buf, \"techlead Blaine Garst runtimeGuru Greg Parker propertiesMaven Patrick Beard\");\n-}\n-"}, {"sha": "5a83263e8dc1b4ddb195b609cf3f82a39ad27fbc", "filename": "gcc/testsuite/obj-c++.dg/property/property-3.mm", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f59b812398ae891259f0bd563ca2a23238408a6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f59b812398ae891259f0bd563ca2a23238408a6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fproperty-3.mm?ref=0f59b812398ae891259f0bd563ca2a23238408a6", "patch": "@@ -1,75 +0,0 @@\n-/* This program tests use of properties . */\n-/* { dg-do run { target *-*-darwin* } } */\n-/* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n-/* We can't do this yet on m64, since we have not got the NSConstantString implementation\n-   built-in to the compiler, and therefore we get missing implementation warnings.  */\n-/* { dg-require-effective-target ilp32 } */\n-/* Force ABI = 0 in the NeXT headers, also suppress deprecation warnings.  */\n-/* { dg-options \"-framework Foundation -fobjc-exceptions -mmacosx-version-min=10.4 -Wno-deprecated-declarations\" } */\n-\n-#include <objc/objc-api.h>\n-#include <Foundation/Foundation.h>\n-\n-@interface Person : NSObject\n-{\n-}\n-@property NSString *firstName, *lastName;\n-@property(readonly) NSString *fullName;\n-\n-@end\n-\n-@interface Group : NSObject\n-{\n-}\n-\n-@property Person *techLead, *runtimeGuru, *propertiesMaven;\n-\n-@end\n-\n-@implementation Group\n-\n-@property Person *techLead, *runtimeGuru, *propertiesMaven;\n-- init {\n-  techLead = [[Person alloc] init];\n-  runtimeGuru = [[Person alloc] init];\n-  propertiesMaven = [[Person alloc] init];\n-  return self;\n-}\n-\n-@end\n-\n-@implementation Person\n-\n-@property NSString *firstName, *lastName;\n-@property(readonly, getter = fullName) NSString *fullName;\n-\n-- (NSString*)fullName { // computed getter\n-    return [NSString stringWithFormat:@\"%@ %@\", firstName, lastName];\n-}\n-\n-@end\n-\n-NSString *playWithProperties()\n-{\n-  Group *g = [[Group alloc] init] ;\n-\n-  g.techLead.firstName = @\"Blaine\";\n-  g.techLead.lastName = @\"Garst\";\n-  g.runtimeGuru.firstName = @\"Greg\";\n-  g.runtimeGuru.lastName = @\"Parker\";\n-  g.propertiesMaven.firstName = @\"Patrick\";\n-  g.propertiesMaven.lastName = @\"Beard\";\n-\n-  return [NSString stringWithFormat:@\"techlead %@ runtimeGuru %@ propertiesMaven %@\",\n-                        g.techLead.fullName, g.runtimeGuru.fullName, g.propertiesMaven.fullName];\n-}\n-\n-main()\n-{\n-    char buf [256];\n-    NSAutoreleasePool* pool  = [[NSAutoreleasePool alloc] init];\n-    sprintf(buf, \"%s\", [playWithProperties() cString]);\n-    [pool release];\n-    return strcmp (buf, \"techlead Blaine Garst runtimeGuru Greg Parker propertiesMaven Patrick Beard\");\n-}\n-"}, {"sha": "b14fe264abe98d50f3eafd1118e6254b8278eade", "filename": "gcc/testsuite/obj-c++.dg/property/synthesize-2.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fsynthesize-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fsynthesize-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fsynthesize-2.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, October 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n #include <objc/objc.h>\n #include <objc/runtime.h>"}, {"sha": "97bdb7fb000dbb2e27eb08a8fb68b49a05fa50a4", "filename": "gcc/testsuite/obj-c++.dg/template-8.mm", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftemplate-8.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftemplate-8.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftemplate-8.mm?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -3,18 +3,21 @@\n /* Author: Fariborz Jahanian <fjahanian@apple.com> */\n /* Adapted by Nicola Pero <nicola.pero@meta-innovation.com> */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n #include <objc/objc.h>\n #include <objc/runtime.h>\n \n @interface MyRootClass\n { Class isa; }\n++ (id) initialize;\n + alloc;\n - init;\n - doSomething;\n @end\n \n @implementation MyRootClass\n++ (id) initialize { return self; }\n + alloc { return class_createInstance (self, 0); }\n - init  { return self; }\n - doSomething { return self; }"}, {"sha": "42b79a9eb0a48b83cd36fcad4f0d6e7c1bd8fa20", "filename": "gcc/testsuite/objc.dg/demangle-1.m", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobjc.dg%2Fdemangle-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobjc.dg%2Fdemangle-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fdemangle-1.m?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -12,15 +12,14 @@ @interface DemangleTest\n {\n   Class isa;\n }\n++ (id) initialize;\n + (int) testFunction1;\n + (int) test_function2;\n + (int) __testFunction3: (int)unused  andArgument: (char)unused2;\n-#ifdef __NEXT_RUNTIME__\n-+ (id) initialize ;\n-#endif\n @end\n \n @implementation DemangleTest\n++ (id) initialize { return self; }\n + (int) testFunction1\n {\n   printf (\"%s\\n\", __PRETTY_FUNCTION__);\n@@ -41,9 +40,6 @@ + (int) __testFunction3: (int)unused   andArgument: (char)unused2\n   printf (\"%s\\n\", __PRETTY_FUNCTION__);\n   return strcmp (__PRETTY_FUNCTION__, \"+[DemangleTest __testFunction3:andArgument:]\");\n }\n-#ifdef __NEXT_RUNTIME__\n-+ (id) initialize { return self; }\n-#endif\n @end\n \n int main ()"}, {"sha": "d3478062882cb1f9b6ee455a2c0a588d2bb01e56", "filename": "gcc/testsuite/objc.dg/property/dotsyntax-3.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdotsyntax-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdotsyntax-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdotsyntax-3.m?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -1,5 +1,6 @@\n /* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n /* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n /* Test the 'dot syntax' without a declarated property.  This tests the case where\n    the object is a Class.  */"}, {"sha": "086d69ef35e25bd8b83500724927e4c68e432185", "filename": "gcc/testsuite/objc.dg/torture/forward-1.m", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fforward-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ad8c30d627e2e243ebd0662c2d4dac778462d5/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fforward-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fforward-1.m?ref=a5ad8c30d627e2e243ebd0662c2d4dac778462d5", "patch": "@@ -0,0 +1,83 @@\n+/* { dg-do run } */\n+/* See if -forward::/-performv:: is able to work. */\n+/* { dg-skip-if \"PR36610\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n+/* { dg-skip-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#import \"../../objc-obj-c++-shared/Object1.h\"\n+#import \"../../objc-obj-c++-shared/next-mapping.h\"\n+#include <objc/objc-api.h>\n+\n+#define VALUETOUSE 1234567890\n+\n+id forwarder, receiver;\n+\n+@interface Forwarder: Object\n+{\n+    id receiver;\n+}\n+\n+-initWithReceiver:theReceiver;\n+\n+@end\n+\n+@interface Receiver:Object\n+{\n+    int foo;\n+}\n+-display;\n+-initWithFoo:(int)theFoo;\n+@end\n+@implementation Receiver\n+\n+-initWithFoo: (int)theFoo\n+{\n+    foo = theFoo;\n+    return self;\n+}\n+\n+-display\n+{\n+    /* Check to see if we are really the reciever. */\n+    if (self != receiver)\n+        abort ();\n+    /* And the value of foo is set correctly. */\n+    if (foo != VALUETOUSE)\n+      abort ();\n+    return self;\n+}\n+\n+@end\n+\n+@implementation Forwarder\n+-initWithReceiver: theReceiver\n+{\n+    [super init];\n+    receiver = theReceiver;\n+    return self;\n+}\n+#ifdef __NEXT_RUNTIME__\n+- forward: (SEL)theSel: (marg_list)theArgFrame\n+#else\n+-(retval_t) forward: (SEL)theSel: (arglist_t)theArgFrame\n+#endif\n+{\n+  /* If we have a reciever try to perform on that object */\n+    if (receiver)\n+        return [receiver performv: theSel: theArgFrame];\n+    return [self doesNotRecognize:theSel];\n+}\n+@end\n+int main()\n+{\n+    /* Init the reciever. */\n+    receiver = [[Receiver alloc] initWithFoo: VALUETOUSE];\n+    /* Init the fowarder. */\n+    forwarder = [[Forwarder alloc] initWithReceiver: receiver];\n+    /* Call display on the forwarder which in turns calls display on\n+       the reciever. */\n+    [forwarder display];\n+    exit(0);\n+}"}]}