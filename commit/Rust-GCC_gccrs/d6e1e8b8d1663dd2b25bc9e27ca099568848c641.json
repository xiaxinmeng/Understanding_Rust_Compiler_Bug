{"sha": "d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZlMWU4YjhkMTY2M2RkMmIyNWJjOWUyN2NhMDk5NTY4ODQ4YzY0MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-09-09T15:14:03Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-09-09T15:14:03Z"}, "message": "Handcode gen_rtx_INSN\n\ngcc/ChangeLog:\n2014-09-09  David Malcolm  <dmalcolm@redhat.com>\n\n\t* combine.c (try_combine): Eliminate checked cast on result of\n\tgen_rtx_INSN.\n\t* emit-rtl.c (gen_rtx_INSN): New function, improving over the prior\n\tautogenerated one by strengthening the return type and params 2 and 3\n\tfrom rtx to rtx_insn *, and by naming the params.\n\t* gengenrtl.c (special_rtx): Add INSN to those that are\n\tspecial-cased.\n\t* rtl.h (gen_rtx_INSN): New prototype.\n\nFrom-SVN: r215083", "tree": {"sha": "e9fd85a935c135494fbf5adfc6fce9d4b291818a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9fd85a935c135494fbf5adfc6fce9d4b291818a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0cc97fc5522a17788b0d47550f37d592ffca56ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc97fc5522a17788b0d47550f37d592ffca56ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cc97fc5522a17788b0d47550f37d592ffca56ff"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "97d0fbc725131c27f025af4ac5a4f5eca61efff6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "patch": "@@ -1,3 +1,14 @@\n+2014-09-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* combine.c (try_combine): Eliminate checked cast on result of\n+\tgen_rtx_INSN.\n+\t* emit-rtl.c (gen_rtx_INSN): New function, improving over the prior\n+\tautogenerated one by strengthening the return type and params 2 and 3\n+\tfrom rtx to rtx_insn *, and by naming the params.\n+\t* gengenrtl.c (special_rtx): Add INSN to those that are\n+\tspecial-cased.\n+\t* rtl.h (gen_rtx_INSN): New prototype.\n+\n 2014-09-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* ira.c (ira_update_equiv_info_by_shuffle_insn): Use NULL rather"}, {"sha": "0ec7f852c47dc2e90d70210b4b7bc8350806d41d", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "patch": "@@ -2772,10 +2772,9 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n \t     never appear in the insn stream so giving it the same INSN_UID\n \t     as I2 will not cause a problem.  */\n \n-\t  i1 = as_a <rtx_insn *> (\n-\t\t gen_rtx_INSN (VOIDmode, NULL_RTX, i2, BLOCK_FOR_INSN (i2),\n-\t\t\t       XVECEXP (PATTERN (i2), 0, 1), INSN_LOCATION (i2),\n-\t\t\t       -1, NULL_RTX));\n+\t  i1 = gen_rtx_INSN (VOIDmode, NULL, i2, BLOCK_FOR_INSN (i2),\n+\t\t\t     XVECEXP (PATTERN (i2), 0, 1), INSN_LOCATION (i2),\n+\t\t\t     -1, NULL_RTX);\n \t  INSN_UID (i1) = INSN_UID (i2);\n \n \t  SUBST (PATTERN (i2), XVECEXP (PATTERN (i2), 0, 0));"}, {"sha": "0acdd08bda49885b1e634c7652be510a40976fb9", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "patch": "@@ -424,6 +424,17 @@ gen_rtx_INSN_LIST (enum machine_mode mode, rtx insn, rtx insn_list)\n \t\t\t\t\t\t insn_list));\n }\n \n+rtx_insn *\n+gen_rtx_INSN (enum machine_mode mode, rtx_insn *prev_insn, rtx_insn *next_insn,\n+\t      basic_block bb, rtx pattern, int location, int code,\n+\t      rtx reg_notes)\n+{\n+  return as_a <rtx_insn *> (gen_rtx_fmt_uuBeiie (INSN, mode,\n+\t\t\t\t\t\t prev_insn, next_insn,\n+\t\t\t\t\t\t bb, pattern, location, code,\n+\t\t\t\t\t\t reg_notes));\n+}\n+\n rtx\n gen_rtx_CONST_INT (enum machine_mode mode ATTRIBUTE_UNUSED, HOST_WIDE_INT arg)\n {"}, {"sha": "d3eca985e3e93ea3553022796e5f21c67adc59b3", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "patch": "@@ -125,6 +125,7 @@ special_rtx (int idx)\n {\n   return (strcmp (defs[idx].enumname, \"EXPR_LIST\") == 0\n \t  || strcmp (defs[idx].enumname, \"INSN_LIST\") == 0\n+\t  || strcmp (defs[idx].enumname, \"INSN\") == 0\n \t  || strcmp (defs[idx].enumname, \"CONST_INT\") == 0\n \t  || strcmp (defs[idx].enumname, \"REG\") == 0\n \t  || strcmp (defs[idx].enumname, \"SUBREG\") == 0"}, {"sha": "fae3b5d53840fb56623987ddd3d34d6d0a6c71e2", "filename": "gcc/rtl.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e1e8b8d1663dd2b25bc9e27ca099568848c641/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=d6e1e8b8d1663dd2b25bc9e27ca099568848c641", "patch": "@@ -3089,6 +3089,10 @@ get_mem_attrs (const_rtx x)\n \n extern rtx_expr_list *gen_rtx_EXPR_LIST (enum machine_mode, rtx, rtx);\n extern rtx_insn_list *gen_rtx_INSN_LIST (enum machine_mode, rtx, rtx);\n+extern rtx_insn *\n+gen_rtx_INSN (enum machine_mode mode, rtx_insn *prev_insn, rtx_insn *next_insn,\n+\t      basic_block bb, rtx pattern, int location, int code,\n+\t      rtx reg_notes);\n extern rtx gen_rtx_CONST_INT (enum machine_mode, HOST_WIDE_INT);\n extern rtx gen_rtx_CONST_VECTOR (enum machine_mode, rtvec);\n extern rtx gen_raw_REG (enum machine_mode, int);"}]}