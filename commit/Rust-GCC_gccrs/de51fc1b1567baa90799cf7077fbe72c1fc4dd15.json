{"sha": "de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1MWZjMWIxNTY3YmFhOTA3OTljZjcwNzdmYmU3MmMxZmM0ZGQxNQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2014-07-05T20:43:07Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2014-07-05T20:43:07Z"}, "message": "Restore Solaris/SPARC bootstrap\n\n\t* configure, config.h.in: Regenerate.\n\t* config/fpu-sysv.h: Include <assert.h>.\n\nFrom-SVN: r212307", "tree": {"sha": "35c6cba4598a7230242b6cbdfd8e1e247325d7ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35c6cba4598a7230242b6cbdfd8e1e247325d7ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a62ed16dda57ee799dfd0ef12f1800cf48e5908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a62ed16dda57ee799dfd0ef12f1800cf48e5908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a62ed16dda57ee799dfd0ef12f1800cf48e5908"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "9f03a5ce36813a813e50f07f66bbe3c5acafdb5a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "patch": "@@ -1,3 +1,8 @@\n+2014-07-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure, config.h.in: Regenerate.\n+\t* config/fpu-sysv.h: Include <assert.h>.\n+\n 2014-07-02  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* config/fpu-glibc.h: Fix comment about FE_DENORMAL."}, {"sha": "de7937f328aa67de132d576c4756bc7ab1968fd5", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "patch": "@@ -396,9 +396,15 @@\n /* Define to 1 if you have the `fork' function. */\n #undef HAVE_FORK\n \n+/* fpresetsticky is present */\n+#undef HAVE_FPRESETSTICKY\n+\n /* Define if you have fpsetmask. */\n #undef HAVE_FPSETMASK\n \n+/* fpsetsticky is present */\n+#undef HAVE_FPSETSTICKY\n+\n /* Define to 1 if you have the <fptrap.h> header file. */\n #undef HAVE_FPTRAP_H\n "}, {"sha": "8d8ff329f1fb515c93f8dfdc949be90c1b4e900d", "filename": "libgfortran/config/fpu-sysv.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2Fconfig%2Ffpu-sysv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2Fconfig%2Ffpu-sysv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-sysv.h?ref=de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "patch": "@@ -25,6 +25,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* FPU-related code for SysV platforms with fpsetmask().  */\n \n+#include <assert.h>\n+\n /* BSD and Solaris systems have slightly different types and functions\n    naming.  We deal with these here, to simplify the code below.  */\n "}, {"sha": "d6d26db8c3f215c6048ad767d0a2dce0a61c7c38", "filename": "libgfortran/configure", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de51fc1b1567baa90799cf7077fbe72c1fc4dd15/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=de51fc1b1567baa90799cf7077fbe72c1fc4dd15", "patch": "@@ -26100,6 +26100,22 @@ _ACEOF\n fi\n \n \n+# Check whether we have fpsetsticky or fpresetsticky\n+ac_fn_c_check_func \"$LINENO\" \"fpsetsticky\" \"ac_cv_func_fpsetsticky\"\n+if test \"x$ac_cv_func_fpsetsticky\" = x\"\"yes; then :\n+  have_fpsetsticky=yes\n+$as_echo \"#define HAVE_FPSETSTICKY 1\" >>confdefs.h\n+\n+fi\n+\n+ac_fn_c_check_func \"$LINENO\" \"fpresetsticky\" \"ac_cv_func_fpresetsticky\"\n+if test \"x$ac_cv_func_fpresetsticky\" = x\"\"yes; then :\n+  have_fpresetsticky=yes\n+$as_echo \"#define HAVE_FPRESETSTICKY 1\" >>confdefs.h\n+\n+fi\n+\n+\n # Check for AIX fp_trap and fp_enable\n ac_fn_c_check_func \"$LINENO\" \"fp_trap\" \"ac_cv_func_fp_trap\"\n if test \"x$ac_cv_func_fp_trap\" = x\"\"yes; then :"}]}