{"sha": "7e02426ba0cc4f97ed347f963a6409b32c3c0c88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UwMjQyNmJhMGNjNGY5N2VkMzQ3Zjk2M2E2NDA5YjMyYzNjMGM4OA==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-01-16T08:00:23Z"}, "committer": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-01-16T16:54:27Z"}, "message": "nios2: Remove custom instruction warnings\n\nDo not warn if custom instructions are not used due to missing\noptimization flags.  This prevents build errors with -Werror which\ncannot be disabled via a dedicated warning option.\n\nOne reason to remove these warnings is to enable a multilib for the\n\"Nios II Floating Point Hardware 2 Component\".  For example, the\nlibatomic target library in GCC is built with -Werror and the warnings\nremoved by this patch resulted in errors like:\n\ncc1: error: switch '-mcustom-fmins' has no effect unless '-ffinite-math-only' is specified [-Werror]\ncc1: error: switch '-mcustom-fmaxs' has no effect unless '-ffinite-math-only' is specified [-Werror]\ncc1: error: switch '-mcustom-round' has no effect unless '-fno-math-errno' is specified [-Werror]\n\ngcc/\n\n\t* config/nios2/nios2.c (nios2_custom_check_insns): Remove\n\tcustom instruction warnings.", "tree": {"sha": "0d2e17019501b45258d24242a8eb7422b24793dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d2e17019501b45258d24242a8eb7422b24793dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e02426ba0cc4f97ed347f963a6409b32c3c0c88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e02426ba0cc4f97ed347f963a6409b32c3c0c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e02426ba0cc4f97ed347f963a6409b32c3c0c88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e02426ba0cc4f97ed347f963a6409b32c3c0c88/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2559c3945a09521ffe4f59669bc4d902ae77adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2559c3945a09521ffe4f59669bc4d902ae77adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2559c3945a09521ffe4f59669bc4d902ae77adb"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "e4349e766ae69eb3462a858a74a273098be9857f", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e02426ba0cc4f97ed347f963a6409b32c3c0c88/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e02426ba0cc4f97ed347f963a6409b32c3c0c88/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=7e02426ba0cc4f97ed347f963a6409b32c3c0c88", "patch": "@@ -1186,34 +1186,6 @@ nios2_custom_check_insns (void)\n \tbreak;\n       }\n \n-  /* Warn if the user has certain exotic operations that won't get used\n-     without -funsafe-math-optimizations.  See expand_builtin () in\n-     builtins.c.  */\n-  if (!flag_unsafe_math_optimizations)\n-    for (i = 0; i < ARRAY_SIZE (nios2_fpu_insn); i++)\n-      if (N2FPU_ENABLED_P (i) && N2FPU_UNSAFE_P (i))\n-\twarning (0, \"switch %<-mcustom-%s%> has no effect unless \"\n-\t\t \"%<-funsafe-math-optimizations%> is specified\",\n-\t\t N2FPU_NAME (i));\n-\n-  /* Warn if the user is trying to use -mcustom-fmins et. al, that won't\n-     get used without -ffinite-math-only.  See fold_builtin_fmin_fmax ()\n-     in builtins.c.  */\n-  if (!flag_finite_math_only)\n-    for (i = 0; i < ARRAY_SIZE (nios2_fpu_insn); i++)\n-      if (N2FPU_ENABLED_P (i) && N2FPU_FINITE_P (i))\n-\twarning (0, \"switch %<-mcustom-%s%> has no effect unless \"\n-\t\t \"%<-ffinite-math-only%> is specified\", N2FPU_NAME (i));\n-\n-  /* Warn if the user is trying to use a custom rounding instruction\n-     that won't get used without -fno-math-errno.  See\n-     expand_builtin_int_roundingfn_2 () in builtins.c.  */\n-  if (flag_errno_math)\n-    for (i = 0; i < ARRAY_SIZE (nios2_fpu_insn); i++)\n-      if (N2FPU_ENABLED_P (i) && N2FPU_NO_ERRNO_P (i))\n-\twarning (0, \"switch %<-mcustom-%s%> has no effect unless \"\n-\t\t \"%<-fno-math-errno%> is specified\", N2FPU_NAME (i));\n-\n   if (errors || custom_code_conflict)\n     fatal_error (input_location,\n \t\t \"conflicting use of %<-mcustom%> switches, target attributes, \""}]}