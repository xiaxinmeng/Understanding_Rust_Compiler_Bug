{"sha": "d558416ef32eb82c6cf3b8fa446709690567c777", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1ODQxNmVmMzJlYjgyYzZjZjNiOGZhNDQ2NzA5NjkwNTY3Yzc3Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-06-05T20:32:41Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-06-05T20:32:41Z"}, "message": "print-rtl.c (xspaces): Remove.\n\n\t* print-rtl.c (xspaces): Remove.\n\t(print_rtx): Use printf field-width, rather than xpsaces, to\n\tindent.\n\t* toplev.c (main): Disable sibling-call optimization if we are\n\thandling exceptions.\n\n\t* reload1.c (reload): Delete all USEs generated during reload.\n\nFrom-SVN: r42917", "tree": {"sha": "ada42d35b4befac7e457d3454c5ec417007a605d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ada42d35b4befac7e457d3454c5ec417007a605d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d558416ef32eb82c6cf3b8fa446709690567c777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d558416ef32eb82c6cf3b8fa446709690567c777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d558416ef32eb82c6cf3b8fa446709690567c777", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d558416ef32eb82c6cf3b8fa446709690567c777/comments", "author": null, "committer": null, "parents": [{"sha": "b0317102a8643b027df3e93988c0b3d6146cbfc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0317102a8643b027df3e93988c0b3d6146cbfc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0317102a8643b027df3e93988c0b3d6146cbfc6"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "62a19b7d2815e3d3a88d5a63fe930276b5e4a76f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d558416ef32eb82c6cf3b8fa446709690567c777", "patch": "@@ -1,3 +1,15 @@\n+2001-06-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* print-rtl.c (xspaces): Remove.\n+\t(print_rtx): Use printf field-width, rather than xpsaces, to\n+\tindent.\n+\t* toplev.c (main): Disable sibling-call optimization if we are\n+\thandling exceptions.\n+\t\n+2001-06-05  Bernd Schmidt  <bernds@redhat.com>\n+\n+\t* reload1.c (reload): Delete all USEs generated during reload.\n+\n 2001-06-05  scott snyder  <snyder@fnal.gov>\n \n \t* gccbug.in:  Fix typo."}, {"sha": "1c4e6f312a2a32f3a3b54a46b2b2e2dab5ca40ad", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=d558416ef32eb82c6cf3b8fa446709690567c777", "patch": "@@ -47,8 +47,6 @@ const char * reg_names[] = REGISTER_NAMES;\n \n static FILE *outfile;\n \n-static const char xspaces[] = \"                                                                                                                                                                \";\n-\n static int sawclose = 0;\n \n static int indent;\n@@ -91,9 +89,8 @@ print_rtx (in_rtx)\n       if (flag_simple)\n \tfputc (' ', outfile);\n       else\n-\tfprintf (outfile, \"\\n%s%s\",\n-\t\t print_rtx_head,\n-\t\t (xspaces + (sizeof xspaces - 1 - indent * 2)));\n+\tfprintf (outfile, \"\\n%s%*s\",\n+\t\t print_rtx_head, indent * 2, \"\");\n       sawclose = 0;\n     }\n \n@@ -282,9 +279,8 @@ print_rtx (in_rtx)\n \tindent += 2;\n \tif (sawclose)\n \t  {\n-\t    fprintf (outfile, \"\\n%s%s\",\n-                     print_rtx_head,\n-\t\t     (xspaces + (sizeof xspaces - 1 - indent * 2)));\n+\t    fprintf (outfile, \"\\n%s%*s\",\n+                     print_rtx_head, indent * 2, \"\");\n \t    sawclose = 0;\n \t  }\n \tfputs (\"[ \", outfile);\n@@ -300,9 +296,8 @@ print_rtx (in_rtx)\n \t    indent -= 2;\n \t  }\n \tif (sawclose)\n-\t  fprintf (outfile, \"\\n%s%s\",\n-                   print_rtx_head,\n-\t\t   (xspaces + (sizeof xspaces - 1 - indent * 2)));\n+\t  fprintf (outfile, \"\\n%s%*s\",\n+                   print_rtx_head, indent * 2, \"\");\n \n \tfputs (\"] \", outfile);\n \tsawclose = 1;"}, {"sha": "53c3116f29a6fe0ca573dabc90b8e059720def5d", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d558416ef32eb82c6cf3b8fa446709690567c777", "patch": "@@ -1187,7 +1187,7 @@ reload (first, global)\n \t\t\t\t\t CALL_INSN_FUNCTION_USAGE (insn));\n \n \tif ((GET_CODE (PATTERN (insn)) == USE\n-\t     && find_reg_note (insn, REG_EQUAL, NULL_RTX))\n+\t     && INSN_UID (insn) >= reload_first_uid)\n \t    || (GET_CODE (PATTERN (insn)) == CLOBBER\n \t\t&& (GET_CODE (XEXP (PATTERN (insn), 0)) != REG\n \t\t    || ! REG_FUNCTION_VALUE_P (XEXP (PATTERN (insn), 0)))))"}, {"sha": "ba0864109b68f6869bb1e2c3dde220d23fa50688", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d558416ef32eb82c6cf3b8fa446709690567c777/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d558416ef32eb82c6cf3b8fa446709690567c777", "patch": "@@ -2523,7 +2523,7 @@ compile_file (name)\n \n    This does nothing for local (non-static) variables, unless the\n    variable is a register variable with an ASMSPEC.  In that case, or\n-   if the variable is not an automatice, it sets up the RTL and\n+   if the variable is not an automatic, it sets up the RTL and\n    outputs any assembler code (label definition, storage allocation\n    and initialization).\n \n@@ -4897,6 +4897,12 @@ toplev_main (argc, argv)\n \twarning (\"-Wuninitialized is not supported without -O\");\n     }\n \n+  /* We do not currently support sibling-call optimization in the\n+     presence of exceptions.  See PR2975 for a test-case that will\n+     fail if we try to combine both of these features.  */\n+  if (flag_exceptions)\n+    flag_optimize_sibling_calls = 0;\n+\n #ifdef OVERRIDE_OPTIONS\n   /* Some machines may reject certain combinations of options.  */\n   OVERRIDE_OPTIONS;"}]}