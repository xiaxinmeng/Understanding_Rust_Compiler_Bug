{"sha": "5cb047d108528cf8d0205dc4cdddf65963c9985a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNiMDQ3ZDEwODUyOGNmOGQwMjA1ZGM0Y2RkZGY2NTk2M2M5OTg1YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-17T00:11:27Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-17T00:11:27Z"}, "message": "Improve errors for invalid use of [...]type.\n\nFrom-SVN: r178921", "tree": {"sha": "c6dc043d52112964dd9db2cb59534ee92901652a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6dc043d52112964dd9db2cb59534ee92901652a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cb047d108528cf8d0205dc4cdddf65963c9985a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb047d108528cf8d0205dc4cdddf65963c9985a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb047d108528cf8d0205dc4cdddf65963c9985a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb047d108528cf8d0205dc4cdddf65963c9985a/comments", "author": null, "committer": null, "parents": [{"sha": "31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31aeabd3c51f798a7a3cbfab4bacbce983415ad8"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "70f5f7c4423453261d4d3c9713b6676c09081e5d", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb047d108528cf8d0205dc4cdddf65963c9985a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb047d108528cf8d0205dc4cdddf65963c9985a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=5cb047d108528cf8d0205dc4cdddf65963c9985a", "patch": "@@ -11789,7 +11789,7 @@ Array_construction_expression::do_check_types(Gogo*)\n     }\n \n   Expression* length = at->length();\n-  if (length != NULL)\n+  if (length != NULL && !length->is_error_expression())\n     {\n       mpz_t val;\n       mpz_init(val);"}, {"sha": "b18c9892285acdd432aeecee2bbcd22441fdc9b2", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb047d108528cf8d0205dc4cdddf65963c9985a/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb047d108528cf8d0205dc4cdddf65963c9985a/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=5cb047d108528cf8d0205dc4cdddf65963c9985a", "patch": "@@ -2761,8 +2761,21 @@ Parse::primary_expr(bool may_be_sink, bool may_be_composite_lit,\n \t  else\n \t    this->advance_token();\n \t  if (expr->is_error_expression())\n-\t    return expr;\n-\t  ret = Expression::make_cast(ret->type(), expr, loc);\n+\t    ret = expr;\n+\t  else\n+\t    {\n+\t      Type* t = ret->type();\n+\t      if (t->classification() == Type::TYPE_ARRAY\n+\t\t  && t->array_type()->length() != NULL\n+\t\t  && t->array_type()->length()->is_nil_expression())\n+\t\t{\n+\t\t  error_at(ret->location(),\n+\t\t\t   \"invalid use of %<...%> in type conversion\");\n+\t\t  ret = Expression::make_error(loc);\n+\t\t}\n+\t      else\n+\t\tret = Expression::make_cast(t, expr, loc);\n+\t    }\n \t}\n     }\n "}, {"sha": "83e32de7b6bce94830113427344aee4de164659f", "filename": "gcc/testsuite/go.test/test/ddd1.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb047d108528cf8d0205dc4cdddf65963c9985a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb047d108528cf8d0205dc4cdddf65963c9985a/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go?ref=5cb047d108528cf8d0205dc4cdddf65963c9985a", "patch": "@@ -15,7 +15,7 @@ var (\n \t_ = sum()\n \t_ = sum(1.0, 2.0)\n \t_ = sum(1.5)      // ERROR \"integer\"\n-\t_ = sum(\"hello\")  // ERROR \"convert|incompatible\"\n+\t_ = sum(\"hello\")  // ERROR \"string.*as type int|incompatible\"\n \t_ = sum([]int{1}) // ERROR \"slice literal.*as type int|incompatible\"\n )\n \n@@ -43,4 +43,7 @@ func bad(args ...int) {\n \tvar x int\n \t_ = unsafe.Pointer(&x...)\t// ERROR \"[.][.][.]\"\n \t_ = unsafe.Sizeof(x...)\t// ERROR \"[.][.][.]\"\n+\t_ = [...]byte(\"foo\") // ERROR \"[.][.][.]\"\n+\t_ = [...][...]int{{1,2,3},{4,5,6}}\t// ERROR \"[.][.][.]\"\n }\n+"}]}