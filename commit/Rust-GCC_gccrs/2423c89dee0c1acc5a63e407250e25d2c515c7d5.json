{"sha": "2423c89dee0c1acc5a63e407250e25d2c515c7d5", "node_id": "C_kwDOANBUbNoAKDI0MjNjODlkZWUwYzFhY2M1YTYzZTQwNzI1MGUyNWQyYzUxNWM3ZDU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-05T15:54:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-05T15:54:33Z"}, "message": "Merge #751\n\n751: Enable the usage of selftests r=tschwinge a=CohenArthur\n\nFrom what I can understand, self tests seem to only be used in the C family of languages and in no other gcc frontend. And for some reason one of the self test for the gccrs frontend seem to be the parsing of C code and C types, which fails, which is why this PR is a draft. Once this is fixed, selftests should be enabled for the frontend and we should be able to add some to the project.\n\nCo-authored-by: CohenArthur <arthur.cohen@epita.fr>\nCo-authored-by: CohenArthur <cohenarthur.dev@gmail.com>", "tree": {"sha": "1e7d6aec2d1354fd6635694061332bb626377944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e7d6aec2d1354fd6635694061332bb626377944"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2423c89dee0c1acc5a63e407250e25d2c515c7d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/p25CRBK7hj4Ov3rIwAA4TQIAB0l+OOONGrBsnBQPnBY5jzY\n2zfJAxQUyWFBxIhddKrl9FZhJnrLzCSWeh05kUeJExgWFKFhI288+gZ2paCx6Jte\nFwfJ53KGIiRtMCiIvzNVKWQUFzOC+FO+8Pvhy4y3BFKlC7shP73pS69OgC7gs/nf\ncKVC7lraCkQrA/UYd0iFovShUk9uH1ulWX3b/4bq/XOQBjFH6O0ruYWQkWGpIIHD\npYceYN0yd9eGDECfZnGCmPJevGYoaeYoqnS116yG/CC7ylMGxiqQ05JMyP2BIREZ\nNg5P/YVpK8P4FqoXiDLM6lDyZSVP2F5VZLEdKgNWemtZGJ0DtM9c3rX7GjvOMw8=\n=4StY\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e7d6aec2d1354fd6635694061332bb626377944\nparent 83bfbf0746c87b641754697a3c8e9f7a7cb08aa9\nparent bc47ace0ec97ef1b3498c17ff03e2ee873743d5c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1644076473 +0000\ncommitter GitHub <noreply@github.com> 1644076473 +0000\n\nMerge #751\n\n751: Enable the usage of selftests r=tschwinge a=CohenArthur\n\nFrom what I can understand, self tests seem to only be used in the C family of languages and in no other gcc frontend. And for some reason one of the self test for the gccrs frontend seem to be the parsing of C code and C types, which fails, which is why this PR is a draft. Once this is fixed, selftests should be enabled for the frontend and we should be able to add some to the project.\n\nCo-authored-by: CohenArthur <arthur.cohen@epita.fr>\nCo-authored-by: CohenArthur <cohenarthur.dev@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2423c89dee0c1acc5a63e407250e25d2c515c7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2423c89dee0c1acc5a63e407250e25d2c515c7d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2423c89dee0c1acc5a63e407250e25d2c515c7d5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83bfbf0746c87b641754697a3c8e9f7a7cb08aa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83bfbf0746c87b641754697a3c8e9f7a7cb08aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83bfbf0746c87b641754697a3c8e9f7a7cb08aa9"}, {"sha": "bc47ace0ec97ef1b3498c17ff03e2ee873743d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc47ace0ec97ef1b3498c17ff03e2ee873743d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc47ace0ec97ef1b3498c17ff03e2ee873743d5c"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "d02016efc4165eed241df6372367c0dd07e459a5", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -9111,6 +9111,8 @@ c_family_tests (void)\n   c_indentation_c_tests ();\n   c_pretty_print_c_tests ();\n   c_spellcheck_cc_tests ();\n+  c_diagnostic_c_tests ();\n+  c_opt_problem_cc_tests ();\n }\n \n } // namespace selftest"}, {"sha": "817e1b6ac371f17742002eb61fbaab54896971af", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -1512,8 +1512,10 @@ extern tree braced_lists_to_strings (tree, tree);\n namespace selftest {\n   /* Declarations for specific families of tests within c-family,\n      by source file, in alphabetical order.  */\n+  extern void c_diagnostic_c_tests (void);\n   extern void c_format_c_tests (void);\n   extern void c_indentation_c_tests (void);\n+  extern void c_opt_problem_cc_tests (void);\n   extern void c_pretty_print_c_tests (void);\n   extern void c_spellcheck_cc_tests (void);\n "}, {"sha": "9c2f44570ebeed918fe58d6fe4800ecd41d05a07", "filename": "gcc/diagnostic.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fdiagnostic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fdiagnostic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.cc?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -2466,7 +2466,7 @@ test_num_digits ()\n /* Run all of the selftests within this file.  */\n \n void\n-diagnostic_c_tests ()\n+c_diagnostic_c_tests ()\n {\n   test_print_escaped_string ();\n   test_print_parseable_fixits_none ();"}, {"sha": "11fec57d6791d25b58553e7b9e21bdf1a924c0ac", "filename": "gcc/opt-problem.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fopt-problem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fopt-problem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-problem.cc?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -324,7 +324,7 @@ test_opt_result_failure_at (const line_table_case &case_)\n /* Run all of the selftests within this file.  */\n \n void\n-opt_problem_cc_tests ()\n+c_opt_problem_cc_tests ()\n {\n   test_opt_result_success ();\n   for_each_line_table_case (test_opt_result_failure_at);"}, {"sha": "d2f796269f9b9fd1198807bc0aed47fe1fb51c55", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -209,8 +209,16 @@ rust.uninstall:\n \t-rm -f $(RUST_ALL_OBJS)\n # ^those two are a maybe\n \n-# No rust-specific selftests\n-selftest-rust:\n+# Enable selftests for the rust frontend\n+selftest-rust: s-selftest-rust\n+\n+RUST_SELFTEST_FLAGS = -xrs $(SELFTEST_FLAGS)\n+RUST_SELFTEST_DEPS = rust1$(exeext) $(SELFTEST_DEPS)\n+\n+# Run the rust selftests\n+s-selftest-rust: $(RUST_SELFTEST_DEPS)\n+\t$(GCC_FOR_TARGET) $(RUST_SELFTEST_FLAGS)\n+\t$(STAMP) $@\n \n # Install info documentation for the front end, if it is present in the source directory. This target\n # should have dependencies on info files that should be installed.\n@@ -319,4 +327,3 @@ rust/%.o: rust/typecheck/%.cc\n rust/%.o: rust/lint/%.cc\n \t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n-"}, {"sha": "fbab9b1d7788dde769530c135f3ef71d462a5c2c", "filename": "gcc/rust/rust-lang.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Frust%2Frust-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Frust%2Frust-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-lang.cc?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -32,6 +32,7 @@\n #include \"convert.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n+#include \"selftest.h\"\n \n #include <mpfr.h>\n // note: header files must be in this order or else forward declarations don't\n@@ -434,6 +435,29 @@ rust_localize_identifier (const char *ident)\n #define LANG_HOOKS_GIMPLIFY_EXPR grs_langhook_gimplify_expr\n #define LANG_HOOKS_EH_PERSONALITY grs_langhook_eh_personality\n \n+#if CHECKING_P\n+\n+#undef LANG_HOOKS_RUN_LANG_SELFTESTS\n+#define LANG_HOOKS_RUN_LANG_SELFTESTS selftest::run_rust_tests\n+\n+namespace selftest {\n+\n+static void\n+simple_assert ()\n+{\n+  ASSERT_TRUE (true);\n+}\n+\n+void\n+run_rust_tests ()\n+{\n+  // Call tests for the rust frontend here\n+  simple_assert ();\n+}\n+} // namespace selftest\n+\n+#endif /* !CHECKING_P */\n+\n // Expands all LANG_HOOKS_x of GCC\n struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n "}, {"sha": "0c5bf4cdb1dedef453bdc024692a6c875bc252b2", "filename": "gcc/selftest-run-tests.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fselftest-run-tests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fselftest-run-tests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest-run-tests.cc?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -76,7 +76,6 @@ selftest::run_tests ()\n   json_cc_tests ();\n   cgraph_c_tests ();\n   optinfo_emit_json_cc_tests ();\n-  opt_problem_cc_tests ();\n   ordered_hash_map_tests_cc_tests ();\n   splay_tree_cc_tests ();\n \n@@ -95,7 +94,6 @@ selftest::run_tests ()\n   /* Higher-level tests, or for components that other selftests don't\n      rely on.  */\n   diagnostic_show_locus_c_tests ();\n-  diagnostic_c_tests ();\n   diagnostic_format_json_cc_tests ();\n   edit_context_c_tests ();\n   fold_const_c_tests ();"}, {"sha": "6d624617a913cbfe3a2e547b3c996ee46ce639fb", "filename": "gcc/selftest.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fselftest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2423c89dee0c1acc5a63e407250e25d2c515c7d5/gcc%2Fselftest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.h?ref=2423c89dee0c1acc5a63e407250e25d2c515c7d5", "patch": "@@ -238,7 +238,6 @@ extern void hash_map_tests_c_tests ();\n extern void hash_set_tests_c_tests ();\n extern void input_c_tests ();\n extern void json_cc_tests ();\n-extern void opt_problem_cc_tests ();\n extern void optinfo_emit_json_cc_tests ();\n extern void opts_c_tests ();\n extern void ordered_hash_map_tests_cc_tests ();"}]}