{"sha": "eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI3ZDU2MjdlMTI5NzBiM2QzZjIyNjBkNWY0YmE5MGVmM2JhNDJmOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-01-14T06:21:30Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-01-14T06:21:30Z"}, "message": "(INIT_CUMULATIVE_INCOMING_ARGS): Reserve two regs for caller's lr0,lr1.\n\nFrom-SVN: r8758", "tree": {"sha": "cb111804ea52d582c860cb4564c7f4459ed73853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb111804ea52d582c860cb4564c7f4459ed73853"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9/comments", "author": null, "committer": null, "parents": [{"sha": "23c97802de08d6bcc8574673ad15e667f76fc063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c97802de08d6bcc8574673ad15e667f76fc063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c97802de08d6bcc8574673ad15e667f76fc063"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "37abee5922ca6ab8b5100d20fdf7e532dbffd361", "filename": "gcc/config/a29k/a29k.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9/gcc%2Fconfig%2Fa29k%2Fa29k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9/gcc%2Fconfig%2Fa29k%2Fa29k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.h?ref=eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9", "patch": "@@ -777,19 +777,21 @@ extern struct rtx_def *a29k_get_reloaded_address ();\n /* Same, but called for incoming args.\n \n    On the 29k, we use this to set all argument registers to fixed and\n-   set the last 16 local regs (lr112-lr127) to available.  Some\n-   will later be changed to call-saved by FUNCTION_INCOMING_ARG.  */\n+   set the last 16 local regs, less two, (lr110-lr125) to available.  Some\n+   will later be changed to call-saved by FUNCTION_INCOMING_ARG.\n+   lr126,lr127 are always fixed, they are place holders for the caller's\n+   lr0,lr1.  */\n \n-#define INIT_CUMULATIVE_INCOMING_ARGS(CUM,FNTYPE,IGNORE)\t\t\\\n+#define INIT_CUMULATIVE_INCOMING_ARGS(CUM,FNTYPE,IGNORE)\t\\\n { int i;\t\t\t\t\t\t\t\\\n-  for (i = R_AR (0); i < R_AR (16); i++)\t\t\t\\\n+  for (i = R_AR (0) - 2; i < R_AR (16); i++)\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       fixed_regs[i] = call_used_regs[i] = call_fixed_regs[i] = 1; \\\n       SET_HARD_REG_BIT (fixed_reg_set, i);\t\t\t\\\n       SET_HARD_REG_BIT (call_used_reg_set, i);\t\t\t\\\n       SET_HARD_REG_BIT (call_fixed_reg_set, i);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n-  for (i = R_LR (112); i < R_LR (128); i++)\t\t\t\t\t\\\n+  for (i = R_LR (110); i < R_LR (126); i++)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       fixed_regs[i] = call_used_regs[i] = call_fixed_regs[i] = 0; \\\n       CLEAR_HARD_REG_BIT (fixed_reg_set, i);\t\t\t\\"}]}