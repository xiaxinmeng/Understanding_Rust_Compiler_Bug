{"sha": "8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3MGQ1YmNiMWUzYTJmZDI0NDViYmM4ZWU3ZGI1MGQxOTllM2FkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-03-27T12:32:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-03-27T12:32:51Z"}, "message": "io.c (check_io_constraints): Don't look at dt->advance->value.charater.string, unless it is a CHARACTER constant.\n\n\t* io.c (check_io_constraints): Don't look at\n\tdt->advance->value.charater.string, unless it is a CHARACTER\n\tconstant.\n\n\t* gfortran.dg/advance_2.f90: New test.\n\t* gfortran.dg/advance_3.f90: New test.\n\nFrom-SVN: r112417", "tree": {"sha": "615542d5e9e2f86f74f8ed1582839fc780eeb790", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/615542d5e9e2f86f74f8ed1582839fc780eeb790"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b9c708f1527051df149a21318aff0b6ba531fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9c708f1527051df149a21318aff0b6ba531fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b9c708f1527051df149a21318aff0b6ba531fa8"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "6d19805ee6660b9170d3ff6f03aa2c011c4ac0e3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "patch": "@@ -1,5 +1,9 @@\n 2006-03-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* io.c (check_io_constraints): Don't look at\n+\tdt->advance->value.charater.string, unless it is a CHARACTER\n+\tconstant.\n+\n \t* f95-lang.c (gfc_get_alias_set): New function.\n \t(LANG_HOOKS_GET_ALIAS_SET): Define.\n "}, {"sha": "30344d90e741a32669287e39cc45dcf97b491b01", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "patch": "@@ -2317,30 +2317,34 @@ if (condition) \\\n \n   if (dt->advance)\n     {\n-      const char * advance;\n       int not_yes, not_no;\n       expr = dt->advance;\n-      advance = expr->value.character.string;\n \n       io_constraint (dt->format_label == &format_asterisk,\n \t\t     \"List directed format(*) is not allowed with a \"\n \t\t     \"ADVANCE=specifier at %L.\", &expr->where);\n \n-      not_no = strncasecmp (advance, \"no\", 2) != 0;\n-      not_yes = strncasecmp (advance, \"yes\", 2) != 0;\n+      if (expr->expr_type == EXPR_CONSTANT && expr->ts.type == BT_CHARACTER)\n+\t{\n+\t  const char * advance = expr->value.character.string;\n+\t  not_no = strncasecmp (advance, \"no\", 2) != 0;\n+\t  not_yes = strncasecmp (advance, \"yes\", 2) != 0;\n+\t}\n+      else\n+\t{\n+\t  not_no = 0;\n+\t  not_yes = 0;\n+\t}\n \n-      io_constraint (expr->expr_type == EXPR_CONSTANT\n-\t\t       && not_no && not_yes,\n+      io_constraint (not_no && not_yes,\n \t\t     \"ADVANCE=specifier at %L must have value = \"\n \t\t     \"YES or NO.\", &expr->where);\n \n-      io_constraint (dt->size && expr->expr_type == EXPR_CONSTANT\n-\t\t       && not_no && k == M_READ,\n+      io_constraint (dt->size && not_no && k == M_READ,\n \t\t     \"SIZE tag at %L requires an ADVANCE = 'NO'\",\n \t\t     &dt->size->where);\n \n-      io_constraint (dt->eor && expr->expr_type == EXPR_CONSTANT \n-\t\t       && not_no && k == M_READ,\n+      io_constraint (dt->eor && not_no && k == M_READ,\n \t\t     \"EOR tag at %L requires an ADVANCE = 'NO'\",\n \t\t     &dt->eor_where);      \n     }"}, {"sha": "e1139be7216fb019713a63bc03f5361ddf1337b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "patch": "@@ -1,5 +1,8 @@\n 2006-03-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gfortran.dg/advance_2.f90: New test.\n+\t* gfortran.dg/advance_3.f90: New test.\n+\n \t* gfortran.fortran-torture/execute/equiv_5.f: New test.\n \n 2006-03-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>"}, {"sha": "1e83aaee31673d3cee6305ecc70676a77fa29e25", "filename": "gcc/testsuite/gfortran.dg/advance_2.f90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ftestsuite%2Fgfortran.dg%2Fadvance_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ftestsuite%2Fgfortran.dg%2Fadvance_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fadvance_2.f90?ref=8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+subroutine foo\n+  character(len=5) :: a\n+  a = \"yes\"\n+  write(*, '(a)', advance=a) \"hello world\"\n+end subroutine foo"}, {"sha": "49b17556f69d575a58e3a2526364a73ecce05e2a", "filename": "gcc/testsuite/gfortran.dg/advance_3.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ftestsuite%2Fgfortran.dg%2Fadvance_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1/gcc%2Ftestsuite%2Fgfortran.dg%2Fadvance_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fadvance_3.f90?ref=8370d5bcb1e3a2fd2445bbc8ee7db50d199e3ad1", "patch": "@@ -0,0 +1,8 @@\n+subroutine foo\n+  real :: a\n+  a = 1\n+  write(*, '(a)', advance=a) \"hello world\" ! { dg-error \"must be of type CHARACTER\" }\n+end subroutine foo\n+subroutine bar\n+  write(*, '(a)', advance=5.) \"hello world\" ! { dg-error \"must be of type CHARACTER\" }\n+end subroutine bar"}]}