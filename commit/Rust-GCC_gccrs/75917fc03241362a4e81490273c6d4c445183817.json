{"sha": "75917fc03241362a4e81490273c6d4c445183817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU5MTdmYzAzMjQxMzYyYTRlODE0OTAyNzNjNmQ0YzQ0NTE4MzgxNw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-10-06T22:13:14Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-10-06T22:13:14Z"}, "message": "re PR debug/17787 (Ada does not bootstrap on darwin because of -feliminate-unused-debug-symbols)\n\n2004-10-06  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR debug/17787\n        * dbxout.c (dbxout_symbol): Really handle RECORD, UNION, and\n        ENUMs specially instead of just saying we do.\n\nFrom-SVN: r88629", "tree": {"sha": "5d49f17a7bd894d6f92a2e19619e6e868e319718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d49f17a7bd894d6f92a2e19619e6e868e319718"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75917fc03241362a4e81490273c6d4c445183817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75917fc03241362a4e81490273c6d4c445183817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75917fc03241362a4e81490273c6d4c445183817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75917fc03241362a4e81490273c6d4c445183817/comments", "author": null, "committer": null, "parents": [{"sha": "e3f78d9b1161f68289db5b09304598bb0ee7d441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f78d9b1161f68289db5b09304598bb0ee7d441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f78d9b1161f68289db5b09304598bb0ee7d441"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "6ed9e990ca5d6061a050d105c12b151140669c31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75917fc03241362a4e81490273c6d4c445183817/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75917fc03241362a4e81490273c6d4c445183817/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75917fc03241362a4e81490273c6d4c445183817", "patch": "@@ -1,3 +1,9 @@\n+2004-10-06  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR debug/17787\n+\t* dbxout.c (dbxout_symbol): Really handle RECORD, UNION, and\n+\tENUMs specially instead of just saying we do.\n+\n 2004-10-06  Eric Christopher  <echristo@redhat.com>\n \n \t* dwarf2.h: Sync with include/elf/dwarf2.h"}, {"sha": "bab43cb5f3417d964a5169d34fbd845f88397905", "filename": "gcc/dbxout.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75917fc03241362a4e81490273c6d4c445183817/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75917fc03241362a4e81490273c6d4c445183817/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=75917fc03241362a4e81490273c6d4c445183817", "patch": "@@ -2182,22 +2182,24 @@ dbxout_symbol (tree decl, int local ATTRIBUTE_UNUSED)\n          a different name.  In that case we also want to output\n          that.  */\n \n-      if ((TREE_CODE (t) == RECORD_TYPE\n+      if (TREE_CODE (t) == RECORD_TYPE\n            || TREE_CODE (t) == UNION_TYPE\n            || TREE_CODE (t) == QUAL_UNION_TYPE\n            || TREE_CODE (t) == ENUMERAL_TYPE)\n-          && TYPE_STUB_DECL (t)\n-          && TYPE_STUB_DECL (t) != decl\n-          && DECL_P (TYPE_STUB_DECL (t))\n-          && ! DECL_IGNORED_P (TYPE_STUB_DECL (t)))\n         {\n-          debug_queue_symbol (TYPE_STUB_DECL (t));\n-          if (TYPE_NAME (t)\n-              && TYPE_NAME (t) != TYPE_STUB_DECL (t)\n-              && TYPE_NAME (t) != decl\n-              && DECL_P (TYPE_NAME (t)))\n-            debug_queue_symbol (TYPE_NAME (t));\n-        }\n+\t    if (TYPE_STUB_DECL (t)\n+\t\t&& TYPE_STUB_DECL (t) != decl\n+\t\t&& DECL_P (TYPE_STUB_DECL (t))\n+\t\t&& ! DECL_IGNORED_P (TYPE_STUB_DECL (t)))\n+\t    {\n+\t      debug_queue_symbol (TYPE_STUB_DECL (t));\n+\t      if (TYPE_NAME (t)\n+\t\t  && TYPE_NAME (t) != TYPE_STUB_DECL (t)\n+\t\t  && TYPE_NAME (t) != decl\n+\t\t  && DECL_P (TYPE_NAME (t)))\n+\t\tdebug_queue_symbol (TYPE_NAME (t));\n+\t    }\n+\t}\n       else if (TYPE_NAME (t)\n \t       && TYPE_NAME (t) != decl\n \t       && DECL_P (TYPE_NAME (t)))"}]}