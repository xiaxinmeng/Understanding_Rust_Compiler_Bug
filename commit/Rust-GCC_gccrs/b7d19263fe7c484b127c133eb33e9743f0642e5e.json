{"sha": "b7d19263fe7c484b127c133eb33e9743f0642e5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkMTkyNjNmZTdjNDg0YjEyN2MxMzNlYjMzZTk3NDNmMDY0MmU1ZQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2014-09-03T08:06:09Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2014-09-03T08:06:09Z"}, "message": "re PR bootstrap/61078 (ESA mode bootstrap failure since r209897)\n\n2014-09-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\tPR target/61078\n\t* config/s390/s390.md (\"*negdi2_31\"): Add s390_split_ok_p check\n\tand add a second splitter to handle the remaining cases.\n\n2014-09-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\tPR target/61078\n\t* gcc.target/s390/pr61078.c: New testcase.\n\nFrom-SVN: r214850", "tree": {"sha": "0ec221d20517879803b72379a28760cd84f31bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ec221d20517879803b72379a28760cd84f31bb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7d19263fe7c484b127c133eb33e9743f0642e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d19263fe7c484b127c133eb33e9743f0642e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d19263fe7c484b127c133eb33e9743f0642e5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d19263fe7c484b127c133eb33e9743f0642e5e/comments", "author": null, "committer": null, "parents": [{"sha": "64a08b7f989fa4a1bace97187e5665ebeb6ea586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a08b7f989fa4a1bace97187e5665ebeb6ea586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a08b7f989fa4a1bace97187e5665ebeb6ea586"}], "stats": {"total": 91, "additions": 88, "deletions": 3}, "files": [{"sha": "448eec8bdfb75e9c624612153528830f9bcb6f6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7d19263fe7c484b127c133eb33e9743f0642e5e", "patch": "@@ -1,3 +1,9 @@\n+2014-09-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\tPR target/61078\n+\t* config/s390/s390.md (\"*negdi2_31\"): Add s390_split_ok_p check\n+\tand add a second splitter to handle the remaining cases.\n+\n 2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.h (PIC_OFFSET_TABLE_REGNUM): Define."}, {"sha": "bcfe8f94f7a14e474dd0b4e066583d2d078c1a35", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 51, "deletions": 3, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=b7d19263fe7c484b127c133eb33e9743f0642e5e", "patch": "@@ -7366,13 +7366,27 @@\n   [(set_attr \"op_type\"  \"RR<E>\")\n    (set_attr \"z10prop\" \"z10_super_c_E1\")])\n \n-(define_insn_and_split \"*negdi2_31\"\n+(define_insn \"*negdi2_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (neg:DI (match_operand:DI 1 \"register_operand\" \"d\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_ZARCH\"\n-  \"#\"\n-  \"&& reload_completed\"\n+  \"#\")\n+\n+; Split a DImode NEG on 31bit into 2 SImode NEGs\n+\n+; Doing the twos complement separately on the SImode parts does an\n+; unwanted +1 on the high part which needs to be subtracted afterwards\n+; ... unless the +1 on the low part created an overflow.\n+\n+(define_split\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+        (neg:DI (match_operand:DI 1 \"register_operand\" \"\")))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"!TARGET_ZARCH\n+   && (REGNO (operands[0]) == REGNO (operands[1])\n+      || s390_split_ok_p (operands[0], operands[1], DImode, 0))\n+   && reload_completed\"\n   [(parallel\n     [(set (match_dup 2) (neg:SI (match_dup 3)))\n      (clobber (reg:CC CC_REGNUM))])\n@@ -7394,6 +7408,40 @@\n    operands[5] = operand_subword (operands[1], 1, 0, DImode);\n    operands[6] = gen_label_rtx ();\")\n \n+; Like above but first make a copy of the low part of the src operand\n+; since it might overlap with the high part of the destination.\n+\n+(define_split\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+        (neg:DI (match_operand:DI 1 \"register_operand\" \"\")))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"!TARGET_ZARCH\n+   && s390_split_ok_p (operands[0], operands[1], DImode, 1)\n+   && reload_completed\"\n+  [; Make a backup of op5 first\n+   (set (match_dup 4) (match_dup 5))\n+   ; Setting op2 here might clobber op5\n+   (parallel\n+    [(set (match_dup 2) (neg:SI (match_dup 3)))\n+     (clobber (reg:CC CC_REGNUM))])\n+   (parallel\n+    [(set (reg:CCAP CC_REGNUM)\n+          (compare:CCAP (neg:SI (match_dup 4)) (const_int 0)))\n+     (set (match_dup 4) (neg:SI (match_dup 4)))])\n+   (set (pc)\n+        (if_then_else (ne (reg:CCAP CC_REGNUM) (const_int 0))\n+                      (pc)\n+                      (label_ref (match_dup 6))))\n+   (parallel\n+    [(set (match_dup 2) (plus:SI (match_dup 2) (const_int -1)))\n+     (clobber (reg:CC CC_REGNUM))])\n+   (match_dup 6)]\n+  \"operands[2] = operand_subword (operands[0], 0, 0, DImode);\n+   operands[3] = operand_subword (operands[1], 0, 0, DImode);\n+   operands[4] = operand_subword (operands[0], 1, 0, DImode);\n+   operands[5] = operand_subword (operands[1], 1, 0, DImode);\n+   operands[6] = gen_label_rtx ();\")\n+\n ;\n ; neg(df|sf)2 instruction pattern(s).\n ;"}, {"sha": "63105ca7b8ee3611e98ba7985b5ee577e963128d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7d19263fe7c484b127c133eb33e9743f0642e5e", "patch": "@@ -1,3 +1,8 @@\n+2014-09-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\tPR target/61078\n+\t* gcc.target/s390/pr61078.c: New testcase.\n+\n 2014-09-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/20111227-2.c: Compile only for x86 targets."}, {"sha": "2f95eba8e9e5ab54c9b44e08974018a62fb70d43", "filename": "gcc/testsuite/gcc.target/s390/pr61078.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr61078.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d19263fe7c484b127c133eb33e9743f0642e5e/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr61078.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr61078.c?ref=b7d19263fe7c484b127c133eb33e9743f0642e5e", "patch": "@@ -0,0 +1,26 @@\n+/* This testcase is extracted from s390_emit_prologue.  The negation\n+   of a 64bit value got split incorrectly on 31 bit.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mesa -m31\" } */\n+\n+extern void abort (void);\n+\n+long long frame_size = 42;\n+\n+int __attribute__((noinline))\n+foo  (int a __attribute__((unused)), long long b)\n+{\n+  return (int)b;\n+}\n+\n+int\n+main ()\n+{\n+    if (frame_size > 0)\n+    {\n+      if (foo (0, -frame_size) != -42)\n+\tabort ();\n+    }\n+    return 0;\n+}"}]}