{"sha": "8354bb0ebe5be8427c3795d0a32ad0564bf71489", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1NGJiMGViZTViZTg0MjdjMzc5NWQwYTMyYWQwNTY0YmY3MTQ4OQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2019-12-17T13:01:36Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2019-12-17T13:01:36Z"}, "message": "Add pointer to PR92772\n\n2019-12-17  Andrew Stubbs  <ams@codesourcery.com>\n\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Mention pr92772\n\tin the comments.\n\nFrom-SVN: r279460", "tree": {"sha": "0cca6c23d69ed1ffb2d54c0cd1df14d531f982a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cca6c23d69ed1ffb2d54c0cd1df14d531f982a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8354bb0ebe5be8427c3795d0a32ad0564bf71489", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8354bb0ebe5be8427c3795d0a32ad0564bf71489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8354bb0ebe5be8427c3795d0a32ad0564bf71489", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8354bb0ebe5be8427c3795d0a32ad0564bf71489/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b92d1124e15db0186e616a7c9d4f8e69d92aa015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92d1124e15db0186e616a7c9d4f8e69d92aa015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b92d1124e15db0186e616a7c9d4f8e69d92aa015"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "143fd48e07a168a9fcdd217b4dd8a22b8865e326", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8354bb0ebe5be8427c3795d0a32ad0564bf71489/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8354bb0ebe5be8427c3795d0a32ad0564bf71489/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8354bb0ebe5be8427c3795d0a32ad0564bf71489", "patch": "@@ -1,3 +1,8 @@\n+2019-12-17  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Mention pr92772\n+\tin the comments.\n+\n 2019-12-17  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn-valu.md (extract_last_<mode>): New expander."}, {"sha": "68699f2d814c3c12685a7b52d1c8882078a79dbd", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8354bb0ebe5be8427c3795d0a32ad0564bf71489/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8354bb0ebe5be8427c3795d0a32ad0564bf71489/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=8354bb0ebe5be8427c3795d0a32ad0564bf71489", "patch": "@@ -4534,7 +4534,10 @@ vect_create_epilog_for_reduction (stmt_vec_info stmt_info,\n      containing the last time the condition passed for that vector lane.\n      The first match will be a 1 to allow 0 to be used for non-matching\n      indexes.  If there are no matches at all then the vector will be all\n-     zeroes.  */\n+     zeroes.\n+   \n+     PR92772: This algorithm is broken for architectures that support\n+     masked vectors, but do not provide fold_extract_last.  */\n   if (STMT_VINFO_REDUC_TYPE (reduc_info) == COND_REDUCTION)\n     {\n       auto_vec<std::pair<tree, bool>, 2> ccompares;"}]}