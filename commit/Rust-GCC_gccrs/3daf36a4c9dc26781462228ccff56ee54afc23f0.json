{"sha": "3daf36a4c9dc26781462228ccff56ee54afc23f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RhZjM2YTRjOWRjMjY3ODE0NjIyMjhjY2ZmNTZlZTU0YWZjMjNmMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-02-13T22:25:55Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-02-13T22:25:55Z"}, "message": "Use ASM_GENERATE_INTERNAL_LABEL rather than assuming what it does\n\nFrom-SVN: r6548", "tree": {"sha": "65123e95e836fe478bd95bfbf739d108d6a33b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65123e95e836fe478bd95bfbf739d108d6a33b85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3daf36a4c9dc26781462228ccff56ee54afc23f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3daf36a4c9dc26781462228ccff56ee54afc23f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3daf36a4c9dc26781462228ccff56ee54afc23f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3daf36a4c9dc26781462228ccff56ee54afc23f0/comments", "author": null, "committer": null, "parents": [{"sha": "266f3aacd548ed854b16123f2d9a1e59c5915397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266f3aacd548ed854b16123f2d9a1e59c5915397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266f3aacd548ed854b16123f2d9a1e59c5915397"}], "stats": {"total": 62, "additions": 52, "deletions": 10}, "files": [{"sha": "e75f747c473c42e230f613636cdc2b1f1b10b023", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3daf36a4c9dc26781462228ccff56ee54afc23f0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3daf36a4c9dc26781462228ccff56ee54afc23f0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3daf36a4c9dc26781462228ccff56ee54afc23f0", "patch": "@@ -1490,7 +1490,14 @@ output_prolog (file, size)\n   /* If TARGET_MINIMAL_TOC, and the constant pool is needed, then load the\n      TOC_TABLE address into register 30.  */\n   if (TARGET_MINIMAL_TOC && get_pool_size () != 0)\n-    asm_fprintf (file, \"\\t{l|lwz} 30,LCTOC..0(2)\\n\");\n+    {\n+      char buf[100];\n+\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 0);\n+      asm_fprintf (file, \"\\t{l|lwz} 30,\");\n+      assemble_name (file, buf);\n+      asm_fprintf (file, \"(2)\\n\");\n+    }\n }\n \n /* Write function epilogue.  */\n@@ -1586,7 +1593,7 @@ output_epilog (file, size)\n        from the function start.  */\n     if (*fname == '*')\n       ++fname;\n-    fprintf (file, \"LT..\");\n+    ASM_OUTPUT_INTERNAL_LABEL_PREFIX (file, \"LT\");\n     ASM_OUTPUT_LABEL (file, fname);\n \n     /* The .tbtab pseudo-op can only be used for the first eight\n@@ -1720,7 +1727,8 @@ output_epilog (file, size)\n       fprintf (file, \"\\t.long %d\\n\", parm_info);\n \n     /* Offset from start of code to tb table.  */\n-    fprintf (file, \"\\t.long LT..\");\n+    fprintf (file, \"\\t.long \");\n+    ASM_OUTPUT_INTERNAL_LABEL_PREFIX (file, \"LT\");\n     RS6000_OUTPUT_BASENAME (file, fname);\n     fprintf (file, \"-.\");\n     RS6000_OUTPUT_BASENAME (file, fname);\n@@ -1965,14 +1973,26 @@ output_function_profiler (file, labelno)\n   /* The last used parameter register.  */\n   int last_parm_reg;\n   int i, j;\n+  char buf[100];\n \n   /* Set up a TOC entry for the profiler label.  */\n   toc_section ();\n+  ASM_OUTPUT_INTERNAL_LABEL (file, \"LPC\", labelno);\n+  ASM_GENERATE_INTERNAL_LABEL (buf, \"LP\", labelno);\n   if (TARGET_MINIMAL_TOC)\n-    fprintf (file, \"LPC..%d:\\n\\t.long LP..%d\\n\", labelno, labelno);\n+    {\n+      fprintf (file, \"\\t.long \");\n+      assemble_name (file, buf);\n+      fprintf (file, \"\\n\");\n+    }\n   else\n-    fprintf (file, \"LPC..%d:\\n\\t.tc\\tLP..%d[TC],LP..%d\\n\",\n-\t     labelno, labelno, labelno);\n+    {\n+      fprintf (file, \"\\t.tc\\t\");\n+      assemble_name (file, buf);\n+      fprintf (file, \"[TC],\");\n+      assemble_name (file, buf);\n+      fprintf (file, \"\\n\");\n+    }\n   text_section ();\n \n   /* Figure out last used parameter register.  The proper thing to do is\n@@ -1992,7 +2012,10 @@ output_function_profiler (file, labelno)\n \n   /* Load location address into r3, and call mcount.  */\n \n-  fprintf (file, \"\\tl 3,LPC..%d(2)\\n\\tbl .mcount\\n\", labelno);\n+  ASM_GENERATE_INTERNAL_LABEL (buf, \"LPC\", labelno);\n+  fprintf (file, \"\\tl 3,\");\n+  assemble_name (file, buf);\n+  fprintf (file, \"(2)\\n\\tbl .mcount\\n\");\n \n   /* Restore parameter registers.  */\n "}, {"sha": "ebfe0c1794c1f074359c49b15a0e1279f4a2f774", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3daf36a4c9dc26781462228ccff56ee54afc23f0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3daf36a4c9dc26781462228ccff56ee54afc23f0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=3daf36a4c9dc26781462228ccff56ee54afc23f0", "patch": "@@ -1869,6 +1869,12 @@ toc_section ()\t\t\t\t\t\t\\\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n   fprintf (FILE, \"%s..%d:\\n\", PREFIX, NUM)\n \n+/* This is how to output an internal label prefix.  rs6000.c uses this\n+   when generating traceback tables.  */\n+\n+#define ASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n+  fprintf (FILE, \"%s..\", PREFIX)\n+\n /* This is how to output a label for a jump table.  Arguments are the same as\n    for ASM_OUTPUT_INTERNAL_LABEL, except the insn for the jump table is\n    passed. */\n@@ -1971,13 +1977,26 @@ toc_section ()\t\t\t\t\t\t\\\n    (RS/6000 does not use such vectors, but we must define this macro\n    anyway.)   */\n \n-#define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)  \\\n-  fprintf (FILE, \"\\t.long L..%d\\n\", VALUE)\n+#define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)\t\t\\\n+  do { char buf[100];\t\t\t\t\t\\\n+       fprintf (FILE, \"\\t.long \");\t\t\t\\\n+       ASM_GENERATE_INTERNAL_LABEL (buf, \"L\", VALUE);\t\\\n+       assemble_name (FILE, buf);\t\t\t\\\n+       fprintf (FILE, \"\\n\");\t\t\t\t\\\n+     } while (0)\n \n /* This is how to output an element of a case-vector that is relative.  */\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL)\t\\\n-  fprintf (FILE, \"\\t.long L..%d-L..%d\\n\", VALUE, REL)\n+  do { char buf[100];\t\t\t\t\t\\\n+       fprintf (FILE, \"\\t.long \");\t\t\t\\\n+       ASM_GENERATE_INTERNAL_LABEL (buf, \"L\", VALUE);\t\\\n+       assemble_name (FILE, buf);\t\t\t\\\n+       fprintf (FILE, \"-\");\t\t\t\t\\\n+       ASM_GENERATE_INTERNAL_LABEL (buf, \"L\", REL);\t\\\n+       assemble_name (FILE, buf);\t\t\t\\\n+       fprintf (FILE, \"\\n\");\t\t\t\t\\\n+     } while (0)\n \n /* This is how to output an assembler line\n    that says to advance the location counter"}]}