{"sha": "4dc6437183aec5439b88b076315ad8f31794d24b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRjNjQzNzE4M2FlYzU0MzliODhiMDc2MzE1YWQ4ZjMxNzk0ZDI0Yg==", "commit": {"author": {"name": "Thomas K\u00f6nig", "email": "tkoenig@gcc.gnu.org", "date": "2020-04-19T10:56:32Z"}, "committer": {"name": "Thomas K\u00f6nig", "email": "tkoenig@gcc.gnu.org", "date": "2020-04-19T10:56:32Z"}, "message": "Fix PR fortran/93500, ICE on invalid.\n\nReturning &gfc_bad_expr when simplifying bounds after a divisin by zero\nhappened results in the division by zero error actually reaching the user.\n\n2020-04-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/93500\n\t* resolve.c (resolve_operator): If both operands are\n\tNULL, return false.\n\t* simplify.c (simplify_bound): If a division by zero\n\twas seen during bound simplification, free the\n\tcorresponcing expression and return &gfc_bad_expr.\n\n2020-04-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/93500\n\t* arith_divide_3.f90: New test.", "tree": {"sha": "3006375e9d6885f006e2ca79e97a82785525b43b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3006375e9d6885f006e2ca79e97a82785525b43b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dc6437183aec5439b88b076315ad8f31794d24b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc6437183aec5439b88b076315ad8f31794d24b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc6437183aec5439b88b076315ad8f31794d24b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc6437183aec5439b88b076315ad8f31794d24b/comments", "author": null, "committer": null, "parents": [{"sha": "e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1113ffbd619d0568fb3b37e9660d9e0ae7862f5"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "336ce49090eeaa0411642b9fdfba3b0fd342007d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4dc6437183aec5439b88b076315ad8f31794d24b", "patch": "@@ -1,3 +1,12 @@\n+2020-04-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/93500\n+\t* resolve.c (resolve_operator): If both operands are\n+\tNULL, return false.\n+\t* simplify.c (simplify_bound): If a division by zero\n+\twas seen during bound simplification, free the\n+\tcorresponcing expression and return &gfc_bad_expr.\n+\n 2020-04-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/94090"}, {"sha": "fd3b025a84ffb74415c5f4eab9cf1902eaac126a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=4dc6437183aec5439b88b076315ad8f31794d24b", "patch": "@@ -3992,6 +3992,9 @@ resolve_operator (gfc_expr *e)\n \n   op1 = e->value.op.op1;\n   op2 = e->value.op.op2;\n+  if (op1 == NULL && op2 == NULL)\n+    return false;\n+\n   dual_locus_error = false;\n \n   /* op1 and op2 cannot both be BOZ.  */"}, {"sha": "c7a4f77e70b13381c52d1e31220ba054360bf4c5", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=4dc6437183aec5439b88b076315ad8f31794d24b", "patch": "@@ -4251,7 +4251,11 @@ simplify_bound (gfc_expr *array, gfc_expr *dim, gfc_expr *kind, int upper)\n \n \t      for (j = 0; j < d; j++)\n \t\tgfc_free_expr (bounds[j]);\n-\t      return bounds[d];\n+\n+\t      if (gfc_seen_div0)\n+\t\treturn &gfc_bad_expr;\n+\t      else\n+\t\treturn bounds[d];\n \t    }\n \t}\n "}, {"sha": "e8742902d12aee30a80b4352daa88ace1a725f67", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4dc6437183aec5439b88b076315ad8f31794d24b", "patch": "@@ -1,3 +1,8 @@\n+2020-04-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/93500\n+\t* arith_divide_3.f90: New test.\n+\n 2020-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR objc/94637"}, {"sha": "95682dfdda76e566cb03fe2f85c31c32eb8c9fd2", "filename": "gcc/testsuite/gfortran.dg/arith_divide_3.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ftestsuite%2Fgfortran.dg%2Farith_divide_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc6437183aec5439b88b076315ad8f31794d24b/gcc%2Ftestsuite%2Fgfortran.dg%2Farith_divide_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farith_divide_3.f90?ref=4dc6437183aec5439b88b076315ad8f31794d24b", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+! PR 93500 - this used to cause an ICE\n+\n+program p\n+  integer :: a(min(2,0)/0) ! { dg-error \"Division by zero\" }\n+  integer, save :: c[min(2,0)/0,*] ! { dg-error \"Division by zero|must have constant shape\" }\n+  integer :: b = lbound(a) ! { dg-error \"must be an array\" }\n+  print *,lcobound(c)\n+end program p\n+\n+subroutine s\n+  integer :: a(min(2,0)/0)  ! { dg-error \"Division by zero\" }\n+  integer, save :: c[min(2,0)/0,*] ! { dg-error \"Division by zero\" }\n+  integer :: b = lbound(a)\n+  print *,lcobound(c)\n+end subroutine s"}]}