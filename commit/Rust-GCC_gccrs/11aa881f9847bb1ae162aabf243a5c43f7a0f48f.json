{"sha": "11aa881f9847bb1ae162aabf243a5c43f7a0f48f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFhYTg4MWY5ODQ3YmIxYWUxNjJhYWJmMjQzYTVjNDNmN2EwZjQ4Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-11-23T15:48:56Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-11-23T15:48:56Z"}, "message": "PR libstdc++/87308 adjust regex used in std::any pretty printer\n\nThe pretty printer for std::any fails when the contained value is a\nlocally-defined type, because the name in the debuginfo has\ncv-qualifiers and ptr-declarators in different positions. The unexpected\nformat confuses the printer. This makes the printer's regex handle\neither format.\n\nThis isn't a complete fix because looking up the contained type fails\nwhen there are two types with the same name (defined in different local\nscopes). This applies to all closure types defined in a given function,\nas they all appear as \"func()::lambda\" in the debuginfo names.\n\n\tPR libstdc++/87308 (partial)\n\t* python/libstdcxx/v6/printers.py (StdExpAnyPrinter): Adjust regex to\n\twork around PR 88166.\n\t* testsuite/libstdc++-prettyprinters/cxx17.cc: Test std::any\n\tcontaining a local type.\n\nFrom-SVN: r266408", "tree": {"sha": "cd70190832e81d95f74ef9d192edcd719bd012e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd70190832e81d95f74ef9d192edcd719bd012e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11aa881f9847bb1ae162aabf243a5c43f7a0f48f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11aa881f9847bb1ae162aabf243a5c43f7a0f48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11aa881f9847bb1ae162aabf243a5c43f7a0f48f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11aa881f9847bb1ae162aabf243a5c43f7a0f48f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7b94dec4876c161d7e97ad0ce19695aa487b04a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7b94dec4876c161d7e97ad0ce19695aa487b04a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7b94dec4876c161d7e97ad0ce19695aa487b04a"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "2d86cc3efb44da9b2e6d634f5b26a9a5da3bae03", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11aa881f9847bb1ae162aabf243a5c43f7a0f48f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11aa881f9847bb1ae162aabf243a5c43f7a0f48f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=11aa881f9847bb1ae162aabf243a5c43f7a0f48f", "patch": "@@ -1,3 +1,11 @@\n+2018-11-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/87308 (partial)\n+\t* python/libstdcxx/v6/printers.py (StdExpAnyPrinter): Adjust regex to\n+\twork around PR 88166.\n+\t* testsuite/libstdc++-prettyprinters/cxx17.cc: Test std::any\n+\tcontaining a local type.\n+\n 2018-11-22  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR libstdc++/87106"}, {"sha": "28733385dc977330342c1f05a7022439d4b0d215", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11aa881f9847bb1ae162aabf243a5c43f7a0f48f/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11aa881f9847bb1ae162aabf243a5c43f7a0f48f/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=11aa881f9847bb1ae162aabf243a5c43f7a0f48f", "patch": "@@ -1051,7 +1051,7 @@ def __init__ (self, typename, val):\n             func = gdb.block_for_pc(int(mgr.cast(gdb.lookup_type('intptr_t'))))\n             if not func:\n                 raise ValueError(\"Invalid function pointer in %s\" % self.typename)\n-            rx = r\"\"\"({0}::_Manager_\\w+<.*>)::_S_manage\\({0}::_Op, {0} const\\*, {0}::_Arg\\*\\)\"\"\".format(typename)\n+            rx = r\"\"\"({0}::_Manager_\\w+<.*>)::_S_manage\\((enum )?{0}::_Op, (const {0}|{0} const) ?\\*, (union )?{0}::_Arg ?\\*\\)\"\"\".format(typename)\n             m = re.match(rx, func.function.name)\n             if not m:\n                 raise ValueError(\"Unknown manager function in %s\" % self.typename)"}, {"sha": "d3cd77c74db9d1fffe552a7eba3f3765ea8083de", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx17.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11aa881f9847bb1ae162aabf243a5c43f7a0f48f/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11aa881f9847bb1ae162aabf243a5c43f7a0f48f/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx17.cc?ref=11aa881f9847bb1ae162aabf243a5c43f7a0f48f", "patch": "@@ -75,6 +75,9 @@ main()\n // { dg-final { regexp-test as2 {std::any containing const char \\* = {\\[contained value\\] = 0x[[:xdigit:]]+ \"stringiest\"}} } }\n   any am = *om;\n // { dg-final { note-test am {std::any containing std::map with 3 elements = {[1] = 2, [3] = 4, [5] = 6}} } }\n+  struct local_type { int i = 99; };\n+  any al = local_type{};\n+// { dg-final { note-test al {std::any containing local_type = {[contained value] = {i = 99}}} } }\n \n   struct S { operator int() { throw 42; }};\n   variant<float, int, string_view> v0;"}]}