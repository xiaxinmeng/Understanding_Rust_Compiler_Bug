{"sha": "a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkMjU0NTNmYTg1ZjQxM2E3YjFlNjFkOTg5YTkwYTMyYjZmN2QwOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-10-12T16:29:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-10-12T16:29:35Z"}, "message": "re PR rtl-optimization/23324 (unsigned bitfield in struct not accessed correctly at -O2 and above)\n\n        PR rtl-opt/23324\n        * cfgexpand.c (add_alias_set_conflicts): Use objects_must_conflict_p.\n\nFrom-SVN: r105306", "tree": {"sha": "b8ef13cc9f00276ccbe3c87c574a81b60275ae03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8ef13cc9f00276ccbe3c87c574a81b60275ae03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d25453fa85f413a7b1e61d989a90a32b6f7d09/comments", "author": null, "committer": null, "parents": [{"sha": "687d71b35f17d75284f39280d2ddd66a98c9b340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687d71b35f17d75284f39280d2ddd66a98c9b340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/687d71b35f17d75284f39280d2ddd66a98c9b340"}], "stats": {"total": 148, "additions": 143, "deletions": 5}, "files": [{"sha": "d66f28eb357f1d2081c120decba841c560908acd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d25453fa85f413a7b1e61d989a90a32b6f7d09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d25453fa85f413a7b1e61d989a90a32b6f7d09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "patch": "@@ -1,3 +1,8 @@\n+2005-10-12  Richard Henderson  <rth@redhat.com>\n+\n+\tPR rtl-opt/23324\n+\t* cfgexpand.c (add_alias_set_conflicts): Use objects_must_conflict_p.\n+\n 2005-10-12  Richard Guenther  <rguenther@suse.de>\n \n \t* Makefile.in (CGRAPH_H): Depend on $(TREE_H)."}, {"sha": "69546bf13503b5a918ab9b7b1e2a01be16520fb0", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d25453fa85f413a7b1e61d989a90a32b6f7d09/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d25453fa85f413a7b1e61d989a90a32b6f7d09/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "patch": "@@ -285,14 +285,14 @@ add_alias_set_conflicts (void)\n \n   for (i = 0; i < n; ++i)\n     {\n-      bool aggr_i = AGGREGATE_TYPE_P (TREE_TYPE (stack_vars[i].decl));\n-      HOST_WIDE_INT set_i = get_alias_set (stack_vars[i].decl);\n+      tree type_i = TREE_TYPE (stack_vars[i].decl);\n+      bool aggr_i = AGGREGATE_TYPE_P (type_i);\n \n       for (j = 0; j < i; ++j)\n \t{\n-\t  bool aggr_j = AGGREGATE_TYPE_P (TREE_TYPE (stack_vars[j].decl));\n-\t  HOST_WIDE_INT set_j = get_alias_set (stack_vars[j].decl);\n-\t  if (aggr_i != aggr_j || !alias_sets_conflict_p (set_i, set_j))\n+\t  tree type_j = TREE_TYPE (stack_vars[j].decl);\n+\t  bool aggr_j = AGGREGATE_TYPE_P (type_j);\n+\t  if (aggr_i != aggr_j || !objects_must_conflict_p (type_i, type_j))\n \t    add_stack_var_conflict (i, j);\n \t}\n     }"}, {"sha": "c5f88f7de609734bc258a3b1f8ebccc7e064fae9", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23324.c", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d25453fa85f413a7b1e61d989a90a32b6f7d09/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23324.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d25453fa85f413a7b1e61d989a90a32b6f7d09/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23324.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23324.c?ref=a4d25453fa85f413a7b1e61d989a90a32b6f7d09", "patch": "@@ -0,0 +1,133 @@\n+extern void abort (void);\n+#define A(x) if (!(x)) abort ()\n+\n+static union at6 {} vv6 = {};\n+static struct et6\n+{\n+  struct bt6\n+  {\n+    signed av6:6;\n+    signed bv6:7;\n+    signed cv6:6;\n+    signed dv6:5;\n+    unsigned char ev6;\n+    unsigned int fv6;\n+    long int gv6;\n+  } mv6;\n+  unsigned long int nv6;\n+  signed ov6:12;\n+  signed pv6:3;\n+  signed qv6:2;\n+  signed rv6:10;\n+  union ct6 { long int hv6; float iv6; float jv6; } sv6;\n+  int *tv6;\n+  union dt6 { double kv6; float lv6; } uv6;\n+} wv6 = {\n+  { 8, 9, 2, 4, '\\x10', 67426805U, 1047191860L },\n+  1366022414UL, 858, 1, 1, 305,\n+  { 1069379046L }, (int *) 358273621U,\n+  { 3318.041978 }\n+};\n+static double xv6 = 19239.101269;\n+static long long int yv6 = 1207859169L;\n+static int zv6 = 660195606;\n+\n+static union at6\n+callee_af6 (struct et6 ap6, double bp6, long long int cp6, int dp6)\n+{\n+  A (wv6.mv6.av6 == ap6.mv6.av6);\n+  A (wv6.mv6.bv6 == ap6.mv6.bv6);\n+  A (wv6.mv6.cv6 == ap6.mv6.cv6);\n+  A (wv6.mv6.dv6 == ap6.mv6.dv6);\n+  A (wv6.mv6.ev6 == ap6.mv6.ev6);\n+  A (wv6.mv6.fv6 == ap6.mv6.fv6);\n+  A (wv6.mv6.gv6 == ap6.mv6.gv6);\n+  A (wv6.nv6 == ap6.nv6);\n+  A (wv6.ov6 == ap6.ov6);\n+  A (wv6.pv6 == ap6.pv6);\n+  A (wv6.qv6 == ap6.qv6);\n+  A (wv6.rv6 == ap6.rv6);\n+  A (wv6.sv6.hv6 == ap6.sv6.hv6);\n+  A (wv6.tv6 == ap6.tv6);\n+  A (wv6.uv6.kv6 == ap6.uv6.kv6);\n+  A (xv6 == bp6);\n+  A (yv6 == cp6);\n+  A (zv6 == dp6);\n+  return vv6;\n+}\n+\n+static void\n+caller_bf6 (void)\n+{\n+  union at6 bav6;\n+  bav6 = callee_af6 (wv6, xv6, yv6, zv6);\n+}\n+\n+static unsigned char uv7 = '\\x46';\n+static float vv7 = 96636.982442;\n+static double wv7 = 28450.711801;\n+static union ct7 {} xv7 = {};\n+static struct et7\n+{\n+  struct dt7\n+  {\n+    float iv7;\n+    unsigned short int jv7;\n+  } kv7;\n+  float lv7[0];\n+  signed mv7:9;\n+  short int nv7;\n+  double ov7;\n+  float pv7;\n+} yv7 = {\n+  { 30135.996213, 42435 },\n+  {}, 170, 22116, 26479.628148, 4082.960685\n+};\n+static union ft7\n+{\n+  float qv7;\n+  float *rv7;\n+  unsigned int *sv7;\n+} zv7 = { 5042.227886 };\n+static int bav7 = 1345451862;\n+static struct gt7 { double tv7; } bbv7 = { 47875.491954 };\n+static long int bcv7[1] = { 1732133482L };\n+static long long int bdv7 = 381678602L;\n+\n+static unsigned char\n+callee_af7 (float ap7, double bp7, union ct7 cp7, struct et7 dp7,\n+            union ft7 ep7, int fp7, struct gt7 gp7, long int hp7[1],\n+            long long int ip7)\n+{\n+  A (vv7 == ap7);\n+  A (wv7 == bp7);\n+  A (yv7.kv7.iv7 == dp7.kv7.iv7);\n+  A (yv7.kv7.jv7 == dp7.kv7.jv7);\n+  A (yv7.mv7 == dp7.mv7);\n+  A (yv7.nv7 == dp7.nv7);\n+  A (yv7.ov7 == dp7.ov7);\n+  A (yv7.pv7 == dp7.pv7);\n+  A (zv7.qv7 == ep7.qv7);\n+  A (bav7 == fp7);\n+  A (bbv7.tv7 == gp7.tv7);\n+  A (bcv7[0] == hp7[0]);\n+  A (bdv7 == ip7);\n+  return uv7;\n+}\n+\n+static void\n+caller_bf7 (void)\n+{\n+  unsigned char bev7;\n+\n+  bev7 = callee_af7 (vv7, wv7, xv7, yv7, zv7, bav7, bbv7, bcv7, bdv7);\n+  A (uv7 == bev7);\n+}\n+\n+int\n+main ()\n+{\n+  caller_bf6 ();\n+  caller_bf7 ();\n+  return 0;\n+}"}]}