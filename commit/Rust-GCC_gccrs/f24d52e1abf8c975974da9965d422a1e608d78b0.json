{"sha": "f24d52e1abf8c975974da9965d422a1e608d78b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI0ZDUyZTFhYmY4Yzk3NTk3NGRhOTk2NWQ0MjJhMWU2MDhkNzhiMA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-04-13T11:31:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-13T11:31:35Z"}, "message": "pa.c: Use a register name, not a raw immediate in \"bv\" instructions.\n\n        * pa.c: Use a register name, not a raw immediate in \"bv\" instructions.\n        * pa.md, pa.h, ee.asm, ee_fp.asm, lib2funcs.asm: Likewise.\n\nFrom-SVN: r26403", "tree": {"sha": "98b373154d013bf7e8b534281375bebc1efc3bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98b373154d013bf7e8b534281375bebc1efc3bed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f24d52e1abf8c975974da9965d422a1e608d78b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24d52e1abf8c975974da9965d422a1e608d78b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f24d52e1abf8c975974da9965d422a1e608d78b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24d52e1abf8c975974da9965d422a1e608d78b0/comments", "author": null, "committer": null, "parents": [{"sha": "4ac19b2c16aa5f1324d53a0a70fd19f709b20d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac19b2c16aa5f1324d53a0a70fd19f709b20d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac19b2c16aa5f1324d53a0a70fd19f709b20d05"}], "stats": {"total": 66, "additions": 35, "deletions": 31}, "files": [{"sha": "13d98a708cfaf01ef0640aefe1a926db205c9d49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f24d52e1abf8c975974da9965d422a1e608d78b0", "patch": "@@ -10,6 +10,9 @@ Tue Apr 13 05:04:59 1999  Richard Earnshaw (rearnsha@arm.com)\n \n Tue Apr 13 02:11:11 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* pa.c: Use a register name, not a raw immediate in \"bv\" instructions.\n+\t* pa.md, pa.h, ee.asm, ee_fp.asm, lib2funcs.asm: Likewise.\n+\n \t* pa.c: Remove space register specification in memory addresses,\n \texcept where it is actually needed.\n \t* pa.md, pa.h, ee.asm, ee_fp.asm, lib2funcs.asm: Likewise."}, {"sha": "f707aa43455ac49441a2bdbf557b9af0c5624187", "filename": "gcc/config/pa/ee.asm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fee.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fee.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fee.asm?ref=f24d52e1abf8c975974da9965d422a1e608d78b0", "patch": "@@ -150,7 +150,7 @@ L$0000\n \tnop\n L$0001\n \t; Return\n-\tbv,n 0(%r31)\n+\tbv,n %r0(%r31)\n \t.EXIT\n \t.PROCEND\n \n@@ -255,7 +255,7 @@ L$0004\n \tnop\n L$0005\n \t; Return and deallocate our frame.\n-\tbv 0(%r31)\n+\tbv %r0(%r31)\n \tsub %r30,%r21,%r30\n \t.EXIT\n \t.PROCEND"}, {"sha": "ad08acb686b6fa97cf976007b7888a8fc057955a", "filename": "gcc/config/pa/ee_fp.asm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fee_fp.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fee_fp.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fee_fp.asm?ref=f24d52e1abf8c975974da9965d422a1e608d78b0", "patch": "@@ -154,7 +154,7 @@ L$0002\n \tnop\n L$0003\n \t; Return, setting up a frame pointer in the delay slot\n-\tbv 0(%r31)\n+\tbv %r0(%r31)\n \tsub %r30,%r21,%r3\n \t.EXIT\n \t.PROCEND\n@@ -266,7 +266,7 @@ L$0006\n \tnop\n L$0007\n \t; Return and deallocate our frame.\n-\tbv 0(%r31)\n+\tbv %r0(%r31)\n \tcopy %r21,%r30\n \t.EXIT\n \t.PROCEND"}, {"sha": "03bb84343417a196bb2ad27452e87e9338b4638b", "filename": "gcc/config/pa/lib1funcs.asm", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Flib1funcs.asm?ref=f24d52e1abf8c975974da9965d422a1e608d78b0", "patch": "@@ -282,12 +282,12 @@ $$divU\n \tds\t\t%r1,divisor,%r1\n \taddc\t\tdividend,dividend,quotient\n \tds\t\t%r1,divisor,%r1\n-\tbv\t\t0(ret)\n+\tbv\t\t%r0(ret)\n \taddc\t\tquotient,quotient,quotient\n L$largedivisor\n \tcomclr,<<\tdividend,divisor,quotient\n \tldi\t\t1,quotient\n-\tbv,n\t\t0(ret)\n+\tbv,n\t\t%r0(ret)\n \t.exit\n \t.procend\n #endif\n@@ -376,12 +376,12 @@ $$remU\n \tds\t\t%r1,divisor,%r1\n \tcomclr,>=\t%r1,%r0,%r0\n \taddl\t\t%r1,divisor,%r1\n-\tbv\t\t0(ret)\n+\tbv\t\t%r0(ret)\n \tcopy\t\t%r1,quotient\n L$largedivisor\n \tsub,>>=\t\tdividend,divisor,quotient\n \tcopy\t\tdividend,quotient\n-\tbv,n\t\t0(ret)\n+\tbv,n\t\t%r0(ret)\n \t.exit\n \t.procend\n #endif\n@@ -479,12 +479,12 @@ $$divI\n \taddl\t\t%r1,divisor,%r1\n \tcomclr,>=\tquotient,%r0,%r0\t; skip of no need to negate\n \tsub\t\t%r0,dividend,dividend\n-\tbv\t\t0(ret)\n+\tbv\t\t%r0(ret)\n \tcopy\t\tdividend,quotient\n L$largedivisor\n \tcomclr,<<\tdividend,divisor,quotient\n \tldi\t\t1,quotient\n-\tbv,n\t\t0(ret)\n+\tbv,n\t\t%r0(ret)\n \t.exit\n \t.procend\n #endif\n@@ -582,12 +582,12 @@ $$remI\n \taddl\t\t%r1,divisor,%r1\n \tcomclr,>=\tquotient,%r0,%r0\t; skip of no need to negate\n \tsub\t\t%r0,%r1,%r1\n-\tbv\t\t0(ret)\n+\tbv\t\t%r0(ret)\n \tcopy\t\t%r1,quotient\n L$largedivisor\n \tsub,>>=\t\tdividend,divisor,quotient\n \tcopy\t\tdividend,quotient\n-\tbv,n\t\t0(ret)\n+\tbv,n\t\t%r0(ret)\n \t.exit\n \t.procend\n #endif\n@@ -630,7 +630,7 @@ $$divU_3\n \tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n \tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n \taddc\t%r29,%r0,%r29\n-\tbv\t0(ret)\n+\tbv\t%r0(ret)\n \textru\t%r29,30,31,result\n \t.exit\n \t.procend\n@@ -674,7 +674,7 @@ $$divU_5\n \tsh2add\t%r29,%r26,%r0\t\t;  r0 = lo(1000 x r) + dividend\n \tshd\t%r1,%r29,30,%r29\t; r29 = hi(1000 x r)\n \taddc\t%r29,%r0,%r29\n-\tbv\t0(ret)\n+\tbv\t%r0(ret)\n \textru\t%r29,29,30,result\n \t.exit\n \t.procend\n@@ -718,7 +718,7 @@ $$divU_6\n \tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n \tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n \taddc\t%r29,%r0,%r29\n-\tbv\t0(ret)\n+\tbv\t%r0(ret)\n \textru\t%r29,29,30,result\n \t.exit\n \t.procend\n@@ -762,7 +762,7 @@ $$divU_9\n \tsh3add\t%r29,%r26,%r0\n \tshd\t%r1,%r29,29,%r29\n \taddc\t%r29,0,%r29\t\t/* 111000111000111000111000111001 */\n-\tbv\t0(ret)\n+\tbv\t%r0(ret)\n \textru\t%r29,30,31,result\n \t.exit\n \t.procend\n@@ -806,7 +806,7 @@ $$divU_10\n \tsh2add\t%r29,%r26,%r0\t\t;  r0 = lo(1000 x r) + dividend\n \tshd\t%r1,%r29,30,%r29\t; r29 = hi(1000 x r)\n \taddc\t%r29,%r0,%r29\n-\tbv\t0(ret)\n+\tbv\t%r0(ret)\n \textru\t%r29,28,29,result\n \t.exit\n \t.procend\n@@ -850,7 +850,7 @@ $$divU_12\n \tsh1add\t%r29,%r26,%r0\t\t;  r0 = lo(10 x r) + dividend\n \tshd\t%r1,%r29,31,%r29\t; r29 = hi(10 x r)\n \taddc\t%r29,%r0,%r29\n-\tbv\t0(ret)\n+\tbv\t%r0(ret)\n \textru\t%r29,28,29,result\n \t.exit\n \t.procend"}, {"sha": "0d7527bd956118dd9eabd88257e54e33435da960", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=f24d52e1abf8c975974da9965d422a1e608d78b0", "patch": "@@ -4580,7 +4580,8 @@ output_cbranch (operands, nullify, length, negated, insn)\n \t  output_asm_insn (\"bl .+8,%%r1\\n\\taddil L'%l0-%l4,%%r1\", xoperands);\n \t  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n \t\t\t\t     CODE_LABEL_NUMBER (xoperands[4]));\n-\t  output_asm_insn (\"ldo R'%l0-%l4(%%r1),%%r1\\n\\tbv 0(%%r1)\", xoperands);\n+\t  output_asm_insn (\"ldo R'%l0-%l4(%%r1),%%r1\\n\\tbv %%r0(%%r1)\",\n+\t\t\t   xoperands);\n \t}\n \n \t/* Now restore the value of %r1 in the delay slot.  We're not\n@@ -5159,7 +5160,7 @@ output_millicode_call (insn, call_dest)\n \t  output_asm_insn (\"blr 0,%%r31\", xoperands);\n \n \t  /* Jump to our target address in %r29.  */\n-\t  output_asm_insn (\"bv,n 0(%%r29)\", xoperands);\n+\t  output_asm_insn (\"bv,n %%r0(%%r29)\", xoperands);\n \n \t  /* Empty delay slot.  Note this insn gets fetched twice and\n \t     executed once.  To be safe we use a nop.  */\n@@ -5184,7 +5185,7 @@ output_millicode_call (insn, call_dest)\n \t  output_asm_insn (\"blr 0,%%r31\", xoperands);\n \n \t  /* Branch to our target which is in %r1.  */\n-\t  output_asm_insn (\"bv,n 0(%%r1)\", xoperands);\n+\t  output_asm_insn (\"bv,n %%r0(%%r1)\", xoperands);\n \n \t  /* Empty delay slot.  Note this insn gets fetched twice and\n \t     executed once.  To be safe we use a nop.  */\n@@ -5417,7 +5418,7 @@ output_call (insn, call_dest)\n \t      output_asm_insn (\"blr 0,%%r31\", xoperands);\n \n \t      /* Branch to our target which is in %r1.  */\n-\t      output_asm_insn (\"bv 0(%%r1)\", xoperands);\n+\t      output_asm_insn (\"bv %%r0(%%r1)\", xoperands);\n \n \t      /* Copy the return address into %r2 also.  */\n \t      output_asm_insn (\"copy %%r31,%%r2\", xoperands);"}, {"sha": "e186516ada4387583a2b112a856dfe83d0e893e1", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=f24d52e1abf8c975974da9965d422a1e608d78b0", "patch": "@@ -2342,7 +2342,7 @@ DTORS_SECTION_FUNCTION\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, BODY, VALUE, REL)  \\\n   if (TARGET_BIG_SWITCH)\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tstw %%r1,-16(%%r30)\\n\\tldw T'L$%04d(%%r19),%%r1\\n\\tbv 0(%%r1)\\n\\tldw -16(%%r30),%%r1\\n\", VALUE);\t\t\t\t\\\n+    fprintf (FILE, \"\\tstw %%r1,-16(%%r30)\\n\\tldw T'L$%04d(%%r19),%%r1\\n\\tbv %%r0(%%r1)\\n\\tldw -16(%%r30),%%r1\\n\", VALUE);\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\tb L$%04d\\n\\tnop\\n\", VALUE)\n "}, {"sha": "6dce773cf217a3451ba56514b3c83dd4125378de", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f24d52e1abf8c975974da9965d422a1e608d78b0/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=f24d52e1abf8c975974da9965d422a1e608d78b0", "patch": "@@ -3975,7 +3975,7 @@\n (define_insn \"return\"\n   [(return)]\n   \"hppa_can_use_return_insn_p ()\"\n-  \"bv%* 0(%%r2)\"\n+  \"bv%* %%r0(%%r2)\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"4\")])\n \n@@ -3985,7 +3985,7 @@\n   [(use (reg:SI 2))\n    (return)]\n   \"\"\n-  \"bv%* 0(%%r2)\"\n+  \"bv%* %%r0(%%r2)\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"4\")])\n \n@@ -4079,7 +4079,7 @@\n       output_asm_insn (\\\"bl .+8,%%r1\\\\n\\\\taddil L'%l0-%l1,%%r1\\\", xoperands);\n       ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n                                  CODE_LABEL_NUMBER (xoperands[1]));\n-      output_asm_insn (\\\"ldo R'%l0-%l1(%%r1),%%r1\\\\n\\\\tbv 0(%%r1)\\\",\n+      output_asm_insn (\\\"ldo R'%l0-%l1(%%r1),%%r1\\\\n\\\\tbv %%r0(%%r1)\\\",\n \t\t       xoperands);\n     }\n   else\n@@ -4276,7 +4276,7 @@\n \n   /* Long millicode call for portable runtime.  */\n   if (get_attr_length (insn) == 20)\n-    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr 0,%%r2\\;bv,n 0(%%r31)\\;nop\\\";\n+    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr 0,%%r2\\;bv,n %%r0(%%r31)\\;nop\\\";\n \n   /* If we're generating PIC code.  */\n   xoperands[0] = operands[0];\n@@ -4287,7 +4287,7 @@\n \t\t\t     CODE_LABEL_NUMBER (xoperands[1]));\n   output_asm_insn (\\\"ldo R%%$$dyncall-%1(%%r1),%%r1\\\", xoperands);\n   output_asm_insn (\\\"blr 0,%%r2\\\", xoperands);\n-  output_asm_insn (\\\"bv,n 0(%%r1)\\\\n\\\\tnop\\\", xoperands);\n+  output_asm_insn (\\\"bv,n %%r0(%%r1)\\\\n\\\\tnop\\\", xoperands);\n   return \\\"\\\";\n }\"\n   [(set_attr \"type\" \"dyncall\")\n@@ -4436,7 +4436,7 @@\n \n   /* Long millicode call for portable runtime.  */\n   if (get_attr_length (insn) == 20)\n-    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr 0,%%r2\\;bv,n 0(%%r31)\\;nop\\\";\n+    return \\\"ldil L%%$$dyncall,%%r31\\;ldo R%%$$dyncall(%%r31),%%r31\\;blr 0,%%r2\\;bv,n %%r0(%%r31)\\;nop\\\";\n \n   /* If we're generating PIC code.  */\n   xoperands[0] = operands[1];\n@@ -4447,7 +4447,7 @@\n \t\t\t     CODE_LABEL_NUMBER (xoperands[1]));\n   output_asm_insn (\\\"ldo R%%$$dyncall-%1(%%r1),%%r1\\\", xoperands);\n   output_asm_insn (\\\"blr 0,%%r2\\\", xoperands);\n-  output_asm_insn (\\\"bv,n 0(%%r1)\\\\n\\\\tnop\\\", xoperands);\n+  output_asm_insn (\\\"bv,n %%r0(%%r1)\\\\n\\\\tnop\\\", xoperands);\n   return \\\"\\\";\n }\"\n   [(set_attr \"type\" \"dyncall\")\n@@ -4548,7 +4548,7 @@\n (define_insn \"indirect_jump\"\n   [(set (pc) (match_operand:SI 0 \"register_operand\" \"r\"))]\n   \"\"\n-  \"bv%* 0(%0)\"\n+  \"bv%* %%r0(%0)\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"4\")])\n "}]}