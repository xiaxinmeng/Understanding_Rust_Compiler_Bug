{"sha": "ea0f1fc8e4414c655d03febbb63536ab9225e250", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEwZjFmYzhlNDQxNGM2NTVkMDNmZWJiYjYzNTM2YWI5MjI1ZTI1MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-23T17:06:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-23T17:06:29Z"}, "message": "[multiple changes]\n\n2014-01-23  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.adb (Register_Opt_Config_Switches): Save SPARK_Mode_Pragma\n\tsetting.\n\n2014-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Is_Potentially_Unevaluated): Predicate only\n\tapplies to expressions that come from source.\n\t* sem_attr.adb (Analyze_Attribute, case 'Old): Improve error\n\tmessage.\n\t(Analyze_Attribute, case 'Loop_Entry): Apply SPARK 2014 legality\n\trule regarding potentially unevaluated expressions, to prefix\n\tof attribute.\n\nFrom-SVN: r206993", "tree": {"sha": "940269d4a068a80cd066a98d66f485dd89bd2769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/940269d4a068a80cd066a98d66f485dd89bd2769"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea0f1fc8e4414c655d03febbb63536ab9225e250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0f1fc8e4414c655d03febbb63536ab9225e250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea0f1fc8e4414c655d03febbb63536ab9225e250", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0f1fc8e4414c655d03febbb63536ab9225e250/comments", "author": null, "committer": null, "parents": [{"sha": "19992053df788e3280ae25dc272a43e8384b8db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19992053df788e3280ae25dc272a43e8384b8db1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19992053df788e3280ae25dc272a43e8384b8db1"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "4b3c2138469de54ced164008d5458d1a717f509e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea0f1fc8e4414c655d03febbb63536ab9225e250", "patch": "@@ -1,3 +1,18 @@\n+2014-01-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.adb (Register_Opt_Config_Switches): Save SPARK_Mode_Pragma\n+\tsetting.\n+\n+2014-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Is_Potentially_Unevaluated): Predicate only\n+\tapplies to expressions that come from source.\n+\t* sem_attr.adb (Analyze_Attribute, case 'Old): Improve error\n+\tmessage.\n+\t(Analyze_Attribute, case 'Loop_Entry): Apply SPARK 2014 legality\n+\trule regarding potentially unevaluated expressions, to prefix\n+\tof attribute.\n+\n 2014-01-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_util.adb (Make_Invqriant_Call): If type of expression is"}, {"sha": "383f5f4bc6c5561958d24616da72368b901204a8", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=ea0f1fc8e4414c655d03febbb63536ab9225e250", "patch": "@@ -64,6 +64,7 @@ package body Opt is\n       Polling_Required_Config               := Polling_Required;\n       Short_Descriptors_Config              := Short_Descriptors;\n       SPARK_Mode_Config                     := SPARK_Mode;\n+      SPARK_Mode_Pragma_Config              := SPARK_Mode_Pragma;\n       Use_VADS_Size_Config                  := Use_VADS_Size;\n \n       --  Reset the indication that Optimize_Alignment was set locally, since"}, {"sha": "fdd1d0c8e779d3553ab93840c656559be11fd7a3", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ea0f1fc8e4414c655d03febbb63536ab9225e250", "patch": "@@ -3994,13 +3994,23 @@ package body Sem_Attr is\n          Check_References_In_Prefix (Loop_Id);\n \n          --  The prefix must denote a static entity if the pragma does not\n-         --  apply to the innermost enclosing loop statement.\n+         --  apply to the innermost enclosing loop statement, or if it appears\n+         --  within a potentially unevaluated epxression.\n \n-         if Present (Enclosing_Loop)\n-           and then Entity (Identifier (Enclosing_Loop)) /= Loop_Id\n-           and then not Is_Entity_Name (P)\n+         if Is_Entity_Name (P)\n+           or else Nkind (Parent (P)) = N_Object_Renaming_Declaration\n          then\n-            Error_Attr_P (\"prefix of attribute % must denote an entity\");\n+            null;\n+\n+         elsif Present (Enclosing_Loop)\n+                 and then Entity (Identifier (Enclosing_Loop)) /= Loop_Id\n+         then\n+            Error_Attr_P (\"prefix of attribute % that applies to \"\n+              & \"outer loop must denote an entity\");\n+\n+         elsif Is_Potentially_Unevaluated (P) then\n+            Error_Attr_P (\"prefix of attribute % that is potentially \"\n+              & \"unevaluated must denote an entity\");\n          end if;\n       end Loop_Entry;\n \n@@ -4525,9 +4535,8 @@ package body Sem_Attr is\n            and then Is_Potentially_Unevaluated (N)\n            and then not Is_Entity_Name (P)\n          then\n-            Error_Msg_N\n-              (\"prefix that is potentially unevaluated must denote an entity\",\n-               N);\n+            Error_Attr_P (\"prefix of attribute % that is potentially \"\n+                 & \"unevaluated must denote an entity\");\n          end if;\n \n          --  The attribute appears within a pre/postcondition, but refers to"}, {"sha": "9a8428d82a30ce06345695a151b50f7192b327ac", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0f1fc8e4414c655d03febbb63536ab9225e250/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ea0f1fc8e4414c655d03febbb63536ab9225e250", "patch": "@@ -10334,7 +10334,13 @@ package body Sem_Util is\n          Expr := Par;\n          Par  := Parent (Par);\n \n-         if Nkind (Par) not in N_Subexpr then\n+         --  If the context is not an expression, or if is the result of\n+         --  expansion of an enclosing construct (such as another attribute)\n+         --  the predicate does not apply.\n+\n+         if Nkind (Par) not in N_Subexpr\n+           or else not Comes_From_Source (Par)\n+         then\n             return False;\n          end if;\n       end loop;"}]}