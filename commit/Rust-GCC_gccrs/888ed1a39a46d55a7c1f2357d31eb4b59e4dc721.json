{"sha": "888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg4ZWQxYTM5YTQ2ZDU1YTdjMWYyMzU3ZDMxZWI0YjU5ZTRkYzcyMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-06-25T11:56:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-06-25T11:56:52Z"}, "message": "predict.c: Include ipa-utils.h\n\n\t* predict.c: Include ipa-utils.h\n\t(tree_bb_level_prediction): Predict recursive calls.\n\t(tree_estimate_probability_bb): Skip inexpensive calls for call\n\tpredictor.\n\t* predict.def (PRED_RECURSIVE_CALL): New.\n\n\t* gcc.dg/predict-10.c: New test.\n\nFrom-SVN: r237780", "tree": {"sha": "412e6f58c87e87e9651ee2208731ac15e90260c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/412e6f58c87e87e9651ee2208731ac15e90260c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/comments", "author": null, "committer": null, "parents": [{"sha": "1527dee9df41b5130f0d767f91bc89f9c990535c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1527dee9df41b5130f0d767f91bc89f9c990535c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1527dee9df41b5130f0d767f91bc89f9c990535c"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "121119cb2105678568f412466f641f9adf507897", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "patch": "@@ -1,3 +1,11 @@\n+2016-06-24  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* predict.c: Include ipa-utils.h\n+\t(tree_bb_level_prediction): Predict recursive calls.\n+\t(tree_estimate_probability_bb): Skip inexpensive calls for call\n+\tpredictor.\n+\t* predict.def (PRED_RECURSIVE_CALL): New.\n+\n 2016-06-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def (BU_FLOAT128_2): New #define."}, {"sha": "cc4302b1b7ea9925734afb52dc895ba8330a2202", "filename": "gcc/predict.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "patch": "@@ -54,6 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-ssa-loop.h\"\n #include \"tree-scalar-evolution.h\"\n+#include \"ipa-utils.h\"\n \n /* Enum with reasons why a predictor is ignored.  */\n \n@@ -2425,6 +2426,9 @@ tree_bb_level_predictions (void)\n \t\t\t\t       DECL_ATTRIBUTES (decl)))\n \t\tpredict_paths_leading_to (bb, PRED_COLD_FUNCTION,\n \t\t\t\t\t  NOT_TAKEN);\n+\t      if (decl && recursive_call_p (current_function_decl, decl))\n+\t\tpredict_paths_leading_to (bb, PRED_RECURSIVE_CALL,\n+\t\t\t\t\t  NOT_TAKEN);\n \t    }\n \t  else if (gimple_code (stmt) == GIMPLE_PREDICT)\n \t    {\n@@ -2539,6 +2543,7 @@ tree_estimate_probability_bb (basic_block bb)\n \t    {\n \t      gimple *stmt = gsi_stmt (bi);\n \t      if (is_gimple_call (stmt)\n+\t\t  && !gimple_inexpensive_call_p (as_a <gcall *>  (stmt))\n \t\t  /* Constant and pure calls are hardly used to signalize\n \t\t     something exceptional.  */\n \t\t  && gimple_has_side_effects (stmt))"}, {"sha": "2f6d6cd4d08822703d60ecead7593939bb4e92dc", "filename": "gcc/predict.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Fpredict.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Fpredict.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.def?ref=888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "patch": "@@ -112,6 +112,9 @@ DEF_PREDICTOR (PRED_TREE_FPOPCODE, \"fp_opcode (on trees)\", HITRATE (90), 0)\n /* Branch guarding call is probably taken.  */\n DEF_PREDICTOR (PRED_CALL, \"call\", HITRATE (67), 0)\n \n+/* Recursive calls are usually not taken or the function will recurse indefinitely.  */\n+DEF_PREDICTOR (PRED_RECURSIVE_CALL, \"recursive call\", HITRATE (75), 0)\n+\n /* Branch causing function to terminate is probably not taken. \n    FIXME: early return currently predicts code:\n    int foo (int a)"}, {"sha": "404b8144fb1146271c620b16b686f09bacb85d95", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "patch": "@@ -1,3 +1,7 @@\n+2016-06-24  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/predict-10.c: New test.\n+\n 2016-06-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/abs128-1.c: New."}, {"sha": "a99819a24c6ede10f904b316d691c92973c8fc48", "filename": "gcc/testsuite/gcc.dg/predict-10.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888ed1a39a46d55a7c1f2357d31eb4b59e4dc721/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpredict-10.c?ref=888ed1a39a46d55a7c1f2357d31eb4b59e4dc721", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n+int\n+ee(int i)\n+{\n+  if (i>2)\n+    return (ee(i-1)+ee(i-2))/2;\n+  else\n+    return i;\n+}\n+/* { dg-final { scan-tree-dump-times \"recursive call\" 1 \"profile_estimate\"} } */"}]}