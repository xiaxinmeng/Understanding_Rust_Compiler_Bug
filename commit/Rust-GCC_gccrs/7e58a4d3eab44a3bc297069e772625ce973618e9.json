{"sha": "7e58a4d3eab44a3bc297069e772625ce973618e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1OGE0ZDNlYWI0NGEzYmMyOTcwNjllNzcyNjI1Y2U5NzM2MThlOQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-10-21T09:16:23Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-10-21T09:16:23Z"}, "message": "Document ARM specific command line switches.\n\nFrom-SVN: r23209", "tree": {"sha": "3cbed3e6f2d407d9a6b4134f21c3a9c72871ecd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cbed3e6f2d407d9a6b4134f21c3a9c72871ecd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e58a4d3eab44a3bc297069e772625ce973618e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e58a4d3eab44a3bc297069e772625ce973618e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e58a4d3eab44a3bc297069e772625ce973618e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e58a4d3eab44a3bc297069e772625ce973618e9/comments", "author": null, "committer": null, "parents": [{"sha": "866e9df806177f1ef2e67d261dd93795bb03e061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866e9df806177f1ef2e67d261dd93795bb03e061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866e9df806177f1ef2e67d261dd93795bb03e061"}], "stats": {"total": 79, "additions": 48, "deletions": 31}, "files": [{"sha": "c39081d66b5b8997e2f81c9fe963b7e196dd5483", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e58a4d3eab44a3bc297069e772625ce973618e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e58a4d3eab44a3bc297069e772625ce973618e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e58a4d3eab44a3bc297069e772625ce973618e9", "patch": "@@ -1,3 +1,8 @@\n+Wed Oct 21 09:15:06 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* config/arm/arm.h (TARGET_SWITCHES): Document arm specific\n+\tcommand line switches.\n+\n Tue Oct 20 10:04:51 1998  Graham  <grahams@rcp.co.uk>\n \n \t* reload.c (loc_mentioned_in_p): Add missing braces to bind\n@@ -343,8 +348,6 @@ Fri Oct 16 15:26:24 1998  Dave Brolley  <brolley@cygnus.com>\n \n         * c-lex.c (yylex): Fix unaligned access of wchar_t.\n \n->>>>>>> 1.2326\n->>>>>>> 1.2342\n Fri Oct 16 10:47:53 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm.h (TARGET_SWITCHES): Add --help documentation."}, {"sha": "960c14014e734addc947685ae7da5bb85173c00a", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 43, "deletions": 29, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e58a4d3eab44a3bc297069e772625ce973618e9/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e58a4d3eab44a3bc297069e772625ce973618e9/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=7e58a4d3eab44a3bc297069e772625ce973618e9", "patch": "@@ -301,7 +301,7 @@ extern char *target_fp_name;\n #define ARM_FLAG_BIG_END      (0x0800)\n \n /* Nonzero if we should compile for Thumb interworking.  */\n-#define ARM_FLAG_THUMB                (0x1000)\n+#define ARM_FLAG_THUMB          (0x1000)\n \n /* Nonzero if we should have little-endian words even when compiling for\n    big-endian (for backwards compatibility with older versions of GCC).  */\n@@ -331,33 +331,47 @@ extern char *target_fp_name;\n \n #define TARGET_SWITCHES  \t\t\t\t\\\n {                         \t\t\t\t\\\n-  {\"apcs\",\t\t\tARM_FLAG_APCS_FRAME},\t\\\n-  {\"apcs-frame\",\t\tARM_FLAG_APCS_FRAME, \"Generate APCS conformant stack frames\" },\t\\\n-  {\"no-apcs-frame\",\t       -ARM_FLAG_APCS_FRAME},\t\\\n-  {\"poke-function-name\",\tARM_FLAG_POKE},\t\t\\\n-  {\"fpe\",\t\t\tARM_FLAG_FPE},\t\t\\\n-  {\"6\",\t\t\t\tARM_FLAG_ARM6},\t\t\\\n-  {\"2\",\t\t\t\tARM_FLAG_ARM3},\t\t\\\n-  {\"3\",\t\t\t\tARM_FLAG_ARM3},\t\t\\\n-  {\"apcs-32\",\t\t\tARM_FLAG_APCS_32, \"Use the 32bit version of the APCS\" },\t\\\n-  {\"apcs-26\",\t\t       -ARM_FLAG_APCS_32, \"Use the 26bit version of the APCS\" },\t\\\n-  {\"apcs-stack-check\",\t\tARM_FLAG_APCS_STACK},\t\\\n-  {\"no-apcs-stack-check\",      -ARM_FLAG_APCS_STACK},\t\\\n-  {\"apcs-float\",\t\tARM_FLAG_APCS_FLOAT, \"Pass FP arguments in FP registers\" },\t\\\n-  {\"no-apcs-float\",\t       -ARM_FLAG_APCS_FLOAT},\t\\\n-  {\"apcs-reentrant\",\t\tARM_FLAG_APCS_REENT, \"Generate re-entrant, PIC code\" },\t\\\n-  {\"no-apcs-reentrant\",\t       -ARM_FLAG_APCS_REENT},\t\\\n-  {\"short-load-bytes\",\t\tARM_FLAG_SHORT_BYTE, \"Load shorts a byte at a time\" },\t\\\n-  {\"no-short-load-bytes\",      -ARM_FLAG_SHORT_BYTE},\t\\\n-  {\"short-load-words\",\t       -ARM_FLAG_SHORT_BYTE, \"Load words a byte at a time\" },\t\\\n-  {\"no-short-load-words\",\tARM_FLAG_SHORT_BYTE},\t\\\n-  {\"soft-float\",\t\tARM_FLAG_SOFT_FLOAT, \"Use library calls to perform FP operations\" },\t\\\n-  {\"hard-float\",\t       -ARM_FLAG_SOFT_FLOAT, \"Use hardware floating point instructions\" },\t\\\n-  {\"big-endian\",\t\tARM_FLAG_BIG_END, \"Assume target CPU is configured as big endian\" },\t\\\n-  {\"little-endian\",\t       -ARM_FLAG_BIG_END, \"Assume target CPU is configured as little endian\" },\t\\\n-  {\"words-little-endian\",       ARM_FLAG_LITTLE_WORDS, \"Assume big endian bytes, little endian words\" },\t\\\n-  {\"thumb-interwork\",\t\tARM_FLAG_THUMB, \"Support calls between THUMB and ARM instructions sets\" },\t\\\n-  {\"no-thumb-interwork\",       -ARM_FLAG_THUMB},\t\\\n+  {\"apcs\",\t\t\tARM_FLAG_APCS_FRAME, \"\" }, \\\n+  {\"apcs-frame\",\t\tARM_FLAG_APCS_FRAME, \t\\\n+     \"Generate APCS conformant stack frames\" },\t\t\\\n+  {\"no-apcs-frame\",\t       -ARM_FLAG_APCS_FRAME, \"\" }, \\\n+  {\"poke-function-name\",\tARM_FLAG_POKE, \t\t\\\n+     \"Store function names in object code\" },\t\t\\\n+  {\"fpe\",\t\t\tARM_FLAG_FPE,  \"\" },\t\\\n+  {\"6\",\t\t\t\tARM_FLAG_ARM6, \"\" },\t\\\n+  {\"2\",\t\t\t\tARM_FLAG_ARM3, \"\" },\t\\\n+  {\"3\",\t\t\t\tARM_FLAG_ARM3, \"\" },\t\\\n+  {\"apcs-32\",\t\t\tARM_FLAG_APCS_32, \t\\\n+     \"Use the 32bit version of the APCS\" },\t\t\\\n+  {\"apcs-26\",\t\t       -ARM_FLAG_APCS_32, \t\\\n+     \"Use the 26bit version of the APCS\" },\t\t\\\n+  {\"apcs-stack-check\",\t\tARM_FLAG_APCS_STACK, \"\" }, \\\n+  {\"no-apcs-stack-check\",      -ARM_FLAG_APCS_STACK, \"\" }, \\\n+  {\"apcs-float\",\t\tARM_FLAG_APCS_FLOAT, \t\\\n+     \"Pass FP arguments in FP registers\" },\t\t\\\n+  {\"no-apcs-float\",\t       -ARM_FLAG_APCS_FLOAT, \"\" }, \\\n+  {\"apcs-reentrant\",\t\tARM_FLAG_APCS_REENT, \t\\\n+     \"Generate re-entrant, PIC code\" },\t\t\t\\\n+  {\"no-apcs-reentrant\",\t       -ARM_FLAG_APCS_REENT, \"\" }, \\\n+  {\"short-load-bytes\",\t\tARM_FLAG_SHORT_BYTE, \t\\\n+     \"Load shorts a byte at a time\" },\t\t\t\\\n+  {\"no-short-load-bytes\",      -ARM_FLAG_SHORT_BYTE, \"\" }, \\\n+  {\"short-load-words\",\t       -ARM_FLAG_SHORT_BYTE, \t\\\n+     \"Load words a byte at a time\" },\t\t\t\\\n+  {\"no-short-load-words\",\tARM_FLAG_SHORT_BYTE, \"\" }, \\\n+  {\"soft-float\",\t\tARM_FLAG_SOFT_FLOAT, \t\\\n+     \"Use library calls to perform FP operations\" },\t\\\n+  {\"hard-float\",\t       -ARM_FLAG_SOFT_FLOAT, \t\\\n+     \"Use hardware floating point instructions\" },\t\\\n+  {\"big-endian\",\t\tARM_FLAG_BIG_END, \t\\\n+     \"Assume target CPU is configured as big endian\" },\t\\\n+  {\"little-endian\",\t       -ARM_FLAG_BIG_END, \t\\\n+     \"Assume target CPU is configured as little endian\" }, \\\n+  {\"words-little-endian\",       ARM_FLAG_LITTLE_WORDS, \t\\\n+     \"Assume big endian bytes, little endian words\" },\t\\\n+  {\"thumb-interwork\",\t\tARM_FLAG_THUMB, \t\\\n+     \"Support calls between THUMB and ARM instructions sets\" },\t\\\n+  {\"no-thumb-interwork\",       -ARM_FLAG_THUMB, \"\" },\t\\\n   SUBTARGET_SWITCHES\t\t\t\t\t\\\n   {\"\",\t\t\t\tTARGET_DEFAULT }\t\\\n }\n@@ -366,7 +380,7 @@ extern char *target_fp_name;\n {\t\t\t\t\t\\\n   {\"cpu=\",  & arm_select[1].string, \"Specify the name of the target CPU\" },\t\\\n   {\"arch=\", & arm_select[2].string, \"Specify the name of the target architecture\" }, \\\n-  {\"tune=\", & arm_select[3].string},\t\\\n+  {\"tune=\", & arm_select[3].string, \"\" },\t\\\n   {\"fp=\",   & target_fp_name, \"Specify the version of the floating point emulator\"} \\\n }\n "}]}