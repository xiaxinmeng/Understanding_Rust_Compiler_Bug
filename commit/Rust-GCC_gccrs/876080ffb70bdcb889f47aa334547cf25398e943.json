{"sha": "876080ffb70bdcb889f47aa334547cf25398e943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2MDgwZmZiNzBiZGNiODg5ZjQ3YWEzMzQ1NDdjZjI1Mzk4ZTk0Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-01-07T22:48:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-01-07T22:48:03Z"}, "message": "re PR libgomp/38086 (libgomp fails to build if assembler doesn't support .symver)\n\n\tPR libgomp/38086\n\t* acinclude.m4 (HAVE_AS_SYMVER_DIRECTIVE): New check.\n\t* libgomp.h (LIBGOMP_GNU_SYMBOL_VERSIONING): Undefine if\n\tHAVE_AS_SYMVER_DIRECTIVE is not defined.\n\t* configure: Regenerated.\n\t* config.h.in: Likewise.\n\nFrom-SVN: r143168", "tree": {"sha": "22dccd08d2bc5c5b6e1c2366084c29c8e88922d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22dccd08d2bc5c5b6e1c2366084c29c8e88922d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/876080ffb70bdcb889f47aa334547cf25398e943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876080ffb70bdcb889f47aa334547cf25398e943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/876080ffb70bdcb889f47aa334547cf25398e943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876080ffb70bdcb889f47aa334547cf25398e943/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0f645750c9a137136860fdf91a76b92b847263f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f645750c9a137136860fdf91a76b92b847263f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f645750c9a137136860fdf91a76b92b847263f"}], "stats": {"total": 87, "additions": 86, "deletions": 1}, "files": [{"sha": "9428394f629f732ed1f0bf91c9fa0eb901c17016", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=876080ffb70bdcb889f47aa334547cf25398e943", "patch": "@@ -1,3 +1,12 @@\n+2009-01-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/38086\n+\t* acinclude.m4 (HAVE_AS_SYMVER_DIRECTIVE): New check.\n+\t* libgomp.h (LIBGOMP_GNU_SYMBOL_VERSIONING): Undefine if\n+\tHAVE_AS_SYMVER_DIRECTIVE is not defined.\n+\t* configure: Regenerated.\n+\t* config.h.in: Likewise.\n+\n 2008-12-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38650"}, {"sha": "c6d9c308d9a1241f3e5090822969a49b1a8a086c", "filename": "libgomp/acinclude.m4", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Facinclude.m4?ref=876080ffb70bdcb889f47aa334547cf25398e943", "patch": "@@ -298,6 +298,16 @@ if test $enable_symvers = yes; then\n   fi\n fi\n \n+AC_CACHE_CHECK([whether the target supports .symver directive],\n+\t       libgomp_cv_have_as_symver_directive, [\n+  AC_TRY_COMPILE([void foo (void); __asm (\".symver foo, bar@SYMVER\");],\n+\t\t [], libgomp_cv_have_as_symver_directive=yes,\n+\t\t libgomp_cv_have_as_symver_directive=no)])\n+if test $libgomp_cv_have_as_symver_directive = yes; then\n+  AC_DEFINE(HAVE_AS_SYMVER_DIRECTIVE, 1,\n+    [Define to 1 if the target assembler supports .symver directive.])\n+fi\n+\n AM_CONDITIONAL(LIBGOMP_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)\n AC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n ])"}, {"sha": "88bae83fab388816a9e0e795e91fda94e066d98a", "filename": "libgomp/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig.h.in?ref=876080ffb70bdcb889f47aa334547cf25398e943", "patch": "@@ -1,5 +1,8 @@\n /* config.h.in.  Generated from configure.ac by autoheader.  */\n \n+/* Define to 1 if the target assembler supports .symver directive. */\n+#undef HAVE_AS_SYMVER_DIRECTIVE\n+\n /* Define to 1 if the target supports __attribute__((alias(...))). */\n #undef HAVE_ATTRIBUTE_ALIAS\n "}, {"sha": "432543b2795ce66a54da4d48023f28a37dd13449", "filename": "libgomp/configure", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=876080ffb70bdcb889f47aa334547cf25398e943", "patch": "@@ -18761,6 +18761,68 @@ echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n   fi\n fi\n \n+echo \"$as_me:$LINENO: checking whether the target supports .symver directive\" >&5\n+echo $ECHO_N \"checking whether the target supports .symver directive... $ECHO_C\" >&6\n+if test \"${libgomp_cv_have_as_symver_directive+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+void foo (void); __asm (\".symver foo, bar@SYMVER\");\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  libgomp_cv_have_as_symver_directive=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+libgomp_cv_have_as_symver_directive=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $libgomp_cv_have_as_symver_directive\" >&5\n+echo \"${ECHO_T}$libgomp_cv_have_as_symver_directive\" >&6\n+if test $libgomp_cv_have_as_symver_directive = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_SYMVER_DIRECTIVE 1\n+_ACEOF\n+\n+fi\n+\n \n \n if test $enable_symvers != no; then"}, {"sha": "5acee09f4d56bdfc0e129469a456727761b56d03", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876080ffb70bdcb889f47aa334547cf25398e943/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=876080ffb70bdcb889f47aa334547cf25398e943", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2005, 2007, 2008 Free Software Foundation, Inc.\n+/* Copyright (C) 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n    Contributed by Richard Henderson <rth@redhat.com>.\n \n    This file is part of the GNU OpenMP Library (libgomp).\n@@ -516,6 +516,7 @@ gomp_work_share_init_done (void)\n \n #if !defined (HAVE_ATTRIBUTE_VISIBILITY) \\\n     || !defined (HAVE_ATTRIBUTE_ALIAS) \\\n+    || !defined (HAVE_AS_SYMVER_DIRECTIVE) \\\n     || !defined (PIC)\n # undef LIBGOMP_GNU_SYMBOL_VERSIONING\n #endif"}]}