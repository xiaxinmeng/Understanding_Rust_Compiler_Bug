{"sha": "a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZlY2Y4YjYwNTgyYjdkN2NhN2Y5YzI0NzMwZGI4MzFhZWE2NjU4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-01-25T20:43:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-01-25T20:43:21Z"}, "message": "class.c (resolve_address_of_overloaded_function): Mark the chosen function used.\n\n\t* class.c (resolve_address_of_overloaded_function): Mark the\n\tchosen function used.\n\t* call.c (build_call): Make sure that a function coming in has\n\tbeen marked used already.\n\t* decl.c (expand_static_init): Call mark_used instead of\n\tassemble_external.\n\t* except.c (call_eh_info, do_pop_exception, expand_end_eh_spec,\n\talloc_eh_object, expand_throw): Likewise.\n\t* init.c (build_builtin_delete_call): Likewise.\n\t* rtti.c (call_void_fn, get_tinfo_fn, build_dynamic_cast_1,\n\texpand_si_desc, expand_class_desc, expand_ptr_desc, expand_attr_desc,\n\texpand_generic_desc): Likewise.\n\nFrom-SVN: r24862", "tree": {"sha": "b11f811fefe6e6f105d75041651ace7a6676fc36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b11f811fefe6e6f105d75041651ace7a6676fc36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/comments", "author": null, "committer": null, "parents": [{"sha": "89ae2c8c42affa24d6630e80558841968eb8f2b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ae2c8c42affa24d6630e80558841968eb8f2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ae2c8c42affa24d6630e80558841968eb8f2b9"}], "stats": {"total": 62, "additions": 41, "deletions": 21}, "files": [{"sha": "a3798926d6f5ce1394c40b131bb9f5a4357b99a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "patch": "@@ -1,3 +1,19 @@\n+1999-01-25  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* class.c (resolve_address_of_overloaded_function): Mark the\n+\tchosen function used.\n+\n+\t* call.c (build_call): Make sure that a function coming in has\n+\tbeen marked used already.\n+\t* decl.c (expand_static_init): Call mark_used instead of\n+\tassemble_external.\n+\t* except.c (call_eh_info, do_pop_exception, expand_end_eh_spec, \n+\talloc_eh_object, expand_throw): Likewise.\n+\t* init.c (build_builtin_delete_call): Likewise.\n+\t* rtti.c (call_void_fn, get_tinfo_fn, build_dynamic_cast_1, \n+\texpand_si_desc, expand_class_desc, expand_ptr_desc, expand_attr_desc,\n+\texpand_generic_desc): Likewise.\n+\n 1999-01-25  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* tree.c (equal_functions): New function."}, {"sha": "c478a5001402870ca35b0bfa2eb92287cc64627c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "patch": "@@ -1,5 +1,5 @@\n /* Functions related to invoking methods and overloaded functions.\n-   Copyright (C) 1987, 92-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 92-97, 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com) and\n    modified by Brendan Kehoe (brendan@cygnus.com).\n \n@@ -552,6 +552,9 @@ build_call (function, result_type, parms)\n   if (decl && DECL_CONSTRUCTOR_P (decl))\n     is_constructor = 1;\n \n+  if (decl)\n+    my_friendly_assert (TREE_USED (decl), 990125);\n+\n   /* Don't pass empty class objects by value.  This is useful\n      for tags in STL, which are used to control overload resolution.\n      We don't need to handle other cases of copying empty classes.  */"}, {"sha": "1430b9e6068622ff1af23f03682040921306e5de", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "patch": "@@ -5229,6 +5229,8 @@ resolve_address_of_overloaded_function (target_type,\n   /* Good, exactly one match.  Now, convert it to the correct type.  */\n   fn = TREE_PURPOSE (matches);\n \n+  mark_used (fn);\n+\n   if (TYPE_PTRFN_P (target_type) || TYPE_PTRMEMFUNC_P (target_type))\n     return build_unary_op (ADDR_EXPR, fn, 0);\n   else"}, {"sha": "927eec61ccc0ad6bbaa3e01dbb4da734a664eca2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "patch": "@@ -8147,7 +8147,7 @@ expand_static_init (decl, init)\n \t\t\t\t    build_function_type (void_type_node,\n \t\t\t\t\t\t\t pfvlist),\n \t\t\t\t    NOT_BUILT_IN, NULL_PTR);\n-\t      assemble_external (atexit_fndecl);\n+\t      mark_used (atexit_fndecl);\n \t      Atexit = default_conversion (atexit_fndecl);\n \t      pop_lang_context ();\n \t      pop_obstacks ();"}, {"sha": "aa1ff92769c9671bf44d0281a822083b1030e1a1", "filename": "gcc/cp/except.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "patch": "@@ -1,5 +1,5 @@\n /* Handle exceptional things in C++.\n-   Copyright (C) 1989, 92-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 92-97, 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann <tiemann@cygnus.com>\n    Rewritten by Mike Stump <mrs@cygnus.com>, based upon an\n    initial re-implementation courtesy Tad Hunt.\n@@ -318,9 +318,9 @@ call_eh_info ()\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n+  mark_used (fn);\n   return build_function_call (fn, NULL_TREE);\n }\n \n@@ -531,10 +531,10 @@ do_pop_exception ()\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   /* Arrange to do a dynamically scoped cleanup upon exit from this region.  */\n   cleanup = lookup_name (get_identifier (\"__exception_info\"), 0);\n   cleanup = build_function_call (fn, expr_tree_cons\n@@ -797,10 +797,10 @@ expand_end_eh_spec (raises)\n       TREE_THIS_VOLATILE (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   tmp = expr_tree_cons (NULL_TREE, build_int_2 (count, 0), expr_tree_cons\n \t\t\t(NULL_TREE, decl, NULL_TREE));\n   tmp = build_call (fn, TREE_TYPE (TREE_TYPE (fn)), tmp);\n@@ -939,10 +939,10 @@ alloc_eh_object (type)\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   exp = build_function_call (fn, expr_tree_cons\n \t\t\t     (NULL_TREE, size_in_bytes (type), NULL_TREE));\n   exp = build1 (NOP_EXPR, build_pointer_type (type), exp);\n@@ -1096,10 +1096,10 @@ expand_throw (exp)\n \t  DECL_ARTIFICIAL (fn) = 1;\n \t  pushdecl_top_level (fn);\n \t  make_function_rtl (fn);\n-\t  assemble_external (fn);\n \t  pop_obstacks ();\n \t}\n \n+      mark_used (fn);\n       e = expr_tree_cons (NULL_TREE, exp, expr_tree_cons\n \t\t\t  (NULL_TREE, throw_type, expr_tree_cons\n \t\t\t   (NULL_TREE, cleanup, NULL_TREE)));\n@@ -1127,10 +1127,10 @@ expand_throw (exp)\n \t  DECL_ARTIFICIAL (fn) = 1;\n \t  pushdecl_top_level (fn);\n \t  make_function_rtl (fn);\n-\t  assemble_external (fn);\n \t  pop_obstacks ();\n \t}\n \n+      mark_used (fn);\n       exp = build_function_call (fn, NULL_TREE);\n       expand_expr (exp, const0_rtx, VOIDmode, EXPAND_NORMAL);\n     }"}, {"sha": "44911ebab7949d3a38fd2f77746060994f349e77", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "patch": "@@ -1,5 +1,5 @@\n /* Handle initialization things in C++.\n-   Copyright (C) 1987, 89, 92-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 89, 92-98, 1999 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -1861,7 +1861,7 @@ static tree\n build_builtin_delete_call (addr)\n      tree addr;\n {\n-  assemble_external (global_delete_fndecl);\n+  mark_used (global_delete_fndecl);\n   return build_call (global_delete_fndecl, \n \t\t     void_type_node, build_expr_list (NULL_TREE, addr));\n }"}, {"sha": "59b2c9354203a136e44e024e723a671cd94509a7", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ecf8b60582b7d7ca7f9c24730db831aea6658e/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=a6ecf8b60582b7d7ca7f9c24730db831aea6658e", "patch": "@@ -1,5 +1,5 @@\n /* RunTime Type Identification\n-   Copyright (C) 1995, 96-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 96-97, 1998, 1999 Free Software Foundation, Inc.\n    Mostly written by Jason Merrill (jason@cygnus.com).\n \n This file is part of GNU CC.\n@@ -151,11 +151,10 @@ call_void_fn (name)\n       DECL_ARTIFICIAL (d) = 1;\n       pushdecl_top_level (d);\n       make_function_rtl (d);\n-      assemble_external (d);\n-\n       pop_obstacks ();\n     }\n \n+  mark_used (d);\n   return build_call (d, void_type_node, NULL_TREE);\n }\n \n@@ -377,7 +376,7 @@ get_tinfo_fn (type)\n \n   pushdecl_top_level (d);\n   make_function_rtl (d);\n-  assemble_external (d);\n+  mark_used (d);\n   mark_inline_for_output (d);\n   pop_obstacks ();\n \n@@ -653,10 +652,10 @@ build_dynamic_cast_1 (type, expr)\n \t      DECL_ARTIFICIAL (dcast_fn) = 1;\n \t      pushdecl_top_level (dcast_fn);\n \t      make_function_rtl (dcast_fn);\n-\t      assemble_external (dcast_fn);\n \t      pop_obstacks ();\n \t    }\n \t  \n+\t  mark_used (dcast_fn);\n           result = build_call\n \t    (dcast_fn, TREE_TYPE (TREE_TYPE (dcast_fn)), elems);\n \n@@ -751,10 +750,10 @@ expand_si_desc (tdecl, type)\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   fn = build_call (fn, TREE_TYPE (TREE_TYPE (fn)), elems);\n   expand_expr_stmt (fn);\n }\n@@ -932,10 +931,10 @@ expand_class_desc (tdecl, type)\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   fn = build_call (fn, TREE_TYPE (TREE_TYPE (fn)), elems);\n   expand_expr_stmt (fn);\n }\n@@ -979,10 +978,10 @@ expand_ptr_desc (tdecl, type)\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   fn = build_call (fn, TREE_TYPE (TREE_TYPE (fn)), elems);\n   expand_expr_stmt (fn);\n }\n@@ -1027,10 +1026,10 @@ expand_attr_desc (tdecl, type)\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   fn = build_call (fn, TREE_TYPE (TREE_TYPE (fn)), elems);\n   expand_expr_stmt (fn);\n }\n@@ -1067,10 +1066,10 @@ expand_generic_desc (tdecl, type, fnname)\n       DECL_ARTIFICIAL (fn) = 1;\n       pushdecl_top_level (fn);\n       make_function_rtl (fn);\n-      assemble_external (fn);\n       pop_obstacks ();\n     }\n \n+  mark_used (fn);\n   fn = build_call (fn, TREE_TYPE (TREE_TYPE (fn)), elems);\n   expand_expr_stmt (fn);\n }"}]}