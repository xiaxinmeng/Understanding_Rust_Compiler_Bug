{"sha": "b66b30a807918ee1cf89b3376bb410b9046639b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY2YjMwYTgwNzkxOGVlMWNmODliMzM3NmJiNDEwYjkwNDY2MzliOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-23T14:03:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-23T14:03:38Z"}, "message": "testsuite: Add noexcept(false) to throwing destructor\n\nI think this test is intended to check this property of the C++\nstandard:\n\n\"If a destructor directly invoked by stack unwinding exits via an\nexception, std::terminate is invoked.\" [except.throw]\n\nSince C++11 any exception escaping a destructor will call\nstd::terminate, so the test would terminate even if the unwinding\nbehaviour was wrong.\n\nGive the destructor a potentially-throwing exception specification,\nso that we know that terminate was called for the right reason.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/compat/eh/filter2_y.C: Add noexcept(false) to\n\tdestructor.", "tree": {"sha": "77dd2f334e1c360895cacc35ef91ceb6828016a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77dd2f334e1c360895cacc35ef91ceb6828016a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b66b30a807918ee1cf89b3376bb410b9046639b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66b30a807918ee1cf89b3376bb410b9046639b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b66b30a807918ee1cf89b3376bb410b9046639b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66b30a807918ee1cf89b3376bb410b9046639b8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50106208ff65fe8076329169cd97460a03e27388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50106208ff65fe8076329169cd97460a03e27388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50106208ff65fe8076329169cd97460a03e27388"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "67a4ffedd8655d29cba15d44c5bb2269f2f3564e", "filename": "gcc/testsuite/g++.dg/compat/eh/filter2_y.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66b30a807918ee1cf89b3376bb410b9046639b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Feh%2Ffilter2_y.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66b30a807918ee1cf89b3376bb410b9046639b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Feh%2Ffilter2_y.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Feh%2Ffilter2_y.C?ref=b66b30a807918ee1cf89b3376bb410b9046639b8", "patch": "@@ -9,6 +9,12 @@ struct a\n   a () { }\n \n   ~a ()\n+#if __cplusplus >= 201103L\n+    // Give this destructor a potentially-throwing exception specification so\n+    // that we verify std::terminate gets called due to an exception during\n+    // unwinding, not just because the destructor is noexcept.\n+    noexcept(false)\n+#endif\n     {\n       try\n \t{"}]}