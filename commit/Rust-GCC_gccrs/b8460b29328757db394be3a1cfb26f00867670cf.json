{"sha": "b8460b29328757db394be3a1cfb26f00867670cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0NjBiMjkzMjg3NTdkYjM5NGJlM2ExY2ZiMjZmMDA4Njc2NzBjZg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-06T00:11:27Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-06T00:11:27Z"}, "message": "re PR rtl-optimization/10024 ([HP-PA] inline optimization ICE)\n\n\tPR optimization/10024\n\t* gcc.c-torture/compile/20030405-1.c: New test.\n\nFrom-SVN: r65280", "tree": {"sha": "96a5719c17971c2bd64d8d94618af3563737c202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96a5719c17971c2bd64d8d94618af3563737c202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8460b29328757db394be3a1cfb26f00867670cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8460b29328757db394be3a1cfb26f00867670cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8460b29328757db394be3a1cfb26f00867670cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8460b29328757db394be3a1cfb26f00867670cf/comments", "author": null, "committer": null, "parents": [{"sha": "8e33fb63f74dfd6e849dafe5321e957c40bf4372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e33fb63f74dfd6e849dafe5321e957c40bf4372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e33fb63f74dfd6e849dafe5321e957c40bf4372"}], "stats": {"total": 79, "additions": 71, "deletions": 8}, "files": [{"sha": "23e87cc8404fe22a9550c37c840d31ac4881598c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8460b29328757db394be3a1cfb26f00867670cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8460b29328757db394be3a1cfb26f00867670cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8460b29328757db394be3a1cfb26f00867670cf", "patch": "@@ -1,3 +1,8 @@\n+2003-04-05  Zack Weinberg  <zack@codesourcery.com>\n+\n+\tPR optimization/10024\n+\t* gcc.c-torture/compile/20030405-1.c: New test.\n+\n 2003-04-04  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.dg/pch/static-3.c: New.\n@@ -12,7 +17,7 @@\n 2003-04-03  Mike Stump  <mrs@apple.com>\n \n \t* lib/scanasm.exp (scan-assembler): Add xfail processing for\n-        target arg.\n+\ttarget arg.\n \t(scan-assembler-times, scan-assembler-not): Likewise.\n \t(scan-assembler-dem, scan-assembler-dem-not): Likewise.\n \n@@ -28,9 +33,9 @@\n \n 2003-04-02  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * g++.dg/eh/simd-2.C (vecfunc): Fix typo.\n+\t* g++.dg/eh/simd-2.C (vecfunc): Fix typo.\n \n-        * g++.dg/eh/simd-1.C (vecfunc): Same.\n+\t* g++.dg/eh/simd-1.C (vecfunc): Same.\n \n 2003-04-01  Roger Sayle  <roger@eyesopen.com>\n \n@@ -42,12 +47,12 @@\n \n 2003-04-01  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * g++.dg/eh/simd-1.C: New.\n-        * g++.dg/eh/simd-2.C: New.\n+\t* g++.dg/eh/simd-1.C: New.\n+\t* g++.dg/eh/simd-2.C: New.\n \n 2003-03-01  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.c-torture/execute/simd-3.c: New.\n+\t* gcc.c-torture/execute/simd-3.c: New.\n \n 2003-03-31  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -90,7 +95,7 @@\n \n 2003-03-30  Glen Nakamura  <glen@imodulo.com>\n \n-        * gcc.dg/20030324-1.c: Add comments and abort if test fails.\n+\t* gcc.dg/20030324-1.c: Add comments and abort if test fails.\n \n 2003-03-28  Roger Sayle  <roger@eyesopen.com>\n \n@@ -199,7 +204,7 @@\n \n \tPR c++/9898, c++/383\n \t* g++.dg/template/conv6.C: New test.\n-\t\n+\n \tPR c++/10119\n \t* g++.dg/template/ptrmem5.C: New test.\n "}, {"sha": "2e61f1fa3ff3dd3cd7b6f64b18cbca4e09b6fb2a", "filename": "gcc/testsuite/gcc.c-torture/compile/20030405-1.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8460b29328757db394be3a1cfb26f00867670cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030405-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8460b29328757db394be3a1cfb26f00867670cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030405-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030405-1.c?ref=b8460b29328757db394be3a1cfb26f00867670cf", "patch": "@@ -0,0 +1,58 @@\n+/* PR optimization/10024 */\n+extern int *allegro_errno;\n+typedef long fixed;\n+extern inline int\n+fixfloor (fixed x)\n+{\n+  if (x >= 0)\n+    return (x >> 16);\n+  else\n+    return ~((~x) >> 16);\n+}\n+extern inline int\n+fixtoi (fixed x)\n+{\n+  return fixfloor (x) + ((x & 0x8000) >> 15);\n+}\n+extern inline fixed\n+ftofix (double x)\n+{\n+  if (x > 32767.0)\n+    {\n+      *allegro_errno = 34;\n+      return 0x7FFFFFFF;\n+    }\n+  if (x < -32767.0)\n+    {\n+      *allegro_errno = 34;\n+      return -0x7FFFFFFF;\n+    }\n+  return (long) (x * 65536.0 + (x < 0 ? -0.5 : 0.5));\n+}\n+extern inline double\n+fixtof (fixed x)\n+{\n+  return (double) x / 65536.0;\n+}\n+extern inline fixed\n+fixdiv (fixed x, fixed y)\n+{\n+  if (y == 0)\n+    {\n+      *allegro_errno = 34;\n+      return (x < 0) ? -0x7FFFFFFF : 0x7FFFFFFF;\n+    }\n+  else\n+    return ftofix (fixtof (x) / fixtof (y));\n+}\n+extern inline fixed\n+itofix (int x)\n+{\n+  return x << 16;\n+}\n+\n+int\n+foo (int n)\n+{\n+  return fixtoi (fixdiv (itofix (512), itofix (n)));\n+}"}]}