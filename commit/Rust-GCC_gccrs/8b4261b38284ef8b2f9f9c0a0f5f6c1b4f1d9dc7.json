{"sha": "8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI0MjYxYjM4Mjg0ZWY4YjJmOWY5YzBhMGY1ZjZjMWI0ZjFkOWRjNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T13:24:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T13:24:40Z"}, "message": "2008-08-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch11.adb:\n\t(Expand_Exception_Handlers): Call Make_Exception_Handler instead of\n\tMake_Implicit_Exception_Handler when rewriting an exception handler with\n\ta choice parameter, and pass the handler's Sloc instead of that of the\n\thandled sequence of statements. Make_Implicit_Exception_Handler sets the\n\tSloc to No_Location (unless debugging generated code), which we don't\n\twant for the case of a user handler.\n\nFrom-SVN: r139291", "tree": {"sha": "2b1f23a26019d8dbfdf61ba37592947bdd47120a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b1f23a26019d8dbfdf61ba37592947bdd47120a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7/comments", "author": null, "committer": null, "parents": [{"sha": "b2c4d56de258bc49da7f7349bedadd38af003a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c4d56de258bc49da7f7349bedadd38af003a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c4d56de258bc49da7f7349bedadd38af003a93"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "b868744fae0df68939e0fba1940e11e815da8cbf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7", "patch": "@@ -1,3 +1,17 @@\n+2008-08-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): Inherit Is_Imported flag.\n+\n+2008-08-20  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch11.adb:\n+\t(Expand_Exception_Handlers): Call Make_Exception_Handler instead of\n+\tMake_Implicit_Exception_Handler when rewriting an exception handler with\n+\ta choice parameter, and pass the handler's Sloc instead of that of the\n+\thandled sequence of statements. Make_Implicit_Exception_Handler sets the\n+\tSloc to No_Location (unless debugging generated code), which we don't\n+\twant for the case of a user handler.\n+\n 2008-08-20  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb (Freeze_Record_Type): Improve msg for non-contiguous field"}, {"sha": "7ad1881151afd2ff87d3fe13a0025592e9c16959", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=8b4261b38284ef8b2f9f9c0a0f5f6c1b4f1d9dc7", "patch": "@@ -1011,7 +1011,8 @@ package body Exp_Ch11 is\n                if Present (Choice_Parameter (Handler)) then\n                   declare\n                      Cparm : constant Entity_Id  := Choice_Parameter (Handler);\n-                     Clc   : constant Source_Ptr := Sloc (Cparm);\n+                     Cloc  : constant Source_Ptr := Sloc (Cparm);\n+                     Hloc  : constant Source_Ptr := Sloc (Handler);\n                      Save  : Node_Id;\n \n                   begin\n@@ -1020,7 +1021,7 @@ package body Exp_Ch11 is\n                          Name =>\n                            New_Occurrence_Of (RTE (RE_Save_Occurrence), Loc),\n                          Parameter_Associations => New_List (\n-                           New_Occurrence_Of (Cparm, Clc),\n+                           New_Occurrence_Of (Cparm, Cloc),\n                            Make_Explicit_Dereference (Loc,\n                              Make_Function_Call (Loc,\n                                Name => Make_Explicit_Dereference (Loc,\n@@ -1032,24 +1033,33 @@ package body Exp_Ch11 is\n \n                      Obj_Decl :=\n                        Make_Object_Declaration\n-                         (Clc,\n+                         (Cloc,\n                           Defining_Identifier => Cparm,\n                           Object_Definition   =>\n                             New_Occurrence_Of\n-                              (RTE (RE_Exception_Occurrence), Clc));\n+                              (RTE (RE_Exception_Occurrence), Cloc));\n                      Set_No_Initialization (Obj_Decl, True);\n \n                      Rewrite (Handler,\n-                       Make_Implicit_Exception_Handler (Loc,\n+                       Make_Exception_Handler (Hloc,\n+                         Choice_Parameter  => Empty,\n                          Exception_Choices => Exception_Choices (Handler),\n \n                          Statements => New_List (\n-                           Make_Block_Statement (Loc,\n+                           Make_Block_Statement (Hloc,\n                              Declarations => New_List (Obj_Decl),\n                              Handled_Statement_Sequence =>\n-                               Make_Handled_Sequence_Of_Statements (Loc,\n+                               Make_Handled_Sequence_Of_Statements (Hloc,\n                                  Statements => Statements (Handler))))));\n \n+                     --  Local raise statements can't occur, since exception\n+                     --  handlers with choice parameters are not allowed when\n+                     --  No_Exception_Propagation applies, so set attributes\n+                     --  accordingly.\n+\n+                     Set_Local_Raise_Statements (Handler, No_Elist);\n+                     Set_Local_Raise_Not_OK (Handler);\n+\n                      Analyze_List\n                        (Statements (Handler), Suppress => All_Checks);\n                   end;"}]}