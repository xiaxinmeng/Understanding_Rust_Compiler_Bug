{"sha": "9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4", "node_id": "C_kwDOANBUbNoAKDk1OTRlMDRlNGUyYWJlYjRmZmQzY2ExMzQ0NDdlZTlmZTg0Zjk1YTQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-16T12:14:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-16T12:18:39Z"}, "message": "Stop backwards thread discovery when leaving a loop\n\nThe backward threader copier cannot deal with the situation of\ncopying blocks belonging to different loops and will reject those\npaths late.  The following uses this to prune path discovery,\nsaving on compile-time.  Note the off-loop block is still considered\nas entry edge origin.\n\n\t* tree-ssa-threadbackward.cc (back_threader::find_paths_to_names):\n\tDo not walk further if we are leaving the current loop.", "tree": {"sha": "29d4ffc63ccbeab0a56a08f858533181ab0a4be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29d4ffc63ccbeab0a56a08f858533181ab0a4be3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b403297b111c990c331b5bbb6165b061ad2259b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b403297b111c990c331b5bbb6165b061ad2259b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b403297b111c990c331b5bbb6165b061ad2259b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "1c362839fab243023b0903ff8b11c00886a968ce", "filename": "gcc/tree-ssa-threadbackward.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4/gcc%2Ftree-ssa-threadbackward.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4/gcc%2Ftree-ssa-threadbackward.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.cc?ref=9594e04e4e2abeb4ffd3ca134447ee9fe84f95a4", "patch": "@@ -355,6 +355,12 @@ back_threader::find_paths_to_names (basic_block bb, bitmap interesting,\n \t  || maybe_register_path ()))\n     ;\n \n+  // The backwards thread copier cannot copy blocks that do not belong\n+  // to the same loop, so when the new source of the path entry no\n+  // longer belongs to it we don't need to search further.\n+  else if (m_path[0]->loop_father != bb->loop_father)\n+    ;\n+\n   // Continue looking for ways to extend the path but limit the\n   // search space along a branch\n   else if ((overall_paths = overall_paths * EDGE_COUNT (bb->preds))"}]}