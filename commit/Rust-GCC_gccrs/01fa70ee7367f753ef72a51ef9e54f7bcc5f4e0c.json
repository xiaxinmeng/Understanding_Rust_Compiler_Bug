{"sha": "01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFmYTcwZWU3MzY3Zjc1M2VmNzJhNTFlZjllNTRmN2JjYzVmNGUwYw==", "commit": {"author": {"name": "Michael Tiemann", "email": "tiemann@gnu.org", "date": "1991-12-31T22:53:17Z"}, "committer": {"name": "Michael Tiemann", "email": "tiemann@gnu.org", "date": "1991-12-31T22:53:17Z"}, "message": "Initial revision\n\nFrom-SVN: r150", "tree": {"sha": "e00c2f0cce4ffb6b69ab8c25f5fb246865156819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e00c2f0cce4ffb6b69ab8c25f5fb246865156819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c/comments", "author": null, "committer": null, "parents": [{"sha": "94b8bab1ea17fefddf75a8ca56a7c52aee9397b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b8bab1ea17fefddf75a8ca56a7c52aee9397b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b8bab1ea17fefddf75a8ca56a7c52aee9397b7"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "3836e2fdebf9c9efe643499323a5776340098bd1", "filename": "gcc/vmsconfig.com", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c/gcc%2Fvmsconfig.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c/gcc%2Fvmsconfig.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsconfig.com?ref=01fa70ee7367f753ef72a51ef9e54f7bcc5f4e0c", "patch": "@@ -0,0 +1,61 @@\n+$ !\n+$ !\tSet up to compile GCC on VMS\n+$ !\n+$ echo = \"write sys$output\"\n+$ !\n+$ if f$search(\"config.h\") .nes. \"\" then delete config.h.*\n+$ copy [.config]xm-vms.h []config.h\n+$ echo \"Linked `config.h' to `[.config]xm-vms.h'.\n+$ !\n+$ if f$search(\"tm.h\") .nes. \"\" then delete tm.h.*\n+$ copy [.config]vms.h []tm.h\n+$ echo \"Linked `tm.h' to `[.config]vms.h'.\n+$ !\n+$ if f$search(\"md.\") .nes. \"\" then delete md..*\n+$ copy [.config]vax.md []md.\n+$ echo \"Linked `md' to `[.config]vax.md'.\n+$ !\n+$ if f$search(\"aux-output.c\") .nes. \"\" then delete aux-output.c.*\n+$ copy [.config]vax.c []aux-output.c\n+$ echo \"Linked `aux-output.c' to `[.config]vax.c'.\n+$ !\n+$!\n+$!\n+$! Create the file version.opt, which helps identify the executable.\n+$!\n+$search version.c version_string,\"=\"/match=and/output=t.tmp\n+$open ifile$ t.tmp\n+$read ifile$ line\n+$close ifile$\n+$delete/nolog t.tmp;\n+$ijk=f$locate(\"\"\"\",line)+1\n+$line=f$extract(ijk,f$length(line)-ijk,line)\n+$ijk=f$locate(\"\"\"\",line)\n+$line=f$extract(0,ijk,line)\n+$ijk=f$locate(\"\\n\",line)\n+$line=f$extract(0,ijk,line)\n+$!\n+$i=0\n+$loop:\n+$elm=f$element(i,\" \",line)\n+$if elm.eqs.\"\" then goto no_ident\n+$if (elm.les.\"9\").and.(elm.ges.\"0\") then goto write_ident\n+$i=i+1\n+$goto loop\n+$!\n+$no_ident:\n+$elm=\"?.??\"\n+$!\n+$!\n+$write_ident:\n+$open ifile$ version.opt/write\n+$write ifile$ \"ident=\"+\"\"\"\"+elm+\"\"\"\"\n+$close ifile$\n+$pur version.opt/nolog\n+$!\n+$!\n+$ if f$search(\"config.status\") .nes. \"\" then delete config.status.*\n+$ open/write file config.status\n+$ write file \"Links are now set up for use with a vax running VMS.\"\n+$ close file\n+$ type config.status"}]}