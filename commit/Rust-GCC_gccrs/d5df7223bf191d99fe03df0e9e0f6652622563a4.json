{"sha": "d5df7223bf191d99fe03df0e9e0f6652622563a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVkZjcyMjNiZjE5MWQ5OWZlMDNkZjBlOWUwZjY2NTI2MjI1NjNhNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-09-08T19:26:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-09-08T19:26:06Z"}, "message": "tree.c (tree_find_value): Remove.\n\n\t* tree.c (tree_find_value): Remove.\n\t* tree.h: Remove prototype.\n\t* varasm.c (assemble_external): Use value_member instead.\n\nFrom-SVN: r151534", "tree": {"sha": "70fdaaab06e9ea4d611f7e8cc149c83f3760f1f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70fdaaab06e9ea4d611f7e8cc149c83f3760f1f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5df7223bf191d99fe03df0e9e0f6652622563a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5df7223bf191d99fe03df0e9e0f6652622563a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5df7223bf191d99fe03df0e9e0f6652622563a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5df7223bf191d99fe03df0e9e0f6652622563a4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60adb6417ce8f30013bbc760a0cf914586830aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60adb6417ce8f30013bbc760a0cf914586830aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60adb6417ce8f30013bbc760a0cf914586830aaf"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "199dcd151495046af7bc7320ea1e4d9c7b9e504a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5df7223bf191d99fe03df0e9e0f6652622563a4", "patch": "@@ -1,3 +1,9 @@\n+2009-09-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (tree_find_value): Remove.\n+\t* tree.h: Remove prototype.\n+\t* varasm.c (assemble_external): Use value_member instead.\n+\n 2009-09-08  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* toplev.c (process_options): Choose default debugging type when"}, {"sha": "010aeff2f579644600c50b21aa3b84fbc6daa63e", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=d5df7223bf191d99fe03df0e9e0f6652622563a4", "patch": "@@ -2003,18 +2003,6 @@ tree_last (tree chain)\n   return chain;\n }\n \n-/* Return the node in a chain of nodes whose value is x, NULL if not found.  */\n-\n-tree\n-tree_find_value (tree chain, tree x)\n-{\n-  tree list;\n-  for (list = chain; list; list = TREE_CHAIN (list))\n-    if (TREE_VALUE (list) == x)\n-\treturn list;\n-  return NULL;\n-}\n-\n /* Reverse the order of elements in the chain T,\n    and return the new head of the chain (old last element).  */\n "}, {"sha": "59251b58d14908a3ca0cf605ffdb1ddf3cf5e751", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d5df7223bf191d99fe03df0e9e0f6652622563a4", "patch": "@@ -4278,10 +4278,6 @@ extern tree tree_cons_stat (tree, tree, tree MEM_STAT_DECL);\n \n extern tree tree_last (tree);\n \n-/* Return the node in a chain whose TREE_VALUE is x, NULL if not found.  */\n-\n-extern tree tree_find_value (tree, tree);\n-\n /* Reverse the order of elements in a chain, and return the new head.  */\n \n extern tree nreverse (tree);"}, {"sha": "a7fa83fc1074601d45d85188f17291bfbd45aaa7", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5df7223bf191d99fe03df0e9e0f6652622563a4/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d5df7223bf191d99fe03df0e9e0f6652622563a4", "patch": "@@ -2328,11 +2328,11 @@ assemble_external (tree decl ATTRIBUTE_UNUSED)\n \t for declarations that can be weak, it happens to be\n \t match.  */\n       && !TREE_STATIC (decl)\n-      && tree_find_value (weak_decls, decl) == NULL_TREE)\n-      weak_decls = tree_cons (NULL, decl, weak_decls);\n+      && value_member (decl, weak_decls) == NULL_TREE)\n+    weak_decls = tree_cons (NULL, decl, weak_decls);\n \n #ifdef ASM_OUTPUT_EXTERNAL\n-  if (tree_find_value (pending_assemble_externals, decl) == NULL_TREE)\n+  if (value_member (decl, pending_assemble_externals) == NULL_TREE)\n     pending_assemble_externals = tree_cons (NULL, decl,\n \t\t\t\t\t    pending_assemble_externals);\n #endif"}]}