{"sha": "88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlYjZlNjJmY2JhMmNiMGM5MjE5NGI0YTNkYmIyOWM0Mzg1YWU3NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T09:35:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T09:35:50Z"}, "message": "[multiple changes]\n\n2009-08-17  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-env.adb: Minor reformatting\n\t* sem_ch3.adb: Minor reformatting\n\n2009-08-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sysdep.c (__gnat_localtime_tzoff): VxWorks case - Flip the sign of\n\tthe time zone since VxWorks chose positive values to represent west\n\ttime zones and negative for east zones.\n\nFrom-SVN: r150826", "tree": {"sha": "f6706d5d774f7bc84126c8a56a3a088725140fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6706d5d774f7bc84126c8a56a3a088725140fd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/comments", "author": null, "committer": null, "parents": [{"sha": "23532a924886d063e5e06479eb6bce63c2c8127b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23532a924886d063e5e06479eb6bce63c2c8127b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23532a924886d063e5e06479eb6bce63c2c8127b"}], "stats": {"total": 72, "additions": 48, "deletions": 24}, "files": [{"sha": "ebbd96d6cc25423964b3ea238ca4c88622ae9793", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "patch": "@@ -1,3 +1,14 @@\n+2009-08-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-env.adb: Minor reformatting\n+\t* sem_ch3.adb: Minor reformatting\n+\n+2009-08-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sysdep.c (__gnat_localtime_tzoff): VxWorks case - Flip the sign of\n+\tthe time zone since VxWorks chose positive values to represent west\n+\ttime zones and negative for east zones.\n+\n 2009-08-17  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Access_Definition): Do not create an Itype reference for"}, {"sha": "c14cbd63d207a73b5e00add588cb6eb19ea6cfb3", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "patch": "@@ -222,17 +222,20 @@ package body Prj.Env is\n    -- Add_To_Buffer --\n    -------------------\n \n+   --  Wouldn't it be more consistent to use a Table for Buffer ???\n+\n    procedure Add_To_Buffer\n      (S           : String;\n       Buffer      : in out String_Access;\n       Buffer_Last : in out Natural)\n    is\n       Last : constant Natural := Buffer_Last + S'Length;\n+\n    begin\n       while Last > Buffer'Last loop\n          declare\n             New_Buffer : constant String_Access :=\n-              new String (1 .. 2 * Buffer'Last);\n+                           new String (1 .. 2 * Buffer'Last);\n \n          begin\n             New_Buffer (1 .. Buffer_Last) := Buffer (1 .. Buffer_Last);\n@@ -446,7 +449,7 @@ package body Prj.Env is\n       Namings        : Naming_Table.Instance;\n       --  Table storing the naming data for gnatmake/gprmake\n \n-      Buffer : String_Access := new String (1 .. Buffer_Initial);\n+      Buffer      : String_Access := new String (1 .. Buffer_Initial);\n       Buffer_Last : Natural := 0;\n \n       File_Name : Path_Name_Type  := No_Path;\n@@ -471,7 +474,7 @@ package body Prj.Env is\n       --  file with procedure Write_Temp_File below.\n \n       procedure Write_Temp_File;\n-      --  Create a temporary file and put the content of the buffer in it.\n+      --  Create a temporary file and put the content of the buffer in it\n \n       -----------\n       -- Check --\n@@ -630,6 +633,7 @@ package body Prj.Env is\n       procedure Write_Temp_File is\n          Status : Boolean := False;\n          Last   : Natural;\n+\n       begin\n          Tempdir.Create_Temp_File (File, File_Name);\n \n@@ -646,15 +650,15 @@ package body Prj.Env is\n          end if;\n       end Write_Temp_File;\n \n-      procedure Check_Imported_Projects is new For_Every_Project_Imported\n-        (Integer, Check);\n+      procedure Check_Imported_Projects is\n+        new For_Every_Project_Imported (Integer, Check);\n+\n       Dummy : Integer := 0;\n \n    --  Start of processing for Create_Config_Pragmas_File\n \n    begin\n       if not For_Project.Config_Checked then\n-\n          Naming_Table.Init (Namings);\n \n          --  Check the naming schemes\n@@ -866,7 +870,7 @@ package body Prj.Env is\n       For_Every_Imported_Project (Project, Dummy);\n \n       declare\n-         Last : Natural;\n+         Last   : Natural;\n          Status : Boolean := False;\n \n       begin\n@@ -1524,9 +1528,8 @@ package body Prj.Env is\n       Status : Boolean;\n       --  For calls to Close\n \n-      Last         : Natural;\n-\n-      Buffer       : String_Access := new String (1 .. Buffer_Initial);\n+      Last        : Natural;\n+      Buffer      : String_Access := new String (1 .. Buffer_Initial);\n       Buffer_Last : Natural := 0;\n \n       procedure Recursive_Add (Project : Project_Id; Dummy : in out Boolean);\n@@ -1569,6 +1572,7 @@ package body Prj.Env is\n \n       procedure For_All_Projects is\n         new For_Every_Project_Imported (Boolean, Recursive_Add);\n+\n       Dummy : Boolean := False;\n \n    --  Start of processing for Set_Ada_Paths\n@@ -1657,7 +1661,6 @@ package body Prj.Env is\n \n          if Last = Buffer_Last then\n             Close (Object_FD, Status);\n-\n          else\n             Status := False;\n          end if;"}, {"sha": "c514206c00d1616d53a79aa9678aaf224b4d11d4", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "patch": "@@ -932,13 +932,14 @@ package body Sem_Ch3 is\n          Build_Itype_Reference (Anon_Type, Parent (Parent (Related_Nod)));\n \n       --  Similarly, if the access definition is the return result of a\n-      --  function, create an itype reference for it because it\n-      --  will be used within the function body. For a regular function that\n-      --  is not a compilation unit, insert reference after the declaration.\n-      --  For a protected operation, insert it after the enclosing protected\n-      --  type declaration. In either case, do not create a reference for a\n-      --  type obtained through a limited_with clause, because this would\n-      --  introduce semantic dependencies.\n+      --  function, create an itype reference for it because it will be used\n+      --  within the function body. For a regular function that is not a\n+      --  compilation unit, insert reference after the declaration. For a\n+      --  protected operation, insert it after the enclosing protected type\n+      --  declaration. In either case, do not create a reference for a type\n+      --  obtained through a limited_with clause, because this would introduce\n+      --  semantic dependencies.\n+\n       --  Similarly, do not create a reference if the designated type is a\n       --  generic formal, because no use of it will reach the backend.\n \n@@ -955,10 +956,10 @@ package body Sem_Ch3 is\n             Build_Itype_Reference (Anon_Type, Parent (Related_Nod));\n          end if;\n \n-      --  Finally, create an itype reference for an object declaration of\n-      --  an anonymous access type. This is strictly necessary only for\n-      --  deferred constants, but in any case will avoid out-of-scope\n-      --  problems in the back-end.\n+      --  Finally, create an itype reference for an object declaration of an\n+      --  anonymous access type. This is strictly necessary only for deferred\n+      --  constants, but in any case will avoid out-of-scope problems in the\n+      --  back-end.\n \n       elsif Nkind (Related_Nod) = N_Object_Declaration then\n          Build_Itype_Reference (Anon_Type, Related_Nod);"}, {"sha": "6019fd9cf91a8617bc49b50e667e65944ed52e59", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=88eb6e62fcba2cb0c92194b4a3dbb29c4385ae75", "patch": "@@ -868,6 +868,8 @@ __gnat_localtime_tzoff (const time_t *timer, long *off)\n \n   (*Unlock_Task) ();\n \n+  /* Correct the offset if Daylight Saving Time is in effect */\n+\n   if (tp.tm_isdst > 0)\n     *off = *off + 3600;\n }\n@@ -902,9 +904,16 @@ __gnat_localtime_tzoff (const time_t *timer, long *off)\n     tz_end = index (tz_start, ':');\n     tz_end = '\\0';\n \n-    /* The Ada layer expects an offset in seconds */\n+    /* The Ada layer expects an offset in seconds. Note that we must reverse\n+       the sign of the result since west is positive and east is negative on\n+       VxWorks targets. */\n+\n+    *off = -atol (tz_start) * 60;\n+\n+    /* Correct the offset if Daylight Saving Time is in effect */\n \n-    *off = atol (tz_start) * 60;\n+    if (tp.tm_isdst > 0)\n+      *off = *off - 3600;\n   }\n \n   (*Unlock_Task) ();"}]}