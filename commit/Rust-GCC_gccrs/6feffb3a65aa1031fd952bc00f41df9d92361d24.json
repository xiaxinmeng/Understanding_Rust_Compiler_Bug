{"sha": "6feffb3a65aa1031fd952bc00f41df9d92361d24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZlZmZiM2E2NWFhMTAzMWZkOTUyYmMwMGY0MWRmOWQ5MjM2MWQyNA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-06-13T16:22:19Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-06-13T16:22:19Z"}, "message": "Remove stale commentary in cp/call.c\n\n\t* call.c: Remove comment documenting the long-deleted\n\tfunction build_method_call.\n\nFrom-SVN: r224456", "tree": {"sha": "b28d0f4a6a30c3d4aceafba7822fa0335cd5140f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b28d0f4a6a30c3d4aceafba7822fa0335cd5140f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6feffb3a65aa1031fd952bc00f41df9d92361d24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6feffb3a65aa1031fd952bc00f41df9d92361d24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6feffb3a65aa1031fd952bc00f41df9d92361d24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6feffb3a65aa1031fd952bc00f41df9d92361d24/comments", "author": null, "committer": null, "parents": [{"sha": "076fecad0db4fb76524af6785b146491d4060dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/076fecad0db4fb76524af6785b146491d4060dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/076fecad0db4fb76524af6785b146491d4060dd4"}], "stats": {"total": 36, "additions": 5, "deletions": 31}, "files": [{"sha": "e1ca26ebeed05408fc4a8e26077eb9b41944ae07", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6feffb3a65aa1031fd952bc00f41df9d92361d24/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6feffb3a65aa1031fd952bc00f41df9d92361d24/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6feffb3a65aa1031fd952bc00f41df9d92361d24", "patch": "@@ -1,3 +1,8 @@\n+2015-06-13  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\t* call.c: Remove comment documenting the long-deleted\n+\tfunction build_method_call.\n+\n 2015-06-13  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/65168"}, {"sha": "2f0c53a739178ad2c371ec936ca0dd1ae6538d06", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6feffb3a65aa1031fd952bc00f41df9d92361d24/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6feffb3a65aa1031fd952bc00f41df9d92361d24/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6feffb3a65aa1031fd952bc00f41df9d92361d24", "patch": "@@ -411,37 +411,6 @@ build_call_a (tree function, int n, tree *argarray)\n   return function;\n }\n \n-/* Build something of the form ptr->method (args)\n-   or object.method (args).  This can also build\n-   calls to constructors, and find friends.\n-\n-   Member functions always take their class variable\n-   as a pointer.\n-\n-   INSTANCE is a class instance.\n-\n-   NAME is the name of the method desired, usually an IDENTIFIER_NODE.\n-\n-   PARMS help to figure out what that NAME really refers to.\n-\n-   BASETYPE_PATH, if non-NULL, contains a chain from the type of INSTANCE\n-   down to the real instance type to use for access checking.  We need this\n-   information to get protected accesses correct.\n-\n-   FLAGS is the logical disjunction of zero or more LOOKUP_\n-   flags.  See cp-tree.h for more info.\n-\n-   If this is all OK, calls build_function_call with the resolved\n-   member function.\n-\n-   This function must also handle being called to perform\n-   initialization, promotion/coercion of arguments, and\n-   instantiation of default parameters.\n-\n-   Note that NAME may refer to an instance variable name.  If\n-   `operator()()' is defined for the type of that field, then we return\n-   that result.  */\n-\n /* New overloading code.  */\n \n typedef struct z_candidate z_candidate;"}]}