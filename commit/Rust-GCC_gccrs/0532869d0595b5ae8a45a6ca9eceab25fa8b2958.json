{"sha": "0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzMjg2OWQwNTk1YjVhZThhNDVhNmNhOWVjZWFiMjVmYThiMjk1OA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-11-04T11:51:09Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-11-04T11:51:09Z"}, "message": "re PR tree-optimization/46213 (gfortran.dg/aliasing_array_result_1.f90 ICE: in vectorizable_reduction, at tree-vect-loop.c:4046 with custom compiler flags)\n\n\n        PR tree-optimization/46213\n        * tree-vect-loop.c (vect_is_simple_reduction_1): Handle \n        MINUS_EXPR only if the first operand is reduction operand.\n\nFrom-SVN: r166306", "tree": {"sha": "e375ba076793adb2ad4aee99238ae93f7d3f40bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e375ba076793adb2ad4aee99238ae93f7d3f40bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4d8d4ea194dd8a360a3e21474296807984fc833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d8d4ea194dd8a360a3e21474296807984fc833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d8d4ea194dd8a360a3e21474296807984fc833"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "2cfb60a0cf0dfd71ff9584290d41c05da351a646", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "patch": "@@ -1,3 +1,9 @@\n+2010-11-04  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/46213\n+\t* tree-vect-loop.c (vect_is_simple_reduction_1): Handle\n+\tMINUS_EXPR only if the first operand is reduction operand.\n+\n 2010-11-04  Richard Guenther  <rguenther@suse.de>\n \tRichard Henderson  <rth@redhat.com>\n "}, {"sha": "66fb730c89124e43dc21a0ef3b822109af786c19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "patch": "@@ -1,3 +1,8 @@\n+2010-11-04  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/46213\n+\t* gfortran.dg/vect/pr46213.f90: New.\n+\n 2010-11-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR testsuite/45702"}, {"sha": "504d1a3cf8413261c60f2661af8df391ea9240e6", "filename": "gcc/testsuite/gfortran.dg/vect/pr46213.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr46213.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr46213.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr46213.f90?ref=0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+! { dg-options \"-O -fno-tree-loop-ivcanon -ftree-vectorize -fno-tree-ccp -fno-tree-ch -finline-small-functions\" }\n+\n+module foo\n+  INTEGER, PARAMETER :: ONE = 1\n+end module foo\n+program test\n+  use foo\n+  integer :: a(ONE), b(ONE), c(ONE), d(ONE)\n+  interface\n+    function h_ext()\n+    end function h_ext\n+  end interface\n+  c = j()\n+  if (any (c .ne. check)) call myabort (7)\n+contains\n+  function j()\n+     integer :: j(ONE), cc(ONE)\n+     j = cc - j\n+  end function j\n+  function get_d()\n+  end function get_d\n+end program test\n+\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "bc87965fa91e95f28938aa58d6fe2b019a4b7387", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0532869d0595b5ae8a45a6ca9eceab25fa8b2958/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=0532869d0595b5ae8a45a6ca9eceab25fa8b2958", "patch": "@@ -1800,7 +1800,11 @@ vect_is_simple_reduction_1 (loop_vec_info loop_info, gimple phi,\n      simply rewriting this into \"res += -x[i]\".  Avoid changing\n      gimple instruction for the first simple tests and only do this\n      if we're allowed to change code at all.  */\n-  if (code == MINUS_EXPR && modify)\n+  if (code == MINUS_EXPR\n+      && modify\n+      && (op1 = gimple_assign_rhs1 (def_stmt))\n+      && TREE_CODE (op1) == SSA_NAME\n+      && SSA_NAME_DEF_STMT (op1) == phi)\n     code = PLUS_EXPR;\n \n   if (check_reduction"}]}