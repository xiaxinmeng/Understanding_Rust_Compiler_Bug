{"sha": "5fd58e56f04a8c90f07dc6059b1126f82fa611b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkNThlNTZmMDRhOGM5MGYwN2RjNjA1OWIxMTI2ZjgyZmE2MTFiNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-13T05:42:40Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-13T05:42:40Z"}, "message": "Add some Solaris support to mksysinfo.sh.\n\nFrom Rainer Orth.\n\nFrom-SVN: r168739", "tree": {"sha": "6ea4c2ccdfa331be96e818f3bd7473ce089e5bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ea4c2ccdfa331be96e818f3bd7473ce089e5bc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fd58e56f04a8c90f07dc6059b1126f82fa611b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd58e56f04a8c90f07dc6059b1126f82fa611b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fd58e56f04a8c90f07dc6059b1126f82fa611b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd58e56f04a8c90f07dc6059b1126f82fa611b6/comments", "author": null, "committer": null, "parents": [{"sha": "cff0c39da10717bec95ae9b1d57d05645f91dea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff0c39da10717bec95ae9b1d57d05645f91dea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff0c39da10717bec95ae9b1d57d05645f91dea9"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "f43db619306fba8b809da93ccc93b5c40e502ebc", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd58e56f04a8c90f07dc6059b1126f82fa611b6/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd58e56f04a8c90f07dc6059b1126f82fa611b6/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=5fd58e56f04a8c90f07dc6059b1126f82fa611b6", "patch": "@@ -8,8 +8,8 @@\n \n # This shell script creates the sysinfo.go file which holds types and\n # constants extracted from the system header files.  This relies on a\n-# hook in gcc: the -ggo option will generate debugging information in\n-# Go syntax.\n+# hook in gcc: the -fdump-go-spec option will generate debugging\n+# information in Go syntax.\n \n # We currently #include all the files at once, which works, but leads\n # to exposing some names which ideally should not be exposed, as they\n@@ -69,11 +69,13 @@ grep -v '^// ' gen-sysinfo.go | \\\n   grep -v '^func' | \\\n   grep -v '^type _timeval ' | \\\n   grep -v '^type _timespec ' | \\\n+  grep -v '^type _timestruc_t ' | \\\n   grep -v '^type _epoll_' | \\\n   grep -v 'in6_addr' | \\\n   grep -v 'sockaddr_in6' | \\\n   sed -e 's/\\([^a-zA-Z0-9_]\\)_timeval\\([^a-zA-Z0-9_]\\)/\\1Timeval\\2/g' \\\n       -e 's/\\([^a-zA-Z0-9_]\\)_timespec\\([^a-zA-Z0-9_]\\)/\\1Timespec\\2/g' \\\n+      -e 's/\\([^a-zA-Z0-9_]\\)_timestruc_t\\([^a-zA-Z0-9_]\\)/\\1Timestruc\\2/g' \\\n     >> ${OUT}\n \n # The errno constants.\n@@ -83,6 +85,9 @@ grep '^const _E' gen-sysinfo.go | \\\n # The O_xxx flags.\n grep '^const _\\(O\\|F\\|FD\\)_' gen-sysinfo.go | \\\n   sed -e 's/^\\(const \\)_\\([^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+if ! grep '^const O_ASYNC' ${OUT} >/dev/null 2>&1; then\n+  echo \"const O_ASYNC = 0\" >> ${OUT}\n+fi\n if ! grep '^const O_CLOEXEC' ${OUT} >/dev/null 2>&1; then\n   echo \"const O_CLOEXEC = 0\" >> ${OUT}\n fi\n@@ -195,9 +200,13 @@ fi\n if ! grep '^const PTRACE_EVENT_EXIT' ${OUT} > /dev/null 2>&1; then\n   echo \"const PTRACE_EVENT_EXIT = 6\" >> ${OUT}\n fi\n+if ! grep '^const _PTRACE_TRACEME' ${OUT} > /dev/null 2>&1; then\n+  echo \"const _PTRACE_TRACEME = 0\" >> ${OUT}\n+fi\n \n # The registers returned by PTRACE_GETREGS.  This is probably\n-# GNU/Linux specific.\n+# GNU/Linux specific; it should do no harm if there is no\n+# _user_regs_struct.\n regs=`grep '^type _user_regs_struct struct' gen-sysinfo.go`\n if test \"$regs\" != \"\"; then\n   regs=`echo $regs | sed -e 's/type _user_regs_struct struct //' -e 's/[{}]//g'`\n@@ -263,6 +272,18 @@ echo $timespec | \\\n       -e 's/tv_sec *[a-zA-Z0-9_]*/Sec Timespec_sec_t/' \\\n       -e 's/tv_nsec *[a-zA-Z0-9_]*/Nsec Timespec_nsec_t/' >> ${OUT}\n \n+timestruc=`grep '^type _timestruc_t ' gen-sysinfo.go || true`\n+if test \"$timestruc\" != \"\"; then\n+  timestruc_sec=`echo $timestruc | sed -n -e 's/^.*tv_sec \\([^ ]*\\);.*$/\\1/p'`\n+  timestruc_nsec=`echo $timestruc | sed -n -e 's/^.*tv_nsec \\([^ ]*\\);.*$/\\1/p'`\n+  echo \"type Timestruc_sec_t $timestruc_sec\" >> ${OUT}\n+  echo \"type Timestruc_nsec_t $timestruc_nsec\" >> ${OUT}\n+  echo $timestruc | \\\n+    sed -e 's/^type _timestruc_t /type Timestruc /' \\\n+        -e 's/tv_sec *[a-zA-Z0-9_]*/Sec Timestruc_sec_t/' \\\n+        -e 's/tv_nsec *[a-zA-Z0-9_]*/Nsec Timestruc_nsec_t/' >> ${OUT}\n+fi\n+\n # The stat type.\n grep 'type _stat ' gen-sysinfo.go | \\\n   sed -e 's/type _stat/type Stat_t/' \\\n@@ -281,6 +302,7 @@ grep 'type _stat ' gen-sysinfo.go | \\\n       -e 's/st_ctim/Ctime/' \\\n       -e 's/\\([^a-zA-Z0-9_]\\)_timeval\\([^a-zA-Z0-9_]\\)/\\1Timeval\\2/g' \\\n       -e 's/\\([^a-zA-Z0-9_]\\)_timespec\\([^a-zA-Z0-9_]\\)/\\1Timespec\\2/g' \\\n+      -e 's/\\([^a-zA-Z0-9_]\\)_timestruc_t\\([^a-zA-Z0-9_]\\)/\\1Timestruc\\2/g' \\\n     >> ${OUT}\n \n # The directory searching types.\n@@ -309,9 +331,10 @@ if test \"$rusage\" != \"\"; then\n     f=`echo $field | sed -e 's/^\\(.\\).*$/\\1/'`\n     r=`echo $field | sed -e 's/^.\\(.*\\)$/\\1/'`\n     f=`echo $f | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`\n-    # Fix _timeval and _timespec.\n+    # Fix _timeval _timespec, and _timestruc_t.\n     r=`echo $r | sed -e s'/ _timeval$/ Timeval/'`\n     r=`echo $r | sed -e s'/ _timespec$/ Timespec/'`\n+    r=`echo $r | sed -e s'/ _timestruc_t$/ Timestruc/'`\n     field=\"$f$r\"\n     nrusage=\"$nrusage $field;\"\n   done"}]}