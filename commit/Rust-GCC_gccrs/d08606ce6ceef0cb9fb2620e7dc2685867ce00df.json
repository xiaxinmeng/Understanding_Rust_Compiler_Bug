{"sha": "d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4NjA2Y2U2Y2VlZjBjYjlmYjI2MjBlN2RjMjY4NTg2N2NlMDBkZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-06-05T09:33:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-06-05T09:33:19Z"}, "message": "Add noexcept to shared_ptr owner comparisons (LWG 2873)\n\n\t* include/bits/shared_ptr_base.h (__shared_ptr::owner_before)\n\t(__weak_ptr::owner_before, _Sp_owner_less::operator()): Add noexcept\n\tspecifiers as per LWG 2873 and LWG 2942.\n\t* testsuite/20_util/owner_less/noexcept.cc: New.\n\t* testsuite/20_util/shared_ptr/observers/owner_before.cc: Test\n\tnoexcept guarantees.\n\t* testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.\n\nFrom-SVN: r248874", "tree": {"sha": "e8c75dfb574ebf28307c5c8ec019a80f59115c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8c75dfb574ebf28307c5c8ec019a80f59115c38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d91561cb51f04fceb0c71858503791edba424aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d91561cb51f04fceb0c71858503791edba424aac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d91561cb51f04fceb0c71858503791edba424aac"}], "stats": {"total": 83, "additions": 70, "deletions": 13}, "files": [{"sha": "4ee4c42c7ea240202d2a84888916dd0fd4be3c33", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "patch": "@@ -1,3 +1,13 @@\n+2017-06-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/shared_ptr_base.h (__shared_ptr::owner_before)\n+\t(__weak_ptr::owner_before, _Sp_owner_less::operator()): Add noexcept\n+\tspecifiers as per LWG 2873 and LWG 2942.\n+\t* testsuite/20_util/owner_less/noexcept.cc: New.\n+\t* testsuite/20_util/shared_ptr/observers/owner_before.cc: Test\n+\tnoexcept guarantees.\n+\t* testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.\n+\n 2017-06-03  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* config/abi/post/powerpc-linux-gnu/baseline_symbols.txt: Update."}, {"sha": "f0916d05a06e1d1efe7020bb6af99b865779ef9b", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "patch": "@@ -1309,12 +1309,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       template<typename _Tp1>\n \tbool\n-\towner_before(__shared_ptr<_Tp1, _Lp> const& __rhs) const\n+\towner_before(__shared_ptr<_Tp1, _Lp> const& __rhs) const noexcept\n \t{ return _M_refcount._M_less(__rhs._M_refcount); }\n \n       template<typename _Tp1>\n \tbool\n-\towner_before(__weak_ptr<_Tp1, _Lp> const& __rhs) const\n+\towner_before(__weak_ptr<_Tp1, _Lp> const& __rhs) const noexcept\n \t{ return _M_refcount._M_less(__rhs._M_refcount); }\n \n     protected:\n@@ -1697,12 +1697,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       template<typename _Tp1>\n \tbool\n-\towner_before(const __shared_ptr<_Tp1, _Lp>& __rhs) const\n+\towner_before(const __shared_ptr<_Tp1, _Lp>& __rhs) const noexcept\n \t{ return _M_refcount._M_less(__rhs._M_refcount); }\n \n       template<typename _Tp1>\n \tbool\n-\towner_before(const __weak_ptr<_Tp1, _Lp>& __rhs) const\n+\towner_before(const __weak_ptr<_Tp1, _Lp>& __rhs) const noexcept\n \t{ return _M_refcount._M_less(__rhs._M_refcount); }\n \n       void\n@@ -1747,15 +1747,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct _Sp_owner_less : public binary_function<_Tp, _Tp, bool>\n     {\n       bool\n-      operator()(const _Tp& __lhs, const _Tp& __rhs) const\n+      operator()(const _Tp& __lhs, const _Tp& __rhs) const noexcept\n       { return __lhs.owner_before(__rhs); }\n \n       bool\n-      operator()(const _Tp& __lhs, const _Tp1& __rhs) const\n+      operator()(const _Tp& __lhs, const _Tp1& __rhs) const noexcept\n       { return __lhs.owner_before(__rhs); }\n \n       bool\n-      operator()(const _Tp1& __lhs, const _Tp& __rhs) const\n+      operator()(const _Tp1& __lhs, const _Tp& __rhs) const noexcept\n       { return __lhs.owner_before(__rhs); }\n     };\n \n@@ -1764,7 +1764,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       template<typename _Tp, typename _Up>\n \tauto\n-\toperator()(const _Tp& __lhs, const _Up& __rhs) const\n+\toperator()(const _Tp& __lhs, const _Up& __rhs) const noexcept\n \t-> decltype(__lhs.owner_before(__rhs))\n \t{ return __lhs.owner_before(__rhs); }\n "}, {"sha": "25c9afde8e15beb9869e3769d54494b5a6a5117e", "filename": "libstdc++-v3/testsuite/20_util/owner_less/noexcept.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fnoexcept.cc?ref=d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "patch": "@@ -0,0 +1,40 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <memory>\n+\n+const std::shared_ptr<int> si;\n+const std::weak_ptr<int> wi;\n+const std::owner_less<std::shared_ptr<int>> osi;\n+static_assert( noexcept(osi(si, si)), \"\" );\n+static_assert( noexcept(osi(si, wi)), \"\" );\n+static_assert( noexcept(osi(wi, si)), \"\" );\n+const std::owner_less<std::weak_ptr<int>> owi;\n+static_assert( noexcept(owi(wi, wi)), \"\" );\n+static_assert( noexcept(owi(si, wi)), \"\" );\n+static_assert( noexcept(owi(wi, si)), \"\" );\n+const std::shared_ptr<long> sl;\n+const std::weak_ptr<char> wc;\n+const std::owner_less<void> ov;\n+static_assert( noexcept(ov(si, si)), \"\" );\n+static_assert( noexcept(ov(si, sl)), \"\" );\n+static_assert( noexcept(ov(sl, si)), \"\" );\n+static_assert( noexcept(ov(si, wc)), \"\" );\n+static_assert( noexcept(ov(wc, si)), \"\" );\n+static_assert( noexcept(ov(wc, wi)), \"\" );"}, {"sha": "f7e53f1d4324792d35df083a0425e223521b8bdf", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/observers/owner_before.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fowner_before.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fowner_before.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fobservers%2Fowner_before.cc?ref=d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "patch": "@@ -67,6 +67,12 @@ test02()\n   VERIFY( !a1.owner_before(w1) && !w1.owner_before(a1) );\n   std::weak_ptr<A> w2(a2);\n   VERIFY( !b1.owner_before(w2) && !w2.owner_before(b1) );\n+\n+  static_assert( noexcept(a1.owner_before(a0)), \"\" );\n+  static_assert( noexcept(a1.owner_before(b1)), \"\" );\n+  static_assert( noexcept(b1.owner_before(a1)), \"\" );\n+  static_assert( noexcept(a1.owner_before(w1)), \"\" );\n+  static_assert( noexcept(b1.owner_before(w1)), \"\" );\n }\n \n // Aliasing"}, {"sha": "45f84dbf22767d6e216bdf017375bfa45c1a7a96", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/observers/owner_before.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08606ce6ceef0cb9fb2620e7dc2685867ce00df/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc?ref=d08606ce6ceef0cb9fb2620e7dc2685867ce00df", "patch": "@@ -27,7 +27,7 @@ struct B { };\n \n // 20.6.6.3.5 weak_ptr observers [util.smartptr.weak.obs]\n \n-int\n+void\n test01()\n {\n   // test empty weak_ptrs compare equivalent\n@@ -38,11 +38,14 @@ test01()\n   std::shared_ptr<B> p3;\n   VERIFY( !p1.owner_before(p3) && !p3.owner_before(p1) );\n \n-  return 0;\n+  static_assert( noexcept(p1.owner_before(p1)), \"\" );\n+  static_assert( noexcept(p1.owner_before(p2)), \"\" );\n+  static_assert( noexcept(p1.owner_before(p3)), \"\" );\n+  static_assert( noexcept(p2.owner_before(p1)), \"\" );\n }\n \n \n-int\n+void\n test02()\n {\n   std::shared_ptr<A> a0;\n@@ -60,8 +63,6 @@ test02()\n \n   std::shared_ptr<B> b1(new B);\n   VERIFY( w1.owner_before(b1) || b1.owner_before(w1) );\n-\n-  return 0;\n }\n \n int "}]}