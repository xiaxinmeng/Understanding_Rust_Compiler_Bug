{"sha": "1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4OWE3ZTk1OTY2NjJkMWE4YjkxYjgwNzQ1ZGZhNTFlOTliYmZiOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2012-01-27T16:18:53Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2012-01-27T16:18:53Z"}, "message": "gcc.pot: Regenerate.\n\ngcc/po:\n\t* gcc.pot: Regenerate.\n\nlibcpp/po:\n\t* cpplib.pot: Regenerate.\n\nFrom-SVN: r183634", "tree": {"sha": "5a6a4b799efdecd3c4fda1e69e35eb9024d1b1a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a6a4b799efdecd3c4fda1e69e35eb9024d1b1a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "136049275038111ec39775a11970db0fd2769f96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136049275038111ec39775a11970db0fd2769f96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136049275038111ec39775a11970db0fd2769f96"}], "stats": {"total": 18882, "additions": 10511, "deletions": 8371}, "files": [{"sha": "2ee65190c11c07ea55e45ab32e923b4071f50e71", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "patch": "@@ -1,3 +1,7 @@\n+2012-01-27  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2011-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* EXCLUDES (gthr-aix.h, gthr-dce.h, gthr-posix.c, gthr-posix.h)"}, {"sha": "107b6a2d5e0a1effccd20e2c86340063e56bf6d6", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 10351, "deletions": 8223, "changes": 18574, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=1f89a7e9596662d1a8b91b80745dfa51e99bbfb8"}, {"sha": "6dadcb7d83645481bac454ad1ab36430e168a4c4", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "patch": "@@ -1,3 +1,7 @@\n+2012-01-27  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2011-07-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* be.po, ca.po, da.po, de.po, el.po, es.po, fi.po, fr.po, id.po,"}, {"sha": "06c2b7f37cfb93e596c08d63110c692174690c1c", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 152, "deletions": 148, "changes": 300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f89a7e9596662d1a8b91b80745dfa51e99bbfb8/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=1f89a7e9596662d1a8b91b80745dfa51e99bbfb8", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2011-06-21 10:30+0000\\n\"\n+\"POT-Creation-Date: 2012-01-27 16:12+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -75,7 +75,7 @@ msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n #: charset.c:1056\n-#: lex.c:1041\n+#: lex.c:1052\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n@@ -273,143 +273,143 @@ msgstr \"\"\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1065\n #: directives.c:1067\n #: directives.c:1069\n+#: directives.c:1071\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1093\n+#: directives.c:1095\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1156\n+#: directives.c:1158\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1165\n+#: directives.c:1167\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1183\n+#: directives.c:1185\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1186\n+#: directives.c:1188\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1189\n+#: directives.c:1191\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1219\n+#: directives.c:1221\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1460\n+#: directives.c:1462\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1483\n+#: directives.c:1485\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1538\n+#: directives.c:1540\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1593\n+#: directives.c:1595\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1602\n+#: directives.c:1604\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1621\n+#: directives.c:1623\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1646\n+#: directives.c:1648\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1650\n+#: directives.c:1652\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1835\n+#: directives.c:1837\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:1956\n+#: directives.c:1958\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:1961\n+#: directives.c:1963\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:1963\n-#: directives.c:1996\n+#: directives.c:1965\n+#: directives.c:1998\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:1989\n+#: directives.c:1991\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:1994\n+#: directives.c:1996\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:2032\n+#: directives.c:2034\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2112\n+#: directives.c:2114\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2127\n+#: directives.c:2129\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2147\n+#: directives.c:2149\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2174\n+#: directives.c:2176\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2177\n+#: directives.c:2179\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2263\n+#: directives.c:2265\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2554\n+#: directives.c:2556\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:222\n-#: lex.c:2069\n+#: lex.c:2133\n #: traditional.c:163\n msgid \"unterminated comment\"\n msgstr \"\"\n@@ -423,215 +423,219 @@ msgstr \"\"\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:282\n+#: expr.c:424\n msgid \"too many decimal points in number\"\n msgstr \"\"\n \n-#: expr.c:311\n-#: expr.c:396\n+#: expr.c:453\n+#: expr.c:547\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:324\n+#: expr.c:466\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in binary constant\"\n msgstr \"\"\n \n-#: expr.c:326\n+#: expr.c:468\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in octal constant\"\n msgstr \"\"\n \n-#: expr.c:334\n+#: expr.c:476\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:339\n+#: expr.c:481\n msgid \"no digits in hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:343\n+#: expr.c:485\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:352\n+#: expr.c:494\n msgid \"exponent has no digits\"\n msgstr \"\"\n \n-#: expr.c:359\n+#: expr.c:501\n msgid \"hexadecimal floating constants require an exponent\"\n msgstr \"\"\n \n-#: expr.c:365\n+#: expr.c:515\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:375\n-#: expr.c:425\n+#: expr.c:526\n+#: expr.c:585\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:383\n+#: expr.c:534\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:389\n+#: expr.c:540\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:400\n+#: expr.c:551\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:410\n+#: expr.c:569\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:433\n+#: expr.c:593\n msgid \"use of C++0x long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:434\n+#: expr.c:594\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:448\n+#: expr.c:608\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:451\n+#: expr.c:611\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:544\n+#: expr.c:704\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:575\n+#: expr.c:735\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:670\n+#: expr.c:830\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:677\n+#: expr.c:837\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:685\n+#: expr.c:845\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:695\n+#: expr.c:855\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:756\n+#: expr.c:914\n+msgid \"user-defined literal in preprocessor expression\"\n+msgstr \"\"\n+\n+#: expr.c:919\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:762\n+#: expr.c:925\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:809\n+#: expr.c:972\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:821\n+#: expr.c:984\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:824\n+#: expr.c:987\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:957\n-#: expr.c:986\n+#: expr.c:1120\n+#: expr.c:1149\n #, c-format\n msgid \"missing binary operator before token \\\"%s\\\"\"\n msgstr \"\"\n \n-#: expr.c:977\n+#: expr.c:1140\n #, c-format\n msgid \"token \\\"%s\\\" is not valid in preprocessor expressions\"\n msgstr \"\"\n \n-#: expr.c:994\n+#: expr.c:1157\n msgid \"missing expression between '(' and ')'\"\n msgstr \"\"\n \n-#: expr.c:997\n+#: expr.c:1160\n #, c-format\n msgid \"%s with no expression\"\n msgstr \"\"\n \n-#: expr.c:1000\n+#: expr.c:1163\n #, c-format\n msgid \"operator '%s' has no right operand\"\n msgstr \"\"\n \n-#: expr.c:1005\n+#: expr.c:1168\n #, c-format\n msgid \"operator '%s' has no left operand\"\n msgstr \"\"\n \n-#: expr.c:1031\n+#: expr.c:1194\n msgid \" ':' without preceding '?'\"\n msgstr \"\"\n \n-#: expr.c:1059\n+#: expr.c:1222\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1079\n+#: expr.c:1242\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1180\n+#: expr.c:1343\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1209\n+#: expr.c:1372\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1219\n+#: expr.c:1382\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1224\n+#: expr.c:1387\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1256\n+#: expr.c:1419\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1261\n+#: expr.c:1424\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1520\n+#: expr.c:1683\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1603\n+#: expr.c:1766\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1739\n+#: expr.c:1902\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -667,271 +671,271 @@ msgstr \"\"\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1306\n+#: files.c:1305\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:489\n+#: init.c:512\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:493\n+#: init.c:516\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:500\n+#: init.c:523\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:503\n+#: init.c:526\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:507\n+#: init.c:530\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:511\n+#: init.c:534\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:516\n+#: init.c:539\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:520\n+#: init.c:543\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:835\n+#: lex.c:846\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:840\n+#: lex.c:851\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:856\n+#: lex.c:867\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:864\n+#: lex.c:875\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:913\n+#: lex.c:924\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:971\n+#: lex.c:982\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:980\n+#: lex.c:991\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:1017\n+#: lex.c:1028\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:1020\n+#: lex.c:1031\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:1088\n-#: lex.c:1165\n+#: lex.c:1099\n+#: lex.c:1176\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:1096\n-#: lex.c:1173\n+#: lex.c:1107\n+#: lex.c:1184\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1102\n-#: lex.c:1179\n+#: lex.c:1113\n+#: lex.c:1190\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1323\n+#: lex.c:1334\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1326\n+#: lex.c:1337\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1449\n-#: lex.c:1471\n+#: lex.c:1460\n+#: lex.c:1482\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1578\n+#: lex.c:1601\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:1581\n+#: lex.c:1604\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2080\n+#: lex.c:2144\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:2082\n+#: lex.c:2146\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:2087\n+#: lex.c:2151\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:2407\n+#: lex.c:2471\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: macro.c:87\n+#: macro.c:188\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:126\n-#: macro.c:321\n+#: macro.c:226\n+#: macro.c:423\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:160\n+#: macro.c:260\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:256\n+#: macro.c:358\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:272\n+#: macro.c:374\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:430\n+#: macro.c:532\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:490\n+#: macro.c:592\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:565\n+#: macro.c:682\n msgid \"ISO C99 requires rest arguments to be used\"\n msgstr \"\"\n \n-#: macro.c:570\n+#: macro.c:687\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:575\n+#: macro.c:692\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:734\n+#: macro.c:886\n #: traditional.c:681\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:866\n+#: macro.c:1026\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1040\n+#: macro.c:1694\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO \"\n \"C90 and ISO C++98\"\n msgstr \"\"\n \n-#: macro.c:1506\n+#: macro.c:2596\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1552\n+#: macro.c:2642\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1560\n+#: macro.c:2650\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:1577\n+#: macro.c:2667\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:1595\n+#: macro.c:2685\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:1600\n+#: macro.c:2690\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:1609\n+#: macro.c:2699\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1658\n+#: macro.c:2748\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:1693\n+#: macro.c:2783\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1717\n+#: macro.c:2807\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1751\n+#: macro.c:2841\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:1909\n+#: macro.c:2999\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:1915\n+#: macro.c:3005\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:1976\n+#: macro.c:3066\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:2003\n+#: macro.c:3093\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\""}]}