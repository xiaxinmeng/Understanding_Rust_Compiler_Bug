{"sha": "c4d5763224c7817ad5cb671e651e69b2708d49f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRkNTc2MzIyNGM3ODE3YWQ1Y2I2NzFlNjUxZTY5YjI3MDhkNDlmMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-02-12T12:23:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-02-12T12:23:08Z"}, "message": "asan.c (asan_expand_mark_ifn): Take into account the alignment of the object to pick the size of stores on...\n\n\t* asan.c (asan_expand_mark_ifn): Take into account the alignment of\n\tthe object to pick the size of stores on strict-alignment platforms.\n\n\t* config/sparc/sparc.md (*movsi_insn): Minor tweak.\n\t(*movdi_insn_sp32): Likewise.\n\t(*movdi_insn_sp64): Likewise.\n\nFrom-SVN: r268792", "tree": {"sha": "984a6629a81e3e7fba97e199c1de44dd7ac97c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/984a6629a81e3e7fba97e199c1de44dd7ac97c73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4d5763224c7817ad5cb671e651e69b2708d49f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d5763224c7817ad5cb671e651e69b2708d49f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d5763224c7817ad5cb671e651e69b2708d49f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d5763224c7817ad5cb671e651e69b2708d49f0/comments", "author": null, "committer": null, "parents": [{"sha": "baaf860b3364f2efac1cb04a1430f82f867768ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baaf860b3364f2efac1cb04a1430f82f867768ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baaf860b3364f2efac1cb04a1430f82f867768ef"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "c962c691dc35b722d674bdc526d717d446afc66c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d5763224c7817ad5cb671e651e69b2708d49f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d5763224c7817ad5cb671e651e69b2708d49f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4d5763224c7817ad5cb671e651e69b2708d49f0", "patch": "@@ -1,3 +1,12 @@\n+2019-02-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* asan.c (asan_expand_mark_ifn): Take into account the alignment of\n+\tthe object to pick the size of stores on strict-alignment platforms.\n+\n+\t* config/sparc/sparc.md (*movsi_insn): Minor tweak.\n+\t(*movdi_insn_sp32): Likewise.\n+\t(*movdi_insn_sp64): Likewise.\n+\n 2019-02-12  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/88777"}, {"sha": "65b12473c00d1c7bdc09853622edb6b0075ffc74", "filename": "gcc/asan.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d5763224c7817ad5cb671e651e69b2708d49f0/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d5763224c7817ad5cb671e651e69b2708d49f0/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=c4d5763224c7817ad5cb671e651e69b2708d49f0", "patch": "@@ -3218,17 +3218,22 @@ asan_expand_mark_ifn (gimple_stmt_iterator *iter)\n   /* Generate direct emission if size_in_bytes is small.  */\n   if (size_in_bytes <= ASAN_PARAM_USE_AFTER_SCOPE_DIRECT_EMISSION_THRESHOLD)\n     {\n-      unsigned HOST_WIDE_INT shadow_size = shadow_mem_size (size_in_bytes);\n+      const unsigned HOST_WIDE_INT shadow_size\n+\t= shadow_mem_size (size_in_bytes);\n+      const unsigned int shadow_align\n+\t= (get_pointer_alignment (base) / BITS_PER_UNIT) >> ASAN_SHADOW_SHIFT;\n \n       tree shadow = build_shadow_mem_access (iter, loc, base_addr,\n \t\t\t\t\t     shadow_ptr_types[0], true);\n \n       for (unsigned HOST_WIDE_INT offset = 0; offset < shadow_size;)\n \t{\n \t  unsigned size = 1;\n-\t  if (shadow_size - offset >= 4)\n+\t  if (shadow_size - offset >= 4\n+\t      && (!STRICT_ALIGNMENT || shadow_align >= 4))\n \t    size = 4;\n-\t  else if (shadow_size - offset >= 2)\n+\t  else if (shadow_size - offset >= 2\n+\t\t   && (!STRICT_ALIGNMENT || shadow_align >= 2))\n \t    size = 2;\n \n \t  unsigned HOST_WIDE_INT last_chunk_size = 0;"}, {"sha": "8a5fbf59f67f01ce263e074250b51df3c7f7a460", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d5763224c7817ad5cb671e651e69b2708d49f0/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d5763224c7817ad5cb671e651e69b2708d49f0/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=c4d5763224c7817ad5cb671e651e69b2708d49f0", "patch": "@@ -1681,8 +1681,8 @@\n })\n \n (define_insn \"*movsi_insn\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r, m, r,*f,*f,*f, m,d,d\")\n-\t(match_operand:SI 1 \"input_operand\"        \"rI,K,m,rJ,*f, r, f, m,*f,J,P\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r, m, r,*f,?*f,?*f,  m,d,d\")\n+\t(match_operand:SI 1 \"input_operand\"        \"rI,K,m,rJ,*f, r,  f,  m,?*f,J,P\"))]\n   \"register_operand (operands[0], SImode)\n    || register_or_zero_or_all_ones_operand (operands[1], SImode)\"\n   \"@\n@@ -1839,9 +1839,9 @@\n \n (define_insn \"*movdi_insn_sp32\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\t    \"=T,o,U,T,r,o,r,r,?*f,?T,?*f,?o,?*e,?*e,  r,?*f,?*e,?T,*b,*b\")\n+\t\t\t    \"=T,o,U,T,r,o,r,r,?*f,  T,?*f,  o,?*e,?*e,  r,?*f,?*e,  T,*b,*b\")\n         (match_operand:DI 1 \"input_operand\"\n-\t\t\t    \" J,J,T,U,o,r,i,r,  T,*f,  o,*f, *e, *e,?*f,  r,  T,*e, J, P\"))]\n+\t\t\t    \" J,J,T,U,o,r,i,r,  T,?*f,  o,?*f, *e, *e,?*f,  r,  T,?*e, J, P\"))]\n   \"TARGET_ARCH32\n    && (register_operand (operands[0], DImode)\n        || register_or_zero_operand (operands[1], DImode))\"\n@@ -1875,8 +1875,8 @@ visl\")\n    (set_attr \"lra\" \"*,*,disabled,disabled,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*\")])\n \n (define_insn \"*movdi_insn_sp64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r, m, r,*e,?*e,?*e,?W,b,b\")\n-        (match_operand:DI 1 \"input_operand\"        \"rI,N,m,rJ,*e, r, *e,  W,*e,J,P\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r, m, r,*e,?*e,?*e,  W,b,b\")\n+        (match_operand:DI 1 \"input_operand\"        \"rI,N,m,rJ,*e, r, *e,  W,?*e,J,P\"))]\n   \"TARGET_ARCH64\n    && (register_operand (operands[0], DImode)\n        || register_or_zero_or_all_ones_operand (operands[1], DImode))\""}]}