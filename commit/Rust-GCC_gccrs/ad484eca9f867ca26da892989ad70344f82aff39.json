{"sha": "ad484eca9f867ca26da892989ad70344f82aff39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0ODRlY2E5Zjg2N2NhMjZkYTg5Mjk4OWFkNzAzNDRmODJhZmYzOQ==", "commit": {"author": {"name": "Ray Donnelly", "email": "mingw.android@gmail.com", "date": "2014-06-01T19:09:59Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2014-06-01T19:09:59Z"}, "message": "pex-win32.c (argv_to_cmdline): Don't quote args unnecessarily\n\n2014-06-01  Ray Donnelly  <mingw.android@gmail.com>\n\n        * pex-win32.c (argv_to_cmdline): Don't quote\n        args unnecessarily\n\nFrom-SVN: r211116", "tree": {"sha": "3fdc9812d3b8d61e4d1628a7706ada6274ba8b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fdc9812d3b8d61e4d1628a7706ada6274ba8b0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad484eca9f867ca26da892989ad70344f82aff39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad484eca9f867ca26da892989ad70344f82aff39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad484eca9f867ca26da892989ad70344f82aff39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad484eca9f867ca26da892989ad70344f82aff39/comments", "author": {"login": "mingwandroid", "id": 1042804, "node_id": "MDQ6VXNlcjEwNDI4MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1042804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingwandroid", "html_url": "https://github.com/mingwandroid", "followers_url": "https://api.github.com/users/mingwandroid/followers", "following_url": "https://api.github.com/users/mingwandroid/following{/other_user}", "gists_url": "https://api.github.com/users/mingwandroid/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingwandroid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingwandroid/subscriptions", "organizations_url": "https://api.github.com/users/mingwandroid/orgs", "repos_url": "https://api.github.com/users/mingwandroid/repos", "events_url": "https://api.github.com/users/mingwandroid/events{/privacy}", "received_events_url": "https://api.github.com/users/mingwandroid/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "8390e4c784154bb823b6eb20451e4bfb57915c2b", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad484eca9f867ca26da892989ad70344f82aff39/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad484eca9f867ca26da892989ad70344f82aff39/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ad484eca9f867ca26da892989ad70344f82aff39", "patch": "@@ -1,3 +1,8 @@\n+2014-06-01  Ray Donnelly  <mingw.android@gmail.com>\n+\n+\t* pex-win32.c (argv_to_cmdline): Don't quote\n+\targs unnecessarily\n+\n 2014-05-28  Pedro Alves  <palves@redhat.com>\n \n \t* cp-demangle.c (d_dump): Handle DEMANGLE_COMPONENT_FUNCTION_PARAM"}, {"sha": "8b9d4f04900c5ef556fe6f0a6ce089ae7121e32f", "filename": "libiberty/pex-win32.c", "status": "modified", "additions": 37, "deletions": 9, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad484eca9f867ca26da892989ad70344f82aff39/libiberty%2Fpex-win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad484eca9f867ca26da892989ad70344f82aff39/libiberty%2Fpex-win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-win32.c?ref=ad484eca9f867ca26da892989ad70344f82aff39", "patch": "@@ -340,17 +340,25 @@ argv_to_cmdline (char *const *argv)\n   char *p;\n   size_t cmdline_len;\n   int i, j, k;\n+  int needs_quotes;\n \n   cmdline_len = 0;\n   for (i = 0; argv[i]; i++)\n     {\n-      /* We quote every last argument.  This simplifies the problem;\n-\t we need only escape embedded double-quotes and immediately\n+      /* We only quote arguments that contain spaces, \\t or \" characters to\n+\t prevent wasting 2 chars per argument of the CreateProcess 32k char\n+\t limit.  We need only escape embedded double-quotes and immediately\n \t preceeding backslash characters.  A sequence of backslach characters\n \t that is not follwed by a double quote character will not be\n \t escaped.  */\n+      needs_quotes = 0;\n       for (j = 0; argv[i][j]; j++)\n \t{\n+\t  if (argv[i][j] == ' ' || argv[i][j] == '\\t' || argv[i][j] == '\"')\n+\t    {\n+\t      needs_quotes = 1;\n+\t    }\n+\n \t  if (argv[i][j] == '\"')\n \t    {\n \t      /* Escape preceeding backslashes.  */\n@@ -362,16 +370,33 @@ argv_to_cmdline (char *const *argv)\n \t}\n       /* Trailing backslashes also need to be escaped because they will be\n          followed by the terminating quote.  */\n-      for (k = j - 1; k >= 0 && argv[i][k] == '\\\\'; k--)\n-\tcmdline_len++;\n+      if (needs_quotes)\n+        {\n+          for (k = j - 1; k >= 0 && argv[i][k] == '\\\\'; k--)\n+            cmdline_len++;\n+        }\n       cmdline_len += j;\n-      cmdline_len += 3;  /* for leading and trailing quotes and space */\n+      /* for leading and trailing quotes and space */\n+      cmdline_len += needs_quotes * 2 + 1;\n     }\n   cmdline = XNEWVEC (char, cmdline_len);\n   p = cmdline;\n   for (i = 0; argv[i]; i++)\n     {\n-      *p++ = '\"';\n+      needs_quotes = 0;\n+      for (j = 0; argv[i][j]; j++)\n+        {\n+          if (argv[i][j] == ' ' || argv[i][j] == '\\t' || argv[i][j] == '\"')\n+            {\n+              needs_quotes = 1;\n+              break;\n+            }\n+        }\n+\n+      if (needs_quotes)\n+        {\n+          *p++ = '\"';\n+        }\n       for (j = 0; argv[i][j]; j++)\n \t{\n \t  if (argv[i][j] == '\"')\n@@ -382,9 +407,12 @@ argv_to_cmdline (char *const *argv)\n \t    }\n \t  *p++ = argv[i][j];\n \t}\n-      for (k = j - 1; k >= 0 && argv[i][k] == '\\\\'; k--)\n-\t*p++ = '\\\\';\n-      *p++ = '\"';\n+      if (needs_quotes)\n+        {\n+          for (k = j - 1; k >= 0 && argv[i][k] == '\\\\'; k--)\n+            *p++ = '\\\\';\n+          *p++ = '\"';\n+        }\n       *p++ = ' ';\n     }\n   p[-1] = '\\0';"}]}