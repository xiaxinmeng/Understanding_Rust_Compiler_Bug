{"sha": "43e1c5f7205aa500b7ce2d21c51aff439d86704b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNlMWM1ZjcyMDVhYTUwMGI3Y2UyZDIxYzUxYWZmNDM5ZDg2NzA0Yg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-04-08T10:56:59Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-04-08T10:56:59Z"}, "message": "re PR fortran/17229 (parser confused by arithmetic if inside an if)\n\n\tPR fortran/17229\n\n\t* match.c (gfc_match_arithmetic_if): New function to match an\n\tarithmetic IF statement.\n\t(gfc_match_if): Use gfc_match_arithmetic_if to match an\n\tarithmetic IF statement embedded in a simple IF statement.\n\n\t* gfortran.dg/pr17229.f: New test.\n\nFrom-SVN: r97825", "tree": {"sha": "5eaf3ff77e851b8c3bc1b44dda144967413a2c86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eaf3ff77e851b8c3bc1b44dda144967413a2c86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43e1c5f7205aa500b7ce2d21c51aff439d86704b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e1c5f7205aa500b7ce2d21c51aff439d86704b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43e1c5f7205aa500b7ce2d21c51aff439d86704b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e1c5f7205aa500b7ce2d21c51aff439d86704b/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66beb87a64238f7bc90dbfa6311d2b2faa10845e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66beb87a64238f7bc90dbfa6311d2b2faa10845e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66beb87a64238f7bc90dbfa6311d2b2faa10845e"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "3169f33d0fdff59b940e3166bfde393dace68850", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=43e1c5f7205aa500b7ce2d21c51aff439d86704b", "patch": "@@ -1,3 +1,11 @@\n+2005-04-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/17229\n+\t* match.c (gfc_match_arithmetic_if): New function to match an\n+\tarithmetic IF statement.\n+\t(gfc_match_if): Use gfc_match_arithmetic_if to match an\n+\tarithmetic IF statement embedded in a simple IF statement.\n+\n 2005-04-07  Steven G. Kargl  <kargls@comcast.net>\n \n \t* simplify.c (gfc_simplify_exponent): Fix exponent(tiny(x))"}, {"sha": "f2b531165c7a24ab9f062692a4f110c723619107", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=43e1c5f7205aa500b7ce2d21c51aff439d86704b", "patch": "@@ -899,6 +899,39 @@ gfc_match_pointer_assignment (void)\n }\n \n \n+/* We try to match an easy arithmetic IF statement. This only happens\n+ * when just after having encountered a simple IF statement. This code\n+ * is really duplicate with parts of the gfc_match_if code, but this is\n+ * *much* easier.  */\n+match\n+gfc_match_arithmetic_if (void)\n+{\n+  gfc_st_label *l1, *l2, *l3;\n+  gfc_expr *expr;\n+  match m;\n+\n+  m = gfc_match (\" ( %e ) %l , %l , %l%t\", &expr, &l1, &l2, &l3);\n+  if (m != MATCH_YES)\n+    return m;\n+\n+  if (gfc_reference_st_label (l1, ST_LABEL_TARGET) == FAILURE\n+      || gfc_reference_st_label (l2, ST_LABEL_TARGET) == FAILURE\n+      || gfc_reference_st_label (l3, ST_LABEL_TARGET) == FAILURE)\n+    {\n+      gfc_free_expr (expr);\n+      return MATCH_ERROR;\n+    }\n+\n+  new_st.op = EXEC_ARITHMETIC_IF;\n+  new_st.expr = expr;\n+  new_st.label = l1;\n+  new_st.label2 = l2;\n+  new_st.label3 = l3;\n+\n+  return MATCH_YES;\n+}\n+\n+\n /* The IF statement is a bit of a pain.  First of all, there are three\n    forms of it, the simple IF, the IF that starts a block and the\n    arithmetic IF.\n@@ -1036,6 +1069,7 @@ gfc_match_if (gfc_statement * if_type)\n     match (\"exit\", gfc_match_exit, ST_EXIT)\n     match (\"forall\", match_simple_forall, ST_FORALL)\n     match (\"go to\", gfc_match_goto, ST_GOTO)\n+    match (\"if\", gfc_match_arithmetic_if, ST_ARITHMETIC_IF)\n     match (\"inquire\", gfc_match_inquire, ST_INQUIRE)\n     match (\"nullify\", gfc_match_nullify, ST_NULLIFY)\n     match (\"open\", gfc_match_open, ST_OPEN)"}, {"sha": "1eae0ac082846e84a2f385e145489ffc305f4e0f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43e1c5f7205aa500b7ce2d21c51aff439d86704b", "patch": "@@ -1,3 +1,8 @@\n+2005-04-06  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/17229\n+\t* gfortran.dg/pr17229.f: New test.\n+\n 2005-04-07  Steven G. Kargl  <kargls@comcast.net>\n \n \t* gfortran.dg/tiny_1.f90: New test."}, {"sha": "b1a4471e410ac1df7c77bbb39bb92a11bc1b7372", "filename": "gcc/testsuite/gfortran.dg/pr17229.f", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17229.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43e1c5f7205aa500b7ce2d21c51aff439d86704b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17229.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17229.f?ref=43e1c5f7205aa500b7ce2d21c51aff439d86704b", "patch": "@@ -0,0 +1,23 @@\n+! PR fortran/17229\n+! { dg-do run }\n+      integer i\n+      logical l\n+\n+      l = .false.\n+      i = -1\n+      if (l) if (i) 999,999,999\n+\n+      l = .true.\n+      if (l) if (i) 10,999,999\n+      go to 999\n+\n+   10 i = 0\n+      if (l) if (i) 999,20,999\n+      go to 999\n+\n+   20 i = 1\n+      if (l) if (i) 999,999,30\n+      go to 999\n+\n+  999 call abort\n+   30 end"}]}