{"sha": "8be49eb927e1e65a715bc6eb73b9ce271c8b24c2", "node_id": "C_kwDOANBUbNoAKDhiZTQ5ZWI5MjdlMWU2NWE3MTViYzZlYjczYjljZTI3MWM4YjI0YzI", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2023-03-03T18:59:33Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2023-03-03T19:06:46Z"}, "message": "[libstdc++] [prettyprint] add local std::string use to more tests\n\nWe're getting regressions after ugprading to GDB 13 in a few of the\nlibstdc++ pretty-printing tests.  It might seem like a GDB regression,\nbut that update has a new symbol reader, and Tom Tromey says it\nexposes a latent problem in the pretty-printer, namely, when a name is\nnot defined locally in the local translation unit, GDB will look for\nit in other units, and if multiple different definitions are\navailable, there are no guarantees as to which one it will find.\n\nSince libstdc++ contains units in which std::string maps to different\ntypes, in order to ensure the tests get the std::string definition we\nexpect, we need std::string to be present in the debug information for\nthe test itself, as we already do in other tests.\n\n\nfor  libstdc++-v3/ChangeLog\n\n\t* testsuite/libstdc++-prettyprinters/80276.cc: Add\n\tstd::string to debug info.\n\t* testsuite/libstdc++-prettyprinters/libfundts.cc: Likewise.", "tree": {"sha": "dd2f3e9629770df50a61081612fab7debd195279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd2f3e9629770df50a61081612fab7debd195279"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2/comments", "author": null, "committer": null, "parents": [{"sha": "21edd841611a97442a6b95e8ec7e91ff8fd3a451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21edd841611a97442a6b95e8ec7e91ff8fd3a451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21edd841611a97442a6b95e8ec7e91ff8fd3a451"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "1d6b0207106a6f7d5dae0d7f9f8bb27190998705", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/80276.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc?ref=8be49eb927e1e65a715bc6eb73b9ce271c8b24c2", "patch": "@@ -36,6 +36,11 @@ int\n main()\n {\n   using namespace std;\n+  // Ensure debug info for std::string is issued in the local\n+  // translation unit, so that GDB won't pick up any alternate\n+  // std::string notion that might be present in libstdc++.so.\n+  string bah = \"hi\";\n+  (void)bah;\n   unique_ptr<vector<unique_ptr<vector<int>*>>> p1;\n   unique_ptr<vector<unique_ptr<set<int>*>>[]> p2;\n   unique_ptr<set<unique_ptr<vector<int>*>>[10]> p3;"}, {"sha": "29e8bc8f194e316e46113b3c61a8b3eec52a7cc0", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/libfundts.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be49eb927e1e65a715bc6eb73b9ce271c8b24c2/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc?ref=8be49eb927e1e65a715bc6eb73b9ce271c8b24c2", "patch": "@@ -32,6 +32,12 @@ using std::experimental::string_view;\n int\n main()\n {\n+  // Ensure debug info for std::string is issued in the local\n+  // translation unit, so that GDB won't pick up any alternate\n+  // std::string notion that might be present in libstdc++.so.\n+  std::string bah = \"hi\";\n+  (void)bah;\n+\n   string_view str = \"string\";\n // { dg-final { note-test str \"\\\"string\\\"\" } }\n "}]}