{"sha": "caa8b3c687ebe2959c5499894986e0df3d07fdb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FhOGIzYzY4N2ViZTI5NTljNTQ5OTg5NDk4NmUwZGYzZDA3ZmRiNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-06-22T13:57:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-06-22T13:57:06Z"}, "message": "move.h (swap(_Tp (&)[_Nm], _Tp (&)[_Nm])): Add, per DR 809.\n\n2008-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/move.h (swap(_Tp (&)[_Nm], _Tp (&)[_Nm])): Add,\n\tper DR 809.\n\t* include/bits/algorithmfwd.h: Add.\n\t* doc/xml/manual/intro.xml: Add an entry for DR 809.\n\t* testsuite/25_algorithms/swap/dr809.cc: New.\n\n\t* testsuite/25_algorithms/swap/requirements/explicit_instantiation/\n\t2.cc: Remove stray empty line.\n\nFrom-SVN: r137012", "tree": {"sha": "b79c3afb32eb8cd0727eed65e48fb88f1d84bf90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b79c3afb32eb8cd0727eed65e48fb88f1d84bf90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caa8b3c687ebe2959c5499894986e0df3d07fdb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa8b3c687ebe2959c5499894986e0df3d07fdb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caa8b3c687ebe2959c5499894986e0df3d07fdb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa8b3c687ebe2959c5499894986e0df3d07fdb7/comments", "author": null, "committer": null, "parents": [{"sha": "404013583b95cc5bf345667c345990b8c85e5911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404013583b95cc5bf345667c345990b8c85e5911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/404013583b95cc5bf345667c345990b8c85e5911"}], "stats": {"total": 100, "additions": 93, "deletions": 7}, "files": [{"sha": "26b94e578ec91f32100876167b3bba66d5e96ccf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=caa8b3c687ebe2959c5499894986e0df3d07fdb7", "patch": "@@ -1,3 +1,14 @@\n+2008-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/move.h (swap(_Tp (&)[_Nm], _Tp (&)[_Nm])): Add,\n+\tper DR 809.\n+\t* include/bits/algorithmfwd.h: Add.\n+\t* doc/xml/manual/intro.xml: Add an entry for DR 809.\n+\t* testsuite/25_algorithms/swap/dr809.cc: New.\n+\n+\t* testsuite/25_algorithms/swap/requirements/explicit_instantiation/\n+\t2.cc: Remove stray empty line.\n+\n 2008-06-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/stl_move.h: Rename to move.h."}, {"sha": "1176fd65096e1fec20b9c53c58acec787f92f7c5", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=caa8b3c687ebe2959c5499894986e0df3d07fdb7", "patch": "@@ -685,6 +685,12 @@\n     <listitem><para>In C++0x mode, add std::proj.\n     </para></listitem></varlistentry>\n \n+    <varlistentry><term><ulink url=\"../ext/lwg-active.html#809\">809</ulink>:\n+        <emphasis>std::swap should be overloaded for array types</emphasis>\n+    </term>\n+    <listitem><para>Add the overload.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry><term><ulink url=\"../ext/lwg-active.html#844\">844</ulink>:\n         <emphasis>complex pow return type is ambiguous</emphasis>\n     </term>"}, {"sha": "b4d2ee795ea7d0964314202c13e097253555126e", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=caa8b3c687ebe2959c5499894986e0df3d07fdb7", "patch": "@@ -1,6 +1,6 @@\n // <algorithm> declarations  -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -392,6 +392,10 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     void \n     swap(_Tp&, _Tp&);\n \n+  template<typename _Tp, size_t _Nm>\n+    void\n+    swap(_Tp (&)[_Nm], _Tp (&)[_Nm]);\n+\n   template<typename _FIter1, typename _FIter2>\n     _FIter2 \n     swap_ranges(_FIter1, _FIter1, _FIter2);"}, {"sha": "d3b5d688ab288e695fb732bce3cea2e012b114ad", "filename": "libstdc++-v3/include/bits/move.h", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h?ref=caa8b3c687ebe2959c5499894986e0df3d07fdb7", "patch": "@@ -1,6 +1,6 @@\n // Move, forward and identity for C++0x + swap -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,15 +27,16 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file stl_move.h\n+/** @file move.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _STL_MOVE_H\n-#define _STL_MOVE_H 1\n+#ifndef _MOVE_H\n+#define _MOVE_H 1\n \n #include <bits/c++config.h>\n+#include <cstddef>\n #include <bits/concept_check.h>\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n@@ -87,6 +88,16 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       __b = _GLIBCXX_MOVE(__tmp);\n     }\n \n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // DR 809. std::swap should be overloaded for array types.\n+  template<typename _Tp, size_t _Nm>\n+    inline void\n+    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])\n+    {\n+      for (size_t __n = 0; __n < _Nm; ++__n)\n+\tswap(__a[__n], __b[__n]);\n+    }\n+\n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _STL_MOVE_H */\n+#endif /* _MOVE_H */"}, {"sha": "d0e99d2bc99bf82fade82ff75291a9f715373000", "filename": "libstdc++-v3/testsuite/25_algorithms/swap/dr809.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Fdr809.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Fdr809.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Fdr809.cc?ref=caa8b3c687ebe2959c5499894986e0df3d07fdb7", "patch": "@@ -0,0 +1,55 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <string>\n+#include <algorithm>\n+\n+template<class T>\n+  class W\n+  {\n+  public:\n+    T data;\n+  };\n+\n+template<class T>\n+  void\n+  swap(W<T>& x, W<T>& y)\n+  {\n+    using std::swap;\n+    swap(x.data, y.data);\n+  }\n+\n+// DR 809. std::swap should be overloaded for array types.\n+void test01()\n+{\n+  W<std::string[8]> w1, w2;  // Two objects of a Swappable type.\n+    \n+  using std::swap;\n+  swap(w1, w2);\n+}"}, {"sha": "0b098dd7fecc7da089318590a04c9fd8fc12f06e", "filename": "libstdc++-v3/testsuite/25_algorithms/swap/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa8b3c687ebe2959c5499894986e0df3d07fdb7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=caa8b3c687ebe2959c5499894986e0df3d07fdb7", "patch": "@@ -1,4 +1,3 @@\n-\n // { dg-do compile }\n \n // 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>"}]}