{"sha": "8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ3NDAzMzA4MWZmNDgxNWMyZmY5MmRkODM3MWM2NTBkN2JkMWI3Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-30T02:33:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-30T02:33:27Z"}, "message": "re PR middle-end/19689 (ICE in store_bit_field, at expmed.c)\n\n        PR middle-end/19689\n        * expr.c (store_field): Don't strip sub-mode cast when the input\n        data is even smaller.\n\nFrom-SVN: r94429", "tree": {"sha": "a17b3c109913e98389dfb0d728464f79bd38a700", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a17b3c109913e98389dfb0d728464f79bd38a700"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d74033081ff4815c2ff92dd8371c650d7bd1b7c/comments", "author": null, "committer": null, "parents": [{"sha": "486e432615e3a3e526044f3002db03a0ddbc04b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486e432615e3a3e526044f3002db03a0ddbc04b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486e432615e3a3e526044f3002db03a0ddbc04b5"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "c56c728da91c015ab2cffc1e9690fbd80965b6de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d74033081ff4815c2ff92dd8371c650d7bd1b7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d74033081ff4815c2ff92dd8371c650d7bd1b7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "patch": "@@ -1,3 +1,9 @@\n+2005-01-29  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/19689\n+\t* expr.c (store_field): Don't strip sub-mode cast when the input\n+\tdata is even smaller.\n+\n 2005-01-29  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/19687"}, {"sha": "ab7cf930d8b95e8dd85a974590fba537e0648d30", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d74033081ff4815c2ff92dd8371c650d7bd1b7c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d74033081ff4815c2ff92dd8371c650d7bd1b7c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "patch": "@@ -5226,12 +5226,18 @@ store_field (rtx target, HOST_WIDE_INT bitsize, HOST_WIDE_INT bitpos,\n \t the field we're storing into, that mask is redundant.  This is\n \t particularly common with bit field assignments generated by the\n \t C front end.  */\n-      if (TREE_CODE (exp) == NOP_EXPR\n-\t  && INTEGRAL_TYPE_P (TREE_TYPE (exp))\n-\t  && (TYPE_PRECISION (TREE_TYPE (exp))\n-\t      < GET_MODE_BITSIZE (TYPE_MODE (TREE_TYPE (exp))))\n-\t  && bitsize == TYPE_PRECISION (TREE_TYPE (exp)))\n-\texp = TREE_OPERAND (exp, 0);\n+      if (TREE_CODE (exp) == NOP_EXPR)\n+\t{\n+\t  tree type = TREE_TYPE (exp);\n+\t  if (INTEGRAL_TYPE_P (type)\n+\t      && TYPE_PRECISION (type) < GET_MODE_BITSIZE (TYPE_MODE (type))\n+\t      && bitsize == TYPE_PRECISION (type))\n+\t    {\n+\t      type = TREE_TYPE (TREE_OPERAND (exp, 0));\n+\t      if (INTEGRAL_TYPE_P (type) && TYPE_PRECISION (type) >= bitsize)\n+\t\texp = TREE_OPERAND (exp, 0);\n+\t    }\n+\t}\n \n       temp = expand_expr (exp, NULL_RTX, VOIDmode, 0);\n "}, {"sha": "608415f3693a57bae540e3c68d7dceb9cabe24fa", "filename": "gcc/testsuite/gcc.c-torture/execute/pr19689.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d74033081ff4815c2ff92dd8371c650d7bd1b7c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d74033081ff4815c2ff92dd8371c650d7bd1b7c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr19689.c?ref=8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "patch": "@@ -0,0 +1,19 @@\n+extern void abort (void);\n+\n+struct\n+{\n+  int b : 29;\n+} f;\n+\n+void foo (short j)\n+{\n+  f.b = j;\n+}\n+\n+int main()\n+{\n+  foo (-55);\n+  if (f.b != -55)\n+    abort ();\n+  return 0;\n+}"}]}