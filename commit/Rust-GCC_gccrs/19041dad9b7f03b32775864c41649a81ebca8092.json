{"sha": "19041dad9b7f03b32775864c41649a81ebca8092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkwNDFkYWQ5YjdmMDNiMzI3NzU4NjRjNDE2NDlhODFlYmNhODA5Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-12-01T21:17:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-12-01T21:17:32Z"}, "message": "* doc/extend.texi: Mention C++14 library complex suffix.\n\nFrom-SVN: r255339", "tree": {"sha": "02970b0337186989d95f1b6de40b655c34ec0425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02970b0337186989d95f1b6de40b655c34ec0425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19041dad9b7f03b32775864c41649a81ebca8092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19041dad9b7f03b32775864c41649a81ebca8092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19041dad9b7f03b32775864c41649a81ebca8092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19041dad9b7f03b32775864c41649a81ebca8092/comments", "author": null, "committer": null, "parents": [{"sha": "b3e862e09c0adb5dfaae2f538f19dc72948d040b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e862e09c0adb5dfaae2f538f19dc72948d040b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e862e09c0adb5dfaae2f538f19dc72948d040b"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "3d5e15c9744132a1feb3ae9270e14645480d1408", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19041dad9b7f03b32775864c41649a81ebca8092/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19041dad9b7f03b32775864c41649a81ebca8092/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=19041dad9b7f03b32775864c41649a81ebca8092", "patch": "@@ -897,6 +897,10 @@ conforming C library (such as the GNU C Library), and want to construct complex\n constants of floating type, you should include @code{<complex.h>} and\n use the macros @code{I} or @code{_Complex_I} instead.\n \n+The ISO C++14 library also defines the @samp{i} suffix, so C++14 code\n+that includes the @samp{<complex>} header cannot use @samp{i} for the\n+GNU extension.  The @samp{j} suffix still has the GNU meaning.\n+\n @cindex @code{__real__} keyword\n @cindex @code{__imag__} keyword\n To extract the real part of a complex-valued expression @var{exp}, write"}]}