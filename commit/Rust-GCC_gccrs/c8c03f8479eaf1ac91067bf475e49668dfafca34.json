{"sha": "c8c03f8479eaf1ac91067bf475e49668dfafca34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhjMDNmODQ3OWVhZjFhYzkxMDY3YmY0NzVlNDk2NjhkZmFmY2EzNA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2005-05-14T00:42:46Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2005-05-14T00:42:46Z"}, "message": "re PR libgcj/21557 (Hash synchronization: Thread.interrupt() can make _Jv_MonitorEnter hang)\n\n2005-05-13  Bryce McKinlay  <mckinlay@redhat.com>\n\n\tPR libgcj/21557\n\t* java/lang/natObject.cc (_Jv_MonitorEnter): Save and clear thread\n\tinterrupt status flag if _Jv_CondWait is interrupted.\n\nFrom-SVN: r99687", "tree": {"sha": "be69ae4c147f570a75735439b574986f1129c19b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be69ae4c147f570a75735439b574986f1129c19b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8c03f8479eaf1ac91067bf475e49668dfafca34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c03f8479eaf1ac91067bf475e49668dfafca34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c03f8479eaf1ac91067bf475e49668dfafca34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c03f8479eaf1ac91067bf475e49668dfafca34/comments", "author": null, "committer": null, "parents": [{"sha": "77d0a09d7fafa06b6933335db6778882430da8c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d0a09d7fafa06b6933335db6778882430da8c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d0a09d7fafa06b6933335db6778882430da8c0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "ac60b212b063104cfc6fed231560e9d2f8150719", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c03f8479eaf1ac91067bf475e49668dfafca34/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c03f8479eaf1ac91067bf475e49668dfafca34/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c8c03f8479eaf1ac91067bf475e49668dfafca34", "patch": "@@ -1,3 +1,9 @@\n+2005-05-13  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\tPR libgcj/21557\n+\t* java/lang/natObject.cc (_Jv_MonitorEnter): Save and clear thread\n+\tinterrupt status flag if _Jv_CondWait is interrupted.\n+\n 2005-05-13  Tom Tromey  <tromey@redhat.com>\n \n \t* gnu/gcj/runtime/SystemClassLoader.java (init): Handle empty"}, {"sha": "aa79500fa585ca8603f6f946a5a216158e00bc9b", "filename": "libjava/java/lang/natObject.cc", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c03f8479eaf1ac91067bf475e49668dfafca34/libjava%2Fjava%2Flang%2FnatObject.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c03f8479eaf1ac91067bf475e49668dfafca34/libjava%2Fjava%2Flang%2FnatObject.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatObject.cc?ref=c8c03f8479eaf1ac91067bf475e49668dfafca34", "patch": "@@ -35,6 +35,8 @@ details.  */\n \n \f\n \n+using namespace java::lang;\n+\n // This is used to represent synchronization information.\n struct _Jv_SyncInfo\n {\n@@ -926,12 +928,22 @@ _Jv_MonitorEnter (jobject obj)\n \t  release_set(&(he -> address), (address | REQUEST_CONVERSION | HEAVY));\n \t\t\t\t// release lock on he\n \t  LOG(REQ_CONV, (address | REQUEST_CONVERSION | HEAVY), self);\n+\t  // If _Jv_CondWait is interrupted, we ignore the interrupt, but\n+\t  // restore the thread's interrupt status flag when done.\n+\t  jboolean interrupt_flag = false;\n \t  while ((he -> address & ~FLAGS) == (address & ~FLAGS))\n \t    {\n \t      // Once converted, the lock has to retain heavyweight\n-\t      // status, since heavy_count > 0 . \n-\t      _Jv_CondWait (&(hl->si.condition), &(hl->si.mutex), 0, 0);\n+\t      // status, since heavy_count > 0.\n+\t      int r = _Jv_CondWait (&(hl->si.condition), &(hl->si.mutex), 0, 0);\n+\t      if (r == _JV_INTERRUPTED)\n+\t        {\n+\t\t  interrupt_flag = true;\n+\t\t  Thread::currentThread()->interrupt_flag = false;\n+\t\t}\n \t    }\n+\t  if (interrupt_flag)\n+\t    Thread::currentThread()->interrupt_flag = interrupt_flag;\n \t  keep_live(addr);\n \t\t// Guarantee that hl doesn't get unlinked by finalizer.\n \t\t// This is only an issue if the client fails to release"}]}