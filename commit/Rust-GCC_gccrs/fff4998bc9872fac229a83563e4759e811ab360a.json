{"sha": "fff4998bc9872fac229a83563e4759e811ab360a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZmNDk5OGJjOTg3MmZhYzIyOWE4MzU2M2U0NzU5ZTgxMWFiMzYwYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-03-01T20:34:12Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-03-01T20:34:12Z"}, "message": "Define ASM_OUTPUT_ALIGNED_BSS\n\nFrom-SVN: r11397", "tree": {"sha": "0e52f51f5112e8609835ce5bac90b58d0ed52130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e52f51f5112e8609835ce5bac90b58d0ed52130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fff4998bc9872fac229a83563e4759e811ab360a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff4998bc9872fac229a83563e4759e811ab360a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff4998bc9872fac229a83563e4759e811ab360a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff4998bc9872fac229a83563e4759e811ab360a/comments", "author": null, "committer": null, "parents": [{"sha": "cac58785f71c9ba3fd3de7e1dd065b0cf539936a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac58785f71c9ba3fd3de7e1dd065b0cf539936a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac58785f71c9ba3fd3de7e1dd065b0cf539936a"}], "stats": {"total": 80, "additions": 51, "deletions": 29}, "files": [{"sha": "a043e3eaec2929265df4bde6737c083f60d05a46", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff4998bc9872fac229a83563e4759e811ab360a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff4998bc9872fac229a83563e4759e811ab360a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=fff4998bc9872fac229a83563e4759e811ab360a", "patch": "@@ -282,10 +282,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Use ELF style section commands.  */\n \n #undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP\t\"\\t.section\\t\\\".text\\\"\"\n+#define TEXT_SECTION_ASM_OP\t\"\\t.section \\\".text\\\"\"\n \n #undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP\t\"\\t.section\\t\\\".data\\\"\"\n+#define DATA_SECTION_ASM_OP\t\"\\t.section \\\".data\\\"\"\n+\n+#undef BSS_SECTION_ASM_OP\n+#define BSS_SECTION_ASM_OP\t\"\\t.section \\\".bss\\\"\"\n \n /* Besides the usual ELF sections, we need a toc section.  */\n #undef EXTRA_SECTIONS\n@@ -350,12 +353,12 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define TOC_SECTION_ASM_OP \"\\t.section\\t\\\".got\\\",\\\"aw\\\"\"\n-#define MINIMAL_TOC_SECTION_ASM_OP \"\\t.section\\t\\\".got1\\\",\\\"aw\\\"\"\n+#define TOC_SECTION_ASM_OP \"\\t.section \\\".got\\\",\\\"aw\\\"\"\n+#define MINIMAL_TOC_SECTION_ASM_OP \"\\t.section \\\".got1\\\",\\\"aw\\\"\"\n \n-#define SDATA_SECTION_ASM_OP \"\\t.section\\t\\\".sdata\\\",\\\"aw\\\"\"\n-#define SDATA2_SECTION_ASM_OP \"\\t.section\\t\\\".sdata2\\\",\\\"a\\\"\"\n-#define SBSS_SECTION_ASM_OP \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\",@nobits\"\n+#define SDATA_SECTION_ASM_OP \"\\t.section \\\".sdata\\\",\\\"aw\\\"\"\n+#define SDATA2_SECTION_ASM_OP \"\\t.section \\\".sdata2\\\",\\\"a\\\"\"\n+#define SBSS_SECTION_ASM_OP \"\\t.section \\\".sbss\\\",\\\"aw\\\",@nobits\"\n \n #define SDATA_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n@@ -517,19 +520,20 @@ extern int rs6000_pic_labelno;\n #define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if (TARGET_SDATA && (SIZE) > 0 && (SIZE) <= g_switch_value)\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      sbss_section ();\t\t\t\t\t\t\t\\\n-      ASM_OUTPUT_ALIGN (FILE, exact_log2 (ALIGN / BITS_PER_UNIT));\t\\\n-      ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-      ASM_OUTPUT_SKIP (FILE, SIZE);\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+    sbss_section ();\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"\\t%s\\t\", LOCAL_ASM_OP);\t\t\t\t\\\n-      assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-      fprintf ((FILE), \"\\n\");\t\t\t\t\t\t\\\n-      ASM_OUTPUT_ALIGNED_COMMON (FILE, NAME, SIZE, ALIGN);\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+    bss_section ();\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  ASM_OUTPUT_ALIGN (FILE, exact_log2 (ALIGN / BITS_PER_UNIT));\t\t\\\n+  ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n+  ASM_OUTPUT_SKIP (FILE, SIZE);\t\t\t\t\t\t\\\n+} while (0)\n+\n+/* Describe how to emit unitialized external linkage items  */\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, NAME, SIZE, ALIGN)\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\t\t\\\n+  ASM_OUTPUT_ALIGNED_LOCAL (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n } while (0)\n \n /* Pass various options to the assembler */\n@@ -589,7 +593,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       fprintf (FILE, \"\\t.long (\");\t\t\t\t\t\\\n       output_addr_const (FILE, (VALUE));\t\t\t\t\\\n       fprintf (FILE, \")@fixup\\n\");\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.section\\t\\\".fixup\\\",\\\"aw\\\"\\n\");\t\t\\\n+      fprintf (FILE, \"\\t.section \\\".fixup\\\",\\\"aw\\\"\\n\");\t\t\t\\\n       ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\t\\\n       fprintf (FILE, \"\\t.long\\t%s\\n\", p);\t\t\t\t\\\n       fprintf (FILE, \"\\t.previous\\n\");\t\t\t\t\t\\"}, {"sha": "c8356343df578e0a231764b00bb1346d5af73b22", "filename": "gcc/config/rs6000/win-nt.h", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff4998bc9872fac229a83563e4759e811ab360a/gcc%2Fconfig%2Frs6000%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff4998bc9872fac229a83563e4759e811ab360a/gcc%2Fconfig%2Frs6000%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fwin-nt.h?ref=fff4998bc9872fac229a83563e4759e811ab360a", "patch": "@@ -138,7 +138,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef\tREADONLY_DATA_SECTION\n #undef\tEXTRA_SECTIONS\n-#define EXTRA_SECTIONS toc, bss\n+#define EXTRA_SECTIONS toc\n \n /* Define the routines to implement these extra sections.  */\n \n@@ -180,14 +180,28 @@ toc_section ()\t\t\t\t\t\t\\\n        fprintf ((FILE), \",%d\\n\", (SIZE)); } while (0)\n \n /* This says how to output an assembler line\n-   to define a local common symbol.  */\n-\n-#undef ASM_OUTPUT_LOCAL\n-#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE,ROUNDED)\t\\\n-  do { fputs (\"\\t.lcomm \\t\", (FILE));\t\t\t\\\n-       assemble_name ((FILE), (NAME));\t\t\t\\\n-       fprintf ((FILE), \",%d\\n\", (SIZE));               \\\n-     } while (0)\n+   to define an aligned local common symbol.  */\n+\n+#undef ASM_OUTPUT_ALIGNED_LOCAL\n+#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  bss_section ();\t\t\t\t\t\t\t\\\n+  ASM_OUTPUT_ALIGN (FILE, exact_log2 (ALIGN / BITS_PER_UNIT));\t\t\\\n+  ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n+  ASM_OUTPUT_SKIP (FILE, SIZE);\t\t\t\t\t\t\\\n+} while (0)\n+\n+/* Describe how to emit unitialized external linkage items  */\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, NAME, SIZE, ALIGN)\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\t\t\\\n+  ASM_OUTPUT_ALIGNED_LOCAL (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n+} while (0)\n+\n+/* This says out to put a global symbol in the BSS section */\n+#undef ASM_OUTPUT_ALIGNED_BSS\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, NAME, SIZE, ALIGN) \\\n+  asm_output_aligned_bss ((FILE), (NAME), (SIZE), (ALIGN))\n \n \n /* Stuff to force fit us into the Motorola PPC assembler */\n@@ -321,6 +335,10 @@ toc_section ()\t\t\t\t\t\t\\\n #undef DATA_SECTION_ASM_OP\n #define DATA_SECTION_ASM_OP \"\\t.data\"\n \n+/* Output to the bss section.  */\n+#undef BSS_SECTION_ASM_OP\n+#define BSS_SECTION_ASM_OP \"\\t.section .bss\"\n+\n /* Text to write out after a CALL that may be replaced by glue code by\n    the loader.  The motorola asm demands that, for dll support, a .znop\n    be issued after a bl instruction, and the symbol on the .znop is the"}]}