{"sha": "830976a1de6c15df6498dcd91b36e1fdd549945a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMwOTc2YTFkZTZjMTVkZjY0OThkY2Q5MWIzNmUxZmRkNTQ5OTQ1YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-02T18:22:09Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-02T18:22:09Z"}, "message": "20030731-1.c: Use -std=gnu89.\n\n\t* gcc.dg/tree-ssa/20030731-1.c: Use -std=gnu89.\n\t* gcc.dg/tree-ssa/20030729-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030807-8.c: Likewise.\n\t* gcc.dg/tree-ssa/20040326-1.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp27.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ccp-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-dom-thread-4.c: Likewise.\n\t* gcc.dg/tree-ssa/20040302-1.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp09.c: Likewise.\n\t* gcc.dg/tree-ssa/inline-7.c: Likewise.\n\t* gcc.dg/tree-ssa/attr-alias.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre8.c: Likewise.\n\t* gcc.dg/tree-ssa/20041008-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030917-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030917-2.c: Likewise.\n\t* gcc.dg/tree-ssa/20030530-2.c: Add function declarations.\n\t* gcc.dg/tree-ssa/20030708-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030709-2.c: Likewise.\n\t* gcc.dg/tree-ssa/20030710-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030711-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030711-2.c: Likewise.\n\t* gcc.dg/tree-ssa/20030711-3.c: Likewise.\n\t* gcc.dg/tree-ssa/20030728-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030731-2.c: Likewise.\n\t* gcc.dg/tree-ssa/20030807-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030807-3.c: Likewise.\n\t* gcc.dg/tree-ssa/20030807-7.c: Likewise.\n\t* gcc.dg/tree-ssa/20030807-9.c: Likewise.\n\t* gcc.dg/tree-ssa/20030814-2.c: Likewise.\n\t* gcc.dg/tree-ssa/20030814-3.c: Likewise.\n\t* gcc.dg/tree-ssa/20030814-4.c: Likewise.\n\t* gcc.dg/tree-ssa/20030814-5.c: Likewise.\n\t* gcc.dg/tree-ssa/20030820-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030820-2.c: Likewise.\n\t* gcc.dg/tree-ssa/20030821-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20031022-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20040209-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20040211-1.c: Likewise.\n\t* gcc.dg/tree-ssa/alias-13.c: Likewise.\n\t* gcc.dg/tree-ssa/alias-28.c: Likewise.\n\t* gcc.dg/tree-ssa/asm-3.c: Likewise.\n\t* gcc.dg/tree-ssa/coalesce-1.c: Likewise.\n\t* gcc.dg/tree-ssa/foldstring-1.c: Likewise.\n\t* gcc.dg/tree-ssa/forwprop-25.c: Likewise.\n\t* gcc.dg/tree-ssa/forwprop-26.c: Likewise.\n\t* gcc.dg/tree-ssa/isolate-3.c: Likewise.\n\t* gcc.dg/tree-ssa/isolate-5.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre7.c: Likewise.\n\t* gcc.dg/tree-ssa/pr22117.c: Likewise.\n\t* gcc.dg/tree-ssa/pr23744.c: Likewise.\n\t* gcc.dg/tree-ssa/pr24117.c: Likewise.\n\t* gcc.dg/tree-ssa/pr24840.c: Likewise.\n\t* gcc.dg/tree-ssa/pr25734.c: Likewise.\n\t* gcc.dg/tree-ssa/pr33723.c: Likewise.\n\t* gcc.dg/tree-ssa/pr33920.c: Likewise.\n\t* gcc.dg/tree-ssa/pr34146-2.c: Likewise.\n\t* gcc.dg/tree-ssa/pr34146.c: Likewise.\n\t* gcc.dg/tree-ssa/pr38385.c: Likewise.\n\t* gcc.dg/tree-ssa/pr49642-1.c: Likewise.\n\t* gcc.dg/tree-ssa/pr49642-2.c: Likewise.\n\t* gcc.dg/tree-ssa/pr59597.c: Likewise.\n\t* gcc.dg/tree-ssa/sra-1.c: Likewise.\n\t* gcc.dg/tree-ssa/sra-2.c: Likewise.\n\t* gcc.dg/tree-ssa/sra-5.c: Likewise.\n\t* gcc.dg/tree-ssa/sra-6.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ccp-10.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ccp-31.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-14.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-29.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-vrp-thread-1.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp46.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp56.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp67.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp72.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp73.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp75.c: Likewise.\n\t* gcc.dg/tree-ssa/20030611-1.c: Fix defaulting to int.\n\t* gcc.dg/tree-ssa/20030703-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20030807-11.c: Likewise.\n\t* gcc.dg/tree-ssa/20030917-3.c: Likewise.\n\t* gcc.dg/tree-ssa/20040121-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20040216-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20040319-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20040326-2.c: Likewise.\n\t* gcc.dg/tree-ssa/20040729-1.c: Likewise.\n\t* gcc.dg/tree-ssa/attr-alias-2.c: Likewise.\n\t* gcc.dg/tree-ssa/cunroll-1.c: Likewise.\n\t* gcc.dg/tree-ssa/cunroll-3.c: Likewise.\n\t* gcc.dg/tree-ssa/cunroll-5.c: Likewise.\n\t* gcc.dg/tree-ssa/foldconst-4.c: Likewise.\n\t* gcc.dg/tree-ssa/foldconst-5.c: Likewise.\n\t* gcc.dg/tree-ssa/ifc-4.c: Likewise.\n\t* gcc.dg/tree-ssa/ifc-6.c: Likewise.\n\t* gcc.dg/tree-ssa/inline-10.c: Likewise.\n\t* gcc.dg/tree-ssa/inline-9.c: Likewise.\n\t* gcc.dg/tree-ssa/ipa-cp-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ipa-split-5.c: Likewise.\n\t* gcc.dg/tree-ssa/local-pure-const.c: Likewise.\n\t* gcc.dg/tree-ssa/nonzero-1.c: Likewise.\n\t* gcc.dg/tree-ssa/pr23434.c: Likewise.\n\t* gcc.dg/tree-ssa/pr33922.c: Likewise.\n\t* gcc.dg/tree-ssa/scev-3.c: Likewise.\n\t* gcc.dg/tree-ssa/scev-4.c: Likewise.\n\t* gcc.dg/tree-ssa/scev-5.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-dce-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-dse-4.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-dse-9.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp01.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp02.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp03.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp04.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp05.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp07.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp08.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp10.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp11.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp14.c: Likewise.\n\t* gcc.dg/tree-ssa/wholeprogram-1.c: Likewise.\n\t* gcc.dg/tree-ssa/writeonly.c: Likewise.\n\t* gcc.dg/tree-ssa/20030807-2.c: Add function declarations.  Fix\n\tdefaulting to int.\n\t* gcc.dg/tree-ssa/20030814-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20050719-1.c: Likewise.\n\t* gcc.dg/tree-ssa/20070302-1.c: Likewise.\n\t* gcc.dg/tree-ssa/builtin-expect-1.c: Likewise.\n\t* gcc.dg/tree-ssa/builtin-expect-2.c: Likewise.\n\t* gcc.dg/tree-ssa/builtin-expect-3.c: Likewise.\n\t* gcc.dg/tree-ssa/builtin-expect-4.c: Likewise.\n\t* gcc.dg/tree-ssa/builtin-expect-5.c: Likewise.\n\t* gcc.dg/tree-ssa/cunroll-2.c: Likewise.\n\t* gcc.dg/tree-ssa/cunroll-4.c: Likewise.\n\t* gcc.dg/tree-ssa/cunroll-9.c: Likewise.\n\t* gcc.dg/tree-ssa/foldconst-2.c: Likewise.\n\t* gcc.dg/tree-ssa/foldconst-3.c: Likewise.\n\t* gcc.dg/tree-ssa/forwprop-28.c: Likewise.\n\t* gcc.dg/tree-ssa/inline-5.c: Likewise.\n\t* gcc.dg/tree-ssa/inline-6.c: Likewise.\n\t* gcc.dg/tree-ssa/ipa-split-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ipa-split-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ivopts-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ivopts-3.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-20.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-38.c: Likewise.\n\t* gcc.dg/tree-ssa/pr20913.c: Likewise.\n\t* gcc.dg/tree-ssa/pr21582.c: Likewise.\n\t* gcc.dg/tree-ssa/pr24670.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-ccp-12.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp06.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp12.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp13.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp23.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp24.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp25.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp55.c: Likewise.\n\t* gcc.dg/tree-ssa/recip-6.c: Fix typo.\n\nFrom-SVN: r215816", "tree": {"sha": "9d930e36daa804741a17c633103423c97d85ae49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d930e36daa804741a17c633103423c97d85ae49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/830976a1de6c15df6498dcd91b36e1fdd549945a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830976a1de6c15df6498dcd91b36e1fdd549945a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830976a1de6c15df6498dcd91b36e1fdd549945a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830976a1de6c15df6498dcd91b36e1fdd549945a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "091b2ce040ca00e4d98551ea1e30c55f0b8d9b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091b2ce040ca00e4d98551ea1e30c55f0b8d9b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091b2ce040ca00e4d98551ea1e30c55f0b8d9b45"}], "stats": {"total": 469, "additions": 431, "deletions": 38}, "files": [{"sha": "d90b8f3c801751f5a121995f9f6acc6089e9b176", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,3 +1,161 @@\n+2014-10-02  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/20030731-1.c: Use -std=gnu89.\n+\t* gcc.dg/tree-ssa/20030729-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030807-8.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040326-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp27.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ccp-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040302-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp09.c: Likewise.\n+\t* gcc.dg/tree-ssa/inline-7.c: Likewise.\n+\t* gcc.dg/tree-ssa/attr-alias.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre8.c: Likewise.\n+\t* gcc.dg/tree-ssa/20041008-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030917-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030917-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030530-2.c: Add function declarations.\n+\t* gcc.dg/tree-ssa/20030708-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030709-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030710-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030711-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030711-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030711-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030728-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030731-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030807-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030807-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030807-7.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030807-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030814-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030814-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030814-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030814-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030820-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030820-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030821-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20031022-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040209-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040211-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/alias-13.c: Likewise.\n+\t* gcc.dg/tree-ssa/alias-28.c: Likewise.\n+\t* gcc.dg/tree-ssa/asm-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/coalesce-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/foldstring-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/forwprop-25.c: Likewise.\n+\t* gcc.dg/tree-ssa/forwprop-26.c: Likewise.\n+\t* gcc.dg/tree-ssa/isolate-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/isolate-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre7.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr22117.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr23744.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr24117.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr24840.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr25734.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr33723.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr33920.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr34146-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr34146.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr38385.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr49642-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr49642-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr59597.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ccp-10.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ccp-31.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-14.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-29.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-vrp-thread-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp46.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp56.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp67.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp72.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp73.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp75.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030611-1.c: Fix defaulting to int.\n+\t* gcc.dg/tree-ssa/20030703-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030807-11.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030917-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040121-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040216-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040319-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040326-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/20040729-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/attr-alias-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/foldconst-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/foldconst-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/ifc-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/ifc-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/inline-10.c: Likewise.\n+\t* gcc.dg/tree-ssa/inline-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/ipa-cp-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ipa-split-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/local-pure-const.c: Likewise.\n+\t* gcc.dg/tree-ssa/nonzero-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr23434.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr33922.c: Likewise.\n+\t* gcc.dg/tree-ssa/scev-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/scev-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/scev-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-dce-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-dse-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-dse-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp01.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp02.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp03.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp04.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp05.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp07.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp08.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp10.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp11.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp14.c: Likewise.\n+\t* gcc.dg/tree-ssa/wholeprogram-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/writeonly.c: Likewise.\n+\t* gcc.dg/tree-ssa/20030807-2.c: Add function declarations.  Fix\n+\tdefaulting to int.\n+\t* gcc.dg/tree-ssa/20030814-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20050719-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/20070302-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/builtin-expect-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/builtin-expect-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/builtin-expect-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/builtin-expect-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/builtin-expect-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/foldconst-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/foldconst-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/forwprop-28.c: Likewise.\n+\t* gcc.dg/tree-ssa/inline-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/inline-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/ipa-split-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ipa-split-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ivopts-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ivopts-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-20.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-38.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr20913.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr21582.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr24670.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-ccp-12.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp06.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp12.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp13.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp23.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp24.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp25.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp55.c: Likewise.\n+\t* gcc.dg/tree-ssa/recip-6.c: Fix typo.\n+\n 2014-10-02  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/tm/20091013.c: Fix defaulting to int."}, {"sha": "c16196b3d17b6118b478edf8956f8c3fb3662262", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030530-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030530-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030530-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030530-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -7,6 +7,7 @@ typedef struct rs6000_stack {\n } rs6000_stack_t;\n extern char regs_ever_live[113];\n extern rs6000_stack_t *rs6000_stack_info (void);\n+extern void gen_rtx_REG (int);\n void\n rs6000_emit_prologue (int i, rs6000_stack_t *info)\n {"}, {"sha": "c419094ddc9c5a5ee9458d4771ddca14ba7803c8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030611-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030611-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030611-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030611-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n  \n extern int square (int) __attribute__ ((__const__));\n+int\n shit(int a)\n {\n   return square (a) + square (a);"}, {"sha": "8a397732792ddf54074183d2c558dd49fbae38c1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030703-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,6 +4,7 @@\n extern void abort (void);\n extern int blah[];\n \n+void\n foo(int index)\n {\n   if (blah [(unsigned int)index] != 0)"}, {"sha": "5d083fb98db0006698f9bceec0c150a6d7be23e9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030708-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -17,6 +17,8 @@ struct rtx_def\n   enum rtx_code code:16;\n };\n \n+extern void blah (rtx *);\n+\n int\n nonlocal_mentioned_p (x)\n      rtx x;"}, {"sha": "74014ba833019bb39e6c628d7a44a4d3336fcc00", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030709-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -27,6 +27,7 @@ union tree_node\n {\n   struct tree_decl decl;\n };\n+int make_decl_rtl (tree, int);\n void *\n get_alias_set (t)\n      tree t;"}, {"sha": "edf51c56af7def91d3343e924e5ddb5a0dad6fc2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030710-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n \n extern void abort (void);\n+extern void blah (void);\n union tree_node;\n typedef union tree_node *tree;\n struct tree_vec"}, {"sha": "32901a211e16b5732a69a48becdb7fae13ab8e61", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030711-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n  \n extern void abort (void);\n+extern void blah (void);\n \n union tree_node;\n typedef union tree_node *tree;"}, {"sha": "10396dd4528a6bcfe31a7d48b97543f951a7dd85", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030711-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -31,6 +31,7 @@ union tree_node\n {\n   struct tree_decl decl;\n };\n+void make_decl_rtl (tree, int);\n long\n get_alias_set (t,z)\n      tree t;"}, {"sha": "099ba8b3661aa1d75215105185ecc1701827429e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030711-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -31,6 +31,7 @@ union tree_node\n {\n   struct tree_decl decl;\n };\n+int make_decl_rtl (tree, void *);\n long\n get_alias_set (t)\n      tree t;"}, {"sha": "a11ddeaf218770f5633754c12d7be9ea16d472ce", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030728-1.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030728-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030728-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030728-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -16,17 +16,13 @@ struct tree_common\n   enum tree_code code:8;\n };\n \n-\n-\n-\n-\n union tree_node\n {\n   struct tree_common common;\n };\n \n-\n-\n+int foo (int);\n+int get_alias_set (tree);\n \n int\n objects_must_conflict_p (t1, t2)"}, {"sha": "cf3923c53213cdf5e9c2b0dcf4d8bb9ffbdb1037", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030729-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-dom2\" } */\n+/* { dg-options \"-O1 -fdump-tree-dom2 -std=gnu89\" } */\n \n extern void abort (void);\n union tree_node;"}, {"sha": "e1609fdd993288781a369bb3ea80bda594c7b25b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030731-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-dom2\" } */\n+/* { dg-options \"-O1 -fdump-tree-dom2 -std=gnu89\" } */\n   \n extern void abort (void);\n "}, {"sha": "84353a5c78516915c641146dff25e922057fa745", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030731-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-dce1\" } */\n \n+void foo (void);\n+\n void\n bar (int i, int partial, int args_addr)\n {"}, {"sha": "ead99e1da263a554afd65b6be1ad882d1b311e3c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -22,6 +22,7 @@ struct rtx_def\n \n static int *uid_cuid;\n static int max_uid_cuid;\n+int insn_cuid (rtx);\n \n rtx\n bar (rtx r)"}, {"sha": "c49645f8b24d1edd1ea6ccb719a06d899046fc59", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -8,6 +8,7 @@ struct rtx_def\n {\n   int code;\n };\n+void\n foo (reg)\n      rtx reg;\n {"}, {"sha": "0b55b9bd0db9dd7e7daf55b701ad0732cff89ade", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,7 +2,10 @@\n /* { dg-options \"-O1 -ftree-vrp -fdump-tree-dom2\" } */\n      \n extern void abort (void);\n+extern void bitmap_clear (int *);\n+extern void bar (int *);\n \n+void\n oof ()\n {\n   int live_head;\n@@ -12,6 +15,7 @@ oof ()\n    bitmap_clear (live);\n }\n \n+void\n foo(int n)\n {\n   int *space = (int *)__builtin_alloca (n);"}, {"sha": "2c1b3332123c98eeac1b8bd18a21e8cd888d1e25", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,8 @@\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n                                                                                 \n typedef unsigned int cppchar_t;\n+void foo (void);\n+cppchar_t oof (void);\n cppchar_t\n cpp_parse_escape (pstr, limit, wide)\n      const unsigned char **pstr;"}, {"sha": "044e1c2ec1736aacef6c9de9b3f3693367669cd8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -18,6 +18,7 @@ union tree_node\n   struct tree_common common;\n   struct tree_list list;\n };\n+void c_simplify_stmt (tree *);\n void\n simplify_condition (cond_p)\n      tree *cond_p;"}, {"sha": "9be4503ebcd536ed04c4ec550aedd9ec9235a3ad", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-8.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-dom2\" } */\n+/* { dg-options \"-O1 -fdump-tree-dom2 -std=gnu89\" } */\n                                                                                 \n struct die_struct;\n typedef struct die_struct *dw_die_ref;"}, {"sha": "2506989901d94dd0c824eea6956ff17513c75d4e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-9.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-9.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n \n+void oof (const char *);\n+void foo (void);\n+\n static void\n bar ()\n {"}, {"sha": "44c804364e7171b5f4de90bdded4bbbf63c3afbc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,7 +2,9 @@\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n    \n extern void abort (void);\n+extern void oof (int);\n \n+int\n com(int *blah)\n {\n   int z = *blah;"}, {"sha": "035b4ad3c2ab2aa2cdb574cb603d318f7f678122", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n     \n extern void abort (void);\n+extern void blah (void);\n \n void\n foo (int value)"}, {"sha": "e69b0ee5408d1ed9a166f19efc45645614f1e3b9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdump-tree-dom2\" } */\n     \n extern void abort (void);\n+extern void blah (void);\n \n void\n foo (int value)"}, {"sha": "1b941d6654f4c3a0f5acdeef88597659123aba84", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -18,6 +18,7 @@ union tree_node\n   struct tree_common common;\n   struct tree_decl decl;\n };\n+void record_alias_subset (long);\n long\n blah (decl, set)\n      tree decl;"}, {"sha": "c4592106758b130ad10bf102c3b5203cd78ed15a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-5.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -18,6 +18,8 @@ union tree_node\n   struct tree_common common;\n   struct tree_decl decl;\n };\n+long oof (void);\n+void record_alias_subset (long);\n long\n blah (decl, set)\n      tree decl;"}, {"sha": "bfd1b509636f7ec4afa0b72aedd845d465f2843f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030820-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030820-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030820-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030820-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,6 +4,7 @@\n /* A test for unreachable blocks removal -- bind_expr whose entry is\n    unreachable, but it contains reachable statements.  */   \n \n+void bar (void);\n void foo(void)\n {\n   if (1)"}, {"sha": "e857a0d6b0944d494dfcfbcc7025d9d919d76e40", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030820-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030820-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030820-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030820-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,9 @@\n \n /* A test for variables getting out of their scope in copy propagation.  */\n \n+void bla (int);\n+int bar (void);\n+\n void foo(void)\n {\n   int k;"}, {"sha": "8cf74d59210e0632f9141724f47e8b5ec5005ff6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030821-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom1 -fdump-tree-optimized\" } */\n \n+void dont_remove (void);\n+\n void foo(int k)\n {\n   int i = 1;"}, {"sha": "94d13365438c1edbdd865cb36430e2cf29b6ca71", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030917-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -std=gnu89\" } */\n   \n \n extern int board[];"}, {"sha": "372853c28203b80cb9cdf7511bd3c3e8973fd971", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030917-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,7 +4,7 @@\n    was never renamed.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-O -ftree-dominator-opts\" } */\n+/* { dg-options \"-O -ftree-dominator-opts -std=gnu89\" } */\n \n typedef __SIZE_TYPE__ size_t;\n typedef union tree_node *tree;"}, {"sha": "6a4d30cf07e03ab0641e4197ff36f71f6a4fe9ed", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030917-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,7 @@\n \n extern int printf (const char *, ...); \n \n+int\n main ()\n {\n   int variable = 0;"}, {"sha": "55769248b774bcbee12c9c05b009a9f1c30455ec", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031022-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031022-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031022-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031022-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -10,6 +10,8 @@ typedef struct basic_block_def\n   edge pred;\n } *basic_block;\n extern struct basic_block_def entry_exit_blocks[2];\n+void commit_edge_insertions (void);\n+void foo (edge);\n void\n blah (int arf)\n {"}, {"sha": "11eec50b0f21c350507480e768df8db4344a94e1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040121-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040121-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040121-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040121-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -19,6 +19,7 @@ char *bar(char *first, char *last)\n      return foo(first, last);\n    return 0;\n }\n+int\n main() {\n    char *p = \"a\", *q = \"b\";\n    if (p)"}, {"sha": "a685048167299bd974abd00467583af102407afc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040209-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040209-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040209-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040209-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -22,6 +22,8 @@ union tree_node\n };\n \n int pedantic;\n+void foo (tree);\n+void bar1 (tree *);\n \n void\n finish_struct (tree t, tree fieldlist, tree attributes)"}, {"sha": "1ca231656adc95b2fdbe791a4e8947290a6f9fbe", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040211-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040211-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040211-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040211-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,6 +4,7 @@\n struct rtx_def;\n typedef struct rtx_def *rtx;\n extern const char rtx_class[];\n+void foo (void);\n union rtunion_def\n {\n   rtx rtx;"}, {"sha": "a2edc9904efe55bad9352784dd0be7c1abf1c258", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040216-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040216-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dse1-details\" } */\n  \n+int\n foo(int *z, int *y, int xx)\n {\n   *z = 1;"}, {"sha": "0e8821203ce759fcde69e599c4d289c1d5fe2c4f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040302-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040302-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040302-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040302-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1\" } */\n+/* { dg-options \"-O1 -std=gnu89\" } */\n \n /* Test for .GLOBAL_VAR not being renamed into SSA after alias analysis.\n    provided by Dale Johannesen in PR 14266.  */"}, {"sha": "839cc3ab271badb46bbe177bfb186c83c27e720c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040319-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040319-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040319-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040319-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -18,6 +18,7 @@ void foo (struct bar *b)\n     abort ();\n }\n \n+int\n main ()\n {\n   struct bar x;"}, {"sha": "587bd6d3007adfbf80ea0e796988951540da2b3f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040326-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fno-inline-functions\" } */\n+/* { dg-options \"-O2 -fno-inline-functions -std=gnu89\" } */\n /* { dg-do run } */\n /* When there are no call-clobbered variables, we should still create\n    a .GLOBAL_VAR to model the side effects of functions.  Without it,"}, {"sha": "cfb7c60135bfcfa7636f116e07aca71cb06446ae", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040326-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -39,6 +39,7 @@ baz (void)\n \n fnptr B[2] = { baz, boz };\n \n+int\n main ()\n {\n   int b, c;"}, {"sha": "147584983d49b50a265a8f1155c773bd6bd883f8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040729-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040729-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040729-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040729-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dce2\" } */\n \n+int\n foo ()\n {\n   volatile int *p;"}, {"sha": "0cf83a2f6279126930e6068e4ebb1a3bdfa6d8f5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20041008-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041008-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041008-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041008-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */ \n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -std=gnu89\" } */\n \n struct A {\n     int x;"}, {"sha": "2c1e33513ecc7e2d2937369fd41b583ee98f8900", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20050719-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050719-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050719-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050719-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -5,6 +5,7 @@ extern void abort (void) __attribute__ ((__nothrow__)) __attribute__\n ((__noreturn__));\n extern void exit (int __status) __attribute__ ((__nothrow__))\n __attribute__ ((__noreturn__));\n+int useboot (void *);\n \n struct bootLoader {\n   int x;\n@@ -31,6 +32,7 @@ useboot (void *boot)\n   abort ();\n }\n \n+int\n main()\n {\n   zap (0);"}, {"sha": "884f5f6e317191efa77f06c2c2569e2dfd37ae12", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20070302-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20070302-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20070302-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20070302-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do link } */\n /* { dg-options \"-O2\" } */\n \n+void link_error (void);\n+\n struct A\n {\n   int x;\n@@ -39,6 +41,7 @@ float foo (int i)\n     link_error ();\n }\n \n+int\n main(int argc, char **argv)\n {\n   foo (argc);"}, {"sha": "69e00eb21964cf293eea3977e3ea125a74698f35", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-13.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do link } */\n /* { dg-options \"-O2\" } */\n \n+void link_failure (void);\n \n struct a\n {"}, {"sha": "c15ca0549bef5c159ab89a565905b8db0fc18300", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-28.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-28.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O3\" } */\n \n extern void abort (void);\n+extern void __link_error (void);\n extern void *malloc(__SIZE_TYPE__);\n \n int * __attribute__((noinline,noclone))"}, {"sha": "a32dbc0f8d79e684d3f6969e791044e05f973a10", "filename": "gcc/testsuite/gcc.dg/tree-ssa/asm-3.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -12,6 +12,9 @@\n #endif\n #endif\n \n+void foo (int);\n+void bar (int);\n+\n static inline int source(void)\n {\n   register int hardreg __asm__(REGISTER);"}, {"sha": "b7c4831ae028e65281669654042e1839d0cf9187", "filename": "gcc/testsuite/gcc.dg/tree-ssa/attr-alias-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,7 @@\n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n static int a=4;\n static int b __attribute__ ((alias(\"a\")));\n+int\n main()\n {\n    return b+a;"}, {"sha": "3dee34c24f7003220ba31d9fdf0acd1c6c874120", "filename": "gcc/testsuite/gcc.dg/tree-ssa/attr-alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-alias \"\" } */\n-/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -std=gnu89\" } */\n void abort (void);\n __attribute__ ((weak))\n int test() "}, {"sha": "696ef269ced3099803e9afe0c8e446dd6f809cc0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-expect-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-gimple\" } */\n \n+void g (void);\n+\n+void\n f (int i, float j, int i2, float j2) \n { \n   if (__builtin_expect ((i * i2) > 0 && (j * j2), 0)) "}, {"sha": "9267084de3e21fe2b298ea08de4c5b82abd92d6f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-expect-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-gimple\" } */\n \n+void g (void);\n+\n+void\n f (int i, float j, int i2, float j2) \n { \n   if (__builtin_expect ((i * i2) > 0 || (j * j2), 0))"}, {"sha": "548d6745eb99be31e37e0971b45df710249d4f9d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-expect-3.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-gimple\" } */\n \n+void a (void);\n+void b (void);\n+\n+void\n f (int i, float j, int i2, float j2) \n { \n   if (__builtin_expect ((i * i2) > 0 && (j * j2), 0))"}, {"sha": "103d531d13c604082e0785ec39ed211d49920ed0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-expect-4.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-gimple\" } */\n \n+void a (void);\n+void b (void);\n+\n+void\n f (int i, float j, int i2, float j2) \n { \n   if (__builtin_expect ((i * i2) > 0 || (j * j2), 0))"}, {"sha": "4adc0cc403b5eba8cff07adbcc0047d0831aeca6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-expect-5.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-expect-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-forwprop\" } */\n \n+void a (void);\n+void b (void);\n+\n+void\n f (int i, float j, int i2, float j2) \n { \n   if (__builtin_expect ((i * i2) > 0 && __builtin_expect ((j * j2) != 0, 1), 0))"}, {"sha": "2eedbce8a7650b38a0fce232f516c851dcc839e6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/coalesce-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcoalesce-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcoalesce-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcoalesce-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -103,6 +103,7 @@ union gimple_statement_d\n   struct gimple_statement_phi gimple_phi;\n };\n extern size_t const gimple_ops_offset_[];\n+int gimple_statement_structure (gimple);\n static __inline__ tree *\n gimple_ops (gimple gs)\n {\n@@ -155,6 +156,8 @@ struct switch_conv_info\n   tree *default_values;\n };\n static struct switch_conv_info info;\n+void gsi_next (gimple_stmt_iterator *);\n+int gsi_gsi_start_phis (basic_block);\n \n static void\n gather_default_values (tree default_case)\n@@ -178,6 +181,8 @@ gather_default_values (tree default_case)\n     }\n }\n \n+unsigned int gimple_switch_num_labels (gimple);\n+\n unsigned char\n process_switch (gimple swtch)\n {"}, {"sha": "e1281fd7d8754f55e8477f5425e894145ab70e75", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fdump-tree-cunrolli-details\" } */\n int a[2];\n+void\n test(int c)\n { \n   int i;"}, {"sha": "09605b2c1bccfce9bca1b23c9febf1ae549ae9db", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fdump-tree-cunroll-details\" } */\n int a[2];\n+int test2 (void);\n+void\n test(int c)\n { \n   int i;"}, {"sha": "72e9f1bddda2bcbf79fb4965d829935218c50e22", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-cunrolli-details\" } */\n int a[1];\n+void\n test(int c)\n { \n   int i;"}, {"sha": "ce2fc5af1eb36697cade8b77726bf84d55986bd1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fdump-tree-ivcanon-details\" } */\n int a[1];\n+void test2 (void);\n+void\n test(int c)\n { \n   int i=0,j;"}, {"sha": "da89019321931da7b529b0ca27f537d3af7d214f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fdump-tree-cunroll-details -fno-tree-vectorize\" } */\n int *a;\n+void\n test(int c)\n { \n   int i;"}, {"sha": "f6d5c605a1a6093597cd968eaa6bda41cc1bef48", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-9.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-9.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,8 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-cunrolli-details\" } */\n void abort (void);\n+int q (void);\n int a[10];\n int b[11];\n+int\n t (int n)\n {\n   int i;"}, {"sha": "9d4e0256e558fc3f707511c218d42fda9f346186", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldconst-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -25,6 +25,8 @@ enum tree_index\n     TI_CURRENT_TARGET_PRAGMA, TI_CURRENT_OPTIMIZE_PRAGMA, TI_MAX\n };\n extern tree global_trees[TI_MAX];\n+void fancy_abort (const char *file, int line, const char *function);\n+void\n emit_support_tinfos (void)\n {\n   static tree *const fundamentals[] = {"}, {"sha": "a6bb4312eea5a872ec46d78b7e0d4749de6cfa3d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldconst-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -31,7 +31,9 @@ union tree_node\n };\n const enum tree_code_class tree_code_type[] =\n { tcc_exceptional, 1, 0, 0, 0, 0, 2, };\n+extern void tree_class_check_failed (const_tree, const char *);\n \n+void\n int_fits_type_p (const_tree c, const_tree type)\n {\n   double_int dc, dd;"}, {"sha": "445d415cf54440a04c4493ea6afd1e5fa331c5d7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldconst-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -5,6 +5,7 @@ struct a {int a,b;};\n const static struct a a;\n static int b[10];\n int c;\n+int\n test()\n {\n   return a.a+b[c];"}, {"sha": "68b29a3c377fa832e0ec5920b55ffa796ad94d19", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldconst-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldconst-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -5,6 +5,7 @@\n static const char a[5]=\"t\";\n static const int b[5]={1,2};\n static const struct a {int a : 6; int b : 6;} c = {5,9};\n+int\n test()\n {\n   return a[2]+b[1]+b[3]+c.b;"}, {"sha": "b49bb3f8ee9634d4fd324bab5f27645ed88b5982", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldstring-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldstring-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldstring-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldstring-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-gimple\" } */\n \n+void blah (void);\n+\n void\n arf ()\n {"}, {"sha": "16743b0541fa228efff2c25f155510cfbc4036f0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-25.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-25.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -22,6 +22,7 @@ struct rtx_def\n {\n   __extension__ enum machine_mode mode:8;\n };\n+void fancy_abort (const char *, int, const char *);\n void\n convert_move (rtx to, rtx from, int unsignedp)\n {"}, {"sha": "676f7b57821fa180640b49029a0f24d7b290bad6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-26.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-26.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -48,6 +48,8 @@ varpool_externally_visible_p (struct varpool_node *vnode,\n   return 0;\n }\n \n+unsigned char pointer_set_contains (struct pointer_set_t *, struct varpool_node *);\n+\n unsigned int\n function_and_variable_visibility (unsigned char whole_program)\n {"}, {"sha": "4f006a85bc9cfd72771100aa09c36d82d5aa1a30", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-28.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-28.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -5,7 +5,9 @@\n \n extern char *frob (void);\n extern _Bool testit (void);\n+extern void oof (void);\n \n+void\n test (int code)\n {\n   char *temp = frob ();\n@@ -14,6 +16,7 @@ test (int code)\n     oof ();\n }\n \n+void\n test_2 (int code)\n {\n   char *temp = frob ();\n@@ -22,7 +25,7 @@ test_2 (int code)\n     oof ();\n }\n \n-\n+void\n test_3 (int code)\n {\n   char *temp = frob ();\n@@ -31,7 +34,7 @@ test_3 (int code)\n     oof ();\n }\n \n-\n+void\n test_4 (int code)\n {\n   char *temp = frob ();\n@@ -40,7 +43,7 @@ test_4 (int code)\n     oof ();\n }\n \n-\n+void\n test_5 (int code)\n {\n   _Bool temp = testit ();\n@@ -49,6 +52,7 @@ test_5 (int code)\n     oof ();\n }\n \n+void\n test_6 (int code)\n {\n   _Bool temp = testit ();\n@@ -57,7 +61,7 @@ test_6 (int code)\n     oof ();\n }\n \n-\n+void\n test_7 (int code)\n {\n   _Bool temp = testit ();\n@@ -66,7 +70,7 @@ test_7 (int code)\n     oof ();\n }\n \n-\n+void\n test_8 (int code)\n {\n   _Bool temp = testit ();"}, {"sha": "4f7c3ab6c822a26c08d6c83fbf0d09b34161f4b2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ifc-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -26,6 +26,7 @@ struct cpp_reader\n {\n   struct ht *hash_table;\n };\n+void\n create_iso_definition (cpp_reader *pfile, cpp_macro *macro)\n {\n   unsigned int num_extra_tokens = 0;"}, {"sha": "d7c884a735b70062895cad2974702e12b8fafbfe", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ifc-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-6.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-c -O2 -ftree-vectorize\" { target *-*-* } } */\n \n static int x;\n+void\n foo (int n, int *A)\n {\n   int i;"}, {"sha": "fe6c77f0850d84673bba2b10cb08e55529f22e83", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-10.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -22,6 +22,7 @@ int do_something (int size)\n     do_something_big (size);\n }\n extern int n;\n+int\n main()\n {\n   do_something (2);"}, {"sha": "dfaf7dc2e253a994f676965a87ce8d3e905ced2f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline-5.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,9 @@\n /* { dg-options \"-Os -fdump-tree-optimized\" } */\n struct a {int a,b,c,d,e,f;};\n \n+void do_something (struct a *);\n+\n+void\n do_inc (struct a *a)\n {\n   a->a=a->b;\n@@ -10,6 +13,7 @@ do_inc (struct a *a)\n   a->e=a->f;\n }\n \n+void\n test(struct a *a)\n {\n   do_inc (a);"}, {"sha": "aa9656d4bd96979df81cd0ed254d1a01548c4ffb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline-6.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-6.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,7 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-Os -fdump-tree-optimized\" } */\n struct a {int a,b,c,d,e,f,g,h,i,j;};\n+void do_something (struct a *);\n \n+void\n do_inc (struct a *a)\n {\n   a->a=1;\n@@ -15,6 +17,7 @@ do_inc (struct a *a)\n   a->j=5;\n }\n \n+void\n test(struct a *a)\n {\n   do_inc (a);"}, {"sha": "7d7f49c9b680383504ab5d15b1365655b4385a63", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-7.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-einline\" } */\n+/* { dg-options \"-O -fdump-tree-einline -std=gnu89\" } */\n \n void foo0();\n inline void bar0() { foo0(); }"}, {"sha": "45f0fecdb49866aa73ae3ce8513fde9e17cf76a4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-9.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -14,6 +14,7 @@ int t(int a)\n       q(a+10);\n }\n \n+int\n main()\n {\n    t(5);"}, {"sha": "9fbacdeb81ea95b73ba8d7c19ad7c33b0d5ef278", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ipa-cp-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-cp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-cp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-cp-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -11,6 +11,7 @@ very_long_function(int a)\n     return 2 * -a + very_long_function (a)/4;\n }\n \n+int\n blah ()\n {\n   very_long_function (1);"}, {"sha": "e1efa4e4f1760e0b5c82b07ed3e333f96c0838f9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ipa-split-1.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fdump-tree-fnsplit\" } */\n-int test2(a)\n+\n+void do_something_big (void);\n+\n+int test2(int a)\n {\n    if (a<100)\n      return 1;\n@@ -20,6 +23,7 @@ int test2(a)\n    return 0;\n }\n \n+void\n test()\n {\n   test2(10);"}, {"sha": "b2d50a4c3739943f34cc7c4e8b2af26d34aa0f46", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ipa-split-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,8 @@\n int b;\n int c;\n int d;\n+void long_function (int);\n+void\n split_me(int a)\n {\n   int t = 0;\n@@ -29,6 +31,7 @@ split_me(int a)\n     goto make_me_irregular;\n }\n \n+int\n main()\n {\n   split_me (1);"}, {"sha": "aacf369291ae4a49d67a543a14e03e7a6f3872ba", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ipa-split-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fipa-split-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -24,6 +24,7 @@ struct a split_me (int a)\n     }\n }\n int val;\n+void\n test()\n {\n   split_me (val);"}, {"sha": "8dd2f2bdc2f1d8027f478d6067a6b84bd1fbf24e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/isolate-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -43,6 +43,8 @@ VEC_rtx_gc_safe_grow_cleared (VEC_rtx_gc ** vec_, int size_,\n }\n \n static VEC_rtx_gc *reg_base_value;\n+unsigned int max_reg_num (void);\n+int arf (void);\n void\n init_alias_analysis (void)\n {"}, {"sha": "131d319ae0dced3afc722215488e58ec49f0fe1f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/isolate-5.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -17,6 +17,9 @@ struct d_info\n   int num_comps;\n };\n \n+void foo (int);\n+void bar (int);\n+\n static struct demangle_component *\n d_make_empty (struct d_info *di)\n {"}, {"sha": "dbeaff29e0f8a4e4fd147450ffce088ada2331e4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ivopts-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,7 +4,9 @@\n long last_data_offset;\n int store;\n char *data;\n+void g (long);\n   \n+void\n f ()\n {\n   "}, {"sha": "94e3c52ed7edcf135e81195d7a00cca1ea916048", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ivopts-3.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fivopts-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,7 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-ivopts-details\" } */\n \n-void main (void)\n+void f2 (void);\n+\n+int main (void)\n {\n   int i;\n   for (i = 0; i < 10; i++)"}, {"sha": "7e67c9d2c778f1218693755ee7bfd5c20f1ba552", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre7.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre7.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,9 @@\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n /* We can't eliminate the *p load here in any sane way, as eshup8 may \n    change it.  */\n+\n+void eshup8 (unsigned short *);\n+\n void\n enormlz (x)\n      unsigned short x[];"}, {"sha": "0dfc2b04e4a5e67e2b4b77a0020a5c3a321eb47f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre8.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -std=gnu89\" } */\n typedef union tree_node *tree;\n struct tree_common\n {"}, {"sha": "356ad7b2c78319e9bf704ac8bdee9f4974184e2e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/local-pure-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Flocal-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Flocal-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Flocal-pure-const.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdump-tree-local-pure-const1\" } */\n /* { dg-add-options bind_pic_locally } */\n \n+int\n t(int a, int b, int c)\n {\n   int *p;"}, {"sha": "6f2b5d0f91969d902d9c81a1e68eeb82bcd2845b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-20.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-20.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -6,6 +6,10 @@\n typedef struct gfc_se { int pre; } gfc_se;\n typedef struct gfc_ss_info { int dim[7]; } gfc_ss_info;\n int gfc_rank_cst[7 + 1];\n+int a (int, int, int);\n+int b (int, int);\n+int c (int, int);\n+void\n gfc_conv_array_transpose (gfc_se * se) {\n   int dest, src, dest_index, src_index;\n   gfc_ss_info *dest_info;"}, {"sha": "3c515aa1e79ec47b1132f527ee27d1ba8e33d7a5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-38.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-38.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,8 @@\n /* { dg-options \"-O2 -fdump-tree-cunrolli-details\" } */\n int a[10];\n int b[11];\n+int q (void);\n+int\n t(int n)\n {\n    int i;"}, {"sha": "e94ad5f14caf929c82fe80f2d4fc617f91d11741", "filename": "gcc/testsuite/gcc.dg/tree-ssa/nonzero-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fnonzero-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fnonzero-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fnonzero-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n extern int a; /* { dg-error \"declared weak after being used\" } */\n+int\n t()\n {\n   return &a!=0;"}, {"sha": "3c0eceb2e1ab9f2c75b17bdd1cd2f6c3bc500fa0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20913.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -5,6 +5,8 @@\n /* { dg-do link } */\n /* { dg-options \"-O2 -fno-tree-dominator-opts\" } */\n \n+void link_error (void);\n+\n int\n foo (int a, int b, int c, int d)\n {\n@@ -28,6 +30,7 @@ foo (int a, int b, int c, int d)\n     }\n }\n \n+int\n main()\n {\n   foo (1, 2, 3, 4);"}, {"sha": "8675fbff3b1b36d65a739dbc5923974dd4296a3a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21582.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21582.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21582.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21582.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do link }  */\n /* { dg-options \"-O2 -fdump-tree-vrp1\" }  */\n \n+void link_error (void);\n+\n static inline void do_thing(char *s, int *p, char *q)\n {\n   \t/* This should be folded away.  */\n@@ -19,6 +21,7 @@ void __attribute__((nonnull (1, 3))) do_other_thing(char *s, int *p, char *q)\n \n int i;\n \n+int\n main()\n {\n   do_other_thing (\"xxx\", &i, \"yyy\");"}, {"sha": "377539f892d686c12801ecf1b37888a782df6673", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr22117.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22117.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22117.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22117.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -5,6 +5,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n \n+void link_error (void);\n+\n void\n foo (int *p, int q)\n {"}, {"sha": "e57f6f6a4260972f71b926c07387d5a4e159992e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr23434.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23434.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23434.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23434.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n+void\n cblas_csyr2k (int N, void *A, int lda, float *B, int ldb, float *C, int k)\n {\n   int i, j;"}, {"sha": "23fc3a24a468169c59615b84a6ba39a52ee54312", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr23744.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23744.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23744.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23744.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fno-tree-ccp -fdump-tree-vrp1\" } */\n \n+void h (void);\n+\n int g (int i, int j)\n {\n   int t = 0;"}, {"sha": "df19d976c68987ee5c9b94aa0b374ecd24b0cc63", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr24117.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24117.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24117.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24117.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n+void link_error (void);\n+\n typedef struct  {\n   int x;\n   int z;"}, {"sha": "75b92fd018c9daaeb5a53c9f92f045f42cf5d7a9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr24670.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24670.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24670.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24670.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n+void add128 (long long int *);\n+\n __inline__ void\n shift128Right (int count, long long int *z1Ptr)\n {\n@@ -12,6 +14,7 @@ shift128Right (int count, long long int *z1Ptr)\n   *z1Ptr = z1;\n }\n \n+void\n float128_rem ()\n {\n   signed int expDiff;"}, {"sha": "0ce9ed3a6208458cfff83533eb64f44a4641d839", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr24840.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24840.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24840.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24840.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -7,6 +7,7 @@ typedef struct\n } Object;\n \n void Err_Handler () __attribute__ ((__noreturn__));\n+void Wrong_Type (Object, int);\n \n int\n P_Error (int argc, Object * argv)"}, {"sha": "9d569d1cb4ba9c825cd72e4944489ddff7e79977", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr25734.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25734.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25734.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25734.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,6 +4,7 @@\n struct list_head {\n  struct list_head *next;\n };\n+void __list_del (struct list_head *);\n static inline __attribute__((always_inline)) void list_del_init(struct\n list_head *entry)\n {"}, {"sha": "7b5aefcedad5a4a48ab1823514187aec0590ce7d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr33723.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33723.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33723.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33723.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -14,6 +14,8 @@ typedef union\n   long int a;\n } T;\n \n+void test (T *);\n+\n void\n foo1 (void)\n {"}, {"sha": "858a95de434f173675d777a576dc80a6aa410b05", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr33920.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33920.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33920.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33920.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -18,6 +18,7 @@ union lispunion\n {\n   struct vector v;\n };\n+void number_plus (object, object);\n void init_code ()\n {\n   object V659;"}, {"sha": "5e59a3f429f0eb8d6dabedeea818d340161685af", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr33922.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33922.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33922.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr33922.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -14,6 +14,7 @@ typedef struct\n }\n ProtocolOperations;\n static const ProtocolOperations *protocol;\n+int\n brl_readCommand (BrailleDisplay * brl)\n {\n   unsigned long int keys;"}, {"sha": "2378e3e64fd7b83f8db23b2c82f1947fcbddd24b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr34146-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34146-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34146-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34146-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -24,6 +24,8 @@ typedef union\n   long int a;\n } T;\n \n+void test (T *);\n+\n void\n foo (void)\n {"}, {"sha": "73894a0ccd3f4f1bc725b8c973627e41d0d9f960", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr34146.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34146.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34146.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34146.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -24,6 +24,8 @@ typedef union\n   long int a;\n } T;\n \n+void test (T *);\n+\n void\n foo (void)\n {"}, {"sha": "c3e5ac66c2e493815b1c58240819d4216f3f54ce", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr38385.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38385.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38385.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38385.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -22,6 +22,7 @@ int replace_reloads;\n int hard_regs_live_known;\n short* static_reload_reg_p;\n struct rd recog_data;\n+int ix86_preferred_reload_class (rtx, int);\n \n int\n find_reloads (rtx insn, int replace, int ind_levels, int live_known,"}, {"sha": "487c42bf832a07da6e8d0a2b386d24718383fc52", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr49642-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49642-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49642-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49642-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -31,6 +31,8 @@ struct ehca_shca {\n         u32 hca_cap_mr_pgsize;\n };\n \n+int ____ilog2_NaN (void);\n+\n static u64 ehca_get_max_hwpage_size(struct ehca_shca *shca)\n {\n  return 1UL << ( __builtin_constant_p(shca->hca_cap_mr_pgsize) ? ( (shca->hca_cap_mr_pgsize) < 1 ? ____ilog2_NaN() : (shca->hca_cap_mr_pgsize) & (1ULL << 63) ? 63 : (shca->hca_cap_mr_pgsize) & (1ULL << 62) ? 62 : (shca->hca_cap_mr_pgsize) & (1ULL << 61) ? 61 : (shca->hca_cap_mr_pgsize) & (1ULL << 60) ? 60 : (shca->hca_cap_mr_pgsize) & (1ULL << 59) ? 59 : (shca->hca_cap_mr_pgsize) & (1ULL << 58) ? 58 : (shca->hca_cap_mr_pgsize) & (1ULL << 57) ? 57 : (shca->hca_cap_mr_pgsize) & (1ULL << 56) ? 56 : (shca->hca_cap_mr_pgsize) & (1ULL << 55) ? 55 : (shca->hca_cap_mr_pgsize) & (1ULL << 54) ? 54 : (shca->hca_cap_mr_pgsize) & (1ULL << 53) ? 53 : (shca->hca_cap_mr_pgsize) & (1ULL << 52) ? 52 : (shca->hca_cap_mr_pgsize) & (1ULL << 51) ? 51 : (shca->hca_cap_mr_pgsize) & (1ULL << 50) ? 50 : (shca->hca_cap_mr_pgsize) & (1ULL << 49) ? 49 : (shca->hca_cap_mr_pgsize) & (1ULL << 48) ? 48 : (shca->hca_cap_mr_pgsize) & (1ULL << 47) ? 47 : (shca->hca_cap_mr_pgsize) & (1ULL << 46) ? 46 : (shca->hca_cap_mr_pgsize) & (1ULL << 45) ? 45 : (shca->hca_cap_mr_pgsize) & (1ULL << 44) ? 44 : (shca->hca_cap_mr_pgsize) & (1ULL << 43) ? 43 : (shca->hca_cap_mr_pgsize) & (1ULL << 42) ? 42 : (shca->hca_cap_mr_pgsize) & (1ULL << 41) ? 41 : (shca->hca_cap_mr_pgsize) & (1ULL << 40) ? 40 : (shca->hca_cap_mr_pgsize) & (1ULL << 39) ? 39 : (shca->hca_cap_mr_pgsize) & (1ULL << 38) ? 38 : (shca->hca_cap_mr_pgsize) & (1ULL << 37) ? 37 : (shca->hca_cap_mr_pgsize) & (1ULL << 36) ? 36 : (shca->hca_cap_mr_pgsize) & (1ULL << 35) ? 35 : (shca->hca_cap_mr_pgsize) & (1ULL << 34) ? 34 : (shca->hca_cap_mr_pgsize) & (1ULL << 33) ? 33 : (shca->hca_cap_mr_pgsize) & (1ULL << 32) ? 32 : (shca->hca_cap_mr_pgsize) & (1ULL << 31) ? 31 : (shca->hca_cap_mr_pgsize) & (1ULL << 30) ? 30 : (shca->hca_cap_mr_pgsize) & (1ULL << 29) ? 29 : (shca->hca_cap_mr_pgsize) & (1ULL << 28) ? 28 : (shca->hca_cap_mr_pgsize) & (1ULL << 27) ? 27 : (shca->hca_cap_mr_pgsize) & (1ULL << 26) ? 26 : (shca->hca_cap_mr_pgsize) & (1ULL << 25) ? 25 : (shca->hca_cap_mr_pgsize) & (1ULL << 24) ? 24 : (shca->hca_cap_mr_pgsize) & (1ULL << 23) ? 23 : (shca->hca_cap_mr_pgsize) & (1ULL << 22) ? 22 : (shca->hca_cap_mr_pgsize) & (1ULL << 21) ? 21 : (shca->hca_cap_mr_pgsize) & (1ULL << 20) ? 20 : (shca->hca_cap_mr_pgsize) & (1ULL << 19) ? 19 : (shca->hca_cap_mr_pgsize) & (1ULL << 18) ? 18 : (shca->hca_cap_mr_pgsize) & (1ULL << 17) ? 17 : (shca->hca_cap_mr_pgsize) & (1ULL << 16) ? 16 : (shca->hca_cap_mr_pgsize) & (1ULL << 15) ? 15 : (shca->hca_cap_mr_pgsize) & (1ULL << 14) ? 14 : (shca->hca_cap_mr_pgsize) & (1ULL << 13) ? 13 : (shca->hca_cap_mr_pgsize) & (1ULL << 12) ? 12 : (shca->hca_cap_mr_pgsize) & (1ULL << 11) ? 11 : (shca->hca_cap_mr_pgsize) & (1ULL << 10) ? 10 : (shca->hca_cap_mr_pgsize) & (1ULL << 9) ? 9 : (shca->hca_cap_mr_pgsize) & (1ULL << 8) ? 8 : (shca->hca_cap_mr_pgsize) & (1ULL << 7) ? 7 : (shca->hca_cap_mr_pgsize) & (1ULL << 6) ? 6 : (shca->hca_cap_mr_pgsize) & (1ULL << 5) ? 5 : (shca->hca_cap_mr_pgsize) & (1ULL << 4) ? 4 : (shca->hca_cap_mr_pgsize) & (1ULL << 3) ? 3 : (shca->hca_cap_mr_pgsize) & (1ULL << 2) ? 2 : (shca->hca_cap_mr_pgsize) & (1ULL << 1) ? 1 : (shca->hca_cap_mr_pgsize) & (1ULL << 0) ? 0 : ____ilog2_NaN() ) : (sizeof(shca->hca_cap_mr_pgsize) <= 4) ? __ilog2_u32(shca->hca_cap_mr_pgsize) : __ilog2_u64(shca->hca_cap_mr_pgsize) );"}, {"sha": "8c8d5e98a28d76d135a0236b49db563e81cfef05", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr49642-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49642-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49642-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr49642-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -33,6 +33,8 @@ struct ehca_shca {\n         u32 hca_cap_mr_pgsize;\n };\n \n+int ____ilog2_NaN (void);\n+\n static u64 ehca_get_max_hwpage_size(struct ehca_shca *shca)\n {\n  return 1UL << ( __builtin_constant_p(shca->hca_cap_mr_pgsize) ? ( (shca->hca_cap_mr_pgsize) < 1 ? ____ilog2_NaN() : (shca->hca_cap_mr_pgsize) & (1ULL << 63) ? 63 : (shca->hca_cap_mr_pgsize) & (1ULL << 62) ? 62 : (shca->hca_cap_mr_pgsize) & (1ULL << 61) ? 61 : (shca->hca_cap_mr_pgsize) & (1ULL << 60) ? 60 : (shca->hca_cap_mr_pgsize) & (1ULL << 59) ? 59 : (shca->hca_cap_mr_pgsize) & (1ULL << 58) ? 58 : (shca->hca_cap_mr_pgsize) & (1ULL << 57) ? 57 : (shca->hca_cap_mr_pgsize) & (1ULL << 56) ? 56 : (shca->hca_cap_mr_pgsize) & (1ULL << 55) ? 55 : (shca->hca_cap_mr_pgsize) & (1ULL << 54) ? 54 : (shca->hca_cap_mr_pgsize) & (1ULL << 53) ? 53 : (shca->hca_cap_mr_pgsize) & (1ULL << 52) ? 52 : (shca->hca_cap_mr_pgsize) & (1ULL << 51) ? 51 : (shca->hca_cap_mr_pgsize) & (1ULL << 50) ? 50 : (shca->hca_cap_mr_pgsize) & (1ULL << 49) ? 49 : (shca->hca_cap_mr_pgsize) & (1ULL << 48) ? 48 : (shca->hca_cap_mr_pgsize) & (1ULL << 47) ? 47 : (shca->hca_cap_mr_pgsize) & (1ULL << 46) ? 46 : (shca->hca_cap_mr_pgsize) & (1ULL << 45) ? 45 : (shca->hca_cap_mr_pgsize) & (1ULL << 44) ? 44 : (shca->hca_cap_mr_pgsize) & (1ULL << 43) ? 43 : (shca->hca_cap_mr_pgsize) & (1ULL << 42) ? 42 : (shca->hca_cap_mr_pgsize) & (1ULL << 41) ? 41 : (shca->hca_cap_mr_pgsize) & (1ULL << 40) ? 40 : (shca->hca_cap_mr_pgsize) & (1ULL << 39) ? 39 : (shca->hca_cap_mr_pgsize) & (1ULL << 38) ? 38 : (shca->hca_cap_mr_pgsize) & (1ULL << 37) ? 37 : (shca->hca_cap_mr_pgsize) & (1ULL << 36) ? 36 : (shca->hca_cap_mr_pgsize) & (1ULL << 35) ? 35 : (shca->hca_cap_mr_pgsize) & (1ULL << 34) ? 34 : (shca->hca_cap_mr_pgsize) & (1ULL << 33) ? 33 : (shca->hca_cap_mr_pgsize) & (1ULL << 32) ? 32 : (shca->hca_cap_mr_pgsize) & (1ULL << 31) ? 31 : (shca->hca_cap_mr_pgsize) & (1ULL << 30) ? 30 : (shca->hca_cap_mr_pgsize) & (1ULL << 29) ? 29 : (shca->hca_cap_mr_pgsize) & (1ULL << 28) ? 28 : (shca->hca_cap_mr_pgsize) & (1ULL << 27) ? 27 : (shca->hca_cap_mr_pgsize) & (1ULL << 26) ? 26 : (shca->hca_cap_mr_pgsize) & (1ULL << 25) ? 25 : (shca->hca_cap_mr_pgsize) & (1ULL << 24) ? 24 : (shca->hca_cap_mr_pgsize) & (1ULL << 23) ? 23 : (shca->hca_cap_mr_pgsize) & (1ULL << 22) ? 22 : (shca->hca_cap_mr_pgsize) & (1ULL << 21) ? 21 : (shca->hca_cap_mr_pgsize) & (1ULL << 20) ? 20 : (shca->hca_cap_mr_pgsize) & (1ULL << 19) ? 19 : (shca->hca_cap_mr_pgsize) & (1ULL << 18) ? 18 : (shca->hca_cap_mr_pgsize) & (1ULL << 17) ? 17 : (shca->hca_cap_mr_pgsize) & (1ULL << 16) ? 16 : (shca->hca_cap_mr_pgsize) & (1ULL << 15) ? 15 : (shca->hca_cap_mr_pgsize) & (1ULL << 14) ? 14 : (shca->hca_cap_mr_pgsize) & (1ULL << 13) ? 13 : (shca->hca_cap_mr_pgsize) & (1ULL << 12) ? 12 : (shca->hca_cap_mr_pgsize) & (1ULL << 11) ? 11 : (shca->hca_cap_mr_pgsize) & (1ULL << 10) ? 10 : (shca->hca_cap_mr_pgsize) & (1ULL << 9) ? 9 : (shca->hca_cap_mr_pgsize) & (1ULL << 8) ? 8 : (shca->hca_cap_mr_pgsize) & (1ULL << 7) ? 7 : (shca->hca_cap_mr_pgsize) & (1ULL << 6) ? 6 : (shca->hca_cap_mr_pgsize) & (1ULL << 5) ? 5 : (shca->hca_cap_mr_pgsize) & (1ULL << 4) ? 4 : (shca->hca_cap_mr_pgsize) & (1ULL << 3) ? 3 : (shca->hca_cap_mr_pgsize) & (1ULL << 2) ? 2 : (shca->hca_cap_mr_pgsize) & (1ULL << 1) ? 1 : (shca->hca_cap_mr_pgsize) & (1ULL << 0) ? 0 : ____ilog2_NaN() ) : (sizeof(shca->hca_cap_mr_pgsize) <= 4) ? __ilog2_u32(shca->hca_cap_mr_pgsize) : __ilog2_u64(shca->hca_cap_mr_pgsize) );"}, {"sha": "989e5f1ac3f1e4ba2dd89a77a6c6b080582d78e4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr59597.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr59597.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr59597.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr59597.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,6 +4,7 @@\n typedef unsigned short u16;\n typedef unsigned char u8;\n typedef unsigned int u32;\n+long int random(int);\n #define NNN 10\n \n u32 f[NNN], t[NNN];"}, {"sha": "a4cf444b43b6bfee23abf34fc5f865b74f725270", "filename": "gcc/testsuite/gcc.dg/tree-ssa/recip-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frecip-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frecip-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frecip-6.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,7 +3,7 @@\n \n /* Test inserting in a block that does not contain a division.  */\n \n-extern int f2();\n+extern int g();\n \n double m, n, o;\n "}, {"sha": "4aeb511ef74d65fe0abcc6c8fcf9067408c4b283", "filename": "gcc/testsuite/gcc.dg/tree-ssa/scev-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-3.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,6 +4,7 @@\n int *a_p;\n int a[1000];\n \n+void\n f(int k)\n {\n \tint i;"}, {"sha": "a4905f2d082674dbacc0471d5c8de13c5c0e38eb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/scev-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -9,6 +9,7 @@ typedef struct {\n int *a_p;\n S a[1000];\n \n+void\n f(int k)\n {\n \tint i;"}, {"sha": "8c917aeaf759d0137b11e49202838b931408a37a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/scev-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fscev-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -4,6 +4,7 @@\n int *a_p;\n int a[1000];\n \n+void\n f(int k)\n {\n         long long i;"}, {"sha": "fbf7ba65ad77a6f9d5b5f7695a9eee219696f0cc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,8 @@\n \n /* Tests for SRA. */\n \n+void link_error (void);\n+\n typedef struct teststruct\n {\n   double d;"}, {"sha": "5306a3d37b8d660d8bf510848de97fd8001ba166", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,8 @@\n \n /* Test for SRA. */\n \n+void link_error (void);\n+\n typedef struct teststruct\n {\n   double d;"}, {"sha": "5ed7a754053f7813438665b4f6aa08dbae3a2f4f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-5.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,7 @@\n \n /* Tests for SRA of unions. */\n \n+void link_error (void);\n \n typedef union testunion\n {"}, {"sha": "90d9a7d7cee67a5889ebbd09574744b20fa55b86", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-6.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -11,6 +11,7 @@ typedef struct teststruct\n   int i2;\n } teststruct;\n \n+void link_error (void);\n \n void cow (int i)\n {"}, {"sha": "572ad34eed23e9297267b86e163379189efe5190", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-10.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -6,6 +6,8 @@\n    ssa graph.  */\n \n extern __SIZE_TYPE__ strlen (const char *);\n+extern void bar (__SIZE_TYPE__);\n+extern int bla (void);\n \n void foo(int i)\n {"}, {"sha": "42e3a2edb517b8cf6a64e636c87929e942dad35e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-12.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-12.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */ \n /* { dg-options \"-O2\" } */\n \n+void link_error (void);\n+\n struct A\n {\n   int a;\n@@ -25,6 +27,7 @@ void foo (int i)\n     link_error ();\n }\n \n+int\n main ()\n {\n   foo (3);"}, {"sha": "a52fd6e80a71ccfdd97b29a3c16ded3cdf11c52a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-2.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -std=gnu89\" } */\n \n extern void link_error (void);\n "}, {"sha": "d4bc19905264ad78916f4aee3e38f63bce93199f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-31.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-31.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-ccp1\" } */\n \n+void h (void);\n+\n int g (int i, int j)\n {\n   int t = 0;"}, {"sha": "80d8d6ba315250d5f2be2c4ba5066eb38c7d5751", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dce-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdump-tree-dce2\" } */\n \n int t() __attribute__ ((const));\n+void\n q()\n {\n   int i = t();"}, {"sha": "510118818b078f757a72e43326f7bfb79886081d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-thread-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-dom1-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-dom1-details -std=gnu89\" } */\n struct bitmap_head_def;\n typedef struct bitmap_head_def *bitmap;\n typedef const struct bitmap_head_def *const_bitmap;"}, {"sha": "19b339030213854e8f6f5a2166def90df119ef5f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-4.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-4.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,19 +1,15 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-dse1\" } */\n \n+void\n foo( int *a)\n {\n   *a = 5;\n   *a = 3;\n }\n \n-\n-\n-\n /* We should eliminate the first assignment to *p, but not the second.  */\n /* { dg-final { scan-tree-dump-times \"= 5\" 0 \"dse1\"} } */\n /* { dg-final { scan-tree-dump-times \"= 3\" 1 \"dse1\"} } */\n \n /* { dg-final { cleanup-tree-dump \"dse1\" } } */\n-\n-"}, {"sha": "f249b2da3a4f79c6d009bf423a0a83d6cef53b26", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-9.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2 -fdump-tree-dse1-vops\" } */\n \n struct { int a, b; } soup1, soup2;\n+void\n foo ()\n {\n   soup1 = soup2;"}, {"sha": "8c9285bfbe2acd9c3f7776ead9e6b5873a7afc68", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-14.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-14.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */ \n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n extern __SIZE_TYPE__ strlen (const char *) __attribute__ ((__pure__));\n+extern void link_error (void);\n \n void\n foo (const char *str)"}, {"sha": "b70fa58a1c34c4923b2dd701d4ca4ac2ff03a99f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-29.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-29.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-pre-details\" } */\n \n+void bark (void);\n int flag, hoist, y, z;\n \n void"}, {"sha": "a4fdf89958f42d725f8405bf143e8942f7d66f31", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-vrp-thread-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-vrp-thread-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-vrp-thread-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-vrp-thread-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n \n-\n+void oof (void);\n struct basic_block_def;\n typedef struct basic_block_def *basic_block;\n enum gimple_code"}, {"sha": "1fc7e99ac48613299d728ecc6b37617ae2f60692", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp01.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp01.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n \n+int\n foo (int *p, int i)\n {\n   int x;"}, {"sha": "4373d524c2582895a650075e72f2867834b05d65", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp02.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp02.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -7,6 +7,7 @@ struct A\n   int b;\n };\n \n+int\n foo (struct A *p, struct A *q)\n {\n   int x = p->a;"}, {"sha": "7ec51e476619feec5c868683a02515735fb0b98e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp03.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp03.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp03.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp03.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -7,6 +7,7 @@ struct A\n   int b;\n };\n \n+int\n foo (struct A *p, struct A *q)\n {\n   int *r = 0;"}, {"sha": "b98fda9076940b3ac167491d3c7cd663090cdfb8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp04.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp04.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp04.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp04.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n \n+int\n foo (int a, int b)\n {\n   if (a == b)"}, {"sha": "80f05ea2105428a6ce803aec26fef090f315de7a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp05.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp05.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp05.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp05.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -11,6 +11,7 @@ inline int zero()\n   return 0;\n }\n \n+int\n foo (int k, int j)\n {\n   if (k >= ten())"}, {"sha": "6d0f645907186d53801870be4a553de549badac1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp06.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp06.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp06.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp06.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n \n+int baz (void);\n+\n+int\n foo (int i, int j, int a)\n {\n   if (i >= 10)"}, {"sha": "ba813f271f75dde5f8171ded738bb7c805dace48", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp07.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp07.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp07.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp07.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n \n+int\n foo (int i, int *p)\n {\n   int j;"}, {"sha": "b7111dbad960f5a43305f87534ca6885e931211f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp08.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp08.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp08.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp08.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2 -fno-tree-fre -fdump-tree-vrp1-details\" } */\n \n /* Compile with -fno-tree-fre -O2 to prevent CSEing *p.  */\n+int\n foo (int a, int *p)\n {\n   int x = *p + 2;"}, {"sha": "d8f1f4a0d8bdfbeb5745265d7a2d036bad332884", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp09.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp09.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp09.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp09.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1 -std=gnu89\" } */\n \n foo (int *p)\n {"}, {"sha": "6d07caff015f220ba86e573a8b15616b79437433", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp10.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp10.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -3,6 +3,7 @@\n \n extern void abort (void);\n \n+int\n foo (int k, int j)\n {\n   if (k >= 10)\n@@ -18,6 +19,7 @@ foo (int k, int j)\n   return j;\n }\n \n+int\n main()\n {\n   foo (10, 3);"}, {"sha": "4d0e93d537c8beb52bd79851ed9dde7647cef32e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp11.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -7,6 +7,7 @@ bounce (int arg)\n   return arg;\n }\n \n+int\n foo (int k, int j, int z)\n {\n   if (k > z)"}, {"sha": "50552efa2841a573b9fec76a4f1c76ce5bd4b686", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp12.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp12.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do link } */\n /* { dg-options -O2 } */\n \n+extern void link_error (void);\n+\n+int\n foo (int i)\n {\n   int x;\n@@ -17,6 +20,7 @@ foo (int i)\n   return x;\n }\n \n+int\n main()\n {\n   foo (-30);"}, {"sha": "33941a35d2c1e57e4940a002b25a640e91b52af3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp13.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp13.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,7 +2,9 @@\n /* { dg-options -O2 }  */\n \n extern void abort (void);\n+extern void link_error (void);\n \n+int\n foo_div (int i, int j)\n {\n   int k;\n@@ -111,7 +113,7 @@ foo_div (int i, int j)\n   abort ();\n }\n \n-\n+int\n foo_mult (int i, int j)\n {\n   int k;\n@@ -209,7 +211,7 @@ foo_mult (int i, int j)\n   abort ();\n }\n \n-\n+int\n main()\n {\n   if (foo_div (-10, 5) != -2)"}, {"sha": "89f931639f3d18866619b0e24f85bbdd02e08796", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp14.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp14.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -36,6 +36,7 @@ assemble_variable (struct tree_decl decl)\n   return decl.u1.a.align;\n }\n \n+int\n main ()\n {\n   struct tree_decl decl;"}, {"sha": "d27b12595ea880c9f517211c8a6708c6e50037fa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp23.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp23.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,11 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n \n+void aa (void);\n+void aos (void);\n+void aob (void);\n+\n+void\n blah (int code1, int code2)\n {\n   int i;"}, {"sha": "b60ee0569aa06311728cbd68978b80dc52329759", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp24.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp24.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -18,6 +18,11 @@ struct rtx_def\n   } u;\n };\n \n+void arf (void);\n+void nit (void);\n+void frob (void);\n+\n+void\n sss (rtx insn, int code1, int code2, int code3)\n {\n   _Bool D1562;"}, {"sha": "79813e848fa59f7dd9f3eef11f9366fba79b3fb6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp25.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp25.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,8 +2,10 @@\n /* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n \n extern void abort ();\n+extern void arf ();\n int tree_code_length[100];\n \n+void\n blah (int code1)\n {\n   unsigned char D18670;"}, {"sha": "b6350b0e5bb94a8ebb4d1ee194de4a078e6750a5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp27.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp27.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/26361.  */\n /* { dg-do run } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -std=gnu89\" } */\n \n void abort(void);\n "}, {"sha": "33ce239c7f4809cfb07664c5841df49572cda663", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp46.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp46.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n \n+int func_81 (int);\n+int func_98 (int);\n+\n void\n func_18 ( int t )\n {"}, {"sha": "7d1825f24fda058b65b8fac4687904a92af44eb6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp55.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp55.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1-blocks-vops-details\" } */\n \n+void arf (void);\n+\n+void\n fu (char *p, int x)\n {\n   if (x)"}, {"sha": "24ad23e60c0cdaa4807effd7aee2de27d61d88e8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp56.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp56.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -26,6 +26,7 @@ struct basic_block_def\n {\n   VEC_edge_gc *succs;\n };\n+void foo (void);\n \n unsigned char\n cleanup_empty_eh (basic_block bb)"}, {"sha": "9269ca5acda78944d4f4543cabc02218bbafc90f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp67.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp67.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp67.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp67.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n \n+extern void link_error (void);\n+\n unsigned foo (unsigned i)\n {\n   if (i == 2)"}, {"sha": "f4ce82d868620d311f069ca8cf1c6cfb40ee5826", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp72.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp72.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n \n typedef __INTPTR_TYPE__ intptr_t;\n typedef unsigned long long uint64_t;\n+extern void linker_error (void);\n \n static inline void cvmx_write64_uint64(uint64_t addr, uint64_t val)\n {"}, {"sha": "16b0a814ed8cfb4b65611f940ffca6c935de1b45", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp73.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp73.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp73.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp73.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -1,7 +1,7 @@\n /* { dg-options \"-O2\" } */\n \n __extension__ typedef __INTPTR_TYPE__ intptr_t;\n-\n+extern void linker_error (void);\n typedef unsigned long long uint64_t;\n \n static inline void cvmx_write64_uint64(uint64_t addr, uint64_t val)"}, {"sha": "7b423bd83046d0cd2f48faf5ed6f2b72cef0776f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp75.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp75.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp75.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp75.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -2,6 +2,7 @@\n \n __extension__ typedef __INTPTR_TYPE__ intptr_t;\n typedef unsigned long long uint64_t;\n+extern void linker_error (void);\n \n static inline void cvmx_write64_uint64(uint64_t addr, uint64_t val)\n {"}, {"sha": "6c976d57c1569b0b1b214c233efadec26a5f4ef0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/wholeprogram-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fwholeprogram-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fwholeprogram-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fwholeprogram-1.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -11,6 +11,7 @@ large_function ()\n       abort ();\n }\n \n+int\n main ()\n {\n   large_function ();"}, {"sha": "7a8b7991c198c64f29ec9f9c245f3f300d4660a5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/writeonly.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fwriteonly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830976a1de6c15df6498dcd91b36e1fdd549945a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fwriteonly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fwriteonly.c?ref=830976a1de6c15df6498dcd91b36e1fdd549945a", "patch": "@@ -6,6 +6,7 @@ static struct b {int a,b,c,d,e,f;} magic3;\n \n struct b foo();\n \n+void\n t()\n {\n  a.magic1 = 1;"}]}