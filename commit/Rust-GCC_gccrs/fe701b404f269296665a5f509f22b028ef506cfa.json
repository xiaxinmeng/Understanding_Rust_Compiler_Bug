{"sha": "fe701b404f269296665a5f509f22b028ef506cfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3MDFiNDA0ZjI2OTI5NjY2NWE1ZjUwOWYyMmIwMjhlZjUwNmNmYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-12T12:37:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-12T12:37:03Z"}, "message": "(do_include, hack-vms_include_specification): Change handling of\n'#include filename' to be compatible with VAX-C.\n\nFrom-SVN: r6756", "tree": {"sha": "aa4343954fd66b02124c48eedf3e144fbf05a1e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa4343954fd66b02124c48eedf3e144fbf05a1e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe701b404f269296665a5f509f22b028ef506cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe701b404f269296665a5f509f22b028ef506cfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe701b404f269296665a5f509f22b028ef506cfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe701b404f269296665a5f509f22b028ef506cfa/comments", "author": null, "committer": null, "parents": [{"sha": "a32b8cbac844a735becffe2c5becf1d3459effa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32b8cbac844a735becffe2c5becf1d3459effa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32b8cbac844a735becffe2c5becf1d3459effa6"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "6a6b9f11ea0e3ede35e7bb99a84a7cd9a3a3b0fc", "filename": "gcc/cccp.c", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe701b404f269296665a5f509f22b028ef506cfa/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe701b404f269296665a5f509f22b028ef506cfa/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=fe701b404f269296665a5f509f22b028ef506cfa", "patch": "@@ -4028,6 +4028,26 @@ do_include (buf, limit, op, keyword)\n     goto fail;\n \n   default:\n+#ifdef VMS\n+    /*\n+     * Support '#include xyz' like VAX-C to allow for easy use of all the\n+     * decwindow include files. It defaults to '#include <xyz.h>' (so the\n+     * code from case '<' is repeated here) and generates a warning.\n+     */\n+    if (isalpha(*(--fbeg))) {\n+      fend = fbeg;\n+      while (fend != limit && (!isspace(*fend))) fend++;\n+      warning (\"VAX-C-style include specification found, use '#include <filename.h>' !\");\n+      if (fend  == limit) {\n+\tangle_brackets = 1;\n+\t/* If -I-, start with the first -I dir after the -I-.  */\n+\tif (first_bracket_include)\n+\t  search_start = first_bracket_include;\n+\tbreak;\n+      }\n+    }\n+#endif\n+\n   fail:\n     if (retried) {\n       error (\"`#%s' expects \\\"FILENAME\\\" or <FILENAME>\", keyword->name);\n@@ -4067,8 +4087,9 @@ do_include (buf, limit, op, keyword)\n \n   /* Allocate this permanently, because it gets stored in the definitions\n      of macros.  */\n-  fname = (char *) xmalloc (max_include_len + flen + 2);\n+  fname = (char *) xmalloc (max_include_len + flen + 4);\n   /* + 2 above for slash and terminating null.  */\n+  /* + 2 added for '.h' on VMS (to support '#include filename') */\n \n   /* If specified file name is absolute, just open it.  */\n \n@@ -4111,6 +4132,10 @@ do_include (buf, limit, op, keyword)\n       \t/* This is a normal VMS filespec, so use it unchanged.  */\n \tstrncpy (fname, fbeg, flen);\n \tfname[flen] = 0;\n+\t/* if it's '#include filename', add the missing .h */\n+\tif (index(fname,'.')==NULL) {\n+\t  strcat (fname, \".h\");\n+\t}\n       }\n #endif /* VMS */\n       if (importing)\n@@ -9379,6 +9404,18 @@ hack_vms_include_specification (fname)\n     cp = index (fname, '/');\t/* Look for the \"/\" */\n   }\n \n+  /*\n+   * Check if we have a vax-c style '#include filename'\n+   * and add the missing .h\n+   */\n+  if (cp == 0) {\n+    if (index(fname,'.') == 0)\n+      strcat(fname, \".h\");\n+  } else {\n+    if (index(cp,'.') == 0)\n+      strcat(cp, \".h\");\n+  }\n+\n   cp2 = Local;\t\t\t/* initialize */\n \n   /* We are trying to do a number of things here.  First of all, we are"}]}