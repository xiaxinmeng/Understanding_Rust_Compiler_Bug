{"sha": "13c502cdd58e3f48a479d82bc84a1a559009ff14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNjNTAyY2RkNThlM2Y0OGE0NzlkODJiYzg0YTFhNTU5MDA5ZmYxNA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-04-19T19:44:43Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-04-19T19:44:43Z"}, "message": "rtl.texi (jump_insn): Expand on JUMP_LABEL documentation.\n\n\t* rtl.texi (jump_insn): Expand on JUMP_LABEL documentation.\n\t* loop.c (load_mems): Handle a NULL JUMP_LABEL for a JUMP_INSN.\n\nFrom-SVN: r41424", "tree": {"sha": "506fdafc46c4b6ec4b2ce4087363eec750cfc54b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/506fdafc46c4b6ec4b2ce4087363eec750cfc54b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13c502cdd58e3f48a479d82bc84a1a559009ff14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c502cdd58e3f48a479d82bc84a1a559009ff14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c502cdd58e3f48a479d82bc84a1a559009ff14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c502cdd58e3f48a479d82bc84a1a559009ff14/comments", "author": null, "committer": null, "parents": [{"sha": "3dcaf6e0d1737ac856d10d757e3c94bcaceff562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dcaf6e0d1737ac856d10d757e3c94bcaceff562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dcaf6e0d1737ac856d10d757e3c94bcaceff562"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "cfd394e783ee13e14e8692ad42d2615d654ea212", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c502cdd58e3f48a479d82bc84a1a559009ff14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c502cdd58e3f48a479d82bc84a1a559009ff14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13c502cdd58e3f48a479d82bc84a1a559009ff14", "patch": "@@ -1,5 +1,8 @@\n 2001-04-19  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* rtl.texi (jump_insn): Expand on JUMP_LABEL documentation.\n+\t* loop.c (load_mems): Handle a NULL JUMP_LABEL for a JUMP_INSN.\n+\n \t* mips.md (reload_outputdi): Require that operand0 be a\n \tgeneral_operand.\n "}, {"sha": "3e340af9a93549d0578689eb12303ba6c1607bba", "filename": "gcc/loop.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c502cdd58e3f48a479d82bc84a1a559009ff14/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c502cdd58e3f48a479d82bc84a1a559009ff14/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=13c502cdd58e3f48a479d82bc84a1a559009ff14", "patch": "@@ -8850,10 +8850,13 @@ load_mems (loop)\n \t  /* If this is a jump outside of the loop but not right\n \t     after the end of the loop, we would have to emit new fixup\n \t     sequences for each such label.  */\n-\t  if (JUMP_LABEL (p) != end_label\n-\t      && (INSN_UID (JUMP_LABEL (p)) >= max_uid_for_loop\n-\t\t  || INSN_LUID (JUMP_LABEL (p)) < INSN_LUID (loop->start)\n-\t\t  || INSN_LUID (JUMP_LABEL (p)) > INSN_LUID (loop->end)))\n+\t  if (/* If we can't tell where control might go when this\n+\t\t JUMP_INSN is executed, we must be conservative.  */\n+\t      !JUMP_LABEL (p)\n+\t      || (JUMP_LABEL (p) != end_label\n+\t\t  && (INSN_UID (JUMP_LABEL (p)) >= max_uid_for_loop\n+\t\t      || INSN_LUID (JUMP_LABEL (p)) < INSN_LUID (loop->start)\n+\t\t      || INSN_LUID (JUMP_LABEL (p)) > INSN_LUID (loop->end))))\n \t    return;\n \n \t  if (!any_condjump_p (p))"}, {"sha": "4e1dd218ff7506afca90314f76b76178165334c8", "filename": "gcc/rtl.texi", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c502cdd58e3f48a479d82bc84a1a559009ff14/gcc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c502cdd58e3f48a479d82bc84a1a559009ff14/gcc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.texi?ref=13c502cdd58e3f48a479d82bc84a1a559009ff14", "patch": "@@ -2501,14 +2501,15 @@ recorded as a @code{jump_insn}.\n accessed in the same way and in addition contain a field\n @code{JUMP_LABEL} which is defined once jump optimization has completed.\n \n-For simple conditional and unconditional jumps, this field contains the\n-@code{code_label} to which this insn will (possibly conditionally)\n+For simple conditional and unconditional jumps, this field contains\n+the @code{code_label} to which this insn will (possibly conditionally)\n branch.  In a more complex jump, @code{JUMP_LABEL} records one of the\n-labels that the insn refers to; the only way to find the others\n-is to scan the entire body of the insn.\n+labels that the insn refers to; the only way to find the others is to\n+scan the entire body of the insn.  In an @code{addr_vec},\n+@code{JUMP_LABEL} is @code{NULL_RTX}.\n \n-Return insns count as jumps, but since they do not refer to any labels,\n-they have zero in the @code{JUMP_LABEL} field.\n+Return insns count as jumps, but since they do not refer to any\n+labels, their @code{JUMP_LABEL} is @code{NULL_RTX}.\n \n @findex call_insn\n @item call_insn"}]}