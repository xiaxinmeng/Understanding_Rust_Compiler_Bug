{"sha": "42f1d66133be06839a62c257d0f56db2b321d994", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJmMWQ2NjEzM2JlMDY4MzlhNjJjMjU3ZDBmNTZkYjJiMzIxZDk5NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:07:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:07:21Z"}, "message": "[multiple changes]\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch6.adb (No_Constraint_Maybe_Expr_Func): New procedure.\n\t* par-util.adb (No_Constraint): Undo special handling, moved\n\tto par-ch6.adb.\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* aspects.ads: Aspect Warnings is implementation defined Add\n\tsome other missing entries to impl-defined list Mark Warnings\n\tas GNAT pragma in main list.\n\t* sem_ch8.adb: Process aspects for all cases of renaming\n\tdeclarations.\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Function_Call): Set In_Assertion flag.\n\t* sem_elab.adb (Check_Internal_Call_Continue): Do not issue\n\twarnings about possible elaboration error if call is within\n\tan assertion.\n\t* sinfo.ads, sinfo.adb (In_Assertion): New flag in N_Function_Call node.\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* a-calend-vms.adb, g-eacodu-vms.adb, g-trasym-vms-alpha.adb,\n\t* s-auxdec-vms-ia64.adb, s-mastop-vms.adb, s-osprim-vms.adb,\n\ts-tasdeb-vms.adb: Replace pragma Interface by pragma Import.\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.ads (Ignore_Style_Checks_Pragmas): New flag.\n\t* par-prag.adb (Par, case Style_Checks): Recognize\n\tIgnore_Style_Checks_Pragmas.\n\t* sem_prag.adb (Analyze_Pragma, case Style_Checks): Recognize\n\tIgnore_Style_Checks_Pragmas.\n\t* switch-c.adb: Recognize -gnateY switch.\n\t* usage.adb: Add documentation for \"-gnateY\".\n\t* vms_data.ads: Add IGNORE_STYLE_CHECKS_PRAGMAS (-gnateY).\n\n2013-01-29  Vincent Celier  <celier@adacore.com>\n\n\t* clean.adb (Clean_Executables): Add Sid component when calling\n\tQueue.Insert.\n\t* make.adb: When inserting in the Queue, add the Source_Id\n\t(Sid) when it is known (Start_Compile_If_Possible): When the\n\tSource_Id is known (Sid), get the path name of the ALI file\n\t(Full_Lib_File) from it, to avoid finding old ALI files in other\n\tobject directories.\n\t* makeutl.ads (Source_Info): New Source_Id component Sid in\n\tFormat_Gnatmake variant.\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Document -gnateY.\n\n2013-01-29  Doug Rupp  <rupp@adacore.com>\n\n\t* s-osinte-vms.ads, s-taprop-vms.adb, system-vms_64.ads,\n\tsystem-vms-ia64.ads: Replace pragma Interface by pragma Import.\n\nFrom-SVN: r195536", "tree": {"sha": "ad02714b5465afe2a382ed08f4ad633454774c53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad02714b5465afe2a382ed08f4ad633454774c53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42f1d66133be06839a62c257d0f56db2b321d994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f1d66133be06839a62c257d0f56db2b321d994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f1d66133be06839a62c257d0f56db2b321d994", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f1d66133be06839a62c257d0f56db2b321d994/comments", "author": null, "committer": null, "parents": [{"sha": "477cfc5b60785205119bc2ab8b97d309e0a422f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477cfc5b60785205119bc2ab8b97d309e0a422f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/477cfc5b60785205119bc2ab8b97d309e0a422f4"}], "stats": {"total": 501, "additions": 389, "deletions": 112}, "files": [{"sha": "1499ed11f01b3bd94920a58f5dc1a06846787208", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -1,3 +1,63 @@\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch6.adb (No_Constraint_Maybe_Expr_Func): New procedure.\n+\t* par-util.adb (No_Constraint): Undo special handling, moved\n+\tto par-ch6.adb.\n+\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* aspects.ads: Aspect Warnings is implementation defined Add\n+\tsome other missing entries to impl-defined list Mark Warnings\n+\tas GNAT pragma in main list.\n+\t* sem_ch8.adb: Process aspects for all cases of renaming\n+\tdeclarations.\n+\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Function_Call): Set In_Assertion flag.\n+\t* sem_elab.adb (Check_Internal_Call_Continue): Do not issue\n+\twarnings about possible elaboration error if call is within\n+\tan assertion.\n+\t* sinfo.ads, sinfo.adb (In_Assertion): New flag in N_Function_Call node.\n+\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-calend-vms.adb, g-eacodu-vms.adb, g-trasym-vms-alpha.adb,\n+\t* s-auxdec-vms-ia64.adb, s-mastop-vms.adb, s-osprim-vms.adb,\n+\ts-tasdeb-vms.adb: Replace pragma Interface by pragma Import.\n+\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.ads (Ignore_Style_Checks_Pragmas): New flag.\n+\t* par-prag.adb (Par, case Style_Checks): Recognize\n+\tIgnore_Style_Checks_Pragmas.\n+\t* sem_prag.adb (Analyze_Pragma, case Style_Checks): Recognize\n+\tIgnore_Style_Checks_Pragmas.\n+\t* switch-c.adb: Recognize -gnateY switch.\n+\t* usage.adb: Add documentation for \"-gnateY\".\n+\t* vms_data.ads: Add IGNORE_STYLE_CHECKS_PRAGMAS (-gnateY).\n+\n+2013-01-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb (Clean_Executables): Add Sid component when calling\n+\tQueue.Insert.\n+\t* make.adb: When inserting in the Queue, add the Source_Id\n+\t(Sid) when it is known (Start_Compile_If_Possible): When the\n+\tSource_Id is known (Sid), get the path name of the ALI file\n+\t(Full_Lib_File) from it, to avoid finding old ALI files in other\n+\tobject directories.\n+\t* makeutl.ads (Source_Info): New Source_Id component Sid in\n+\tFormat_Gnatmake variant.\n+\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Document -gnateY.\n+\n+2013-01-29  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-osinte-vms.ads, s-taprop-vms.adb, system-vms_64.ads,\n+\tsystem-vms-ia64.ads: Replace pragma Interface by pragma Import.\n+\n 2013-01-29  Robert Dewar  <dewar@adacore.com>\n \n \t* atree.ads, atree.adb (Node30): New function."}, {"sha": "7c2b3a62b467d86c2ba9a9252182786287a0705c", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -49,7 +49,7 @@ package body Ada.Calendar is\n    --  on various targets, a system independent model is incorporated into\n    --  Ada.Calendar. The idea behind the design is to encapsulate all target\n    --  dependent machinery in a single package, thus providing a uniform\n-   --  interface to all existing and any potential children.\n+   --  pragma Import to all existing and any potential children.\n \n    --     package Ada.Calendar\n    --        procedure Split (5 parameters) -------+\n@@ -1017,7 +1017,7 @@ package body Ada.Calendar is\n             Timbuf : out Unsigned_Word_Array;\n             Timadr : Time);\n \n-         pragma Interface (External, Numtim);\n+         pragma Import (External, Numtim);\n \n          pragma Import_Valued_Procedure\n            (Numtim, \"SYS$NUMTIM\",\n@@ -1134,7 +1134,7 @@ package body Ada.Calendar is\n             Input_Time     : Unsigned_Word_Array;\n             Resultant_Time : out Time);\n \n-         pragma Interface (External, Cvt_Vectim);\n+         pragma Import (External, Cvt_Vectim);\n \n          pragma Import_Valued_Procedure\n            (Cvt_Vectim, \"LIB$CVT_VECTIM\","}, {"sha": "c3199cc0d4b2a7683cd452bbdb40e2161040d0c6", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -127,7 +127,7 @@ package Aspects is\n       Aspect_Unsuppress,\n       Aspect_Value_Size,                    -- GNAT\n       Aspect_Variable_Indexing,\n-      Aspect_Warnings,\n+      Aspect_Warnings,                      -- GNAT\n       Aspect_Write,\n \n       --  The following aspects correspond to library unit pragmas\n@@ -234,6 +234,7 @@ package Aspects is\n                              Aspect_Favor_Top_Level          => True,\n                              Aspect_Global                   => True,\n                              Aspect_Inline_Always            => True,\n+                             Aspect_Invariant                => True,\n                              Aspect_Lock_Free                => True,\n                              Aspect_Object_Size              => True,\n                              Aspect_Persistent_BSS           => True,\n@@ -243,18 +244,19 @@ package Aspects is\n                              Aspect_Pure_12                  => True,\n                              Aspect_Pure_Function            => True,\n                              Aspect_Remote_Access_Type       => True,\n-                             Aspect_Shared                   => True,\n                              Aspect_Scalar_Storage_Order     => True,\n+                             Aspect_Shared                   => True,\n                              Aspect_Simple_Storage_Pool      => True,\n                              Aspect_Simple_Storage_Pool_Type => True,\n                              Aspect_Suppress_Debug_Info      => True,\n                              Aspect_Test_Case                => True,\n-                             Aspect_Universal_Data           => True,\n                              Aspect_Universal_Aliasing       => True,\n+                             Aspect_Universal_Data           => True,\n                              Aspect_Unmodified               => True,\n                              Aspect_Unreferenced             => True,\n                              Aspect_Unreferenced_Objects     => True,\n                              Aspect_Value_Size               => True,\n+                             Aspect_Warnings                 => True,\n                              others                          => False);\n \n    --  The following array indicates aspects for which multiple occurrences of"}, {"sha": "9819ff962236fb60485a4a180d6f601988948381", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -397,7 +397,8 @@ package body Clean is\n                 File    => Main_Lib_File,\n                 Unit    => No_Unit_Name,\n                 Index   => 0,\n-                Project => No_Project));\n+                Project => No_Project,\n+                Sid     => No_Source));\n          end if;\n \n          while not Queue.Is_Empty loop\n@@ -440,7 +441,8 @@ package body Clean is\n                                   File    => Withs.Table (K).Afile,\n                                   Unit    => No_Unit_Name,\n                                   Index   => 0,\n-                                  Project => No_Project));\n+                                  Project => No_Project,\n+                                  Sid     => No_Source));\n                            end if;\n                         end loop;\n                      end loop;"}, {"sha": "ceff6e98c09f8d839e4a07a55072f2cfb65becf9", "filename": "gcc/ada/g-eacodu-vms.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fg-eacodu-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fg-eacodu-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-eacodu-vms.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,14 +56,14 @@ procedure Core_Dump (Occurrence : Exception_Occurrence) is\n      Addres : Address           := Address_Zero;\n      Acmode : Access_Mode_Type  := Access_Mode_Zero;\n      Prvhnd : Unsigned_Longword := 0);\n-   pragma Interface (External, Setexv);\n+   pragma Import (External, Setexv);\n    pragma Import_Valued_Procedure (Setexv, \"SYS$SETEXV\",\n      (Cond_Value_Type, Unsigned_Longword, Address, Access_Mode_Type,\n       Unsigned_Longword),\n      (Value, Value, Value, Value, Value));\n \n    procedure Lib_Signal (I : Integer);\n-   pragma Interface (C, Lib_Signal);\n+   pragma Import (C, Lib_Signal);\n    pragma Import_Procedure (Lib_Signal, \"LIB$SIGNAL\", Mechanism => (Value));\n begin\n    Setexv (Status, 1, Address_Zero, 3);"}, {"sha": "c1ea305cfbf6c17c12a53b066c16df69b559ab16", "filename": "gcc/ada/g-trasym-vms-alpha.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym-vms-alpha.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1999-2009, Free Software Foundation, Inc.        --\n+--           Copyright (C) 1999-2012, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,7 +93,7 @@ package body GNAT.Traceback.Symbolic is\n       User_Arg_Value : User_Arg_Type     := 0);\n    --  Comment on above procedure required ???\n \n-   pragma Interface (External, Symbolize);\n+   pragma Import (External, Symbolize);\n \n    pragma Import_Valued_Procedure\n      (Symbolize, \"TBK$SYMBOLIZE\","}, {"sha": "17478c0b263be2d2b46650d61b1fbc00826311c5", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -4280,6 +4280,13 @@ Generate target dependent information.\n @cindex @option{-gnateV} (@command{gcc})\n Check validity of subprogram parameters.\n \n+@item ^-gnateY^/IGNORE_SUPPRESS_SYLE_CHECK_PRAGMAS^\n+@cindex @option{-gnateY} (@command{gcc})\n+Ignore all STYLE_CHECKS pragmas. Full legality checks\n+are still carried out, but the pragmas have no effect\n+on what style checks are active. This allows all style\n+checking options to be controlled from the command line.\n+\n @item -gnatE\n @cindex @option{-gnatE} (@command{gcc})\n Full dynamic elaboration checks."}, {"sha": "61649da3bb8d15d4b401214181256a74d0b112ea", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 61, "deletions": 21, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -2746,7 +2746,8 @@ package body Make is\n                              File    => Sfile,\n                              Unit    => No_Unit_Name,\n                              Project => No_Project,\n-                             Index   => 0))\n+                             Index   => 0,\n+                             Sid     => No_Source))\n                   then\n                      if Is_In_Obsoleted (Sfile) then\n                         Executable_Obsolete := True;\n@@ -3091,6 +3092,7 @@ package body Make is\n          ALI          : ALI_Id;\n          Source_Index : Int;\n          Sfile        : File_Name_Type;\n+         Sid          : Prj.Source_Id;\n          Uname        : Unit_Name_Type;\n          Unit_Name    : Name_Id;\n          Uid          : Prj.Unit_Index;\n@@ -3137,6 +3139,7 @@ package body Make is\n                   loop\n                      Sfile := Withs.Table (K).Sfile;\n                      Uname := Withs.Table (K).Uname;\n+                     Sid   := No_Source;\n \n                      --  If project files are used, find the proper source to\n                      --  compile in case Sfile is the spec but there is a body.\n@@ -3154,12 +3157,14 @@ package body Make is\n                            then\n                               Sfile        := Uid.File_Names (Impl).File;\n                               Source_Index := Uid.File_Names (Impl).Index;\n+                              Sid          := Uid.File_Names (Impl);\n \n                            elsif Uid.File_Names (Spec) /= null\n                              and then not Uid.File_Names (Spec).Locally_Removed\n                            then\n                               Sfile        := Uid.File_Names (Spec).File;\n                               Source_Index := Uid.File_Names (Spec).Index;\n+                              Sid          := Uid.File_Names (Spec);\n                            end if;\n                         end if;\n                      end if;\n@@ -3187,7 +3192,8 @@ package body Make is\n                                File    => Sfile,\n                                Project => ALI_P.Project,\n                                Unit    => Withs.Table (K).Uname,\n-                               Index   => Source_Index));\n+                               Index   => Source_Index,\n+                               Sid     => Sid));\n                         end if;\n                      end if;\n                   end loop;\n@@ -3308,16 +3314,16 @@ package body Make is\n       is\n          In_Lib_Dir      : Boolean;\n          Need_To_Compile : Boolean;\n-         Pid             : Process_Id;\n+         Pid             : Process_Id := Invalid_Pid;\n          Process_Created : Boolean;\n \n          Source           : Queue.Source_Info;\n-         Full_Source_File : File_Name_Type;\n+         Full_Source_File : File_Name_Type := No_File;\n          Source_File_Attr : aliased File_Attributes;\n          --  The full name of the source file and its attributes (size, ...)\n \n          Lib_File      : File_Name_Type;\n-         Full_Lib_File : File_Name_Type;\n+         Full_Lib_File : File_Name_Type := No_File;\n          Lib_File_Attr : aliased File_Attributes;\n          Read_Only     : Boolean := False;\n          ALI           : ALI_Id;\n@@ -3335,23 +3341,49 @@ package body Make is\n          then\n             Queue.Extract (Found, Source);\n \n-            Osint.Full_Source_Name\n-              (Source.File,\n-               Full_File => Full_Source_File,\n-               Attr      => Source_File_Attr'Access);\n+            --  If it is a source in a project, first look for the ALI file\n+            --  in the object directory. When the project is extending another\n+            --  the ALI file may not be found, but the source does not\n+            --  necessarily need to be compiled, as it may already be up to\n+            --  date in the project being extended. In this case, look for an\n+            --  ALI file in all the object directories, as is done when\n+            --  gnatmake is not invoked with a project file.\n+\n+            if Source.Sid /= No_Source then\n+               Initialize_Source_Record (Source.Sid);\n+               Full_Source_File :=\n+                 File_Name_Type (Source.Sid.Path.Display_Name);\n+               Lib_File      := Source.Sid.Dep_Name;\n+               Full_Lib_File := File_Name_Type (Source.Sid.Dep_Path);\n+               Lib_File_Attr := Unknown_Attributes;\n+\n+               if Full_Lib_File /= No_File then\n+                  declare\n+                     FLF : constant String :=\n+                       Get_Name_String (Full_Lib_File) & ASCII.NUL;\n+                  begin\n+                     if not Is_Regular_File\n+                       (FLF'Address, Lib_File_Attr'Access)\n+                     then\n+                        Full_Lib_File := No_File;\n+                     end if;\n+                  end;\n+               end if;\n+            end if;\n \n-            Lib_File := Osint.Lib_File_Name (Source.File, Source.Index);\n+            if Full_Lib_File = No_File then\n+               Osint.Full_Source_Name\n+                 (Source.File,\n+                  Full_File => Full_Source_File,\n+                  Attr      => Source_File_Attr'Access);\n \n-            --  ??? This call could be avoided when using projects, since we\n-            --  know where the ALI file is supposed to be. That would avoid\n-            --  searches in the object directories, including in the runtime\n-            --  dir. However, that would require getting access to the\n-            --  Source_Id.\n+               Lib_File := Osint.Lib_File_Name (Source.File, Source.Index);\n \n-            Osint.Full_Lib_File_Name\n-              (Lib_File,\n-               Lib_File => Full_Lib_File,\n-               Attr     => Lib_File_Attr);\n+               Osint.Full_Lib_File_Name\n+                 (Lib_File,\n+                  Lib_File => Full_Lib_File,\n+                  Attr     => Lib_File_Attr);\n+            end if;\n \n             --  If source has already been compiled, executable is obsolete\n \n@@ -3734,7 +3766,8 @@ package body Make is\n           File    => Main_Source,\n           Project => Main_Project,\n           Unit    => No_Unit_Name,\n-          Index   => Main_Index));\n+          Index   => Main_Index,\n+          Sid     => No_Source));\n \n       First_Compiled_File   := No_File;\n       Most_Recent_Obj_File  := No_File;\n@@ -6650,6 +6683,7 @@ package body Make is\n       Put_In_Q : Boolean := Into_Q;\n       Unit     : Unit_Index;\n       Sfile    : File_Name_Type;\n+      Sid      : Prj.Source_Id;\n       Index    : Int;\n       Project  : Project_Id;\n \n@@ -6659,6 +6693,7 @@ package body Make is\n       Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n       while Unit /= null loop\n          Sfile   := No_File;\n+         Sid     := No_Source;\n          Index   := 0;\n          Project := No_Project;\n \n@@ -6704,15 +6739,18 @@ package body Make is\n                      if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n                         Sfile := No_File;\n                         Index := 0;\n+                        Sid   := No_Source;\n                      else\n                         Sfile := Unit.File_Names (Impl).Display_File;\n                         Index := Unit.File_Names (Impl).Index;\n+                        Sid   := Unit.File_Names (Impl);\n                      end if;\n                   end;\n \n                else\n                   Sfile := Unit.File_Names (Impl).Display_File;\n                   Index := Unit.File_Names (Impl).Index;\n+                  Sid   := Unit.File_Names (Impl);\n                end if;\n             end if;\n \n@@ -6728,6 +6766,7 @@ package body Make is\n \n             Sfile := Unit.File_Names (Spec).Display_File;\n             Index := Unit.File_Names (Spec).Index;\n+            Sid   := Unit.File_Names (Spec);\n             Project := Unit.File_Names (Spec).Project;\n          end if;\n \n@@ -6744,7 +6783,8 @@ package body Make is\n                 File     => Sfile,\n                 Project  => Project,\n                 Unit     => No_Unit_Name,\n-                Index    => Index));\n+                Index    => Index,\n+                Sid      => Sid));\n          end if;\n \n          if not Put_In_Q and then Sfile /= No_File then"}, {"sha": "e5f430440ec72099ea927de0209c149333ed3b9a", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -485,14 +485,15 @@ package Makeutl is\n          record\n             case Format is\n                when Format_Gprbuild =>\n-                  Tree : Project_Tree_Ref := null;\n-                  Id   : Source_Id        := null;\n+                  Tree : Project_Tree_Ref := No_Project_Tree;\n+                  Id   : Source_Id        := No_Source;\n \n                when Format_Gnatmake =>\n                   File    : File_Name_Type := No_File;\n                   Unit    : Unit_Name_Type := No_Unit_Name;\n                   Index   : Int            := 0;\n                   Project : Project_Id     := No_Project;\n+                  Sid     : Source_Id      := No_Source;\n             end case;\n          end record;\n       --  Information about files stored in the queue. The exact information"}, {"sha": "59a93103ed3193cdb9981501eba1272e12b91cda", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -720,6 +720,11 @@ package Opt is\n    --  code from foreign compilers for checking or ASIS purposes. Can be\n    --  set True by use of -gnatI.\n \n+   Ignore_Style_Checks_Pragmas : Boolean := False;\n+   --  GNAT\n+   --  Set True to ignore all Style_Checks pragmas. Can be set True by use\n+   --  of -gnateY.\n+\n    Implementation_Unit_Warnings : Boolean := True;\n    --  GNAT\n    --  Set True to active warnings for use of implementation internal units."}, {"sha": "2243acea2eb308bd55f6342a1e329efcdc3911a9", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 58, "deletions": 9, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -39,16 +39,19 @@ package body Ch6 is\n    function P_Return_Object_Declaration  return Node_Id;\n \n    procedure P_Return_Subtype_Indication (Decl_Node : Node_Id);\n-   --  Decl_Node is a N_Object_Declaration.\n-   --  Set the Null_Exclusion_Present and Object_Definition fields of\n-   --  Decl_Node.\n+   --  Decl_Node is a N_Object_Declaration. Set the Null_Exclusion_Present and\n+   --  Object_Definition fields of Decl_Node.\n \n    procedure Check_Junk_Semicolon_Before_Return;\n-\n    --  Check for common error of junk semicolon before RETURN keyword of\n-   --  function specification. If present, skip over it with appropriate\n-   --  error message, leaving Scan_Ptr pointing to the RETURN after. This\n-   --  routine also deals with a possibly misspelled version of Return.\n+   --  function specification. If present, skip over it with appropriate error\n+   --  message, leaving Scan_Ptr pointing to the RETURN after. This routine\n+   --  also deals with a possibly misspelled version of Return.\n+\n+   procedure No_Constraint_Maybe_Expr_Func;\n+   --  Called after scanning return subtype to check for missing constraint,\n+   --  taking into account the possibility of an occurrence of an expression\n+   --  function where the IS has been forgotten.\n \n    ----------------------------------------\n    -- Check_Junk_Semicolon_Before_Return --\n@@ -76,6 +79,52 @@ package body Ch6 is\n       end if;\n    end Check_Junk_Semicolon_Before_Return;\n \n+   -----------------------------------\n+   -- No_Constraint_Maybe_Expr_Func --\n+   -----------------------------------\n+\n+   procedure No_Constraint_Maybe_Expr_Func is\n+   begin\n+      --  If we have a left paren at the start of the line, then assume this is\n+      --  the case of an expression function with missing IS. We do not have to\n+      --  diagnose the missing IS, that is done elsewhere. We do this game in\n+      --  Ada 2012 mode where expression functions are legal.\n+\n+      if Token = Tok_Left_Paren\n+        and Ada_Version >= Ada_2012\n+        and Token_Is_At_Start_Of_Line\n+      then\n+         --  One exception if we have \"(token ..\" then this is a constraint\n+\n+         declare\n+            Scan_State : Saved_Scan_State;\n+\n+         begin\n+            Save_Scan_State (Scan_State);\n+            Scan; -- past left paren\n+            Scan; -- past following token\n+\n+            --  If we have \"(token ..\" then restore scan state and treat as\n+            --  unexpected constraint.\n+\n+            if Token = Tok_Dot_Dot then\n+               Restore_Scan_State (Scan_State);\n+               No_Constraint;\n+\n+            --  Otherwise we treat this as an expression function\n+\n+            else\n+               Restore_Scan_State (Scan_State);\n+            end if;\n+         end;\n+\n+      --  Otherwise use standard routine to check for no constraint present\n+\n+      else\n+         No_Constraint;\n+      end if;\n+   end No_Constraint_Maybe_Expr_Func;\n+\n    -----------------------------------------------------\n    -- 6.1  Subprogram (Also 6.3, 8.5.4, 10.1.3, 12.3) --\n    -----------------------------------------------------\n@@ -385,7 +434,7 @@ package body Ch6 is\n \n          else\n             Result_Node := P_Subtype_Mark;\n-            No_Constraint;\n+            No_Constraint_Maybe_Expr_Func;\n          end if;\n \n       else\n@@ -965,7 +1014,7 @@ package body Ch6 is\n \n          else\n             Result_Node := P_Subtype_Mark;\n-            No_Constraint;\n+            No_Constraint_Maybe_Expr_Func;\n          end if;\n \n          Set_Null_Exclusion_Present (Specification_Node, Result_Not_Null);"}, {"sha": "dd7b1d704677046a29810b7f8cc20e78ec2ec2a0", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -935,7 +935,10 @@ begin\n                      end if;\n \n                      if J = Slen then\n-                        Set_Style_Check_Options (Options, OK, Ptr);\n+                        if not Ignore_Style_Checks_Pragmas then\n+                           Set_Style_Check_Options (Options, OK, Ptr);\n+                        end if;\n+\n                         exit;\n \n                      else\n@@ -955,17 +958,23 @@ begin\n                OK := False;\n \n             elsif Chars (A) = Name_All_Checks then\n-               if GNAT_Mode then\n-                  Stylesw.Set_GNAT_Style_Check_Options;\n-               else\n-                  Stylesw.Set_Default_Style_Check_Options;\n+               if not Ignore_Style_Checks_Pragmas then\n+                  if GNAT_Mode then\n+                     Stylesw.Set_GNAT_Style_Check_Options;\n+                  else\n+                     Stylesw.Set_Default_Style_Check_Options;\n+                  end if;\n                end if;\n \n             elsif Chars (A) = Name_On then\n-               Style_Check := True;\n+               if not Ignore_Style_Checks_Pragmas then\n+                  Style_Check := True;\n+               end if;\n \n             elsif Chars (A) = Name_Off then\n-               Style_Check := False;\n+               if not Ignore_Style_Checks_Pragmas then\n+                  Style_Check := False;\n+               end if;\n \n             else\n                OK := False;"}, {"sha": "3b59287b703534d5cd653ee14d15af15cdb11f2e", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -635,14 +635,9 @@ package body Util is\n \n    procedure No_Constraint is\n    begin\n-      --  If next token is at start of line, don't object, it seems relatively\n-      --  unlikely that a constraint would be on its own starting a line.\n-\n-      if Token_Is_At_Start_Of_Line then\n-         return;\n-      end if;\n-\n-      --  Otherwise if we have a token that could start a constraint, object\n+      --  If we have a token that could start a constraint on the same line\n+      --  then cnsider this an illegal constraint. It seems unlikely it could\n+      --  be anything else if it is on the same line.\n \n       if Token in Token_Class_Consk then\n          Error_Msg_SC (\"constraint not allowed here\");"}, {"sha": "b8ca67e85b2fec4ac801c823b68a6d6738b5145a", "filename": "gcc/ada/s-auxdec-vms-ia64.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-auxdec-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-auxdec-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms-ia64.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -411,7 +411,7 @@ package body System.Aux_DEC is\n \n       procedure SYS_PAL_INSQHIL\n         (STATUS : out Integer; Header : Address; ITEM : Address);\n-      pragma Interface (External, SYS_PAL_INSQHIL);\n+      pragma Import (External, SYS_PAL_INSQHIL);\n       pragma Import_Valued_Procedure (SYS_PAL_INSQHIL, \"SYS$PAL_INSQHIL\",\n          (Integer, Address, Address),\n          (Value, Value, Value));\n@@ -454,7 +454,7 @@ package body System.Aux_DEC is\n \n       procedure SYS_PAL_REMQHIL\n         (Remret : out Remq; Header : Address);\n-      pragma Interface (External, SYS_PAL_REMQHIL);\n+      pragma Import (External, SYS_PAL_REMQHIL);\n       pragma Import_Valued_Procedure\n         (SYS_PAL_REMQHIL, \"SYS$PAL_REMQHIL\",\n          (Remq, Address),\n@@ -499,7 +499,7 @@ package body System.Aux_DEC is\n \n       procedure SYS_PAL_INSQTIL\n         (STATUS : out Integer; Header : Address; ITEM : Address);\n-      pragma Interface (External, SYS_PAL_INSQTIL);\n+      pragma Import (External, SYS_PAL_INSQTIL);\n       pragma Import_Valued_Procedure (SYS_PAL_INSQTIL, \"SYS$PAL_INSQTIL\",\n          (Integer, Address, Address),\n          (Value, Value, Value));\n@@ -542,7 +542,7 @@ package body System.Aux_DEC is\n \n       procedure SYS_PAL_REMQTIL\n         (Remret : out Remq; Header : Address);\n-      pragma Interface (External, SYS_PAL_REMQTIL);\n+      pragma Import (External, SYS_PAL_REMQTIL);\n       pragma Import_Valued_Procedure (SYS_PAL_REMQTIL, \"SYS$PAL_REMQTIL\",\n          (Remq, Address),\n          (Value, Value));"}, {"sha": "7426f50a5ec6cd2fc43889c1191e171ad9bcb648", "filename": "gcc/ada/s-mastop-vms.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-mastop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-mastop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop-vms.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Version for Alpha/VMS)                          --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -176,7 +176,7 @@ package body System.Machine_State_Operations is\n          Invo_Handle  : Invo_Handle_Type;\n          Invo_Context : out Invo_Context_Blk_Type);\n \n-      pragma Interface (External, Get_Invo_Context);\n+      pragma Import (External, Get_Invo_Context);\n \n       pragma Import_Valued_Procedure (Get_Invo_Context, \"LIB$GET_INVO_CONTEXT\",\n          (Unsigned_Longword, Invo_Handle_Type, Invo_Context_Blk_Type),\n@@ -221,7 +221,7 @@ package body System.Machine_State_Operations is\n          Result : out Invo_Handle_Type; -- return value\n          ICB    : Invo_Handle_Type);\n \n-      pragma Interface (External, Get_Prev_Invo_Handle);\n+      pragma Import (External, Get_Prev_Invo_Handle);\n \n       pragma Import_Valued_Procedure\n         (Get_Prev_Invo_Handle, \"LIB$GET_PREV_INVO_HANDLE\",\n@@ -244,7 +244,7 @@ package body System.Machine_State_Operations is\n       procedure Get_Curr_Invo_Context\n         (Invo_Context : out Invo_Context_Blk_Type);\n \n-      pragma Interface (External, Get_Curr_Invo_Context);\n+      pragma Import (External, Get_Curr_Invo_Context);\n \n       pragma Import_Valued_Procedure\n         (Get_Curr_Invo_Context, \"LIB$GET_CURR_INVO_CONTEXT\",\n@@ -255,7 +255,7 @@ package body System.Machine_State_Operations is\n          Result       : out Invo_Handle_Type; -- return value\n          Invo_Context : Invo_Context_Blk_Type);\n \n-      pragma Interface (External, Get_Invo_Handle);\n+      pragma Import (External, Get_Invo_Handle);\n \n       pragma Import_Valued_Procedure (Get_Invo_Handle, \"LIB$GET_INVO_HANDLE\",\n          (Invo_Handle_Type, Invo_Context_Blk_Type),"}, {"sha": "e8cc6b8cb42c0bfa4312f6426b9604399f885d2d", "filename": "gcc/ada/s-osinte-vms.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-osinte-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-osinte-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vms.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -125,7 +125,7 @@ package System.OS_Interface is\n       Acmode : unsigned_short := 0;\n       Mbxnam : String := String'Null_Parameter;\n       Flags  : unsigned_long := 0);\n-   pragma Interface (External, Sys_Assign);\n+   pragma Import (External, Sys_Assign);\n    pragma Import_Valued_Procedure\n      (Sys_Assign, \"SYS$ASSIGN\",\n       (Cond_Value_Type, String,         unsigned_short,\n@@ -148,7 +148,7 @@ package System.OS_Interface is\n      (Status : out Cond_Value_Type;\n       Reqidt : Address;\n       Acmode : unsigned);\n-   pragma Interface (External, Sys_Cantim);\n+   pragma Import (External, Sys_Cantim);\n    pragma Import_Valued_Procedure\n      (Sys_Cantim, \"SYS$CANTIM\",\n       (Cond_Value_Type, Address, unsigned),\n@@ -180,7 +180,7 @@ package System.OS_Interface is\n       Acmode : unsigned_short := 0;\n       Lognam : String;\n       Flags  : unsigned_long := 0);\n-   pragma Interface (External, Sys_Crembx);\n+   pragma Import (External, Sys_Crembx);\n    pragma Import_Valued_Procedure\n      (Sys_Crembx, \"SYS$CREMBX\",\n       (Cond_Value_Type, unsigned_char,  unsigned_short,\n@@ -235,7 +235,7 @@ package System.OS_Interface is\n       P5     : unsigned_long := 0;\n       P6     : unsigned_long := 0);\n \n-   pragma Interface (External, Sys_QIO);\n+   pragma Import (External, Sys_QIO);\n    pragma Import_Valued_Procedure\n      (Sys_QIO, \"SYS$QIO\",\n       (Cond_Value_Type,      unsigned_long, unsigned_short, unsigned_long,\n@@ -278,7 +278,7 @@ package System.OS_Interface is\n       AST    : AST_Handler;\n       Reqidt : Address;\n       Flags  : unsigned_long);\n-   pragma Interface (External, Sys_Setimr);\n+   pragma Import (External, Sys_Setimr);\n    pragma Import_Valued_Procedure\n      (Sys_Setimr, \"SYS$SETIMR\",\n       (Cond_Value_Type, unsigned_long,     Long_Integer,"}, {"sha": "5fa499bd13f7339725a3bab2a733b05190bc066a", "filename": "gcc/ada/s-osprim-vms.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-osprim-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-osprim-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-vms.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -81,7 +81,7 @@ package body System.OS_Primitives is\n       Reptim : Long_Integer := Long_Integer'Null_Parameter\n      );\n \n-   pragma Interface (External, Sys_Schdwk);\n+   pragma Import (External, Sys_Schdwk);\n    --  VMS system call to schedule a wakeup event\n    pragma Import_Valued_Procedure\n      (Sys_Schdwk, \"SYS$SCHDWK\",\n@@ -105,7 +105,7 @@ package body System.OS_Primitives is\n       Tim    : out OS_Time\n      );\n    --  VMS system call to get the current system time\n-   pragma Interface (External, Sys_Gettim);\n+   pragma Import (External, Sys_Gettim);\n    pragma Import_Valued_Procedure\n      (Sys_Gettim, \"SYS$GETTIM\",\n       (Cond_Value_Type, OS_Time),\n@@ -122,7 +122,7 @@ package body System.OS_Primitives is\n \n    procedure Sys_Hiber (Status : out Cond_Value_Type);\n    --  VMS system call to hibernate the current process\n-   pragma Interface (External, Sys_Hiber);\n+   pragma Import (External, Sys_Hiber);\n    pragma Import_Valued_Procedure\n      (Sys_Hiber, \"SYS$HIBER\",\n       (Cond_Value_Type),"}, {"sha": "53034cad012318297913418c2cb1fd29ac48aab9", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -1225,7 +1225,7 @@ package body System.Task_Primitives.Operations is\n         return System.Aux_DEC.Unsigned_Word;\n       --  DBGEXT is imported  from s-tasdeb.adb and its parameter re-typed\n       --  as Address to avoid having a VMS specific s-tasdeb.ads.\n-      pragma Interface (C, DBGEXT);\n+      pragma Import (C, DBGEXT);\n       pragma Import_Function (DBGEXT, \"GNAT$DBGEXT\");\n \n       type Facility_Type is range 0 .. 65535;"}, {"sha": "1dbb5c53fc5b044e2056b1ebbfdd5e57850a793d", "filename": "gcc/ada/s-tasdeb-vms.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-tasdeb-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fs-tasdeb-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb-vms.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 2008-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2008-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -556,7 +556,7 @@ package body System.Tasking.Debug is\n       Item_Req  : Unsigned_Word;\n       Out_Buff  : Unsigned_Longword;\n       Buff_Siz  : Unsigned_Word);\n-   pragma Interface (External, Debug_Get);\n+   pragma Import (External, Debug_Get);\n \n    pragma Import_Procedure (Debug_Get, \"CMA$DEBUG_GET\",\n      (OSI.Thread_Id, Unsigned_Word, System.Address, Unsigned_Word),\n@@ -572,7 +572,7 @@ package body System.Tasking.Debug is\n       Outlen : out Unsigned_Word;\n       Outbuf : out String;\n       Prmlst : Unsigned_Longword_Array);\n-   pragma Interface (External, FAOL);\n+   pragma Import (External, FAOL);\n \n    pragma Import_Valued_Procedure (FAOL, \"SYS$FAOL\",\n      (Cond_Value_Type, String, Unsigned_Word, String, Unsigned_Longword_Array),\n@@ -583,7 +583,7 @@ package body System.Tasking.Debug is\n      Message_String : String);\n \n    procedure Put_Output (Message_String : String);\n-   pragma Interface (External, Put_Output);\n+   pragma Import (External, Put_Output);\n \n    pragma Import_Valued_Procedure (Put_Output, \"LIB$PUT_OUTPUT\",\n      (Cond_Value_Type, String),\n@@ -598,7 +598,7 @@ package body System.Tasking.Debug is\n       Number_Of_Arguments : Integer := Integer'Null_Parameter;\n       FAO_Argument_1      : Unsigned_Longword :=\n                               Unsigned_Longword'Null_Parameter);\n-   pragma Interface (External, Signal);\n+   pragma Import (External, Signal);\n \n    pragma Import_Procedure (Signal, \"LIB$SIGNAL\",\n       (Cond_Value_Type, Integer, Unsigned_Longword),"}, {"sha": "976d3e2f27bfa87dea4c15c5a2b8fd4399389f2c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -501,6 +501,12 @@ package body Sem_Ch6 is\n       end if;\n \n       Analyze_Call (N);\n+\n+      --  Mark function call if within assertion\n+\n+      if In_Assertion_Expr /= 0 then\n+         Set_In_Assertion (N);\n+      end if;\n    end Analyze_Function_Call;\n \n    -----------------------------"}, {"sha": "a3837951962e4578981bf8e9c34f40de5a21e5ac", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -554,6 +554,14 @@ package body Sem_Ch8 is\n             Set_Renamed_Object (Id, Entity (Nam));\n          end if;\n       end if;\n+\n+      --  Implementation-defined aspect specifications can appear in a renaming\n+      --  declaration, but not language-defined ones. The call to procedure\n+      --  Analyze_Aspect_Specifications will take care of this error check.\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n    end Analyze_Exception_Renaming;\n \n    ---------------------------\n@@ -681,6 +689,14 @@ package body Sem_Ch8 is\n \n          Check_Library_Unit_Renaming (N, Old_P);\n       end if;\n+\n+      --  Implementation-defined aspect specifications can appear in a renaming\n+      --  declaration, but not language-defined ones. The call to procedure\n+      --  Analyze_Aspect_Specifications will take care of this error check.\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, New_P);\n+      end if;\n    end Analyze_Generic_Renaming;\n \n    -----------------------------\n@@ -728,8 +744,7 @@ package body Sem_Ch8 is\n             then\n                null;\n \n-            --  A renaming of an unchecked union does not have an\n-            --  actual subtype.\n+            --  A renaming of an unchecked union has no actual subtype\n \n             elsif Is_Unchecked_Union (Typ) then\n                null;\n@@ -800,9 +815,7 @@ package body Sem_Ch8 is\n       --  when the renaming is generated in removing side effects of an\n       --  already-analyzed expression.\n \n-      if Nkind (Nam) = N_Selected_Component\n-        and then Analyzed (Nam)\n-      then\n+      if Nkind (Nam) = N_Selected_Component and then Analyzed (Nam) then\n          T := Etype (Nam);\n          Dec :=  Build_Actual_Subtype_Of_Component (Etype (Nam), Nam);\n \n@@ -1235,6 +1248,17 @@ package body Sem_Ch8 is\n       end if;\n \n       Set_Renamed_Object (Id, Nam);\n+\n+      --  Implementation-defined aspect specifications can appear in a renaming\n+      --  declaration, but not language-defined ones. The call to procedure\n+      --  Analyze_Aspect_Specifications will take care of this error check.\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Id);\n+      end if;\n+\n+      --  Deal with dimensions\n+\n       Analyze_Dimension (N);\n    end Analyze_Object_Renaming;\n \n@@ -1381,6 +1405,14 @@ package body Sem_Ch8 is\n             end;\n          end if;\n       end if;\n+\n+      --  Implementation-defined aspect specifications can appear in a renaming\n+      --  declaration, but not language-defined ones. The call to procedure\n+      --  Analyze_Aspect_Specifications will take care of this error check.\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, New_P);\n+      end if;\n    end Analyze_Package_Renaming;\n \n    -------------------------------"}, {"sha": "74cbdf10df6b6eb32409d02e287e159d682fe581", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -2252,6 +2252,13 @@ package body Sem_Elab is\n \n          if not Suppress_Elaboration_Warnings (E)\n            and then not Elaboration_Checks_Suppressed (E)\n+\n+           --  Suppress this warning if we have a function call that occurred\n+           --  within an assertion expression, since we can get false warnings\n+           --  in this case, due to the out of order handling in this case.\n+\n+           and then (Nkind (Original_Node (N)) /= N_Function_Call\n+                      or else not In_Assertion (Original_Node (N)))\n          then\n             if Inst_Case then\n                Error_Msg_NE"}, {"sha": "d0c9661222cb4a4483bad3371001089293184489", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -10454,8 +10454,9 @@ package body Sem_Prag is\n          -- Implemented --\n          -----------------\n \n-         --  pragma Implemented (procedure_LOCAL_NAME, implementation_kind);\n-         --  implementation_kind ::=\n+         --  pragma Implemented (procedure_LOCAL_NAME, IMPLEMENTATION_KIND);\n+\n+         --  IMPLEMENTATION_KIND ::=\n          --    By_Entry | By_Protected_Procedure | By_Any | Optional\n \n          --  \"By_Any\" and \"Optional\" are treated as synonyms in order to\n@@ -14945,15 +14946,17 @@ package body Sem_Prag is\n \n                   E := Entity (E_Id);\n \n-                  if E = Any_Id then\n-                     return;\n-                  else\n-                     loop\n-                        Set_Suppress_Style_Checks (E,\n-                          (Chars (Get_Pragma_Arg (Arg1)) = Name_Off));\n-                        exit when No (Homonym (E));\n-                        E := Homonym (E);\n-                     end loop;\n+                  if not Ignore_Style_Checks_Pragmas then\n+                     if E = Any_Id then\n+                        return;\n+                     else\n+                        loop\n+                           Set_Suppress_Style_Checks\n+                             (E, Chars (Get_Pragma_Arg (Arg1)) = Name_Off);\n+                           exit when No (Homonym (E));\n+                           E := Homonym (E);\n+                        end loop;\n+                     end if;\n                   end if;\n                end;\n \n@@ -14982,7 +14985,10 @@ package body Sem_Prag is\n                         --  them in the parser.\n \n                         if J = Slen then\n-                           Set_Style_Check_Options (Options);\n+                           if not Ignore_Style_Checks_Pragmas then\n+                              Set_Style_Check_Options (Options);\n+                           end if;\n+\n                            exit;\n                         end if;\n \n@@ -14992,17 +14998,23 @@ package body Sem_Prag is\n \n                elsif Nkind (A) = N_Identifier then\n                   if Chars (A) = Name_All_Checks then\n-                     if GNAT_Mode then\n-                        Set_GNAT_Style_Check_Options;\n-                     else\n-                        Set_Default_Style_Check_Options;\n+                     if not Ignore_Style_Checks_Pragmas then\n+                        if GNAT_Mode then\n+                           Set_GNAT_Style_Check_Options;\n+                        else\n+                           Set_Default_Style_Check_Options;\n+                        end if;\n                      end if;\n \n                   elsif Chars (A) = Name_On then\n-                     Style_Check := True;\n+                     if not Ignore_Style_Checks_Pragmas then\n+                        Style_Check := True;\n+                     end if;\n \n                   elsif Chars (A) = Name_Off then\n-                     Style_Check := False;\n+                     if not Ignore_Style_Checks_Pragmas then\n+                        Style_Check := False;\n+                     end if;\n                   end if;\n                end if;\n             end if;"}, {"sha": "3d5a64434f241146bfeba6257791de57e85f2cb8", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -1631,6 +1631,14 @@ package body Sinfo is\n       return Flag16 (N);\n    end Import_Interface_Present;\n \n+   function In_Assertion\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Function_Call);\n+      return Flag4 (N);\n+   end In_Assertion;\n+\n    function In_Present\n       (N : Node_Id) return Boolean is\n    begin\n@@ -4695,6 +4703,14 @@ package body Sinfo is\n       Set_Flag16 (N, Val);\n    end Set_Import_Interface_Present;\n \n+   procedure Set_In_Assertion\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Function_Call);\n+      Set_Flag4 (N, Val);\n+   end Set_In_Assertion;\n+\n    procedure Set_In_Present\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "20fb08c407187d98d48c782ce5005c27144b47e8", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -1218,6 +1218,11 @@ package Sinfo is\n    --     pragma of the other kind is also present. This is used to avoid\n    --     generating some unwanted error messages.\n \n+   --  In_Assertion (Flag4-Sem)\n+   --     This flag is present in N_Function_Call nodes. It is set if the\n+   --     function is called from within an assertion expression. This is\n+   --     used to avoid some bogus warnings about early elaboration.\n+\n    --  Includes_Infinities (Flag11-Sem)\n    --    This flag is present in N_Range nodes. It is set for the range of\n    --    unconstrained float types defined in Standard, which include not only\n@@ -4757,6 +4762,7 @@ package Sinfo is\n       --   actual parameter part)\n       --  First_Named_Actual (Node4-Sem)\n       --  Controlling_Argument (Node1-Sem) (set to Empty if not dispatching)\n+      --  In_Assertion (Flag4-Sem)\n       --  Is_Expanded_Build_In_Place_Call (Flag11-Sem)\n       --  Do_Tag_Check (Flag13-Sem)\n       --  No_Elaboration_Check (Flag14-Sem)\n@@ -8590,6 +8596,9 @@ package Sinfo is\n    function Import_Interface_Present\n      (N : Node_Id) return Boolean;    -- Flag16\n \n+   function In_Assertion\n+     (N : Node_Id) return Boolean;    -- Flag4\n+\n    function In_Present\n      (N : Node_Id) return Boolean;    -- Flag15\n \n@@ -9565,6 +9574,9 @@ package Sinfo is\n    procedure Set_Import_Interface_Present\n      (N : Node_Id; Val : Boolean := True);    -- Flag16\n \n+   procedure Set_In_Assertion\n+     (N : Node_Id; Val : Boolean := True);    -- Flag4\n+\n    procedure Set_In_Present\n      (N : Node_Id; Val : Boolean := True);    -- Flag15\n \n@@ -11952,6 +11964,7 @@ package Sinfo is\n    pragma Inline (Interface_Present);\n    pragma Inline (Includes_Infinities);\n    pragma Inline (Import_Interface_Present);\n+   pragma Inline (In_Assertion);\n    pragma Inline (In_Present);\n    pragma Inline (Inherited_Discriminant);\n    pragma Inline (Instance_Spec);\n@@ -12272,6 +12285,7 @@ package Sinfo is\n    pragma Inline (Set_Interface_List);\n    pragma Inline (Set_Interface_Present);\n    pragma Inline (Set_Import_Interface_Present);\n+   pragma Inline (Set_In_Assertion);\n    pragma Inline (Set_In_Present);\n    pragma Inline (Set_Inherited_Discriminant);\n    pragma Inline (Set_Instance_Spec);"}, {"sha": "2ac486bd30fd1975bede85b8dde5bee757508a63", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -633,6 +633,12 @@ package body Switch.C is\n                      Ptr := Ptr + 1;\n                      Check_Validity_Of_Parameters := True;\n \n+                  --  -gnateY (ignore Style_Checks pragmas)\n+\n+                  when 'Y' =>\n+                     Ignore_Style_Checks_Pragmas := True;\n+                     Ptr := Ptr + 1;\n+\n                   --  -gnatez (final delimiter of explicit switches)\n \n                   --  All switches that come after -gnatez have been added by"}, {"sha": "bdf2b2cb7ab516479a25c31d25eb4adc0f583a51", "filename": "gcc/ada/system-vms-ia64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsystem-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsystem-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-ia64.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -239,7 +239,7 @@ private\n    ----------------------------\n \n    procedure Lib_Stop (Cond_Value : Integer);\n-   pragma Interface (C, Lib_Stop);\n+   pragma Import (C, Lib_Stop);\n    pragma Import_Procedure (Lib_Stop, \"LIB$STOP\", Mechanism => (Value));\n    --  Interface to VMS condition handling. Used by RTSfind and pragma\n    --  {Import,Export}_Exception. Put here because this is the only"}, {"sha": "b8c57de99917242953bd56790f849e5dd943f3e0", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -239,7 +239,7 @@ private\n    ----------------------------\n \n    procedure Lib_Stop (Cond_Value : Integer);\n-   pragma Interface (C, Lib_Stop);\n+   pragma Import (C, Lib_Stop);\n    pragma Import_Procedure (Lib_Stop, \"LIB$STOP\", Mechanism => (Value));\n    --  Interface to VMS condition handling. Used by RTSfind and pragma\n    --  {Import,Export}_Exception. Put here because this is the only"}, {"sha": "4efa6076185b4267c2b16f14724a1ad3779953c5", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -257,6 +257,11 @@ begin\n    Write_Switch_Char (\"eV\");\n    Write_Line (\"Validity checks on subprogram parameters\");\n \n+   --  Line for -gnateY switch\n+\n+   Write_Switch_Char (\"eY\");\n+   Write_Line (\"Ignore all Style_Checks pragmas in source\");\n+\n    --  Line for -gnatez switch\n \n    Write_Switch_Char (\"ez\");"}, {"sha": "e2d926032396d186a0757ec4f29422439a4cddd8", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f1d66133be06839a62c257d0f56db2b321d994/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=42f1d66133be06839a62c257d0f56db2b321d994", "patch": "@@ -1786,14 +1786,22 @@ package VMS_Data is\n                                              \"-gnati1\";\n    --  NODOC (see /IDENTIFIER_CHARACTER_SET)\n \n-   S_GCC_Ignore  : aliased constant S := \"/IGNORE_REP_CLAUSES \"            &\n+   S_GCC_IgnoreR : aliased constant S := \"/IGNORE_REP_CLAUSES \"            &\n                                              \"-gnatI\";\n    --        /IGNORE_REP_CLAUSES\n    --\n    --   Causes all representation clauses to be ignored and treated as\n    --   comments. Useful when compiling foreign code (for example when ASIS\n    --   is used to analyze such code).\n \n+   S_GCC_IgnoreS : aliased constant S := \"/IGNORE_STYLE_CHECKS_PRAGMAS \"   &\n+                                             \"-gnateY\";\n+   --        /IGNORE_STYLE_CHECKS_PRAGMAS\n+   --\n+   --   Causes all Style_Checks pragmas to be checked for legality, but\n+   --   otherwise ignored. Allows style checks to be fully controlled by\n+   --   command line qualifiers.\n+\n    S_GCC_Immed   : aliased constant S := \"/IMMEDIATE_ERRORS \"              &\n                                              \"-gnatdO\";\n    --        /NOIMMEDIATE_ERRORS (D)\n@@ -3660,7 +3668,8 @@ package VMS_Data is\n                      S_GCC_Help    'Access,\n                      S_GCC_Ident   'Access,\n                      S_GCC_IdentX  'Access,\n-                     S_GCC_Ignore  'Access,\n+                     S_GCC_IgnoreR 'Access,\n+                     S_GCC_IgnoreS 'Access,\n                      S_GCC_Immed   'Access,\n                      S_GCC_Inline  'Access,\n                      S_GCC_InlineX 'Access,"}]}