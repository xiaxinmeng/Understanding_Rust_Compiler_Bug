{"sha": "6b3736a12b14c2d2dddafeea0941aaaf413af393", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIzNzM2YTEyYjE0YzJkMmRkZGFmZWVhMDk0MWFhYWY0MTNhZjM5Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-11-03T15:56:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-11-03T15:56:17Z"}, "message": "reload.c (combine_reloads): Don't combine an output reload if there are other reloads around for part of...\n\n\t* reload.c (combine_reloads): Don't combine an output reload if there\n\tare other reloads around for part of the output.\n\nFrom-SVN: r46734", "tree": {"sha": "8f97ad08360a62515f315d4af00d268994015a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f97ad08360a62515f315d4af00d268994015a1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b3736a12b14c2d2dddafeea0941aaaf413af393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3736a12b14c2d2dddafeea0941aaaf413af393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3736a12b14c2d2dddafeea0941aaaf413af393", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3736a12b14c2d2dddafeea0941aaaf413af393/comments", "author": null, "committer": null, "parents": [{"sha": "1285011e67bc94e8ed28b9711ace7445d4588254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1285011e67bc94e8ed28b9711ace7445d4588254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1285011e67bc94e8ed28b9711ace7445d4588254"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "bbdb844fca46ca27a45867c6bb1bd27056089509", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3736a12b14c2d2dddafeea0941aaaf413af393/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3736a12b14c2d2dddafeea0941aaaf413af393/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b3736a12b14c2d2dddafeea0941aaaf413af393", "patch": "@@ -1,5 +1,16 @@\n Sat Nov  3 10:37:56 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* reload.c (combine_reloads): Don't combine an output reload if there\n+\tare other reloads around for part of the output.\n+\n+\t* emit-rtl.c (set_mem_attributes): Set RTX_UNCHANGINGP_P if T is a\n+\tconstant expression.\n+\t(set_mem_decl): New function.\n+\t* expr.h (set_mem_decl): New declaration.\n+\t* final.c (get_decl_from_op): Don't use ORIGINAL_REGNO if not pseudo.\n+\t(output_asm_operand_names): Add tab.\n+\t* reload1.c (alter_reg): Set decl of MEM from REG_DECL.\n+\n \t* builtins.c (get_memory_rtx): Properly set MEM alias set and\n \tattributes.\n "}, {"sha": "ad884ae4c786bb713bc50e0c09c73ffd9bbf3d34", "filename": "gcc/reload.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3736a12b14c2d2dddafeea0941aaaf413af393/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3736a12b14c2d2dddafeea0941aaaf413af393/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=6b3736a12b14c2d2dddafeea0941aaaf413af393", "patch": "@@ -1641,6 +1641,16 @@ combine_reloads ()\n   if (earlyclobber_operand_p (rld[output_reload].out))\n     return;\n \n+  /* If there is a reload for part of the address of this operand, we would\n+     need to chnage it to RELOAD_FOR_OTHER_ADDRESS.  But that would extend\n+     its life to the point where doing this combine would not lower the\n+     number of spill registers needed.  */\n+  for (i = 0; i < n_reloads; i++)\n+    if ((rld[i].when_needed == RELOAD_FOR_OUTPUT_ADDRESS\n+\t || rld[i].when_needed == RELOAD_FOR_OUTADDR_ADDRESS)\n+\t&& rld[i].opnum == rld[output_reload].opnum)\n+      return;\n+\n   /* Check each input reload; can we combine it?  */\n \n   for (i = 0; i < n_reloads; i++)"}]}