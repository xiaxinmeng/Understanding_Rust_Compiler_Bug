{"sha": "60e0af94184fd0ca0a9de35f8abe31f22537b655", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBlMGFmOTQxODRmZDBjYTBhOWRlMzVmOGFiZTMxZjIyNTM3YjY1NQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2007-03-19T13:36:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-03-19T13:36:29Z"}, "message": "re PR tree-optimization/31254 (verify_ssa failed: type mismatch between an SSA_NAME and its symbol)\n\n2007-03-19  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\tRichard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/31254\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1):\n\tUse handled_component_p () where appropriate.  Continue\n\tpropagating into the rhs if we propagated into an INDIRECT_REF\n\ton the lhs.\n\n\t* gcc.dg/torture/pr31254.c: New testcase.\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r123060", "tree": {"sha": "5d5924d36ea276f32b54a6e14048922b48868cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d5924d36ea276f32b54a6e14048922b48868cfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60e0af94184fd0ca0a9de35f8abe31f22537b655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e0af94184fd0ca0a9de35f8abe31f22537b655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e0af94184fd0ca0a9de35f8abe31f22537b655", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e0af94184fd0ca0a9de35f8abe31f22537b655/comments", "author": null, "committer": null, "parents": [{"sha": "3d16fe64c5be0a0ff96b98e78008441b8ab5b35c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d16fe64c5be0a0ff96b98e78008441b8ab5b35c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d16fe64c5be0a0ff96b98e78008441b8ab5b35c"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "16a38b1086fdf6e59e14a476d6f76ab769c45d17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60e0af94184fd0ca0a9de35f8abe31f22537b655", "patch": "@@ -1,3 +1,12 @@\n+2007-03-19  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\tRichard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/31254\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1):\n+\tUse handled_component_p () where appropriate.  Continue\n+\tpropagating into the rhs if we propagated into an INDIRECT_REF\n+\ton the lhs.\n+\n 2007-03-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.md (op_type attribute): RRR instruction type added."}, {"sha": "b62c6ebe11809d389cae30c81fec83e55b48781b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60e0af94184fd0ca0a9de35f8abe31f22537b655", "patch": "@@ -1,3 +1,9 @@\n+2007-03-19  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\tRichard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/31254\n+\t* gcc.dg/torture/pr31254.c: New testcase.\n+\n 2007-03-19  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.dg/torture/pr26565.c: Expect warning on packed field for"}, {"sha": "cec301273e5b6a42a453ba1f6dd136dc7fc24419", "filename": "gcc/testsuite/gcc.dg/torture/pr31254.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr31254.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr31254.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr31254.c?ref=60e0af94184fd0ca0a9de35f8abe31f22537b655", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+\n+struct timespec\n+{\n+  long tv_sec;\n+  long tv_nsec;\n+};\n+struct inode\n+{\n+  struct timespec i_atime;\n+  struct timespec i_mtime;\n+};\n+struct afs_vnode\n+{\n+  struct inode vfs_inode;\n+};\n+static inline\n+  struct inode *AFS_VNODE_TO_I (struct afs_vnode *vnode)\n+{\n+  return &vnode->vfs_inode;\n+};\n+afs_inode_map_status (struct afs_vnode *vnode)\n+{\n+  struct inode *inode = AFS_VNODE_TO_I (vnode);\n+  inode->i_atime = inode->i_mtime;\n+}"}, {"sha": "95a0c91a1de4c86f1ff0550b9698c4b781957b24", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e0af94184fd0ca0a9de35f8abe31f22537b655/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=60e0af94184fd0ca0a9de35f8abe31f22537b655", "patch": "@@ -680,7 +680,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs, tree use_stmt)\n   /* Strip away any outer COMPONENT_REF/ARRAY_REF nodes from the LHS. \n      ADDR_EXPR will not appear on the LHS.  */\n   lhs = GIMPLE_STMT_OPERAND (use_stmt, 0);\n-  while (TREE_CODE (lhs) == COMPONENT_REF || TREE_CODE (lhs) == ARRAY_REF)\n+  while (handled_component_p (lhs))\n     lhs = TREE_OPERAND (lhs, 0);\n \n   rhs = GIMPLE_STMT_OPERAND (use_stmt, 1);\n@@ -695,9 +695,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs, tree use_stmt)\n       fold_stmt_inplace (use_stmt);\n       tidy_after_forward_propagate_addr (use_stmt);\n \n-      /* The only case we did not replace all uses this way is if the\n-\t use statement is of the form *name = name.  */\n-      return rhs != name;\n+      /* Continue propagating into the RHS.  */\n     }\n \n   /* Trivial case.  The use statement could be a trivial copy or a\n@@ -714,8 +712,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs, tree use_stmt)\n \n   /* Strip away any outer COMPONENT_REF, ARRAY_REF or ADDR_EXPR\n      nodes from the RHS.  */\n-  while (TREE_CODE (rhs) == COMPONENT_REF\n-\t || TREE_CODE (rhs) == ARRAY_REF\n+  while (handled_component_p (rhs)\n \t || TREE_CODE (rhs) == ADDR_EXPR)\n     rhs = TREE_OPERAND (rhs, 0);\n "}]}