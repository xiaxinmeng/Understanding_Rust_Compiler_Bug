{"sha": "c67ddce574791d94740ebd632bc4e44e7af9cf35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY3ZGRjZTU3NDc5MWQ5NDc0MGViZDYzMmJjNGU0NGU3YWY5Y2YzNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:59:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:59:35Z"}, "message": "Update comments.\n\nFrom-SVN: r13251", "tree": {"sha": "c57efc1794f2f35a7121afe0510b066758adabef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c57efc1794f2f35a7121afe0510b066758adabef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c67ddce574791d94740ebd632bc4e44e7af9cf35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67ddce574791d94740ebd632bc4e44e7af9cf35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67ddce574791d94740ebd632bc4e44e7af9cf35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67ddce574791d94740ebd632bc4e44e7af9cf35/comments", "author": null, "committer": null, "parents": [{"sha": "6fceaa5f5b3cd53c75847d8d1cc3e06b219b6122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fceaa5f5b3cd53c75847d8d1cc3e06b219b6122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fceaa5f5b3cd53c75847d8d1cc3e06b219b6122"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "7a8f98b0e8efca018ffbd71b965629548f882070", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67ddce574791d94740ebd632bc4e44e7af9cf35/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67ddce574791d94740ebd632bc4e44e7af9cf35/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=c67ddce574791d94740ebd632bc4e44e7af9cf35", "patch": "@@ -451,6 +451,9 @@ output_function_epilogue (stream, size)\n \tmask |= 1 << regno;\n       }\n   offset = foffset + nregs * 4;\n+  /* FIXME : leaf_function_p below is too strong.\n+     What we really need to know there is if there could be pending\n+     stack adjustment needed at that point. */\n   restore_from_sp = ! frame_pointer_needed\n \t     || (! current_function_calls_alloca && leaf_function_p ());\n   if (offset + fsize >= 0x8000\n@@ -1296,7 +1299,7 @@ output_move_simode_const (operands)\n       && (DATA_REG_P (operands[0])\n \t  || GET_CODE (operands[0]) == MEM)\n       /* clr insns on 68000 read before writing.\n-\t This isn't so on the 68010, but we have no alternative for it.  */\n+\t This isn't so on the 68010, but we have no TARGET_68010.  */\n       && (TARGET_68020\n \t  || !(GET_CODE (operands[0]) == MEM\n \t       && MEM_VOLATILE_P (operands[0]))))"}]}