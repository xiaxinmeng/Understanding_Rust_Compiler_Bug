{"sha": "d2994b806914cf8468d9707ded03e2d14e146a88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI5OTRiODA2OTE0Y2Y4NDY4ZDk3MDdkZWQwM2UyZDE0ZTE0NmE4OA==", "commit": {"author": {"name": "Max Ostapenko", "email": "m.ostapenko@partner.samsung.com", "date": "2014-04-15T07:31:51Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2014-04-15T07:31:51Z"}, "message": "null-deref-1.c: Change regexp to pass test under qemu-arm.\n\n2014-04-15  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n\n\t* c-c++-common/asan/null-deref-1.c: Change regexp to pass test\n\tunder qemu-arm.\n\t* c-c++-common/ubsan/div-by-zero-1.c: Likewise.\n\t* c-c++-common/ubsan/div-by-zero-2.c: Likewise.\n\t* c-c++-common/ubsan/div-by-zero-3.c: Likewise.\n\t* c-c++-common/ubsan/load-bool-enum.c (foo): Likewise.\n\t* c-c++-common/ubsan/null-1.c: Likewise.\n\t* c-c++-common/ubsan/null-10.c: Likewise.\n\t* c-c++-common/ubsan/null-11.c: Likewise.\n\t* c-c++-common/ubsan/null-2.c: Likewise.\n\t* c-c++-common/ubsan/null-3.c: Likewise.\n\t* c-c++-common/ubsan/null-4.c: Likewise.\n\t* c-c++-common/ubsan/null-5.c: Likewise.\n\t* c-c++-common/ubsan/null-6.c: Likewise.\n\t* c-c++-common/ubsan/null-7.c: Likewise.\n\t* c-c++-common/ubsan/null-8.c: Likewise.\n\t* c-c++-common/ubsan/null-9.c: Likewise.\n\t* c-c++-common/ubsan/overflow-add-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-int128.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-4.c: Likewise.\n\t* c-c++-common/ubsan/overflow-negate-1.c: Likewise.\n\t* c-c++-common/ubsan/overflow-sub-2.c: Likewise.\n\t* c-c++-common/ubsan/pr59333.c: Likewise.\n\t* c-c++-common/ubsan/pr59667.c: Likewise.\n\t* c-c++-common/ubsan/pr60613-2.c: Likewise.\n\t* c-c++-common/ubsan/pr60636.c: Likewise.\n\t* c-c++-common/ubsan/shift-1.c: Likewise.\n\t* c-c++-common/ubsan/shift-2.c: Likewise.\n\t* c-c++-common/ubsan/vla-1.c: Likewise.\n\nFrom-SVN: r209402", "tree": {"sha": "c427cdfa4491051f697c965c99ef5a564bbc2350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c427cdfa4491051f697c965c99ef5a564bbc2350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2994b806914cf8468d9707ded03e2d14e146a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2994b806914cf8468d9707ded03e2d14e146a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2994b806914cf8468d9707ded03e2d14e146a88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2994b806914cf8468d9707ded03e2d14e146a88/comments", "author": null, "committer": null, "parents": [{"sha": "052d224e8366ac8a1b433f93feacbf6dd5e6e0fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052d224e8366ac8a1b433f93feacbf6dd5e6e0fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/052d224e8366ac8a1b433f93feacbf6dd5e6e0fd"}], "stats": {"total": 289, "additions": 161, "deletions": 128}, "files": [{"sha": "92c46e4a73cde3a1de9b56230fc1f4d590431cac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -1,3 +1,36 @@\n+2014-04-15  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n+\n+\t* c-c++-common/asan/null-deref-1.c: Change regexp to pass test\n+\tunder qemu-arm.\n+\t* c-c++-common/ubsan/div-by-zero-1.c: Likewise.\n+\t* c-c++-common/ubsan/div-by-zero-2.c: Likewise.\n+\t* c-c++-common/ubsan/div-by-zero-3.c: Likewise.\n+\t* c-c++-common/ubsan/load-bool-enum.c (foo): Likewise.\n+\t* c-c++-common/ubsan/null-1.c: Likewise.\n+\t* c-c++-common/ubsan/null-10.c: Likewise.\n+\t* c-c++-common/ubsan/null-11.c: Likewise.\n+\t* c-c++-common/ubsan/null-2.c: Likewise.\n+\t* c-c++-common/ubsan/null-3.c: Likewise.\n+\t* c-c++-common/ubsan/null-4.c: Likewise.\n+\t* c-c++-common/ubsan/null-5.c: Likewise.\n+\t* c-c++-common/ubsan/null-6.c: Likewise.\n+\t* c-c++-common/ubsan/null-7.c: Likewise.\n+\t* c-c++-common/ubsan/null-8.c: Likewise.\n+\t* c-c++-common/ubsan/null-9.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-add-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-int128.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-4.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-negate-1.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-sub-2.c: Likewise.\n+\t* c-c++-common/ubsan/pr59333.c: Likewise.\n+\t* c-c++-common/ubsan/pr59667.c: Likewise.\n+\t* c-c++-common/ubsan/pr60613-2.c: Likewise.\n+\t* c-c++-common/ubsan/pr60636.c: Likewise.\n+\t* c-c++-common/ubsan/shift-1.c: Likewise.\n+\t* c-c++-common/ubsan/shift-2.c: Likewise.\n+\t* c-c++-common/ubsan/vla-1.c: Likewise.\n+\n 2014-04-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/vect11.ad[sb]: New test."}, {"sha": "87c34c4f68b5513f518361146db8b61cf39ec427", "filename": "gcc/testsuite/c-c++-common/asan/null-deref-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fnull-deref-1.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -18,5 +18,5 @@ int main()\n \n /* { dg-output \"ERROR: AddressSanitizer:? SEGV on unknown address\\[^\\n\\r]*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ \\[^\\n\\r]*pc 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*NullDeref\\[^\\n\\r]* (\\[^\\n\\r]*null-deref-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*    #0 0x\\[0-9a-f\\]+ (in \\[^\\n\\r]*NullDeref\\[^\\n\\r]* (\\[^\\n\\r]*null-deref-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*null-deref-1.c:15|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "479ced038fb1db878766b93d288ea8bce36010ec", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-1.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -17,8 +17,8 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero\" } */\n+/* { dg-output \"division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*\" } */"}, {"sha": "d1eb95f4362b2012a19d3489a18e3e0190e3e7be", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-2.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -16,8 +16,8 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero\" } */\n+/* { dg-output \"division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*\" } */"}, {"sha": "266423aa49ffbe170a58d016037188d93f911498", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-3.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -16,6 +16,6 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"division of -2147483648 by -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division of -2147483648 by -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division of -2147483648 by -1 cannot be represented in type 'int'\" } */\n+/* { dg-output \"division of -2147483648 by -1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division of -2147483648 by -1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division of -2147483648 by -1 cannot be represented in type 'int'\\[^\\n\\r]*\" } */"}, {"sha": "4ffd6325bc1021b34c4ea4f8839fe0dd030759c9", "filename": "gcc/testsuite/c-c++-common/ubsan/load-bool-enum.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -10,8 +10,8 @@ bool b;\n __attribute__((noinline, noclone)) enum A\n foo (bool *p)\n {\n-  *p = b;   /* { dg-output \"load-bool-enum.c:13:\\[^\\n\\r]*runtime error: load of value 4, which is not a valid value for type '(_B|b)ool'(\\n|\\r\\n|\\r)*\" } */\n-  return a; /* { dg-output \"\\[^\\n\\r]*load-bool-enum.c:14:\\[^\\n\\r]*runtime error: load of value 9, which is not a valid value for type 'A'(\\n|\\r\\n|\\r)*\" { target c++ } } */\n+  *p = b;   /* { dg-output \"load-bool-enum.c:13:\\[^\\n\\r]*runtime error: \\[^\\n\\r]*load of value 4, which is not a valid value for type '(_B|b)ool'\\[^\\n\\r]*(\\n|\\r\\n|\\r)*\" } */\n+  return a; /* { dg-output \"\\[^\\n\\r]*load-bool-enum.c:14:\\[^\\n\\r]*runtime error: \\[^\\n\\r]*load of value 9, which is not a valid value for type 'A'\\[^\\n\\r]*(\\n|\\r\\n|\\r)*\" { target c++ } } */\n }\n \n int"}, {"sha": "17f6d19c88b2906e4a3e0dc6cb494ff12b3a7ea1", "filename": "gcc/testsuite/c-c++-common/ubsan/null-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-1.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -9,4 +9,4 @@ main (void)\n   return *p;\n }\n \n-/* { dg-output \"load of null pointer of type 'int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "8dacf6c06cfc65cb20089f7dcad6a5e6d0e661cd", "filename": "gcc/testsuite/c-c++-common/ubsan/null-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -10,4 +10,4 @@ main (void)\n   return  0;\n }\n \n-/* { dg-output \"load of null pointer of type 'short int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'short int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "6aefaab00340d6bbca7f60f52bbf533b1b365458", "filename": "gcc/testsuite/c-c++-common/ubsan/null-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-11.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return (*s)->i;\n }\n \n-/* { dg-output \"load of null pointer of type 'struct S \\\\*'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'struct S \\\\*'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "df4901faed80bc1d89bed64c4bb10fa7a54e49b4", "filename": "gcc/testsuite/c-c++-common/ubsan/null-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-2.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -9,4 +9,4 @@ main (void)\n   return ***ppp;\n }\n \n-/* { dg-output \"load of null pointer of type 'int \\\\*\\\\*'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int \\\\*\\\\*'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "b1eb3dbc736cbbfcd313b5cb875c9c8b7e42c8dc", "filename": "gcc/testsuite/c-c++-common/ubsan/null-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-3.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -15,4 +15,4 @@ main (void)\n   return foo (*p);\n }\n \n-/* { dg-output \"load of null pointer of type 'int \\\\*'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int \\\\*'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "7c0aa2c70aad1eda76e8f9e0fbcd10be7d973dcb", "filename": "gcc/testsuite/c-c++-common/ubsan/null-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-4.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -11,4 +11,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"load of null pointer of type 'complex double'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'complex double'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "f7f6b86d31760a42393753910496748a5cf3a1df", "filename": "gcc/testsuite/c-c++-common/ubsan/null-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-5.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"load of null pointer of type 'volatile const complex float'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'volatile const complex float'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "6f8ba6bf45da87301943712d5ac4309556acfeb3", "filename": "gcc/testsuite/c-c++-common/ubsan/null-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-6.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -10,4 +10,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"store to null pointer of type 'long unsigned int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"store to null pointer of type 'long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "92881d73184ea73d55e013e4031dde96c8bf1d88", "filename": "gcc/testsuite/c-c++-common/ubsan/null-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-7.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -14,4 +14,4 @@ main (void)\n   return *gao ();\n }\n \n-/* { dg-output \"load of null pointer of type 'int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"load of null pointer of type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "246824197b7976a2f48ed559f00e9f90c22a67dd", "filename": "gcc/testsuite/c-c++-common/ubsan/null-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-8.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return s->i;\n }\n \n-/* { dg-output \"member access within null pointer of type 'struct S'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"member access within null pointer of type 'struct S'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "88d441c3816730e2763accdd5145dae15d177dde", "filename": "gcc/testsuite/c-c++-common/ubsan/null-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-9.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -13,4 +13,4 @@ main (void)\n   return u->i;\n }\n \n-/* { dg-output \"member access within null pointer of type 'union U'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"member access within null pointer of type 'union U'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "61097fa0e0db29d640946dd48b1060cc4ccbbf2d", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-add-2.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -44,17 +44,17 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 1 \\\\+ 2147483647 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483547 \\\\+ 1024 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -1 \\\\+ -2147483648 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 \\\\+ -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483548 \\\\+ -1024 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 1 \\\\+ \\[^\\n\\r]* cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1024 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -1 \\\\+ -\\[^\\n\\r]* cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'\" } */\n+/* { dg-output \"signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 1 \\\\+ 2147483647 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483647 \\\\+ 1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2147483547 \\\\+ 1024 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -1 \\\\+ -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 \\\\+ -1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483548 \\\\+ -1024 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 1 \\\\+ \\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1024 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -1 \\\\+ -\\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'\\[^\\n\\r]*\" } */"}, {"sha": "125d6bf5232e40c2557fa9672668033af646f714", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-int128.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-int128.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -44,4 +44,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x80000000000000000000000000000000 \\\\+ -1 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x80000000000000000000000000000064 \\\\+ -1024 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 0x7fffffffffffffffffffffffffffffff \\\\* 2 cannot be represented in type '__int128'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of 0x80000000000000000000000000000000 cannot be represented in type '__int128'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of 0x80000000000000000000000000000000 cannot be represented in type '__int128'; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "54b382a418066fd9831eb6235298185670de0a23", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -20,7 +20,7 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"signed integer overflow: 2147483647 \\\\* 2 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* 2147483647 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\* 2 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* \\[^\\n\\r]* cannot be represented in type 'long int'\" } */\n+/* { dg-output \"signed integer overflow: 2147483647 \\\\* 2 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* 2147483647 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\* 2 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* \\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*\" } */"}, {"sha": "834eda67306054dcddee70030ba3ba460c4367ab", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-4.c", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -52,35 +52,35 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"overflow-mul-4.c:20:\\[^\\n\\r]*signed integer overflow: 1537228672809129302 \\\\* 6 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:21:\\[^\\n\\r]*signed integer overflow: -1537228672809129302 \\\\* -6 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:22:\\[^\\n\\r]*signed integer overflow: 1537228672809129302 \\\\* -6 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:23:\\[^\\n\\r]*signed integer overflow: -1537228672809129302 \\\\* 6 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:24:\\[^\\n\\r]*signed integer overflow: 2166572392 \\\\* 4257126175 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:25:\\[^\\n\\r]*signed integer overflow: -2166572392 \\\\* -4257126175 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:26:\\[^\\n\\r]*signed integer overflow: 2166572392 \\\\* -4257126175 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:27:\\[^\\n\\r]*signed integer overflow: -2166572392 \\\\* 4257126175 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:28:\\[^\\n\\r]*signed integer overflow: 1537228672809129301 \\\\* 7 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:29:\\[^\\n\\r]*signed integer overflow: -1537228672809129301 \\\\* -7 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:30:\\[^\\n\\r]*signed integer overflow: 1537228672809129301 \\\\* -7 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:31:\\[^\\n\\r]*signed integer overflow: -1537228672809129301 \\\\* 7 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:32:\\[^\\n\\r]*signed integer overflow: 2166572391 \\\\* 4257126176 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:33:\\[^\\n\\r]*signed integer overflow: -2166572391 \\\\* -4257126176 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:34:\\[^\\n\\r]*signed integer overflow: 2166572391 \\\\* -4257126176 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:35:\\[^\\n\\r]*signed integer overflow: -2166572391 \\\\* 4257126176 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:36:\\[^\\n\\r]*signed integer overflow: 6 \\\\* 1537228672809129302 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:37:\\[^\\n\\r]*signed integer overflow: -6 \\\\* -1537228672809129302 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:38:\\[^\\n\\r]*signed integer overflow: -6 \\\\* 1537228672809129302 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:39:\\[^\\n\\r]*signed integer overflow: 6 \\\\* -1537228672809129302 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:40:\\[^\\n\\r]*signed integer overflow: 4257126175 \\\\* 2166572392 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:41:\\[^\\n\\r]*signed integer overflow: -4257126175 \\\\* -2166572392 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:42:\\[^\\n\\r]*signed integer overflow: -4257126175 \\\\* 2166572392 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:43:\\[^\\n\\r]*signed integer overflow: 4257126175 \\\\* -2166572392 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:44:\\[^\\n\\r]*signed integer overflow: 7 \\\\* 1537228672809129301 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:45:\\[^\\n\\r]*signed integer overflow: -7 \\\\* -1537228672809129301 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:46:\\[^\\n\\r]*signed integer overflow: -7 \\\\* 1537228672809129301 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:47:\\[^\\n\\r]*signed integer overflow: 7 \\\\* -1537228672809129301 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:48:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:49:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:50:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:51:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'\" } */\n+/* { dg-output \"overflow-mul-4.c:20:\\[^\\n\\r]*signed integer overflow: 1537228672809129302 \\\\* 6 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:21:\\[^\\n\\r]*signed integer overflow: -1537228672809129302 \\\\* -6 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:22:\\[^\\n\\r]*signed integer overflow: 1537228672809129302 \\\\* -6 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:23:\\[^\\n\\r]*signed integer overflow: -1537228672809129302 \\\\* 6 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:24:\\[^\\n\\r]*signed integer overflow: 2166572392 \\\\* 4257126175 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:25:\\[^\\n\\r]*signed integer overflow: -2166572392 \\\\* -4257126175 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:26:\\[^\\n\\r]*signed integer overflow: 2166572392 \\\\* -4257126175 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:27:\\[^\\n\\r]*signed integer overflow: -2166572392 \\\\* 4257126175 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:28:\\[^\\n\\r]*signed integer overflow: 1537228672809129301 \\\\* 7 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:29:\\[^\\n\\r]*signed integer overflow: -1537228672809129301 \\\\* -7 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:30:\\[^\\n\\r]*signed integer overflow: 1537228672809129301 \\\\* -7 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:31:\\[^\\n\\r]*signed integer overflow: -1537228672809129301 \\\\* 7 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:32:\\[^\\n\\r]*signed integer overflow: 2166572391 \\\\* 4257126176 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:33:\\[^\\n\\r]*signed integer overflow: -2166572391 \\\\* -4257126176 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:34:\\[^\\n\\r]*signed integer overflow: 2166572391 \\\\* -4257126176 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:35:\\[^\\n\\r]*signed integer overflow: -2166572391 \\\\* 4257126176 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:36:\\[^\\n\\r]*signed integer overflow: 6 \\\\* 1537228672809129302 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:37:\\[^\\n\\r]*signed integer overflow: -6 \\\\* -1537228672809129302 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:38:\\[^\\n\\r]*signed integer overflow: -6 \\\\* 1537228672809129302 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:39:\\[^\\n\\r]*signed integer overflow: 6 \\\\* -1537228672809129302 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:40:\\[^\\n\\r]*signed integer overflow: 4257126175 \\\\* 2166572392 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:41:\\[^\\n\\r]*signed integer overflow: -4257126175 \\\\* -2166572392 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:42:\\[^\\n\\r]*signed integer overflow: -4257126175 \\\\* 2166572392 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:43:\\[^\\n\\r]*signed integer overflow: 4257126175 \\\\* -2166572392 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:44:\\[^\\n\\r]*signed integer overflow: 7 \\\\* 1537228672809129301 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:45:\\[^\\n\\r]*signed integer overflow: -7 \\\\* -1537228672809129301 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:46:\\[^\\n\\r]*signed integer overflow: -7 \\\\* 1537228672809129301 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:47:\\[^\\n\\r]*signed integer overflow: 7 \\\\* -1537228672809129301 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:48:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:49:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:50:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:51:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */"}, {"sha": "35fa482c61bfc33d136ecd9552a2aecd39222574", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-negate-1.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -27,12 +27,12 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself\" } */\n+/* { dg-output \"negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -2147483648 cannot be represented in type 'int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*; cast to an unsigned type to negate this value to itself\\[^\\n\\r]*\" } */"}, {"sha": "daf6a54666a19580b6b075ec5d7b0be0965c8de0", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-sub-2.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -42,13 +42,13 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 \\\\+ -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483548 \\\\+ -1024 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 \\\\+ -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147482648 \\\\+ -1048576 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* - 1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1048576 cannot be represented in type 'long int'\" } */\n+/* { dg-output \"signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 \\\\+ -1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483548 \\\\+ -1024 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147483648 \\\\+ -1 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -2147482648 \\\\+ -1048576 cannot be represented in type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* - 1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1048576 cannot be represented in type 'long int'\\[^\\n\\r]*\" } */"}, {"sha": "35504750979cd00b3d99801ec92d1f7a7dbf240d", "filename": "gcc/testsuite/c-c++-common/ubsan/pr59333.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -15,4 +15,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"signed integer overflow: 2 \\\\+ 9223372036854775807 cannot be represented in type 'long long int'\" } */\n+/* { dg-output \"signed integer overflow: 2 \\\\+ 9223372036854775807 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */"}, {"sha": "c76c9de9802854d4999b0b61efcfceac6d2d5111", "filename": "gcc/testsuite/c-c++-common/ubsan/pr59667.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59667.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59667.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59667.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -11,4 +11,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"store to null pointer of type 'float'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"store to null pointer of type 'float'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "af6917e6b756e6d2227b2cfbb9e088289079286f", "filename": "gcc/testsuite/c-c++-common/ubsan/pr60613-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60613-2.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -32,5 +32,5 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"signed integer overflow: 8 \\\\- -9223372036854775801 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 8 \\\\- -9223372036854775802 cannot be represented in type 'long long int'\" } */\n+/* { dg-output \"signed integer overflow: 8 \\\\- -9223372036854775801 cannot be represented in type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 8 \\\\- -9223372036854775802 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */"}, {"sha": "d6749ab678d756ed8e993ad907fa89609a05ea0c", "filename": "gcc/testsuite/c-c++-common/ubsan/pr60636.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60636.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60636.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr60636.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -12,4 +12,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"negation of -9223372036854775808 cannot be represented in type 'long long int'\" } */\n+/* { dg-output \"negation of -9223372036854775808 cannot be represented in type 'long long int'\\[^\\n\\r]*\" } */"}, {"sha": "d5c70baa815b2035917af5139ef1be49d6375d2a", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -23,9 +23,9 @@ main (void)\n \n   return 0;\n }\n-/* { dg-output \"shift exponent 152 is too large for \\[^\\n\\r]*-bit type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 153 is too large for \\[^\\n\\r]*-bit type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 154 is too large for \\[^\\n\\r]*-bit type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 524 is too large for \\[^\\n\\r]*-bit type 'long long unsigned int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 370 is too large for \\[^\\n\\r]*-bit type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 402 is too large for \\[^\\n\\r]*-bit type 'long int'\" } */\n+/* { dg-output \"shift exponent 152 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 153 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 154 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 524 is too large for \\[^\\n\\r]*-bit type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 370 is too large for \\[^\\n\\r]*-bit type 'int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 402 is too large for \\[^\\n\\r]*-bit type 'long int'\\[^\\n\\r]*\" } */"}, {"sha": "426ec093706743fd14704a8fcb3663cbb4e28295", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -16,8 +16,8 @@ main (void)\n \n   return 0;\n }\n-/* { dg-output \"shift exponent -3 is negative(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent -4 is negative(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent -5 is negative(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent -6 is negative(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent -11 is negative\" } */\n+/* { dg-output \"shift exponent -3 is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent -4 is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent -5 is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent -6 is negative\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent -11 is negative\\[^\\n\\r]*\" } */"}, {"sha": "141220324107da4bb047b45425949f9bbf288a9f", "filename": "gcc/testsuite/c-c++-common/ubsan/vla-1.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2994b806914cf8468d9707ded03e2d14e146a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c?ref=d2994b806914cf8468d9707ded03e2d14e146a88", "patch": "@@ -102,18 +102,18 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -5(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -3(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value 0(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value 0(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -6(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -4\" } */\n+/* { dg-output \"variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -5\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -3\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value 0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value 0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -6\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -4\\[^\\n\\r]*\" } */"}]}