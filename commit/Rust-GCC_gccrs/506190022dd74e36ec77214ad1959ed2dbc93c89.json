{"sha": "506190022dd74e36ec77214ad1959ed2dbc93c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2MTkwMDIyZGQ3NGUzNmVjNzcyMTRhZDE5NTllZDJkYmM5M2M4OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-11-05T21:39:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-11-05T21:39:02Z"}, "message": "re PR tree-optimization/54986 (segfault on constant initialized to object address at -O)\n\n\tPR tree-optimization/54986\n\t* gimple-fold.c (canonicalize_constructor_val): Strip again all no-op\n\tconversions on entry but add them back on exit if needed.\n\nFrom-SVN: r193188", "tree": {"sha": "f22745b7cebb6afab88b205621100bdc82746322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f22745b7cebb6afab88b205621100bdc82746322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506190022dd74e36ec77214ad1959ed2dbc93c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506190022dd74e36ec77214ad1959ed2dbc93c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506190022dd74e36ec77214ad1959ed2dbc93c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506190022dd74e36ec77214ad1959ed2dbc93c89/comments", "author": null, "committer": null, "parents": [{"sha": "511d31d856ee3ecf3296f46aed7c8e15611793fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511d31d856ee3ecf3296f46aed7c8e15611793fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511d31d856ee3ecf3296f46aed7c8e15611793fb"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "5fab821eb76e70c05b2af71bf506ca1dc26a6705", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=506190022dd74e36ec77214ad1959ed2dbc93c89", "patch": "@@ -1,3 +1,9 @@\n+2012-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR tree-optimization/54986\n+\t* gimple-fold.c (canonicalize_constructor_val): Strip again all no-op\n+\tconversions on entry but add them back on exit if needed.\n+\n 2012-11-05  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* final.c (final_scan_insn) [HAVE_cc0]: Handle all comparison"}, {"sha": "969cfeb582929315cdaeeb2c89ebc78fba2e8556", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=506190022dd74e36ec77214ad1959ed2dbc93c89", "patch": "@@ -139,7 +139,8 @@ can_refer_decl_in_current_unit_p (tree decl, tree from_decl)\n tree\n canonicalize_constructor_val (tree cval, tree from_decl)\n {\n-  STRIP_USELESS_TYPE_CONVERSION (cval);\n+  tree orig_cval = cval;\n+  STRIP_NOPS (cval);\n   if (TREE_CODE (cval) == POINTER_PLUS_EXPR\n       && TREE_CODE (TREE_OPERAND (cval, 1)) == INTEGER_CST)\n     {\n@@ -182,8 +183,12 @@ canonicalize_constructor_val (tree cval, tree from_decl)\n       /* Fixup types in global initializers.  */\n       if (TREE_TYPE (TREE_TYPE (cval)) != TREE_TYPE (TREE_OPERAND (cval, 0)))\n \tcval = build_fold_addr_expr (TREE_OPERAND (cval, 0));\n+\n+      if (!useless_type_conversion_p (TREE_TYPE (orig_cval), TREE_TYPE (cval)))\n+\tcval = fold_convert (TREE_TYPE (orig_cval), cval);\n+      return cval;\n     }\n-  return cval;\n+  return orig_cval;\n }\n \n /* If SYM is a constant variable with known value, return the value."}, {"sha": "e870aa5bb9fb6bcfa0336c3d44a9afc88ec8e782", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=506190022dd74e36ec77214ad1959ed2dbc93c89", "patch": "@@ -1,3 +1,7 @@\n+2012-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/torture/20121105-1.C: New test.\n+\n 2012-11-05  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* gcc.dg/torture/fp-compare.c: New testcase."}, {"sha": "03323421a5e56c039ebefac638ff26a6c38d154c", "filename": "gcc/testsuite/g++.dg/torture/20121105-1.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20121105-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506190022dd74e36ec77214ad1959ed2dbc93c89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20121105-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20121105-1.C?ref=506190022dd74e36ec77214ad1959ed2dbc93c89", "patch": "@@ -0,0 +1,42 @@\n+// PR tree-optimization/54986\n+// Reported by Remi Vanicat <vanicat@debian.org>\n+// Reduced testcase by Markus Trippelsdorf <markus@trippelsdorf.de> \n+\n+struct A;\n+struct B\n+{\n+  int *_ptr;\n+  bool operator==(B *p1)\n+  {\n+    return p1->_ptr;\n+  }\n+};\n+struct C {\n+  A* ref_SYMBptr();\n+};\n+struct A\n+{\n+  B sommet;\n+};\n+typedef C *gen_op_context;\n+struct D\n+{\n+  D(gen_op_context) {}\n+};\n+\n+D c(0);\n+const long d = (long)&c;\n+B *const   e = (B *)&d;\n+\n+static bool\n+fn1(C& p1)\n+{\n+  return p1.ref_SYMBptr()->sommet == e;\n+}\n+\n+void\n+fn2()\n+{\n+  C b;\n+  fn1(b);\n+}"}]}