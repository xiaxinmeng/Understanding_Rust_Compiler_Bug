{"sha": "3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlNjhkMGFmM2E5YWQ5ODBiNzk4OTYyMDAyOGE0Mjg4ZTRkMGE1Yw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-05-14T02:46:22Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-05-14T02:46:22Z"}, "message": "libgcc2.c, libgcc2.h: Restore __eprintf.\n\n\t* libgcc2.c, libgcc2.h: Restore __eprintf.  Label as used for\n\tbinary backward compat only.\n\t* Makefile.in (LIB2FUNCS_ST): New.  Put _eprintf here, not\n\tin LIB2FUNCS.  Pass it to mklibgcc.\n\t* mklibgcc.in: Handle LIB2FUNCS_ST.\n\n\t* Makefile.in (installdirs): Don't create $(gcc_tooldir).\n\nFrom-SVN: r42057", "tree": {"sha": "eac1bee1e3ad984d5ff14da3a9acb8ba27b8d62d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eac1bee1e3ad984d5ff14da3a9acb8ba27b8d62d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/comments", "author": null, "committer": null, "parents": [{"sha": "8b9df536aeed1812d027b08174a46c0b249ad19b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9df536aeed1812d027b08174a46c0b249ad19b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9df536aeed1812d027b08174a46c0b249ad19b"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "205893e3f148c739d90606391817fd99d13432f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "patch": "@@ -1,3 +1,13 @@\n+2001-05-13  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* libgcc2.c, libgcc2.h: Restore __eprintf.  Label as used for\n+\tbinary backward compat only.\n+\t* Makefile.in (LIB2FUNCS_ST): New.  Put _eprintf here, not\n+\tin LIB2FUNCS.  Pass it to mklibgcc.\n+\t* mklibgcc.in: Handle LIB2FUNCS_ST.\n+\n+\t* Makefile.in (installdirs): Don't create $(gcc_tooldir).\n+\n 2001-05-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tm.texi (THREAD_MODEL_SPEC): Document it."}, {"sha": "3e141398fc31a4cba6b26c2dcfdec6eecb7c9a41", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "patch": "@@ -792,12 +792,14 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n     _fixunsdfsi _fixunssfsi _fixunsdfdi _fixdfdi _fixunssfdi _fixsfdi \\\n     _fixxfdi _fixunsxfdi _floatdixf _fixunsxfsi \\\n     _fixtfdi _fixunstfdi _floatditf \\\n-    __gcc_bcmp _eprintf \\\n-    _bb _clear_cache _trampoline __main _exit \\\n+    __gcc_bcmp _bb _clear_cache _trampoline __main _exit \\\n     _absvsi2 _absvdi2 _addvsi3 _addvdi3 _subvsi3 _subvdi3 \\\n     _mulvsi3 _mulvdi3 _negvsi2 _negvdi2 \\\n     _ctors\n \n+# Defined in libgcc2.c, included only in the static library.\n+LIB2FUNCS_ST = _eprintf\n+\n FPBIT_FUNCS = _pack_sf _unpack_sf _addsub_sf _mul_sf _div_sf \\\n     _fpcmp_parts_sf _compare_sf _eq_sf _ne_sf _gt_sf _ge_sf \\\n     _lt_sf _le_sf _unord_sf _si_to_sf _sf_to_si _negate_sf _make_sf \\\n@@ -1046,6 +1048,7 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) $(LIB2ADD_ST) xgcc$(exeext\n \tLIB1ASMFUNCS='$(LIB1ASMFUNCS)' \\\n \tLIB1FUNCS_EXTRA='$(LIB1FUNCS_EXTRA)' \\\n \tLIB2FUNCS='$(LIB2FUNCS)' \\\n+\tLIB2FUNCS_ST='$(LIB2FUNCS_ST)' \\\n \tLIB2ADD='$(LIB2ADD)' \\\n \tLIB2ADD_ST='$(LIB2ADD_ST)' \\\n \tLIB2ADDEH='$(LIB2ADDEH)' \\\n@@ -2507,7 +2510,6 @@ installdirs:\n \tdone\n \t-if [ -d $(bindir) ] ; then true ; else mkdir $(bindir) ; chmod a+rx $(bindir) ; fi\n \t-if [ -d $(includedir) ] ; then true ; else mkdir $(includedir) ; chmod a+rx $(includedir) ; fi\n-\t-if [ -d $(gcc_tooldir) ] ; then true ; else mkdir $(gcc_tooldir) ; chmod a+rx $(gcc_tooldir) ; fi\n \t-if [ -d $(infodir) ] ; then true ; else mkdir $(infodir) ; chmod a+rx $(infodir) ; fi\n \t-if [ -d $(slibdir) ] ; then true ; else mkdir $(slibdir) ; chmod a+rx $(slibdir) ; fi\n # We don't use mkdir -p to create the parents of man1dir,"}, {"sha": "177931df4c9c8cbf3403dc02c92becc377c7ff78", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "patch": "@@ -1237,6 +1237,28 @@ __gcc_bcmp (const unsigned char *s1, const unsigned char *s2, size_t size)\n   return 0;\n }\n \n+#endif\n+\f\n+/* __eprintf used to be used by GCC's private version of <assert.h>.\n+   We no longer provide that header, but this routine remains in libgcc.a\n+   for binary backward compatibility.  Note that it is not included in\n+   the shared version of libgcc.  */\n+#ifdef L_eprintf\n+#ifndef inhibit_libc\n+\n+#undef NULL /* Avoid errors if stdio.h and our stddef.h mismatch.  */\n+#include <stdio.h>\n+\n+void\n+__eprintf (const char *string, const char *expression,\n+\t   unsigned int line, const char *filename)\n+{\n+  fprintf (stderr, string, expression, line, filename);\n+  fflush (stderr);\n+  abort ();\n+}\n+\n+#endif\n #endif\n \n #ifdef L_bb"}, {"sha": "693c2f78bb63ced2836cac9162e93e30b9100e81", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n \n extern int __gcc_bcmp (const unsigned char *, const unsigned char *, size_t);\n extern void __clear_cache (char *, char *);\n+extern void __eprintf (const char *, const char *, unsigned int, const char *)\n+  __attribute__ ((__noreturn__));\n \n struct bb;\n extern void __bb_exit_func (void);"}, {"sha": "4ec3af6560f7adb1ed73b88b47754283f5d5ce6a", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe68d0af3a9ad980b7989620028a4288e4d0a5c/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=3fe68d0af3a9ad980b7989620028a4288e4d0a5c", "patch": "@@ -14,6 +14,7 @@\n # LIB1ASMFUNCS\n # LIB1FUNCS_EXTRA\n # LIB2FUNCS\n+# LIB2FUNCS_ST\n # LIB2ADD\n # LIB2ADD_ST \n # LIB2ADDEH\n@@ -168,6 +169,7 @@ esac\n #\n \n libgcc2_objs=\"\"\n+libgcc2_st_objs=\"\"\n \n for name in $LIB2FUNCS; do\n   for ml in $MULTILIBS; do\n@@ -182,6 +184,19 @@ for name in $LIB2FUNCS; do\n   libgcc2_objs=\"$libgcc2_objs ${name}${objext}\"\n done\n \n+for name in $LIB2FUNCS_ST; do\n+  for ml in $MULTILIBS; do\n+    dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n+    flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n+    out=\"libgcc/${dir}/${name}${objext}\"\n+\n+    echo $out: $libgcc2_c_dep\n+    echo \"\t$gcc_compile\" '$(MAYBE_USE_COLLECT2)' $flags -DL$name \\\n+      -c '$(srcdir)/libgcc2.c' -o $out\n+  done\n+  libgcc2_st_objs=\"$libgcc2_st_objs ${name}${objext}\"\n+done\n+\n if [ \"$FPBIT\" ]; then\n   for name in $FPBIT_FUNCS; do\n     for ml in $MULTILIBS; do\n@@ -248,8 +263,6 @@ for file in $LIB2ADDEH; do\n   libgcc2_objs=\"$libgcc2_objs ${oname}${objext}\"\n done\n \n-libgcc2_st_objs=\"\"\n-\n for file in $LIB2ADD_ST; do\n   name=`echo $file | sed -e 's/[.][cSo]$//' -e 's/[.]asm$//' -e 's/[.]txt$//'`\n   oname=`echo $name | sed -e 's,.*/,,'`"}]}