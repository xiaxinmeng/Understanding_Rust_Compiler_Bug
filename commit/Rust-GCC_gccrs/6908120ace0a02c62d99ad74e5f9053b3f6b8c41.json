{"sha": "6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwODEyMGFjZTBhMDJjNjJkOTlhZDc0ZTVmOTA1M2IzZjZiOGM0MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-10-30T00:22:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-30T00:22:53Z"}, "message": "re PR c++/50901 (ICE: in build_new_op, at cp/call.c:5016)\n\n/cp\n2011-10-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50901\n\t* call.c (build_new_op_1): Handle ABS_EXPR together with the\n\tother unary EXPR.\n\n/testsuite\n2011-10-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50901\n\t* g++.dg/cpp0x/pr50901.C: New.\n\nFrom-SVN: r180670", "tree": {"sha": "6f20905e10a7c41e047ebd55545efbb8fbbbd575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f20905e10a7c41e047ebd55545efbb8fbbbd575"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/comments", "author": null, "committer": null, "parents": [{"sha": "450dfc1951adac7fea91ad69655e78c7bae6c283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450dfc1951adac7fea91ad69655e78c7bae6c283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/450dfc1951adac7fea91ad69655e78c7bae6c283"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "64c932d646c625250d2f06296b35a6a0ff3b0fca", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "patch": "@@ -1,3 +1,9 @@\n+2011-10-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50901\n+\t* call.c (build_new_op_1): Handle ABS_EXPR together with the\n+\tother unary EXPR.\n+\n 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tRevert:"}, {"sha": "439a1fe7c4f3001a41785003f833b8c4ff8fa648", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "patch": "@@ -5223,6 +5223,7 @@ build_new_op_1 (enum tree_code code, int flags, tree arg1, tree arg2, tree arg3,\n     case POSTDECREMENT_EXPR:\n     case REALPART_EXPR:\n     case IMAGPART_EXPR:\n+    case ABS_EXPR:\n       return cp_build_unary_op (code, arg1, candidates != 0, complain);\n \n     case ARRAY_REF:"}, {"sha": "d02c4bd30a332ffad68de5fbf5b46798a0734a58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "patch": "@@ -1,3 +1,8 @@\n+2011-10-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50901\n+\t* g++.dg/cpp0x/pr50901.C: New.\n+\n 2011-10-29  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/fma-check.h (main): Use return 0 instead of exit (0)."}, {"sha": "439c15cc1cd7eb63e79ac62d0a4e475b0cfe0a8a", "filename": "gcc/testsuite/g++.dg/cpp0x/pr50901.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr50901.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6908120ace0a02c62d99ad74e5f9053b3f6b8c41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr50901.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr50901.C?ref=6908120ace0a02c62d99ad74e5f9053b3f6b8c41", "patch": "@@ -0,0 +1,9 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+template<class T> int foo(int a)\n+{\n+  const unsigned b = a < 0 ? -a : a;\n+  return 0;\n+}\n+\n+int i = foo<float>(1);"}]}