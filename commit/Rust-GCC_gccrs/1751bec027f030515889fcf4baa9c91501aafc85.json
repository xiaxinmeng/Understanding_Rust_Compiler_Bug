{"sha": "1751bec027f030515889fcf4baa9c91501aafc85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc1MWJlYzAyN2YwMzA1MTU4ODlmY2Y0YmFhOWM5MTUwMWFhZmM4NQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-03-08T13:54:18Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-21T14:13:43Z"}, "message": "Overhaul in isa_flags and handling it.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386-options.c (TARGET_EXPLICIT_NO_SAHF_P):\n\tDefine.\n\t(SET_TARGET_NO_SAHF): Likewise.\n\t(TARGET_EXPLICIT_PREFETCH_SSE_P): Likewise.\n\t(SET_TARGET_PREFETCH_SSE): Likewise.\n\t(TARGET_EXPLICIT_NO_TUNE_P): Likewise.\n\t(SET_TARGET_NO_TUNE): Likewise.\n\t(TARGET_EXPLICIT_NO_80387_P): Likewise.\n\t(SET_TARGET_NO_80387): Likewise.\n\t(DEF_PTA): New.\n\t* config/i386/i386.h (TARGET_*): Remove.\n\t* opth-gen.awk: Generate new used macros.", "tree": {"sha": "cff37fc83f3542fc90e6a76819813ac96cd91da1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cff37fc83f3542fc90e6a76819813ac96cd91da1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1751bec027f030515889fcf4baa9c91501aafc85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1751bec027f030515889fcf4baa9c91501aafc85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1751bec027f030515889fcf4baa9c91501aafc85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1751bec027f030515889fcf4baa9c91501aafc85/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14431e66b35e69a334a35df4c157a033e23d0999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14431e66b35e69a334a35df4c157a033e23d0999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14431e66b35e69a334a35df4c157a033e23d0999"}], "stats": {"total": 508, "additions": 45, "deletions": 463}, "files": [{"sha": "2a12228d195ee859d8a3928e015991e2b98de250", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 29, "deletions": 274, "changes": 303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1751bec027f030515889fcf4baa9c91501aafc85/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1751bec027f030515889fcf4baa9c91501aafc85/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=1751bec027f030515889fcf4baa9c91501aafc85", "patch": "@@ -2096,285 +2096,40 @@ ix86_option_override_internal (bool main_args_p,\n \telse\n \t  ix86_tune = PROCESSOR_GENERIC;\n \n-\tif (((processor_alias_table[i].flags & PTA_MMX) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_MMX))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MMX;\n-\tif (((processor_alias_table[i].flags & PTA_3DNOW) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_3DNOW))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_3DNOW;\n-\tif (((processor_alias_table[i].flags & PTA_3DNOW_A) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_3DNOW_A))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_3DNOW_A;\n-\tif (((processor_alias_table[i].flags & PTA_SSE) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SSE))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE;\n-\tif (((processor_alias_table[i].flags & PTA_SSE2) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SSE2))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE2;\n-\tif (((processor_alias_table[i].flags & PTA_SSE3) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SSE3))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE3;\n-\tif (((processor_alias_table[i].flags & PTA_SSSE3) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SSSE3))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSSE3;\n-\tif (((processor_alias_table[i].flags & PTA_SSE4_1) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SSE4_1))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE4_1;\n-\tif (((processor_alias_table[i].flags & PTA_SSE4_2) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SSE4_2))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE4_2;\n-\tif (((processor_alias_table[i].flags & PTA_AVX) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX;\n-\tif (((processor_alias_table[i].flags & PTA_AVX2) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX2))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX2;\n-\tif (((processor_alias_table[i].flags & PTA_FMA) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_FMA))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_FMA;\n-\tif (((processor_alias_table[i].flags & PTA_SSE4A) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SSE4A))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE4A;\n-\tif (((processor_alias_table[i].flags & PTA_FMA4) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_FMA4))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_FMA4;\n-\tif (((processor_alias_table[i].flags & PTA_XOP) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XOP))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XOP;\n-\tif (((processor_alias_table[i].flags & PTA_LWP) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_LWP))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_LWP;\n+\t/* Enable PTA flags that are enabled by default by a -march option.  */\n+#define TARGET_EXPLICIT_NO_SAHF_P(opts) (false)\n+#define SET_TARGET_NO_SAHF(opts) {}\n+#define TARGET_EXPLICIT_PREFETCH_SSE_P(opts) (false)\n+#define SET_TARGET_PREFETCH_SSE(opts) {}\n+#define TARGET_EXPLICIT_NO_TUNE_P(opts) (false)\n+#define SET_TARGET_NO_TUNE(opts) {}\n+#define TARGET_EXPLICIT_NO_80387_P(opts) (false)\n+#define SET_TARGET_NO_80387(opts) {}\n+\n+#define DEF_PTA(NAME) \\\n+\tif (((processor_alias_table[i].flags & PTA_ ## NAME) != 0) \\\n+\t    && PTA_ ## NAME != PTA_64BIT \\\n+\t    && !TARGET_EXPLICIT_ ## NAME ## _P (opts)) \\\n+\t  SET_TARGET_ ## NAME (opts);\n+#include \"i386-isa.def\"\n+#undef DEF_PTA\n+\n+\n+       if (!(TARGET_64BIT_P (opts->x_ix86_isa_flags)\n+\t     && ((processor_alias_table[i].flags & PTA_NO_SAHF) != 0))\n+\t   && !TARGET_EXPLICIT_SAHF_P (opts))\n+\t    SET_TARGET_SAHF (opts);\n+\n \tif (((processor_alias_table[i].flags & PTA_ABM) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_ABM))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_ABM;\n-\tif (((processor_alias_table[i].flags & PTA_BMI) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_BMI))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_BMI;\n-\tif (((processor_alias_table[i].flags & (PTA_LZCNT | PTA_ABM)) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_LZCNT))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_LZCNT;\n-\tif (((processor_alias_table[i].flags & PTA_TBM) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_TBM))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_TBM;\n-\tif (((processor_alias_table[i].flags & PTA_BMI2) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_BMI2))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_BMI2;\n-\tif (((processor_alias_table[i].flags & PTA_CX16) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_CX16))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CX16;\n-\tif (((processor_alias_table[i].flags & (PTA_POPCNT | PTA_ABM)) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_POPCNT))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_POPCNT;\n-\tif (!(TARGET_64BIT_P (opts->x_ix86_isa_flags)\n-\t    && ((processor_alias_table[i].flags & PTA_NO_SAHF) != 0))\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SAHF))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SAHF;\n-\tif (((processor_alias_table[i].flags & PTA_MOVBE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_MOVBE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MOVBE;\n-\tif (((processor_alias_table[i].flags & PTA_AES) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AES))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AES;\n-\tif (((processor_alias_table[i].flags & PTA_SHA) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SHA))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SHA;\n-\tif (((processor_alias_table[i].flags & PTA_PCLMUL) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PCLMUL))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PCLMUL;\n-\tif (((processor_alias_table[i].flags & PTA_FSGSBASE) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_FSGSBASE))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_FSGSBASE;\n-\tif (((processor_alias_table[i].flags & PTA_RDRND) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_RDRND))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_RDRND;\n-\tif (((processor_alias_table[i].flags & PTA_F16C) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_F16C))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_F16C;\n-\tif (((processor_alias_table[i].flags & PTA_RTM) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_RTM))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_RTM;\n-\tif (((processor_alias_table[i].flags & PTA_HLE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_HLE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_HLE;\n-\tif (((processor_alias_table[i].flags & PTA_PRFCHW) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PRFCHW))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PRFCHW;\n-\tif (((processor_alias_table[i].flags & PTA_RDSEED) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_RDSEED))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_RDSEED;\n-\tif (((processor_alias_table[i].flags & PTA_ADX) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_ADX))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_ADX;\n-\tif (((processor_alias_table[i].flags & PTA_FXSR) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_FXSR))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_FXSR;\n-\tif (((processor_alias_table[i].flags & PTA_XSAVE) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XSAVE))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XSAVE;\n-\tif (((processor_alias_table[i].flags & PTA_XSAVEOPT) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XSAVEOPT))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XSAVEOPT;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512F) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512F))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512F;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512ER) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512ER))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512ER;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512PF) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512PF))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512PF;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512CD) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512CD))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512CD;\n-\tif (((processor_alias_table[i].flags & PTA_PREFETCHWT1) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PREFETCHWT1))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PREFETCHWT1;\n-\tif (((processor_alias_table[i].flags & PTA_CLWB) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_CLWB))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CLWB;\n-\tif (((processor_alias_table[i].flags & PTA_CLFLUSHOPT) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_CLFLUSHOPT))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CLFLUSHOPT;\n-\tif (((processor_alias_table[i].flags & PTA_CLZERO) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_CLZERO))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CLZERO;\n-\tif (((processor_alias_table[i].flags & PTA_XSAVEC) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XSAVEC))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XSAVEC;\n-\tif (((processor_alias_table[i].flags & PTA_XSAVES) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XSAVES))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XSAVES;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512DQ) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512DQ))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512DQ;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512BW) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512BW))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512BW;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512VL) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512VL))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VL;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512VBMI) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512VBMI))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VBMI;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512IFMA) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512IFMA))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512IFMA;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512VNNI) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512VNNI))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VNNI;\n-\tif (((processor_alias_table[i].flags & PTA_GFNI) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_GFNI))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_GFNI;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512VBMI2) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit\n-\t    & OPTION_MASK_ISA_AVX512VBMI2))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VBMI2;\n-\tif (((processor_alias_table[i].flags & PTA_VPCLMULQDQ) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_VPCLMULQDQ))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_VPCLMULQDQ;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512BITALG) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit\n-\t    & OPTION_MASK_ISA_AVX512BITALG))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512BITALG;\n-\n-\tif (((processor_alias_table[i].flags & PTA_AVX512VP2INTERSECT) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AVX512VP2INTERSECT))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX512VP2INTERSECT;\n-\tif (((processor_alias_table[i].flags & PTA_AVX5124VNNIW) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AVX5124VNNIW))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX5124VNNIW;\n-\tif (((processor_alias_table[i].flags & PTA_AVX5124FMAPS) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AVX5124FMAPS))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX5124FMAPS;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512VPOPCNTDQ) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit\n-\t\t & OPTION_MASK_ISA_AVX512VPOPCNTDQ))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VPOPCNTDQ;\n-\tif (((processor_alias_table[i].flags & PTA_AVX512BF16) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AVX512BF16))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX512BF16;\n-\tif (((processor_alias_table[i].flags & PTA_AMX_TILE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AMX_TILE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AMX_TILE;\n-\tif (((processor_alias_table[i].flags & PTA_AMX_INT8) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AMX_INT8))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AMX_INT8;\n-\tif (((processor_alias_table[i].flags & PTA_AMX_BF16) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AMX_BF16))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AMX_BF16;\n-\tif (((processor_alias_table[i].flags & PTA_AVXVNNI) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA2_AVXVNNI))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVXVNNI;\n-        if (((processor_alias_table[i].flags & PTA_MOVDIRI) != 0)\n-            && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_MOVDIRI))\n-          opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MOVDIRI;\n-        if (((processor_alias_table[i].flags & PTA_MOVDIR64B) != 0)\n-            && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_MOVDIR64B))\n-          opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MOVDIR64B;\n-\tif (((processor_alias_table[i].flags & PTA_SGX) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_SGX))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_SGX;\n-\tif (((processor_alias_table[i].flags & PTA_VAES) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_VAES))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_VAES;\n-\tif (((processor_alias_table[i].flags & PTA_RDPID) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_RDPID))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_RDPID;\n-\tif (((processor_alias_table[i].flags & PTA_PCONFIG) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_PCONFIG))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_PCONFIG;\n-\tif (((processor_alias_table[i].flags & PTA_WBNOINVD) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_WBNOINVD))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_WBNOINVD;\n-\tif (((processor_alias_table[i].flags & PTA_PTWRITE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_PTWRITE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_PTWRITE;\n-\tif (((processor_alias_table[i].flags & PTA_WAITPKG) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_WAITPKG))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_WAITPKG;\n-\tif (((processor_alias_table[i].flags & PTA_ENQCMD) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_ENQCMD))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_ENQCMD;\n-\tif (((processor_alias_table[i].flags & PTA_CLDEMOTE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_CLDEMOTE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CLDEMOTE;\n-\tif (((processor_alias_table[i].flags & PTA_SERIALIZE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_SERIALIZE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_SERIALIZE;\n-\tif (((processor_alias_table[i].flags & PTA_TSXLDTRK) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_TSXLDTRK))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_TSXLDTRK;\n-\tif (((processor_alias_table[i].flags & PTA_KL) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_KL))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_KL;\n-\tif (((processor_alias_table[i].flags & PTA_WIDEKL) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_WIDEKL))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_WIDEKL;\n+\t    && !TARGET_EXPLICIT_ABM_P (opts))\n+\t  {\n+\t    SET_TARGET_LZCNT (opts);\n+\t    SET_TARGET_POPCNT (opts);\n+\t  }\n \n \tif ((processor_alias_table[i].flags\n \t   & (PTA_PREFETCH_SSE | PTA_SSE)) != 0)\n \t  ix86_prefetch_sse = true;\n-\tif (((processor_alias_table[i].flags & PTA_MWAITX) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_MWAITX))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MWAITX;\n-\tif (((processor_alias_table[i].flags & PTA_PKU) != 0)\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PKU))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PKU;\n-\tif (((processor_alias_table[i].flags & PTA_UINTR) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_UINTR))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_UINTR;\n-\tif (((processor_alias_table[i].flags & PTA_HRESET) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_HRESET))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_HRESET;\n-\n \n \t/* Don't enable x87 instructions if only general registers are\n \t   allowed by target(\"general-regs-only\") function attribute or"}, {"sha": "177c2b6b42e58a6f818155f6500d93558850c3ed", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 7, "deletions": 187, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1751bec027f030515889fcf4baa9c91501aafc85/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1751bec027f030515889fcf4baa9c91501aafc85/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=1751bec027f030515889fcf4baa9c91501aafc85", "patch": "@@ -39,194 +39,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* Redefines for option macros.  */\n \n-#define TARGET_64BIT\tTARGET_ISA_64BIT\n-#define TARGET_64BIT_P(x)\tTARGET_ISA_64BIT_P(x)\n-#define TARGET_MMX\tTARGET_ISA_MMX\n-#define TARGET_MMX_P(x)\tTARGET_ISA_MMX_P(x)\n-#define TARGET_3DNOW\tTARGET_ISA_3DNOW\n-#define TARGET_3DNOW_P(x)\tTARGET_ISA_3DNOW_P(x)\n-#define TARGET_3DNOW_A\tTARGET_ISA_3DNOW_A\n-#define TARGET_3DNOW_A_P(x)\tTARGET_ISA_3DNOW_A_P(x)\n-#define TARGET_SSE\tTARGET_ISA_SSE\n-#define TARGET_SSE_P(x)\tTARGET_ISA_SSE_P(x)\n-#define TARGET_SSE2\tTARGET_ISA_SSE2\n-#define TARGET_SSE2_P(x)\tTARGET_ISA_SSE2_P(x)\n-#define TARGET_SSE3\tTARGET_ISA_SSE3\n-#define TARGET_SSE3_P(x)\tTARGET_ISA_SSE3_P(x)\n-#define TARGET_SSSE3\tTARGET_ISA_SSSE3\n-#define TARGET_SSSE3_P(x)\tTARGET_ISA_SSSE3_P(x)\n-#define TARGET_SSE4_1\tTARGET_ISA_SSE4_1\n-#define TARGET_SSE4_1_P(x)\tTARGET_ISA_SSE4_1_P(x)\n-#define TARGET_SSE4_2\tTARGET_ISA_SSE4_2\n-#define TARGET_SSE4_2_P(x)\tTARGET_ISA_SSE4_2_P(x)\n-#define TARGET_AVX\tTARGET_ISA_AVX\n-#define TARGET_AVX_P(x)\tTARGET_ISA_AVX_P(x)\n-#define TARGET_AVX2\tTARGET_ISA_AVX2\n-#define TARGET_AVX2_P(x)\tTARGET_ISA_AVX2_P(x)\n-#define TARGET_AVX512F\tTARGET_ISA_AVX512F\n-#define TARGET_AVX512F_P(x)\tTARGET_ISA_AVX512F_P(x)\n-#define TARGET_AVX512PF\tTARGET_ISA_AVX512PF\n-#define TARGET_AVX512PF_P(x)\tTARGET_ISA_AVX512PF_P(x)\n-#define TARGET_AVX512ER\tTARGET_ISA_AVX512ER\n-#define TARGET_AVX512ER_P(x)\tTARGET_ISA_AVX512ER_P(x)\n-#define TARGET_AVX512CD\tTARGET_ISA_AVX512CD\n-#define TARGET_AVX512CD_P(x)\tTARGET_ISA_AVX512CD_P(x)\n-#define TARGET_AVX512DQ\tTARGET_ISA_AVX512DQ\n-#define TARGET_AVX512DQ_P(x)\tTARGET_ISA_AVX512DQ_P(x)\n-#define TARGET_AVX512BW\tTARGET_ISA_AVX512BW\n-#define TARGET_AVX512BW_P(x)\tTARGET_ISA_AVX512BW_P(x)\n-#define TARGET_AVX512VL\tTARGET_ISA_AVX512VL\n-#define TARGET_AVX512VL_P(x)\tTARGET_ISA_AVX512VL_P(x)\n-#define TARGET_AVX512VBMI\tTARGET_ISA_AVX512VBMI\n-#define TARGET_AVX512VBMI_P(x)\tTARGET_ISA_AVX512VBMI_P(x)\n-#define TARGET_AVX512IFMA\tTARGET_ISA_AVX512IFMA\n-#define TARGET_AVX512IFMA_P(x)\tTARGET_ISA_AVX512IFMA_P(x)\n-#define TARGET_AVX5124FMAPS\tTARGET_ISA2_AVX5124FMAPS\n-#define TARGET_AVX5124FMAPS_P(x) TARGET_ISA2_AVX5124FMAPS_P(x)\n-#define TARGET_AVX5124VNNIW\tTARGET_ISA2_AVX5124VNNIW\n-#define TARGET_AVX5124VNNIW_P(x) TARGET_ISA2_AVX5124VNNIW_P(x)\n-#define TARGET_AVX512VBMI2\tTARGET_ISA_AVX512VBMI2\n-#define TARGET_AVX512VBMI2_P(x) TARGET_ISA_AVX512VBMI2_P(x)\n-#define TARGET_AVX512VPOPCNTDQ\tTARGET_ISA_AVX512VPOPCNTDQ\n-#define TARGET_AVX512VPOPCNTDQ_P(x) TARGET_ISA_AVX512VPOPCNTDQ_P(x)\n-#define TARGET_AVX512VNNI\tTARGET_ISA_AVX512VNNI\n-#define TARGET_AVX512VNNI_P(x) TARGET_ISA_AVX512VNNI_P(x)\n-#define TARGET_AVX512BITALG\tTARGET_ISA_AVX512BITALG\n-#define TARGET_AVX512BITALG_P(x) TARGET_ISA_AVX512BITALG_P(x)\n-#define TARGET_AVX512VP2INTERSECT\tTARGET_ISA2_AVX512VP2INTERSECT\n-#define TARGET_AVX512VP2INTERSECT_P(x) TARGET_ISA2_AVX512VP2INTERSECT_P(x)\n-#define TARGET_FMA\tTARGET_ISA_FMA\n-#define TARGET_FMA_P(x)\tTARGET_ISA_FMA_P(x)\n-#define TARGET_SSE4A\tTARGET_ISA_SSE4A\n-#define TARGET_SSE4A_P(x)\tTARGET_ISA_SSE4A_P(x)\n-#define TARGET_FMA4\tTARGET_ISA_FMA4\n-#define TARGET_FMA4_P(x)\tTARGET_ISA_FMA4_P(x)\n-#define TARGET_XOP\tTARGET_ISA_XOP\n-#define TARGET_XOP_P(x)\tTARGET_ISA_XOP_P(x)\n-#define TARGET_LWP\tTARGET_ISA_LWP\n-#define TARGET_LWP_P(x)\tTARGET_ISA_LWP_P(x)\n-#define TARGET_ABM\tTARGET_ISA_ABM\n-#define TARGET_ABM_P(x)\tTARGET_ISA_ABM_P(x)\n-#define TARGET_PCONFIG\tTARGET_ISA2_PCONFIG\n-#define TARGET_PCONFIG_P(x)\tTARGET_ISA2_PCONFIG_P(x)\n-#define TARGET_WBNOINVD\tTARGET_ISA2_WBNOINVD\n-#define TARGET_WBNOINVD_P(x)\tTARGET_ISA2_WBNOINVD_P(x)\n-#define TARGET_SGX\tTARGET_ISA2_SGX\n-#define TARGET_SGX_P(x)\tTARGET_ISA2_SGX_P(x)\n-#define TARGET_RDPID\tTARGET_ISA2_RDPID\n-#define TARGET_RDPID_P(x)\tTARGET_ISA2_RDPID_P(x)\n-#define TARGET_GFNI\tTARGET_ISA_GFNI\n-#define TARGET_GFNI_P(x)\tTARGET_ISA_GFNI_P(x)\n-#define TARGET_VAES\tTARGET_ISA2_VAES\n-#define TARGET_VAES_P(x)\tTARGET_ISA2_VAES_P(x)\n-#define TARGET_VPCLMULQDQ\tTARGET_ISA_VPCLMULQDQ\n-#define TARGET_VPCLMULQDQ_P(x)\tTARGET_ISA_VPCLMULQDQ_P(x)\n-#define TARGET_BMI\tTARGET_ISA_BMI\n-#define TARGET_BMI_P(x)\tTARGET_ISA_BMI_P(x)\n-#define TARGET_BMI2\tTARGET_ISA_BMI2\n-#define TARGET_BMI2_P(x)\tTARGET_ISA_BMI2_P(x)\n-#define TARGET_LZCNT\tTARGET_ISA_LZCNT\n-#define TARGET_LZCNT_P(x)\tTARGET_ISA_LZCNT_P(x)\n-#define TARGET_TBM\tTARGET_ISA_TBM\n-#define TARGET_TBM_P(x)\tTARGET_ISA_TBM_P(x)\n-#define TARGET_POPCNT\tTARGET_ISA_POPCNT\n-#define TARGET_POPCNT_P(x)\tTARGET_ISA_POPCNT_P(x)\n-#define TARGET_SAHF\tTARGET_ISA_SAHF\n-#define TARGET_SAHF_P(x)\tTARGET_ISA_SAHF_P(x)\n-#define TARGET_MOVBE\tTARGET_ISA2_MOVBE\n-#define TARGET_MOVBE_P(x)\tTARGET_ISA2_MOVBE_P(x)\n-#define TARGET_CRC32\tTARGET_ISA_CRC32\n-#define TARGET_CRC32_P(x)\tTARGET_ISA_CRC32_P(x)\n-#define TARGET_AES\tTARGET_ISA_AES\n-#define TARGET_AES_P(x)\tTARGET_ISA_AES_P(x)\n-#define TARGET_SHA\tTARGET_ISA_SHA\n-#define TARGET_SHA_P(x)\tTARGET_ISA_SHA_P(x)\n-#define TARGET_CLFLUSHOPT\tTARGET_ISA_CLFLUSHOPT\n-#define TARGET_CLFLUSHOPT_P(x)\tTARGET_ISA_CLFLUSHOPT_P(x)\n-#define TARGET_CLZERO\tTARGET_ISA2_CLZERO\n-#define TARGET_CLZERO_P(x)\tTARGET_ISA2_CLZERO_P(x)\n-#define TARGET_XSAVEC\tTARGET_ISA_XSAVEC\n-#define TARGET_XSAVEC_P(x)\tTARGET_ISA_XSAVEC_P(x)\n-#define TARGET_XSAVES\tTARGET_ISA_XSAVES\n-#define TARGET_XSAVES_P(x)\tTARGET_ISA_XSAVES_P(x)\n-#define TARGET_PCLMUL\tTARGET_ISA_PCLMUL\n-#define TARGET_PCLMUL_P(x)\tTARGET_ISA_PCLMUL_P(x)\n-#define TARGET_CMPXCHG16B\tTARGET_ISA2_CX16\n-#define TARGET_CMPXCHG16B_P(x)\tTARGET_ISA2_CX16_P(x)\n-#define TARGET_FSGSBASE\tTARGET_ISA_FSGSBASE\n-#define TARGET_FSGSBASE_P(x)\tTARGET_ISA_FSGSBASE_P(x)\n-#define TARGET_RDRND\tTARGET_ISA_RDRND\n-#define TARGET_RDRND_P(x)\tTARGET_ISA_RDRND_P(x)\n-#define TARGET_F16C\tTARGET_ISA_F16C\n-#define TARGET_F16C_P(x)\tTARGET_ISA_F16C_P(x)\n-#define TARGET_RTM\tTARGET_ISA_RTM\n-#define TARGET_RTM_P(x)\tTARGET_ISA_RTM_P(x)\n-#define TARGET_HLE\tTARGET_ISA2_HLE\n-#define TARGET_HLE_P(x)\tTARGET_ISA2_HLE_P(x)\n-#define TARGET_RDSEED\tTARGET_ISA_RDSEED\n-#define TARGET_RDSEED_P(x)\tTARGET_ISA_RDSEED_P(x)\n-#define TARGET_PRFCHW\tTARGET_ISA_PRFCHW\n-#define TARGET_PRFCHW_P(x)\tTARGET_ISA_PRFCHW_P(x)\n-#define TARGET_ADX\tTARGET_ISA_ADX\n-#define TARGET_ADX_P(x)\tTARGET_ISA_ADX_P(x)\n-#define TARGET_FXSR\tTARGET_ISA_FXSR\n-#define TARGET_FXSR_P(x)\tTARGET_ISA_FXSR_P(x)\n-#define TARGET_XSAVE\tTARGET_ISA_XSAVE\n-#define TARGET_XSAVE_P(x)\tTARGET_ISA_XSAVE_P(x)\n-#define TARGET_XSAVEOPT\tTARGET_ISA_XSAVEOPT\n-#define TARGET_XSAVEOPT_P(x)\tTARGET_ISA_XSAVEOPT_P(x)\n-#define TARGET_PREFETCHWT1\tTARGET_ISA_PREFETCHWT1\n-#define TARGET_PREFETCHWT1_P(x)\tTARGET_ISA_PREFETCHWT1_P(x)\n-#define TARGET_CLWB\tTARGET_ISA_CLWB\n-#define TARGET_CLWB_P(x)\tTARGET_ISA_CLWB_P(x)\n-#define TARGET_MWAITX\tTARGET_ISA2_MWAITX\n-#define TARGET_MWAITX_P(x)\tTARGET_ISA2_MWAITX_P(x)\n-#define TARGET_MWAIT\tTARGET_ISA2_MWAIT\n-#define TARGET_MWAIT_P(x)\tTARGET_ISA2_MWAIT_P(x)\n-#define TARGET_PKU\tTARGET_ISA_PKU\n-#define TARGET_PKU_P(x)\tTARGET_ISA_PKU_P(x)\n-#define TARGET_SHSTK\tTARGET_ISA_SHSTK\n-#define TARGET_SHSTK_P(x)\tTARGET_ISA_SHSTK_P(x)\n-#define TARGET_MOVDIRI\tTARGET_ISA_MOVDIRI\n-#define TARGET_MOVDIRI_P(x) TARGET_ISA_MOVDIRI_P(x)\n-#define TARGET_MOVDIR64B\tTARGET_ISA2_MOVDIR64B\n-#define TARGET_MOVDIR64B_P(x) TARGET_ISA2_MOVDIR64B_P(x)\n-#define TARGET_WAITPKG\tTARGET_ISA2_WAITPKG\n-#define TARGET_WAITPKG_P(x)\tTARGET_ISA2_WAITPKG_P(x)\n-#define TARGET_CLDEMOTE\tTARGET_ISA2_CLDEMOTE\n-#define TARGET_CLDEMOTE_P(x) TARGET_ISA2_CLDEMOTE_P(x)\n-#define TARGET_PTWRITE\tTARGET_ISA2_PTWRITE\n-#define TARGET_PTWRITE_P(x)\tTARGET_ISA2_PTWRITE_P(x)\n-#define TARGET_AVX512BF16\tTARGET_ISA2_AVX512BF16\n-#define TARGET_AVX512BF16_P(x)\tTARGET_ISA2_AVX512BF16_P(x)\n-#define TARGET_ENQCMD\tTARGET_ISA2_ENQCMD\n-#define TARGET_ENQCMD_P(x) TARGET_ISA2_ENQCMD_P(x)\n-#define TARGET_SERIALIZE\tTARGET_ISA2_SERIALIZE\n-#define TARGET_SERIALIZE_P(x) TARGET_ISA2_SERIALIZE_P(x)\n-#define TARGET_TSXLDTRK\tTARGET_ISA2_TSXLDTRK\n-#define TARGET_TSXLDTRK_P(x) TARGET_ISA2_TSXLDTRK_P(x)\n-#define TARGET_AMX_TILE TARGET_ISA2_AMX_TILE\n-#define TARGET_AMX_TILE_P(x) TARGET_ISA2_AMX_TILE(x)\n-#define TARGET_AMX_INT8 TARGET_ISA2_AMX_INT8\n-#define TARGET_AMX_INT8_P(x) TARGET_ISA2_AMX_INT8(x)\n-#define TARGET_AMX_BF16 TARGET_ISA2_AMX_BF16\n-#define TARGET_AMX_BF16_P(x) TARGET_ISA2_AMX_BF16(x)\n-#define TARGET_UINTR\tTARGET_ISA2_UINTR\n-#define TARGET_UINTR_P(x) TARGET_ISA2_UINTR_P(x)\n-#define TARGET_HRESET\t    TARGET_ISA2_HRESET\n-#define TARGET_HRESET_P(x)  TARGET_ISA2_HRESET_P(x)\n-#define TARGET_KL\tTARGET_ISA2_KL\n-#define TARGET_KL_P(x) TARGET_ISA2_KL_P(x)\n-#define TARGET_WIDEKL\tTARGET_ISA2_WIDEKL\n-#define TARGET_WIDEKL_P(x) TARGET_ISA2_WIDEKL_P(x)\n-#define TARGET_AVXVNNI\tTARGET_ISA2_AVXVNNI\n-#define TARGET_AVXVNNI_P(x)\tTARGET_ISA2_AVXVNNI_P(x)\n-\n-#define TARGET_LP64\tTARGET_ABI_64\n+#define TARGET_CMPXCHG16B\tTARGET_CX16\n+#define TARGET_CMPXCHG16B_P(x)\tTARGET_CX16_P(x)\n+\n+#define TARGET_LP64\t\tTARGET_ABI_64\n #define TARGET_LP64_P(x)\tTARGET_ABI_64_P(x)\n-#define TARGET_X32\tTARGET_ABI_X32\n-#define TARGET_X32_P(x)\tTARGET_ABI_X32_P(x)\n-#define TARGET_16BIT\tTARGET_CODE16\n+#define TARGET_X32\t\tTARGET_ABI_X32\n+#define TARGET_X32_P(x)\t\tTARGET_ABI_X32_P(x)\n+#define TARGET_16BIT\t\tTARGET_CODE16\n #define TARGET_16BIT_P(x)\tTARGET_CODE16_P(x)\n \n #define TARGET_MMX_WITH_SSE\t(TARGET_64BIT && TARGET_SSE2)"}, {"sha": "32475fd7eb472c5daa2bf53f80314119345cbc7f", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1751bec027f030515889fcf4baa9c91501aafc85/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1751bec027f030515889fcf4baa9c91501aafc85/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=1751bec027f030515889fcf4baa9c91501aafc85", "patch": "@@ -439,10 +439,17 @@ for (i = 0; i < n_opts; i++) {\n \t\t\tmask = \"MASK_\"\n \t\t\textra_mask_macros[name] = 1\n \t\t}\n+\t\toriginal_name = name\n+\t\tgsub(\"ISA_\", \"\", name)\n+\t\tgsub(\"ISA2_\", \"\", name)\n+\t\tprint \"/* \" original_name \" mask */\"\n \t\tprint \"#define TARGET_\" name \\\n-\t\t      \" ((\" vname \" & \" mask name \") != 0)\"\n+\t\t      \" ((\" vname \" & \" mask original_name \") != 0)\"\n \t\tprint \"#define TARGET_\" name \"_P(\" vname \")\" \\\n-\t\t      \" (((\" vname \") & \" mask name \") != 0)\"\n+\t\t      \" (((\" vname \") & \" mask original_name \") != 0)\"\n+\t\tprint \"#define TARGET_EXPLICIT_\" name \"_P(opts)\" \\\n+\t\t      \" ((opts->x_\" vname \"_explicit & \" mask original_name \") != 0)\"\n+\t\tprint \"#define SET_TARGET_\" name \"(opts) opts->x_\" vname \" |= \" mask original_name\n \t}\n }\n for (i = 0; i < n_extra_masks; i++) {"}]}