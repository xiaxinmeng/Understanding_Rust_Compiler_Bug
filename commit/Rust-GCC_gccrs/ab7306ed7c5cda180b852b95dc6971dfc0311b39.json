{"sha": "ab7306ed7c5cda180b852b95dc6971dfc0311b39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI3MzA2ZWQ3YzVjZGExODBiODUyYjk1ZGM2OTcxZGZjMDMxMWIzOQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-07-15T13:36:28Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-07-15T13:36:28Z"}, "message": "re PR fortran/44936 ([OOP] Generic TBP not resolved correctly at compile time)\n\n2010-07-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44936\n\t* resolve.c (resolve_typebound_generic_call): Resolve generic\n\tnon-polymorphic type-bound procedure calls to the correct specific\n\tprocedure.\n\t(resolve_typebound_subroutine): Remove superfluous code.\n\n\n2010-07-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44936\n\t* gfortran.dg/typebound_generic_9.f03: New.\n\nFrom-SVN: r162221", "tree": {"sha": "6efd05cda4cec398f55f74ab2db8cd861fa684f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6efd05cda4cec398f55f74ab2db8cd861fa684f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab7306ed7c5cda180b852b95dc6971dfc0311b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab7306ed7c5cda180b852b95dc6971dfc0311b39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab7306ed7c5cda180b852b95dc6971dfc0311b39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab7306ed7c5cda180b852b95dc6971dfc0311b39/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "643afedb7144e247302b743e8fc351f25b65fdd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643afedb7144e247302b743e8fc351f25b65fdd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643afedb7144e247302b743e8fc351f25b65fdd1"}], "stats": {"total": 94, "additions": 80, "deletions": 14}, "files": [{"sha": "29ae010326b67444333ad5fda97f614607af9309", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ab7306ed7c5cda180b852b95dc6971dfc0311b39", "patch": "@@ -1,3 +1,11 @@\n+2010-07-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44936\n+\t* resolve.c (resolve_typebound_generic_call): Resolve generic\n+\tnon-polymorphic type-bound procedure calls to the correct specific\n+\tprocedure.\n+\t(resolve_typebound_subroutine): Remove superfluous code.\n+\n 2010-07-15  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/44709"}, {"sha": "95dbeee43b2478eaea21cb8c795a8ec1e349b0ae", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ab7306ed7c5cda180b852b95dc6971dfc0311b39", "patch": "@@ -5336,10 +5336,11 @@ resolve_typebound_generic_call (gfc_expr* e, const char **name)\n \t  if (matches)\n \t    {\n \t      e->value.compcall.tbp = g->specific;\n+\t      genname = g->specific_st->name;\n \t      /* Pass along the name for CLASS methods, where the vtab\n \t\t procedure pointer component has to be referenced.  */\n \t      if (name)\n-\t\t*name = g->specific_st->name;\n+\t\t*name = genname;\n \t      goto success;\n \t    }\n \t}\n@@ -5352,12 +5353,6 @@ resolve_typebound_generic_call (gfc_expr* e, const char **name)\n \n success:\n   /* Make sure that we have the right specific instance for the name.  */\n-  genname = e->value.compcall.tbp->u.specific->name;\n-\n-  /* Is the symtree name a \"unique name\".  */\n-  if (*genname == '@')\n-    genname = e->value.compcall.tbp->u.specific->n.sym->name;\n-\n   derived = get_declared_from_expr (NULL, NULL, e);\n \n   st = gfc_find_typebound_proc (derived, NULL, genname, false, &e->where);\n@@ -5539,8 +5534,6 @@ resolve_typebound_function (gfc_expr* e)\n static gfc_try\n resolve_typebound_subroutine (gfc_code *code)\n {\n-  gfc_symbol *declared;\n-  gfc_component *c;\n   gfc_ref *new_ref;\n   gfc_ref *class_ref;\n   gfc_symtree *st;\n@@ -5555,18 +5548,15 @@ resolve_typebound_subroutine (gfc_code *code)\n     return FAILURE;\n \n   /* Get the CLASS declared type.  */\n-  declared = get_declared_from_expr (&class_ref, &new_ref, code->expr1);\n+  get_declared_from_expr (&class_ref, &new_ref, code->expr1);\n \n   /* Weed out cases of the ultimate component being a derived type.  */\n   if ((class_ref && class_ref->u.c.component->ts.type == BT_DERIVED)\n \t || (!class_ref && st->n.sym->ts.type != BT_CLASS))\n     {\n       gfc_free_ref_list (new_ref);\n       return resolve_typebound_call (code, NULL);\n-    } \n-\n-  c = gfc_find_component (declared, \"$data\", true, true);\n-  declared = c->ts.u.derived;\n+    }\n \n   if (resolve_typebound_call (code, &name) == FAILURE)\n     return FAILURE;"}, {"sha": "896929301bcb6b62cdea757af0fb7724e732d30d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab7306ed7c5cda180b852b95dc6971dfc0311b39", "patch": "@@ -1,3 +1,8 @@\n+2010-07-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44936\n+\t* gfortran.dg/typebound_generic_9.f03: New.\n+\n 2010-07-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44946"}, {"sha": "f85bb385706271ac1b76b1bf72df12d241d714a4", "filename": "gcc/testsuite/gfortran.dg/typebound_generic_9.f03", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_9.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab7306ed7c5cda180b852b95dc6971dfc0311b39/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_9.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_9.f03?ref=ab7306ed7c5cda180b852b95dc6971dfc0311b39", "patch": "@@ -0,0 +1,63 @@\n+! { dg-do run }\n+!\n+! PR 44936: [OOP] Generic TBP not resolved correctly at compile time\n+!\n+! Contributed by Salvatore Filippone <sfilippone@uniroma2.it>\n+\n+module foo_mod\n+  type foo\n+    integer :: i\n+  contains\n+    procedure, pass(a) :: doit => doit1\n+    procedure, pass(a) :: getit=> getit1\n+    generic, public :: do  => doit\n+    generic, public :: get => getit\n+  end type foo\n+  private doit1,getit1\n+contains\n+  subroutine  doit1(a)\n+    class(foo) :: a\n+    a%i = 1\n+    write(*,*) 'FOO%DOIT base version'\n+  end subroutine doit1\n+  function getit1(a) result(res)\n+    class(foo) :: a\n+    integer :: res\n+    res = a%i\n+  end function getit1\n+end module foo_mod\n+\n+module foo2_mod\n+  use foo_mod\n+  type, extends(foo) :: foo2\n+    integer :: j\n+  contains\n+    procedure, pass(a) :: doit  => doit2\n+    procedure, pass(a) :: getit => getit2\n+  end type foo2\n+  private doit2, getit2\n+contains\n+  subroutine  doit2(a)\n+    class(foo2) :: a\n+    a%i = 2\n+    a%j = 3\n+  end subroutine doit2\n+  function getit2(a) result(res)\n+    class(foo2) :: a\n+    integer :: res\n+    res = a%j\n+  end function getit2\n+end module foo2_mod\n+\n+program testd15\n+  use foo2_mod\n+  type(foo2) :: af2\n+\n+  call af2%do()\n+  if (af2%i .ne. 2) call abort\n+  if (af2%get() .ne. 3) call abort\n+\n+end program testd15\n+\n+! { dg-final { cleanup-modules \"foo_mod foo2_mod\" } }\n+ "}]}