{"sha": "b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVjMjY0NDlmMzY1YjYwM2IzY2Y0YzBmOWI1NzZhYjdjMTJjMmY0MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-05-24T08:59:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-05-24T08:59:37Z"}, "message": "re PR libgomp/90585 (libgomp hsa plugin ftbfs in the x32 multilib variant)\n\n\tPR libgomp/90585\n\t* plugin/plugin-hsa.c: Include gstdint.h.  Include inttypes.h only if\n\tHAVE_INTTYPES_H is defined.\n\t(print_uint64_t): New typedef.\n\t(PRIu64): Define if HAVE_INTTYPES_H is not defined.\n\t(print_kernel_dispatch, run_kernel): Use PRIu64 macro instead of\n\t\"lu\", cast uint64_t HSA_DEBUG and fprintf arguments to print_uint64_t.\n\t(release_kernel_dispatch): Likewise.  Cast shadow->debug to uintptr_t\n\tbefore casting to void *.\n\t* plugin/plugin-nvptx.c: Include gstdint.h instead of stdint.h.\n\t* oacc-mem.c: Don't include config.h nor stdint.h.\n\t* target.c: Don't include config.h.\n\t* oacc-cuda.c: Likewise.\n\t* oacc-host.c: Don't include stdint.h.\n\nFrom-SVN: r271597", "tree": {"sha": "ecc1b0ff600342ae9503fbb59891bd549951a4d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecc1b0ff600342ae9503fbb59891bd549951a4d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2e8b6ae3760c72d1d30e0d2b2652c98edb8bc87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2e8b6ae3760c72d1d30e0d2b2652c98edb8bc87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2e8b6ae3760c72d1d30e0d2b2652c98edb8bc87"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "5b427abc192ded3f36a31e14feefb813c12c9724", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "patch": "@@ -1,3 +1,20 @@\n+2019-05-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/90585\n+\t* plugin/plugin-hsa.c: Include gstdint.h.  Include inttypes.h only if\n+\tHAVE_INTTYPES_H is defined.\n+\t(print_uint64_t): New typedef.\n+\t(PRIu64): Define if HAVE_INTTYPES_H is not defined.\n+\t(print_kernel_dispatch, run_kernel): Use PRIu64 macro instead of\n+\t\"lu\", cast uint64_t HSA_DEBUG and fprintf arguments to print_uint64_t.\n+\t(release_kernel_dispatch): Likewise.  Cast shadow->debug to uintptr_t\n+\tbefore casting to void *.\n+\t* plugin/plugin-nvptx.c: Include gstdint.h instead of stdint.h.\n+\t* oacc-mem.c: Don't include config.h nor stdint.h.\n+\t* target.c: Don't include config.h.\n+\t* oacc-cuda.c: Likewise.\n+\t* oacc-host.c: Don't include stdint.h.\n+\n 2019-05-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgomp/90527"}, {"sha": "7a42085c877705383215e2bbf1a5a093b8ef4bd7", "filename": "libgomp/oacc-cuda.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Foacc-cuda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Foacc-cuda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-cuda.c?ref=b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "patch": "@@ -27,7 +27,6 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #include \"openacc.h\"\n-#include \"config.h\"\n #include \"libgomp.h\"\n #include \"oacc-int.h\"\n #include <assert.h>"}, {"sha": "12299aee65d28105a647b58347ab7ad608b22b0e", "filename": "libgomp/oacc-host.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Foacc-host.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Foacc-host.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-host.c?ref=b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "patch": "@@ -32,7 +32,6 @@\n \n #include <stdbool.h>\n #include <stddef.h>\n-#include <stdint.h>\n \n static struct gomp_device_descr host_dispatch;\n "}, {"sha": "2f271009fb87689f40a5073a17d31fcbb0297313", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "patch": "@@ -27,11 +27,9 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #include \"openacc.h\"\n-#include \"config.h\"\n #include \"libgomp.h\"\n #include \"gomp-constants.h\"\n #include \"oacc-int.h\"\n-#include <stdint.h>\n #include <string.h>\n #include <assert.h>\n "}, {"sha": "80f23f9beb628135b857417ccf3df802b5f4c3a8", "filename": "libgomp/plugin/plugin-hsa.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Fplugin%2Fplugin-hsa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Fplugin%2Fplugin-hsa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-hsa.c?ref=b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "patch": "@@ -28,11 +28,14 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#include \"gstdint.h\"\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n #include <pthread.h>\n+#ifdef HAVE_INTTYPES_H\n #include <inttypes.h>\n+#endif\n #include <stdbool.h>\n #include <hsa.h>\n #include <plugin/hsa_ext_finalize.h>\n@@ -41,6 +44,13 @@\n #include \"gomp-constants.h\"\n #include \"secure_getenv.h\"\n \n+#ifdef HAVE_INTTYPES_H\n+typedef uint64_t print_uint64_t;\n+#else\n+#define PRIu64 \"lu\"\n+typedef unsigned long print_uint64_t; \n+#endif\n+\n /* As an HSA runtime is dlopened, following structure defines function\n    pointers utilized by the HSA plug-in.  */\n \n@@ -1154,8 +1164,9 @@ create_single_kernel_dispatch (struct kernel_info *kernel,\n static void\n release_kernel_dispatch (struct GOMP_hsa_kernel_dispatch *shadow)\n {\n-  HSA_DEBUG (\"Released kernel dispatch: %p has value: %lu (%p)\\n\", shadow,\n-\t     shadow->debug, (void *) shadow->debug);\n+  HSA_DEBUG (\"Released kernel dispatch: %p has value: %\" PRIu64 \" (%p)\\n\",\n+\t     shadow, (print_uint64_t) shadow->debug,\n+\t     (void *) (uintptr_t) shadow->debug);\n \n   hsa_fns.hsa_memory_free_fn (shadow->kernarg_address);\n \n@@ -1276,18 +1287,18 @@ print_kernel_dispatch (struct GOMP_hsa_kernel_dispatch *dispatch, unsigned inden\n   indent_stream (stderr, indent);\n   fprintf (stderr, \"kernarg_address: %p\\n\", dispatch->kernarg_address);\n   indent_stream (stderr, indent);\n-  fprintf (stderr, \"object: %lu\\n\", dispatch->object);\n+  fprintf (stderr, \"object: %\" PRIu64 \"\\n\", (print_uint64_t) dispatch->object);\n   indent_stream (stderr, indent);\n-  fprintf (stderr, \"signal: %lu\\n\", dispatch->signal);\n+  fprintf (stderr, \"signal: %\" PRIu64 \"\\n\", (print_uint64_t) dispatch->signal);\n   indent_stream (stderr, indent);\n   fprintf (stderr, \"private_segment_size: %u\\n\",\n \t   dispatch->private_segment_size);\n   indent_stream (stderr, indent);\n   fprintf (stderr, \"group_segment_size: %u\\n\",\n \t   dispatch->group_segment_size);\n   indent_stream (stderr, indent);\n-  fprintf (stderr, \"children dispatches: %lu\\n\",\n-\t   dispatch->kernel_dispatch_count);\n+  fprintf (stderr, \"children dispatches: %\" PRIu64 \"\\n\",\n+\t   (print_uint64_t) dispatch->kernel_dispatch_count);\n   indent_stream (stderr, indent);\n   fprintf (stderr, \"omp_num_threads: %u\\n\",\n \t   dispatch->omp_num_threads);\n@@ -1594,8 +1605,8 @@ run_kernel (struct kernel_info *kernel, void *vars,\n \thsa_signal_t child_s;\n \tchild_s.handle = shadow->children_dispatches[i]->signal;\n \n-\tHSA_DEBUG (\"Waiting for children completion signal: %lu\\n\",\n-\t\t   shadow->children_dispatches[i]->signal);\n+\tHSA_DEBUG (\"Waiting for children completion signal: %\" PRIu64 \"\\n\",\n+\t\t   (print_uint64_t) shadow->children_dispatches[i]->signal);\n \thsa_fns.hsa_signal_load_acquire_fn (child_s);\n       }\n "}, {"sha": "4e51f645cf8cb85a72390e769d6fe67b40302108", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "patch": "@@ -34,6 +34,7 @@\n #define _GNU_SOURCE\n #include \"openacc.h\"\n #include \"config.h\"\n+#include \"gstdint.h\"\n #include \"libgomp-plugin.h\"\n #include \"oacc-plugin.h\"\n #include \"gomp-constants.h\"\n@@ -42,7 +43,6 @@\n #include <pthread.h>\n #include <cuda.h>\n #include <stdbool.h>\n-#include <stdint.h>\n #include <limits.h>\n #include <string.h>\n #include <stdio.h>"}, {"sha": "9416401806fb4fbe60b4661f46c31b389c86d76a", "filename": "libgomp/target.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c26449f365b603b3cf4c0f9b576ab7c12c2f40/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=b5c26449f365b603b3cf4c0f9b576ab7c12c2f40", "patch": "@@ -25,7 +25,6 @@\n \n /* This file contains the support of offloading.  */\n \n-#include \"config.h\"\n #include \"libgomp.h\"\n #include \"oacc-plugin.h\"\n #include \"oacc-int.h\""}]}