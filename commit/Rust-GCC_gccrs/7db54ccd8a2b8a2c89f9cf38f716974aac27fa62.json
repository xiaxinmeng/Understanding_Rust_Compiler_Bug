{"sha": "7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RiNTRjY2Q4YTJiOGEyYzg5ZjljZjM4ZjcxNjk3NGFhYzI3ZmE2Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-06T06:05:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-06T06:05:07Z"}, "message": "PR libstdc++/86008 add std::quoted support for string_view\n\n\tPR libstdc++/86008\n\t* include/bits/quoted_string.h (_Quoted_string<basic_string_view, C>):\n\tDefine new partial specialization.\n\t* include/std/iomanip (quoted(basic_string_view<C,T>, C, C)): Define\n\tnew overload.\n\t(operator<<(basic_ostream<C,T>&, const _Quoted_string<S,C>&)): Use\n\tvalue not reference for iteration.\n\t* testsuite/27_io/manipulators/standard/char/quoted.cc: Adjust\n\tcomment.\n\t* testsuite/27_io/manipulators/standard/char/quoted_sv.cc: New test.\n\t* testsuite/27_io/manipulators/standard/wchar_t/quoted.cc: Adjust\n\tcomment.\n\nFrom-SVN: r261227", "tree": {"sha": "2620bea47db82834850325b65d80301396838b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2620bea47db82834850325b65d80301396838b70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae566b665add2c6ac7b695b8d533a1b15a08b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae566b665add2c6ac7b695b8d533a1b15a08b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae566b665add2c6ac7b695b8d533a1b15a08b04"}], "stats": {"total": 209, "additions": 200, "deletions": 9}, "files": [{"sha": "680cb640b2612db9d9f9e78f5f3f69e22f814ca9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "patch": "@@ -1,3 +1,18 @@\n+2018-06-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/86008\n+\t* include/bits/quoted_string.h (_Quoted_string<basic_string_view, C>):\n+\tDefine new partial specialization.\n+\t* include/std/iomanip (quoted(basic_string_view<C,T>, C, C)): Define\n+\tnew overload.\n+\t(operator<<(basic_ostream<C,T>&, const _Quoted_string<S,C>&)): Use\n+\tvalue not reference for iteration.\n+\t* testsuite/27_io/manipulators/standard/char/quoted.cc: Adjust\n+\tcomment.\n+\t* testsuite/27_io/manipulators/standard/char/quoted_sv.cc: New test.\n+\t* testsuite/27_io/manipulators/standard/wchar_t/quoted.cc: Adjust\n+\tcomment.\n+\n 2018-06-05  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/type_traits: Fix comment typos."}, {"sha": "f6134da5a432c4b8f7efdc5bd6e274e5b83063e0", "filename": "libstdc++-v3/include/bits/quoted_string.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fquoted_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fquoted_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fquoted_string.h?ref=7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "patch": "@@ -64,6 +64,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t_CharT _M_escape;\n       };\n \n+#if __cplusplus >= 201703L\n+    template<typename _CharT, typename _Traits>\n+      struct _Quoted_string<basic_string_view<_CharT, _Traits>, _CharT>\n+      {\n+\t_Quoted_string(basic_string_view<_CharT, _Traits> __str,\n+\t\t       _CharT __del, _CharT __esc)\n+\t: _M_string(__str), _M_delim{__del}, _M_escape{__esc}\n+\t{ }\n+\n+\t_Quoted_string&\n+\toperator=(_Quoted_string&) = delete;\n+\n+\tbasic_string_view<_CharT, _Traits> _M_string;\n+\t_CharT _M_delim;\n+\t_CharT _M_escape;\n+      };\n+#endif // C++17\n+\n     /**\n      * @brief Inserter for quoted strings.\n      *\n@@ -101,7 +119,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \tstd::basic_ostringstream<_CharT, _Traits> __ostr;\n \t__ostr << __str._M_delim;\n-\tfor (auto& __c : __str._M_string)\n+\tfor (auto __c : __str._M_string)\n \t  {\n \t    if (__c == __str._M_delim || __c == __str._M_escape)\n \t      __ostr << __str._M_escape;"}, {"sha": "9c1f63edb618d00ce9e101c1124c8fe0de918125", "filename": "libstdc++-v3/include/std/iomanip", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip?ref=7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "patch": "@@ -446,7 +446,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __is;\n     }\n \n-#if __cplusplus > 201103L\n+#if __cplusplus >= 201402L\n \n #define __cpp_lib_quoted_string_io 201304\n \n@@ -471,8 +471,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t   _CharT __delim = _CharT('\"'), _CharT __escape = _CharT('\\\\'))\n     {\n       return __detail::_Quoted_string<\n-\t\t\tconst basic_string<_CharT, _Traits, _Alloc>&, _CharT>(\n-\t\t\t\t__string, __delim, __escape);\n+\tconst basic_string<_CharT, _Traits, _Alloc>&, _CharT>(\n+\t    __string, __delim, __escape);\n     }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n@@ -481,11 +481,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t   _CharT __delim = _CharT('\"'), _CharT __escape = _CharT('\\\\'))\n     {\n       return __detail::_Quoted_string<\n-\t\t\tbasic_string<_CharT, _Traits, _Alloc>&, _CharT>(\n-\t\t\t\t__string, __delim, __escape);\n+\tbasic_string<_CharT, _Traits, _Alloc>&, _CharT>(\n+\t    __string, __delim, __escape);\n     }\n \n-#endif // __cplusplus > 201103L\n+#if __cplusplus >= 201703L\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2785. quoted should work with basic_string_view\n+  template<typename _CharT, typename _Traits>\n+    inline auto\n+    quoted(basic_string_view<_CharT, _Traits> __sv,\n+\t   _CharT __delim = _CharT('\"'), _CharT __escape = _CharT('\\\\'))\n+    {\n+      return __detail::_Quoted_string<\n+\tbasic_string_view<_CharT, _Traits>, _CharT>(__sv, __delim, __escape);\n+    }\n+#endif // C++17\n+#endif // C++14\n \n #endif // __cplusplus >= 201103L\n "}, {"sha": "7d1da6b731e013fe2d9685d6ea910a18707f271b", "filename": "libstdc++-v3/testsuite/27_io/manipulators/standard/char/quoted.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2Fquoted.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2Fquoted.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2Fquoted.cc?ref=7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "patch": "@@ -17,7 +17,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 27.7.6 - Quoted manipulators\t\t[quoted.manip]\n+// C++14 27.7.6 - Quoted manipulators\t\t[quoted.manip]\n \n #include <string>\n #include <sstream>"}, {"sha": "512bdf255332665ee95dc832b4c52663f62a8a4e", "filename": "libstdc++-v3/testsuite/27_io/manipulators/standard/char/quoted_sv.cc", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2Fquoted_sv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2Fquoted_sv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fchar%2Fquoted_sv.cc?ref=7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "patch": "@@ -0,0 +1,73 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// C++17 30.7.8 - Quoted manipulators\t\t[quoted.manip]\n+\n+#include <string_view>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::stringstream ss;\n+  const std::string_view original = R\"(This \"string\" will be \\\"quoted\\\")\";\n+  std::string raw, round_trip;\n+  ss << std::quoted(original);\n+  raw = ss.str();\n+  VERIFY( raw == R\"(\"This \\\"string\\\" will be \\\\\\\"quoted\\\\\\\"\")\" );\n+  ss >> std::quoted(round_trip);\n+  VERIFY( original == round_trip );\n+}\n+\n+void\n+test02()\n+{\n+  std::stringstream ss;\n+  const std::string_view original = R\"(This \"string\" will be \\\"quoted\\\")\";\n+  std::string raw, round_trip;\n+  ss << std::quoted(original, '\\'', '!');\n+  raw = ss.str();\n+  VERIFY( raw == R\"('This \"string\" will be \\\"quoted\\\"')\" );\n+  ss >> std::quoted(round_trip, '\\'', '!');\n+  VERIFY( original == round_trip );\n+}\n+\n+void\n+test03()\n+{\n+  std::stringstream ss;\n+  const std::string_view original = R\"(This 'string' will be !'quoted!')\";\n+  std::string raw, round_trip;\n+  ss << std::quoted(original, '\\'', '!');\n+  raw = ss.str();\n+  VERIFY( raw == R\"('This !'string!' will be !!!'quoted!!!'')\" );\n+  ss >> std::quoted(round_trip, '\\'', '!');\n+  VERIFY( original == round_trip );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+}"}, {"sha": "d8b05037aaed676ef15d74f98ba82f0efed6daf9", "filename": "libstdc++-v3/testsuite/27_io/manipulators/standard/wchar_t/quoted.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fwchar_t%2Fquoted.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fwchar_t%2Fquoted.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fwchar_t%2Fquoted.cc?ref=7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "patch": "@@ -17,7 +17,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 27.7.6 - Quoted manipulators\t\t[quoted.manip]\n+// C++14 27.7.6 - Quoted manipulators\t\t[quoted.manip]\n \n #include <string>\n #include <sstream>"}, {"sha": "59de59c1eaf34ecf6aed4bbbf86fa0f887b5c0a1", "filename": "libstdc++-v3/testsuite/27_io/manipulators/standard/wchar_t/quoted_sv.cc", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fwchar_t%2Fquoted_sv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7db54ccd8a2b8a2c89f9cf38f716974aac27fa62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fwchar_t%2Fquoted_sv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fstandard%2Fwchar_t%2Fquoted_sv.cc?ref=7db54ccd8a2b8a2c89f9cf38f716974aac27fa62", "patch": "@@ -0,0 +1,73 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// C++17 30.7.8 - Quoted manipulators\t\t[quoted.manip]\n+\n+#include <string_view>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::wstringstream ss;\n+  const std::wstring_view original = LR\"(This \"string\" will be \\\"quoted\\\")\";\n+  std::wstring raw, round_trip;\n+  ss << std::quoted(original);\n+  raw = ss.str();\n+  VERIFY( raw == LR\"(\"This \\\"string\\\" will be \\\\\\\"quoted\\\\\\\"\")\" );\n+  ss >> std::quoted(round_trip);\n+  VERIFY( original == round_trip );\n+}\n+\n+void\n+test02()\n+{\n+  std::wstringstream ss;\n+  const std::wstring_view original = LR\"(This \"string\" will be \\\"quoted\\\")\";\n+  std::wstring raw, round_trip;\n+  ss << std::quoted(original, L'\\'', L'!');\n+  raw = ss.str();\n+  VERIFY( raw == LR\"('This \"string\" will be \\\"quoted\\\"')\" );\n+  ss >> std::quoted(round_trip, L'\\'', L'!');\n+  VERIFY( original == round_trip );\n+}\n+\n+void\n+test03()\n+{\n+  std::wstringstream ss;\n+  const std::wstring_view original = LR\"(This 'string' will be !'quoted!')\";\n+  std::wstring raw, round_trip;\n+  ss << std::quoted(original, L'\\'', L'!');\n+  raw = ss.str();\n+  VERIFY( raw == LR\"('This !'string!' will be !!!'quoted!!!'')\" );\n+  ss >> std::quoted(round_trip, L'\\'', L'!');\n+  VERIFY( original == round_trip );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+}"}]}