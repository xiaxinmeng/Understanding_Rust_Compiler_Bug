{"sha": "9bf777eedf9bb3fe6ae516051d101456636f34e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJmNzc3ZWVkZjliYjNmZTZhZTUxNjA1MWQxMDE0NTY2MzZmMzRlOQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-09-02T12:41:08Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-09-02T12:41:08Z"}, "message": "re PR middle-end/23547 ([non-unit-at-a-time] ICE with recursive call to nested function)\n\n2005-09-02  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/23547\n        * tree-nested.c (struct var_map_elt): Mark with GTY.\n        (struct nesting_info): Mark with GTY.  Mark var_map's param is struct\n        var_map_elt.\n        (lookup_field_for_decl): Allocate new element in GC memory.\n        (lookup_tramp_for_decl): Likewise.\n        (convert_nl_goto_reference): Likewise\n        (create_nesting_tree): Allocate info in GC memory. Likewise for        info->var_map.\n        (free_nesting_tree): Free with ggc_free instead of free.\n        (root): New static variable.\n        (lower_nested_functions): Remove root as local variable.  And zero out        root at the end of the function.\n\n2005-09-02  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/23547\n        * gcc.dg/pr23547.c: New test.\n\nFrom-SVN: r103777", "tree": {"sha": "1694f7e36c9401df62c8941c4af4cd07410647b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1694f7e36c9401df62c8941c4af4cd07410647b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bf777eedf9bb3fe6ae516051d101456636f34e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf777eedf9bb3fe6ae516051d101456636f34e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf777eedf9bb3fe6ae516051d101456636f34e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf777eedf9bb3fe6ae516051d101456636f34e9/comments", "author": null, "committer": null, "parents": [{"sha": "b8d7f9febca57fbd2070e4c1c6148ae24f9b19ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d7f9febca57fbd2070e4c1c6148ae24f9b19ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8d7f9febca57fbd2070e4c1c6148ae24f9b19ca"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "8c31315441416ad7b4370f9f63cc0839c8673832", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9bf777eedf9bb3fe6ae516051d101456636f34e9", "patch": "@@ -1,3 +1,19 @@\n+2005-09-02  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/23547\n+\t* tree-nested.c (struct var_map_elt): Mark with GTY.\n+\t(struct nesting_info): Mark with GTY.  Mark var_map's param is struct\n+\tvar_map_elt.\n+\t(lookup_field_for_decl): Allocate new element in GC memory.\n+\t(lookup_tramp_for_decl): Likewise.\n+\t(convert_nl_goto_reference): Likewise\n+\t(create_nesting_tree): Allocate info in GC memory. Likewise for\n+\tinfo->var_map.\n+\t(free_nesting_tree): Free with ggc_free instead of free.\n+\t(root): New static variable.\n+\t(lower_nested_functions): Remove root as local variable.  And zero out\n+\troot at the end of the function.\n+\n 2005-09-02  J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR rtl-optimization/20365"}, {"sha": "cfe394139ccf23eb6718d6f75c0f62e470d1e7b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9bf777eedf9bb3fe6ae516051d101456636f34e9", "patch": "@@ -1,3 +1,8 @@\n+2005-09-02  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/23547\n+\t* gcc.dg/pr23547.c: New test.\n+\n 2005-09-02  Richard Sandiford  <richard@codesourcery.com>\n \n \tPR c/22061"}, {"sha": "210fae7ef85e825889a1d9d47825aea0d899612f", "filename": "gcc/testsuite/gcc.dg/pr23547.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23547.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23547.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23547.c?ref=9bf777eedf9bb3fe6ae516051d101456636f34e9", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"--param ggc-min-expand=0 --param ggc-min-heapsize=0\" } */\n+void foo()\n+{\n+  void bar()\n+  {\n+    bar();\n+  }\n+}\n+\n+void foo1(int i)\n+{\n+    void bar (char c[1][i]) { }\n+}"}, {"sha": "6f0b7fd20f0da8de1a87d0fb9231124e2bcff04f", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf777eedf9bb3fe6ae516051d101456636f34e9/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=9bf777eedf9bb3fe6ae516051d101456636f34e9", "patch": "@@ -77,19 +77,19 @@\n    been written as independent functions without change.  */\n \n \n-struct var_map_elt\n+struct var_map_elt GTY(())\n {\n   tree old;\n   tree new;\n };\n \n-struct nesting_info\n+struct nesting_info GTY ((chain_next (\"%h.next\")))\n {\n   struct nesting_info *outer;\n   struct nesting_info *inner;\n   struct nesting_info *next;\n   \n-  htab_t var_map;\n+  htab_t GTY ((param_is (struct var_map_elt))) var_map;\n   tree context;\n   tree new_local_var_chain;\n   tree frame_type;\n@@ -288,7 +288,7 @@ lookup_field_for_decl (struct nesting_info *info, tree decl,\n \n       insert_field_into_struct (get_frame_type (info), field);\n   \n-      elt = xmalloc (sizeof (*elt));\n+      elt = ggc_alloc (sizeof (*elt));\n       elt->old = decl;\n       elt->new = field;\n       *slot = elt;\n@@ -474,7 +474,7 @@ lookup_tramp_for_decl (struct nesting_info *info, tree decl,\n \n       insert_field_into_struct (get_frame_type (info), field);\n \n-      elt = xmalloc (sizeof (*elt));\n+      elt = ggc_alloc (sizeof (*elt));\n       elt->old = decl;\n       elt->new = field;\n       *slot = elt;\n@@ -698,8 +698,8 @@ check_for_nested_with_variably_modified (tree fndecl, tree orig_fndecl)\n static struct nesting_info *\n create_nesting_tree (struct cgraph_node *cgn)\n {\n-  struct nesting_info *info = xcalloc (1, sizeof (*info));\n-  info->var_map = htab_create (7, var_map_hash, var_map_eq, free);\n+  struct nesting_info *info = ggc_calloc (1, sizeof (*info));\n+  info->var_map = htab_create_ggc (7, var_map_hash, var_map_eq, ggc_free);\n   info->context = cgn->decl;\n \n   for (cgn = cgn->nested; cgn ; cgn = cgn->next_nested)\n@@ -1108,7 +1108,7 @@ convert_nl_goto_reference (tree *tp, int *walk_subtrees, void *data)\n \n   /* Enter this association into var_map so that we can insert the new\n      label into the IL during a second pass.  */\n-  elt = xmalloc (sizeof (*elt));\n+  elt = ggc_alloc (sizeof (*elt));\n   elt->old = label;\n   elt->new = new_label;\n   slot = htab_find_slot (i->var_map, elt, INSERT);\n@@ -1474,19 +1474,20 @@ free_nesting_tree (struct nesting_info *root)\n \tfree_nesting_tree (root->inner);\n       htab_delete (root->var_map);\n       next = root->next;\n-      free (root);\n+      ggc_free (root);\n       root = next;\n     }\n   while (root);\n }\n \n+static GTY(()) struct nesting_info *root;\n+\n /* Main entry point for this pass.  Process FNDECL and all of its nested\n    subroutines and turn them into something less tightly bound.  */\n \n void\n lower_nested_functions (tree fndecl)\n {\n-  struct nesting_info *root;\n   struct cgraph_node *cgn;\n \n   /* If there are no nested functions, there's nothing to do.  */\n@@ -1502,6 +1503,7 @@ lower_nested_functions (tree fndecl)\n   convert_all_function_calls (root);\n   finalize_nesting_tree (root);\n   free_nesting_tree (root);\n+  root = NULL;\n }\n \n #include \"gt-tree-nested.h\""}]}