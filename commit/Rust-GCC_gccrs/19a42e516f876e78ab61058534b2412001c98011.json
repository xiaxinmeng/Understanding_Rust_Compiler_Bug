{"sha": "19a42e516f876e78ab61058534b2412001c98011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlhNDJlNTE2Zjg3NmU3OGFiNjEwNTg1MzRiMjQxMjAwMWM5ODAxMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-09-03T21:38:26Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-09-03T21:38:26Z"}, "message": "optimize.c (optimize_function): Push/pop ggc context around the call to optimize_inline_calls.\n\n        * optimize.c (optimize_function): Push/pop ggc context around\n        the call to optimize_inline_calls.\n\nFrom-SVN: r71034", "tree": {"sha": "3be2952d521d73dc3b8243747eea71f92e8997eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3be2952d521d73dc3b8243747eea71f92e8997eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19a42e516f876e78ab61058534b2412001c98011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19a42e516f876e78ab61058534b2412001c98011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19a42e516f876e78ab61058534b2412001c98011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19a42e516f876e78ab61058534b2412001c98011/comments", "author": null, "committer": null, "parents": [{"sha": "7dff32e6609b500f53edeb897c993b60e5e59743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dff32e6609b500f53edeb897c993b60e5e59743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dff32e6609b500f53edeb897c993b60e5e59743"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "4c9a0dae7f590d15f96b0aeb89d9708f7d3ea06a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19a42e516f876e78ab61058534b2412001c98011/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19a42e516f876e78ab61058534b2412001c98011/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=19a42e516f876e78ab61058534b2412001c98011", "patch": "@@ -1,3 +1,8 @@\n+2003-09-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* optimize.c (optimize_function): Push/pop ggc context around\n+\tthe call to optimize_inline_calls.\n+\n 2003-09-02  Scott Brumbaugh  <scottb.lists@verizon.net>\n \n \tPR c++/11553"}, {"sha": "7be410e296d5e3af112bc5310990ee1eec33fae9", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19a42e516f876e78ab61058534b2412001c98011/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19a42e516f876e78ab61058534b2412001c98011/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=19a42e516f876e78ab61058534b2412001c98011", "patch": "@@ -56,7 +56,30 @@ optimize_function (tree fn)\n          and (d) TARGET_ASM_OUTPUT_MI_THUNK is there to DTRT anyway.  */\n       && !DECL_THUNK_P (fn))\n     {\n+      /* ??? Work around GC problem.  Call stack is\n+\n+\t -> instantiate_decl\n+\t -> expand_or_defer_fn\n+\t -> maybe_clone_body\n+\t -> expand_body\n+\t -> tree_rest_of_compilation\n+\n+\t which of course collects.  This used to be protected by the\n+\t \"regular\" nested call ggc_push_context that now lives in \n+\t tree_rest_of_compilation.\n+\n+\t Two good fixes:\n+\t (1) Do inlining in tree_rest_of_compilation.  This is good\n+\t     in that this common optimization happens in common code.\n+\t (2) Don't nest compilation of functions.  Instead queue the\n+\t     new function to cgraph, and let it get picked up in the\n+\t     next round of \"emit everything that needs emitting\".\n+\n+\t For the nonce, just protect things here.  */\n+\n+      ggc_push_context ();\n       optimize_inline_calls (fn);\n+      ggc_pop_context ();\n \n       dump_function (TDI_inlined, fn);\n     }"}]}