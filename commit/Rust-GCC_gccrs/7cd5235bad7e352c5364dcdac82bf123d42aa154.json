{"sha": "7cd5235bad7e352c5364dcdac82bf123d42aa154", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NkNTIzNWJhZDdlMzUyYzUzNjRkY2RhYzgyYmYxMjNkNDJhYTE1NA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-07-01T15:08:07Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-07-01T15:08:07Z"}, "message": "fix previous change\n\nFrom-SVN: r14364", "tree": {"sha": "8a0c4c036ba89c6921d8e0cb4c080d1e3b543e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a0c4c036ba89c6921d8e0cb4c080d1e3b543e8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cd5235bad7e352c5364dcdac82bf123d42aa154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd5235bad7e352c5364dcdac82bf123d42aa154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd5235bad7e352c5364dcdac82bf123d42aa154", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd5235bad7e352c5364dcdac82bf123d42aa154/comments", "author": null, "committer": null, "parents": [{"sha": "224dd343790d70e3aa0b3c6b6b06415f69d560fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224dd343790d70e3aa0b3c6b6b06415f69d560fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/224dd343790d70e3aa0b3c6b6b06415f69d560fd"}], "stats": {"total": 214, "additions": 112, "deletions": 102}, "files": [{"sha": "87106736d94945681884763c6254b07286589ce3", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 112, "deletions": 102, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd5235bad7e352c5364dcdac82bf123d42aa154/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd5235bad7e352c5364dcdac82bf123d42aa154/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=7cd5235bad7e352c5364dcdac82bf123d42aa154", "patch": "@@ -858,20 +858,44 @@\n \n ;; Discourage ai/addic because of carry but provide it in an alternative\n ;; allowing register zero as source.\n-(define_insn \"addsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,?r,r,r\")\n-\t(plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,b,r,b,b\")\n-\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,I,I,J,n\")))]\n+(define_expand \"addsi3\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && !add_operand (operands[2], SImode))\n+    {\n+      rtx tmp = ((reload_in_progress || reload_completed\n+\t\t  || rtx_equal_p (operands[0], operands[1]))\n+\t\t ? operands[0] : gen_reg_rtx (SImode));\n+\n+      HOST_WIDE_INT low = INTVAL (operands[2]) & 0xffff;\n+      HOST_WIDE_INT high = INTVAL (operands[2]) & (~ (HOST_WIDE_INT) 0xffff);\n+\n+      if (low & 0x8000)\n+        high += 0x10000, low |= ((HOST_WIDE_INT) -1) << 16;\n+\n+      emit_insn (gen_addsi3 (tmp, operands[1], GEN_INT (high)));\n+      emit_insn (gen_addsi3 (operands[0], tmp, GEN_INT (low)));\n+      DONE;\n+    }\n+}\")\n+\n+(define_insn \"*addsi3_internal1\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,?r,r\")\n+\t(plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,b,r,b\")\n+\t\t (match_operand:SI 2 \"add_operand\" \"r,I,I,J\")))]\n   \"\"\n   \"@\n    {cax|add} %0,%1,%2\n    {cal %0,%2(%1)|addi %0,%1,%2}\n    {ai|addic} %0,%1,%2\n-   {cau|addis} %0,%1,%v2\n-   #\"\n-  [(set_attr \"length\" \"4,4,4,4,8\")])\n+   {cau|addis} %0,%1,%v2\"\n+  [(set_attr \"length\" \"4,4,4,4\")])\n \n-(define_insn \"\"\n+(define_insn \"*addsi3_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x\")\n \t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n \t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\"))\n@@ -883,7 +907,7 @@\n    {ai.|addic.} %3,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*addsi3_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x\")\n \t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n \t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\"))\n@@ -1648,20 +1672,19 @@\n   [(set_attr \"type\" \"idiv\")])\n \f\n (define_insn \"andsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n-\t(and:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n-\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"?r,L,K,J,n\")))\n-   (clobber (match_scratch:CC 3 \"=X,X,x,x,x\"))]\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(and:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n+\t\t(match_operand:SI 2 \"and_operand\" \"?r,L,K,J\")))\n+   (clobber (match_scratch:CC 3 \"=X,X,x,x\"))]\n   \"\"\n   \"@\n    and %0,%1,%2\n    {rlinm|rlwinm} %0,%1,0,%m2,%M2\n    {andil.|andi.} %0,%1,%b2\n-   {andiu.|andis.} %0,%1,%u2\n-   #\"\n-  [(set_attr \"length\" \"4,4,4,4,8\")])\n+   {andiu.|andis.} %0,%1,%u2\"\n+  [(set_attr \"length\" \"4,4,4,4\")])\n \n-(define_insn \"\"\n+(define_insn \"*andsi3_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x,x\")\n \t(compare:CC (and:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n \t\t\t    (match_operand:SI 2 \"and_operand\" \"r,K,J,L\"))\n@@ -1675,7 +1698,7 @@\n    {rlinm.|rlwinm.} %3,%1,0,%m2,%M2\"\n   [(set_attr \"type\" \"compare,compare,compare,delayed_compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*andsi3_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,x,x\")\n \t(compare:CC (and:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n \t\t\t    (match_operand:SI 2 \"and_operand\" \"r,K,J,L\"))\n@@ -1690,40 +1713,39 @@\n    {rlinm.|rlwinm.} %0,%1,0,%m2,%M2\"\n   [(set_attr \"type\" \"compare,compare,compare,delayed_compare\")])\n \n-;; Take a AND with a constant that cannot be done in a single insn and try to\n-;; split it into two insns.\n-\n-(define_split\n+(define_expand \"iorsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(and:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t(match_operand:SI 2 \"non_and_cint_operand\" \"\")))\n-   (clobber (match_scratch:CC 3 \"\"))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (and:SI (match_dup 1) (match_dup 4))) (clobber (match_dup 6))])\n-   (parallel [(set (match_dup 0) (and:SI (match_dup 0) (match_dup 5))) (clobber (match_dup 7))])]\n+\t(ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"\")))]\n+  \"\"\n   \"\n {\n-  operands[4] = GEN_INT (INTVAL (operands[2]) & 0xffff0000);\n-  operands[5] = GEN_INT (INTVAL (operands[2]) & 0x0000ffff);\n-  operands[6] = ((mask_constant (INTVAL (operands[4])))\n-\t\t ? gen_rtx (SCRATCH, CCmode)\n-\t\t : operands[3]);\n-  operands[7] = operands[3];\n+  if (GET_CODE (operands[2]) == CONST_INT\n+      && !logical_operand (operands[2], SImode))\n+    {\n+      HOST_WIDE_INT value = INTVAL (operands[2]);\n+      rtx tmp = ((reload_in_progress || reload_completed\n+\t\t  || rtx_equal_p (operands[0], operands[1]))\n+\t\t ? operands[0] : gen_reg_rtx (SImode));\n+\n+      emit_insn (gen_iorsi3 (tmp, operands[1], GEN_INT (value & 0xffff0000)));\n+      emit_insn (gen_iorsi3 (operands[0], tmp, GEN_INT (value & 0x0000ffff)));\n+      DONE;\n+    }\n }\")\n \n-(define_insn \"iorsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n-\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"r,K,J,n\")))]\n+(define_insn \"*iorsi3_internal1\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r\")\n+\t(ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r\")\n+\t\t(match_operand:SI 2 \"logical_operand\" \"r,K,J\")))]\n   \"\"\n   \"@\n    or %0,%1,%2\n    {oril|ori} %0,%1,%b2\n-   {oriu|oris} %0,%1,%u2\n-   #\"\n-  [(set_attr \"length\" \"4,4,4,8\")])\n+   {oriu|oris} %0,%1,%u2\"\n+  [(set_attr \"length\" \"4,4,4\")])\n \n-(define_insn \"\"\n+(define_insn \"*iorsi3_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1733,7 +1755,7 @@\n   \"or. %3,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*iorsi3_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1744,35 +1766,39 @@\n   \"or. %0,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-;; Split an IOR that we can't do in one insn into two insns, each of which\n-;; does one 16-bit part.\n-\n-(define_split\n+(define_expand \"xorsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(ior:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t(match_operand:SI 2 \"non_logical_cint_operand\" \"\")))]\n+\t(xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"\")))]\n   \"\"\n-  [(set (match_dup 0) (ior:SI (match_dup 1) (match_dup 3)))\n-   (set (match_dup 0) (ior:SI (match_dup 0) (match_dup 4)))]\n-\"\n+  \"\n {\n-  operands[3] = GEN_INT (INTVAL (operands[2]) & 0xffff0000);\n-  operands[4] = GEN_INT (INTVAL (operands[2]) & 0x0000ffff);\n+  if (GET_CODE (operands[2]) == CONST_INT\n+      && !logical_operand (operands[2], SImode))\n+    {\n+      HOST_WIDE_INT value = INTVAL (operands[2]);\n+      rtx tmp = ((reload_in_progress || reload_completed\n+\t\t  || rtx_equal_p (operands[0], operands[1]))\n+\t\t ? operands[0] : gen_reg_rtx (SImode));\n+\n+      emit_insn (gen_xorsi3 (tmp, operands[1], GEN_INT (value & 0xffff0000)));\n+      emit_insn (gen_xorsi3 (operands[0], tmp, GEN_INT (value & 0x0000ffff)));\n+      DONE;\n+    }\n }\")\n \n-(define_insn \"xorsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n-\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"r,K,J,n\")))]\n+(define_insn \"*xorsi3_internal1\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r\")\n+\t(xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r\")\n+\t\t(match_operand:SI 2 \"logical_operand\" \"r,K,J\")))]\n   \"\"\n   \"@\n    xor %0,%1,%2\n    {xoril|xori} %0,%1,%b2\n-   {xoriu|xoris} %0,%1,%u2\n-   #\"\n-  [(set_attr \"length\" \"4,4,4,8\")])\n+   {xoriu|xoris} %0,%1,%u2\"\n+  [(set_attr \"length\" \"4,4,4\")])\n \n-(define_insn \"\"\n+(define_insn \"*xorsi3_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1782,7 +1808,7 @@\n   \"xor. %3,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*xorsi3_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1793,30 +1819,14 @@\n   \"xor. %0,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-;; Split an XOR that we can't do in one insn into two insns, each of which\n-;; does one 16-bit part.\n-\n-(define_split\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t(match_operand:SI 2 \"non_logical_cint_operand\" \"\")))]\n-  \"\"\n-  [(set (match_dup 0) (xor:SI (match_dup 1) (match_dup 3)))\n-   (set (match_dup 0) (xor:SI (match_dup 0) (match_dup 4)))]\n-\"\n-{\n-  operands[3] = GEN_INT (INTVAL (operands[2]) & 0xffff0000);\n-  operands[4] = GEN_INT (INTVAL (operands[2]) & 0x0000ffff);\n-}\")\n-\n-(define_insn \"\"\n+(define_insn \"*eqv_internal1\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(not:SI (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n    \"\"\n    \"eqv %0,%1,%2\")\n \n-(define_insn \"\"\n+(define_insn \"*eqv_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (not:SI (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n@@ -1826,7 +1836,7 @@\n    \"eqv. %3,%1,%2\"\n    [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*eqv_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (not:SI (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n@@ -1837,14 +1847,14 @@\n    \"eqv. %0,%1,%2\"\n    [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*andc_internal1\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n   \"\"\n   \"andc %0,%2,%1\")\n \n-(define_insn \"\"\n+(define_insn \"*andc_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1854,7 +1864,7 @@\n   \"andc. %3,%2,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*andc_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1865,14 +1875,14 @@\n   \"andc. %0,%2,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*iorc_internal1\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n   \"\"\n   \"orc %0,%2,%1\")\n \n-(define_insn \"\"\n+(define_insn \"*iorc_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1882,7 +1892,7 @@\n   \"orc. %3,%2,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*iorc_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1893,14 +1903,14 @@\n   \"orc. %0,%2,%1\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*nand_internal1\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t(not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n   \"\"\n   \"nand %0,%1,%2\")\n \n-(define_insn \"\"\n+(define_insn \"*nand_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n@@ -1910,7 +1920,7 @@\n   \"nand. %3,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*nand_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (ior:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n@@ -1921,14 +1931,14 @@\n   \"nand. %0,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*nor_internal1\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t(not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n   \"\"\n   \"nor %0,%1,%2\")\n \n-(define_insn \"\"\n+(define_insn \"*nor_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n@@ -1938,7 +1948,7 @@\n   \"nor. %3,%1,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*nor_internal3\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n \t(compare:CC (and:SI (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t    (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n@@ -1953,7 +1963,7 @@\n ;; orders.  Don't define forms that only set CR fields because these\n ;; would modify an input register.\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal1\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (and:SI (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"0\"))\n@@ -1962,7 +1972,7 @@\n   \"TARGET_POWER\"\n   \"maskir %0,%3,%2\")\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal2\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (and:SI (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n \t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"0\"))\n@@ -1971,7 +1981,7 @@\n   \"TARGET_POWER\"\n   \"maskir %0,%3,%2\")\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (and:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SI 3 \"gpc_reg_operand\" \"r\"))\n@@ -1980,7 +1990,7 @@\n   \"TARGET_POWER\"\n   \"maskir %0,%3,%2\")\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal4\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:SI (and:SI (match_operand:SI 3 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -1989,7 +1999,7 @@\n   \"TARGET_POWER\"\n   \"maskir %0,%3,%2\")\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal5\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n \t(compare:CC\n \t (ior:SI (and:SI (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -2004,7 +2014,7 @@\n   \"maskir. %0,%3,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal6\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n \t(compare:CC\n \t (ior:SI (and:SI (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n@@ -2019,7 +2029,7 @@\n   \"maskir. %0,%3,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal7\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n \t(compare:CC\n \t (ior:SI (and:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")\n@@ -2034,7 +2044,7 @@\n   \"maskir. %0,%3,%2\"\n   [(set_attr \"type\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*maskir_internal8\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x\")\n \t(compare:CC\n \t (ior:SI (and:SI (match_operand:SI 3 \"gpc_reg_operand\" \"r\")"}]}