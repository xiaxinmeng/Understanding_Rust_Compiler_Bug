{"sha": "2491f72d97bb8c0f8d28827e055755081b93e809", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ5MWY3MmQ5N2JiOGMwZjhkMjg4MjdlMDU1NzU1MDgxYjkzZTgwOQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1998-07-22T12:38:23Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-07-22T12:38:23Z"}, "message": "tree.def (EXPR_WITH_FILE_LOCATION): Defined as an 'e' expression so WFL are expanded correctly when...\n\n\ufffd\n\t* tree.def (EXPR_WITH_FILE_LOCATION): Defined as an 'e' expression\n \tso WFL are expanded correctly when contained in a COMPOUND_EXPR.\n\t* tree.h (EXPR_WFL_EMIT_LINE_NOTE): Change macro not to use\n \tlang_flag_0. Added documentation in the flag table.\n\nFrom-SVN: r21338", "tree": {"sha": "61895139a2315099c72f06994058619f61460607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61895139a2315099c72f06994058619f61460607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2491f72d97bb8c0f8d28827e055755081b93e809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2491f72d97bb8c0f8d28827e055755081b93e809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2491f72d97bb8c0f8d28827e055755081b93e809", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2491f72d97bb8c0f8d28827e055755081b93e809/comments", "author": null, "committer": null, "parents": [{"sha": "dadafe54d1c76f8ad8fc84c569402dad846b1ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dadafe54d1c76f8ad8fc84c569402dad846b1ad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dadafe54d1c76f8ad8fc84c569402dad846b1ad2"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "9e7b6c59c6eb8fc1f2cbca02e3fe1bcf39ac3bce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2491f72d97bb8c0f8d28827e055755081b93e809/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2491f72d97bb8c0f8d28827e055755081b93e809/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2491f72d97bb8c0f8d28827e055755081b93e809", "patch": "@@ -1,3 +1,10 @@\n+Wed Jul 22 12:37:14 1998  Alexandre Petit-Bianco <apbianco@cygnus.com>\n+\n+\t* tree.def (EXPR_WITH_FILE_LOCATION): Defined as an 'e' expression\n+ \tso WFL are expanded correctly when contained in a COMPOUND_EXPR.\n+\t* tree.h (EXPR_WFL_EMIT_LINE_NOTE): Change macro not to use\n+ \tlang_flag_0. Added documentation in the flag table.\n+\n Tue Jul 21 23:28:35 1998  Klaus Kaempf <kkaempf@rmi.de>\n \n \t* cccp.c (do_include): Fix vax c style include handling."}, {"sha": "db272f1828428e31cd09fe95c2ad5911d578b184", "filename": "gcc/tree.def", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2491f72d97bb8c0f8d28827e055755081b93e809/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2491f72d97bb8c0f8d28827e055755081b93e809/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=2491f72d97bb8c0f8d28827e055755081b93e809", "patch": "@@ -743,11 +743,12 @@ DEFTREECODE (EXIT_EXPR, \"exit_expr\", 's', 1)\n    The type should be void and the value should be ignored.  */\n DEFTREECODE (LOOP_EXPR, \"loop_expr\", 's', 1)\n \n-/* Used to represent a tree node, such as IDENTIFIER_NODE or an EXPR\n-   node, adding several location information: a file name, a line\n-   number and column number. It is expanded as the node it refers to\n-   and can be considered a no-op \"conversion\" with an annotation.  */\n-DEFTREECODE (EXPR_WITH_FILE_LOCATION, \"expr_with_file_location\", '1', 2)\n+/* Annotates a tree node (usually an expression) with source location\n+   information: a file name (EXPR_WFL_FILENAME);  a line number\n+   (EXPR_WFL_LINENO); and column number (EXPR_WFL_COLNO).  It is\n+   expanded as the contained node (EXPR_WFL_NODE);  a line note should\n+   be emitted first if EXPR_WFL_EMIT_LINE_NOTE. */\n+DEFTREECODE (EXPR_WITH_FILE_LOCATION, \"expr_with_file_location\", 'e', 2)\n /*\n Local variables:\n mode:c"}]}