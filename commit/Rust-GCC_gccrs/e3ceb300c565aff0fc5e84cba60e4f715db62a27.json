{"sha": "e3ceb300c565aff0fc5e84cba60e4f715db62a27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNjZWIzMDBjNTY1YWZmMGZjNWU4NGNiYTYwZTRmNzE1ZGI2MmEyNw==", "commit": {"author": {"name": "Seongbae Park", "email": "seongbae.park@gmail.com", "date": "2007-07-03T22:44:26Z"}, "committer": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2007-07-03T22:44:26Z"}, "message": "rtl.def (UNSPEC, [...]): More comments.\n\n2007-07-03  Seongbae Park  <seongbae.park@gmail.com>\n\n\t* rtl.def (UNSPEC, USE, CLOBBER): More comments.\n\nFrom-SVN: r126286", "tree": {"sha": "fee268f6ce2ec4dded09aca6c74859c781bb418e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fee268f6ce2ec4dded09aca6c74859c781bb418e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3ceb300c565aff0fc5e84cba60e4f715db62a27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ceb300c565aff0fc5e84cba60e4f715db62a27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ceb300c565aff0fc5e84cba60e4f715db62a27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ceb300c565aff0fc5e84cba60e4f715db62a27/comments", "author": null, "committer": null, "parents": [{"sha": "d9ad7862455aba7f2cb9b4f42859dc228702d5f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9ad7862455aba7f2cb9b4f42859dc228702d5f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9ad7862455aba7f2cb9b4f42859dc228702d5f7"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "87a37dd250d2a5d798271ff631381b32fa5c541d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ceb300c565aff0fc5e84cba60e4f715db62a27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ceb300c565aff0fc5e84cba60e4f715db62a27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3ceb300c565aff0fc5e84cba60e4f715db62a27", "patch": "@@ -1,3 +1,7 @@\n+2007-07-03  Seongbae Park  <seongbae.park@gmail.com>\n+\n+\t* rtl.def (UNSPEC, USE, CLOBBER): More comments.\n+\n 2007-07-04  Ben Elliston  <bje@au.ibm.com>\n \n \t* c-objc-common.c (c_types_compatible_p): Fix indentation."}, {"sha": "3fb68ec67e9be79ea8df606c5fab29233049f004", "filename": "gcc/rtl.def", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ceb300c565aff0fc5e84cba60e4f715db62a27/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ceb300c565aff0fc5e84cba60e4f715db62a27/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=e3ceb300c565aff0fc5e84cba60e4f715db62a27", "patch": "@@ -212,8 +212,15 @@ DEF_RTL_EXPR(ASM_OPERANDS, \"asm_operands\", \"ssiEEsi\", RTX_EXTRA)\n      operations is to be performed.\n    (Note that the vector must be the first operand because of the way that\n    genrecog.c record positions within an insn.)\n-   This can occur all by itself in a PATTERN, as a component of a PARALLEL,\n-   or inside an expression.  */\n+\n+   UNSPEC can occur all by itself in a PATTERN, as a component of a PARALLEL,\n+   or inside an expression.  \n+   UNSPEC by itself or as a component of a PARALLEL\n+   is currently considered not deletable.\n+\n+   FIXME: Replace all uses of UNSPEC that appears by itself or as a component\n+   of a PARALLEL with USE.\n+   */\n DEF_RTL_EXPR(UNSPEC, \"unspec\", \"Ei\", RTX_EXTRA)\n \n /* Similar, but a volatile operation and one which may trap.  */\n@@ -273,12 +280,20 @@ DEF_RTL_EXPR(SET, \"set\", \"ee\", RTX_EXTRA)\n \n /* Indicate something is used in a way that we don't want to explain.\n    For example, subroutine calls will use the register\n-   in which the static chain is passed.  */\n+   in which the static chain is passed.  \n+\n+   USE can not appear as an operand of other rtx except for PARALLEL.\n+   USE is not deletable, as it indicates that the operand\n+   is used in some unknown way.  */\n DEF_RTL_EXPR(USE, \"use\", \"e\", RTX_EXTRA)\n \n /* Indicate something is clobbered in a way that we don't want to explain.\n    For example, subroutine calls will clobber some physical registers\n-   (the ones that are by convention not saved).  */\n+   (the ones that are by convention not saved).  \n+\n+   CLOBBER can not appear as an operand of other rtx except for PARALLEL.\n+   CLOBBER of a hard register appearing by itself (not within PARALLEL)\n+   is considered undeletable before reload.  */\n DEF_RTL_EXPR(CLOBBER, \"clobber\", \"e\", RTX_EXTRA)\n \n /* Call a subroutine."}]}