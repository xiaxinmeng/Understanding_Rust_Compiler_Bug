{"sha": "7f514158b2a4eae91168bc4e173f99244e65a3e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1MTQxNThiMmE0ZWFlOTExNjhiYzRlMTczZjk5MjQ0ZTY1YTNlMA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-12-25T12:41:02Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-12-25T12:41:02Z"}, "message": "re PR target/19137 (ICE with load of TImode constant)\n\n\tPR target/19137\n\t* config/rs6000/rs6000.md (movti_power, movti_string): Relax\n\toperand[1] predicate to input_operand, and add r<-n alternative.\n\tMove TImode const_double_operand splitter to where it belongs.\n\nFrom-SVN: r92603", "tree": {"sha": "f4895fe415949b09d2963d5ea276e2ca88d0b4a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4895fe415949b09d2963d5ea276e2ca88d0b4a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f514158b2a4eae91168bc4e173f99244e65a3e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f514158b2a4eae91168bc4e173f99244e65a3e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f514158b2a4eae91168bc4e173f99244e65a3e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f514158b2a4eae91168bc4e173f99244e65a3e0/comments", "author": null, "committer": null, "parents": [{"sha": "1a0f488c328df63663eed29d18af44733ece3abc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a0f488c328df63663eed29d18af44733ece3abc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a0f488c328df63663eed29d18af44733ece3abc"}], "stats": {"total": 75, "additions": 42, "deletions": 33}, "files": [{"sha": "c9139a392db37b8e3323034ed89accaf5ae31651", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f514158b2a4eae91168bc4e173f99244e65a3e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f514158b2a4eae91168bc4e173f99244e65a3e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f514158b2a4eae91168bc4e173f99244e65a3e0", "patch": "@@ -1,3 +1,10 @@\n+2004-12-25  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/19137\n+\t* config/rs6000/rs6000.md (movti_power, movti_string): Relax\n+\toperand[1] predicate to input_operand, and add r<-n alternative.\n+\tMove TImode const_double_operand splitter to where it belongs.\n+\n 2004-12-25  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/19147"}, {"sha": "c5b1dcdf21f54b8ee85c9a91f461d7bbe3bf4c18", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 35, "deletions": 33, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f514158b2a4eae91168bc4e173f99244e65a3e0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f514158b2a4eae91168bc4e173f99244e65a3e0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=7f514158b2a4eae91168bc4e173f99244e65a3e0", "patch": "@@ -8486,32 +8486,6 @@\n   [(pc)]\n { rs6000_split_multireg_move (operands[0], operands[1]); DONE; })\n \n-(define_split\n-  [(set (match_operand:TI 0 \"gpc_reg_operand\" \"\")\n-\t(match_operand:TI 1 \"const_double_operand\" \"\"))]\n-  \"TARGET_POWERPC64\"\n-  [(set (match_dup 2) (match_dup 4))\n-   (set (match_dup 3) (match_dup 5))]\n-  \"\n-{\n-  operands[2] = operand_subword_force (operands[0], WORDS_BIG_ENDIAN == 0,\n-\t\t\t\t       TImode);\n-  operands[3] = operand_subword_force (operands[0], WORDS_BIG_ENDIAN != 0,\n-\t\t\t\t       TImode);\n-  if (GET_CODE (operands[1]) == CONST_DOUBLE)\n-    {\n-      operands[4] = GEN_INT (CONST_DOUBLE_HIGH (operands[1]));\n-      operands[5] = GEN_INT (CONST_DOUBLE_LOW (operands[1]));\n-    }\n-  else if (GET_CODE (operands[1]) == CONST_INT)\n-    {\n-      operands[4] = GEN_INT (- (INTVAL (operands[1]) < 0));\n-      operands[5] = operands[1];\n-    }\n-  else\n-    FAIL;\n-}\")\n-\n (define_insn \"*movdi_internal64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,r,*f,*f,m,r,*h,*h\")\n \t(match_operand:DI 1 \"input_operand\" \"r,m,r,I,L,nF,R,f,m,f,*h,r,0\"))]\n@@ -8638,9 +8612,9 @@\n ;; giving the SCRATCH mq.\n \n (define_insn \"*movti_power\"\n-  [(set (match_operand:TI 0 \"reg_or_mem_operand\" \"=Q,m,????r,????r,????r\")\n-\t(match_operand:TI 1 \"reg_or_mem_operand\" \"r,r,r,Q,m\"))\n-   (clobber (match_scratch:SI 2 \"=q,q#X,X,X,X\"))]\n+  [(set (match_operand:TI 0 \"reg_or_mem_operand\" \"=Q,m,????r,????r,????r,r\")\n+\t(match_operand:TI 1 \"input_operand\" \"r,r,r,Q,m,n\"))\n+   (clobber (match_scratch:SI 2 \"=q,q#X,X,X,X,X\"))]\n   \"TARGET_POWER && ! TARGET_POWERPC64\n    && (gpc_reg_operand (operands[0], TImode) || gpc_reg_operand (operands[1], TImode))\"\n   \"*\n@@ -8664,14 +8638,15 @@\n \treturn \\\"{lsi|lswi} %0,%P1,16\\\";\n       /* ... fall through ...  */\n     case 4:\n+    case 5:\n       return \\\"#\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"store,store,*,load,load\")])\n+  [(set_attr \"type\" \"store,store,*,load,load,*\")])\n \n (define_insn \"*movti_string\"\n-  [(set (match_operand:TI 0 \"reg_or_mem_operand\" \"=Q,o<>,????r,????r,????r\")\n-\t(match_operand:TI 1 \"reg_or_mem_operand\" \"r,r,r,Q,m\"))]\n+  [(set (match_operand:TI 0 \"reg_or_mem_operand\" \"=Q,o<>,????r,????r,????r,r\")\n+\t(match_operand:TI 1 \"input_operand\" \"r,r,r,Q,m,n\"))]\n   \"! TARGET_POWER && ! TARGET_POWERPC64\n    && (gpc_reg_operand (operands[0], TImode) || gpc_reg_operand (operands[1], TImode))\"\n   \"*\n@@ -8694,10 +8669,11 @@\n \treturn \\\"{lsi|lswi} %0,%P1,16\\\";\n       /* ... fall through ...  */\n     case 4:\n+    case 5:\n       return \\\"#\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"store,store,*,load,load\")])\n+  [(set_attr \"type\" \"store,store,*,load,load,*\")])\n \n (define_insn \"*movti_ppc64\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=r,o<>,r\")\n@@ -8707,6 +8683,32 @@\n   \"#\"\n   [(set_attr \"type\" \"*,load,store\")])\n \n+(define_split\n+  [(set (match_operand:TI 0 \"gpc_reg_operand\" \"\")\n+\t(match_operand:TI 1 \"const_double_operand\" \"\"))]\n+  \"TARGET_POWERPC64\"\n+  [(set (match_dup 2) (match_dup 4))\n+   (set (match_dup 3) (match_dup 5))]\n+  \"\n+{\n+  operands[2] = operand_subword_force (operands[0], WORDS_BIG_ENDIAN == 0,\n+\t\t\t\t       TImode);\n+  operands[3] = operand_subword_force (operands[0], WORDS_BIG_ENDIAN != 0,\n+\t\t\t\t       TImode);\n+  if (GET_CODE (operands[1]) == CONST_DOUBLE)\n+    {\n+      operands[4] = GEN_INT (CONST_DOUBLE_HIGH (operands[1]));\n+      operands[5] = GEN_INT (CONST_DOUBLE_LOW (operands[1]));\n+    }\n+  else if (GET_CODE (operands[1]) == CONST_INT)\n+    {\n+      operands[4] = GEN_INT (- (INTVAL (operands[1]) < 0));\n+      operands[5] = operands[1];\n+    }\n+  else\n+    FAIL;\n+}\")\n+\n (define_split\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n         (match_operand:TI 1 \"input_operand\" \"\"))]"}]}