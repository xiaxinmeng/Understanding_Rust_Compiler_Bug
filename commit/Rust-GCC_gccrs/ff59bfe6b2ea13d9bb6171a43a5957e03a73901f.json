{"sha": "ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY1OWJmZTZiMmVhMTNkOWJiNjE3MWE0M2E1OTU3ZTAzYTczOTAxZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-13T16:12:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-13T16:12:55Z"}, "message": "expr.c (safe_from_p): Change code to ERROR_MARK only when not accessing nodes.\n\n\t* expr.c (safe_from_p): Change code to ERROR_MARK only when not\n\taccessing nodes.\n\t* toplev.c (display_help): Add braces to shut up warnings.\n\t* fold-const.c (non_lvalue): Don't deal with null pointer\n\tconstants here.\n\t(fold, case COMPOUND_EXPR): Wrap a constant 0 in a NOP_EXPR.\n\nFrom-SVN: r21698", "tree": {"sha": "a6ff7c8e7d25278a337f2dcc9679eaa22d0df471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6ff7c8e7d25278a337f2dcc9679eaa22d0df471"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/comments", "author": null, "committer": null, "parents": [{"sha": "0d906a5f369e6c35c32c7f5489dd4027c823973e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d906a5f369e6c35c32c7f5489dd4027c823973e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d906a5f369e6c35c32c7f5489dd4027c823973e"}], "stats": {"total": 53, "additions": 30, "deletions": 23}, "files": [{"sha": "9c33025ce641b3b918b192c0a8bcf8e05ea8ae30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "patch": "@@ -1,5 +1,16 @@\n+Thu Aug 13 16:09:53 1998  Martin von Loewis  <loewis@informatik.hu-berlin.de>\n+\n+\t* expr.c (safe_from_p): Change code to ERROR_MARK only when not\n+\taccessing nodes.\n+\n Thu Aug 13 15:24:48 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* toplev.c (display_help): Add braces to shut up warnings.\n+\n+\t* fold-const.c (non_lvalue): Don't deal with null pointer \n+\tconstants here.\n+\t(fold, case COMPOUND_EXPR): Wrap a constant 0 in a NOP_EXPR.\n+\n \t* c-typeck.c (initializer_constant_valid_p): Allow conversion of 0\n \tof any size to a pointer.\n "}, {"sha": "7f1b35f859e069988a32ad4b732042e6815a018c", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "patch": "@@ -4983,13 +4983,19 @@ safe_from_p (x, exp, top_p)\n \t  if (save_expr_count >= save_expr_size)\n \t    return 0;\n \t  save_expr_rewritten[save_expr_count++] = exp;\n-\t  TREE_SET_CODE (exp, ERROR_MARK);\n \n \t  nops = tree_code_length[(int) SAVE_EXPR];\n \t  for (i = 0; i < nops; i++)\n-\t    if (TREE_OPERAND (exp, i) != 0\n-\t\t&& ! safe_from_p (x, TREE_OPERAND (exp, i), 0))\n-\t      return 0;\n+\t    {\n+\t      tree operand = TREE_OPERAND (exp, i);\n+\t      if (operand == NULL_TREE)\n+\t\tcontinue;\n+\t      TREE_SET_CODE (exp, ERROR_MARK);\n+\t      if (!safe_from_p (x, operand, 0))\n+\t\treturn 0;\n+\t      TREE_SET_CODE (exp, SAVE_EXPR);\n+\t    }\n+\t  TREE_SET_CODE (exp, ERROR_MARK);\n \t  return 1;\n \n \tcase BIND_EXPR:"}, {"sha": "c84d52c9724a02802e20e8059f878034ae61ca91", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "patch": "@@ -1679,8 +1679,7 @@ fold_convert (t, arg1)\n   return t;\n }\n \f\n-/* Return an expr equal to X but certainly not valid as an lvalue.\n-   Also make sure it is not valid as an null pointer constant.  */\n+/* Return an expr equal to X but certainly not valid as an lvalue.  */\n \n tree\n non_lvalue (x)\n@@ -1694,18 +1693,7 @@ non_lvalue (x)\n       || TREE_CODE (x) == REAL_CST\n       || TREE_CODE (x) == STRING_CST\n       || TREE_CODE (x) == ADDR_EXPR)\n-    {\n-      if (TREE_CODE (x) == INTEGER_CST && integer_zerop (x))\n-\t{\n-\t  /* Use NOP_EXPR instead of NON_LVALUE_EXPR\n-\t     so convert_for_assignment won't strip it.\n-\t     This is so this 0 won't be treated as a null pointer constant.  */\n-\t  result = build1 (NOP_EXPR, TREE_TYPE (x), x);\n-\t  TREE_CONSTANT (result) = TREE_CONSTANT (x);\n-\t  return result;\n-\t}\n-      return x;\n-    }\n+    return x;\n \n   result = build1 (NON_LVALUE_EXPR, TREE_TYPE (x), x);\n   TREE_CONSTANT (result) = TREE_CONSTANT (x);\n@@ -6060,7 +6048,7 @@ fold (expr)\n \treturn t;\n       /* Don't let (0, 0) be null pointer constant.  */\n       if (integer_zerop (arg1))\n-\treturn non_lvalue (arg1);\n+\treturn build1 (NOP_EXPR, TREE_TYPE (arg1), arg1);\n       return arg1;\n \n     case COMPLEX_EXPR:"}, {"sha": "63e85aa3a831e5d2db7faa01570f40897516d9cf", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff59bfe6b2ea13d9bb6171a43a5957e03a73901f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=ff59bfe6b2ea13d9bb6171a43a5957e03a73901f", "patch": "@@ -4094,10 +4094,12 @@ display_help ()\n \t}\n #endif\n       if (undoc)\n-\tif (doc)\n-\t  printf (\"\\nThere are undocumented target specific options as well.\\n\");\n-\telse\n-\t  printf (\"  They exist, but they are not documented.\\n\");\n+\t{\n+\t  if (doc)\n+\t    printf (\"\\nThere are undocumented target specific options as well.\\n\");\n+\t  else\n+\t    printf (\"  They exist, but they are not documented.\\n\");\n+\t}\n     }\n }\n "}]}