{"sha": "8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZiZWE1MDhiMWZiNmJlOGVhYzc3M2I1YzNhZGJlMWVhMTZiNjNkMg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2001-11-09T17:50:06Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-11-09T17:50:06Z"}, "message": "g77spec.c (lang_specific_driver): Adjust behavior of -v and --version for consistency with other front ends.\n\n\t* g77spec.c (lang_specific_driver): Adjust behavior of -v and\n\t--version for consistency with other front ends.  Remove large\n\t#if 0 block.  Do not add libraries to argv if there are no\n\tinput files.\n\t(add_version_magic): Delete all references and dependent code.\n\t* lang-options.h: Delete -fnull-version.\n\t* lang-specs.h: Delete f77-version spec.\n\n\t* lex.c: Delete logic conditional on ffe_is_null_version() and\n\tnow-unused label.\n\t* top.c: Delete ffe_is_null_version_ variable.\n\t(ffe_decode_option): Delete -fnull-version case.\n\t* top.h: Delete declaration of ffe_is_null_version_ and\n\tffe_is_null_version(), ffe_set_is_null_version() macros.\n\nFrom-SVN: r46883", "tree": {"sha": "44c44d2b328c1fb6c375af5c36764e49ba8159a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c44d2b328c1fb6c375af5c36764e49ba8159a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/comments", "author": null, "committer": null, "parents": [{"sha": "75b17b742aba1bf65d57a6ee5b1d3e68d2a8e465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b17b742aba1bf65d57a6ee5b1d3e68d2a8e465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b17b742aba1bf65d57a6ee5b1d3e68d2a8e465"}], "stats": {"total": 126, "additions": 24, "deletions": 102}, "files": [{"sha": "1682f3ea8eaaf0e5029e45a682bd0ea340502fb1", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "patch": "@@ -1,3 +1,20 @@\n+2001-11-09  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* g77spec.c (lang_specific_driver): Adjust behavior of -v and\n+\t--version for consistency with other front ends.  Remove large\n+\t#if 0 block.  Do not add libraries to argv if there are no\n+\tinput files.\n+\t(add_version_magic): Delete all references and dependent code.\n+\t* lang-options.h: Delete -fnull-version.\n+\t* lang-specs.h: Delete f77-version spec.\n+\n+\t* lex.c: Delete logic conditional on ffe_is_null_version() and\n+\tnow-unused label.\n+\t* top.c: Delete ffe_is_null_version_ variable.\n+\t(ffe_decode_option): Delete -fnull-version case.\n+\t* top.h: Delete declaration of ffe_is_null_version_ and\n+\tffe_is_null_version(), ffe_set_is_null_version() macros.\n+\n Fri Nov  9 07:14:47 2001  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* com.c (language_string, lang_identify): Remove."}, {"sha": "9b826209663952b3a2d5227df2f81271f1527a11", "filename": "gcc/f/g77spec.c", "status": "modified", "additions": 7, "deletions": 61, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Fg77spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Fg77spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77spec.c?ref=8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "patch": "@@ -274,13 +274,6 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n      link in libf2c.  */\n   const char *library = FORTRAN_LIBRARY;\n \n-  /* This will become 0 if anything other than -v and kin (like -V)\n-     is seen, meaning the user is trying to accomplish something.\n-     If it remains nonzero, and the user wants version info, add stuff to\n-     the command line to make gcc invoke all the appropriate phases\n-     to get all the version info.  */\n-  int add_version_magic = 1;\n-\n   /* 0 => -xnone in effect.\n      1 => -xfoo in effect.  */\n   int saw_speclang = 0;\n@@ -331,14 +324,12 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n     {\n       if ((argv[i][0] == '+') && (argv[i][1] == 'e'))\n \t{\n-\t  add_version_magic = 0;\n \t  continue;\n \t}\n \n       if ((argv[i][0] != '-') || (argv[i][1] == '\\0'))\n \t{\n \t  ++n_infiles;\n-\t  add_version_magic = 0;\n \t  continue;\n \t}\n \n@@ -356,23 +347,17 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t  /* These options disable linking entirely or linking of the\n \t     standard libraries.  */\n \t  library = 0;\n-\t  add_version_magic = 0;\n \t  break;\n \n \tcase OPTION_l:\n \t  ++n_infiles;\n-\t  add_version_magic = 0;\n \t  break;\n \n \tcase OPTION_o:\n \t  ++n_outfiles;\n-\t  add_version_magic = 0;\n \t  break;\n \n \tcase OPTION_v:\n-\t  if (! verbose)\n-\t    fprintf (stderr, \"g77 version %s (Fortran Frontend version %s)\\n\",\n-\t\t     version_string, ffe_version_string);\n \t  verbose = 1;\n \t  break;\n \n@@ -387,18 +372,15 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \n \tcase OPTION_version:\n \t  printf (\"\\\n-GNU Fortran %s\\n\\\n+GNU Fortran %s (Fortran Frontend version %s)\\n\\\n Copyright (C) 2001 Free Software Foundation, Inc.\\n\\\n-For more version information on components of the GNU Fortran\\n\\\n-compilation system, especially useful when reporting bugs,\\n\\\n-type the command `g77 --verbose'.\\n\\\n \\n\\\n GNU Fortran comes with NO WARRANTY, to the extent permitted by law.\\n\\\n You may redistribute copies of GNU Fortran\\n\\\n under the terms of the GNU General Public License.\\n\\\n For more information about these matters, see the file named COPYING\\n\\\n or type the command `info -f g77 Copying'.\\n\\\n-\", ffe_version_string);\n+\", version_string, ffe_version_string);\n \t  exit (0);\n \t  break;\n \n@@ -407,44 +389,11 @@ or type the command `info -f g77 Copying'.\\n\\\n \t     cool facility for handling --help and --verbose --help.  */\n \t  return;\n \n-#if 0\n-\t  printf (\"\\\n-Usage: g77 [OPTION]... FORTRAN-SOURCE...\\n\\\n-\\n\\\n-Compile and link Fortran source code to produce an executable program,\\n\\\n-which by default is named `a.out', and can be invoked with the UNIX\\n\\\n-command `./a.out'.\\n\\\n-\\n\\\n-Options:\\n\\\n---debug                include debugging information in executable.\\n\\\n---help                 display this help and exit.\\n\\\n---optimize[=LEVEL]     take extra time and memory to make generated\\n\\\n-                         executable run faster.  LEVEL is 0 for no\\n\\\n-                         optimization, 1 for normal optimization, and\\n\\\n-                         increases through 3 for more optimization.\\n\\\n---output=PROGRAM       name the executable PROGRAM instead of a.out;\\n\\\n-                         invoke with the command `./PROGRAM'.\\n\\\n---version              display version information and exit.\\n\\\n-\\n\\\n-Many other options exist to tailor the compilation process, specify\\n\\\n-the dialect of the Fortran source code, specify details of the\\n\\\n-code-generation methodology, and so on.\\n\\\n-\\n\\\n-For more information on g77 and gcc, type the commands `info -f g77'\\n\\\n-and `info -f gcc' to read the Info documentation.\\n\\\n-\\n\\\n-For bug reporting instructions, please see:\\n\\\n-%s.\\n\", GCCBUGURL);\n-\t  exit (0);\n-\t  break;\n-#endif\n-\n \tcase OPTION_driver:\n \t  fatal (\"--driver no longer supported\");\n \t  break;\n \n \tdefault:\n-\t  add_version_magic = 0;\n \t  break;\n \t}\n \n@@ -460,6 +409,10 @@ For bug reporting instructions, please see:\\n\\\n   if ((n_outfiles != 0) && (n_infiles == 0))\n     fatal (\"No input files; unwilling to write output files\");\n \n+  /* If there are no input files, no need for the library.  */\n+  if (n_infiles == 0)\n+    library = 0;\n+\n   /* Second pass through arglist, transforming arguments as appropriate.  */\n \n   append_arg (argv[0]);\t/* Start with command name, of course. */\n@@ -548,7 +501,7 @@ For bug reporting instructions, please see:\\n\\\n \n   /* Append `-lg2c -lm' as necessary.  */\n \n-  if (! add_version_magic && library)\n+  if (library)\n     {\t\t\t\t/* Doing a link and no -nostdlib. */\n       if (saw_speclang)\n \tappend_arg (\"-xnone\");\n@@ -569,13 +522,6 @@ For bug reporting instructions, please see:\\n\\\n \t  break;\n \t}\n     }\n-  else if (add_version_magic && verbose)\n-    {\n-      append_arg (\"-c\");\n-      append_arg (\"-xf77-version\");\n-      append_arg (\"/dev/null\");\n-      append_arg (\"-xnone\");\n-    }\n \n   if (verbose\n       && g77_newargv != g77_xargv)"}, {"sha": "b2821ed936fe0752f159dfa41bb97e5412988a26", "filename": "gcc/f/lang-options.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-options.h?ref=8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "patch": "@@ -31,7 +31,6 @@ DEFINE_LANG_NAME (\"Fortran\")\n \n   { \"-fversion\", \n     N_(\"Print g77-specific compiler version info, run internal tests\") },\n-  { \"-fnull-version\", \"\" },\n /*\"-fident\",*/\n /*\"-fno-ident\",*/\n   { \"-ff66\", "}, {"sha": "098bba6819bcf504ee34e52383565761faaa170f", "filename": "gcc/f/lang-specs.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-specs.h?ref=8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "patch": "@@ -41,19 +41,3 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n   {\"@f77\",\n    \"%{!M:%{!MM:%{!E:f771 %i %(cc1_options) %{I*}\\\n \t%{!fsyntax-only:%(invoke_as)}}}}\", 0},\n-  /* XXX This is perverse and should not be necessary.  */\n-  {\"@f77-version\",\n-   \"tradcpp0 -lang-fortran %(cpp_options) %j \\n\\\n-    f771 -fnull-version %1 \\\n-      %{!Q:-quiet} -dumpbase g77-version.f %{d*} %{m*} %{a*} \\\n-      %{g*} %{O*} %{W*} %{w} %{pedantic*} \\\n-      -version -fversion %{f*} %{I*} -o %g.s %j \\n\\\n-     as %a %Y -o %g%O %g.s %A \\n\\\n-     ld %l %X -o %g %g%O %{A} %{d} %{e*} %{m} %{N} %{n} \\\n-      %{r} %{s} %{t} %{u*} %{x} %{z} %{Z} \\\n-      %{!A:%{!nostdlib:%{!nostartfiles:%S}}} \\\n-      %{static:} %{L*} %D -lg2c -lm \\\n-      %{!nostdlib:%{!nodefaultlibs:%G %L %G}} \\\n-      %{!A:%{!nostdlib:%{!nostartfiles:%E}}} \\\n-      %{T*} \\n\\\n-     %g \\n\", 0},"}, {"sha": "ba11e2cb20dd54fb793a73dc873aa669e9d26d19", "filename": "gcc/f/lex.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.c?ref=8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "patch": "@@ -1844,22 +1844,6 @@ ffelex_file_fixed (ffewhereFile wf, FILE *f)\n   ffelex_current_wc_ = ffewhere_column_unknown ();\n   latest_char_in_file = '\\n';\n \n-  if (ffe_is_null_version ())\n-    {\n-      /* Just substitute a \"program\" directly here.  */\n-\n-      char line[] = \"      call g77__fvers;call g77__ivers;call g77__uvers;end\";\n-      char *p;\n-\n-      column = 0;\n-      for (p = &line[0]; *p != '\\0'; ++p)\n-\tcolumn = ffelex_image_char_ (*p, column);\n-\n-      c = EOF;\n-\n-      goto have_line;\t\t/* :::::::::::::::::::: */\n-    }\n-\n   goto first_line;\t\t/* :::::::::::::::::::: */\n \n   /* Come here to get a new line. */\n@@ -2006,8 +1990,6 @@ ffelex_file_fixed (ffewhereFile wf, FILE *f)\n       column = ffelex_final_nontab_column_;\n     }\n \n- have_line:\t\t\t/* :::::::::::::::::::: */\n-\n   ffelex_card_image_[column] = '\\0';\n   ffelex_card_length_ = column;\n "}, {"sha": "774f29f2037d423efd10cdd9b155b4d362d64ab3", "filename": "gcc/f/top.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Ftop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Ftop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftop.c?ref=8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "patch": "@@ -78,7 +78,6 @@ bool ffe_is_globals_ = TRUE;\n bool ffe_is_init_local_zero_ = FFETARGET_defaultIS_INIT_LOCAL_ZERO;\n bool ffe_is_mainprog_;\t\t/* TRUE if current prog unit known to be\n \t\t\t\t   main. */\n-bool ffe_is_null_version_ = FALSE;\n bool ffe_is_onetrip_ = FALSE;\n bool ffe_is_silent_ = TRUE;\n bool ffe_is_typeless_boz_ = FALSE;\n@@ -173,8 +172,6 @@ ffe_decode_option (argc, argv)\n \t  ffe_set_is_version (TRUE);\n \t  ffe_set_is_do_internal_checks (TRUE);\n \t}\n-      else if (strcmp (&opt[2], \"null-version\") == 0)\n-\tffe_set_is_null_version (TRUE);\n       else if (strcmp (&opt[2], \"f66\") == 0)\n \t{\n \t  ffe_set_is_onetrip (TRUE);"}, {"sha": "3159b511fee86d5a59bcbf33ded82603571faa01", "filename": "gcc/f/top.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Ftop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2/gcc%2Ff%2Ftop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftop.h?ref=8fbea508b1fb6be8eac773b5c3adbe1ea16b63d2", "patch": "@@ -95,7 +95,6 @@ extern bool ffe_is_free_form_;\n extern bool ffe_is_globals_;\n extern bool ffe_is_init_local_zero_;\n extern bool ffe_is_mainprog_;\n-extern bool ffe_is_null_version_;\n extern bool ffe_is_onetrip_;\n extern bool ffe_is_silent_;\n extern bool ffe_is_typeless_boz_;\n@@ -183,7 +182,6 @@ void ffe_terminate_4 (void);\n #define ffe_is_globals() ffe_is_globals_\n #define ffe_is_init_local_zero() ffe_is_init_local_zero_\n #define ffe_is_mainprog() ffe_is_mainprog_\n-#define ffe_is_null_version() ffe_is_null_version_\n #define ffe_is_onetrip() ffe_is_onetrip_\n #define ffe_is_pedantic() ffe_is_pedantic_\n #define ffe_is_pedantic_not_90() (ffe_is_pedantic_ && !ffe_is_90_)\n@@ -235,7 +233,6 @@ void ffe_terminate_4 (void);\n #define ffe_set_is_globals(f) (ffe_is_globals_ = (f))\n #define ffe_set_is_init_local_zero(f) (ffe_is_init_local_zero_ = (f))\n #define ffe_set_is_mainprog(f) (ffe_is_mainprog_ = (f))\n-#define ffe_set_is_null_version(f) (ffe_is_null_version_ = (f))\n #define ffe_set_is_onetrip(f) (ffe_is_onetrip_ = (f))\n #define ffe_set_is_pedantic(f) (ffe_is_pedantic_ = (f))\n #define ffe_set_is_saveall(f) (ffe_is_saveall_ = (f))"}]}