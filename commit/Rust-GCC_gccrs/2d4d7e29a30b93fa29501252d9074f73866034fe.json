{"sha": "2d4d7e29a30b93fa29501252d9074f73866034fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0ZDdlMjlhMzBiOTNmYTI5NTAxMjUyZDkwNzRmNzM4NjYwMzRmZQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-08-05T13:26:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T13:26:24Z"}, "message": "xoscons.adb, [...]: New files.\n\n2008-08-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* xoscons.adb, xutil.ads, xutil.adb, s-oscons-tmplt.c: New files.\n\n\t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in: Generate\n\ts-oscons.ads\n\nFrom-SVN: r138705", "tree": {"sha": "df92d36c4cd6a8237bc09429c4ab0dac874d986c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df92d36c4cd6a8237bc09429c4ab0dac874d986c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4d7e29a30b93fa29501252d9074f73866034fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4d7e29a30b93fa29501252d9074f73866034fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4d7e29a30b93fa29501252d9074f73866034fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4d7e29a30b93fa29501252d9074f73866034fe/comments", "author": null, "committer": null, "parents": [{"sha": "4ae23b62c661788be5046ff466c7b2be2dfaeef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae23b62c661788be5046ff466c7b2be2dfaeef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ae23b62c661788be5046ff466c7b2be2dfaeef6"}], "stats": {"total": 1778, "additions": 1776, "deletions": 2}, "files": [{"sha": "289417110bf7166f73b4c643b08f4d7a32dd852a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d4d7e29a30b93fa29501252d9074f73866034fe", "patch": "@@ -1,3 +1,10 @@\n+2008-08-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* xoscons.adb, xutil.ads, xutil.adb, s-oscons-tmplt.c: New files.\n+\n+\t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in: Generate\n+\ts-oscons.ads\n+\n 2008-08-05  Robert Dewar  <dewar@adacore.com>\n \n \t* opt.ads (Warn_On_Biased_Representation): New flag"}, {"sha": "a0af9a4e015486de65868725136bc70fab9e543a", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=2d4d7e29a30b93fa29501252d9074f73866034fe", "patch": "@@ -922,18 +922,47 @@ ada/sinfo.h : ada/sinfo.ads ada/xsinfo.adb\n \t$(CP) $^ ada/bldtools/sinfo\n \t(cd ada/bldtools/sinfo && $(GNATMAKE) -q xsinfo && ./xsinfo ../../sinfo.h )\n \n-ada/nmake.adb : ada/sinfo.ads ada/nmake.adt ada/xnmake.adb\n+ada/nmake.adb : ada/sinfo.ads ada/nmake.adt ada/xnmake.adb ada/xutil.ads ada/xutil.adb\n \t-$(MKDIR) ada/bldtools/nmake_b\n \t$(RM) $(addprefix ada/bldtools/nmake_b/,$(notdir $^))\n \t$(CP) $^ ada/bldtools/nmake_b\n \t(cd ada/bldtools/nmake_b && $(GNATMAKE) -q xnmake && ./xnmake -b ../../nmake.adb )\n \n-ada/nmake.ads :  ada/sinfo.ads ada/nmake.adt ada/xnmake.adb ada/nmake.adb\n+ada/nmake.ads :  ada/sinfo.ads ada/nmake.adt ada/xnmake.adb ada/nmake.adb ada/xutil.ads ada/xutil.adb\n \t-$(MKDIR) ada/bldtools/nmake_s\n \t$(RM) $(addprefix ada/bldtools/nmake_s/,$(notdir $^))\n \t$(CP) $^ ada/bldtools/nmake_s\n \t(cd ada/bldtools/nmake_s && $(GNATMAKE) -q xnmake && ./xnmake -s ../../nmake.ads )\n \n+OSCONS_CPPFLAGS=-DTHREAD_KIND_$(THREAD_KIND) s-oscons-tmplt.c\n+\n+ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(subst -, ,$(host)))),)\n+OSCONS_CPP=../../../$(DECC) -E /comment=as_is -DNATIVE \\\n+             -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c\n+\n+OSCONS_EXTRACT=../../../$(DECC) -DNATIVE \\\n+                 -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c ; \\\n+  ld -o s-oscons-tmplt.exe s-oscons-tmplt.obj; \\\n+  ./s-oscons-tmplt.exe > s-oscons-tmplt.s\n+\n+else\n+OSCONS_CPP=../../../xgcc -B../../../ -E -C \\\n+  -DTARGET=\\\"$(target)\\\" s-oscons-tmplt.c > s-oscons-tmplt.i\n+OSCONS_EXTRACT=../../../xgcc -S -B../../../ s-oscons-tmplt.i\n+endif\n+\n+ada/s-oscons.ads : ada/s-oscons-tmplt.c ada/gsocket.h ada/xoscons.adb ada/xutil.ads ada/xutil.adb\n+\t-$(MKDIR) ada/bldtools/oscons\n+\t$(RM) $(addprefix ada/bldtools/oscons/,$(notdir $^))\n+\t$(CP) $^ ada/bldtools/oscons\n+\t(cd ada/bldtools/oscons; gnatmake -q xoscons ; \\\n+\t\t$(RM) s-oscons-tmplt.i s-oscons-tmplt.s ; \\\n+\t\t$(OSCONS_CPP) ; \\\n+\t\t$(OSCONS_EXTRACT) ; \\\n+\t\t./xoscons ; \\\n+\t\t$(RM) ../../s-oscons.ads ; \\\n+\t\t$(CP) s-oscons.ads ../../s-oscons.ads)\n+\n update-sources : ada/treeprs.ads ada/einfo.h ada/sinfo.h ada/nmake.adb \\\n \tada/nmake.ads\n \t$(RM) $(addprefix $(srcdir)/ada/,$(notdir $^))"}, {"sha": "b40c4746c3a8610983509f296fbc901670a73e5c", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=2d4d7e29a30b93fa29501252d9074f73866034fe", "patch": "@@ -1948,6 +1948,9 @@ install-gnatlib: ../stamp-gnatlib-$(RTSDIR)\n \t$(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n \t          $(LN_S) $(fsrcpfx)$(word 2,$(subst <, ,$(PAIR))) \\\n \t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR)));)\n+# Copy generated target dependent sources\n+\t$(RM) $(RTSDIR)/s-oscons.ads\n+\t(cd $(RTSDIR); $(LN_S) ../s-oscons.ads s-oscons.ads)\n \t$(RM) ../stamp-gnatlib-$(RTSDIR)\n \ttouch ../stamp-gnatlib1-$(RTSDIR)\n "}, {"sha": "8017c3821377d605791f3550a9e3349026c144c0", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "added", "additions": 1195, "deletions": 0, "changes": 1195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=2d4d7e29a30b93fa29501252d9074f73866034fe", "patch": "@@ -0,0 +1,1195 @@\n+/*\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                  S Y S T E M . O S _ C O N S T A N T S                   --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+*/\n+\n+/**\n+ **  This template file is used while building the GNAT runtime library to\n+ **  generate package System.OS_Constants (s-oscons.ads).\n+ **\n+ **  The generation process is:\n+ **  1. the platform-independent extraction tool xoscons is built with the\n+ **     base native compiler\n+ **  2. this template is processed by the cross C compiler to produce\n+ **     a list of constant values\n+ **  3. the comments in this template and the list of values are processed\n+ **     by xoscons to generate s-oscons.ads.\n+ **\n+ **  Any comment occurring in this file whose start and end markers are on\n+ **  a line by themselves (see above) is copied verbatim to s-oscons.ads.\n+ **  All other comments are ignored. Note that the build process first passes\n+ **  this file through the C preprocessor, so comments that occur in a section\n+ **  that is conditioned by a #if directive will be copied to the output only\n+ **  when it applies.\n+ **\n+ **  Two methods are supported to generate the list of constant values,\n+ **  s-oscons-tmpl.s.\n+ **\n+ **  The default one assumes that the template can be compiled by the newly-\n+ **  build cross compiler. It uses markup produced in the (pseudo-)assembly\n+ **  listing:\n+ **\n+ **     xgcc -DTARGET=\\\"$target\\\" -C -E s-oscons-tmplt.c > s-oscons-tmplt.i\n+ **     xgcc -S s-oscons-tmplt.i\n+ **     xoscons\n+ **\n+ **  Alternatively, if s-oscons-tmplt.c must be compiled with a proprietary\n+ **  compiler (e.g. the native DEC CC on OpenVMS), the NATIVE macro should\n+ **  be defined, and the resulting program executed:\n+ **\n+ **  $ CC/DEFINE=(\"TARGET=\"\"OpenVMS\"\"\",NATIVE)\n+ **      /PREPROCESS_ONLY /COMMENTS=AS_IS s-oscons-tmplt\n+ **  $ CC/DEFINE=(\"TARGET=\"\"OpenVMS\"\"\",NATIVE) s-oscons-tmplt\n+ **  $ LINK s-oscons-tmplt\n+ **  $ DEFINE/USER SYS$OUTPUT s-oscons-tmplt.s\n+ **  $ RUN s-oscons-tmplt\n+ **  $ RUN xoscons\n+ **\n+ **/\n+\n+#ifndef TARGET\n+# error Please define TARGET\n+#endif\n+\n+#include <stdlib.h>\n+#include <string.h>\n+#include <limits.h>\n+#include <fcntl.h>\n+\n+#if ! (defined (__vxworks) || defined (__VMS) || defined (__MINGW32__) || \\\n+       defined (__nucleus__))\n+# define HAVE_TERMIOS\n+#endif\n+\n+#include \"gsocket.h\"\n+\n+#ifndef HAVE_SOCKETS\n+# include <errno.h>\n+#endif\n+\n+#ifdef HAVE_TERMIOS\n+# include <termios.h>\n+#endif\n+\n+#ifdef NATIVE\n+#include <stdio.h>\n+#define CND(name,comment) \\\n+  printf (\"\\n->CND:$%d:\" #name \":$%d:\" comment, __LINE__, ((int) name));\n+\n+#define CNS(name,comment) \\\n+  printf (\"\\n->CNS:$%d:\" #name \":\" name \":\" comment, __LINE__);\n+\n+#define TXT(text) \\\n+  printf (\"\\n->TXT:$%d:\" text, __LINE__);\n+\n+#else\n+\n+#define CND(name, comment) \\\n+  asm volatile(\"\\n->CND:%0:\" #name \":%1:\" comment \\\n+  : : \"i\" (__LINE__), \"i\" ((int) name));\n+/* Decimal constant in the range of type \"int\" */\n+\n+#define CNS(name, comment) \\\n+  asm volatile(\"\\n->CNS:%0:\" #name \":\" name \":\" comment \\\n+  : : \"i\" (__LINE__));\n+/* General expression constant */\n+\n+#define TXT(text) \\\n+  asm volatile(\"\\n->TXT:%0:\" text \\\n+  : : \"i\" (__LINE__));\n+/* Freeform text */\n+\n+#endif\n+\n+#ifdef __MINGW32__\n+unsigned int _CRT_fmode = _O_BINARY;\n+#endif\n+\n+int\n+main (void) {\n+\n+/*\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT runtime library. This package should not be directly with'd\n+--  by an application program.\n+\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to s-oscons-tmplt.c and rebuild the GNAT runtime library.\n+*/\n+\n+/**\n+ ** Do not change the format of the line below without also updating the\n+ ** MaRTE Makefile.\n+ **/\n+TXT(\"--  This is the version for \" TARGET)\n+TXT(\"\")\n+\n+#ifdef HAVE_SOCKETS\n+/**\n+ **  The type definitions for struct hostent components uses Interfaces.C\n+ **/\n+\n+TXT(\"with Interfaces.C;\")\n+#endif\n+\n+/*\n+package System.OS_Constants is\n+\n+   pragma Pure;\n+*/\n+\n+/**\n+ **  General constants (all platforms)\n+ **/\n+\n+/*\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+*/\n+\n+#ifndef IOV_MAX\n+# define IOV_MAX INT_MAX\n+#endif\n+CND(IOV_MAX, \"Maximum writev iovcnt\")\n+\n+/*\n+\n+   ---------------------\n+   -- File open modes --\n+   ---------------------\n+\n+*/\n+\n+#ifndef O_RDWR\n+# define O_RDWR -1\n+#endif\n+CND(O_RDWR, \"Read/write\")\n+\n+#ifndef O_NOCTTY\n+# define O_NOCTTY -1\n+#endif\n+CND(O_NOCTTY, \"Don't change ctrl tty\")\n+\n+#ifndef O_NDELAY\n+# define O_NDELAY -1\n+#endif\n+CND(O_NDELAY, \"Nonblocking\")\n+\n+/*\n+\n+   ----------------------\n+   -- Fcntl operations --\n+   ----------------------\n+\n+*/\n+\n+#ifndef F_GETFL\n+# define F_GETFL -1\n+#endif\n+CND(F_GETFL, \"Get flags\")\n+\n+#ifndef F_SETFL\n+# define F_SETFL -1\n+#endif\n+CND(F_SETFL, \"Set flags\")\n+\n+/*\n+\n+   -----------------\n+   -- Fcntl flags --\n+   -----------------\n+\n+*/\n+\n+#ifndef FNDELAY\n+# define FNDELAY -1\n+#endif\n+CND(FNDELAY, \"Nonblocking\")\n+\n+/*\n+\n+   ----------------------\n+   -- Ioctl operatings --\n+   ----------------------\n+\n+*/\n+\n+#ifndef FIONBIO\n+# define FIONBIO -1\n+#endif\n+CND(FIONBIO, \"Set/clear non-blocking io\")\n+\n+#ifndef FIONREAD\n+# define FIONREAD -1\n+#endif\n+CND(FIONREAD, \"How many bytes to read\")\n+\n+/*\n+\n+   ------------------\n+   -- Errno values --\n+   ------------------\n+\n+   --  The following constants are defined from <errno.h>\n+\n+*/\n+#ifndef EAGAIN\n+# define EAGAIN -1\n+#endif\n+CND(EAGAIN, \"Try again\")\n+\n+#ifndef ENOENT\n+# define ENOENT -1\n+#endif\n+CND(ENOENT, \"File not found\")\n+\n+#ifndef ENOMEM\n+# define ENOMEM -1\n+#endif\n+CND(ENOMEM, \"Out of memory\")\n+\n+#ifdef __MINGW32__\n+/*\n+\n+   --  The following constants are defined from <winsock2.h> (WSA*)\n+\n+*/\n+\n+/**\n+ **  For sockets-related errno values on Windows, gsocket.h redefines\n+ **  Exxx as WSAExxx.\n+ **/\n+\n+#endif\n+\n+#ifndef EACCES\n+# define EACCES -1\n+#endif\n+CND(EACCES, \"Permission denied\")\n+\n+#ifndef EADDRINUSE\n+# define EADDRINUSE -1\n+#endif\n+CND(EADDRINUSE, \"Address already in use\")\n+\n+#ifndef EADDRNOTAVAIL\n+# define EADDRNOTAVAIL -1\n+#endif\n+CND(EADDRNOTAVAIL, \"Cannot assign address\")\n+\n+#ifndef EAFNOSUPPORT\n+# define EAFNOSUPPORT -1\n+#endif\n+CND(EAFNOSUPPORT, \"Addr family not supported\")\n+\n+#ifndef EALREADY\n+# define EALREADY -1\n+#endif\n+CND(EALREADY, \"Operation in progress\")\n+\n+#ifndef EBADF\n+# define EBADF -1\n+#endif\n+CND(EBADF, \"Bad file descriptor\")\n+\n+#ifndef ECONNABORTED\n+# define ECONNABORTED -1\n+#endif\n+CND(ECONNABORTED, \"Connection aborted\")\n+\n+#ifndef ECONNREFUSED\n+# define ECONNREFUSED -1\n+#endif\n+CND(ECONNREFUSED, \"Connection refused\")\n+\n+#ifndef ECONNRESET\n+# define ECONNRESET -1\n+#endif\n+CND(ECONNRESET, \"Connection reset by peer\")\n+\n+#ifndef EDESTADDRREQ\n+# define EDESTADDRREQ -1\n+#endif\n+CND(EDESTADDRREQ, \"Destination addr required\")\n+\n+#ifndef EFAULT\n+# define EFAULT -1\n+#endif\n+CND(EFAULT, \"Bad address\")\n+\n+#ifndef EHOSTDOWN\n+# define EHOSTDOWN -1\n+#endif\n+CND(EHOSTDOWN, \"Host is down\")\n+\n+#ifndef EHOSTUNREACH\n+# define EHOSTUNREACH -1\n+#endif\n+CND(EHOSTUNREACH, \"No route to host\")\n+\n+#ifndef EINPROGRESS\n+# define EINPROGRESS -1\n+#endif\n+CND(EINPROGRESS, \"Operation now in progress\")\n+\n+#ifndef EINTR\n+# define EINTR -1\n+#endif\n+CND(EINTR, \"Interrupted system call\")\n+\n+#ifndef EINVAL\n+# define EINVAL -1\n+#endif\n+CND(EINVAL, \"Invalid argument\")\n+\n+#ifndef EIO\n+# define EIO -1\n+#endif\n+CND(EIO, \"Input output error\")\n+\n+#ifndef EISCONN\n+# define EISCONN -1\n+#endif\n+CND(EISCONN, \"Socket already connected\")\n+\n+#ifndef ELOOP\n+# define ELOOP -1\n+#endif\n+CND(ELOOP, \"Too many symbolic links\")\n+\n+#ifndef EMFILE\n+# define EMFILE -1\n+#endif\n+CND(EMFILE, \"Too many open files\")\n+\n+#ifndef EMSGSIZE\n+# define EMSGSIZE -1\n+#endif\n+CND(EMSGSIZE, \"Message too long\")\n+\n+#ifndef ENAMETOOLONG\n+# define ENAMETOOLONG -1\n+#endif\n+CND(ENAMETOOLONG, \"Name too long\")\n+\n+#ifndef ENETDOWN\n+# define ENETDOWN -1\n+#endif\n+CND(ENETDOWN, \"Network is down\")\n+\n+#ifndef ENETRESET\n+# define ENETRESET -1\n+#endif\n+CND(ENETRESET, \"Disconn. on network reset\")\n+\n+#ifndef ENETUNREACH\n+# define ENETUNREACH -1\n+#endif\n+CND(ENETUNREACH, \"Network is unreachable\")\n+\n+#ifndef ENOBUFS\n+# define ENOBUFS -1\n+#endif\n+CND(ENOBUFS, \"No buffer space available\")\n+\n+#ifndef ENOPROTOOPT\n+# define ENOPROTOOPT -1\n+#endif\n+CND(ENOPROTOOPT, \"Protocol not available\")\n+\n+#ifndef ENOTCONN\n+# define ENOTCONN -1\n+#endif\n+CND(ENOTCONN, \"Socket not connected\")\n+\n+#ifndef ENOTSOCK\n+# define ENOTSOCK -1\n+#endif\n+CND(ENOTSOCK, \"Operation on non socket\")\n+\n+#ifndef EOPNOTSUPP\n+# define EOPNOTSUPP -1\n+#endif\n+CND(EOPNOTSUPP, \"Operation not supported\")\n+\n+#ifndef EPFNOSUPPORT\n+# define EPFNOSUPPORT -1\n+#endif\n+CND(EPFNOSUPPORT, \"Unknown protocol family\")\n+\n+#ifndef EPROTONOSUPPORT\n+# define EPROTONOSUPPORT -1\n+#endif\n+CND(EPROTONOSUPPORT, \"Unknown protocol\")\n+\n+#ifndef EPROTOTYPE\n+# define EPROTOTYPE -1\n+#endif\n+CND(EPROTOTYPE, \"Unknown protocol type\")\n+\n+#ifndef ESHUTDOWN\n+# define ESHUTDOWN -1\n+#endif\n+CND(ESHUTDOWN, \"Cannot send once shutdown\")\n+\n+#ifndef ESOCKTNOSUPPORT\n+# define ESOCKTNOSUPPORT -1\n+#endif\n+CND(ESOCKTNOSUPPORT, \"Socket type not supported\")\n+\n+#ifndef ETIMEDOUT\n+# define ETIMEDOUT -1\n+#endif\n+CND(ETIMEDOUT, \"Connection timed out\")\n+\n+#ifndef ETOOMANYREFS\n+# define ETOOMANYREFS -1\n+#endif\n+CND(ETOOMANYREFS, \"Too many references\")\n+\n+#ifndef EWOULDBLOCK\n+# define EWOULDBLOCK -1\n+#endif\n+CND(EWOULDBLOCK, \"Operation would block\")\n+\n+/**\n+ **  Terminal I/O constants\n+ **/\n+\n+#ifdef HAVE_TERMIOS\n+\n+/*\n+\n+   ----------------------\n+   -- Terminal control --\n+   ----------------------\n+\n+*/\n+\n+#ifndef TCSANOW\n+# define TCSANOW -1\n+#endif\n+CND(TCSANOW, \"Immediate\")\n+\n+#ifndef TCIFLUSH\n+# define TCIFLUSH -1\n+#endif\n+CND(TCIFLUSH, \"Flush input\")\n+\n+#ifndef CLOCAL\n+# define CLOCAL -1\n+#endif\n+CND(CLOCAL, \"Local\")\n+\n+#ifndef CRTSCTS\n+# define CRTSCTS -1\n+#endif\n+CND(CRTSCTS, \"Hardware flow control\")\n+\n+#ifndef CREAD\n+# define CREAD -1\n+#endif\n+CND(CREAD, \"Read\")\n+\n+#ifndef CS5\n+# define CS5 -1\n+#endif\n+CND(CS5, \"5 data bits\")\n+\n+#ifndef CS6\n+# define CS6 -1\n+#endif\n+CND(CS6, \"6 data bits\")\n+\n+#ifndef CS7\n+# define CS7 -1\n+#endif\n+CND(CS7, \"7 data bits\")\n+\n+#ifndef CS8\n+# define CS8 -1\n+#endif\n+CND(CS8, \"8 data bits\")\n+\n+#ifndef CSTOPB\n+# define CSTOPB -1\n+#endif\n+CND(CSTOPB, \"2 stop bits\")\n+\n+#ifndef PARENB\n+# define PARENB -1\n+#endif\n+CND(PARENB, \"Parity enable\")\n+\n+#ifndef PARODD\n+# define PARODD -1\n+#endif\n+CND(PARODD, \"Parity odd\")\n+\n+#ifndef B0\n+# define B0 -1\n+#endif\n+CND(B0, \"0 bps\")\n+\n+#ifndef B50\n+# define B50 -1\n+#endif\n+CND(B50, \"50 bps\")\n+\n+#ifndef B75\n+# define B75 -1\n+#endif\n+CND(B75, \"75 bps\")\n+\n+#ifndef B110\n+# define B110 -1\n+#endif\n+CND(B110, \"110 bps\")\n+\n+#ifndef B134\n+# define B134 -1\n+#endif\n+CND(B134, \"134 bps\")\n+\n+#ifndef B150\n+# define B150 -1\n+#endif\n+CND(B150, \"150 bps\")\n+\n+#ifndef B200\n+# define B200 -1\n+#endif\n+CND(B200, \"200 bps\")\n+\n+#ifndef B300\n+# define B300 -1\n+#endif\n+CND(B300, \"300 bps\")\n+\n+#ifndef B600\n+# define B600 -1\n+#endif\n+CND(B600, \"600 bps\")\n+\n+#ifndef B1200\n+# define B1200 -1\n+#endif\n+CND(B1200, \"1200 bps\")\n+\n+#ifndef B1800\n+# define B1800 -1\n+#endif\n+CND(B1800, \"1800 bps\")\n+\n+#ifndef B2400\n+# define B2400 -1\n+#endif\n+CND(B2400, \"2400 bps\")\n+\n+#ifndef B4800\n+# define B4800 -1\n+#endif\n+CND(B4800, \"4800 bps\")\n+\n+#ifndef B9600\n+# define B9600 -1\n+#endif\n+CND(B9600, \"9600 bps\")\n+\n+#ifndef B19200\n+# define B19200 -1\n+#endif\n+CND(B19200, \"19200 bps\")\n+\n+#ifndef B38400\n+# define B38400 -1\n+#endif\n+CND(B38400, \"38400 bps\")\n+\n+#ifndef B57600\n+# define B57600 -1\n+#endif\n+CND(B57600, \"57600 bps\")\n+\n+#ifndef B115200\n+# define B115200 -1\n+#endif\n+CND(B115200, \"115200 bps\")\n+\n+#ifndef B230400\n+# define B230400 -1\n+#endif\n+CND(B230400, \"230400 bps\")\n+\n+#ifndef B460800\n+# define B460800 -1\n+#endif\n+CND(B460800, \"460800 bps\")\n+\n+#ifndef B500000\n+# define B500000 -1\n+#endif\n+CND(B500000, \"500000 bps\")\n+\n+#ifndef B576000\n+# define B576000 -1\n+#endif\n+CND(B576000, \"576000 bps\")\n+\n+#ifndef B921600\n+# define B921600 -1\n+#endif\n+CND(B921600, \"921600 bps\")\n+\n+#ifndef B1000000\n+# define B1000000 -1\n+#endif\n+CND(B1000000, \"1000000 bps\")\n+\n+#ifndef B1152000\n+# define B1152000 -1\n+#endif\n+CND(B1152000, \"1152000 bps\")\n+\n+#ifndef B1500000\n+# define B1500000 -1\n+#endif\n+CND(B1500000, \"1500000 bps\")\n+\n+#ifndef B2000000\n+# define B2000000 -1\n+#endif\n+CND(B2000000, \"2000000 bps\")\n+\n+#ifndef B2500000\n+# define B2500000 -1\n+#endif\n+CND(B2500000, \"2500000 bps\")\n+\n+#ifndef B3000000\n+# define B3000000 -1\n+#endif\n+CND(B3000000, \"3000000 bps\")\n+\n+#ifndef B3500000\n+# define B3500000 -1\n+#endif\n+CND(B3500000, \"3500000 bps\")\n+\n+#ifndef B4000000\n+# define B4000000 -1\n+#endif\n+CND(B4000000, \"4000000 bps\")\n+\n+/*\n+\n+   ---------------------------------\n+   -- Terminal control characters --\n+   ---------------------------------\n+\n+*/\n+\n+#ifndef VINTR\n+# define VINTR -1\n+#endif\n+CND(VINTR, \"Interrupt\")\n+\n+#ifndef VQUIT\n+# define VQUIT -1\n+#endif\n+CND(VQUIT, \"Quit\")\n+\n+#ifndef VERASE\n+# define VERASE -1\n+#endif\n+CND(VERASE, \"Erase\")\n+\n+#ifndef VKILL\n+# define VKILL -1\n+#endif\n+CND(VKILL, \"Kill\")\n+\n+#ifndef VEOF\n+# define VEOF -1\n+#endif\n+CND(VEOF, \"EOF\")\n+\n+#ifndef VTIME\n+# define VTIME -1\n+#endif\n+CND(VTIME, \"Read timeout\")\n+\n+#ifndef VMIN\n+# define VMIN -1\n+#endif\n+CND(VMIN, \"Read min chars\")\n+\n+#ifndef VSWTC\n+# define VSWTC -1\n+#endif\n+CND(VSWTC, \"Switch\")\n+\n+#ifndef VSTART\n+# define VSTART -1\n+#endif\n+CND(VSTART, \"Flow control start\")\n+\n+#ifndef VSTOP\n+# define VSTOP -1\n+#endif\n+CND(VSTOP, \"Flow control stop\")\n+\n+#ifndef VSUSP\n+# define VSUSP -1\n+#endif\n+CND(VSUSP, \"Suspend\")\n+\n+#ifndef VEOL\n+# define VEOL -1\n+#endif\n+CND(VEOL, \"EOL\")\n+\n+#ifndef VREPRINT\n+# define VREPRINT -1\n+#endif\n+CND(VREPRINT, \"Reprint unread\")\n+\n+#ifndef VDISCARD\n+# define VDISCARD -1\n+#endif\n+CND(VDISCARD, \"Discard pending\")\n+\n+#ifndef VWERASE\n+# define VWERASE -1\n+#endif\n+CND(VWERASE, \"Word erase\")\n+\n+#ifndef VLNEXT\n+# define VLNEXT -1\n+#endif\n+CND(VLNEXT, \"Literal next\")\n+\n+#ifndef VEOL2\n+# define VEOL2 -1\n+#endif\n+CND(VEOL2, \"Alternative EOL\")\n+\n+#endif /* HAVE_TERMIOS */\n+\n+/**\n+ **  Sockets constants\n+ **/\n+\n+#ifdef HAVE_SOCKETS\n+\n+/*\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+*/\n+\n+#ifndef AF_INET\n+# define AF_INET -1\n+#endif\n+CND(AF_INET, \"IPv4 address family\")\n+\n+#ifndef AF_INET6\n+# define AF_INET6 -1\n+#else\n+# define HAVE_AF_INET6 1\n+#endif\n+CND(AF_INET6, \"IPv6 address family\")\n+\n+/*\n+\n+   ------------------\n+   -- Socket modes --\n+   ------------------\n+\n+*/\n+\n+#ifndef SOCK_STREAM\n+# define SOCK_STREAM -1\n+#endif\n+CND(SOCK_STREAM, \"Stream socket\")\n+\n+#ifndef SOCK_DGRAM\n+# define SOCK_DGRAM -1\n+#endif\n+CND(SOCK_DGRAM, \"Datagram socket\")\n+\n+/*\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+*/\n+\n+#ifndef HOST_NOT_FOUND\n+# define HOST_NOT_FOUND -1\n+#endif\n+CND(HOST_NOT_FOUND, \"Unknown host\")\n+\n+#ifndef TRY_AGAIN\n+# define TRY_AGAIN -1\n+#endif\n+CND(TRY_AGAIN, \"Host name lookup failure\")\n+\n+#ifndef NO_DATA\n+# define NO_DATA -1\n+#endif\n+CND(NO_DATA, \"No data record for name\")\n+\n+#ifndef NO_RECOVERY\n+# define NO_RECOVERY -1\n+#endif\n+CND(NO_RECOVERY, \"Non recoverable errors\")\n+\n+/*\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+*/\n+\n+#ifndef SHUT_RD\n+# define SHUT_RD -1\n+#endif\n+CND(SHUT_RD, \"No more recv\")\n+\n+#ifndef SHUT_WR\n+# define SHUT_WR -1\n+#endif\n+CND(SHUT_WR, \"No more send\")\n+\n+#ifndef SHUT_RDWR\n+# define SHUT_RDWR -1\n+#endif\n+CND(SHUT_RDWR, \"No more recv/send\")\n+\n+/*\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+*/\n+\n+#ifndef SOL_SOCKET\n+# define SOL_SOCKET -1\n+#endif\n+CND(SOL_SOCKET, \"Options for socket level\")\n+\n+#ifndef IPPROTO_IP\n+# define IPPROTO_IP -1\n+#endif\n+CND(IPPROTO_IP, \"Dummy protocol for IP\")\n+\n+#ifndef IPPROTO_UDP\n+# define IPPROTO_UDP -1\n+#endif\n+CND(IPPROTO_UDP, \"UDP\")\n+\n+#ifndef IPPROTO_TCP\n+# define IPPROTO_TCP -1\n+#endif\n+CND(IPPROTO_TCP, \"TCP\")\n+\n+/*\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+*/\n+\n+#ifndef MSG_OOB\n+# define MSG_OOB -1\n+#endif\n+CND(MSG_OOB, \"Process out-of-band data\")\n+\n+#ifndef MSG_PEEK\n+# define MSG_PEEK -1\n+#endif\n+CND(MSG_PEEK, \"Peek at incoming data\")\n+\n+#ifndef MSG_EOR\n+# define MSG_EOR -1\n+#endif\n+CND(MSG_EOR, \"Send end of record\")\n+\n+#ifndef MSG_WAITALL\n+# define MSG_WAITALL -1\n+#endif\n+CND(MSG_WAITALL, \"Wait for full reception\")\n+\n+#ifndef MSG_NOSIGNAL\n+# define MSG_NOSIGNAL -1\n+#endif\n+CND(MSG_NOSIGNAL, \"No SIGPIPE on send\")\n+\n+#ifdef __linux__\n+# define MSG_Forced_Flags \"MSG_NOSIGNAL\"\n+#else\n+# define MSG_Forced_Flags \"0\"\n+#endif\n+CNS(MSG_Forced_Flags, \"\")\n+/*\n+   --  Flags set on all send(2) calls\n+*/\n+\n+/*\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+*/\n+\n+#ifndef TCP_NODELAY\n+# define TCP_NODELAY -1\n+#endif\n+CND(TCP_NODELAY, \"Do not coalesce packets\")\n+\n+#ifndef SO_REUSEADDR\n+# define SO_REUSEADDR -1\n+#endif\n+CND(SO_REUSEADDR, \"Bind reuse local address\")\n+\n+#ifndef SO_REUSEPORT\n+# define SO_REUSEPORT -1\n+#endif\n+CND(SO_REUSEPORT, \"Bind reuse port number\")\n+\n+#ifndef SO_KEEPALIVE\n+# define SO_KEEPALIVE -1\n+#endif\n+CND(SO_KEEPALIVE, \"Enable keep-alive msgs\")\n+\n+#ifndef SO_LINGER\n+# define SO_LINGER -1\n+#endif\n+CND(SO_LINGER, \"Defer close to flush data\")\n+\n+#ifndef SO_BROADCAST\n+# define SO_BROADCAST -1\n+#endif\n+CND(SO_BROADCAST, \"Can send broadcast msgs\")\n+\n+#ifndef SO_SNDBUF\n+# define SO_SNDBUF -1\n+#endif\n+CND(SO_SNDBUF, \"Set/get send buffer size\")\n+\n+#ifndef SO_RCVBUF\n+# define SO_RCVBUF -1\n+#endif\n+CND(SO_RCVBUF, \"Set/get recv buffer size\")\n+\n+#ifndef SO_SNDTIMEO\n+# define SO_SNDTIMEO -1\n+#endif\n+CND(SO_SNDTIMEO, \"Emission timeout\")\n+\n+#ifndef SO_RCVTIMEO\n+# define SO_RCVTIMEO -1\n+#endif\n+CND(SO_RCVTIMEO, \"Reception timeout\")\n+\n+#ifndef SO_ERROR\n+# define SO_ERROR -1\n+#endif\n+CND(SO_ERROR, \"Get/clear error status\")\n+\n+#ifndef IP_MULTICAST_IF\n+# define IP_MULTICAST_IF -1\n+#endif\n+CND(IP_MULTICAST_IF, \"Set/get mcast interface\")\n+\n+#ifndef IP_MULTICAST_TTL\n+# define IP_MULTICAST_TTL -1\n+#endif\n+CND(IP_MULTICAST_TTL, \"Set/get multicast TTL\")\n+\n+#ifndef IP_MULTICAST_LOOP\n+# define IP_MULTICAST_LOOP -1\n+#endif\n+CND(IP_MULTICAST_LOOP, \"Set/get mcast loopback\")\n+\n+#ifndef IP_ADD_MEMBERSHIP\n+# define IP_ADD_MEMBERSHIP -1\n+#endif\n+CND(IP_ADD_MEMBERSHIP, \"Join a multicast group\")\n+\n+#ifndef IP_DROP_MEMBERSHIP\n+# define IP_DROP_MEMBERSHIP -1\n+#endif\n+CND(IP_DROP_MEMBERSHIP, \"Leave a multicast group\")\n+\n+#ifndef IP_PKTINFO\n+# define IP_PKTINFO -1\n+#endif\n+CND(IP_PKTINFO, \"Get datagram info\")\n+\n+/*\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+*/\n+\n+{\n+  struct timeval tv;\n+/*\n+   --  Sizes (in bytes) of the components of struct timeval\n+*/\n+#define SIZEOF_tv_sec (sizeof tv.tv_sec)\n+CND(SIZEOF_tv_sec, \"tv_sec\")\n+#define SIZEOF_tv_usec (sizeof tv.tv_usec)\n+CND(SIZEOF_tv_usec, \"tv_usec\")\n+}\n+/*\n+\n+   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n+*/\n+\n+#define SIZEOF_sockaddr_in (sizeof (struct sockaddr_in))\n+CND(SIZEOF_sockaddr_in, \"struct sockaddr_in\")\n+#ifdef HAVE_AF_INET6\n+# define SIZEOF_sockaddr_in6 (sizeof (struct sockaddr_in6))\n+#else\n+# define SIZEOF_sockaddr_in6 0\n+#endif\n+CND(SIZEOF_sockaddr_in6, \"struct sockaddr_in6\")\n+\n+/*\n+\n+   --  Size of file descriptor sets\n+*/\n+#define SIZEOF_fd_set (sizeof (fd_set))\n+CND(SIZEOF_fd_set, \"fd_set\");\n+/*\n+\n+   --  Fields of struct hostent\n+*/\n+\n+#ifdef __MINGW32__\n+# define h_addrtype_t \"short\"\n+# define h_length_t   \"short\"\n+#else\n+# define h_addrtype_t \"int\"\n+# define h_length_t   \"int\"\n+#endif\n+\n+TXT(\"   subtype H_Addrtype_T is Interfaces.C.\" h_addrtype_t \";\")\n+TXT(\"   subtype H_Length_T   is Interfaces.C.\" h_length_t \";\")\n+\n+/*\n+\n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+*/\n+\n+CND(Need_Netdb_Buffer, \"Need buffer for Netdb ops\")\n+CND(Has_Sockaddr_Len,  \"Sockaddr has sa_len field\")\n+\n+/**\n+ ** Do not change the format of the line below without also updating the\n+ ** MaRTE Makefile.\n+ **/\n+TXT(\"   Thread_Blocking_IO  : constant Boolean := True;\")\n+/*\n+   --  Set False for contexts where socket i/o are process blocking\n+*/\n+\n+#endif /* HAVE_SOCKETS */\n+\n+/**\n+ **  System-specific constants follow\n+ **/\n+\n+#ifdef __vxworks\n+\n+/*\n+\n+   --------------------------------\n+   -- VxWorks-specific constants --\n+   --------------------------------\n+\n+   --  These constants may be used only within the VxWorks version of\n+   --  GNAT.Sockets.Thin.\n+*/\n+\n+CND(OK,    \"VxWorks generic success\")\n+CND(ERROR, \"VxWorks generic error\")\n+\n+#endif\n+\n+#ifdef __MINGW32__\n+/*\n+\n+   ------------------------------\n+   -- MinGW-specific constants --\n+   ------------------------------\n+\n+   --  These constants may be used only within the MinGW version of\n+   --  GNAT.Sockets.Thin.\n+*/\n+\n+CND(WSASYSNOTREADY,     \"System not ready\")\n+CND(WSAVERNOTSUPPORTED, \"Version not supported\")\n+CND(WSANOTINITIALISED,  \"Winsock not initialized\")\n+CND(WSAEDISCON,         \"Disconnected\")\n+\n+#endif\n+\n+#ifdef NATIVE\n+   putchar ('\\n');\n+#endif\n+\n+/*\n+\n+end System.OS_Constants;\n+*/\n+}"}, {"sha": "efce54a1f112e8904fc1e28ed3cd377ba1fc9314", "filename": "gcc/ada/xoscons.adb", "status": "added", "additions": 419, "deletions": 0, "changes": 419, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=2d4d7e29a30b93fa29501252d9074f73866034fe", "patch": "@@ -0,0 +1,419 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                          GNAT SYSTEM UTILITIES                           --\n+--                                                                          --\n+--                              X O S C O N S                               --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--            Copyright (C) 2008, Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This program generates the spec of System.OS_Constants (s-oscons.ads).\n+\n+--  It works in conjunction with a C template file which must be pre-processed\n+--  and compiled using the cross compiler. Two input files are used:\n+--    - the preprocessed C file: s-oscons-tmplt.i\n+--    - the generated assembly file: s-oscons-tmplt.s\n+\n+--  The contents of s-oscons.ads is written on standard output.\n+\n+with Ada.Characters.Handling; use Ada.Characters.Handling;\n+with Ada.Exceptions;          use Ada.Exceptions;\n+with Ada.Strings.Fixed;       use Ada.Strings.Fixed;\n+with Ada.Text_IO;             use Ada.Text_IO;\n+with Ada.Streams.Stream_IO;   use Ada.Streams.Stream_IO;\n+\n+pragma Warnings (Off);\n+--  System.Unsigned_Types is an internal GNAT unit\n+with System.Unsigned_Types;   use System.Unsigned_Types;\n+pragma Warnings (On);\n+\n+with GNAT.Table;\n+\n+with XUtil;                   use XUtil;\n+\n+procedure XOSCons is\n+\n+   use ASCII;\n+   use Ada.Strings;\n+\n+   Unit_Name : constant String := \"s-oscons\";\n+   Tmpl_Name : constant String := Unit_Name & \"-tmplt\";\n+\n+   -------------------------------------------------\n+   -- Information retrieved from assembly listing --\n+   -------------------------------------------------\n+\n+   --  We need to deal with integer values that can be signed or unsigned,\n+   --  so we need to cater for the maximum range of both cases.\n+\n+   type String_Access is access all String;\n+   --  Note: we can't use GNAT.Strings for this definition, since that unit\n+   --  is not available in older base compilers.\n+\n+   type Int_Value_Type is record\n+      Positive  : Boolean;\n+      Abs_Value : Long_Unsigned := 0;\n+   end record;\n+\n+   type Asm_Info_Kind is\n+     (CND,     --  Constant (decimal)\n+      CNS,     --  Constant (freeform string)\n+      TXT);    --  Literal text\n+   --  Recognized markers found in assembly file. These markers are produced\n+   --  by the same-named macros from the C template.\n+\n+   type Asm_Info (Kind : Asm_Info_Kind := TXT) is record\n+      Line_Number   : Integer;\n+      --  Line number in C source file\n+\n+      Constant_Name : String_Access;\n+      --  Name of constant to be defined\n+\n+      Value_Len     : Natural := 0;\n+      --  Length of text representation of constant's value\n+\n+      Text_Value    : String_Access;\n+      --  Value for CNS constant\n+\n+      Int_Value     : Int_Value_Type;\n+      --  Value for CND constant\n+\n+      Comment       : String_Access;\n+      --  Additional descriptive comment for constant, or free-form text (TXT)\n+   end record;\n+\n+   package Asm_Infos is new GNAT.Table (\n+      Table_Component_Type => Asm_Info,\n+      Table_Index_Type     => Integer,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 100,\n+      Table_Increment      => 10);\n+\n+   Max_Constant_Name_Len  : Natural := 0;\n+   Max_Constant_Value_Len : Natural := 0;\n+   --  Longest name and longest value lengths\n+\n+   procedure Output_Info (OFile : Sfile; Info_Index : Integer);\n+   --  Output information from the indicated asm info line\n+\n+   procedure Parse_Asm_Line (Line : String);\n+   --  Parse one information line from the assembly source\n+\n+   function Contains_Template_Name (S : String) return Boolean;\n+   --  True if S contains Tmpl_Name, possibly with different casing\n+\n+   function Spaces (Count : Integer) return String;\n+   --  If Count is positive, return a string of Count spaces, else return an\n+   --  empty string.\n+\n+   ----------------------------\n+   -- Contains_Template_Name --\n+   ----------------------------\n+\n+   function Contains_Template_Name (S : String) return Boolean is\n+   begin\n+      return Index (Source => To_Lower (S), Pattern => Tmpl_Name) > 0;\n+   end Contains_Template_Name;\n+\n+   -----------------\n+   -- Output_Info --\n+   -----------------\n+\n+   procedure Output_Info (OFile : Sfile; Info_Index : Integer) is\n+      Info : Asm_Info renames Asm_Infos.Table (Info_Index);\n+\n+      procedure Put (S : String);\n+\n+      ---------\n+      -- Put --\n+      ---------\n+\n+      procedure Put (S : String) is\n+      begin\n+         Put (OFile, S);\n+      end Put;\n+\n+   begin\n+      if Info.Kind /= TXT then\n+         --  TXT case is handled by the common code below\n+\n+         Put (\"   \");\n+         Put (Info.Constant_Name.all);\n+         Put (Spaces (Max_Constant_Name_Len - Info.Constant_Name'Length));\n+\n+         Put (\" : constant := \");\n+\n+         if Info.Kind = CND then\n+            if not Info.Int_Value.Positive then\n+               Put (\"-\");\n+            end if;\n+            Put (Trim (Info.Int_Value.Abs_Value'Img, Side => Left));\n+         else\n+            Put (Info.Text_Value.all);\n+         end if;\n+\n+         Put (\";\");\n+\n+         if Info.Comment'Length > 0 then\n+            Put (Spaces (Max_Constant_Value_Len - Info.Value_Len));\n+            Put (\" --  \");\n+         end if;\n+      end if;\n+\n+      Put (Info.Comment.all);\n+      New_Line (OFile);\n+   end Output_Info;\n+\n+   --------------------\n+   -- Parse_Asm_Line --\n+   --------------------\n+\n+   procedure Parse_Asm_Line (Line : String) is\n+      Index1, Index2 : Integer := Line'First;\n+\n+      function Field_Alloc return String_Access;\n+      --  Allocate and return a copy of Line (Index1 .. Index2 - 1)\n+\n+      procedure Find_Colon (Index : in out Integer);\n+      --  Increment Index until the next colon in Line\n+\n+      function Parse_Int (S : String) return Int_Value_Type;\n+      --  Parse a decimal number, preceded by an optional '$' or '#' character,\n+      --  and return its value.\n+\n+      -----------------\n+      -- Field_Alloc --\n+      -----------------\n+\n+      function Field_Alloc return String_Access is\n+      begin\n+         return new String'(Line (Index1 .. Index2 - 1));\n+      end Field_Alloc;\n+\n+      ----------------\n+      -- Find_Colon --\n+      ----------------\n+\n+      procedure Find_Colon (Index : in out Integer) is\n+      begin\n+         loop\n+            Index := Index + 1;\n+            exit when Index > Line'Last or else Line (Index) = ':';\n+         end loop;\n+      end Find_Colon;\n+\n+      ---------------\n+      -- Parse_Int --\n+      ---------------\n+\n+      function Parse_Int (S : String) return Int_Value_Type is\n+         First    : Integer := S'First;\n+         Positive : Boolean;\n+      begin\n+         --  On some platforms, immediate integer values are prefixed with\n+         --  a $ or # character in assembly output.\n+\n+         if S (First) = '$'\n+           or else S (First) = '#'\n+         then\n+            First := First + 1;\n+         end if;\n+\n+         if S (First) = '-' then\n+            Positive := False;\n+            First    := First + 1;\n+         else\n+            Positive := True;\n+         end if;\n+\n+         return (Positive  => Positive,\n+                 Abs_Value => Long_Unsigned'Value (S (First .. S'Last)));\n+\n+      exception\n+         when E : others =>\n+            Put_Line (Standard_Error, \"can't parse decimal value: \" & S);\n+            raise;\n+      end Parse_Int;\n+\n+   --  Start of processing for Parse_Asm_Line\n+\n+   begin\n+      Find_Colon (Index2);\n+\n+      declare\n+         Info : Asm_Info (Kind => Asm_Info_Kind'Value\n+                                    (Line (Line'First .. Index2 - 1)));\n+      begin\n+         Index1 := Index2 + 1;\n+         Find_Colon (Index2);\n+\n+         Info.Line_Number :=\n+           Integer (Parse_Int (Line (Index1 .. Index2 - 1)).Abs_Value);\n+\n+         case Info.Kind is\n+            when CND | CNS =>\n+               Index1 := Index2 + 1;\n+               Find_Colon (Index2);\n+\n+               Info.Constant_Name := Field_Alloc;\n+               if Info.Constant_Name'Length > Max_Constant_Name_Len then\n+                  Max_Constant_Name_Len := Info.Constant_Name'Length;\n+               end if;\n+\n+               Index1 := Index2 + 1;\n+               Find_Colon (Index2);\n+\n+               if Info.Kind = CND then\n+                  Info.Int_Value := Parse_Int (Line (Index1 .. Index2 - 1));\n+                  Info.Value_Len := Index2 - Index1 - 1;\n+               else\n+                  Info.Text_Value := Field_Alloc;\n+                  Info.Value_Len  := Info.Text_Value'Length;\n+               end if;\n+\n+            when others =>\n+               null;\n+         end case;\n+\n+         Index1 := Index2 + 1;\n+         Index2 := Line'Last + 1;\n+         Info.Comment := Field_Alloc;\n+\n+         if Info.Kind = TXT then\n+            Info.Text_Value := Info.Comment;\n+\n+         --  Update Max_Constant_Value_Len, but only if this constant has\n+         --  a comment (else the value is allowed to be longer).\n+\n+         elsif Info.Comment'Length > 0 then\n+            if Info.Value_Len > Max_Constant_Value_Len then\n+               Max_Constant_Value_Len := Info.Value_Len;\n+            end if;\n+         end if;\n+\n+         Asm_Infos.Append (Info);\n+      end;\n+   exception\n+      when E : others =>\n+         Put_Line (Standard_Error,\n+           \"can't parse \" & Line);\n+         Put_Line (Standard_Error,\n+           \"exception raised: \" & Exception_Information (E));\n+   end Parse_Asm_Line;\n+\n+   ------------\n+   -- Spaces --\n+   ------------\n+\n+   function Spaces (Count : Integer) return String is\n+   begin\n+      if Count <= 0 then\n+         return \"\";\n+      else\n+         return (1 .. Count => ' ');\n+      end if;\n+   end Spaces;\n+\n+   --  Local declarations\n+\n+   Asm_File_Name  : constant String := Tmpl_Name & \".s\";\n+   Tmpl_File_Name : constant String := Tmpl_Name & \".i\";\n+   Ada_File_Name  : constant String := Unit_Name & \".ads\";\n+\n+   Asm_File  : Ada.Text_IO.File_Type;\n+   Tmpl_File : Ada.Text_IO.File_Type;\n+   OFile     : Sfile;\n+\n+   Line : String (1 .. 256);\n+   Last : Integer;\n+   --  Line being processed\n+\n+   Current_Line : Integer;\n+   Current_Info : Integer;\n+   In_Comment   : Boolean;\n+   In_Template  : Boolean;\n+\n+--  Start of processing for XOSCons\n+\n+begin\n+   --  Load values from assembly file\n+\n+   Open (Asm_File, In_File, Asm_File_Name);\n+\n+   while not End_Of_File (Asm_File) loop\n+      Get_Line (Asm_File, Line, Last);\n+      if Last > 2 and then Line (1 .. 2) = \"->\" then\n+         Parse_Asm_Line (Line (3 .. Last));\n+      end if;\n+   end loop;\n+\n+   Close (Asm_File);\n+\n+   --  Load C template and output definitions\n+\n+   Open (Tmpl_File, In_File, Tmpl_File_Name);\n+   Create (OFile, Out_File, Ada_File_Name);\n+\n+   Current_Line := 0;\n+   Current_Info := Asm_Infos.First;\n+   In_Comment   := False;\n+\n+   while not End_Of_File (Tmpl_File) loop\n+      <<Get_One_Line>>\n+      Get_Line (Tmpl_File, Line, Last);\n+\n+      if Last >= 2 and then Line (1 .. 2) = \"# \" then\n+         declare\n+            Index : Integer := 3;\n+         begin\n+            while Index <= Last and then Line (Index) in '0' .. '9' loop\n+               Index := Index + 1;\n+            end loop;\n+\n+            if Contains_Template_Name (Line (Index + 1 .. Last)) then\n+               Current_Line := Integer'Value (Line (3 .. Index - 1));\n+               In_Template  := True;\n+               goto Get_One_Line;\n+            else\n+               In_Template := False;\n+            end if;\n+         end;\n+\n+      elsif In_Template then\n+         if In_Comment then\n+            if Line (1 .. Last) = \"*/\" then\n+               In_Comment := False;\n+            else\n+               Put_Line (OFile, Line (1 .. Last));\n+            end if;\n+\n+         elsif Line (1 .. Last) = \"/*\" then\n+            In_Comment := True;\n+\n+         elsif Asm_Infos.Table (Current_Info).Line_Number = Current_Line then\n+            Output_Info (OFile, Current_Info);\n+            Current_Info := Current_Info + 1;\n+         end if;\n+         Current_Line := Current_Line + 1;\n+      end if;\n+   end loop;\n+\n+   Close (Tmpl_File);\n+\n+end XOSCons;"}, {"sha": "fbc755c09813130795ed395f3676dd5da46ecaec", "filename": "gcc/ada/xutil.adb", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fxutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fxutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxutil.adb?ref=2d4d7e29a30b93fa29501252d9074f73866034fe", "patch": "@@ -0,0 +1,77 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                          GNAT SYSTEM UTILITIES                           --\n+--                                                                          --\n+--                                X U T I L                                 --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package body XUtil is\n+\n+   use Ada.Strings.Unbounded;\n+   use Ada.Streams.Stream_IO;\n+\n+   --------------\n+   -- New_Line --\n+   --------------\n+\n+   procedure New_Line (F : Sfile) is\n+   begin\n+      Character'Write (Stream (F), ASCII.LF);\n+   end New_Line;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put (F : Sfile; S : String) is\n+   begin\n+      String'Write (Stream (F), S);\n+   end Put;\n+\n+   ---------\n+   -- Put --\n+   ---------\n+\n+   procedure Put (F : Sfile; S : VString) is\n+   begin\n+      Put (F, To_String (S));\n+   end Put;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line (F : Sfile; S : String) is\n+   begin\n+      Put (F, S);\n+      New_Line (F);\n+   end Put_Line;\n+\n+   --------------\n+   -- Put_Line --\n+   --------------\n+\n+   procedure Put_Line (F : Sfile; S : VString) is\n+   begin\n+      Put_Line (F, To_String (S));\n+   end Put_Line;\n+\n+end XUtil;"}, {"sha": "b99ca0db002969029f90ca4caff600a4e5c629fb", "filename": "gcc/ada/xutil.ads", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fxutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d7e29a30b93fa29501252d9074f73866034fe/gcc%2Fada%2Fxutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxutil.ads?ref=2d4d7e29a30b93fa29501252d9074f73866034fe", "patch": "@@ -0,0 +1,44 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                          GNAT SYSTEM UTILITIES                           --\n+--                                                                          --\n+--                                X U T I L                                 --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Shared routines for the build-time code generation utilities\n+\n+with Ada.Streams.Stream_IO;\n+with Ada.Strings.Unbounded;\n+\n+package XUtil is\n+\n+   subtype VString is Ada.Strings.Unbounded.Unbounded_String;\n+   subtype Sfile is Ada.Streams.Stream_IO.File_Type;\n+\n+   procedure Put (F : Sfile; S : String);\n+   procedure Put (F : Sfile; S : VString);\n+   procedure Put_Line (F : Sfile; S : String);\n+   procedure Put_Line (F : Sfile; S : VString);\n+   procedure New_Line (F : Sfile);\n+   --  Similar to the same-named Ada.Text_IO routines, but ensure UNIX line\n+   --  ending on all platforms.\n+\n+end XUtil;"}]}