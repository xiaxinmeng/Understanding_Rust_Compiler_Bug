{"sha": "ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQxYTJhYmRiMWQwMTVlNDEzNmM1YTMxNmU3ZGIwZTRhODg2ZjBkOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-01-02T21:36:17Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-02T21:36:17Z"}, "message": "tree-mudflap.c (mf_decl_cache_locals, [...]): Do not add referenced vars.\n\n        * tree-mudflap.c (mf_decl_cache_locals, mf_build_check_statement_for):\n        Do not add referenced vars.\n        * tree-cfg.c (update_modified_stmts): Do not update when SSA operands\n        are not active.\n        * passes.c (init_optimization_passes): Put mudflap_2 after\n        free_datastructures.\n\nFrom-SVN: r120358", "tree": {"sha": "faab110cd64d099e949c3f2a8835e76ece2eed5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faab110cd64d099e949c3f2a8835e76ece2eed5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/comments", "author": null, "committer": null, "parents": [{"sha": "de6bd996eb3b39713d4448716c9412b0e5b186c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6bd996eb3b39713d4448716c9412b0e5b186c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6bd996eb3b39713d4448716c9412b0e5b186c6"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "31d60012ee1701933e3e47c71d028493f90b0e75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "patch": "@@ -1,3 +1,12 @@\n+2007-01-02  Jan Hubicka  <jh@suse.cz>\n+\n+        * tree-mudflap.c (mf_decl_cache_locals, mf_build_check_statement_for):\n+        Do not add referenced vars.\n+        * tree-cfg.c (update_modified_stmts): Do not update when SSA operands\n+        are not active.\n+        * passes.c (init_optimization_passes): Put mudflap_2 after\n+        free_datastructures.\n+\n 2007-01-02  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-optimize (execute_fixup_cfg): Set after_inlining flag."}, {"sha": "ebf558639d6478efb882ea9095b0c739f80d698c", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "patch": "@@ -476,8 +476,8 @@ init_optimization_passes (void)\n   NEXT_PASS (pass_expand_omp);\n   NEXT_PASS (pass_all_optimizations);\n   NEXT_PASS (pass_warn_function_noreturn);\n-  NEXT_PASS (pass_mudflap_2);\n   NEXT_PASS (pass_free_datastructures);\n+  NEXT_PASS (pass_mudflap_2);\n   NEXT_PASS (pass_free_cfg_annotations);\n   NEXT_PASS (pass_expand);\n   NEXT_PASS (pass_rest_of_compilation);"}, {"sha": "18039079f58b7d5ff70ad3c5c0dc54418c5ae20b", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "patch": "@@ -2803,6 +2803,8 @@ bsi_for_stmt (tree stmt)\n static inline void\n update_modified_stmts (tree t)\n {\n+  if (!ssa_operands_active ())\n+    return;\n   if (TREE_CODE (t) == STATEMENT_LIST)\n     {\n       tree_stmt_iterator i;"}, {"sha": "4d80c19d385d63b7c8ba3bd7de4d281e972e47f3", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=ed1a2abdb1d015e4136c5a316e7db0e4a886f0d8", "patch": "@@ -460,14 +460,12 @@ mf_decl_cache_locals (void)\n      globals into the cache variables.  */\n   t = build2 (GIMPLE_MODIFY_STMT, TREE_TYPE (mf_cache_shift_decl_l),\n               mf_cache_shift_decl_l, mf_cache_shift_decl);\n-  add_referenced_var (mf_cache_shift_decl);\n   SET_EXPR_LOCATION (t, DECL_SOURCE_LOCATION (current_function_decl));\n   gimplify_to_stmt_list (&t);\n   shift_init_stmts = t;\n \n   t = build2 (GIMPLE_MODIFY_STMT, TREE_TYPE (mf_cache_mask_decl_l),\n               mf_cache_mask_decl_l, mf_cache_mask_decl);\n-  add_referenced_var (mf_cache_mask_decl);\n   SET_EXPR_LOCATION (t, DECL_SOURCE_LOCATION (current_function_decl));\n   gimplify_to_stmt_list (&t);\n   mask_init_stmts = t;\n@@ -573,17 +571,13 @@ mf_build_check_statement_for (tree base, tree limit,\n                                             & __mf_mask].  */\n   t = build2 (RSHIFT_EXPR, mf_uintptr_type, mf_base,\n               (flag_mudflap_threads ? mf_cache_shift_decl : mf_cache_shift_decl_l));\n-  add_referenced_var (mf_cache_shift_decl);\n   t = build2 (BIT_AND_EXPR, mf_uintptr_type, t,\n               (flag_mudflap_threads ? mf_cache_mask_decl : mf_cache_mask_decl_l));\n-  add_referenced_var (mf_cache_mask_decl);\n   t = build4 (ARRAY_REF,\n               TREE_TYPE (TREE_TYPE (mf_cache_array_decl)),\n               mf_cache_array_decl, t, NULL_TREE, NULL_TREE);\n-  add_referenced_var (mf_cache_array_decl);\n   t = build1 (ADDR_EXPR, mf_cache_structptr_type, t);\n   t = build2 (GIMPLE_MODIFY_STMT, void_type_node, mf_elem, t);\n-  add_referenced_var (mf_elem);\n   SET_EXPR_LOCUS (t, locus);\n   gimplify_to_stmt_list (&t);\n   tsi_link_after (&tsi, t, TSI_CONTINUE_LINKING);\n@@ -607,7 +601,6 @@ mf_build_check_statement_for (tree base, tree limit,\n               build1 (INDIRECT_REF, mf_cache_struct_type, mf_elem),\n               TYPE_FIELDS (mf_cache_struct_type), NULL_TREE);\n   t = build2 (GT_EXPR, boolean_type_node, t, mf_base);\n-  add_referenced_var (mf_base);\n \n   /* Construct '__mf_elem->high < __mf_limit'.\n "}]}