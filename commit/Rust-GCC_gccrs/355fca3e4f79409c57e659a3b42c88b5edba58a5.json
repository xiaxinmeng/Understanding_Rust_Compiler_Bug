{"sha": "355fca3e4f79409c57e659a3b42c88b5edba58a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU1ZmNhM2U0Zjc5NDA5YzU3ZTY1OWEzYjQyYzg4YjVlZGJhNThhNQ==", "commit": {"author": {"name": "Alasdair Baird", "email": "alasdair@wildcat.demon.co.uk", "date": "1999-09-08T07:34:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-09-08T07:34:47Z"}, "message": "flow.c (insn_dead_p): Use XEXP rather than SUBREG_REG.\n\n         * flow.c (insn_dead_p): Use XEXP rather than SUBREG_REG.\n         * haifa-sched.c (sched_analyze_1): Use XEXP rather than SUBREG_REG\n         and SET_DEST. Update comment.\n\nFrom-SVN: r29196", "tree": {"sha": "023d01c51f0193d5cfe81ced43cdaf3d11c3a836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/023d01c51f0193d5cfe81ced43cdaf3d11c3a836"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/355fca3e4f79409c57e659a3b42c88b5edba58a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355fca3e4f79409c57e659a3b42c88b5edba58a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355fca3e4f79409c57e659a3b42c88b5edba58a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355fca3e4f79409c57e659a3b42c88b5edba58a5/comments", "author": null, "committer": null, "parents": [{"sha": "7eb3fb5f9254d58fc95adc94fd1c8901e542e4e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb3fb5f9254d58fc95adc94fd1c8901e542e4e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb3fb5f9254d58fc95adc94fd1c8901e542e4e9"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "20961d739659452de8fab2dc2e5bc1ec76d61b7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/355fca3e4f79409c57e659a3b42c88b5edba58a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/355fca3e4f79409c57e659a3b42c88b5edba58a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=355fca3e4f79409c57e659a3b42c88b5edba58a5", "patch": "@@ -1,3 +1,9 @@\n+Wed Sep  8 00:33:43 1999  Alasdair Baird  <alasdair@wildcat.demon.co.uk>\n+\n+\t* flow.c (insn_dead_p): Use XEXP rather than SUBREG_REG.\n+\t* haifa-sched.c (sched_analyze_1): Use XEXP rather than SUBREG_REG\n+\tand SET_DEST. Update comment.\n+\n Wed Sep  8 18:55:17 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c: Include ggc.h. "}, {"sha": "60be87a5c01b338d16b4486c9c76e6175d69883f", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/355fca3e4f79409c57e659a3b42c88b5edba58a5/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/355fca3e4f79409c57e659a3b42c88b5edba58a5/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=355fca3e4f79409c57e659a3b42c88b5edba58a5", "patch": "@@ -2967,7 +2967,7 @@ insn_dead_p (x, needed, call_ok, notes)\n \n       while (GET_CODE (r) == SUBREG || GET_CODE (r) == STRICT_LOW_PART\n \t     || GET_CODE (r) == ZERO_EXTRACT)\n-\tr = SUBREG_REG (r);\n+\tr = XEXP (r, 0);\n \n       if (GET_CODE (r) == REG)\n \t{"}, {"sha": "e50419210f2a320f58009dd67388b8a78d4abe5c", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/355fca3e4f79409c57e659a3b42c88b5edba58a5/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/355fca3e4f79409c57e659a3b42c88b5edba58a5/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=355fca3e4f79409c57e659a3b42c88b5edba58a5", "patch": "@@ -3233,16 +3233,17 @@ flush_pending_lists (insn, only_write)\n   last_pending_memory_flush = alloc_INSN_LIST (insn, NULL_RTX);\n }\n \n-/* Analyze a single SET or CLOBBER rtx, X, creating all dependencies generated\n-   by the write to the destination of X, and reads of everything mentioned.  */\n+/* Analyze a single SET, CLOBBER, PRE_DEC, POST_DEC, PRE_INC or POST_INC\n+   rtx, X, creating all dependencies generated by the write to the\n+   destination of X, and reads of everything mentioned.  */\n \n static void\n sched_analyze_1 (x, insn)\n      rtx x;\n      rtx insn;\n {\n   register int regno;\n-  register rtx dest = SET_DEST (x);\n+  register rtx dest = XEXP (x, 0);\n   enum rtx_code code = GET_CODE (x);\n \n   if (dest == 0)\n@@ -3268,7 +3269,7 @@ sched_analyze_1 (x, insn)\n \t  sched_analyze_2 (XEXP (dest, 1), insn);\n \t  sched_analyze_2 (XEXP (dest, 2), insn);\n \t}\n-      dest = SUBREG_REG (dest);\n+      dest = XEXP (dest, 0);\n     }\n \n   if (GET_CODE (dest) == REG)"}]}