{"sha": "c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBiNmY1NGJkMzRmYzgyNGI3ZGNhY2YyYTU3YjBiOTE1ODUyMzg5ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-12-12T17:52:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-12-12T17:52:28Z"}, "message": "pt.c (do_auto_deduction): In direct-init context, { x } deduces from x.\n\n\tN3922\n\t* pt.c (do_auto_deduction): In direct-init context, { x } deduces\n\tfrom x.\n\nFrom-SVN: r218685", "tree": {"sha": "df6ec761c866e9b172ded4e4f45948ca749c6c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6ec761c866e9b172ded4e4f45948ca749c6c33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3501bab810710c32b76884331b1d0d5b58bcc2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3501bab810710c32b76884331b1d0d5b58bcc2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3501bab810710c32b76884331b1d0d5b58bcc2b"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "4fb8a13c3224f7b83018eba08e918d7ca89adb9b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "patch": "@@ -1,5 +1,9 @@\n 2014-12-12  Jason Merrill  <jason@redhat.com>\n \n+\tN3922\n+\t* pt.c (do_auto_deduction): In direct-init context, { x } deduces\n+\tfrom x.\n+\n \t* cp-tree.h (NAMESPACE_ABI_TAG): New.\n \t* name-lookup.c (handle_namespace_attrs): Set it.\n \t* class.c (check_tag): Split out from find_abi_tags_r."}, {"sha": "5ed9b2c216a58933e50bde3cb2af3c185a889f46", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "patch": "@@ -5546,6 +5546,8 @@ reshape_init_r (tree type, reshape_iter *d, bool first_initializer_p,\n \t of g++.old-deja/g++.mike/p7626.C: a pointer-to-member constant is\n \t a CONSTRUCTOR (with a record type).  */\n       if (TREE_CODE (init) == CONSTRUCTOR\n+\t  /* Don't complain about a capture-init.  */\n+\t  && !CONSTRUCTOR_IS_DIRECT_INIT (init)\n \t  && BRACE_ENCLOSED_INITIALIZER_P (init))  /* p7626.C */\n \t{\n \t  if (SCALAR_TYPE_P (type))"}, {"sha": "8a663d98c4727946e0c3354598584167f9f816aa", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "patch": "@@ -22117,7 +22117,21 @@ do_auto_deduction (tree type, tree init, tree auto_node)\n      initializer is a braced-init-list (8.5.4), with\n      std::initializer_list<U>.  */\n   if (BRACE_ENCLOSED_INITIALIZER_P (init))\n-    type = listify_autos (type, auto_node);\n+    {\n+      if (!DIRECT_LIST_INIT_P (init))\n+\ttype = listify_autos (type, auto_node);\n+      else if (CONSTRUCTOR_NELTS (init) == 1)\n+\tinit = CONSTRUCTOR_ELT (init, 0)->value;\n+      else\n+\t{\n+\t  if (permerror (input_location, \"direct-list-initialization of \"\n+\t\t\t \"%<auto%> requires exactly one element\"))\n+\t    inform (input_location,\n+\t\t    \"for deduction to %<std::initializer_list%>, use copy-\"\n+\t\t    \"list-initialization (i.e. add %<=%> before the %<{%>)\");\n+\t  type = listify_autos (type, auto_node);\n+\t}\n+    }\n \n   init = resolve_nondeduced_context (init);\n "}, {"sha": "4dadfc986d308c0d6dec1a50b2725900423a59e7", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-n3922.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-n3922.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-n3922.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-n3922.C?ref=c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "patch": "@@ -0,0 +1,15 @@\n+// N3922\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+template <class T, class U> struct same_type;\n+template <class T> struct same_type<T,T> {};\n+\n+auto x1 = { 1, 2 }; // decltype(x1) is std::initializer_list<int>\n+same_type<decltype(x1),std::initializer_list<int>> s1;\n+auto x4 = { 3 }; // decltype(x4) is std::initializer_list<int>\n+same_type<decltype(x4),std::initializer_list<int>> s4;\n+auto x5{ 3 }; // decltype(x5) is int\n+same_type<decltype(x5),int> s5;\n+auto x2 = { 1, 2.0 }; // { dg-error \"initializer_list\" } cannot deduce element type\n+auto x3{ 1, 2 }; // { dg-error \"one element\" } not a single element"}, {"sha": "1b287a16888c6d63eba8e6d25974ecabc1297f66", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-init5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b6f54bd34fc824b7dcacf2a57b0b915852389d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init5.C?ref=c0b6f54bd34fc824b7dcacf2a57b0b915852389d", "patch": "@@ -6,5 +6,5 @@\n int main()\n {\n   if ([x(42)]{ return x; }() != 42) __builtin_abort();\n-  if ([x{1,2}]{ return x.begin()[0]; }() != 1) __builtin_abort();\n+  if ([x{24}]{ return x; }() != 24) __builtin_abort();\n }"}]}