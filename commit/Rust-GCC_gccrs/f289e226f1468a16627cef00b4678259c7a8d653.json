{"sha": "f289e226f1468a16627cef00b4678259c7a8d653", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI4OWUyMjZmMTQ2OGExNjYyN2NlZjAwYjQ2NzgyNTljN2E4ZDY1Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-26T00:05:38Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-26T00:05:38Z"}, "message": "vax.c (TARGET_PROMOTE_PROTOTYPES): New.\n\n\t* config/vax/vax.c (TARGET_PROMOTE_PROTOTYPES): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(vax_struct_value_rtx): Likewise.\n\t* config/vax/vax.h (STRUCT_VALUE_REGNUM): Rename to\n\tVAX_STRUCT_VALUE_REGNUM.\n\t(PROMOTE_PROTOTYPES): Remove.\n\nFrom-SVN: r76599", "tree": {"sha": "a0b4fea3dff18591469623dab9583980aed3f263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0b4fea3dff18591469623dab9583980aed3f263"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f289e226f1468a16627cef00b4678259c7a8d653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f289e226f1468a16627cef00b4678259c7a8d653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f289e226f1468a16627cef00b4678259c7a8d653", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f289e226f1468a16627cef00b4678259c7a8d653/comments", "author": null, "committer": null, "parents": [{"sha": "12fb52cf279c409d5a4bd373e0c2163b490aa296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fb52cf279c409d5a4bd373e0c2163b490aa296", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12fb52cf279c409d5a4bd373e0c2163b490aa296"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "7217aec175e214589c938fbc3403602effe3c756", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f289e226f1468a16627cef00b4678259c7a8d653/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f289e226f1468a16627cef00b4678259c7a8d653/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f289e226f1468a16627cef00b4678259c7a8d653", "patch": "@@ -1,3 +1,12 @@\n+2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/vax/vax.c (TARGET_PROMOTE_PROTOTYPES): New.\n+\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n+\t(vax_struct_value_rtx): Likewise.\n+\t* config/vax/vax.h (STRUCT_VALUE_REGNUM): Rename to\n+\tVAX_STRUCT_VALUE_REGNUM.\n+\t(PROMOTE_PROTOTYPES): Remove.\n+\n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n  \n         * config/c4x/c4x.h (LEGITIMIZE_RELOAD_ADDRESS):  Handle symref."}, {"sha": "7695d6964f833e7703fb59bc7079772834f3e493", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f289e226f1468a16627cef00b4678259c7a8d653/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f289e226f1468a16627cef00b4678259c7a8d653/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=f289e226f1468a16627cef00b4678259c7a8d653", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for VAX.\n-   Copyright (C) 1987, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1987, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2004\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -52,6 +52,7 @@ static int vax_address_cost_1 (rtx);\n static int vax_address_cost (rtx);\n static int vax_rtx_costs_1 (rtx, enum rtx_code, enum rtx_code);\n static bool vax_rtx_costs (rtx, int, int, int *);\n+static rtx vax_struct_value_rtx (tree, int);\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n@@ -78,6 +79,12 @@ static bool vax_rtx_costs (rtx, int, int, int *);\n #undef TARGET_ADDRESS_COST\n #define TARGET_ADDRESS_COST vax_address_cost\n \n+#undef TARGET_PROMOTE_PROTOTYPES\n+#define TARGET_PROMOTE_PROTOTYPES hook_bool_tree_true\n+\n+#undef TARGET_STRUCT_VALUE_RTX\n+#define TARGET_STRUCT_VALUE_RTX vax_struct_value_rtx\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Set global variables as needed for the options enabled.  */\n@@ -774,3 +781,10 @@ vax_output_mi_thunk (FILE * file,\n   assemble_name (file,  XSTR (XEXP (DECL_RTL (function), 0), 0));\t\n   fprintf (file, \"+2\\n\");\t\t\t\t\t\t\n }\n+\f\n+static rtx\n+vax_struct_value_rtx (tree fntype ATTRIBUTE_UNUSED,\n+\t\t      int incoming ATTRIBUTE_UNUSED)\n+{\n+  return gen_rtx_REG (Pmode, VAX_STRUCT_VALUE_REGNUM);\n+}"}, {"sha": "3902c4b749e88b109773927e5ea8cdac7ee3efb4", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f289e226f1468a16627cef00b4678259c7a8d653/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f289e226f1468a16627cef00b4678259c7a8d653/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=f289e226f1468a16627cef00b4678259c7a8d653", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  VAX version.\n    Copyright (C) 1987, 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -230,7 +230,7 @@ extern int target_flags;\n \n /* Register in which address to store a structure value\n    is passed to a function.  */\n-#define STRUCT_VALUE_REGNUM 1\n+#define VAX_STRUCT_VALUE_REGNUM 1\n \f\n /* Define the classes of registers for register constraints in the\n    machine description.  Also define ranges of constants.\n@@ -833,10 +833,6 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    is done just by pretending it is already truncated.  */\n #define TRULY_NOOP_TRUNCATION(OUTPREC, INPREC) 1\n \n-/* When a prototype says `char' or `short', really pass an `int'.\n-   (On the VAX, this is required for system-library compatibility.)  */\n-#define PROMOTE_PROTOTYPES 1\n-\n /* Specify the machine mode that pointers have.\n    After generation of rtl, the compiler makes no further distinction\n    between pointers and any other objects of this machine mode.  */"}]}