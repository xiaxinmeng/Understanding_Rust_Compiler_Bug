{"sha": "04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRhZTgyYWE0ZTNkMmJkYmNiMmZjNjA0NjA0ZGI2YmY5ODg0YmE4Mg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-11-02T22:02:52Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-11-02T22:02:52Z"}, "message": "Remove ix86_split_call_pop_vzeroupper.\n\n2010-11-02  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386-protos.h (ix86_split_call_pop_vzeroupper):\n\tRemoved.\n\t* config/i386/i386.c (ix86_split_call_pop_vzeroupper): Likewise.\n\n\t* config/i386/i386.md (*call_pop_0_vzeroupper): Use parallel\n\tand call ix86_split_call_vzeroupper instead of\n\tix86_split_call_pop_vzeroupper.\n\t(*call_pop_1_vzeroupper): Likewise.\n\t(*sibcall_pop_1_vzeroupper): Likewise.\n\t(*call_value_pop_0_vzeroupper): Likewise.\n\t(*call_value_pop_1_vzeroupper): Likewise.\n\t(*sibcall_value_pop_1_vzeroupper): Likewise.\n\nFrom-SVN: r166218", "tree": {"sha": "ff97dd5053e451e0ac3ceb08d45c04151ae79c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff97dd5053e451e0ac3ceb08d45c04151ae79c2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2050af0af4837f3c8583805216b74960427a39f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2050af0af4837f3c8583805216b74960427a39f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2050af0af4837f3c8583805216b74960427a39f0"}], "stats": {"total": 110, "additions": 60, "deletions": 50}, "files": [{"sha": "61f8fded4aef6fc332064fead02651f48a7628f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "patch": "@@ -1,3 +1,18 @@\n+2010-11-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386-protos.h (ix86_split_call_pop_vzeroupper):\n+\tRemoved.\n+\t* config/i386/i386.c (ix86_split_call_pop_vzeroupper): Likewise.\n+\n+\t* config/i386/i386.md (*call_pop_0_vzeroupper): Use parallel\n+\tand call ix86_split_call_vzeroupper instead of\n+\tix86_split_call_pop_vzeroupper.\n+\t(*call_pop_1_vzeroupper): Likewise.\n+\t(*sibcall_pop_1_vzeroupper): Likewise.\n+\t(*call_value_pop_0_vzeroupper): Likewise.\n+\t(*call_value_pop_1_vzeroupper): Likewise.\n+\t(*sibcall_value_pop_1_vzeroupper): Likewise.\n+\n 2010-11-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.md (*sibcall_1_rex64_vzeroupper): Fix a"}, {"sha": "4dc707c05dac35222375d3ea58a8c5dac258482f", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "patch": "@@ -120,7 +120,6 @@ extern void ix86_expand_sse4_unpack (rtx[], bool, bool);\n extern bool ix86_expand_int_addcc (rtx[]);\n extern rtx ix86_expand_call (rtx, rtx, rtx, rtx, rtx, int);\n extern void ix86_split_call_vzeroupper (rtx, rtx);\n-extern void ix86_split_call_pop_vzeroupper (rtx, rtx);\n extern void x86_initialize_trampoline (rtx, rtx, rtx);\n extern rtx ix86_zero_extend_to_Pmode (rtx);\n extern void ix86_split_long_move (rtx[]);"}, {"sha": "afecc8935da40d2d3a7d3f83e21e008f7a907cb2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "patch": "@@ -21561,16 +21561,6 @@ ix86_split_call_vzeroupper (rtx insn, rtx vzeroupper)\n   emit_call_insn (call);\n }\n \n-void\n-ix86_split_call_pop_vzeroupper (rtx insn, rtx vzeroupper)\n-{\n-  rtx call = XVECEXP (PATTERN (insn), 0, 0);\n-  rtx pop = XVECEXP (PATTERN (insn), 0, 1);\n-  emit_insn (gen_avx_vzeroupper (vzeroupper));\n-  emit_call_insn (gen_rtx_PARALLEL (VOIDmode,\n-\t\t\t\t    gen_rtvec (2, call, pop)));\n-}\n-\n /* Output the assembly for a call instruction.  */\n \n const char *"}, {"sha": "79f4b68d53cf222df9b5d8244c34f4df3eb10304", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 45, "deletions": 39, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=04ae82aa4e3d2bdbcb2fc604604db6bf9884ba82", "patch": "@@ -11262,18 +11262,19 @@\n })\n \n (define_insn_and_split \"*call_pop_0_vzeroupper\"\n-  [(call (mem:QI (match_operand:SI 0 \"constant_call_address_operand\" \"\"))\n-\t (match_operand:SI 1 \"\" \"\"))\n-   (set (reg:SI SP_REG)\n-\t(plus:SI (reg:SI SP_REG)\n-\t\t (match_operand:SI 2 \"immediate_operand\" \"\")))\n+  [(parallel\n+    [(call (mem:QI (match_operand:SI 0 \"constant_call_address_operand\" \"\"))\n+\t   (match_operand:SI 1 \"\" \"\"))\n+     (set (reg:SI SP_REG)\n+\t  (plus:SI (reg:SI SP_REG)\n+\t\t   (match_operand:SI 2 \"immediate_operand\" \"\")))])\n    (unspec [(match_operand 3 \"const_int_operand\" \"\")]\n    \t   UNSPEC_CALL_NEEDS_VZEROUPPER)]\n   \"TARGET_VZEROUPPER && !TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_call_pop_vzeroupper (curr_insn, operands[3]); DONE;\"\n+  \"ix86_split_call_vzeroupper (curr_insn, operands[3]); DONE;\"\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"*call_pop_0\"\n@@ -11292,18 +11293,19 @@\n   [(set_attr \"type\" \"call\")])\n \n (define_insn_and_split \"*call_pop_1_vzeroupper\"\n-  [(call (mem:QI (match_operand:SI 0 \"call_insn_operand\" \"lsm\"))\n-\t (match_operand:SI 1 \"\" \"\"))\n-   (set (reg:SI SP_REG)\n-\t(plus:SI (reg:SI SP_REG)\n-\t\t (match_operand:SI 2 \"immediate_operand\" \"i\")))\n+  [(parallel\n+    [(call (mem:QI (match_operand:SI 0 \"call_insn_operand\" \"lsm\"))\n+\t   (match_operand:SI 1 \"\" \"\"))\n+     (set (reg:SI SP_REG)\n+\t  (plus:SI (reg:SI SP_REG)\n+\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")))])\n    (unspec [(match_operand 3 \"const_int_operand\" \"\")]\n    \t   UNSPEC_CALL_NEEDS_VZEROUPPER)]\n   \"TARGET_VZEROUPPER && !TARGET_64BIT && !SIBLING_CALL_P (insn)\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_call_pop_vzeroupper (curr_insn, operands[3]); DONE;\"\n+  \"ix86_split_call_vzeroupper (curr_insn, operands[3]); DONE;\"\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"*call_pop_1\"\n@@ -11321,18 +11323,19 @@\n   [(set_attr \"type\" \"call\")])\n \n (define_insn_and_split \"*sibcall_pop_1_vzeroupper\"\n-  [(call (mem:QI (match_operand:SI 0 \"sibcall_insn_operand\" \"s,U\"))\n-\t (match_operand:SI 1 \"\" \"\"))\n-   (set (reg:SI SP_REG)\n-\t(plus:SI (reg:SI SP_REG)\n-\t\t (match_operand:SI 2 \"immediate_operand\" \"i,i\")))\n+ [(parallel\n+   [(call (mem:QI (match_operand:SI 0 \"sibcall_insn_operand\" \"s,U\"))\n+\t   (match_operand:SI 1 \"\" \"\"))\n+     (set (reg:SI SP_REG)\n+\t  (plus:SI (reg:SI SP_REG)\n+\t\t   (match_operand:SI 2 \"immediate_operand\" \"i,i\")))])\n    (unspec [(match_operand 3 \"const_int_operand\" \"\")]\n    \t   UNSPEC_CALL_NEEDS_VZEROUPPER)]\n   \"TARGET_VZEROUPPER && !TARGET_64BIT && SIBLING_CALL_P (insn)\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_call_pop_vzeroupper (curr_insn, operands[3]); DONE;\"\n+  \"ix86_split_call_vzeroupper (curr_insn, operands[3]); DONE;\"\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"*sibcall_pop_1\"\n@@ -17269,19 +17272,20 @@\n ;; disrupt insn-recog's switch tables.\n \n (define_insn_and_split \"*call_value_pop_0_vzeroupper\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:QI (match_operand:SI 1 \"constant_call_address_operand\" \"\"))\n-\t      (match_operand:SI 2 \"\" \"\")))\n-   (set (reg:SI SP_REG)\n-\t(plus:SI (reg:SI SP_REG)\n-\t\t (match_operand:SI 3 \"immediate_operand\" \"\")))\n+  [(parallel\n+    [(set (match_operand 0 \"\" \"\")\n+\t  (call (mem:QI (match_operand:SI 1 \"constant_call_address_operand\" \"\"))\n+\t\t(match_operand:SI 2 \"\" \"\")))\n+     (set (reg:SI SP_REG)\n+\t  (plus:SI (reg:SI SP_REG)\n+\t\t   (match_operand:SI 3 \"immediate_operand\" \"\")))])\n    (unspec [(match_operand 4 \"const_int_operand\" \"\")]\n    \t   UNSPEC_CALL_NEEDS_VZEROUPPER)]\n   \"TARGET_VZEROUPPER && !TARGET_64BIT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_call_pop_vzeroupper (curr_insn, operands[4]); DONE;\"\n+  \"ix86_split_call_vzeroupper (curr_insn, operands[4]); DONE;\"\n   [(set_attr \"type\" \"callv\")])\n \n (define_insn \"*call_value_pop_0\"\n@@ -17296,19 +17300,20 @@\n   [(set_attr \"type\" \"callv\")])\n \n (define_insn_and_split \"*call_value_pop_1_vzeroupper\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:QI (match_operand:SI 1 \"call_insn_operand\" \"lsm\"))\n-\t      (match_operand:SI 2 \"\" \"\")))\n-   (set (reg:SI SP_REG)\n-\t(plus:SI (reg:SI SP_REG)\n-\t\t (match_operand:SI 3 \"immediate_operand\" \"i\")))\n+  [(parallel\n+    [(set (match_operand 0 \"\" \"\")\n+\t  (call (mem:QI (match_operand:SI 1 \"call_insn_operand\" \"lsm\"))\n+\t\t(match_operand:SI 2 \"\" \"\")))\n+     (set (reg:SI SP_REG)\n+\t  (plus:SI (reg:SI SP_REG)\n+\t\t   (match_operand:SI 3 \"immediate_operand\" \"i\")))])\n    (unspec [(match_operand 4 \"const_int_operand\" \"\")]\n    \t   UNSPEC_CALL_NEEDS_VZEROUPPER)]\n   \"TARGET_VZEROUPPER && !TARGET_64BIT && !SIBLING_CALL_P (insn)\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_call_pop_vzeroupper (curr_insn, operands[4]); DONE;\"\n+  \"ix86_split_call_vzeroupper (curr_insn, operands[4]); DONE;\"\n   [(set_attr \"type\" \"callv\")])\n \n (define_insn \"*call_value_pop_1\"\n@@ -17323,19 +17328,20 @@\n   [(set_attr \"type\" \"callv\")])\n \n (define_insn_and_split \"*sibcall_value_pop_1_vzeroupper\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:QI (match_operand:SI 1 \"sibcall_insn_operand\" \"s,U\"))\n-\t      (match_operand:SI 2 \"\" \"\")))\n-   (set (reg:SI SP_REG)\n-\t(plus:SI (reg:SI SP_REG)\n-\t\t (match_operand:SI 3 \"immediate_operand\" \"i,i\")))\n+ [(parallel\n+   [(set (match_operand 0 \"\" \"\")\n+\t  (call (mem:QI (match_operand:SI 1 \"sibcall_insn_operand\" \"s,U\"))\n+\t\t(match_operand:SI 2 \"\" \"\")))\n+     (set (reg:SI SP_REG)\n+\t  (plus:SI (reg:SI SP_REG)\n+\t\t   (match_operand:SI 3 \"immediate_operand\" \"i,i\")))])\n    (unspec [(match_operand 4 \"const_int_operand\" \"\")]\n    \t   UNSPEC_CALL_NEEDS_VZEROUPPER)]\n   \"TARGET_VZEROUPPER && !TARGET_64BIT && SIBLING_CALL_P (insn)\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_call_pop_vzeroupper (curr_insn, operands[4]); DONE;\"\n+  \"ix86_split_call_vzeroupper (curr_insn, operands[4]); DONE;\"\n   [(set_attr \"type\" \"callv\")])\n \n (define_insn \"*sibcall_value_pop_1\""}]}