{"sha": "0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU1MWU3NjliNTJjYjRjOTEzMzlhMGVlZjVmYTZhNzBjMGVlMmRkZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-11-21T21:19:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-11-21T21:19:34Z"}, "message": "caller-save.c (insert_one_insn): Take into account REG_INC notes for the liveness computation of the new insn.\n\n\t* caller-save.c (insert_one_insn): Take into account REG_INC notes\n\tfor the liveness computation of the new insn.\n\nFrom-SVN: r142099", "tree": {"sha": "a1ca0a56e67cbb52b3a6103157469400ab09d65a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1ca0a56e67cbb52b3a6103157469400ab09d65a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde/comments", "author": null, "committer": null, "parents": [{"sha": "015e1120e863d3273513a5f9db1a85119b4eb701", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015e1120e863d3273513a5f9db1a85119b4eb701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/015e1120e863d3273513a5f9db1a85119b4eb701"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "1f0b3fc24390d195aeee314cbb037f7176299043", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "patch": "@@ -1,3 +1,8 @@\n+2008-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* caller-save.c (insert_one_insn): Take into account REG_INC notes\n+\tfor the liveness computation of the new insn.\n+\n 2008-11-21  DJ Delorie  <dj@redhat.com>\n \n \t* config/stormy16/stormy16.md (movqi_internal, movhi_internal):"}, {"sha": "002f76054a1f90ba6686c4f0eebf7bab32b5118d", "filename": "gcc/caller-save.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=0e51e769b52cb4c91339a0eef5fa6a70c0ee2dde", "patch": "@@ -1216,10 +1216,12 @@ insert_one_insn (struct insn_chain *chain, int before_p, int code, rtx pat)\n       /* ??? It would be nice if we could exclude the already / still saved\n \t registers from the live sets.  */\n       COPY_REG_SET (&new_chain->live_throughout, &chain->live_throughout);\n-      /* Registers that die in CHAIN->INSN still live in the new insn.  */\n+      /* Registers that die in CHAIN->INSN still live in the new insn.\n+\t Likewise for those which are autoincremented or autodecremented.  */\n       for (link = REG_NOTES (chain->insn); link; link = XEXP (link, 1))\n \t{\n-\t  if (REG_NOTE_KIND (link) == REG_DEAD)\n+\t  enum reg_note kind = REG_NOTE_KIND (link);\n+\t  if (kind == REG_DEAD || kind == REG_INC)\n \t    {\n \t      rtx reg = XEXP (link, 0);\n \t      int regno, i;"}]}