{"sha": "1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxMGE4OWM3N2JiZmM1ZGZjN2VjMDNmZWQ3OGQwZjJhMGIzN2IwZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-01-06T15:22:02Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2020-01-06T15:22:02Z"}, "message": "PR c++/79592 adjust testcase\n\nhttps://gcc.gnu.org/ml/gcc-patches/2020-01/msg00127.html\n\t* g++.dg/ubsan/vptr-4.C: Add expected error.\n\nFrom-SVN: r279902", "tree": {"sha": "10789bd2d536c28c0e7d56a9007404985114ec05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10789bd2d536c28c0e7d56a9007404985114ec05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "033381118519f597dfb4f62614ffdec7f7b17390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033381118519f597dfb4f62614ffdec7f7b17390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/033381118519f597dfb4f62614ffdec7f7b17390"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "425c0ce12cb1d6ceb3176b890a412ec5b0bb241f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f", "patch": "@@ -1,3 +1,8 @@\n+2020-01-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/79592\n+\t* g++.dg/ubsan/vptr-4.C: Add expected error.\n+\n 2020-01-06  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/acle/general/cpy_1.c: New test."}, {"sha": "a21d3d60a3a2fb6ab889b8ed3eee2526e72fa12f", "filename": "gcc/testsuite/g++.dg/ubsan/vptr-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-4.C?ref=1810a89c77bbfc5dfc7ec03fed78d0f2a0b37b0f", "patch": "@@ -35,7 +35,7 @@ struct W : V<U> {\n   int b;\n   int g() { return 0; }\n   virtual int v() { return 1; }\n-  constexpr const W<U> *foo() { return (const W<U> *) reinterpret_cast<const V<U> *> (this); }\n+  constexpr const W<U> *foo() { return (const W<U> *) reinterpret_cast<const V<U> *> (this); } // { dg-error \"is not a constant expression\" }\n };\n \n constexpr W<int> w;"}]}