{"sha": "2b603773b47c8ace0651184e754c421021e2728d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI2MDM3NzNiNDdjOGFjZTA2NTExODRlNzU0YzQyMTAyMWUyNzI4ZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-10-30T13:52:39Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-10-30T13:52:39Z"}, "message": "re PR fortran/44917 ([OOP] Detect ambiguous specifics in a generic TBP interface)\n\n2010-10-30  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44917\n\tPR fortran/44926\n\tPR fortran/46196\n\t* interface.c (count_types_test): Symmetrize type check.\n\t(generic_correspondence): Ditto.\n\n2010-10-30  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44917\n\tPR fortran/44926\n\tPR fortran/46196\n\t* gfortran.dg/typebound_generic_10.f03: New.\n\nFrom-SVN: r166089", "tree": {"sha": "fd6a0c69cca694f861b7ee5ae4ffebbd0f3564fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd6a0c69cca694f861b7ee5ae4ffebbd0f3564fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b603773b47c8ace0651184e754c421021e2728d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b603773b47c8ace0651184e754c421021e2728d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b603773b47c8ace0651184e754c421021e2728d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b603773b47c8ace0651184e754c421021e2728d/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3127848955bbdaa2fca1b4984b3d78b42d1a36e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3127848955bbdaa2fca1b4984b3d78b42d1a36e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3127848955bbdaa2fca1b4984b3d78b42d1a36e1"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "0f783b537292e2196b9b364a839284a18e1b057a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b603773b47c8ace0651184e754c421021e2728d", "patch": "@@ -1,3 +1,11 @@\n+2010-10-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44917\n+\tPR fortran/44926\n+\tPR fortran/46196\n+\t* interface.c (count_types_test): Symmetrize type check.\n+\t(generic_correspondence): Ditto.\n+\n 2010-10-27  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46161"}, {"sha": "cf83557be550b2a4fc999cf7c424ae66e72dd716", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=2b603773b47c8ace0651184e754c421021e2728d", "patch": "@@ -872,7 +872,8 @@ count_types_test (gfc_formal_arglist *f1, gfc_formal_arglist *f2)\n       /* Find other nonoptional arguments of the same type/rank.  */\n       for (j = i + 1; j < n1; j++)\n \tif ((arg[j].sym == NULL || !arg[j].sym->attr.optional)\n-\t    && compare_type_rank_if (arg[i].sym, arg[j].sym))\n+\t    && (compare_type_rank_if (arg[i].sym, arg[j].sym)\n+\t        || compare_type_rank_if (arg[j].sym, arg[i].sym)))\n \t  arg[j].flag = k;\n \n       k++;\n@@ -897,7 +898,8 @@ count_types_test (gfc_formal_arglist *f1, gfc_formal_arglist *f2)\n       ac2 = 0;\n \n       for (f = f2; f; f = f->next)\n-\tif (compare_type_rank_if (arg[i].sym, f->sym))\n+\tif (compare_type_rank_if (arg[i].sym, f->sym)\n+\t    || compare_type_rank_if (f->sym, arg[i].sym))\n \t  ac2++;\n \n       if (ac1 > ac2)\n@@ -948,7 +950,8 @@ generic_correspondence (gfc_formal_arglist *f1, gfc_formal_arglist *f2)\n       if (f1->sym->attr.optional)\n \tgoto next;\n \n-      if (f2 != NULL && compare_type_rank (f1->sym, f2->sym))\n+      if (f2 != NULL && (compare_type_rank (f1->sym, f2->sym)\n+\t\t\t || compare_type_rank (f2->sym, f1->sym)))\n \tgoto next;\n \n       /* Now search for a disambiguating keyword argument starting at"}, {"sha": "7fcf5380d2098c9ad95edc44a69c60fec7057b77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b603773b47c8ace0651184e754c421021e2728d", "patch": "@@ -1,3 +1,10 @@\n+2010-10-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44917\n+\tPR fortran/44926\n+\tPR fortran/46196\n+\t* gfortran.dg/typebound_generic_10.f03: New.\n+\n 2010-10-30  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tImplemented Objective-C 2.0 @property, @synthesize and @dynamic."}, {"sha": "590fa5278abf359310828e005a9d3e142df54e61", "filename": "gcc/testsuite/gfortran.dg/typebound_generic_10.f03", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_10.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b603773b47c8ace0651184e754c421021e2728d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_10.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_10.f03?ref=2b603773b47c8ace0651184e754c421021e2728d", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+!\n+! PR 49196: [OOP] gfortran compiles invalid generic TBP: dummy arguments are type compatible\n+!\n+! Contributed by Hans-Werner Boschmann <boschmann@tp1.physik.uni-siegen.de>\n+\n+module generic\n+\n+  type :: a_type\n+   contains\n+     procedure :: a_subroutine\n+  end type a_type\n+\n+  type,extends(a_type) :: b_type\n+   contains\n+     procedure :: b_subroutine\n+     generic :: g_sub => a_subroutine,b_subroutine  ! { dg-error \"are ambiguous\" }\n+  end type b_type\n+\n+contains\n+\n+  subroutine a_subroutine(this)\n+    class(a_type)::this\n+  end subroutine a_subroutine\n+\n+  subroutine b_subroutine(this)\n+    class(b_type)::this\n+  end subroutine b_subroutine\n+\n+end module generic \n+\n+! { dg-final { cleanup-modules \"generic\" } }"}]}