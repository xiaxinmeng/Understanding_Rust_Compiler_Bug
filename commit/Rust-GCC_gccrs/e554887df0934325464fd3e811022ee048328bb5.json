{"sha": "e554887df0934325464fd3e811022ee048328bb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU1NDg4N2RmMDkzNDMyNTQ2NGZkM2U4MTEwMjJlZTA0ODMyOGJiNQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-13T17:32:33Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-13T17:35:03Z"}, "message": "Fix compilation error in ILP32.\n\ngcc/testsuite/ChangeLog:\n\t* g++.dg/pr100574.C: Use size_t as operator new argument type.", "tree": {"sha": "14c605873c6c1fa7ebbacaba67d4aef88aef2dca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14c605873c6c1fa7ebbacaba67d4aef88aef2dca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e554887df0934325464fd3e811022ee048328bb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e554887df0934325464fd3e811022ee048328bb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e554887df0934325464fd3e811022ee048328bb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e554887df0934325464fd3e811022ee048328bb5/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9feb5822b713c6a12cb290ba0406ba2362d4c09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9feb5822b713c6a12cb290ba0406ba2362d4c09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9feb5822b713c6a12cb290ba0406ba2362d4c09c"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "42ba0404a28e94a2d98b499a88801eeddd8309df", "filename": "gcc/testsuite/g++.dg/pr100574.C", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e554887df0934325464fd3e811022ee048328bb5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr100574.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e554887df0934325464fd3e811022ee048328bb5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr100574.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr100574.C?ref=e554887df0934325464fd3e811022ee048328bb5", "patch": "@@ -0,0 +1,64 @@\n+/* PR middle-end/100574 - ICE: in size_remaining, at builtins.c:413 with\n+   -O3 -ftracer -fno-tree-dominator-opts -fno-tree-fre\n+   { dg-do compile { target c++11 } }\n+   { dg-options \"-O3 -ftracer -fno-tree-dominator-opts -fno-tree-fre\" } */\n+\n+void *operator new (__SIZE_TYPE__, void *__p) { return __p; }\n+\n+template <typename> struct allocator_traits;\n+template <typename> class allocator {};\n+template <typename _Tp> struct allocator_traits<allocator<_Tp> >\n+{\n+  using allocator_type = allocator<_Tp>;\n+  using pointer = _Tp *;\n+  using size_type = long;\n+  template <typename _Up> using rebind_alloc = allocator<_Up>;\n+  static pointer allocate(allocator_type, size_type);\n+  template <typename _Up> static void construct(_Up __p) { new (__p) _Up(); }\n+};\n+\n+struct __alloc_traits : allocator_traits<allocator<char>> {\n+  struct rebind {\n+    typedef rebind_alloc<char> other;\n+  };\n+};\n+\n+struct _Vector_base {\n+  struct : __alloc_traits::rebind::other {\n+  } _M_impl;\n+  long _M_allocate___n;\n+};\n+\n+template <typename, typename = char> class vector : _Vector_base {\n+  long max_size();\n+public:\n+  void push_back() { _M_realloc_insert(); }\n+  template <typename...> void _M_realloc_insert();\n+};\n+\n+template <typename _Tp, typename _Alloc>\n+template <typename...>\n+void vector<_Tp, _Alloc>::_M_realloc_insert() {\n+  __alloc_traits::pointer __trans_tmp_5;\n+  long __len(__len || max_size()), __elems_before;\n+  __trans_tmp_5 = _M_allocate___n\n+    ? __alloc_traits::allocate(_M_impl, _M_allocate___n)\n+    : __alloc_traits::pointer();\n+  __alloc_traits::construct(__trans_tmp_5 + __elems_before);\n+}\n+\n+enum { MIDIST_PITCHBEND };\n+struct DataBlock {\n+  vector<char> data;\n+};\n+\n+char ReadTrackChunk_status;\n+\n+void ReadTrackChunk()\n+{\n+  DataBlock block;\n+  while (!0)\n+    switch (ReadTrackChunk_status)\n+    case MIDIST_PITCHBEND:\n+      block.data.push_back();\n+}"}]}