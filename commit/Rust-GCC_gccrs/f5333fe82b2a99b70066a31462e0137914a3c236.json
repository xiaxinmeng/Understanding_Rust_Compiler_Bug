{"sha": "f5333fe82b2a99b70066a31462e0137914a3c236", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUzMzNmZTgyYjJhOTliNzAwNjZhMzE0NjJlMDEzNzkxNGEzYzIzNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-12-23T16:12:07Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-12-23T16:12:07Z"}, "message": "ipa.c (cgraph_remove_unreachable_nodes): Update former_clone_of even when not checking.\n\n2010-12-23  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa.c (cgraph_remove_unreachable_nodes): Update former_clone_of even\n\twhen not checking.\n\nFrom-SVN: r168209", "tree": {"sha": "0a702e7ca411eeea55aa143d21a9567b5fc9d89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a702e7ca411eeea55aa143d21a9567b5fc9d89d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5333fe82b2a99b70066a31462e0137914a3c236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5333fe82b2a99b70066a31462e0137914a3c236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5333fe82b2a99b70066a31462e0137914a3c236", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5333fe82b2a99b70066a31462e0137914a3c236/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "539b4d110644abb451dabd419f271ba8c40e34fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539b4d110644abb451dabd419f271ba8c40e34fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/539b4d110644abb451dabd419f271ba8c40e34fb"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "fa6c1a82808511ed243bf258ffafc3ef93d19f8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5333fe82b2a99b70066a31462e0137914a3c236/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5333fe82b2a99b70066a31462e0137914a3c236/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5333fe82b2a99b70066a31462e0137914a3c236", "patch": "@@ -1,3 +1,8 @@\n+2010-12-23  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa.c (cgraph_remove_unreachable_nodes): Update former_clone_of even\n+\twhen not checking.\n+\n 2010-12-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac (gcc_cv_ld_eh_frame_hdr): Only check GNU ld for"}, {"sha": "cf0a5b3ed7db1ba1d40df42fff04f42b696ca77e", "filename": "gcc/ipa.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5333fe82b2a99b70066a31462e0137914a3c236/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5333fe82b2a99b70066a31462e0137914a3c236/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=f5333fe82b2a99b70066a31462e0137914a3c236", "patch": "@@ -428,10 +428,8 @@ cgraph_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n \t\t\tnode->clone_of->clones = node->next_sibling_clone;\n \t\t      if (node->next_sibling_clone)\n \t\t\tnode->next_sibling_clone->prev_sibling_clone = node->prev_sibling_clone;\n-#ifdef ENABLE_CHECKING\n \t\t      if (node->clone_of)\n \t\t\tnode->former_clone_of = node->clone_of->decl;\n-#endif\n \t\t      node->clone_of = NULL;\n \t\t      node->next_sibling_clone = NULL;\n \t\t      node->prev_sibling_clone = NULL;"}]}