{"sha": "0b8a1e58d95a80ce908f20a5337080106dd74385", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI4YTFlNThkOTVhODBjZTkwOGYyMGE1MzM3MDgwMTA2ZGQ3NDM4NQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-06-18T20:35:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-06-18T20:35:56Z"}, "message": "init.c (expand_aggr_vbase_init): Add flag parameter.\n\n\t* init.c (expand_aggr_vbase_init): Add flag parameter.\n\t(build_partial_cleanup_for): Remove, inlining into ..\n\t(expand_cleanup_for_base): ... here.  Take flag parameter.\n\t(emit_base_init): Pass the in_chrg parameter to\n\temit_aggr_vbase_init.\n\t(emit_aggr_vbase_init): Pass it to expand_cleanup_for_base.\n\nFrom-SVN: r27600", "tree": {"sha": "7461d727c81de1730f1caff29fec1d7653a608db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7461d727c81de1730f1caff29fec1d7653a608db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b8a1e58d95a80ce908f20a5337080106dd74385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8a1e58d95a80ce908f20a5337080106dd74385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8a1e58d95a80ce908f20a5337080106dd74385", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8a1e58d95a80ce908f20a5337080106dd74385/comments", "author": null, "committer": null, "parents": [{"sha": "34cea4e94fd267c3545d176443ad6718d5fac4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34cea4e94fd267c3545d176443ad6718d5fac4d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34cea4e94fd267c3545d176443ad6718d5fac4d8"}], "stats": {"total": 86, "additions": 65, "deletions": 21}, "files": [{"sha": "b671eb324adbf923ffc514d5ec16e287a4895c96", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8a1e58d95a80ce908f20a5337080106dd74385/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8a1e58d95a80ce908f20a5337080106dd74385/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0b8a1e58d95a80ce908f20a5337080106dd74385", "patch": "@@ -1,3 +1,12 @@\n+1999-06-18  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* init.c (expand_aggr_vbase_init): Add flag parameter.\n+\t(build_partial_cleanup_for): Remove, inlining into ..\n+\t(expand_cleanup_for_base): ... here.  Take flag parameter.\n+\t(emit_base_init): Pass the in_chrg parameter to\n+\temit_aggr_vbase_init. \n+\t(emit_aggr_vbase_init): Pass it to expand_cleanup_for_base.\n+\t\n 1999-06-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl2.c (import_export_decl): Use same_type_p, rather than"}, {"sha": "db95fb5dba533bf079e7735f7bfa6c9e2ece93dd", "filename": "gcc/cp/init.c", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8a1e58d95a80ce908f20a5337080106dd74385/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8a1e58d95a80ce908f20a5337080106dd74385/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=0b8a1e58d95a80ce908f20a5337080106dd74385", "patch": "@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n tree current_base_init_list, current_member_init_list;\n \n static void expand_aggr_vbase_init_1 PROTO((tree, tree, tree, tree));\n-static void expand_aggr_vbase_init PROTO((tree, tree, tree, tree));\n+static void expand_aggr_vbase_init PROTO((tree, tree, tree, tree, tree));\n static void expand_aggr_init_1 PROTO((tree, tree, tree, tree, int));\n static void expand_default_init PROTO((tree, tree, tree, tree, int));\n static tree build_vec_delete_1 PROTO((tree, tree, tree, tree, tree,\n@@ -55,12 +55,11 @@ static tree build_builtin_delete_call PROTO((tree));\n static int member_init_ok_or_else PROTO((tree, tree, const char *));\n static void expand_virtual_init PROTO((tree, tree));\n static tree sort_member_init PROTO((tree));\n-static tree build_partial_cleanup_for PROTO((tree));\n static tree initializing_context PROTO((tree));\n static void expand_vec_init_try_block PROTO((tree));\n static void expand_vec_init_catch_clause PROTO((tree, tree, tree, tree));\n static tree build_java_class_ref PROTO((tree));\n-static void expand_cleanup_for_base PROTO((tree));\n+static void expand_cleanup_for_base PROTO((tree, tree));\n \n /* Cache the identifier nodes for the magic field of a new cookie.  */\n static tree nc_nelts_field_id;\n@@ -483,17 +482,6 @@ sort_base_init (t, rbase_ptr, vbase_ptr)\n   *vbase_ptr = vbases;\n }\n \n-/* Perform partial cleanups for a base for exception handling.  */\n-\n-static tree\n-build_partial_cleanup_for (binfo)\n-     tree binfo;\n-{\n-  return build_scoped_method_call\n-    (current_class_ref, binfo, dtor_identifier,\n-     build_expr_list (NULL_TREE, integer_zero_node));\n-}\n-\n /* Perform whatever initializations have yet to be done on the base\n    class of the class variable.  These actions are in the global\n    variable CURRENT_BASE_INIT_LIST.  Such an action could be\n@@ -559,7 +547,7 @@ emit_base_init (t, immediately)\n \n       expand_start_cond (first_arg, 0);\n       expand_aggr_vbase_init (t_binfo, current_class_ref, current_class_ptr,\n-\t\t\t      vbase_init_list);\n+\t\t\t      vbase_init_list, first_arg);\n       expand_end_cond ();\n     }\n \n@@ -598,7 +586,7 @@ emit_base_init (t, immediately)\n \t  free_temp_slots ();\n \t}\n \n-      expand_cleanup_for_base (base_binfo);\n+      expand_cleanup_for_base (base_binfo, NULL_TREE);\n       rbase_init_list = TREE_CHAIN (rbase_init_list);\n     }\n \n@@ -757,11 +745,14 @@ expand_virtual_init (binfo, decl)\n \n /* If an exception is thrown in a constructor, those base classes already\n    constructed must be destroyed.  This function creates the cleanup\n-   for BINFO, which has just been constructed.  */\n+   for BINFO, which has just been constructed.  If FLAG is non-NULL,\n+   it is a DECL which is non-zero when this base needs to be\n+   destroyed.  */\n \n static void\n-expand_cleanup_for_base (binfo)\n+expand_cleanup_for_base (binfo, flag)\n      tree binfo;\n+     tree flag;\n {\n   tree expr;\n \n@@ -771,7 +762,16 @@ expand_cleanup_for_base (binfo)\n   /* All cleanups must be on the function_obstack.  */\n   push_obstacks_nochange ();\n   resume_temporary_allocation ();\n-  expr = build_partial_cleanup_for (binfo);\n+\n+  /* Call the destructor.  */\n+  expr = (build_scoped_method_call\n+\t  (current_class_ref, binfo, dtor_identifier,\n+\t   build_expr_list (NULL_TREE, integer_zero_node)));\n+  if (flag)\n+    expr = fold (build (COND_EXPR, void_type_node,\n+\t\t\ttruthvalue_conversion (flag),\n+\t\t\texpr, integer_zero_node));\n+\n   pop_obstacks ();\n   add_partial_entry (expr);\n }\n@@ -804,11 +804,12 @@ expand_aggr_vbase_init_1 (binfo, exp, addr, init_list)\n    INIT_LIST is list of initialization for constructor to perform.  */\n \n static void\n-expand_aggr_vbase_init (binfo, exp, addr, init_list)\n+expand_aggr_vbase_init (binfo, exp, addr, init_list, flag)\n      tree binfo;\n      tree exp;\n      tree addr;\n      tree init_list;\n+     tree flag;\n {\n   tree type = BINFO_TYPE (binfo);\n \n@@ -827,7 +828,7 @@ expand_aggr_vbase_init (binfo, exp, addr, init_list)\n \t  expand_aggr_vbase_init_1 (vbases, exp,\n \t\t\t\t    TREE_OPERAND (TREE_VALUE (tmp), 0),\n \t\t\t\t    init_list);\n-\t  expand_cleanup_for_base (vbases);\n+\t  expand_cleanup_for_base (vbases, flag);\n \t}\n     }\n }"}, {"sha": "abf722370d6c4cca14b3c1c211ece8539a8d332c", "filename": "gcc/testsuite/g++.old-deja/g++.eh/vbase2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8a1e58d95a80ce908f20a5337080106dd74385/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fvbase2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8a1e58d95a80ce908f20a5337080106dd74385/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fvbase2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fvbase2.C?ref=0b8a1e58d95a80ce908f20a5337080106dd74385", "patch": "@@ -0,0 +1,34 @@\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+int i;\n+\n+struct A\n+{\n+  A () { i++; }\n+  ~A () { i--; }\n+};\n+\n+struct B : public virtual A\n+{\n+  B () { throw 1; }\n+};\n+\n+struct D: public B, virtual public A\n+{\n+};\n+\n+void f()\n+{\n+  D d;\n+}\n+\n+int main ()\n+{\n+  try {\n+    f();\n+  } catch (int) {\n+  }\n+\n+  return i;\n+}\n+"}]}