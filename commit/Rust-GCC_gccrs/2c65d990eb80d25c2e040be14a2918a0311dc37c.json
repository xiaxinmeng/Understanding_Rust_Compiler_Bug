{"sha": "2c65d990eb80d25c2e040be14a2918a0311dc37c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM2NWQ5OTBlYjgwZDI1YzJlMDQwYmUxNGEyOTE4YTAzMTFkYzM3Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-01-18T12:51:28Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-01-18T12:51:28Z"}, "message": "re PR c++/79091 (ICE in write_unnamed_type)\n\n\tPR c++/79091\n\t* mangle.c (write_exception_spec): Check nothrow explicitly.\n\t(write_encoding): Don't increment processing_template_decl around\n\tencoding.\n\n\tPR c++/79091\n\t* g++.dg/pr79091.C: New.\n\nFrom-SVN: r244575", "tree": {"sha": "bbf98d9a04aae9c4ebfded82b2bff8a61db8437b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbf98d9a04aae9c4ebfded82b2bff8a61db8437b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c65d990eb80d25c2e040be14a2918a0311dc37c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c65d990eb80d25c2e040be14a2918a0311dc37c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c65d990eb80d25c2e040be14a2918a0311dc37c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c65d990eb80d25c2e040be14a2918a0311dc37c/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "928bff1905fa3d690048a3ab104bcf5d6a57176c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928bff1905fa3d690048a3ab104bcf5d6a57176c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/928bff1905fa3d690048a3ab104bcf5d6a57176c"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "7733be7cc523d6d85ecbb482c3f78936480b36a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2c65d990eb80d25c2e040be14a2918a0311dc37c", "patch": "@@ -1,3 +1,10 @@\n+2017-01-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/79091\n+\t* mangle.c (write_exception_spec): Check nothrow explicitly.\n+\t(write_encoding): Don't increment processing_template_decl around\n+\tencoding.\n+\n 2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR c++/70182"}, {"sha": "033660f00917e938a91c423382bbaad9c5ebd0a1", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=2c65d990eb80d25c2e040be14a2918a0311dc37c", "patch": "@@ -366,17 +366,19 @@ write_exception_spec (tree spec)\n       return;\n     }\n \n-  if (nothrow_spec_p (spec))\n+  if (spec == noexcept_true_spec || spec == empty_except_spec)\n     write_string (\"Do\");\n-  else if (TREE_PURPOSE (spec))\n+  else if (tree expr = TREE_PURPOSE (spec))\n     {\n-      gcc_assert (uses_template_parms (TREE_PURPOSE (spec)));\n+      /* noexcept (expr)  */\n+      gcc_assert (uses_template_parms (expr));\n       write_string (\"DO\");\n-      write_expression (TREE_PURPOSE (spec));\n+      write_expression (expr);\n       write_char ('E');\n     }\n   else\n     {\n+      /* throw (type-list) */\n       write_string (\"Dw\");\n       for (tree t = spec; t; t = TREE_CHAIN (t))\n \twrite_type (TREE_VALUE (t));\n@@ -829,7 +831,6 @@ write_encoding (const tree decl)\n \n       if (tmpl)\n \t{\n-\t  ++processing_template_decl;\n \t  fn_type = get_mostly_instantiated_function_type (decl);\n \t  /* FN_TYPE will not have parameter types for in-charge or\n \t     VTT parameters.  Therefore, we pass NULL_TREE to\n@@ -846,9 +847,6 @@ write_encoding (const tree decl)\n       write_bare_function_type (fn_type,\n \t\t\t\tmangle_return_type_p (decl),\n \t\t\t\td);\n-\n-      if (tmpl)\n-\t--processing_template_decl;\n     }\n }\n "}, {"sha": "6822d3dcd1eb4a96e10f0c1a5cf2ab61ec704db7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c65d990eb80d25c2e040be14a2918a0311dc37c", "patch": "@@ -1,3 +1,8 @@\n+2017-01-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/79091\n+\t* g++.dg/pr79091.C: New.\n+\n 2017-01-17  Joe Seymour  <joe.s@somniumtech.com>\n \n \t* gcc.target/msp430/mul_f5_muldef.c: New test."}, {"sha": "ad8cf5a43e5a32eb648b96090a6859b531620e04", "filename": "gcc/testsuite/g++.dg/pr79091.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr79091.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c65d990eb80d25c2e040be14a2918a0311dc37c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr79091.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr79091.C?ref=2c65d990eb80d25c2e040be14a2918a0311dc37c", "patch": "@@ -0,0 +1,25 @@\n+// PR 79091 ICE mangling an unnamed enum in a tempate instantiation.\n+\n+enum  {\n+  One = 1\n+};\n+\n+template<int Options>\n+class Matrix {};\n+\n+template<int Dim>\n+Matrix<Dim ? One : 0> *Bar ()\n+{\n+  return 0;\n+}\n+\n+template<int Opt> \n+Matrix<Opt> *Baz ()\n+{\n+  return 0;\n+}\n+\n+bool Foo ()\n+{\n+  return Baz<1> () == Bar<1> ();\n+}"}]}