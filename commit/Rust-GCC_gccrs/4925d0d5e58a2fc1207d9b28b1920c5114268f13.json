{"sha": "4925d0d5e58a2fc1207d9b28b1920c5114268f13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkyNWQwZDVlNThhMmZjMTIwN2Q5YjI4YjE5MjBjNTExNDI2OGYxMw==", "commit": {"author": {"name": "Wei Guozhi", "email": "carrot@google.com", "date": "2011-04-06T02:24:16Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2011-04-06T02:24:16Z"}, "message": "arm.md (arm_cmpsi_insn): Compute attr \"length\".\n\n\t* config/arm/arm.md (arm_cmpsi_insn): Compute attr \"length\".\n\t(arm_cond_branch): Likewise.\n\t(arm_cond_branch_reversed): Likewise.\n\t(arm_jump): Likewise.\n\t(push_multi): Likewise.\n\t* config/arm/constraints.md (Py): New constraint.\n\nFrom-SVN: r172017", "tree": {"sha": "63884dcee64446578c2c3d17db2e3a2c6d21b33d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63884dcee64446578c2c3d17db2e3a2c6d21b33d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4925d0d5e58a2fc1207d9b28b1920c5114268f13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4925d0d5e58a2fc1207d9b28b1920c5114268f13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4925d0d5e58a2fc1207d9b28b1920c5114268f13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4925d0d5e58a2fc1207d9b28b1920c5114268f13/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f55dfa2fe141d4ce30b313d652fe5b1cbcd7668a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55dfa2fe141d4ce30b313d652fe5b1cbcd7668a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f55dfa2fe141d4ce30b313d652fe5b1cbcd7668a"}], "stats": {"total": 78, "additions": 70, "deletions": 8}, "files": [{"sha": "33a774c3de8abf0973c78521aded9020b5d2c875", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4925d0d5e58a2fc1207d9b28b1920c5114268f13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4925d0d5e58a2fc1207d9b28b1920c5114268f13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4925d0d5e58a2fc1207d9b28b1920c5114268f13", "patch": "@@ -1,3 +1,13 @@\n+2011-04-06  Wei Guozhi  <carrot@google.com>\n+\n+\tPR target/47855\n+\t* config/arm/arm.md (arm_cmpsi_insn): Compute attr \"length\".\n+\t(arm_cond_branch): Likewise.\n+\t(arm_cond_branch_reversed): Likewise.\n+\t(arm_jump): Likewise.\n+\t(push_multi): Likewise.\n+\t* config/arm/constraints.md (Py): New constraint.\n+\n 2011-04-05  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR bootstrap/48471"}, {"sha": "3a5bc42a2a8fc769ba96a5f222c6b774637beb99", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 54, "deletions": 7, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4925d0d5e58a2fc1207d9b28b1920c5114268f13/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4925d0d5e58a2fc1207d9b28b1920c5114268f13/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=4925d0d5e58a2fc1207d9b28b1920c5114268f13", "patch": "@@ -7115,13 +7115,17 @@\n \n (define_insn \"*arm_cmpsi_insn\"\n   [(set (reg:CC CC_REGNUM)\n-\t(compare:CC (match_operand:SI 0 \"s_register_operand\" \"r,r\")\n-\t\t    (match_operand:SI 1 \"arm_add_operand\"    \"rI,L\")))]\n+\t(compare:CC (match_operand:SI 0 \"s_register_operand\" \"l,r,r,r\")\n+\t\t    (match_operand:SI 1 \"arm_add_operand\"    \"Py,r,rI,L\")))]\n   \"TARGET_32BIT\"\n   \"@\n+   cmp%?\\\\t%0, %1\n+   cmp%?\\\\t%0, %1\n    cmp%?\\\\t%0, %1\n    cmn%?\\\\t%0, #%n1\"\n-  [(set_attr \"conds\" \"set\")]\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"arch\" \"t2,t2,any,any\")\n+   (set_attr \"length\" \"2,2,4,4\")]\n )\n \n (define_insn \"*cmpsi_shiftsi\"\n@@ -7292,7 +7296,14 @@\n   return \\\"b%d1\\\\t%l0\\\";\n   \"\n   [(set_attr \"conds\" \"use\")\n-   (set_attr \"type\" \"branch\")]\n+   (set_attr \"type\" \"branch\")\n+   (set (attr \"length\")\n+\t(if_then_else\n+\t   (and (ne (symbol_ref \"TARGET_THUMB2\") (const_int 0))\n+\t\t(and (ge (minus (match_dup 0) (pc)) (const_int -250))\n+\t\t     (le (minus (match_dup 0) (pc)) (const_int 256))))\n+\t   (const_int 2)\n+\t   (const_int 4)))]\n )\n \n (define_insn \"*arm_cond_branch_reversed\"\n@@ -7311,7 +7322,14 @@\n   return \\\"b%D1\\\\t%l0\\\";\n   \"\n   [(set_attr \"conds\" \"use\")\n-   (set_attr \"type\" \"branch\")]\n+   (set_attr \"type\" \"branch\")\n+   (set (attr \"length\")\n+\t(if_then_else\n+\t   (and (ne (symbol_ref \"TARGET_THUMB2\") (const_int 0))\n+\t\t(and (ge (minus (match_dup 0) (pc)) (const_int -250))\n+\t\t     (le (minus (match_dup 0) (pc)) (const_int 256))))\n+\t   (const_int 2)\n+\t   (const_int 4)))]\n )\n \n \f\n@@ -7763,7 +7781,14 @@\n     return \\\"b%?\\\\t%l0\\\";\n   }\n   \"\n-  [(set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"predicable\" \"yes\")\n+   (set (attr \"length\")\n+\t(if_then_else\n+\t   (and (ne (symbol_ref \"TARGET_THUMB2\") (const_int 0))\n+\t\t(and (ge (minus (match_dup 0) (pc)) (const_int -2044))\n+\t\t     (le (minus (match_dup 0) (pc)) (const_int 2048))))\n+\t   (const_int 2)\n+\t   (const_int 4)))]\n )\n \n (define_insn \"*thumb_jump\"\n@@ -10263,7 +10288,29 @@\n \n     return \\\"\\\";\n   }\"\n-  [(set_attr \"type\" \"store4\")]\n+  [(set_attr \"type\" \"store4\")\n+   (set (attr \"length\")\n+\t(if_then_else\n+\t   (and (ne (symbol_ref \"TARGET_THUMB2\") (const_int 0))\n+\t\t(ne (symbol_ref \"{\n+\t\t    /* Check if there are any high register (except lr)\n+\t\t       references in the list. KEEP the following iteration\n+\t\t       in sync with the template above.  */\n+\t\t    int i, regno, hi_reg;\n+\t\t    int num_saves = XVECLEN (operands[2], 0);\n+\t\t    regno = REGNO (operands[1]);\n+\t\t    hi_reg = (REGNO_REG_CLASS (regno) == HI_REGS)\n+\t\t\t     && (regno != LR_REGNUM);\n+\t\t    for (i = 1; i < num_saves && !hi_reg; i++)\n+\t\t      {\n+\t\t\tregno = REGNO (XEXP (XVECEXP (operands[2], 0, i), 0));\n+\t\t\thi_reg |= (REGNO_REG_CLASS (regno) == HI_REGS)\n+\t\t\t\t  && (regno != LR_REGNUM);\n+\t\t      }\n+\t\t    !hi_reg;    }\")\n+\t\t  (const_int 0)))\n+\t   (const_int 2)\n+\t   (const_int 4)))]\n )\n \n (define_insn \"stack_tie\""}, {"sha": "378415b6abb5a0216edf7fb3a07b8891fa969e37", "filename": "gcc/config/arm/constraints.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4925d0d5e58a2fc1207d9b28b1920c5114268f13/gcc%2Fconfig%2Farm%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4925d0d5e58a2fc1207d9b28b1920c5114268f13/gcc%2Fconfig%2Farm%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconstraints.md?ref=4925d0d5e58a2fc1207d9b28b1920c5114268f13", "patch": "@@ -31,7 +31,7 @@\n ;; The following multi-letter normal constraints have been used:\n ;; in ARM/Thumb-2 state: Da, Db, Dc, Dn, Dl, DL, Dv, Dy, Di, Dz\n ;; in Thumb-1 state: Pa, Pb, Pc, Pd\n-;; in Thumb-2 state: Ps, Pt, Pu, Pv, Pw, Px\n+;; in Thumb-2 state: Ps, Pt, Pu, Pv, Pw, Px, Py\n \n ;; The following memory constraints have been used:\n ;; in ARM/Thumb-2 state: Q, Ut, Uv, Uy, Un, Um, Us\n@@ -189,6 +189,11 @@\n   (and (match_code \"const_int\")\n        (match_test \"TARGET_THUMB2 && ival >= -7 && ival <= -1\")))\n \n+(define_constraint \"Py\"\n+  \"@internal In Thumb-2 state a constant in the range 0 to 255\"\n+  (and (match_code \"const_int\")\n+       (match_test \"TARGET_THUMB2 && ival >= 0 && ival <= 255\")))\n+\n (define_constraint \"G\"\n  \"In ARM/Thumb-2 state a valid FPA immediate constant.\"\n  (and (match_code \"const_double\")"}]}