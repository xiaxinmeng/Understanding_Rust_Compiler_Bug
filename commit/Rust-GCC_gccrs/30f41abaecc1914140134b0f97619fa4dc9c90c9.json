{"sha": "30f41abaecc1914140134b0f97619fa4dc9c90c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmNDFhYmFlY2MxOTE0MTQwMTM0YjBmOTc2MTlmYTRkYzljOTBjOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-10-31T18:00:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:00:56Z"}, "message": "g-speche.ads, [...]: Add special case to recognize misspelling initial letter o as a zero.\n\n2006-10-31  Robert Dewar  <dewar@adacore.com>\n\n\t* g-speche.ads, g-speche.adb: Add special case to recognize misspelling\n\tinitial letter o as a zero.\n\nFrom-SVN: r118281", "tree": {"sha": "2bda120121e456fc4a5dc9c90794258cb7d0c74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bda120121e456fc4a5dc9c90794258cb7d0c74b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f41abaecc1914140134b0f97619fa4dc9c90c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f41abaecc1914140134b0f97619fa4dc9c90c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f41abaecc1914140134b0f97619fa4dc9c90c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f41abaecc1914140134b0f97619fa4dc9c90c9/comments", "author": null, "committer": null, "parents": [{"sha": "ad98c85e5b31557702533ffe9fe8109ba642705c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad98c85e5b31557702533ffe9fe8109ba642705c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad98c85e5b31557702533ffe9fe8109ba642705c"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "9d00bc5e0991ac1f6ebac5b080c1c8a8352bdef2", "filename": "gcc/ada/g-speche.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f41abaecc1914140134b0f97619fa4dc9c90c9/gcc%2Fada%2Fg-speche.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f41abaecc1914140134b0f97619fa4dc9c90c9/gcc%2Fada%2Fg-speche.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-speche.adb?ref=30f41abaecc1914140134b0f97619fa4dc9c90c9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005 AdaCore                      --\n+--                     Copyright (C) 1998-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,8 +39,7 @@ package body GNAT.Spelling_Checker is\n \n    function Is_Bad_Spelling_Of\n      (Found  : String;\n-      Expect : String)\n-      return   Boolean\n+      Expect : String) return Boolean\n    is\n       FN : constant Natural := Found'Length;\n       FF : constant Natural := Found'First;\n@@ -60,9 +59,14 @@ package body GNAT.Spelling_Checker is\n       elsif EN = 0 then\n          return False;\n \n-      --  If first character does not match, then definitely not misspelling\n+         --  If first character does not match, then we consider that this is\n+         --  definitely not a misspelling. An exception is when we expect a\n+         --  letter O and found a zero.\n \n-      elsif Found (FF) /= Expect (EF) then\n+      elsif Found (FF) /= Expect (EF)\n+        and then (Found (FF) /= '0'\n+                    or else (Expect (EF) /= 'o' and then Expect (EF) /= 'O'))\n+      then\n          return False;\n \n       --  Not a bad spelling if both strings are 1-2 characters long\n@@ -149,7 +153,6 @@ package body GNAT.Spelling_Checker is\n       else\n          return False;\n       end if;\n-\n    end Is_Bad_Spelling_Of;\n \n end GNAT.Spelling_Checker;"}, {"sha": "ab3daeaecd5669b46fb617132db8c7208a28166c", "filename": "gcc/ada/g-speche.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f41abaecc1914140134b0f97619fa4dc9c90c9/gcc%2Fada%2Fg-speche.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f41abaecc1914140134b0f97619fa4dc9c90c9/gcc%2Fada%2Fg-speche.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-speche.ads?ref=30f41abaecc1914140134b0f97619fa4dc9c90c9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005 AdaCore                      --\n+--                     Copyright (C) 1998-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,8 +40,7 @@ package GNAT.Spelling_Checker is\n \n    function Is_Bad_Spelling_Of\n      (Found  : String;\n-      Expect : String)\n-      return   Boolean;\n+      Expect : String) return Boolean;\n    --  Determines if the string Found is a plausible misspelling of the\n    --  string Expect. Returns True for an exact match or a probably\n    --  misspelling, False if no near match is detected. This routine"}]}