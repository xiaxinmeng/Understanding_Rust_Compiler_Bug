{"sha": "a78eb72ac066743c8c11dbc1032a1909963719a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4ZWI3MmFjMDY2NzQzYzhjMTFkYmMxMDMyYTE5MDk5NjM3MTlhMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-09-17T13:57:40Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-09-17T13:57:40Z"}, "message": "compiler: Issue channel type errors earlier.\n\n    \n    When asking for the type of a receive operation, the compiler would\n    return an error type if the receive operator was being used on an\n    invalid channel type and the error would be reported in a later pass.\n    There are several ways that the type checking pass would not see\n    the original node and fail to issue the error.  This patch modifies\n    receive operations to give an error immediately once it is known that\n    the channel type is invalid.\n    \n    Fixes golang/go#12323.\n    \n    Reviewed-on: https://go-review.googlesource.com/13987\n\nFrom-SVN: r227863", "tree": {"sha": "9470bd83d6c0817a3a3dcf333b3163f36fc50d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9470bd83d6c0817a3a3dcf333b3163f36fc50d6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a78eb72ac066743c8c11dbc1032a1909963719a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78eb72ac066743c8c11dbc1032a1909963719a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a78eb72ac066743c8c11dbc1032a1909963719a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78eb72ac066743c8c11dbc1032a1909963719a3/comments", "author": null, "committer": null, "parents": [{"sha": "4fb94ef9aa797bb3ccd23157aa8fd66ff8e80bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb94ef9aa797bb3ccd23157aa8fd66ff8e80bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb94ef9aa797bb3ccd23157aa8fd66ff8e80bc0"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "f21c43a8c6d8ba7d8adf08d01d862dca57c16964", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a78eb72ac066743c8c11dbc1032a1909963719a3/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a78eb72ac066743c8c11dbc1032a1909963719a3/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=a78eb72ac066743c8c11dbc1032a1909963719a3", "patch": "@@ -1,4 +1,4 @@\n-1cb26dc898bda1e85f4dd2ee204adbce792e4813\n+e069d4417a692c1261df99fe3323277e1a0193d2\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "7ad271f109b9eef26f89a7421714cce127446542", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a78eb72ac066743c8c11dbc1032a1909963719a3/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a78eb72ac066743c8c11dbc1032a1909963719a3/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=a78eb72ac066743c8c11dbc1032a1909963719a3", "patch": "@@ -13502,9 +13502,14 @@ Expression::make_heap_expression(Expression* expr, Location location)\n Type*\n Receive_expression::do_type()\n {\n+  if (this->is_error_expression())\n+    return Type::make_error_type();\n   Channel_type* channel_type = this->channel_->type()->channel_type();\n   if (channel_type == NULL)\n-    return Type::make_error_type();\n+    {\n+      this->report_error(_(\"expected channel\"));\n+      return Type::make_error_type();\n+    }\n   return channel_type->element_type();\n }\n \n@@ -13516,6 +13521,7 @@ Receive_expression::do_check_types(Gogo*)\n   Type* type = this->channel_->type();\n   if (type->is_error())\n     {\n+      go_assert(saw_errors());\n       this->set_is_error();\n       return;\n     }"}, {"sha": "a84203a5feabe6436d0ae2070f582c627e0d3055", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a78eb72ac066743c8c11dbc1032a1909963719a3/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a78eb72ac066743c8c11dbc1032a1909963719a3/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=a78eb72ac066743c8c11dbc1032a1909963719a3", "patch": "@@ -3856,7 +3856,10 @@ Switch_statement::do_lower(Gogo*, Named_object*, Block* enclosing,\n   if (this->val_ != NULL\n       && (this->val_->is_error_expression()\n \t  || this->val_->type()->is_error()))\n-    return Statement::make_error_statement(loc);\n+    {\n+      go_assert(saw_errors());\n+      return Statement::make_error_statement(loc);\n+    }\n \n   if (this->val_ != NULL\n       && this->val_->type()->integer_type() != NULL"}]}