{"sha": "7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a", "node_id": "C_kwDOANBUbNoAKDdlYjYxYTQ1YTE3MWQ0ZjhmNWJmNGQ0ZjQ2OWQ0MmU2NTdjNjlhNmE", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-27T19:23:00Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-01-27T19:23:00Z"}, "message": "Fortran: add missing conversions for result of intrinsics to result type\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/84784\n\t* trans-intrinsic.cc (conv_intrinsic_image_status): Convert result\n\tto resulting (default) integer type.\n\t(conv_intrinsic_team_number): Likewise.\n\t(gfc_conv_intrinsic_popcnt_poppar): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/84784\n\t* gfortran.dg/pr84784.f90: New test.", "tree": {"sha": "e4470ac4a915b650d85a3c5370972964d6dc1c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4470ac4a915b650d85a3c5370972964d6dc1c51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb6a8d1d52dcaf5d25c4936623ed5cab8d6a24de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb6a8d1d52dcaf5d25c4936623ed5cab8d6a24de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb6a8d1d52dcaf5d25c4936623ed5cab8d6a24de"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "da854fad89dcad54c44cee21492dc18917fc30be", "filename": "gcc/fortran/trans-intrinsic.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a/gcc%2Ffortran%2Ftrans-intrinsic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a/gcc%2Ffortran%2Ftrans-intrinsic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.cc?ref=7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a", "patch": "@@ -2620,7 +2620,7 @@ conv_intrinsic_image_status (gfc_se *se, gfc_expr *expr)\n   else\n     gcc_unreachable ();\n \n-  se->expr = tmp;\n+  se->expr = fold_convert (gfc_get_int_type (gfc_default_integer_kind), tmp);\n }\n \n static void\n@@ -2662,7 +2662,7 @@ conv_intrinsic_team_number (gfc_se *se, gfc_expr *expr)\n   else\n     gcc_unreachable ();\n \n-  se->expr = tmp;\n+  se->expr = fold_convert (gfc_get_int_type (gfc_default_integer_kind), tmp);\n }\n \n \n@@ -7255,12 +7255,13 @@ gfc_conv_intrinsic_popcnt_poppar (gfc_se * se, gfc_expr *expr, int parity)\n \n       /* Combine the results.  */\n       if (parity)\n-\tse->expr = fold_build2_loc (input_location, BIT_XOR_EXPR, result_type,\n-\t\t\t\t    call1, call2);\n+\tse->expr = fold_build2_loc (input_location, BIT_XOR_EXPR,\n+\t\t\t\t    integer_type_node, call1, call2);\n       else\n-\tse->expr = fold_build2_loc (input_location, PLUS_EXPR, result_type,\n-\t\t\t\t    call1, call2);\n+\tse->expr = fold_build2_loc (input_location, PLUS_EXPR,\n+\t\t\t\t    integer_type_node, call1, call2);\n \n+      se->expr = convert (result_type, se->expr);\n       return;\n     }\n "}, {"sha": "3129b927687406b802fa8261ef24801256bf3f93", "filename": "gcc/testsuite/gfortran.dg/pr84784.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr84784.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr84784.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr84784.f90?ref=7eb61a45a171d4f8f5bf4d4f469d42e657c69a6a", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=lib -fdefault-integer-8\" }\n+! { dg-require-effective-target fortran_integer_16 }\n+! PR fortran/84784 - ICEs: verify_gimple failed with -fdefault-integer-8\n+\n+  use iso_fortran_env, only : team_type, STAT_FAILED_IMAGE\n+  implicit none\n+  type(team_type) :: team\n+  integer         :: new_team\n+  new_team = mod(this_image(),2)+1\n+  form team (new_team,team)\n+    change team (team)\n+    if (team_number() /= new_team) STOP 1\n+  end team\n+  if (image_status (1) == STAT_FAILED_IMAGE) ERROR STOP \"cannot recover\"\n+  if (runtime_popcnt(0_16) /= 0) STOP 2\n+  if (runtime_poppar(1_16) /= 1) STOP 3\n+contains\n+  integer function runtime_popcnt (i)\n+    integer(kind=16), intent(in) :: i\n+    runtime_popcnt = popcnt(i)\n+  end function\n+  integer function runtime_poppar (i)\n+    integer(kind=16), intent(in) :: i\n+    runtime_poppar = poppar(i)\n+  end function\n+end"}]}