{"sha": "49a000c39629e84c69696bfc78fb9e3f5c3dd594", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlhMDAwYzM5NjI5ZTg0YzY5Njk2YmZjNzhmYjllM2Y1YzNkZDU5NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-18T20:23:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-18T20:23:48Z"}, "message": "c.opt (fconstexpr-depth): Add Var(max_constexpr_depth).\n\n\t* c.opt (fconstexpr-depth): Add Var(max_constexpr_depth).\n\t* c-common.h: Don't declare it here.\n\t* c-common.c: Or define it here.\n\t* c-opts.c (c_common_handle_option): Or set it here.\n\nFrom-SVN: r171166", "tree": {"sha": "5c6c05809bee5c54caa7df52715890b900cb717c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c6c05809bee5c54caa7df52715890b900cb717c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49a000c39629e84c69696bfc78fb9e3f5c3dd594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a000c39629e84c69696bfc78fb9e3f5c3dd594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49a000c39629e84c69696bfc78fb9e3f5c3dd594", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a000c39629e84c69696bfc78fb9e3f5c3dd594/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01956319b6863b0fc507039f50bbb2c5fd2234be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01956319b6863b0fc507039f50bbb2c5fd2234be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01956319b6863b0fc507039f50bbb2c5fd2234be"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "a97a04eb28788f3962570ac76be885be052a8849", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=49a000c39629e84c69696bfc78fb9e3f5c3dd594", "patch": "@@ -1,5 +1,10 @@\n 2011-03-18  Jason Merrill  <jason@redhat.com>\n \n+\t* c.opt (fconstexpr-depth): Add Var(max_constexpr_depth).\n+\t* c-common.h: Don't declare it here.\n+\t* c-common.c: Or define it here.\n+\t* c-opts.c (c_common_handle_option): Or set it here.\n+\n \tPR c++/35315\n \t* c-common.c (handle_transparent_union_attribute): Don't\n \tmake a duplicate type in C++."}, {"sha": "f8d0c7e10746defb116fe9b56ccbebbdfc9f3dc7", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=49a000c39629e84c69696bfc78fb9e3f5c3dd594", "patch": "@@ -260,11 +260,6 @@ enum cxx_dialect cxx_dialect = cxx98;\n \n int max_tinst_depth = 1024;\n \n-/* Likewise, for constexpr function call evaluations.  N3225 specifies a\n-   minimum of 512.  */\n-\n-int max_constexpr_depth = 512;\n-\n /* The elements of `ridpointers' are identifier nodes for the reserved\n    type names and storage classes.  It is indexed by a RID_... value.  */\n tree *ridpointers;"}, {"sha": "6046d3e4fbec47766dd6acb706490415f15f5c4c", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=49a000c39629e84c69696bfc78fb9e3f5c3dd594", "patch": "@@ -623,10 +623,6 @@ extern enum cxx_dialect cxx_dialect;\n \n extern int max_tinst_depth;\n \n-/* Likewise, for constexpr function call evaluations.  */\n-\n-extern int max_constexpr_depth;\n-\n /* Nonzero means that we should not issue warnings about problems that\n    occur when the code is executed, because the code being processed\n    is not expected to be executed.  This is set during parsing.  This"}, {"sha": "8d6e6e7e24355cc9f2d12b6a91d5f7381a294e30", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=49a000c39629e84c69696bfc78fb9e3f5c3dd594", "patch": "@@ -568,10 +568,6 @@ c_common_handle_option (size_t scode, const char *arg, int value,\n \tdisable_builtin_function (arg);\n       break;\n \n-    case OPT_fconstexpr_depth_:\n-      max_constexpr_depth = value;\n-      break;\n-\n     case OPT_fdirectives_only:\n       cpp_opts->directives_only = value;\n       break;"}, {"sha": "0061ec57f5210442d28f6f4a19a058d305bbfd94", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a000c39629e84c69696bfc78fb9e3f5c3dd594/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=49a000c39629e84c69696bfc78fb9e3f5c3dd594", "patch": "@@ -720,8 +720,8 @@ ObjC ObjC++ Joined MissingArgError(no class name specified with %qs)\n -fconst-string-class=<name>\tUse class <name> for constant strings\n \n fconstexpr-depth=\n-C++ ObjC++ Joined RejectNegative UInteger\n--constexpr-depth=<number>\tSpecify maximum constexpr recursion depth\n+C++ ObjC++ Joined RejectNegative UInteger Var(max_constexpr_depth) Init(512)\n+-fconstexpr-depth=<number>\tSpecify maximum constexpr recursion depth\n \n fdeduce-init-list\n C++ ObjC++ Var(flag_deduce_init_list) Init(1)"}]}