{"sha": "c0d942d2117b785d768c5f2ab2813e4781e29e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBkOTQyZDIxMTdiNzg1ZDc2OGM1ZjJhYjI4MTNlNDc4MWUyOWU0Mw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "ulrich.weigand@linaro.org", "date": "2012-04-10T10:56:11Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2012-04-10T10:56:11Z"}, "message": "re PR tree-optimization/52870 (ICE during SLP pattern matching)\n\n\tgcc/\n\tPR tree-optimization/52870\n\t* tree-vect-patterns.c (vect_recog_widen_mult_pattern): Verify that\n\tpresumed pattern statement is within the same loop or basic block.\n\n\tgcc/testsuite/\n\tPR tree-optimization/52870\n\t* gcc.dg/vect/pr52870.c: New test.\n\nFrom-SVN: r186272", "tree": {"sha": "9f559ce5f418780d6e5c5935bdbfec342c5aa91f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f559ce5f418780d6e5c5935bdbfec342c5aa91f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0d942d2117b785d768c5f2ab2813e4781e29e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d942d2117b785d768c5f2ab2813e4781e29e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0d942d2117b785d768c5f2ab2813e4781e29e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d942d2117b785d768c5f2ab2813e4781e29e43/comments", "author": null, "committer": null, "parents": [{"sha": "5973ae1ac297b881e712b44335a231e892e6af25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5973ae1ac297b881e712b44335a231e892e6af25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5973ae1ac297b881e712b44335a231e892e6af25"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "64ff386c360921f9c9d1741c797b4d1634350be3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0d942d2117b785d768c5f2ab2813e4781e29e43", "patch": "@@ -1,3 +1,9 @@\n+2012-04-10  Ulrich Weigand  <ulrich.weigand@linaro.org>\n+\n+\tPR tree-optimization/52870\n+\t* tree-vect-patterns.c (vect_recog_widen_mult_pattern): Verify that\n+\tpresumed pattern statement is within the same loop or basic block.\n+\n 2012-04-10  Tristan Gingold  <gingold@adacore.com>\n \n \t* gengtype.c (main): Make uintptr_t a known type."}, {"sha": "a2172b04dfd29e385037f046ee4c4abed9d5d8ff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0d942d2117b785d768c5f2ab2813e4781e29e43", "patch": "@@ -1,3 +1,8 @@\n+2012-04-10  Ulrich Weigand  <ulrich.weigand@linaro.org>\n+\n+\tPR tree-optimization/52870\n+\t* gcc.dg/vect/pr52870.c: New test.\n+\n 2012-04-09  Mike Stump  <mikestump@comcast.net>\n \n \t* g++.dg/cpp0x/udlit-raw-op.C: Don't use CRLF endings."}, {"sha": "38518508bf6674e325e609534aa069c702a4c64a", "filename": "gcc/testsuite/gcc.dg/vect/pr52870.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr52870.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr52870.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr52870.c?ref=c0d942d2117b785d768c5f2ab2813e4781e29e43", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -ftree-vectorize\" } */\n+\n+long\n+test (int *x)\n+{\n+  unsigned long sx, xprec;\n+\n+  sx = *x >= 0 ? *x : -*x;\n+\n+  xprec = sx * 64;\n+\n+  if (sx < 16384)\n+    foo (sx);\n+\n+  return xprec;\n+}"}, {"sha": "6372a36b3fd1afae33a73b6e7a4f38f47159caee", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d942d2117b785d768c5f2ab2813e4781e29e43/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=c0d942d2117b785d768c5f2ab2813e4781e29e43", "patch": "@@ -564,6 +564,16 @@ vect_recog_widen_mult_pattern (VEC (gimple, heap) **stmts,\n   VEC (tree, heap) *dummy_vec;\n   bool op1_ok;\n   bool promotion;\n+  loop_vec_info loop_vinfo;\n+  struct loop *loop = NULL;\n+  bb_vec_info bb_vinfo;\n+  stmt_vec_info stmt_vinfo;\n+\n+  stmt_vinfo = vinfo_for_stmt (last_stmt);\n+  loop_vinfo = STMT_VINFO_LOOP_VINFO (stmt_vinfo);\n+  bb_vinfo = STMT_VINFO_BB_VINFO (stmt_vinfo);\n+  if (loop_vinfo)\n+    loop = LOOP_VINFO_LOOP (loop_vinfo);\n \n   if (!is_gimple_assign (last_stmt))\n     return NULL;\n@@ -635,6 +645,11 @@ vect_recog_widen_mult_pattern (VEC (gimple, heap) **stmts,\n           || gimple_assign_rhs_code (use_stmt) != NOP_EXPR)\n         return NULL;\n \n+      if (!gimple_bb (use_stmt)\n+\t  || (loop && !flow_bb_inside_loop_p (loop, gimple_bb (use_stmt)))\n+\t  || (!loop && gimple_bb (use_stmt) != BB_VINFO_BB (bb_vinfo)))\n+\treturn NULL;\n+\n       use_lhs = gimple_assign_lhs (use_stmt);\n       use_type = TREE_TYPE (use_lhs);\n       if (!INTEGRAL_TYPE_P (use_type)"}]}