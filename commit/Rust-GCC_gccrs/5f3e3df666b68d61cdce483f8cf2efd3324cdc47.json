{"sha": "5f3e3df666b68d61cdce483f8cf2efd3324cdc47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYzZTNkZjY2NmI2OGQ2MWNkY2U0ODNmOGNmMmVmZDMzMjRjZGM0Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-14T18:15:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-14T18:15:37Z"}, "message": "cstring (memchr): Forward to the builtin.\n\n2010-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/c_std/cstring (memchr): Forward to the builtin.\n\t* include/c_std/cstring: Remove redundant casts; use names consistent\n\twith the letter of the Standard.\n\t* include/c_global/cstring: Likewise.\n\nFrom-SVN: r155912", "tree": {"sha": "b3af2f72eff5500f34a3a0a7f36f5e47fcedf8bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3af2f72eff5500f34a3a0a7f36f5e47fcedf8bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f3e3df666b68d61cdce483f8cf2efd3324cdc47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3e3df666b68d61cdce483f8cf2efd3324cdc47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3e3df666b68d61cdce483f8cf2efd3324cdc47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3e3df666b68d61cdce483f8cf2efd3324cdc47/comments", "author": null, "committer": null, "parents": [{"sha": "2f3cdcf50295a3888012b66a52b709a7f21d2f25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3cdcf50295a3888012b66a52b709a7f21d2f25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3cdcf50295a3888012b66a52b709a7f21d2f25"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "dbc49a431251f30e8f235531fa9222c665e18c44", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3e3df666b68d61cdce483f8cf2efd3324cdc47/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3e3df666b68d61cdce483f8cf2efd3324cdc47/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f3e3df666b68d61cdce483f8cf2efd3324cdc47", "patch": "@@ -1,3 +1,10 @@\n+2010-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/c_std/cstring (memchr): Forward to the builtin.\n+\t* include/c_std/cstring: Remove redundant casts; use names consistent\n+\twith the letter of the Standard.\n+\t* include/c_global/cstring: Likewise.\n+\n 2010-01-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/profile/iterator_tracker.h: Add copyright."}, {"sha": "dba96c98127e5c50dcb6cb2070e55b573948ac88", "filename": "libstdc++-v3/include/c_global/cstring", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3e3df666b68d61cdce483f8cf2efd3324cdc47/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3e3df666b68d61cdce483f8cf2efd3324cdc47/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstring?ref=5f3e3df666b68d61cdce483f8cf2efd3324cdc47", "patch": "@@ -1,7 +1,7 @@\n // -*- C++ -*- forwarding header.\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -98,24 +98,24 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n #ifndef __CORRECT_ISO_CPP_STRING_H_PROTO\n   inline void*\n-  memchr(void* __p, int __c, size_t __n)\n-  { return memchr(const_cast<const void*>(__p), __c, __n); }\n+  memchr(void* __s, int __c, size_t __n)\n+  { return __builtin_memchr(__s, __c, __n); }\n \n   inline char*\n-  strchr(char* __s1, int __n)\n-  { return __builtin_strchr(const_cast<const char*>(__s1), __n); }\n+  strchr(char* __s, int __n)\n+  { return __builtin_strchr(__s, __n); }\n \n   inline char*\n   strpbrk(char* __s1, const char* __s2)\n-  { return __builtin_strpbrk(const_cast<const char*>(__s1), __s2); }\n+  { return __builtin_strpbrk(__s1, __s2); }\n \n   inline char*\n-  strrchr(char* __s1, int __n)\n-  { return __builtin_strrchr(const_cast<const char*>(__s1), __n); }\n+  strrchr(char* __s, int __n)\n+  { return __builtin_strrchr(__s, __n); }\n \n   inline char*\n   strstr(char* __s1, const char* __s2)\n-  { return __builtin_strstr(const_cast<const char*>(__s1), __s2); }\n+  { return __builtin_strstr(__s1, __s2); }\n #endif\n \n _GLIBCXX_END_NAMESPACE"}, {"sha": "3535a249b3ba7edbeaf43caddb7010dfab21805d", "filename": "libstdc++-v3/include/c_std/cstring", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3e3df666b68d61cdce483f8cf2efd3324cdc47/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3e3df666b68d61cdce483f8cf2efd3324cdc47/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstring?ref=5f3e3df666b68d61cdce483f8cf2efd3324cdc47", "patch": "@@ -1,6 +1,7 @@\n // -*- C++ -*- forwarding header.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -97,24 +98,24 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n #ifndef __CORRECT_ISO_CPP_STRING_H_PROTO\n   inline void*\n-  memchr(void* __p, int __c, size_t __n)\n-  { return memchr(const_cast<const void*>(__p), __c, __n); }\n+  memchr(void* __s, int __c, size_t __n)\n+  { return __builtin_memchr(__s, __c, __n); }\n \n   inline char*\n-  strchr(char* __s1, int __n)\n-  { return __builtin_strchr(const_cast<const char*>(__s1), __n); }\n+  strchr(char* __s, int __n)\n+  { return __builtin_strchr(__s, __n); }\n \n   inline char*\n   strpbrk(char* __s1, const char* __s2)\n-  { return __builtin_strpbrk(const_cast<const char*>(__s1), __s2); }\n+  { return __builtin_strpbrk(__s1, __s2); }\n \n   inline char*\n-  strrchr(char* __s1, int __n)\n-  { return __builtin_strrchr(const_cast<const char*>(__s1), __n); }\n+  strrchr(char* __s, int __n)\n+  { return __builtin_strrchr(__s, __n); }\n \n   inline char*\n   strstr(char* __s1, const char* __s2)\n-  { return __builtin_strstr(const_cast<const char*>(__s1), __s2); }\n+  { return __builtin_strstr(__s1, __s2); }\n #endif\n \n _GLIBCXX_END_NAMESPACE"}]}