{"sha": "de1132d194a883fb817520e0c1f1a44b294fd7f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxMTMyZDE5NGE4ODNmYjgxNzUyMGUwYzFmMWE0NGIyOTRmZDdmNQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-01T13:30:03Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-01T13:30:03Z"}, "message": "i386.c (override_options): Replace ABI_STACK_BOUNDARY with MIN_STACK_BOUNDARY.\n\n2008-08-01  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (override_options): Replace ABI_STACK_BOUNDARY\n\twith MIN_STACK_BOUNDARY.\n\t(ix86_update_stack_boundary): Likewise.\n\t(ix86_expand_prologue): Assert MIN_STACK_BOUNDARY instead of\n\tSTACK_BOUNDARY.\n\n\t* config/i386/i386.h (ABI_STACK_BOUNDARY): Renamed to ...\n\t(MIN_STACK_BOUNDARY): This.\n\nFrom-SVN: r138517", "tree": {"sha": "13d259d8d05e32483961bbd0c6a9a47bde1985c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13d259d8d05e32483961bbd0c6a9a47bde1985c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de1132d194a883fb817520e0c1f1a44b294fd7f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1132d194a883fb817520e0c1f1a44b294fd7f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1132d194a883fb817520e0c1f1a44b294fd7f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1132d194a883fb817520e0c1f1a44b294fd7f5/comments", "author": null, "committer": null, "parents": [{"sha": "62bb3fdb864d5eaad007ccf4c0afffc372915d5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62bb3fdb864d5eaad007ccf4c0afffc372915d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62bb3fdb864d5eaad007ccf4c0afffc372915d5d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "f41ccd2f08c04b5a5b153184451d34d29894b699", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1132d194a883fb817520e0c1f1a44b294fd7f5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1132d194a883fb817520e0c1f1a44b294fd7f5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=de1132d194a883fb817520e0c1f1a44b294fd7f5", "patch": "@@ -3045,9 +3045,9 @@ override_options (bool main_args_p)\n     ix86_force_align_arg_pointer = STACK_REALIGN_DEFAULT;\n \n   /* Validate -mincoming-stack-boundary= value or default it to\n-     ABI_STACK_BOUNDARY/PREFERRED_STACK_BOUNDARY.  */\n+     MIN_STACK_BOUNDARY/PREFERRED_STACK_BOUNDARY.  */\n   if (ix86_force_align_arg_pointer)\n-    ix86_default_incoming_stack_boundary = ABI_STACK_BOUNDARY;\n+    ix86_default_incoming_stack_boundary = MIN_STACK_BOUNDARY;\n   else\n     ix86_default_incoming_stack_boundary = PREFERRED_STACK_BOUNDARY;\n   ix86_incoming_stack_boundary = ix86_default_incoming_stack_boundary;\n@@ -7520,10 +7520,10 @@ ix86_update_stack_boundary (void)\n   /* Incoming stack alignment can be changed on individual functions\n      via force_align_arg_pointer attribute.  We use the smallest\n      incoming stack boundary.  */\n-  if (ix86_incoming_stack_boundary > ABI_STACK_BOUNDARY\n+  if (ix86_incoming_stack_boundary > MIN_STACK_BOUNDARY\n       && lookup_attribute (ix86_force_align_arg_pointer_string,\n \t\t\t   TYPE_ATTRIBUTES (TREE_TYPE (current_function_decl))))\n-    ix86_incoming_stack_boundary = ABI_STACK_BOUNDARY;\n+    ix86_incoming_stack_boundary = MIN_STACK_BOUNDARY;\n \n   /* Stack at entrance of main is aligned by runtime.  We use the\n      smallest incoming stack boundary. */\n@@ -7710,7 +7710,7 @@ ix86_expand_prologue (void)\n   if (stack_realign_fp)\n     {\n       int align_bytes = crtl->stack_alignment_needed / BITS_PER_UNIT;\n-      gcc_assert (align_bytes > STACK_BOUNDARY / BITS_PER_UNIT);\n+      gcc_assert (align_bytes > MIN_STACK_BOUNDARY / BITS_PER_UNIT);\n \n       /* Align the stack.  */\n       insn = emit_insn ((*ix86_gen_andsp) (stack_pointer_rtx,"}, {"sha": "3247c10d43024e335f808a6c7f7595751ffe9f8f", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1132d194a883fb817520e0c1f1a44b294fd7f5/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1132d194a883fb817520e0c1f1a44b294fd7f5/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=de1132d194a883fb817520e0c1f1a44b294fd7f5", "patch": "@@ -651,14 +651,14 @@ enum target_cpu_default\n /* Stack boundary of the main function guaranteed by OS.  */\n #define MAIN_STACK_BOUNDARY (TARGET_64BIT ? 128 : 32)\n \n-/* Stack boundary guaranteed by ABI.  */\n-#define ABI_STACK_BOUNDARY (TARGET_64BIT ? 128 : 32)\n+/* Minimum stack boundary.  */\n+#define MIN_STACK_BOUNDARY (TARGET_64BIT ? 128 : 32)\n \n /* Boundary (in *bits*) on which the stack pointer prefers to be\n    aligned; the compiler cannot rely on having this alignment.  */\n #define PREFERRED_STACK_BOUNDARY ix86_preferred_stack_boundary\n \n-/* It should be ABI_STACK_BOUNDARY.  But we set it to 128 bits for\n+/* It should be MIN_STACK_BOUNDARY.  But we set it to 128 bits for\n    both 32bit and 64bit, to support codes that need 128 bit stack\n    alignment for SSE instructions, but can't realign the stack.  */\n #define PREFERRED_STACK_BOUNDARY_DEFAULT 128"}]}