{"sha": "7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI1OGEyNTc2NTgxZjkwYzViYTgzOTllNmY2YmE2YzM2YTE2ZmY4Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-08-15T10:23:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-08-15T10:23:13Z"}, "message": "re PR fortran/62131 (OpenMP: Subobject of an allocatable array not allowed in OMP ATOMIC)\n\n\tPR fortran/62131\n\t* openmp.c (resolve_omp_atomic): Only complain if code->expr1's attr\n\tis allocatable, rather than whenever var->attr.allocatable.\n\n\t* gfortran.dg/gomp/pr62131.f90: New test.\n\nCo-Authored-By: Tobias Burnus <burnus@net-b.de>\n\nFrom-SVN: r214010", "tree": {"sha": "9b4e0aa1f7dec4be8ba7da062efc4bd34dccd18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b4e0aa1f7dec4be8ba7da062efc4bd34dccd18b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c274197e9fb0fdc9c1aa4c6bfa089c72cca3658"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "411fe4c8f5063c8ffeb511c02d33b157390058ab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "patch": "@@ -1,3 +1,10 @@\n+2014-08-15  Jakub Jelinek  <jakub@redhat.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/62131\n+\t* openmp.c (resolve_omp_atomic): Only complain if code->expr1's attr\n+\tis allocatable, rather than whenever var->attr.allocatable.\n+\n 2014-08-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/62107"}, {"sha": "217fce73828dde56a56304a7910555aa49c0841c", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "patch": "@@ -2744,7 +2744,7 @@ resolve_omp_atomic (gfc_code *code)\n       break;\n     }\n \n-  if (var->attr.allocatable)\n+  if (gfc_expr_attr (code->expr1).allocatable)\n     {\n       gfc_error (\"!$OMP ATOMIC with ALLOCATABLE variable at %L\",\n \t\t &code->loc);"}, {"sha": "505df55667cac1419ef4312ee212f61d6f2cd83a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "patch": "@@ -1,3 +1,9 @@\n+2014-08-15  Jakub Jelinek  <jakub@redhat.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/62131\n+\t* gfortran.dg/gomp/pr62131.f90: New test.\n+\n 2014-08-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62031"}, {"sha": "8e88cd70bcc01d1060b4aa00bdb07b75aac98d65", "filename": "gcc/testsuite/gfortran.dg/gomp/pr62131.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr62131.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7258a2576581f90c5ba8399e6f6ba6c36a16ff86/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr62131.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr62131.f90?ref=7258a2576581f90c5ba8399e6f6ba6c36a16ff86", "patch": "@@ -0,0 +1,19 @@\n+! PR fortran/62131\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+program pr62131\n+  integer,allocatable :: nerrs(:,:)\n+  allocate(nerrs(10,10))\n+  nerrs(:,:) = 0\n+!$omp parallel do\n+  do k=1,10\n+    call uperrs(k,1)\n+  end do\n+contains\n+  subroutine uperrs(i,io)\n+    integer,intent(in) :: i,io\n+!$omp atomic\n+    nerrs(i,io)=nerrs(i,io)+1\n+  end subroutine\n+end"}]}