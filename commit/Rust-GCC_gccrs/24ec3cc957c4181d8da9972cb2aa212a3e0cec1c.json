{"sha": "24ec3cc957c4181d8da9972cb2aa212a3e0cec1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRlYzNjYzk1N2M0MTgxZDhkYTk5NzJjYjJhYTIxMmEzZTBjZWMxYw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-10-03T20:19:18Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-10-03T20:19:18Z"}, "message": "[Darwin] Pick up SDKROOT as the sysroot fallback.\n\nFor compatibility with xcrun and the behaviour of the clang driver, make use\nof the setting of the SDKROOT environment variable when it is available.\nThis applies to both finding headers and libraries (i.e. it is also passed to\nld64).\n\nPriority:\n 1. User's command-line specified --sysroot= or -isysroot.\n 2. The SDKROOT variable when set, and validated.\n 3. Any sysroot provided by --with-sysroot= configuration parameter.\n \nSDKROOT is checked thus:\n  1. Presence.\n  2. That it starts with \"/\" (i.e. 'absolute').\n  3. That it is not \"/\" only (since that's the default).\n  4. That it is readable by the process executing the driver.\n\nThis is pretty much the same rule set as used by the clang driver.\n\nNOTE: (3) might turn out to be overly restrictive in the case that we\nhave configured with --with-sysroot= and then we want to run on a system\nwith an installation of the headers/libraries in /.  We can revisit this\nif that turns out to be an important use-case.\n\nSo one can do:\n\nxcrun --sdk macosx /path/to/gcc ....\n\nand that provides the SDK path as the sysroot to GCC as expected.\n\nCAVEAT: An unfortunate effect of the fact that \"gcc\" (and \"g++\") are\nexecutables in the Xcode installation, which are found ahead of any such\nnamed in the $PATH:\n\nPATH=/path/to/gcc/install:$PATH\nxcrun --sdk macosx gcc .... \n\ndoes *not* work, instead that executes the clang from the xcode/commmand\nline tools installation.\n\nPATH=/path/to/gcc/install:$PATH\nxcrun --sdk macosx x64_64-apple-darwinXX-gcc ... \n\ndoes work as expected, however.\n\ngcc/ChangeLog:\n\n2019-10-03  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR target/87243\n\t* config/darwin-driver.c (maybe_get_sysroot_from_sdkroot): New.\n\t(darwin_driver_init): Use the sysroot provided by SDKROOT when that\n\tis available and the user has not set one on the command line.\n\nFrom-SVN: r276530", "tree": {"sha": "3e2a464b6e0646eadbaf39112dd1391147897991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e2a464b6e0646eadbaf39112dd1391147897991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfcf3551c432da3a8154ef11a26a4d75655deb3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcf3551c432da3a8154ef11a26a4d75655deb3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfcf3551c432da3a8154ef11a26a4d75655deb3d"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "9be4a6f7f6e661b3eae647ffa0ab9aad13f6cf60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24ec3cc957c4181d8da9972cb2aa212a3e0cec1c", "patch": "@@ -1,3 +1,10 @@\n+2019-10-03  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/87243\n+\t* config/darwin-driver.c (maybe_get_sysroot_from_sdkroot): New.\n+\t(darwin_driver_init): Use the sysroot provided by SDKROOT when that\n+\tis available and the user has not set one on the command line.\n+\n 2019-10-03  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n \n \tPR target/91769"}, {"sha": "82ac231dc4ae6aaa545bec6fb4eb1dccbdeb1cee", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24ec3cc957c4181d8da9972cb2aa212a3e0cec1c/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=24ec3cc957c4181d8da9972cb2aa212a3e0cec1c", "patch": "@@ -210,6 +210,28 @@ darwin_default_min_version (void)\n   return new_flag;\n }\n \n+/* See if we can find the sysroot from the SDKROOT environment variable.  */\n+\n+static const char *\n+maybe_get_sysroot_from_sdkroot ()\n+{\n+  const char *maybe_sysroot = getenv (\"SDKROOT\");\n+\n+  /* We'll use the same rules as the clang driver, for compatibility.\n+     1) The path must be absolute\n+     2) Ignore \"/\", that is the default anyway and we do not want the\n+\tsysroot semantics to be applied to it.\n+     3) It must exist (actually, we'll check it's readable too).  */\n+\n+   if (maybe_sysroot  == NULL\n+       || *maybe_sysroot != '/'\n+       || strlen (maybe_sysroot) == 1\n+       || access (maybe_sysroot, R_OK) == -1)\n+    return NULL;\n+\n+  return xstrndup (maybe_sysroot, strlen (maybe_sysroot));\n+}\n+\n /* Translate -filelist and -framework options in *DECODED_OPTIONS\n    (size *DECODED_OPTIONS_COUNT) to use -Xlinker so that they are\n    considered to be linker inputs in the case that no other inputs are\n@@ -234,6 +256,7 @@ darwin_driver_init (unsigned int *decoded_options_count,\n   bool appendM64 = false;\n   const char *vers_string = NULL;\n   bool seen_version_min = false;\n+  bool seen_sysroot_p = false;\n \n   for (i = 1; i < *decoded_options_count; i++)\n     {\n@@ -314,6 +337,11 @@ darwin_driver_init (unsigned int *decoded_options_count,\n \t  --*decoded_options_count;\n \t  break;\n \n+\tcase OPT__sysroot_:\n+\tcase OPT_isysroot:\n+\t  seen_sysroot_p = true;\n+\t  break;\n+\n \tdefault:\n \t  break;\n \t}\n@@ -375,6 +403,22 @@ darwin_driver_init (unsigned int *decoded_options_count,\n \t\t       &(*decoded_options)[*decoded_options_count - 1]);\n     }\n \n+  if (! seen_sysroot_p)\n+    {\n+      /* We will pick up an SDKROOT if we didn't specify a sysroot and treat\n+\t it as overriding any configure-time --with-sysroot.  */\n+       const char *sdkroot = maybe_get_sysroot_from_sdkroot ();\n+       if (sdkroot)\n+\t{\n+\t  ++*decoded_options_count;\n+\t  *decoded_options = XRESIZEVEC (struct cl_decoded_option,\n+\t\t\t\t\t *decoded_options,\n+\t\t\t\t\t *decoded_options_count);\n+\t  generate_option (OPT__sysroot_, sdkroot, 1, CL_DRIVER,\n+\t\t\t   &(*decoded_options)[*decoded_options_count - 1]);\n+\t}\n+    }\n+\n   /* We will need to know the OS X version we're trying to build for here\n      so that we can figure out the mechanism and source for the sysroot to\n      be used.  */"}]}