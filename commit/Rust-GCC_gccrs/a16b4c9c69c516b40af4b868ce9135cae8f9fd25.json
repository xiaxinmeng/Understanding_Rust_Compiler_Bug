{"sha": "a16b4c9c69c516b40af4b868ce9135cae8f9fd25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE2YjRjOWM2OWM1MTZiNDBhZjRiODY4Y2U5MTM1Y2FlOGY5ZmQyNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-03-25T13:42:05Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-03-25T13:42:05Z"}, "message": "Fix bug reported by David C Binderman, accept 'L' when pedantic with FP format.\n\n\t* c-common.c (check_format_info): Initialize type, is_type.  New local\n\tintegral_format.  Don't warn for 'L' when pedantic.  Do warn for 'L'\n\twhen pedantic if used with integral format specifier.\n\nFrom-SVN: r18827", "tree": {"sha": "a7307a2131ea08179f908c7ad4ffaa3fd01ddd4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7307a2131ea08179f908c7ad4ffaa3fd01ddd4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a16b4c9c69c516b40af4b868ce9135cae8f9fd25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16b4c9c69c516b40af4b868ce9135cae8f9fd25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a16b4c9c69c516b40af4b868ce9135cae8f9fd25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16b4c9c69c516b40af4b868ce9135cae8f9fd25/comments", "author": null, "committer": null, "parents": [{"sha": "c4d38ccb5503a83780195612df44b2927e187e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d38ccb5503a83780195612df44b2927e187e6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d38ccb5503a83780195612df44b2927e187e6a"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "1e100897a2251abc770520fb9c74b9ac7ab74b47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a16b4c9c69c516b40af4b868ce9135cae8f9fd25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a16b4c9c69c516b40af4b868ce9135cae8f9fd25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a16b4c9c69c516b40af4b868ce9135cae8f9fd25", "patch": "@@ -1,3 +1,9 @@\n+Wed Mar 25 13:40:48 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* c-common.c (check_format_info): Initialize type, is_type.  New local\n+\tintegral_format.  Don't warn for 'L' when pedantic.  Do warn for 'L'\n+\twhen pedantic if used with integral format specifier.\n+\n Wed Mar 25 16:09:01 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* rs6000.h (FUNCTION_ARG_PADDING): Cast result to be enum"}, {"sha": "efc6051dc3ff83204e359c5582213e4873ded38e", "filename": "gcc/c-common.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a16b4c9c69c516b40af4b868ce9135cae8f9fd25/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a16b4c9c69c516b40af4b868ce9135cae8f9fd25/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=a16b4c9c69c516b40af4b868ce9135cae8f9fd25", "patch": "@@ -379,8 +379,8 @@ void\n decl_attributes (node, attributes, prefix_attributes)\n      tree node, attributes, prefix_attributes;\n {\n-  tree decl = 0, type;\n-  int is_type;\n+  tree decl = 0, type = 0;\n+  int is_type = 0;\n   tree a;\n \n   if (attrtab_idx == 0)\n@@ -1185,6 +1185,7 @@ check_format_info (info, params)\n   int length_char;\n   int format_char;\n   int format_length;\n+  int integral_format;\n   tree format_tree;\n   tree cur_param;\n   tree cur_type;\n@@ -1448,7 +1449,7 @@ check_format_info (info, params)\n       else if (*format_chars == 'q' || *format_chars == 'L')\n \t{\n \t  length_char = *format_chars++;\n-\t  if (pedantic)\n+\t  if (pedantic && length_char == 'q')\n \t    pedwarn (\"ANSI C does not support the `%c' length modifier\",\n \t\t     length_char);\n \t}\n@@ -1557,10 +1558,10 @@ check_format_info (info, params)\n \t      warning (message);\n \t    }\n \t}\n-      if (precise && index (flag_chars, '0') != 0\n-\t  && (format_char == 'd' || format_char == 'i'\n-\t      || format_char == 'o' || format_char == 'u'\n-\t      || format_char == 'x' || format_char == 'x'))\n+      integral_format = (format_char == 'd' || format_char == 'i'\n+\t\t\t || format_char == 'o' || format_char == 'u'\n+\t\t\t || format_char == 'x' || format_char == 'x');\n+      if (precise && index (flag_chars, '0') != 0 && integral_format)\n \t{\n \t  sprintf (message,\n \t\t   \"`0' flag ignored with precision specifier and `%c' format\",\n@@ -1575,7 +1576,8 @@ check_format_info (info, params)\n \tcase 'q': wanted_type = fci->qlen ? *(fci->qlen) : 0; break;\n \tcase 'L': wanted_type = fci->bigllen ? *(fci->bigllen) : 0; break;\n \t}\n-      if (wanted_type == 0)\n+      if (wanted_type == 0\n+\t  || (pedantic && length_char == 'L' && integral_format))\n \t{\n \t  sprintf (message,\n \t\t   \"use of `%c' length character with `%c' type character\","}]}