{"sha": "8d36d33b3c4a51c43ae60aed8328f6cbe5f41843", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzNmQzM2IzYzRhNTFjNDNhZTYwYWVkODMyOGY2Y2JlNWY0MTg0Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-17T19:43:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-17T19:43:33Z"}, "message": "(some_operand): New function.\n\nFrom-SVN: r8481", "tree": {"sha": "0382f5711e84fddf96b87641ddcede0fabafca35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0382f5711e84fddf96b87641ddcede0fabafca35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d36d33b3c4a51c43ae60aed8328f6cbe5f41843", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d36d33b3c4a51c43ae60aed8328f6cbe5f41843", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d36d33b3c4a51c43ae60aed8328f6cbe5f41843", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d36d33b3c4a51c43ae60aed8328f6cbe5f41843/comments", "author": null, "committer": null, "parents": [{"sha": "02df8aba6bde18e7f00a579d304154e28105d912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02df8aba6bde18e7f00a579d304154e28105d912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02df8aba6bde18e7f00a579d304154e28105d912"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "12608fe1b53178e584df1460217d065c8f5c42bd", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d36d33b3c4a51c43ae60aed8328f6cbe5f41843/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d36d33b3c4a51c43ae60aed8328f6cbe5f41843/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=8d36d33b3c4a51c43ae60aed8328f6cbe5f41843", "patch": "@@ -280,6 +280,30 @@ reg_or_cint_operand (op, mode)\n      return GET_CODE (op) == CONST_INT || register_operand (op, mode);\n }\n \n+/* Return 1 if OP is something that can be reloaded into a register;\n+   if it is a MEM, it need not be valid.  */\n+\n+int\n+some_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  if (mode != VOIDmode && GET_MODE (op) != VOIDmode && mode != GET_MODE (op))\n+    return 0;\n+\n+  switch (GET_CODE (op))\n+    {\n+    case REG:  case MEM:  case CONST_DOUBLE:\n+    case CONST_INT:  case LABEL_REF:  case SYMBOL_REF:  case CONST:\n+      return 1;\n+\n+    case SUBREG:\n+      return some_operand (SUBREG_REG (op), VOIDmode);\n+    }\n+\n+  return 0;\n+}\n+\n /* Return 1 if OP is a valid operand for the source of a move insn.  */\n \n int"}]}