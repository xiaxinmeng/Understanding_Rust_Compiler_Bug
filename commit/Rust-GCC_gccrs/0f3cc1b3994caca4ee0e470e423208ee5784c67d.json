{"sha": "0f3cc1b3994caca4ee0e470e423208ee5784c67d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzY2MxYjM5OTRjYWNhNGVlMGU0NzBlNDIzMjA4ZWU1Nzg0YzY3ZA==", "commit": {"author": {"name": "Andre Simoes Dias Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-04-07T10:13:42Z"}, "committer": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-04-07T14:43:50Z"}, "message": "arm: MVE: Fix polymorphism for scalars and constants\n\nThis patch merges some polymorphic functions that were uncorrectly separating\nscalar variants. It also simplifies the way we detect scalars and constants in\nmve_typeid.\n\nI also fixed some polymorphic intrinsics that were splitting of scalar cases.\n\ngcc/ChangeLog:\n2020-04-07  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/arm/arm_mve.h (vsubq_n): Merge with...\n\t(vsubq): ... this.\n\t(vmulq_n): Merge with...\n\t(vmulq): ... this.\n\t(__ARM_mve_typeid): Simplify scalar and constant detection.\n\ngcc/testsuite/ChangeLog:\n2020-04-07  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_f16.c: Fix test.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_u8.c: Likewise.", "tree": {"sha": "a45a97bc350d28006b2c07c162bffa2636ef7b77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a45a97bc350d28006b2c07c162bffa2636ef7b77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f3cc1b3994caca4ee0e470e423208ee5784c67d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3cc1b3994caca4ee0e470e423208ee5784c67d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3cc1b3994caca4ee0e470e423208ee5784c67d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3cc1b3994caca4ee0e470e423208ee5784c67d/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "434fe1a4092e12e5b518ef0716dc5b315e06118d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434fe1a4092e12e5b518ef0716dc5b315e06118d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/434fe1a4092e12e5b518ef0716dc5b315e06118d"}], "stats": {"total": 1578, "additions": 730, "deletions": 848}, "files": [{"sha": "921bc0d988778133d1edaa178447b2af4593323d", "filename": "gcc/config/arm/arm_mve.h", "status": "modified", "additions": 722, "deletions": 840, "changes": 1562, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Fconfig%2Farm%2Farm_mve.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Fconfig%2Farm%2Farm_mve.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_mve.h?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d"}, {"sha": "a3f693f06f70669e70345e6a0b34558e7860942a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_f16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_f16.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (float16x8_t a, float16_t b)\n float16x8_t\n foo1 (float16x8_t a, float16_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.f16\"  }  } */"}, {"sha": "5d1cfa368a7f7d9c72888f1a7cee67ae0364d8d8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_f32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_f32.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (float32x4_t a, float32_t b)\n float32x4_t\n foo1 (float32x4_t a, float32_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.f32\"  }  } */"}, {"sha": "98e84cbf202d9039a9316b487762332c0e6d3af0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_s16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s16.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (int16x8_t a, int16_t b)\n int16x8_t\n foo1 (int16x8_t a, int16_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.i16\"  }  } */"}, {"sha": "adbfd6fe10bdfeccb48f9f1b738f3f7ff1ce64a0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_s32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s32.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (int32x4_t a, int32_t b)\n int32x4_t\n foo1 (int32x4_t a, int32_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.i32\"  }  } */"}, {"sha": "c845f108f88777fc3d753a411151e56cd9de8b1c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_s8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_s8.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (int8x16_t a, int8_t b)\n int8x16_t\n foo1 (int8x16_t a, int8_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.i8\"  }  } */"}, {"sha": "e52acdc53b9942d925413cb63d61c270a740cd5b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_u16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u16.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (uint16x8_t a, uint16_t b)\n uint16x8_t\n foo1 (uint16x8_t a, uint16_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.i16\"  }  } */"}, {"sha": "9da4bc1f3590e576f7646e8aaa2530fa0c70f155", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_u32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u32.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (uint32x4_t a, uint32_t b)\n uint32x4_t\n foo1 (uint32x4_t a, uint32_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.i32\"  }  } */"}, {"sha": "e0f152db729bb02f08379bb88c9b027fd370d272", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vmulq_n_u8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3cc1b3994caca4ee0e470e423208ee5784c67d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvmulq_n_u8.c?ref=0f3cc1b3994caca4ee0e470e423208ee5784c67d", "patch": "@@ -15,7 +15,7 @@ foo (uint8x16_t a, uint8_t b)\n uint8x16_t\n foo1 (uint8x16_t a, uint8_t b)\n {\n-  return vmulq_n (a, b);\n+  return vmulq (a, b);\n }\n \n /* { dg-final { scan-assembler \"vmul.i8\"  }  } */"}]}