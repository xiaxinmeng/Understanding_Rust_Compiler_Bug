{"sha": "b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwYTNmMjY3NDllNWFhODczNzU0ZjAyMmVkOGJlMGM2YzY3YmYxZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:03:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:03:13Z"}, "message": "[multiple changes]\n\n2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Find_Type_Of_Object): In ASIS mode, create an itype\n\treference when needed.\n\n2011-08-02  Bob Duff  <duff@adacore.com>\n\n\t* gnat_ugn.texi: Fix typo.\n\n2011-08-02  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Gnatmake): Use MLib.Tgt.Archive_Ext as the extension of\n\tarchive file name. Do not use the full path name of archives for Open\n\tVMS.\n\nFrom-SVN: r177097", "tree": {"sha": "74eb1074d1b4ac44a9fe2da7615496327d7956dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74eb1074d1b4ac44a9fe2da7615496327d7956dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/comments", "author": null, "committer": null, "parents": [{"sha": "643e867f08b5c9cb3e53f17761787c53fae6a89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643e867f08b5c9cb3e53f17761787c53fae6a89d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643e867f08b5c9cb3e53f17761787c53fae6a89d"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "8003041ea097f428bb52693bdd7d0edd77d43e7e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "patch": "@@ -1,3 +1,18 @@\n+2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Find_Type_Of_Object): In ASIS mode, create an itype\n+\treference when needed.\n+\n+2011-08-02  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_ugn.texi: Fix typo.\n+\n+2011-08-02  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Gnatmake): Use MLib.Tgt.Archive_Ext as the extension of\n+\tarchive file name. Do not use the full path name of archives for Open\n+\tVMS.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch12.adb, sem_ch11.adb: New calling sequence for"}, {"sha": "0174bd71bd484a651fe550532b85dfc0513360d5", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "patch": "@@ -16424,10 +16424,10 @@ replace colons with semicolons in the assignments to these variables.\n @font@heightrm=cmr8\n @heightrm\n @end iftex\n-# In this example, we create both ADA_INCLUDE_PATH and ADA_OBJECT_PATH.\n+# In this example, we create both ADA_INCLUDE_PATH and ADA_OBJECTS_PATH.\n # This is the same thing as putting the -I arguments on the command line.\n # (the equivalent of using -aI on the command line would be to define\n-#  only ADA_INCLUDE_PATH, the equivalent of -aO is ADA_OBJECT_PATH).\n+#  only ADA_INCLUDE_PATH, the equivalent of -aO is ADA_OBJECTS_PATH).\n # You can of course have different values for these variables.\n #\n # Note also that we need to keep the previous values of these variables, since\n@@ -16444,9 +16444,9 @@ space:=$@{empty@} $@{empty@}\n SOURCE_LIST := $@{subst $@{space@},:,$@{SOURCE_DIRS@}@}\n OBJECT_LIST := $@{subst $@{space@},:,$@{OBJECT_DIRS@}@}\n ADA_INCLUDE_PATH += $@{SOURCE_LIST@}\n-ADA_OBJECT_PATH += $@{OBJECT_LIST@}\n+ADA_OBJECTS_PATH += $@{OBJECT_LIST@}\n export ADA_INCLUDE_PATH\n-export ADA_OBJECT_PATH\n+export ADA_OBJECTS_PATH\n \n all:\n         gnatmake main_unit"}, {"sha": "5bf466633fc308d08b84ddb51f95a7774e8ac5a2", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "patch": "@@ -6067,7 +6067,8 @@ package body Make is\n \n                      for Index in 1 .. Library_Projs.Last loop\n                         if Library_Projs.Table\n-                            (Index).Library_Kind = Static\n+                          (Index).Library_Kind = Static\n+                          and then not Targparm.OpenVMS_On_Target\n                         then\n                            Linker_Switches.Increment_Last;\n                            Linker_Switches.Table (Linker_Switches.Last) :=\n@@ -6080,7 +6081,8 @@ package body Make is\n                                 Get_Name_String\n                                     (Library_Projs.Table (Index).\n                                      Library_Name) &\n-                                \".a\");\n+                                \".\" &\n+                                MLib.Tgt.Archive_Ext);\n \n                         else\n                            --  Add the -L switch"}, {"sha": "2d2a545ae4c6af79659eb069e759dd50c54537eb", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60a3f26749e5aa873754f022ed8be0c6c67bf1d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b60a3f26749e5aa873754f022ed8be0c6c67bf1d", "patch": "@@ -14988,6 +14988,19 @@ package body Sem_Ch3 is\n \n       else\n          T := Process_Subtype (Obj_Def, Related_Nod);\n+\n+         --  If expansion is disabled an object definition that is an aggregate\n+         --  will not get expanded and may lead to scoping problems in the back\n+         --  end, if the object is referenced in an inner scope. In that case\n+         --  create an itype reference for the object definition now. This\n+         --  may be redundant in some cases, but harmless.\n+\n+         if Is_Itype (T)\n+           and then Nkind (Related_Nod) = N_Object_Declaration\n+           and then ASIS_Mode\n+         then\n+            Build_Itype_Reference (T, Related_Nod);\n+         end if;\n       end if;\n \n       return T;"}]}