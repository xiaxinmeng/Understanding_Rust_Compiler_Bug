{"sha": "1bd6497c3e23de82b850f8116607d687df939e06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJkNjQ5N2MzZTIzZGU4MmI4NTBmODExNjYwN2Q2ODdkZjkzOWUwNg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-12-28T17:09:16Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-12-28T17:09:16Z"}, "message": "Do not include unnecessary .h files.\n\n2010-12-28  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* Makefile.in (TREE_VECTORIZER_H): Removed duplicate definition.\n\t(tree-browser.o): Update dependences.\n\t(omega.o): Same.\n\t(tree-chrec.o): Same.\n\t(tree-scalar-evolution.o): Same.\n\t(tree-data-ref.o): Same.\n\t(sese.o): Same.\n\t(graphite.o): Same.\n\t(graphite-blocking.o): Same.\n\t(graphite-clast-to-gimple.o): Same.\n\t(graphite-cloog-util.o): Same.\n\t(graphite-dependences.o): Same.\n\t(graphite-flattening.o): Same.\n\t(graphite-interchange.o): Same.\n\t(graphite-poly.o): Same.\n\t(graphite-ppl.o): Same.\n\t(graphite-scop-detection.o): Same.\n\t(graphite-sese-to-poly.o): Same.\n\t(tree-loop-linear.o): Same.\n\t(tree-loop-distribution.o): Same.\n\t(tree-parloops.o): Same.\n\t(lambda-mat.o): Same.\n\t(lambda-trans.o): Same.\n\t(lambda-code.o): Same.\n\t* tree-browser.o: Do not include unnecessary .h files.\n\t* omega.o: Same.\n\t* tree-chrec.o: Same.\n\t* tree-scalar-evolution.o: Same.\n\t* tree-data-ref.o: Same.\n\t* sese.o: Same.\n\t* graphite.o: Same.\n\t* graphite-blocking.o: Same.\n\t* graphite-clast-to-gimple.o: Same.\n\t* graphite-cloog-util.o: Same.\n\t* graphite-dependences.o: Same.\n\t* graphite-flattening.o: Same.\n\t* graphite-interchange.o: Same.\n\t* graphite-poly.o: Same.\n\t* graphite-ppl.o: Same.\n\t* graphite-scop-detection.o: Same.\n\t* graphite-sese-to-poly.o: Same.\n\t* tree-loop-linear.o: Same.\n\t* tree-loop-distribution.o: Same.\n\t* tree-parloops.o: Same.\n\t* lambda-mat.o: Same.\n\t* lambda-trans.o: Same.\n\t* lambda-code.o: Same.\n\t* graphite.h: Removed.\n\nFrom-SVN: r168296", "tree": {"sha": "acb33ba01f6620ff25da458fd2ead97420465a3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acb33ba01f6620ff25da458fd2ead97420465a3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bd6497c3e23de82b850f8116607d687df939e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd6497c3e23de82b850f8116607d687df939e06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd6497c3e23de82b850f8116607d687df939e06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd6497c3e23de82b850f8116607d687df939e06/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67b2d4ea07e3c70b949f7af3638c0a84f966956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67b2d4ea07e3c70b949f7af3638c0a84f966956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67b2d4ea07e3c70b949f7af3638c0a84f966956"}], "stats": {"total": 474, "additions": 121, "deletions": 353}, "files": [{"sha": "439e24b13c24bd2d25838e46cb883e05ca092053", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -1,3 +1,54 @@\n+2010-12-28  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* Makefile.in (TREE_VECTORIZER_H): Removed duplicate definition.\n+\t(tree-browser.o): Update dependences.\n+\t(omega.o): Same.\n+\t(tree-chrec.o): Same.\n+\t(tree-scalar-evolution.o): Same.\n+\t(tree-data-ref.o): Same.\n+\t(sese.o): Same.\n+\t(graphite.o): Same.\n+\t(graphite-blocking.o): Same.\n+\t(graphite-clast-to-gimple.o): Same.\n+\t(graphite-cloog-util.o): Same.\n+\t(graphite-dependences.o): Same.\n+\t(graphite-flattening.o): Same.\n+\t(graphite-interchange.o): Same.\n+\t(graphite-poly.o): Same.\n+\t(graphite-ppl.o): Same.\n+\t(graphite-scop-detection.o): Same.\n+\t(graphite-sese-to-poly.o): Same.\n+\t(tree-loop-linear.o): Same.\n+\t(tree-loop-distribution.o): Same.\n+\t(tree-parloops.o): Same.\n+\t(lambda-mat.o): Same.\n+\t(lambda-trans.o): Same.\n+\t(lambda-code.o): Same.\n+\t* tree-browser.o: Do not include unnecessary .h files.\n+\t* omega.o: Same.\n+\t* tree-chrec.o: Same.\n+\t* tree-scalar-evolution.o: Same.\n+\t* tree-data-ref.o: Same.\n+\t* sese.o: Same.\n+\t* graphite.o: Same.\n+\t* graphite-blocking.o: Same.\n+\t* graphite-clast-to-gimple.o: Same.\n+\t* graphite-cloog-util.o: Same.\n+\t* graphite-dependences.o: Same.\n+\t* graphite-flattening.o: Same.\n+\t* graphite-interchange.o: Same.\n+\t* graphite-poly.o: Same.\n+\t* graphite-ppl.o: Same.\n+\t* graphite-scop-detection.o: Same.\n+\t* graphite-sese-to-poly.o: Same.\n+\t* tree-loop-linear.o: Same.\n+\t* tree-loop-distribution.o: Same.\n+\t* tree-parloops.o: Same.\n+\t* lambda-mat.o: Same.\n+\t* lambda-trans.o: Same.\n+\t* lambda-code.o: Same.\n+\t* graphite.h: Removed.\n+\n 2010-12-28  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11.md: Correct length attribute for float"}, {"sha": "b5f9bd28ba45ed48ac26f91a3d63f0f79032f1ce", "filename": "gcc/Makefile.in", "status": "modified", "additions": 62, "deletions": 108, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -959,7 +959,6 @@ TREE_FLOW_H = tree-flow.h tree-flow-inline.h tree-ssa-operands.h \\\n \t\t$(HASHTAB_H) $(CGRAPH_H) $(IPA_REFERENCE_H) \\\n \t\ttree-ssa-alias.h\n TREE_SSA_LIVE_H = tree-ssa-live.h $(PARTITION_H) vecprim.h\n-TREE_VECTORIZER_H = tree-vectorizer.h $(TREE_DATA_REF_H)\n SSAEXPAND_H = ssaexpand.h $(TREE_SSA_LIVE_H)\n PRETTY_PRINT_H = pretty-print.h $(INPUT_H) $(OBSTACK_H)\n DIAGNOSTIC_CORE_H = diagnostic-core.h $(INPUT_H) bversion.h diagnostic.def\n@@ -2656,91 +2655,56 @@ omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(EXCEPT_H) $(SPLAY_TREE_H) $(OPTABS_H) \\\n    $(CFGLOOP_H) tree-iterator.h gt-omp-low.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n-   $(TM_H) coretypes.h tree-pretty-print.h\n-omega.o : omega.c omega.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(PARAMS_H)\n-tree-chrec.o: tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(SCEV_H) $(TREE_PASS_H) $(PARAMS_H) \\\n-   $(DIAGNOSTIC_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(FLAGS_H) tree-pretty-print.h\n-tree-scalar-evolution.o: tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) \\\n-   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) $(CFGLOOP_H) $(SCEV_H) $(TREE_PASS_H) $(FLAGS_H) \\\n-   gt-tree-scalar-evolution.h tree-pretty-print.h gimple-pretty-print.h\n-tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(FLAGS_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(TREE_DATA_REF_H) $(TREE_PASS_H) langhooks.h tree-pretty-print.h \\\n-   gimple-pretty-print.h\n-sese.o: sese.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) tree-chrec.h \\\n-   $(TREE_DATA_REF_H) tree-scalar-evolution.h tree-pass.h domwalk.h value-prof.h \\\n-   pointer-set.h $(GIMPLE_H) sese.h tree-pretty-print.h\n-graphite.o: graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) $(DBGCNT_H) \\\n-   $(PREDICT_H) $(TREE_DATA_REF_H) tree-pass.h graphite.h \\\n-   pointer-set.h value-prof.h graphite-ppl.h sese.h \\\n-   graphite-scop-detection.h graphite-clast-to-gimple.h \\\n-   graphite-poly.h graphite-sese-to-poly.h\n-graphite-blocking.o: graphite-blocking.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) output.h $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(GIMPLE_H) $(TREE_DATA_REF_H) tree-pass.h domwalk.h value-prof.h \\\n-   graphite.h graphite-poly.h graphite-ppl.h\n-graphite-clast-to-gimple.o: graphite-clast-to-gimple.c $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(TM_H) langhooks.h \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n-   $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h \\\n-   pointer-set.h value-prof.h graphite-cloog-util.h graphite-ppl.h sese.h \\\n-   graphite-scop-detection.h graphite-clast-to-gimple.h graphite-poly.h \\\n-   graphite-dependences.h\n-graphite-cloog-util.o: graphite-cloog-util.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TMP_H) $(GGC_H)\n-graphite-dependences.o: graphite-dependences.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(GIMPLE_H) $(TREE_DATA_REF_H) tree-pass.h domwalk.h \\\n-   graphite.h graphite-poly.h graphite-ppl.h graphite-dependences.h\n-graphite-flattening.o: graphite-flattening.c $(CONFIG_H) $(SYSTEM_H)\t\\\n-   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) output.h\t\t\\\n-   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H)\t\t\\\n-   $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H)\t\t\t\\\n-   $(TREE_DATA_REF_H) tree-pass.h domwalk.h value-prof.h graphite.h\t\\\n-   graphite-poly.h graphite-ppl.h\n-graphite-interchange.o: graphite-interchange.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) output.h $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(GIMPLE_H) $(TREE_DATA_REF_H) tree-pass.h domwalk.h value-prof.h \\\n-   graphite.h graphite-poly.h graphite-ppl.h\n-graphite-poly.o: graphite-poly.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n-   $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h graphite-dependences.h \\\n-   pointer-set.h value-prof.h graphite-ppl.h sese.h output.h graphite-poly.h \\\n-   tree-pretty-print.h gimple-pretty-print.h\n-graphite-ppl.o: graphite-ppl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) graphite-ppl.h graphite-cloog-util.h\n-graphite-scop-detection.o: graphite-scop-detection.c $(CONFIG_H) $(SYSTEM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n-   $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h $(TM_H) \\\n-   value-prof.h graphite-ppl.h sese.h pointer-set.h coretypes.h \\\n-   graphite-scop-detection.h graphite-poly.h\n-graphite-sese-to-poly.o: graphite-sese-to-poly.c $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n-   $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h \\\n-   pointer-set.h value-prof.h graphite-ppl.h sese.h \\\n-   graphite-scop-detection.h graphite-sese-to-poly.h $(PARAMS_H) \\\n-   graphite-clast-to-gimple.h graphite-poly.h\n+   coretypes.h $(TREE_H) tree-pretty-print.h\n+omega.o : omega.c omega.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H)\n+tree-chrec.o : tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   tree-pretty-print.h $(CFGLOOP_H) $(TREE_FLOW_H) $(SCEV_H) $(TREE_PASS_H) \\\n+   $(PARAMS_H)\n+tree-scalar-evolution.o : tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h gimple-pretty-print.h $(TREE_FLOW_H) $(CFGLOOP_H) $(SCEV_H) \\\n+   $(TREE_PASS_H) $(PARAMS_H) gt-tree-scalar-evolution.h\n+tree-data-ref.o : tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   gimple-pretty-print.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   $(TREE_PASS_H) langhooks.h\n+sese.o : sese.c sese.h $(CONFIG_H) $(SYSTEM_H) coretypes.h tree-pretty-print.h \\\n+   $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) tree-pass.h value-prof.h\n+graphite.o : graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_FLOW_H) \\\n+   $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h $(DBGCNT_H) \\\n+   graphite-ppl.h graphite-poly.h graphite-scop-detection.h \\\n+   graphite-clast-to-gimple.h graphite-sese-to-poly.h\n+graphite-blocking.o : graphite-blocking.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   sese.h graphite-ppl.h graphite-poly.h\n+graphite-clast-to-gimple.o : graphite-clast-to-gimple.c $(CONFIG_H) \\\n+   $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n+   $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h graphite-cloog-util.h \\\n+   graphite-ppl.h graphite-poly.h graphite-clast-to-gimple.h \\\n+   graphite-dependences.h graphite-cloog-compat.h\n+graphite-cloog-util.o : graphite-cloog-util.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h graphite-cloog-util.h graphite-cloog-compat.h\n+graphite-dependences.o : graphite-dependences.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   sese.h graphite-ppl.h graphite-poly.h graphite-dependences.h\n+graphite-flattening.o : graphite-flattening.c $(CONFIG_H) $(SYSTEM_H)\t\\\n+   coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   sese.h graphite-ppl.h graphite-poly.h\n+graphite-interchange.o : graphite-interchange.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   sese.h graphite-ppl.h graphite-poly.h\n+graphite-poly.o : graphite-poly.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) gimple-pretty-print.h \\\n+   $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h graphite-ppl.h graphite-poly.h \\\n+   graphite-dependences.h graphite-cloog-util.h\n+graphite-ppl.o : graphite-ppl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   graphite-cloog-util.h graphite-ppl.h\n+graphite-scop-detection.o : graphite-scop-detection.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) \\\n+   sese.h graphite-ppl.h graphite-poly.h graphite-scop-detection.h\n+graphite-sese-to-poly.o : graphite-sese-to-poly.c $(CONFIG_H) \\\n+   $(SYSTEM_H) coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n+   $(TREE_DATA_REF_H) domwalk.h sese.h graphite-ppl.h graphite-poly.h \\\n+   graphite-sese-to-poly.h\n tree-vect-loop.o: tree-vect-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n    $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n@@ -2777,19 +2741,12 @@ tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(CFGLOOP_H) $(TREE_PASS_H) $(TREE_VECTORIZER_H) $(TIMEVAR_H) \\\n    tree-pretty-print.h\n tree-loop-linear.o: tree-loop-linear.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(OPTABS_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(TREE_PASS_H) $(TREE_DATA_REF_H) $(EXPR_H) $(LAMBDA_H) \\\n-   $(TARGET_H) $(OBSTACK_H)\n-tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(OPTABS_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(TREE_PASS_H) $(TREE_DATA_REF_H) $(EXPR_H) \\\n-   langhooks.h $(TREE_VECTORIZER_H)\n-tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_FLOW_H) $(TREE_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_PASS_H) langhooks.h gt-tree-parloops.h \\\n-   $(TREE_VECTORIZER_H) tree-pretty-print.h gimple-pretty-print.h\n+   $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) $(LAMBDA_H)\n+tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H)\n+tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) gimple-pretty-print.h \\\n+   $(TREE_PASS_H) langhooks.h gt-tree-parloops.h $(TREE_VECTORIZER_H)\n tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    tree-stdarg.h $(TARGET_H) langhooks.h gimple-pretty-print.h\n@@ -3499,15 +3456,12 @@ ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h $(EXCEPT_H) $(TM_P_H) \\\n    $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n-lambda-mat.o : lambda-mat.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   $(TM_H) coretypes.h $(TREE_H) $(TREE_FLOW_H)\n-lambda-trans.o: lambda-trans.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   $(TM_H) coretypes.h $(TARGET_H) $(TREE_H) $(TREE_FLOW_H)\n-lambda-code.o: lambda-code.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n-   $(TM_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) \\\n-   $(CFGLOOP_H) $(TREE_DATA_REF_H) $(EXPR_H) coretypes.h $(TARGET_H) \\\n-   $(TREE_PASS_H) $(VEC_H) vecprim.h $(OBSTACK_H) pointer-set.h\n+lambda-mat.o : lambda-mat.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_FLOW_H) \\\n+   $(LAMBDA_H)\n+lambda-trans.o : lambda-trans.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   $(TREE_FLOW_H) $(LAMBDA_H)\n+lambda-code.o : lambda-code.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(LAMBDA_H) $(TREE_PASS_H)\n params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) \\\n    $(DIAGNOSTIC_CORE_H)\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)"}, {"sha": "bcd077a8310876da1c70d3f73143da72ec9be3ee", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -23,32 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"output.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n-#include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n-#include \"domwalk.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n-#include \"params.h\"\n+#include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n-#include \"sese.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n \n "}, {"sha": "90bf90a15d1b3d8c0a516715abcd3fa9fe3444cc", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -21,35 +21,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n-#include \"domwalk.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n-#include \"langhooks.h\"\n #include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"cloog/cloog.h\"\n #include \"ppl_c.h\"\n #include \"graphite-cloog-util.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n-#include \"graphite-scop-detection.h\"\n #include \"graphite-clast-to-gimple.h\"\n #include \"graphite-dependences.h\"\n #include \"graphite-cloog-compat.h\""}, {"sha": "c3d0cc1713a9c16d0e42c236963c57b9472391fc", "filename": "gcc/graphite-cloog-util.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-cloog-util.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-cloog-util.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-cloog-util.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -22,8 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n \n #ifdef HAVE_cloog\n "}, {"sha": "a6a5254ed17f21b448cf565f784f2e76cb905914", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -22,29 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n-#include \"domwalk.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n+#include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n-#include \"sese.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n #include \"graphite-dependences.h\"\n "}, {"sha": "ccd0f5f0c6ff5f60a833241f303066d12ecc79de", "filename": "gcc/graphite-flattening.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-flattening.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-flattening.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-flattening.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -21,32 +21,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"output.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n-#include \"domwalk.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n-#include \"params.h\"\n+#include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n-#include \"sese.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n \n /* The loop flattening pass transforms loop nests into a single loop,"}, {"sha": "b90c4e77c2257a0aadd0b207b9dae1e02cc0a7d5", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -23,32 +23,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"output.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n-#include \"domwalk.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n-#include \"params.h\"\n+#include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n-#include \"sese.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n \n /* Builds a linear expression, of dimension DIM, representing PDR's"}, {"sha": "cabab4415ae16ba869b5c6c9b03a1da4386726d7", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -21,34 +21,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"output.h\"\n-#include \"basic-block.h\"\n #include \"diagnostic.h\"\n-#include \"tree-pretty-print.h\"\n-#include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n+#include \"gimple-pretty-print.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n-#include \"domwalk.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n-#include \"params.h\"\n+#include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n-#include \"sese.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n #include \"graphite-dependences.h\"\n #include \"graphite-cloog-util.h\""}, {"sha": "fffa3ee051f401fcb003957734cf5cdf8329f4b6", "filename": "gcc/graphite-ppl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-ppl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-ppl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-ppl.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -22,8 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n \n #ifdef HAVE_cloog\n "}, {"sha": "aff0b03f8394bce335e16648116c5af36af08b73", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -22,30 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-pass.h\"\n-#include \"domwalk.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n #include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n #include \"graphite-scop-detection.h\"\n "}, {"sha": "0cd601adf3c691b4c019b3d24fa7d64ea9c9c012", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -21,32 +21,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n #include \"domwalk.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n #include \"sese.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n-#include \"graphite-scop-detection.h\"\n #include \"graphite-sese-to-poly.h\"\n \n /* Returns the index of the PHI argument defined in the outermost"}, {"sha": "84a889810c493fee5e31d2532569473f4a4cee91", "filename": "gcc/graphite.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -35,34 +35,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n-#include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n #include \"sese.h\"\n-#include \"predict.h\"\n #include \"dbgcnt.h\"\n \n #ifdef HAVE_cloog\n \n-#include \"cloog/cloog.h\"\n #include \"ppl_c.h\"\n-#include \"graphite-cloog-compat.h\"\n #include \"graphite-ppl.h\"\n-#include \"graphite.h\"\n #include \"graphite-poly.h\"\n #include \"graphite-scop-detection.h\"\n #include \"graphite-clast-to-gimple.h\""}, {"sha": "1007e9af4109ac937b3b5c782682da3708d2d97d", "filename": "gcc/graphite.h", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67b2d4ea07e3c70b949f7af3638c0a84f966956/gcc%2Fgraphite.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67b2d4ea07e3c70b949f7af3638c0a84f966956/gcc%2Fgraphite.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.h?ref=c67b2d4ea07e3c70b949f7af3638c0a84f966956", "patch": "@@ -1,24 +0,0 @@\n-/* Gimple Represented as Polyhedra.\n-   Copyright (C) 2006, 2007, 2008, 2009  Free Software Foundation, Inc.\n-   Contributed by Sebastian Pop <sebastian.pop@inria.fr>.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#ifndef GCC_GRAPHITE_H\n-#define GCC_GRAPHITE_H\n-\n-#endif  /* GCC_GRAPHITE_H  */"}, {"sha": "f46207145c84fea072caee439be360fe424c7ed9", "filename": "gcc/lambda-code.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Flambda-code.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Flambda-code.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-code.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -22,28 +22,13 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"target.h\"\n-#include \"rtl.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic-core.h\"\n-#include \"obstack.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n-#include \"expr.h\"\n-#include \"optabs.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n-#include \"tree-pass.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"vec.h\"\n #include \"lambda.h\"\n-#include \"vecprim.h\"\n-#include \"pointer-set.h\"\n+#include \"tree-pass.h\"\n \n /* This loop nest code generation is based on non-singular matrix\n    math."}, {"sha": "33b33ef17b858dde20a9a65ea929603a75832a0c", "filename": "gcc/lambda-mat.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Flambda-mat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Flambda-mat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-mat.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -21,9 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n #include \"tree-flow.h\"\n #include \"lambda.h\"\n "}, {"sha": "22f30b038892dc1dd26fdecb45522995dcb09248", "filename": "gcc/lambda-trans.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Flambda-trans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Flambda-trans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-trans.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -21,10 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"target.h\"\n #include \"tree-flow.h\"\n #include \"lambda.h\"\n "}, {"sha": "aee99e72a84f210d57f034eded93ca50516084ca", "filename": "gcc/omega.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fomega.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fomega.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomega.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -34,8 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-pass.h\""}, {"sha": "bfb0276d3a8b74fb1887127a42514617de43244a", "filename": "gcc/sese.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -23,25 +23,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"basic-block.h\"\n-#include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-pass.h\"\n-#include \"domwalk.h\"\n #include \"value-prof.h\"\n-#include \"pointer-set.h\"\n-#include \"gimple.h\"\n #include \"sese.h\"\n \n /* Print to stderr the element ELT.  */"}, {"sha": "dab7286670c88d4ac78408b906038da0c70d4ea8", "filename": "gcc/tree-browser.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-browser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-browser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-browser.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -22,19 +22,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n #include \"tree.h\"\n-#include \"tree-inline.h\"\n #include \"tree-pretty-print.h\"\n-#include \"hashtab.h\"\n-\n \n #define TB_OUT_FILE stdout\n #define TB_IN_FILE stdin\n #define TB_NIY fprintf (TB_OUT_FILE, \"Sorry this command is not yet implemented.\\n\")\n #define TB_WF fprintf (TB_OUT_FILE, \"Warning, this command failed.\\n\")\n \n-\n /* Structures for handling Tree Browser's commands.  */\n #define DEFTBCODE(COMMAND, STRING, HELP)   COMMAND,\n enum TB_Comm_code {"}, {"sha": "c721d43e33ec06ddde8b7107c2a147cce8b35975", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -27,20 +27,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n #include \"tree-pretty-print.h\"\n #include \"cfgloop.h\"\n #include \"tree-flow.h\"\n #include \"tree-chrec.h\"\n #include \"tree-pass.h\"\n #include \"params.h\"\n-#include \"flags.h\"\n #include \"tree-scalar-evolution.h\"\n \n-\f\n-\n /* Extended folder for chrecs.  */\n \n /* Determines whether CST is not a constant evolution.  */"}, {"sha": "3de3234c22b093baa5d7ceaeac378017b3296b88", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -77,16 +77,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"flags.h\"\n-#include \"tree.h\"\n-#include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\""}, {"sha": "783c47c326381d1ac5859846626703048bb43aaf", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -45,20 +45,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"tree.h\"\n-#include \"basic-block.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-pass.h\"\n-#include \"lambda.h\"\n-#include \"langhooks.h\"\n-#include \"tree-vectorizer.h\"\n \n /* If bit I is not set, it means that this node represents an\n    operation that has already been performed, and that should not be"}, {"sha": "5b19c17622cfb5297a4a72028f807339c69923d2", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -19,17 +19,10 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"tree.h\"\n-#include \"basic-block.h\"\n-#include \"obstack.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "9ece8879e2ef26929ca528a793fb8adccd12fc0e", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -23,16 +23,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"tree.h\"\n #include \"tree-flow.h\"\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n-#include \"tree-pretty-print.h\"\n+#include \"tree-scalar-evolution.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-pass.h\"\n-#include \"tree-scalar-evolution.h\"\n-#include \"hashtab.h\"\n #include \"langhooks.h\"\n #include \"tree-vectorizer.h\"\n "}, {"sha": "d60e56915c3fbfe9255bb1f5535cba0bfec340e9", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd6497c3e23de82b850f8116607d687df939e06/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=1bd6497c3e23de82b850f8116607d687df939e06", "patch": "@@ -257,20 +257,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"ggc.h\"\n-#include \"tree.h\"\n-#include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-pass.h\"\n-#include \"flags.h\"\n #include \"params.h\"\n \n static tree analyze_scalar_evolution_1 (struct loop *, tree, tree);"}]}