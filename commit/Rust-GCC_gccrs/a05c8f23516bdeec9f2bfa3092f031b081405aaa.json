{"sha": "a05c8f23516bdeec9f2bfa3092f031b081405aaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA1YzhmMjM1MTZiZGVlYzlmMmJmYTMwOTJmMDMxYjA4MTQwNWFhYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-11-16T22:30:19Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-11-16T22:30:19Z"}, "message": "re PR rtl-optimization/46490 (ACATS c460007 fails at -O2 or above)\n\n\tPR rtl-optimization/46490\n\t* combine.c (expand_compound_operation): Fix thinko.\n\nFrom-SVN: r166830", "tree": {"sha": "1798120234e788be245c8b883c0ab40e1499142f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1798120234e788be245c8b883c0ab40e1499142f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a05c8f23516bdeec9f2bfa3092f031b081405aaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05c8f23516bdeec9f2bfa3092f031b081405aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05c8f23516bdeec9f2bfa3092f031b081405aaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05c8f23516bdeec9f2bfa3092f031b081405aaa/comments", "author": null, "committer": null, "parents": [{"sha": "cfc76ec4d063ce5c7b80db4a3466f7974b0a554b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc76ec4d063ce5c7b80db4a3466f7974b0a554b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfc76ec4d063ce5c7b80db4a3466f7974b0a554b"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "30d1e26b151b5d9833b1dfef5eacb999d461b1f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a05c8f23516bdeec9f2bfa3092f031b081405aaa", "patch": "@@ -1,3 +1,8 @@\n+2010-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/46490\n+\t* combine.c (expand_compound_operation): Fix thinko.\n+\n 2010-11-16  Richard Henderson  <rth@redhat.com>\n \n \tPR target/46470"}, {"sha": "d55ce3127d809048e5f6f28c21bbcabef840aba0", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=a05c8f23516bdeec9f2bfa3092f031b081405aaa", "patch": "@@ -6761,11 +6761,11 @@ expand_compound_operation (rtx x)\n      count.  This can happen in a case like (x >> 31) & 255 on machines\n      that can't shift by a constant.  On those machines, we would first\n      combine the shift with the AND to produce a variable-position\n-     extraction.  Then the constant of 31 would be substituted in to produce\n-     a such a position.  */\n+     extraction.  Then the constant of 31 would be substituted in\n+     to produce such a position.  */\n \n   modewidth = GET_MODE_BITSIZE (GET_MODE (x));\n-  if (modewidth + len >= pos)\n+  if (modewidth >= pos + len)\n     {\n       enum machine_mode mode = GET_MODE (x);\n       tem = gen_lowpart (mode, XEXP (x, 0));"}, {"sha": "10a7c3e61d87a0b901097d17f39d5f2ba8d60d63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a05c8f23516bdeec9f2bfa3092f031b081405aaa", "patch": "@@ -1,3 +1,8 @@\n+2010-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt12.adb: New test.\n+\t* gnat.dg/opt12_pkg.ad[sb]: New helper.\n+\n 2010-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.target/rx/pack.c: New test."}, {"sha": "e8b5c4787c624b3dcb5b05ad2fc5ab435f902161", "filename": "gcc/testsuite/gnat.dg/opt12.adb", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12.adb?ref=a05c8f23516bdeec9f2bfa3092f031b081405aaa", "patch": "@@ -0,0 +1,18 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2\" }\n+\n+with Opt12_Pkg; use Opt12_Pkg;\n+\n+procedure Opt12 is\n+\n+   Static_Target : Static_Integer_Subtype;\n+\n+begin\n+\n+   Static_Target := Static_Integer_Subtype(Fix_Half);\n+\n+   if not Equal(Static_Target, 1) then\n+     raise Program_Error;\n+   end if;\n+\n+end Opt12;"}, {"sha": "646c8734c70fe4e0a982331ba77c83e9e1002165", "filename": "gcc/testsuite/gnat.dg/opt12_pkg.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12_pkg.adb?ref=a05c8f23516bdeec9f2bfa3092f031b081405aaa", "patch": "@@ -0,0 +1,8 @@\n+package body Opt12_Pkg is\n+\n+   function Equal (L, R: Static_Integer_Subtype) return Boolean is\n+   begin\n+      return (L = R);\n+   end;\n+\n+end Opt12_Pkg;"}, {"sha": "4defe2b77c7c772d75508631672d1c9287a003cb", "filename": "gcc/testsuite/gnat.dg/opt12_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05c8f23516bdeec9f2bfa3092f031b081405aaa/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt12_pkg.ads?ref=a05c8f23516bdeec9f2bfa3092f031b081405aaa", "patch": "@@ -0,0 +1,11 @@\n+package Opt12_Pkg is\n+\n+   type Static_Integer_Subtype is range -32_000 .. 32_000;\n+\n+   function Equal (L, R: Static_Integer_Subtype) return Boolean;\n+\n+   type My_Fixed is delta 0.1 range -5.0 .. 5.0;\n+\n+   Fix_Half : My_Fixed := 0.5;\n+\n+end Opt12_Pkg;"}]}