{"sha": "62f1d4705d0b042e13faad97ea12b665b4f3ad84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJmMWQ0NzA1ZDBiMDQyZTEzZmFhZDk3ZWExMmI2NjViNGYzYWQ4NA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-06-09T12:55:50Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-06-09T12:55:50Z"}, "message": "re PR fortran/13372 (ICE in trans-types.c (gfc_typenode_for_spec), see #13201)\n\nfortran/\nPR fortran/13372\n* module.c (write_symbol, write_symtree): Don't write symbols\nwrongly added to namespace.\n* trans-decl.c (gfc_create_module_variable): Don't create a\nbackend decl for a symbol incorrectly added to namespace.\n\ntestsuite/\nPR fortran/13372\n* gfortran.fortran-torture/compile/named_args_2.f90: New test.\n\nFrom-SVN: r82834", "tree": {"sha": "c1de926e45c095751fbacdbbeac74a56885562fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1de926e45c095751fbacdbbeac74a56885562fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62f1d4705d0b042e13faad97ea12b665b4f3ad84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f1d4705d0b042e13faad97ea12b665b4f3ad84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f1d4705d0b042e13faad97ea12b665b4f3ad84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f1d4705d0b042e13faad97ea12b665b4f3ad84/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b40742a53183a904e4902b1fcad54b7b2c6cf57d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b40742a53183a904e4902b1fcad54b7b2c6cf57d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b40742a53183a904e4902b1fcad54b7b2c6cf57d"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "d8a6da42f986f20514a02c7a28b326254054d970", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=62f1d4705d0b042e13faad97ea12b665b4f3ad84", "patch": "@@ -1,3 +1,11 @@\n+2004-06-09  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/13372\n+\t* module.c (write_symbol, write_symtree): Don't write symbols\n+\twrongly added to namespace.\n+\t* trans-decl.c (gfc_create_module_variable): Don't create a\n+\tbackend decl for a symbol incorrectly added to namespace.\n+\n 2004-06-09  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/13201"}, {"sha": "eace654810a5f476c174c6cd0bab77b4ca41633a", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=62f1d4705d0b042e13faad97ea12b665b4f3ad84", "patch": "@@ -3137,6 +3137,13 @@ write_symbol (int n, gfc_symbol * sym)\n   if (sym->attr.flavor == FL_UNKNOWN || sym->attr.flavor == FL_LABEL)\n     gfc_internal_error (\"write_symbol(): bad module symbol '%s'\", sym->name);\n \n+\n+  if (sym->attr.flavor == FL_VARIABLE && sym->ts.type == BT_UNKNOWN)\n+    /* TODO: this is a workaround for some of the problems in PR15481,\n+       and fixes the dependent bug PR13372. In an ideal frontend, this\n+       should never happen.  */\n+    return;\n+\n   mio_integer (&n);\n   mio_internal_string (sym->name);\n \n@@ -3260,6 +3267,12 @@ write_symtree (gfc_symtree * st)\n \t  && !sym->attr.subroutine && !sym->attr.function))\n     return;\n \n+  if (sym->attr.flavor == FL_VARIABLE && sym->ts.type == BT_UNKNOWN)\n+    /* TODO: this is a workaround for some of the problems in PR15481,\n+       and fixes the dependent bug PR13372. In an ideal frontend, this\n+       should never happen.  */\n+    return;\n+\n   if (check_unique_name (st->name))\n     return;\n "}, {"sha": "14207378e0f6895d601feda9a2012b7f5a763164", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=62f1d4705d0b042e13faad97ea12b665b4f3ad84", "patch": "@@ -1788,6 +1788,12 @@ gfc_create_module_variable (gfc_symbol * sym)\n       && (sym->attr.flavor != FL_PARAMETER || sym->attr.dimension == 0))\n     return;\n \n+  if (sym->attr.flavor == FL_VARIABLE && sym->ts.type == BT_UNKNOWN)\n+    /* TODO: This is a workaround for the issue outlined in PR 15481,\n+       and it fixes the bug in PR13372. This should never happen in an\n+       ideal frontend.  */\n+    return;\n+\n   /* Don't generate variables from other modules.  */\n   if (sym->attr.use_assoc)\n     return;"}, {"sha": "d60039b860756f4f16844939f7cb2a9a79dfe6e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62f1d4705d0b042e13faad97ea12b665b4f3ad84", "patch": "@@ -1,10 +1,15 @@\n+2004-06-09  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/13372\n+\t* gfortran.fortran-torture/compile/named_args_2.f90: New test.\n+\n 2004-06-09  Bud Davis  <bdavis9659@comcast.net>\n \n \tPR gfortran/14897\n-\t* gfortran.fortran-torture/execute/t_edit.f90\n+\t* gfortran.fortran-torture/execute/t_edit.f90: New test.\n \n 2004-06-09  Bud Davis  <bdavis9659@comcast.net>\n-                                                                                    \n+\n         PR gfortran/15755\n \t* gfortran.fortran-torture/execute/backspace.c : New test.\n "}, {"sha": "c2d36eb5848ffe0ef52285fe0d681bd50bfce427", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/named_args_2.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fnamed_args_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f1d4705d0b042e13faad97ea12b665b4f3ad84/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fnamed_args_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fnamed_args_2.f90?ref=62f1d4705d0b042e13faad97ea12b665b4f3ad84", "patch": "@@ -0,0 +1,8 @@\n+! this is the reduced testcase from pr13372\n+! we wrongly add a symbol \"P\" to the module\n+! Currently (2004/06/09) a workaround is in place\n+! PR 15481 tracks any steps towards a real fix.\n+module typeSizes\n+implicit none\n+  integer, parameter :: FourByteReal = selected_real_kind(P =  6, R =  37)\n+end module typeSizes"}]}