{"sha": "ce2df7c64ae0185dab22bb38628acf8ae48551b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UyZGY3YzY0YWUwMTg1ZGFiMjJiYjM4NjI4YWNmOGFlNDg1NTFiNw==", "commit": {"author": {"name": "Feng Wang", "email": "fengwang@nudt.edu.cn", "date": "2005-03-15T02:52:38Z"}, "committer": {"name": "Feng Wang", "email": "fengwang@gcc.gnu.org", "date": "2005-03-15T02:52:38Z"}, "message": "re PR fortran/18827 (ICE on assign to common variable)\n\nfortran/\n2005-03-15  Feng Wang  <fengwang@nudt.edu.cn>\n\n        PR fortran/18827\n        * io.c (resolve_tag): Add checking on assigned label.\n        (match_dt_format): Does not set symbol assign attribute.\n        * match.c (gfc_match_goto):Does not set symbol assign attribute.\n        * resolve.c (resolve_code): Add checking on assigned label.\n        * trans-common.c (build_field): Deals with common variable assigned\n        a label.\n        * trans-stmt.c (gfc_conv_label_variable): New function.\n        (gfc_trans_label_assign): Use it.\n        (gfc_trans_goto): Ditto.\n        * trans-io.c (set_string): Ditto.\n        * trans.h (gfc_conv_label_variable): Add prototype.\ntestsuite/\n2005-03-15  Feng Wang  <fengwang@nudt.edu.cn>\n\n        PR fortran/18827\n        * gfortran.dg/assign_2.f90: New test.\n        * gfortran.dg/assign_3.f90: New test.\n        * gfortran.dg/assign.f90: New test.\n\nFrom-SVN: r96467", "tree": {"sha": "9d626c10efe2ea1ff72bf8bd94fa123c776b3dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d626c10efe2ea1ff72bf8bd94fa123c776b3dad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce2df7c64ae0185dab22bb38628acf8ae48551b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2df7c64ae0185dab22bb38628acf8ae48551b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2df7c64ae0185dab22bb38628acf8ae48551b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2df7c64ae0185dab22bb38628acf8ae48551b7/comments", "author": null, "committer": null, "parents": [{"sha": "08091139067ee2565a3ad248bd0113e521a425ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08091139067ee2565a3ad248bd0113e521a425ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08091139067ee2565a3ad248bd0113e521a425ee"}], "stats": {"total": 128, "additions": 117, "deletions": 11}, "files": [{"sha": "415af9def1d38f3f2488980ded3912030039eca0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -1,3 +1,18 @@\n+2005-03-15  Feng Wang  <fengwang@nudt.edu.cn>\n+\n+\tPR fortran/18827\n+\t* io.c (resolve_tag): Add checking on assigned label.\n+\t(match_dt_format): Does not set symbol assign attribute.\n+\t* match.c (gfc_match_goto):Does not set symbol assign attribute.\n+\t* resolve.c (resolve_code): Add checking on assigned label.\n+\t* trans-common.c (build_field): Deals with common variable assigned\n+\ta label.\n+\t* trans-stmt.c (gfc_conv_label_variable): New function.\n+\t(gfc_trans_label_assign): Use it.\n+\t(gfc_trans_goto): Ditto.\n+\t* trans-io.c (set_string): Ditto.\n+\t* trans.h (gfc_conv_label_variable): Add prototype.\n+\n 2005-03-14  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/20467"}, {"sha": "12650f90f24be433493c68e4370bd211d450684b", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -981,6 +981,14 @@ resolve_tag (const io_tag * tag, gfc_expr * e)\n \t\t     &e->where);\n \t  return FAILURE;\n \t}\n+      /* Check assigned label.  */\n+      if (e->expr_type == EXPR_VARIABLE && e->ts.type == BT_INTEGER\n+\t\t&& e->symtree->n.sym->attr.assign != 1)\n+\t{\n+\t  gfc_error (\"Variable '%s' has not been assigned a format label at %L\",\n+\t\t\te->symtree->n.sym->name, &e->where);\n+\t  return FAILURE;\n+\t}\n     }\n   else\n     {\n@@ -1526,9 +1534,6 @@ match_dt_format (gfc_dt * dt)\n \t  gfc_free_expr (e);\n \t  goto conflict;\n \t}\n-      if (e->ts.type == BT_INTEGER && e->rank == 0)\n-        e->symtree->n.sym->attr.assign = 1;\n-\n       dt->format_expr = e;\n       return MATCH_YES;\n     }"}, {"sha": "f433db52c5d2259811ee2972854a425d31ed48e1", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -1526,7 +1526,6 @@ gfc_match_goto (void)\n \t  == FAILURE)\n \treturn MATCH_ERROR;\n \n-      expr->symtree->n.sym->attr.assign = 1;\n       new_st.op = EXEC_GOTO;\n       new_st.expr = expr;\n "}, {"sha": "730f4fb1fed3bfc62eb78f96827edae543835006", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -3695,10 +3695,17 @@ resolve_code (gfc_code * code, gfc_namespace * ns)\n \t  break;\n \n \tcase EXEC_GOTO:\n-          if (code->expr != NULL && code->expr->ts.type != BT_INTEGER)\n-            gfc_error (\"ASSIGNED GOTO statement at %L requires an INTEGER \"\n+          if (code->expr != NULL)\n+\t    {\n+\t      if (code->expr->ts.type != BT_INTEGER)\n+\t\tgfc_error (\"ASSIGNED GOTO statement at %L requires an INTEGER \"\n                        \"variable\", &code->expr->where);\n-          else\n+\t      else if (code->expr->symtree->n.sym->attr.assign != 1)\n+\t\tgfc_error (\"Variable '%s' has not been assigned a target label \"\n+\t\t\t\"at %L\", code->expr->symtree->n.sym->name,\n+\t\t\t&code->expr->where);\n+\t    }\n+\t  else\n             resolve_branch (code->label, code);\n \t  break;\n "}, {"sha": "c8db6e745e226e4feb29d15f73d2366be31d9472", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -242,6 +242,27 @@ build_field (segment_info *h, tree union_type, record_layout_info rli)\n                             size_binop (PLUS_EXPR,\n                                         DECL_FIELD_OFFSET (field),\n                                         DECL_SIZE_UNIT (field)));\n+  /* If this field is assigned to a label, we create another two variables.\n+     One will hold the address of taget label or format label. The other will\n+     hold the length of format label string.  */\n+  if (h->sym->attr.assign)\n+    {\n+      tree len;\n+      tree addr;\n+\n+      gfc_allocate_lang_decl (field);\n+      GFC_DECL_ASSIGN (field) = 1;\n+      len = gfc_create_var_np (gfc_charlen_type_node,h->sym->name);\n+      addr = gfc_create_var_np (pvoid_type_node, h->sym->name);\n+      TREE_STATIC (len) = 1;\n+      TREE_STATIC (addr) = 1;\n+      DECL_INITIAL (len) = build_int_cst (NULL_TREE, -2);\n+      gfc_set_decl_location (len, &h->sym->declared_at);\n+      gfc_set_decl_location (addr, &h->sym->declared_at);\n+      GFC_DECL_STRING_LEN (field) = pushdecl_top_level (len);\n+      GFC_DECL_ASSIGN_ADDR (field) = pushdecl_top_level (addr);\n+    }\n+\n   h->field = field;\n }\n \n@@ -434,7 +455,7 @@ create_common (gfc_common_head *com, segment_info * head)\n   for (s = head; s; s = next_s)\n     {\n       s->sym->backend_decl = build3 (COMPONENT_REF, TREE_TYPE (s->field),\n-\t\t\t\t     decl, s->field, NULL_TREE);\n+\t\t\t\tdecl, s->field, NULL_TREE);\n \n       next_s = s->next;\n       gfc_free (s);"}, {"sha": "416932173de32b795fe132b7bfac6194e48f1a94", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -397,7 +397,6 @@ set_string (stmtblock_t * block, stmtblock_t * postblock, tree var,\n   tree len;\n \n   gfc_init_se (&se, NULL);\n-  gfc_conv_expr (&se, e);\n \n   io = build3 (COMPONENT_REF, TREE_TYPE (var), ioparm_var, var, NULL_TREE);\n   len = build3 (COMPONENT_REF, TREE_TYPE (var_len), ioparm_var, var_len,\n@@ -406,6 +405,7 @@ set_string (stmtblock_t * block, stmtblock_t * postblock, tree var,\n   /* Integer variable assigned a format label.  */\n   if (e->ts.type == BT_INTEGER && e->symtree->n.sym->attr.assign == 1)\n     {\n+      gfc_conv_label_variable (&se, e);\n       msg =\n         gfc_build_cstring_const (\"Assigned label is not a format label\");\n       tmp = GFC_DECL_STRING_LEN (se.expr);\n@@ -417,6 +417,7 @@ set_string (stmtblock_t * block, stmtblock_t * postblock, tree var,\n     }\n   else\n     {\n+      gfc_conv_expr (&se, e);\n       gfc_conv_string_parameter (&se);\n       gfc_add_modify_expr (&se.pre, io, fold_convert (TREE_TYPE (io), se.expr));\n       gfc_add_modify_expr (&se.pre, len, se.string_length);"}, {"sha": "ea5da88fe7b90365bd0e16f4fd69441a0a97e5c0", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -80,7 +80,23 @@ gfc_trans_label_here (gfc_code * code)\n   return build1_v (LABEL_EXPR, gfc_get_label_decl (code->here));\n }\n \n+\n+/* Given a variable expression which has been ASSIGNed to, find the decl\n+   containing the auxiliary variables.  For variables in common blocks this\n+   is a field_decl.  */\n+\n+void\n+gfc_conv_label_variable (gfc_se * se, gfc_expr * expr)\n+{\n+  gcc_assert (expr->symtree->n.sym->attr.assign == 1);\n+  gfc_conv_expr (se, expr);\n+  /* Deals with variable in common block. Get the field declaration.  */\n+  if (TREE_CODE (se->expr) == COMPONENT_REF)\n+    se->expr = TREE_OPERAND (se->expr, 1);\n+}\n+\n /* Translate a label assignment statement.  */\n+\n tree\n gfc_trans_label_assign (gfc_code * code)\n {\n@@ -95,14 +111,17 @@ gfc_trans_label_assign (gfc_code * code)\n   /* Start a new block.  */\n   gfc_init_se (&se, NULL);\n   gfc_start_block (&se.pre);\n-  gfc_conv_expr (&se, code->expr);\n+  gfc_conv_label_variable (&se, code->expr);\n+\n   len = GFC_DECL_STRING_LEN (se.expr);\n   addr = GFC_DECL_ASSIGN_ADDR (se.expr);\n \n   label_tree = gfc_get_label_decl (code->label);\n \n   if (code->label->defined == ST_LABEL_TARGET)\n     {\n+      /* Shouldn't need to set this flag. Reserve for optimization bug.  */\n+      DECL_ARTIFICIAL (label_tree) = 0;\n       label_tree = gfc_build_addr_expr (pvoid_type_node, label_tree);\n       len_tree = integer_minus_one_node;\n     }\n@@ -140,7 +159,7 @@ gfc_trans_goto (gfc_code * code)\n   /* ASSIGNED GOTO.  */\n   gfc_init_se (&se, NULL);\n   gfc_start_block (&se.pre);\n-  gfc_conv_expr (&se, code->expr);\n+  gfc_conv_label_variable (&se, code->expr);\n   assign_error =\n     gfc_build_cstring_const (\"Assigned label is not a target label\");\n   tmp = GFC_DECL_STRING_LEN (se.expr);"}, {"sha": "712c530aaeec0858194436bbbe86f98a0cf51c2b", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -289,6 +289,8 @@ void gfc_conv_expr_lhs (gfc_se * se, gfc_expr * expr);\n void gfc_conv_expr_reference (gfc_se * se, gfc_expr *);\n /* Equivalent to convert(type, gfc_conv_expr_val(se, expr)).  */\n void gfc_conv_expr_type (gfc_se * se, gfc_expr *, tree);\n+/* Find the decl containing the auxiliary variables for assigned variables.  */\n+void gfc_conv_label_variable (gfc_se * se, gfc_expr * expr);\n /* If the value is not constant, Create a temporary and copy the value.  */\n tree gfc_evaluate_now (tree, stmtblock_t *);\n "}, {"sha": "765cc43c43c42ef03d9d2208770eb9bfdaedbae1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -1,3 +1,10 @@\n+2005-03-15  Feng Wang  <fengwang@nudt.edu.cn>\n+\n+\tPR fortran/18827\n+\t* gfortran.dg/assign_2.f90: New test.\n+\t* gfortran.dg/assign_3.f90: New test.\n+\t* gfortran.dg/assign.f90: New test.\n+\n 2005-03-15  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* g++.dg/other/cv_func.C, g++.dg/other/offsetof3.C,"}, {"sha": "516a3d7632ab91c7adcb6cac7fa7f9a0973b432d", "filename": "gcc/testsuite/gfortran.dg/assign.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign.f90?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do run }\n+! Program to test ASSIGNing a label to common variable. PR18827.\n+      program test\n+      integer i\n+      common i\n+      assign 2000 to i  ! { dg-warning \"Obsolete: ASSIGN statement\" }\n+2000  continue\n+      end"}, {"sha": "4119cd94f58a60794eec5060b425e046811b8a44", "filename": "gcc/testsuite/gfortran.dg/assign_2.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign_2.f90?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! Option passed to avoid excess errors from obsolete warning\n+! { dg-options \"-w\" }\n+! PR18827\n+      integer i,j\n+      common /foo/ i,j\n+      assign 1000 to j\n+      j = 5\n+      goto j\n+ 1000 continue\n+      end"}, {"sha": "a43b10c11b195747f0fc0ad72e051dbdad9ce1d0", "filename": "gcc/testsuite/gfortran.dg/assign_3.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2df7c64ae0185dab22bb38628acf8ae48551b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassign_3.f90?ref=ce2df7c64ae0185dab22bb38628acf8ae48551b7", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! Option passed to avoid excess errors from obsolete warning\n+! { dg-options \"-w\" }\n+! PR18827\n+      integer i,j\n+      equivalence (i,j)\n+      assign 1000 to i\n+      write (*, j) ! { dg-error \"not been assigned a format label\" }\n+      goto j   ! { dg-error \"not been assigned a target label\" }\n+ 1000 continue\n+      end"}]}