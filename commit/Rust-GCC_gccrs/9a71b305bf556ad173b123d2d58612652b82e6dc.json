{"sha": "9a71b305bf556ad173b123d2d58612652b82e6dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE3MWIzMDViZjU1NmFkMTczYjEyM2QyZDU4NjEyNjUyYjgyZTZkYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-30T00:51:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-30T00:51:13Z"}, "message": "* decl2.c (mark_used): Adjust error for use of deleted function.\n\nFrom-SVN: r161580", "tree": {"sha": "2bc73889c856176b1bd79beac62f6c6af63acf4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bc73889c856176b1bd79beac62f6c6af63acf4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a71b305bf556ad173b123d2d58612652b82e6dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a71b305bf556ad173b123d2d58612652b82e6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a71b305bf556ad173b123d2d58612652b82e6dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a71b305bf556ad173b123d2d58612652b82e6dc/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac1774315cb7ebc781ade2f9fd99de1c258b9221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1774315cb7ebc781ade2f9fd99de1c258b9221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1774315cb7ebc781ade2f9fd99de1c258b9221"}], "stats": {"total": 292, "additions": 146, "deletions": 146}, "files": [{"sha": "9ac64c4b6a0c1c0e2509e898bfa3fd66b258707b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -1,5 +1,7 @@\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n+\t* decl2.c (mark_used): Adjust error for use of deleted function.\n+\n \tMachinery to support implicit delete/move.\n \t* cp-tree.h: (struct lang_type_class): Add lazy_move_assign,\n \thas_complex_move_ctor, has_complex_move_assign bitfields."}, {"sha": "ce54c79f20e5c09c974d96f02171164a607ae1aa", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -4110,8 +4110,9 @@ mark_used (tree decl)\n \t      return;\n \t    }\n \t}\n-      error (\"deleted function %q+D\", decl);\n-      error (\"used here\");\n+      error (\"use of deleted function %qD\", decl);\n+      if (!maybe_explain_implicit_delete (decl))\n+\terror_at (DECL_SOURCE_LOCATION (decl), \"declared here\");\n       return;\n     }\n   /* If we don't need a value, then we don't need to synthesize DECL.  */"}, {"sha": "cf7180a3a5736cf16d030a6e025f1981137de606", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -1,5 +1,14 @@\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/defaulted10.C: Adjust for new deleted message.\n+\t* g++.dg/cpp0x/defaulted13.C: Adjust.\n+\t* g++.dg/cpp0x/defaulted2.C: Adjust.\n+\t* g++.dg/cpp0x/defaulted3.C: Adjust.\n+\t* g++.dg/cpp0x/initlist9.C: Adjust.\n+\t* g++.dg/cpp0x/lambda/lambda-errloc.C: Adjust.\n+\t* g++.dg/cpp0x/lambda/lambda-errloc2.C: Adjust.\n+\t* g++.dg/init/synth2.C: Adjust.\n+\n \t* g++.dg/cpp0x/defaulted19.C: New.\n \n \t* g++.dg/expr/string-1.C: Fix for -std=c++0x."}, {"sha": "64fa5f019309205e547f2ac4fd79fa8baf27fb80", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted10.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted10.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -3,12 +3,12 @@\n \n struct A\n {\n-  template<typename T> void foo(T) = delete; // { dg-error \"previously|deleted\" }\n+  template<typename T> void foo(T) = delete; // { dg-error \"previously|declared\" }\n };\n \n template<typename T> void A::foo(T) {} // { dg-error \"redefinition\" }\n \n void bar()\n {\n-  A().foo(0);\t\t\t// { dg-error \"used\" }\n+  A().foo(0);\t\t\t// { dg-error \"use\" }\n }"}, {"sha": "8b23579217ec0b4b3fa2834079cfddc441690877", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted13.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted13.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -7,22 +7,22 @@ struct NonCopyable {\n };\n \n template<>\n-NonCopyable<int>::NonCopyable(NonCopyable<int> const&) = delete; // { dg-error \"deleted\" }\n+NonCopyable<int>::NonCopyable(NonCopyable<int> const&) = delete; // { dg-error \"declared\" }\n \n template<typename T>\n NonCopyable<T>::NonCopyable(NonCopyable<T> const&) = default;\n \n template<>\n-NonCopyable<double>::NonCopyable(NonCopyable<double> const&) = delete; // { dg-error \"deleted\" }\n+NonCopyable<double>::NonCopyable(NonCopyable<double> const&) = delete; // { dg-error \"declared\" }\n \n \n int main()\n {\n   NonCopyable<double> nc_dbl;\n-  NonCopyable<double> nc_dbl_cpy(nc_dbl); // { dg-error \"used here\" }\n+  NonCopyable<double> nc_dbl_cpy(nc_dbl); // { dg-error \"use\" }\n \n   NonCopyable<int> nc_int;\n-  NonCopyable<int> nc_int_cpy(nc_int); // { dg-error \"used here\" }\n+  NonCopyable<int> nc_int_cpy(nc_int); // { dg-error \"use\" }\n \n   NonCopyable<char> nc_char;\n   NonCopyable<char> nc_char_cpy(nc_char);"}, {"sha": "909ebc5e6e09d9009e2360937a67111d575f4360", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted2.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -41,7 +41,7 @@ struct E\n struct F\n {\n   F() = default;\n-  F(const F&) = delete;\t\t// { dg-error \"deleted\" }\n+  F(const F&) = delete;\t\t// { dg-error \"declared\" }\n };\n \n struct G\n@@ -60,7 +60,7 @@ union U\n int main()\n {\n   F f;\n-  F f2(f);\t\t\t// { dg-error \"used\" }\n+  F f2(f);\t\t\t// { dg-error \"use\" }\n   B* b = new const B;\t\t// { dg-error \"uninitialized const\" }\n }\n "}, {"sha": "5e2116b53b31b196ad5ab47f877f3cfbfd9f4ee1", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted3.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -4,13 +4,13 @@\n template<class T>\n struct A {\n   template<class U>\n-  bool operator==(const A<U>&) = delete; // { dg-error \"deleted function\" }\n+  bool operator==(const A<U>&) = delete; // { dg-error \"declared\" }\n   operator bool () { return true; }\n };\n \n int main()\n {\n   A<int> a1;\n   A<void> a2;\n-  if(a1 == a2) {}\t\t// { dg-error \"used here\" }\n+  if(a1 == a2) {}\t\t// { dg-error \"use\" }\n }"}, {"sha": "d596b391508c653d7afe56e06ffc263720205be0", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist9.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -8,7 +8,7 @@ struct b\n   b() = default;\n   ~b() = default;\n   b& operator=(const b&) = delete;\n-  b(const b&) = delete;\t\t// { dg-error \"deleted\" }\n+  b(const b&) = delete;\t\t// { dg-error \"declared\" }\n \n   b(bool _t): t (_t) { }\n };\n@@ -19,7 +19,7 @@ int main()\n   b tst1 = { false };\n \n   // copy initialization.\n-  b tst2 = false;\t\t// { dg-error \"used here\" }\n+  b tst2 = false;\t\t// { dg-error \"use\" }\n \n   // direct list initialization\n   b tst3 { false };"}, {"sha": "f4766691eecfb2ee719e18f5360a55d97b94cf08", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-errloc.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-errloc.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-errloc.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-errloc.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -5,7 +5,7 @@\n struct A\n {\n   A();\n-  A(const A& a) = delete;\t// { dg-error \"deleted\" }\n+  A(const A& a) = delete;\t// { dg-error \"declared\" }\n };\n \n int main()"}, {"sha": "dab53f1276ef67c71e9dfc5dcb6d9f95faec9534", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-errloc2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-errloc2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-errloc2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-errloc2.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -3,14 +3,14 @@\n \n struct A {\n   A();\n-  A(const A&) = delete;\t\t// { dg-error \"deleted function\" }\n+  A(const A&) = delete;\t\t// { dg-error \"declared\" }\n };\n \n template <class T>\n void f()\n {\n   T t;\n-  [t] { return 0; };\t\t// { dg-error \"used here\" }\n+  [t] { return 0; };\t\t// { dg-error \"use\" }\n }\n \n int main()"}, {"sha": "507db34aa0c2945d75883df92602b16fe95fced6", "filename": "gcc/testsuite/g++.dg/init/synth2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -13,5 +13,5 @@ class A\t\t\t\t// { dg-error \"no match\" }\n int main()\n {\n   A a;\n-  A b = a;\t\t\t// { dg-message \"required here\" }\n+  A b = a;\t\t\t// { dg-message \"required here|deleted\" }\n }"}, {"sha": "5e0ebf832b1bac9b37a31f7a150c78f1446db4ff", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -1,3 +1,41 @@\n+2010-06-29  Jason Merrill  <jason@redhat.com>\n+\n+\t* 19_diagnostics/error_category/cons/copy_neg.cc: Adjust expected\n+\terrors, use dg-prune-output.\n+\t* 20_util/function/cmp/cmp_neg.cc: Likewise.\n+\t* 20_util/unique_ptr/assign/assign_neg.cc: Likewise.\n+\t* 20_util/unique_ptr/cons/pointer_array_convertible.cc: Likewise.\n+\t* 20_util/unique_ptr/modifiers/reset_neg.cc: Likewise.\n+\t* 29_atomics/atomic/cons/assign_neg.cc: Likewise.\n+\t* 29_atomics/atomic/cons/copy_neg.cc: Likewise.\n+\t* 29_atomics/atomic_address/cons/assign_neg.cc: Likewise.\n+\t* 29_atomics/atomic_address/cons/copy_neg.cc: Likewise.\n+\t* 29_atomics/atomic_flag/cons/assign_neg.cc: Likewise.\n+\t* 29_atomics/atomic_flag/cons/copy_neg.cc: Likewise.\n+\t* 29_atomics/atomic_integral/cons/assign_neg.cc: Likewise.\n+\t* 29_atomics/atomic_integral/cons/copy_neg.cc: Likewise.\n+\t* 29_atomics/condition_variable/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/condition_variable/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/condition_variable_any/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/condition_variable_any/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/future/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/future/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/mutex/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/mutex/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/packaged_task/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/packaged_task/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/promise/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/promise/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/recursive_mutex/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/recursive_mutex/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/recursive_timed_mutex/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/recursive_timed_mutex/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/thread/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/thread/cons/copy_neg.cc: Likewise.\n+\t* 30_threads/timed_mutex/cons/assign_neg.cc: Likewise.\n+\t* 30_threads/timed_mutex/cons/copy_neg.cc: Likewise.\n+\t* ext/ext_pointer/1_neg.cc: Likewise.\n+\n 2010-06-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/44708"}, {"sha": "12258cac0e4845be46b4ad381387aae0067226b7", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/copy_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -27,10 +27,10 @@ int main()\n   bool test __attribute__((unused)) = true;\n \n   __gnu_test::test_category c1;\n-  __gnu_test::test_category c2(c1); // { dg-error \"first required here\" }\n+  __gnu_test::test_category c2(c1); // { dg-error \"deleted\" }\n \n   return 0;\n }\n \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 72 }\n-// { dg-error \"used here\" \"\" { target *-*-* } 30 }\n+// { dg-prune-output \"testsuite_error\" }\n+// { dg-prune-output \"include\" }"}, {"sha": "bb3c25d1cd94e355be7fe55a52f3a86afea81376", "filename": "libstdc++-v3/testsuite/20_util/function/cmp/cmp_neg.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcmp%2Fcmp_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcmp%2Fcmp_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fcmp%2Fcmp_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -18,15 +18,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// { dg-prune-output \"include\" }\n+\n #include <functional>\n \n void test01()\n {\n   std::function<void()> f1;\n   std::function<void()> f2;\n-  f1 == f2;  // { dg-error \"here\" }\n-  f1 != f2;  // { dg-error \"here\" }\n-  // { dg-excess-errors \"\" }\n+  f1 == f2;  // { dg-error \"deleted\" }\n+  f1 != f2;  // { dg-error \"deleted\" }\n }\n \n int main()"}, {"sha": "95c1d5dc5ba83fd481d5e26ef7402525856c8300", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/assign_neg.cc", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -39,25 +39,14 @@ void\n test02()\n {\n   std::unique_ptr<int[]> p1(new int(420));\n-  std::unique_ptr<int[]> p2 = p1;\n+  std::unique_ptr<int[]> p2 = p1; // { dg-error \"deleted\" }\n }\n \n void\n test03()\n {\n-  std::unique_ptr<int[2]> p1(new int[3]);\n-  std::unique_ptr<int[2]> p2 = p1;\n+  std::unique_ptr<int[2]> p1(new int[3]); // { dg-error \"no match\" }\n+  std::unique_ptr<int[2]> p2 = p1; // { dg-error \"deleted\" }\n }\n \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 373 }\n-// { dg-error \"used here\" \"\" { target *-*-* } 42 }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 48 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 137 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 133 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 128 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 122 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 117 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 112 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 106 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 225 }\n-// { dg-error \"used here\" \"\" { target *-*-* } 49 }\n+// { dg-prune-output \"include\" }"}, {"sha": "2a4a89b403704875702c7d52c50d36f06d8d7ab4", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/pointer_array_convertible.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer_array_convertible.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer_array_convertible.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fpointer_array_convertible.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -37,4 +37,5 @@ test01()\n {\n   std::unique_ptr<B[]> B_from_A(new A[3]); //{ dg-error \"invalid conversion from\" }\n }\n-//{ dg-excess-errors \"initialization\" }\n+\n+// { dg-prune-output \"include\" }"}, {"sha": "29bb57d22b23dcb4f99e3cd49184dd11b9c6e223", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/modifiers/reset_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -32,8 +32,7 @@ struct B : A\n void test01()\n {\n   std::unique_ptr<B[]> up;\n-  up.reset(new A[3]);\n+  up.reset(new A[3]);\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 35 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 363 }\n+// { dg-prune-output \"include\" }"}, {"sha": "66f5a81a5e5898493db433aa852bdd796eaa04ff", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,4 +29,4 @@ int main()\n }\n \n // { dg-error \"ambiguous\" \"\" { target *-*-* } 522 }\n-// { dg-excess-errors \"In member function\" }\n+// { dg-prune-output \"include\" }"}, {"sha": "69b1eff12978a69cee3fb87d55dfa4fc1e3bf3d7", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,19 +28,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 561 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 229 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 247 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 265 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 283 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 301 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 319 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 337 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 355 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 373 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 391 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 409 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 427 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 445 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 463 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 481 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 561 }\n+// { dg-prune-output \"include\" }"}, {"sha": "9405e459bf8fc70ea4cd77afc2aa20f3080dc99c", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_address/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,4 +28,4 @@ void test01()\n   test_type t2;\n   t1 = t2;\t\t\t// { dg-error \"ambiguous\" }\n }\n-// { dg-excess-errors \"deleted function\" }\n+// { dg-prune-output \"include\" }"}, {"sha": "69f78eed1018d9163014eb5992c376a7a7d5276c", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_address/cons/copy_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -25,7 +25,7 @@ void test01()\n   // Copy.\n   typedef std::atomic_address test_type;\n   test_type t1;\n-  test_type t2(t1);\n+  test_type t2(t1);\t\t// { dg-error \"deleted\" }\n }\n-// { dg-error \"used here\" \"\" { target *-*-* } 28 }\n-// { dg-excess-errors \"deleted function\" }\n+\n+// { dg-prune-output \"include\" }"}, {"sha": "27c60ca2dc19ad4c50b9dbfe77188cf2526ceca1", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/cons/assign_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -26,7 +26,7 @@ void test01()\n   typedef std::atomic_flag test_type;\n   test_type t1;\n   test_type t2;\n-  t1 = t2;\n+  t1 = t2;\t\t\t// { dg-error \"deleted\" }\n }\n-// { dg-error \"used here\" \"\" { target *-*-* } 29 }\n-// { dg-excess-errors \"deleted function\" }\n+\n+// { dg-prune-output \"include\" }"}, {"sha": "9244f683d1f71383c9c458233082b88dca813844", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/cons/copy_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -25,7 +25,7 @@ void test01()\n   // Copy.\n   typedef std::atomic_flag test_type;\n   test_type t1;\n-  test_type t2(t1);\n+  test_type t2(t1);\t\t// { dg-error \"deleted\" }\n }\n-// { dg-error \"used here\" \"\" { target *-*-* } 28 }\n-// { dg-excess-errors \"deleted function\" }\n+\n+// { dg-prune-output \"include\" }"}, {"sha": "751c6cdc696572ba5e47c9cdbbb8f46b9c2296aa", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -30,4 +30,4 @@ int main()\n }\n \n // { dg-error \"ambiguous\" \"\" { target *-*-* } 522 }\n-// { dg-excess-errors \"In member function\" }\n+// { dg-prune-output \"include\" }"}, {"sha": "976a6991d43c74fc15d9077ae7d85b3427c3ec09", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,12 +29,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 561 }\n-// { dg-excess-errors \"deleted function\" }\n-// { dg-excess-errors \"deleted function\" }\n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 28 }\n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 567 }\n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 170 }\n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 399 }\n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 168 }\n-// { dg-excess-errors \"In member function\" }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 561 }\n+// { dg-prune-output \"include\" }"}, {"sha": "90648207e736c53d557f89f11161f9a3742251c6", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n   // assign\n   std::condition_variable c1;\n   std::condition_variable c2;\n-  c1 = c2;\n+  c1 = c2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 70 }\n+// { dg-prune-output \"include\" }"}, {"sha": "588e4f3c9540c4c28d35c059e7e20dc6717649fe", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -27,8 +27,7 @@ void test01()\n {\n   // copy\n   std::condition_variable c1;\n-  std::condition_variable c2(c1);\n+  std::condition_variable c2(c1); // { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 30 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 69 }\n+// { dg-prune-output \"include\" }"}, {"sha": "dac106c2ec495ba557fb85dcbb6b4c1165e1b8ae", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n   // assign\n   std::condition_variable_any c1;\n   std::condition_variable_any c2;\n-  c1 = c2;\n+  c1 = c2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 179 }\n+// { dg-prune-output \"include\" }"}, {"sha": "157f60f0335499f624b2c55c3c3a7a7e0cff580d", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -27,8 +27,7 @@ void test01()\n {\n   // copy\n   std::condition_variable_any c1;\n-  std::condition_variable_any c2(c1);\n+  std::condition_variable_any c2(c1); // { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 30 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 178 }\n+// { dg-prune-output \"include\" }"}, {"sha": "2aad5e9aa0ff5e6586c101e74ec3ff62c1b6b364", "filename": "libstdc++-v3/testsuite/30_threads/future/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -31,8 +31,7 @@ void test01()\n   // assign\n   std::future<int>& p1 = get();\n   std::future<int>& p2 = get();\n-  p1 = p2;\n+  p1 = p2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 34 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 581 }\n+// { dg-prune-output \"include\" }"}, {"sha": "5e6bccad82b6d3dcb9b5aa3a066e0ca34626fc08", "filename": "libstdc++-v3/testsuite/30_threads/future/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -30,8 +30,7 @@ void test01()\n {\n   // copy\n   std::future<int>& p1 = get();\n-  std::future<int> p2(p1);\n+  std::future<int> p2(p1);\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 33 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 580 }\n+// { dg-prune-output \"include\" }"}, {"sha": "20122348e6d169b4bd70777c1aa1d1557f66d149", "filename": "libstdc++-v3/testsuite/30_threads/mutex/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,8 +29,7 @@ void test01()\n   typedef std::mutex mutex_type;\n   mutex_type m1;\n   mutex_type m2;\n-  m1 = m2;\n+  m1 = m2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 32 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 82 }\n+// { dg-prune-output \"include\" }"}, {"sha": "3fd1cd97784376b1d99e587a5ad325dfb7c7d096", "filename": "libstdc++-v3/testsuite/30_threads/mutex/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n   // assign\n   typedef std::mutex mutex_type;\n   mutex_type m1;\n-  mutex_type m2(m1);\n+  mutex_type m2(m1);\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 81 }\n+// { dg-prune-output \"include\" }"}, {"sha": "414c861cc44967e55a8ad485bd8698d447b32836", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,8 +29,7 @@ void test01()\n   // assign\n   std::packaged_task<int()> p1;\n   std::packaged_task<int()> p2;\n-  p1 = p2;\n+  p1 = p2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 32 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 1228 }\n+// { dg-prune-output \"include\" }"}, {"sha": "93b0821943cc6a7af3b1412643a59d0875cc7ce0", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n {\n   // copy\n   std::packaged_task<int()> p1;\n-  std::packaged_task<int()> p2(p1);\n+  std::packaged_task<int()> p2(p1); // { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 1227 }\n+// { dg-prune-output \"include\" }"}, {"sha": "50b1c6e17bfae825f79d2f7a0dc5acab35cbaa0c", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,8 +29,7 @@ void test01()\n   // assign\n   std::promise<int> p1;\n   std::promise<int> p2;\n-  p1 = p2;\n+  p1 = p2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 32 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 871 }\n+// { dg-prune-output \"include\" }"}, {"sha": "5e43d0b1fda7e7fc62a61a1f5a62bcd18a139305", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n {\n   // copy\n   std::promise<int> p1;\n-  std::promise<int> p2(p1);\n+  std::promise<int> p2(p1);\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 855 }\n+// { dg-prune-output \"include\" }"}, {"sha": "2eeefd32c32816ded3ba5e39a17d7b2d4f35c8ff", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,8 +29,7 @@ void test01()\n   typedef std::recursive_mutex mutex_type;\n   mutex_type m1;\n   mutex_type m2;\n-  m1 = m2;\n+  m1 = m2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 32 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 134 }\n+// { dg-prune-output \"include\" }"}, {"sha": "232a70103a40bc5850921fce69f79377925d28ea", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n   // assign\n   typedef std::recursive_mutex mutex_type;\n   mutex_type m1;\n-  mutex_type m2(m1);\n+  mutex_type m2(m1);\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 133 }\n+// { dg-prune-output \"include\" }"}, {"sha": "1694423cb1f8da876f126232a3f0e697b93e7fa1", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,8 +29,7 @@ void test01()\n   typedef std::recursive_timed_mutex mutex_type;\n   mutex_type m1;\n   mutex_type m2;\n-  m1 = m2;\n+  m1 = m2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 32 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 297 }\n+// { dg-prune-output \"include\" }"}, {"sha": "c729d5b76a25125369892cbf7dcca782d32f179f", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n   // assign\n   typedef std::recursive_timed_mutex mutex_type;\n   mutex_type m1;\n-  mutex_type m2(m1);\n+  mutex_type m2(m1);\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 296 }\n+// { dg-prune-output \"include\" }"}, {"sha": "406d16085a39240154a326ea8a10f657dd78307c", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n   typedef std::thread test_type;\n   test_type t1;\n   test_type t2;\n-  t1 = t2;\n+  t1 = t2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 148 }\n+// { dg-prune-output \"include\" }"}, {"sha": "db06e72b0f36f6aea57b99af5f4c2a0a68f85bbc", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/copy_neg.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -27,9 +27,13 @@ void test01()\n   // copy\n   typedef std::thread test_type;\n   test_type t1;\n-  test_type t2(t1); // XXX this is failing for the wrong reason\n+  test_type t2(t1);\t\t// { dg-error \"deleted\" \"\" { xfail *-*-* } }\n }\n \n-// { dg-error \"here\" \"\" { target *-*-* } 30 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 126 }\n-// { dg-excess-errors \"In file included from\" }\n+// This is failing for the wrong reason; it should fail because we're\n+// trying to call the deleted copy constructor, but instead it fails\n+// because we try to call the thread(_Callable&&,_Args&&...) constructor\n+// and fail because thread isn't callable.  But that's OK for now.\n+// { dg-error \"\" \"\" { target *-*-* } 30 }\n+\n+// { dg-prune-output \"include\" }"}, {"sha": "7c9199f321b8b9b65e5ae1e071596714bc1771cd", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2Fassign_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -29,8 +29,7 @@ void test01()\n   typedef std::timed_mutex mutex_type;\n   mutex_type m1;\n   mutex_type m2;\n-  m1 = m2;\n+  m1 = m2;\t\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 32 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 192 }\n+// { dg-prune-output \"include\" }"}, {"sha": "2c388962e456bcf6322dd41885c88f7e1a5cddfa", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2Fcopy_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -28,8 +28,7 @@ void test01()\n   // assign\n   typedef std::timed_mutex mutex_type;\n   mutex_type m1;\n-  mutex_type m2(m1);\n+  mutex_type m2(m1);\t\t// { dg-error \"deleted\" }\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 31 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 191 }\n+// { dg-prune-output \"include\" }"}, {"sha": "0ceb9a6597ac9c873c98d0702607d848b8c54108", "filename": "libstdc++-v3/testsuite/ext/ext_pointer/1_neg.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a71b305bf556ad173b123d2d58612652b82e6dc/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fext_pointer%2F1_neg.cc?ref=9a71b305bf556ad173b123d2d58612652b82e6dc", "patch": "@@ -91,8 +91,4 @@ void test01(void) {\n   aptr5 = __const_pointer_cast<B_pointer>(cbptr);  // ok\n }\n \n-// { dg-error \"invalid conversion \" \"\" { target *-*-* } 314 }\n-// { dg-error \"invalid conversion \" \"\" { target *-*-* } 308 }\n-// { dg-error \"invalid conversion \" \"\" { target *-*-* } 331 }\n-// { dg-error \"invalid conversion \" \"\" { target *-*-* } 339 }\n-// { dg-excess-errors \"In constructor\" }\n+// { dg-prune-output \"include\" }"}]}