{"sha": "63538444fbce73fff2948e3357939b520f59afb8", "node_id": "C_kwDOANBUbNoAKDYzNTM4NDQ0ZmJjZTczZmZmMjk0OGUzMzU3OTM5YjUyMGY1OWFmYjg", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-17T14:41:28Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-18T08:08:07Z"}, "message": "struct-base: Add location info on `..` token", "tree": {"sha": "e8294499f3a0fdc409b80b40713f7281dac915e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8294499f3a0fdc409b80b40713f7281dac915e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63538444fbce73fff2948e3357939b520f59afb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63538444fbce73fff2948e3357939b520f59afb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63538444fbce73fff2948e3357939b520f59afb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63538444fbce73fff2948e3357939b520f59afb8/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d120c9db1811752e543ef8c231c1501a63dfcea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d120c9db1811752e543ef8c231c1501a63dfcea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d120c9db1811752e543ef8c231c1501a63dfcea2"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "7994aed49ea9ae49a72737bdae553a02209b806d", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63538444fbce73fff2948e3357939b520f59afb8/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63538444fbce73fff2948e3357939b520f59afb8/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=63538444fbce73fff2948e3357939b520f59afb8", "patch": "@@ -1514,11 +1514,11 @@ struct StructBase\n {\n private:\n   std::unique_ptr<Expr> base_struct;\n+  Location locus;\n \n public:\n-  // TODO: should this store location data?\n-  StructBase (std::unique_ptr<Expr> base_struct_ptr)\n-    : base_struct (std::move (base_struct_ptr))\n+  StructBase (std::unique_ptr<Expr> base_struct_ptr, Location locus)\n+    : base_struct (std::move (base_struct_ptr)), locus (locus)\n   {}\n \n   // Copy constructor requires clone\n@@ -1550,7 +1550,7 @@ struct StructBase\n   StructBase &operator= (StructBase &&other) = default;\n \n   // Returns a null expr-ed StructBase - error state\n-  static StructBase error () { return StructBase (nullptr); }\n+  static StructBase error () { return StructBase (nullptr, Location ()); }\n \n   // Returns whether StructBase is in error state\n   bool is_invalid () const { return base_struct == nullptr; }"}, {"sha": "445acad142975f5df8bc8e4d3dbeec307daeeec3", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63538444fbce73fff2948e3357939b520f59afb8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63538444fbce73fff2948e3357939b520f59afb8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=63538444fbce73fff2948e3357939b520f59afb8", "patch": "@@ -14441,6 +14441,7 @@ Parser<ManagedTokenSource>::parse_struct_expr_struct_partial (\n \tAST::StructBase struct_base = AST::StructBase::error ();\n \tif (lexer.peek_token ()->get_id () == DOT_DOT)\n \t  {\n+\t    Location dot_dot_location = lexer.peek_token ()->get_locus ();\n \t    lexer.skip_token ();\n \n \t    // parse required struct base expr\n@@ -14458,7 +14459,8 @@ Parser<ManagedTokenSource>::parse_struct_expr_struct_partial (\n \t    // DEBUG:\n \t    rust_debug (\"struct/enum expr - parsed and validated base expr\");\n \n-\t    struct_base = AST::StructBase (std::move (base_expr));\n+\t    struct_base\n+\t      = AST::StructBase (std::move (base_expr), dot_dot_location);\n \n \t    // DEBUG:\n \t    rust_debug (\"assigned struct base to new struct base \");"}]}