{"sha": "3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0NTJhMjg3MWZkYTRkODllNGViMTFmN2U1Y2I0MmRlMmY3YzI3YQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2012-11-13T18:56:24Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2012-11-13T18:56:24Z"}, "message": "re PR tree-optimization/55253 (Revision 193298 miscompiles sqlite with -Os)\n\n2012-11-13  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/55253\n\t* ipa-cp.c (merge_aggregate_lattices): Propagate aggs_contain_variable\n\tflag.\n\n\t* testsuite/gcc.dg/torture/pr55253.c: New test.\n\t* testsuite/gcc.dg/torture/pr55305.c: Likewise.\n\nFrom-SVN: r193484", "tree": {"sha": "2e4305eb8f869415fd2d6f9a8ac881faca13b49e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e4305eb8f869415fd2d6f9a8ac881faca13b49e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d10e419bebe07f5506836ea65ab7638321305305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10e419bebe07f5506836ea65ab7638321305305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10e419bebe07f5506836ea65ab7638321305305"}], "stats": {"total": 213, "additions": 213, "deletions": 0}, "files": [{"sha": "32b0102ac630a4161a98a7773c0d3f6fdc680c31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "patch": "@@ -1,3 +1,9 @@\n+2012-11-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/55253\n+\t* ipa-cp.c (merge_aggregate_lattices): Propagate aggs_contain_variable\n+\tflag.\n+\n 2012-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "82b0b53ce25d1bcc716cc474a9098147024d42d7", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "patch": "@@ -1276,6 +1276,8 @@ merge_aggregate_lattices (struct cgraph_edge *cs,\n     return true;\n   if (src_plats->aggs_bottom)\n     return set_agg_lats_contain_variable (dest_plats);\n+  if (src_plats->aggs_contain_variable)\n+    ret |= set_agg_lats_contain_variable (dest_plats);\n   dst_aglat = &dest_plats->aggs;\n \n   for (struct ipcp_agg_lattice *src_aglat = src_plats->aggs;"}, {"sha": "41a91af7de52b2794cdf2abd777bfc2f338266b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "patch": "@@ -1,3 +1,9 @@\n+2012-11-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/55253\n+\t* gcc.dg/torture/pr55253.c: New test.\n+\t* gcc.dg/torture/pr55305.c: Likewise.\n+\n 2012-11-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/55142"}, {"sha": "9f6491d4ca4d7fa1211e647df5c7ca3d29cbb004", "filename": "gcc/testsuite/gcc.dg/torture/pr55253.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55253.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55253.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55253.c?ref=3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do run } */\n+\n+struct\n+{\n+    int mallocFailed;\n+}\n+*a;\n+\n+struct StrAccum\n+{\n+    int useMalloc;\n+}\n+b, c;\n+\n+static void\n+fn1 (struct StrAccum *p1, int p2)\n+{\n+    if (p2 == 0)\n+        return;\n+    if (p1->useMalloc)\n+        a->mallocFailed = 0;\n+}\n+\n+void\n+fn2 (struct StrAccum *p1)\n+{\n+    fn1 (p1, 1);\n+}\n+\n+void\n+fn3 (struct StrAccum *p1)\n+{\n+    fn1 (p1, 1);\n+}\n+\n+void\n+fn4 ()\n+{\n+    c.useMalloc = 1;\n+    fn1 (&c, 0);\n+}\n+\n+int\n+main ()\n+{\n+    fn3 (&b);\n+    return 0;\n+}"}, {"sha": "fb61447151bbcc1254e513b29bc7428c0e7edb84", "filename": "gcc/testsuite/gcc.dg/torture/pr55305.c", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55305.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55305.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55305.c?ref=3e452a2871fda4d89e4eb11f7e5cb42de2f7c27a", "patch": "@@ -0,0 +1,151 @@\n+/* { dg-do run } */\n+\n+extern void exit (int) __attribute__ ((noreturn));\n+extern void abort (void) __attribute__ ((noreturn));\n+\n+struct t\n+{\n+  char dummy;\n+};\n+\n+struct m\n+{\n+  const struct t *t;\n+  void (*m)(void);\n+};\n+\n+struct s\n+{\n+  const struct m *m;\n+  void *o;\n+};\n+\n+struct e\n+{\n+  const struct t *t;\n+  void *o;\n+};\n+\n+struct ret\n+{\n+  struct s s;\n+  _Bool b;\n+};\n+\n+const struct t t1 = { 1 };\n+const struct t t2 = { 2 };\n+const struct t t3 = { 3 };\n+const struct t t4 = { 4 };\n+const struct t t5 = { 5 };\n+\n+void\n+pass (void)\n+{\n+  exit (0);\n+}\n+\n+void\n+fail (void)\n+{\n+  abort ();\n+}\n+\n+const struct m m1 = { &t4, fail };\n+const struct m m2 = { &t5, pass };\n+\n+static struct e f2 (struct s s2, void *p);\n+static struct e f3 (struct s, void *) __attribute__ ((noinline));\n+static void f4 (struct s, void *) __attribute__ ((noinline));\n+\n+struct ret c (struct s, const struct t *) __attribute__ ((noinline));\n+\n+struct ret\n+c (struct s s1, const struct t *t)\n+{\n+  struct ret r;\n+\n+  if (s1.m->t == t)\n+    {\n+      r.s.m = &m2;\n+      r.s.o = s1.o;\n+      r.b = 1;\n+    }\n+  else\n+    {\n+      r.s.m = 0;\n+      r.s.o = 0;\n+      r.b = 0;\n+    }\n+  return r;\n+}\n+\n+void *m (void) __attribute__ ((noinline));\n+\n+void *\n+m (void)\n+{\n+  return 0;\n+}\n+\n+struct e\n+f1 (struct s s1, void *p)\n+{\n+  struct ret r;\n+  void *a;\n+  struct s a2;\n+\n+  r = c (s1, &t5);\n+  if (r.b)\n+    return f2 (r.s, p);\n+  a = m ();\n+  a2.m = &m1;\n+  a2.o = a;\n+  return f2 (a2, p);\n+}\n+\n+static struct e\n+f2 (struct s s2, void *p)\n+{\n+  struct e e1;\n+\n+  e1 = f3 (s2, p);\n+  if (e1.t == &t2 && e1.o == 0)\n+    {\n+      e1.t = 0;\n+      e1.o = 0;\n+    }\n+  return e1;\n+}\n+\n+static struct e\n+f3 (struct s s1, void *p)\n+{\n+  struct e r;\n+\n+  f4 (s1, p);\n+  r.t = &t3;\n+  r.o = 0;\n+  return r;\n+}\n+\n+struct s g1;\n+void *g2;\n+\n+static void\n+f4 (struct s s1, void *p)\n+{\n+  g1 = s1;\n+  g2 = p;\n+  s1.m->m ();\n+}\n+\n+int\n+main ()\n+{\n+  struct s s1;\n+\n+  s1.m = &m2;\n+  s1.o = 0;\n+  f1 (s1, 0);\n+  abort ();\n+}"}]}