{"sha": "d420206ea581d85273f6d05280e658d3fdab604e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQyMDIwNmVhNTgxZDg1MjczZjZkMDUyODBlNjU4ZDNmZGFiNjA0ZQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-02-17T21:08:24Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-02-17T21:08:24Z"}, "message": "re PR target/64793 ([SH] missed delay slot)\n\ngcc/\n\tPR target/64793\n\t* config/sh/sh.md (cbranch define_delay): Set annulled true branch insn\n\tto nil.  Adjust comments.\n\ngcc/testsuite/\n\tPR target/64793\n\t* gcc.target/sh/pr64793.c: New.\n\t* gcc.target/sh/pr51244-20-sh2a.c: Adjust expected cmp/gt insn count.\n\nFrom-SVN: r220772", "tree": {"sha": "f62223965634e9d640fb8c9d3249b7e1db59a390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f62223965634e9d640fb8c9d3249b7e1db59a390"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d420206ea581d85273f6d05280e658d3fdab604e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d420206ea581d85273f6d05280e658d3fdab604e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d420206ea581d85273f6d05280e658d3fdab604e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d420206ea581d85273f6d05280e658d3fdab604e/comments", "author": null, "committer": null, "parents": [{"sha": "1379ce8fafed69709dc33fb6dadf26711bdca913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1379ce8fafed69709dc33fb6dadf26711bdca913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1379ce8fafed69709dc33fb6dadf26711bdca913"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "754c373cb5102bc0b45ebd50208fe429e865a9cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d420206ea581d85273f6d05280e658d3fdab604e", "patch": "@@ -1,3 +1,9 @@\n+2015-02-17  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/64793\n+\t* config/sh/sh.md (cbranch define_delay): Set annulled true branch insn\n+\tto nil.  Adjust comments.\n+\n 2015-02-17  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-visibility.c (function_and_variable_visibility): Only"}, {"sha": "94a01af6ba01ab6cc3c041d093e9a11c3daa59ea", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=d420206ea581d85273f6d05280e658d3fdab604e", "patch": "@@ -593,20 +593,10 @@\n   [(and (eq_attr \"in_delay_slot\" \"yes\")\n \t(eq_attr \"type\" \"!pstore,prget\")) (nil) (nil)])\n \n-;; Say that we have annulled true branches, since this gives smaller and\n-;; faster code when branches are predicted as not taken.\n-\n-;; ??? The non-annulled condition should really be \"in_delay_slot\",\n-;; but insns that can be filled in non-annulled get priority over insns\n-;; that can only be filled in anulled.\n-\n+;; Conditional branches with delay slots are available starting with SH2.\n (define_delay\n-  (and (eq_attr \"type\" \"cbranch\")\n-       (match_test \"TARGET_SH2\"))\n-  ;; SH2e has a hardware bug that pretty much prohibits the use of\n-  ;; annulled delay slots.\n-  [(eq_attr \"cond_delay_slot\" \"yes\") (and (eq_attr \"cond_delay_slot\" \"yes\")\n-\t\t\t\t\t  (not (eq_attr \"cpu\" \"sh2e\"))) (nil)])\n+  (and (eq_attr \"type\" \"cbranch\") (match_test \"TARGET_SH2\"))\n+  [(eq_attr \"cond_delay_slot\" \"yes\") (nil) (nil)])\n \f\n ;; -------------------------------------------------------------------------\n ;; SImode signed integer comparisons"}, {"sha": "1bd4bac0eb50cca6ef9e9c85e74f66ca23222216", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d420206ea581d85273f6d05280e658d3fdab604e", "patch": "@@ -1,3 +1,9 @@\n+2015-02-17  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/64793\n+\t* gcc.target/sh/pr64793.c: New.\n+\t* gcc.target/sh/pr51244-20-sh2a.c: Adjust expected cmp/gt insn count.\n+\n 2015-02-17  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.target/arm/divzero.c: New test case."}, {"sha": "2c6f365a587920a97399901bcf65039293603029", "filename": "gcc/testsuite/gcc.target/sh/pr51244-20-sh2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51244-20-sh2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51244-20-sh2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51244-20-sh2a.c?ref=d420206ea581d85273f6d05280e658d3fdab604e", "patch": "@@ -8,7 +8,7 @@\n /* { dg-final { scan-assembler-times \"nott\" 2 } } */\n /* { dg-final { scan-assembler-times \"cmp/eq\" 2 } } */\n /* { dg-final { scan-assembler-times \"cmp/hi\" 4 } } */\n-/* { dg-final { scan-assembler-times \"cmp/gt\" 3 } } */\n+/* { dg-final { scan-assembler-times \"cmp/gt\" 2 } } */\n /* { dg-final { scan-assembler-not \"not\\t\" } } */\n \n #include \"pr51244-20.c\""}, {"sha": "5bcc1e69b85b984590afbf9ad07b91a5fb6d4a4d", "filename": "gcc/testsuite/gcc.target/sh/pr64793.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr64793.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d420206ea581d85273f6d05280e658d3fdab604e/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr64793.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr64793.c?ref=d420206ea581d85273f6d05280e658d3fdab604e", "patch": "@@ -0,0 +1,18 @@\n+/* Check that the delay slot of an rts insn is filled, if it follows a cbranch\n+   with an unfilled delay slot, as in:\n+\tbt\t.L3\n+\tmov\tr7,r0\t<<< this insn\n+\trts\n+\tnop\t\t<<< should go into this delay slot\n+*/\n+/* { dg-do compile }  */\n+/* { dg-options \"-O2\" }  */\n+/* { dg-final { scan-assembler-not \"nop\" } }  */\n+\n+int\n+test_0 (const char* x, int a, int b, int c)\n+{\n+  if (x[a] == 92)\n+    return b;\n+  return c;\n+}"}]}