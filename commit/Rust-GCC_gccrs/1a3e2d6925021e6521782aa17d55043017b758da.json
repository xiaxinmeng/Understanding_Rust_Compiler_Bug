{"sha": "1a3e2d6925021e6521782aa17d55043017b758da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEzZTJkNjkyNTAyMWU2NTIxNzgyYWExN2Q1NTA0MzAxN2I3NThkYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-06T13:29:42Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-06T13:29:42Z"}, "message": "20040112-1.c: Fix defaulting to int.\n\n\t* gcc.target/i386/20040112-1.c: Fix defaulting to int.\n\t* gcc.target/i386/avxfp-1.c: Likewise.\n\t* gcc.target/i386/avxfp-2.c: Likewise.\n\t* gcc.target/i386/cadd.c: Likewise.\n\t* gcc.target/i386/cmov2.c: Likewise.\n\t* gcc.target/i386/cmov3.c: Likewise.\n\t* gcc.target/i386/cmov4.c: Likewise.\n\t* gcc.target/i386/cold-attribute-1.c: Likewise.\n\t* gcc.target/i386/cvt-1.c: Likewise.\n\t* gcc.target/i386/fpcvt-1.c: Likewise.\n\t* gcc.target/i386/fpcvt-2.c: Likewise.\n\t* gcc.target/i386/fpcvt-3.c: Likewise.\n\t* gcc.target/i386/local.c: Likewise.\n\t* gcc.target/i386/memcpy-2.c: Likewise.\n\t* gcc.target/i386/memcpy-3.c: Likewise.\n\t* gcc.target/i386/memset-1.c: Likewise.\n\t* gcc.target/i386/minmax-1.c: Likewise.\n\t* gcc.target/i386/minmax-2.c: Likewise.\n\t* gcc.target/i386/pr45352-2.c: Likewise.\n\t* gcc.target/i386/pr46253.c: Likewise.\n\t* gcc.target/i386/pr53623.c: Likewise.\n\t* gcc.target/i386/pr60902.c: Likewise.\n\t* gcc.target/i386/pr57003.c: Likewise.\n\t* gcc.target/i386/sse-14.c: Likewise.\n\t* gcc.target/i386/sse-19.c: Likewise.\n\t* gcc.target/i386/sse-22.c: Likewise.\n\t* gcc.target/i386/sse4a-extract.c: Likewise.\n\t* gcc.target/i386/sse4a-insert.c: Likewise.\n\t* gcc.target/i386/ssefp-1.c: Likewise.\n\t* gcc.target/i386/ssefp-2.c: Likewise.\n\t* gcc.target/i386/testimm-10.c: Likewise.\n\t* gcc.target/i386/vectorize4-avx.c: Likewise.\n\t* gcc.target/i386/980709-1.c: Fix implicit declarations.\n\t* gcc.target/i386/avx-pr57233.c: Likewise.\n\t* gcc.target/i386/avx2-pr57233.c: Likewise.\n\t* gcc.target/i386/avx2-vpop-check.h: Likewise.\n\t* gcc.target/i386/avx256-unaligned-load-7.c: Likewise.\n\t* gcc.target/i386/avx256-unaligned-store-7.c: Likewise.\n\t* gcc.target/i386/crc32-4.c: Likewise.\n\t* gcc.target/i386/pr20204.c: Likewise.\n\t* gcc.target/i386/pr23570.c: Likewise.\n\t* gcc.target/i386/pr26449-1.c: Likewise.\n\t* gcc.target/i386/pr28839.c: Likewise.\n\t* gcc.target/i386/pr37101.c: Likewise.\n\t* gcc.target/i386/pr61923.c: Likewise.\n\t* gcc.target/i386/shrink_wrap_1.c: Likewise.\n\t* gcc.target/i386/sse2-pr57233.c: Likewise.\n\t* gcc.target/i386/vect-abs-s16.c: Likewise.\n\t* gcc.target/i386/vect-abs-s32.c: Likewise.\n\t* gcc.target/i386/vect-abs-s8.c: Likewise.\n\t* gcc.target/i386/xop-pr57233.c: Likewise.\n\t* gcc.target/i386/xop-rotate2-vector.c: Likewise.\n\t* gcc.target/i386/cold-attribute-2.c: Fix defaulting to int.  Fix\n\timplicit declarations.\n\t* gcc.target/i386/xop-shift1-vector.c: Fix typo.\n\t* gcc.target/i386/xop-shift2-vector.c: Likewise.\n\t* gcc.target/i386/xop-shift3-vector.c: Likewise.\n\nFrom-SVN: r215939", "tree": {"sha": "f6b534f8e881e787d007b431be71d646639eac16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6b534f8e881e787d007b431be71d646639eac16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a3e2d6925021e6521782aa17d55043017b758da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a3e2d6925021e6521782aa17d55043017b758da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a3e2d6925021e6521782aa17d55043017b758da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a3e2d6925021e6521782aa17d55043017b758da/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9918374125a5d9745ebe6097f04d9eac47769600", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9918374125a5d9745ebe6097f04d9eac47769600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9918374125a5d9745ebe6097f04d9eac47769600"}], "stats": {"total": 173, "additions": 147, "deletions": 26}, "files": [{"sha": "8749053a14b7893fcd1f505b371222f24e967680", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,3 +1,63 @@\n+2014-10-06  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.target/i386/20040112-1.c: Fix defaulting to int.\n+\t* gcc.target/i386/avxfp-1.c: Likewise.\n+\t* gcc.target/i386/avxfp-2.c: Likewise.\n+\t* gcc.target/i386/cadd.c: Likewise.\n+\t* gcc.target/i386/cmov2.c: Likewise.\n+\t* gcc.target/i386/cmov3.c: Likewise.\n+\t* gcc.target/i386/cmov4.c: Likewise.\n+\t* gcc.target/i386/cold-attribute-1.c: Likewise.\n+\t* gcc.target/i386/cvt-1.c: Likewise.\n+\t* gcc.target/i386/fpcvt-1.c: Likewise.\n+\t* gcc.target/i386/fpcvt-2.c: Likewise.\n+\t* gcc.target/i386/fpcvt-3.c: Likewise.\n+\t* gcc.target/i386/local.c: Likewise.\n+\t* gcc.target/i386/memcpy-2.c: Likewise.\n+\t* gcc.target/i386/memcpy-3.c: Likewise.\n+\t* gcc.target/i386/memset-1.c: Likewise.\n+\t* gcc.target/i386/minmax-1.c: Likewise.\n+\t* gcc.target/i386/minmax-2.c: Likewise.\n+\t* gcc.target/i386/pr45352-2.c: Likewise.\n+\t* gcc.target/i386/pr46253.c: Likewise.\n+\t* gcc.target/i386/pr53623.c: Likewise.\n+\t* gcc.target/i386/pr60902.c: Likewise.\n+\t* gcc.target/i386/pr57003.c: Likewise.\n+\t* gcc.target/i386/sse-14.c: Likewise.\n+\t* gcc.target/i386/sse-19.c: Likewise.\n+\t* gcc.target/i386/sse-22.c: Likewise.\n+\t* gcc.target/i386/sse4a-extract.c: Likewise.\n+\t* gcc.target/i386/sse4a-insert.c: Likewise.\n+\t* gcc.target/i386/ssefp-1.c: Likewise.\n+\t* gcc.target/i386/ssefp-2.c: Likewise.\n+\t* gcc.target/i386/testimm-10.c: Likewise.\n+\t* gcc.target/i386/vectorize4-avx.c: Likewise.\n+\t* gcc.target/i386/980709-1.c: Fix implicit declarations.\n+\t* gcc.target/i386/avx-pr57233.c: Likewise.\n+\t* gcc.target/i386/avx2-pr57233.c: Likewise.\n+\t* gcc.target/i386/avx2-vpop-check.h: Likewise.\n+\t* gcc.target/i386/avx256-unaligned-load-7.c: Likewise.\n+\t* gcc.target/i386/avx256-unaligned-store-7.c: Likewise.\n+\t* gcc.target/i386/crc32-4.c: Likewise.\n+\t* gcc.target/i386/pr20204.c: Likewise.\n+\t* gcc.target/i386/pr23570.c: Likewise.\n+\t* gcc.target/i386/pr26449-1.c: Likewise.\n+\t* gcc.target/i386/pr28839.c: Likewise.\n+\t* gcc.target/i386/pr37101.c: Likewise.\n+\t* gcc.target/i386/pr61923.c: Likewise.\n+\t* gcc.target/i386/shrink_wrap_1.c: Likewise.\n+\t* gcc.target/i386/sse2-pr57233.c: Likewise.\n+\t* gcc.target/i386/vect-abs-s16.c: Likewise.\n+\t* gcc.target/i386/vect-abs-s32.c: Likewise.\n+\t* gcc.target/i386/vect-abs-s8.c: Likewise.\n+\t* gcc.target/i386/xop-pr57233.c: Likewise.\n+\t* gcc.target/i386/xop-rotate2-vector.c: Likewise.\n+\t* gcc.target/i386/cold-attribute-2.c: Fix defaulting to int.  Fix\n+\timplicit declarations.\n+\t* gcc.target/i386/xop-shift1-vector.c: Fix typo.\n+\t* gcc.target/i386/xop-shift2-vector.c: Likewise.\n+\t* gcc.target/i386/xop-shift3-vector.c: Likewise.\n+\n 2014-10-06  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/20001012-1.c: Fix defaulting to int."}, {"sha": "9dd0989c1014f1e0bb8acfd3a9d15d744ecb38b3", "filename": "gcc/testsuite/gcc.target/i386/20040112-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20040112-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20040112-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20040112-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n /* { dg-final { scan-assembler \"testb\" } } */\n+void\n ftn (char *sp)\n {\n   char status;"}, {"sha": "dcc873fbca6c2dae8bb4b7d71804594445bc1eee", "filename": "gcc/testsuite/gcc.target/i386/980709-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980709-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980709-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980709-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -13,6 +13,7 @@ extern __inline__ int test_and_set_bit(int nr, volatile void * addr)\n struct buffer_head {\n \tunsigned long b_state;\t\t \n };\n+void __wait_on_buffer (struct buffer_head *);\n extern void lock_buffer(struct buffer_head * bh)\n {\n \twhile (test_and_set_bit(2 , &bh->b_state))"}, {"sha": "136349524817fe110c01b0e408b034411ca72961", "filename": "gcc/testsuite/gcc.target/i386/avx-pr57233.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr57233.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr57233.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr57233.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -4,6 +4,8 @@\n \n #include \"avx-check.h\"\n \n+int do_main (void);\n+\n static void\n avx_test (void)\n {"}, {"sha": "e0c8b96d28b9401b1572e3e6a8f56a3fe3048508", "filename": "gcc/testsuite/gcc.target/i386/avx2-pr57233.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr57233.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr57233.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr57233.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -4,6 +4,8 @@\n \n #include \"avx2-check.h\"\n \n+int do_main (void);\n+\n static void\n avx2_test (void)\n {"}, {"sha": "c590940e7ec885e89ddc851e7ec05ff1b0d6aee9", "filename": "gcc/testsuite/gcc.target/i386/avx2-vpop-check.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-vpop-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-vpop-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-vpop-check.h?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -6,6 +6,7 @@ TYPE a[SIZE];\n TYPE b[SIZE];\n TYPE c[SIZE];\n volatile TYPE c_ref[SIZE];\n+extern int memcmp (const void *, const void *, size_t);\n \n __attribute__ ((__noinline__))\n void"}, {"sha": "4a94e0359ff0562ee85afe155e8e74b57faa9159", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-load-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-7.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -10,6 +10,7 @@ char **ep;\n char **fp;\n char **mp;\n char **lp;\n+extern int strcmp (const char *, const char *);\n \n __attribute__ ((noinline))\n void"}, {"sha": "85e387a4ea5237d9a30aeaf1b25f85fb480e72a6", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-store-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-7.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -8,6 +8,7 @@\n \n char **ep;\n char **fp;\n+extern int strcmp (const char *, const char *);\n \n __attribute__ ((noinline))\n void"}, {"sha": "f8af94bf5af635534cd9dac2c5e886b68934647e", "filename": "gcc/testsuite/gcc.target/i386/avxfp-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,12 +3,14 @@\n /* { dg-final { scan-assembler \"vmaxsd\" } } */\n /* { dg-final { scan-assembler \"vminsd\" } } */\n double x;\n+void\n t()\n {\n   x=x>5?x:5;\n }\n \n double x;\n+void\n q()\n {\n   x=x<5?x:5;"}, {"sha": "c4a00ad6e4830bb6e4cb95839c47bd7afd8cc213", "filename": "gcc/testsuite/gcc.target/i386/avxfp-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,12 +3,14 @@\n /* { dg-final { scan-assembler \"vmaxsd\" } } */\n /* { dg-final { scan-assembler \"vminsd\" } } */\n double x;\n+void\n q()\n {\n   x=x<5?5:x;\n }\n \n double x;\n+void\n q1()\n {\n   x=x>5?5:x;"}, {"sha": "0c03ec30e2e5e795d28401f2e83af84a9d5462e9", "filename": "gcc/testsuite/gcc.target/i386/cadd.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcadd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcadd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcadd.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -6,6 +6,7 @@ extern void abort (void);\n \n /* Conditional increment is best done using sbb $-1, val.  */\n int t[]={0,0,0,0,1,1,1,1,1,1};\n+void\n q()\n {\n   int sum=0;\n@@ -16,6 +17,7 @@ q()\n   if (sum != 6)\n     abort ();\n }\n+int\n main()\n {\n   int i;"}, {"sha": "d5fa16b359a035e22c2f1c8d0479de2cd5b5ac35", "filename": "gcc/testsuite/gcc.target/i386/cmov2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n /* { dg-final { scan-assembler \"sbb\" } } */\n \n /* This conditional move is fastest to be done using sbb.  */\n+int\n t(unsigned int a, unsigned int b)\n {\n   return (a<=b?5:-5);"}, {"sha": "a2cf77ae5238f3db81a059da3426bc9f76ef1047", "filename": "gcc/testsuite/gcc.target/i386/cmov3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov3.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n /* { dg-final { scan-assembler \"cmov\\[^3\\]\" } } */\n \n /* This conditional move is fastest to be done using cmov.  */\n+int\n t(int a, int b)\n {\n   return (a<=b?5:-5);"}, {"sha": "2bcb74fa08c7cfce34cf3b917b80a2554338d3ff", "filename": "gcc/testsuite/gcc.target/i386/cmov4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov4.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -6,6 +6,7 @@\n int ARCHnodes;\n int *nodekind;\n float *nodekindf;\n+void\n t()\n {\n int i;"}, {"sha": "57666ac60b68eff359baa76b259e76d5db00d0ee", "filename": "gcc/testsuite/gcc.target/i386/cold-attribute-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcold-attribute-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcold-attribute-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcold-attribute-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -2,11 +2,12 @@\n /* { dg-options \"-O2\" } */\n #include <string.h>\n static inline\n-__attribute__ ((cold))\n+__attribute__ ((cold)) void\n my_cold_memset (void *a, int b,int c)\n {\n   memset (a,b,c);\n }\n+void\n t(void *a,int b,int c)\n {\n   if (a)"}, {"sha": "4e6647e10fb742395ce301657779a5b114930661", "filename": "gcc/testsuite/gcc.target/i386/cold-attribute-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcold-attribute-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcold-attribute-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcold-attribute-2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 --param=builtin-expect-probability=100\" } */\n #include <string.h>\n+void cold_hint (void);\n+int\n t(int c)\n {\n   if (__builtin_expect (c, 0))"}, {"sha": "a2051ed1a53e45121e6abf7ae69f31a96505c11f", "filename": "gcc/testsuite/gcc.target/i386/crc32-4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-4.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -2,6 +2,9 @@\n /* { dg-options \"-O2 -mno-sse4.2 -mno-crc32\" } */\n /* { dg-final { scan-assembler \"__builtin_ia32_crc32di\" } } */\n \n+unsigned long long __builtin_ia32_crc32di (unsigned long long x,\n+\t\t\t\t\t   unsigned long long y);\n+\n unsigned long long\n crc32d (unsigned long long x, unsigned long long y)\n {"}, {"sha": "fdcd9e0380a01b7687ab42224cb837b30b4ce054", "filename": "gcc/testsuite/gcc.target/i386/cvt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcvt-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -5,6 +5,7 @@\n int a,a1;\n double b;\n float b1;\n+void\n t()\n {\n \ta=b;"}, {"sha": "0bac9e0bc044ece20b8cc94aeb467c6243581c7f", "filename": "gcc/testsuite/gcc.target/i386/fpcvt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler-not \"cvtss2sd\" } } */\n float a,b;\n+int\n main()\n {\n   a=b*3.0;"}, {"sha": "5da7686e0cab40ede7d6b05c58ca473423a6b2fd", "filename": "gcc/testsuite/gcc.target/i386/fpcvt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler-not \"cvtss2sd\" } } */\n float a,b;\n+int\n main()\n {\n \treturn a<0.0;"}, {"sha": "3d5362428e431d1d13cef847bae2ac7c5236688f", "filename": "gcc/testsuite/gcc.target/i386/fpcvt-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffpcvt-3.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n /* { dg-final { scan-assembler-not \"cvtss2sd\" } } */\n extern double fabs (double);\n float a,b;\n+int\n main()\n {\n \ta=fabs(b)+1.0;"}, {"sha": "9a353d97a34722f1203d90326c3fcae59c78dd20", "filename": "gcc/testsuite/gcc.target/i386/local.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -4,15 +4,15 @@\n /* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*(edi|ecx)\" { target { ! { ia32 } } } } } */\n \n /* Verify that local calling convention is used.  */\n-static t(int) __attribute__ ((noinline));\n+static void t(int) __attribute__ ((noinline));\n extern volatile int i;\n \n void m(void)\n {\n \tt(i);\n }\n \n-static t(int a)\n+static void t(int a)\n {\n \tasm(\"magic %0\"::\"g\"(a));\n }"}, {"sha": "76725c963af93746cc9870487c95da1dcdbe15d3", "filename": "gcc/testsuite/gcc.target/i386/memcpy-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2\" } */\n void *a;\n void *b;\n+void\n t(unsigned int c)\n {\n   if (c<10)"}, {"sha": "424d2f8d703cf6fed9a9dca635e9f548ec0d52ac", "filename": "gcc/testsuite/gcc.target/i386/memcpy-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-3.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2\" } */\n void *a;\n void *b;\n+void\n t(int c)\n {\n   if (c<10)"}, {"sha": "5e0f0b15340ab2fcf50819f7d12b424b95a6962c", "filename": "gcc/testsuite/gcc.target/i386/memset-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemset-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -36,6 +36,7 @@ static union {\n \n char A = 'A';\n \n+int\n main ()\n {\n   int off, len, i;"}, {"sha": "b92b8f948a8f40131a381edf2d731ac2c867c5dd", "filename": "gcc/testsuite/gcc.target/i386/minmax-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fminmax-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fminmax-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fminmax-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n /* { dg-final { scan-assembler \"test\" } } */\n /* { dg-final { scan-assembler-not \"cmp\" } } */\n #define max(a,b) (((a) > (b))? (a) : (b))\n+int\n t(int a)\n {\n   return (max(a,1));"}, {"sha": "a5cdf93eb543cb51ab8726804e974ed2d796db7e", "filename": "gcc/testsuite/gcc.target/i386/minmax-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fminmax-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fminmax-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fminmax-2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n /* { dg-final { scan-assembler \"test\" } } */\n /* { dg-final { scan-assembler-not \"cmp\" } } */\n #define max(a,b) (((a) > (b))? (a) : (b))\n+unsigned int\n t(unsigned int a)\n {\n   return (max(a,1));"}, {"sha": "3d1f015fd93b893e87fa8b68450bcf22a68ca984", "filename": "gcc/testsuite/gcc.target/i386/pr20204.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr20204.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr20204.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr20204.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n \n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n+\n void *x (void *pdst, const void *psrc, unsigned int pn)\n {\n   register void *return_dst = pdst;"}, {"sha": "bf4e95a572415040b2e953fed5a33548e546d27c", "filename": "gcc/testsuite/gcc.target/i386/pr23570.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23570.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23570.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23570.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -71,6 +71,9 @@ sse_swap_rowf (float *r1, float *r2, int n)\n     }\n }\n \n+void swap_index (int *, int, int);\n+void sse_add_rowf (float *, float *, float, int);\n+\n void\n ludcompf (float *m, int nw, int *prow, int n)\n {"}, {"sha": "47849d3d0de0b8fcce10ff5c7c105d8c10ad3293", "filename": "gcc/testsuite/gcc.target/i386/pr26449-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26449-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26449-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26449-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n \n typedef short __v8hi __attribute__ ((__vector_size__ (16)));\n typedef long long __m128i __attribute__ ((__vector_size__ (16)));\n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n void sse2_test (void)\n {"}, {"sha": "ff4c79d34d41a549332ec87c40d28bf8fcb34d2a", "filename": "gcc/testsuite/gcc.target/i386/pr28839.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr28839.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr28839.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr28839.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n \n static int ready[10];\n void abort (void);\n+int b (void);\n void test_once (int t,int t1)\n {\n   int i, repeat;"}, {"sha": "0675f0fc6e8cdc09df41faf2e79b793665ffcfb3", "filename": "gcc/testsuite/gcc.target/i386/pr37101.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37101.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37101.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37101.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -20,6 +20,7 @@ typedef struct _ClientResource\n } ClientResourceRec;\n \n static ClientResourceRec clientTable[256];\n+int Hash (int, unsigned int);\n \n void\n RebuildTable (int client)"}, {"sha": "47e428c20b042aae51e95b2d63cb7d22bddb818b", "filename": "gcc/testsuite/gcc.target/i386/pr45352-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45352-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45352-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45352-2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -2,8 +2,8 @@\n /* { dg-options \"-O1 -mtune=amdfam10 -fexpensive-optimizations -fgcse -foptimize-register-move -freorder-blocks -fschedule-insns2 -funswitch-loops -fgcse-las -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops\" } */\n \n typedef char uint8_t;\n-typedef uint32_t;\n-typedef vo_frame_t;\n+typedef int uint32_t;\n+typedef int vo_frame_t;\n __extension__ typedef __SIZE_TYPE__ size_t;\n \n struct vo_frame_s\n@@ -47,7 +47,7 @@ static int bitstream_init (picture_t * picture, void *start)\n   picture->bitstream_ptr = start;\n   return (int) (size_t) start;\n }\n-static slice_xvmc_init (picture_t * picture, int code)\n+static void slice_xvmc_init (picture_t * picture, int code)\n {\n   int offset;\n   struct vo_frame_s *forward_reference_frame;"}, {"sha": "93d5f1f18e62480e2c965669ce5a048c5d4bca94", "filename": "gcc/testsuite/gcc.target/i386/pr46253.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46253.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46253.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46253.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -g -mf16c -mtune=generic -dp\" } */\n \n-typedef __m256i __attribute__ ((__vector_size__ (32)));\n+typedef int __m256i __attribute__ ((__vector_size__ (32)));\n \n __m256i bar (void);\n void foo (void)"}, {"sha": "05435ed683876d9d3939f4d8100e32b295bce200", "filename": "gcc/testsuite/gcc.target/i386/pr53623.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53623.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53623.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53623.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -4,7 +4,7 @@\n \n #include <stdint.h>\n \n-typedef (*inst_t)(int64_t rdi, int64_t rsi, int64_t rdx);\n+typedef int (*inst_t)(int64_t rdi, int64_t rsi, int64_t rdx);\n \n int16_t code[256];\n inst_t dispatch[256];"}, {"sha": "7300c2da6e3ab65d359f5fcbc4e3a65a47ec0aa4", "filename": "gcc/testsuite/gcc.target/i386/pr57003.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -21,7 +21,7 @@ baz (unsigned long x)\n   return d;\n }\n \n-__attribute__ ((ms_abi, noinline, noclone))\n+__attribute__ ((ms_abi, noinline, noclone)) void\n foo (void)\n {\n   unsigned d;"}, {"sha": "8fd27a4400d6c64d1156f675e43395fe607bfc2c", "filename": "gcc/testsuite/gcc.target/i386/pr60902.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60902.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60902.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr60902.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -5,6 +5,7 @@ extern void exit (int);\n \n int x;\n \n+void\n foo()\n {\n   static int count;"}, {"sha": "0ef8af50694c7e2d2e7174941b73acbf096bbecc", "filename": "gcc/testsuite/gcc.target/i386/pr61923.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61923.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61923.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61923.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -19,6 +19,7 @@ struct ext4_map_blocks\n   int m_flags;\n };\n int ext4_da_map_blocks_ei_0;\n+void fn2 (int, int);\n void fn1 (int p1, struct ext4_map_blocks *p2)\n {\n   int ret;"}, {"sha": "8a1baefb5a41edda58cf65ae687b9e2648661526", "filename": "gcc/testsuite/gcc.target/i386/shrink_wrap_1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fshrink_wrap_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fshrink_wrap_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fshrink_wrap_1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -20,6 +20,7 @@ extern rtx c_readstr (const char *, enum machine_mode);\n extern rtx convert_to_mode (enum machine_mode, rtx, int);\n extern rtx expand_mult (enum machine_mode, rtx, rtx, rtx, int);\n extern rtx force_reg (enum machine_mode, rtx);\n+extern unsigned char mode_size_inline (enum machine_mode);\n extern void *memset (void *__s, int __c, size_t __n);\n \n rtx"}, {"sha": "82099dd53ae1dc34cc5ddec3e84ea9a036552b66", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -68,13 +68,13 @@\n   { return func (A, B, C, imm1, imm2, imm3); }\n \n #define test_3v(func, op1_type, op2_type, op3_type, imm)\t\t\\\n-  _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n-\t\t   op3_type C, int const I)\t\t\t\t\\\n+  int _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n+\t\t       op3_type C, int const I)\t\t\t\t\\\n   { func (A, B, C, imm); }\n \n #define test_3vx(func, op1_type, op2_type, op3_type, imm1, imm2)   \\\n-  _CONCAT(_,func) (op1_type A, op2_type B,             \\\n-           op3_type C, int const I, int const L)       \\\n+  int _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t   \\\n+\t\t       op3_type C, int const I, int const L)       \\\n   { func (A, B, C, imm1, imm2); }\n \n #define test_4(func, type, op1_type, op2_type, op3_type, op4_type, imm)\t\\\n@@ -93,8 +93,8 @@\n   { return func (A, B, C, D, imm1, imm2, imm3); }\n \n #define test_4v(func, op1_type, op2_type, op3_type, op4_type, imm)\t\\\n-  _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n-\t\t   op3_type C, op4_type D, int const I)\t\t\t\\\n+  int _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n+\t\t       op3_type C, op4_type D, int const I)\t\t\\\n   { func (A, B, C, D, imm); }\n \n "}, {"sha": "2981cd467421a6f070cda47b5cc695786357c9e3", "filename": "gcc/testsuite/gcc.target/i386/sse-19.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-19.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -13,6 +13,7 @@ __m128i bar (char x) {\n   return _mm_set_epi8 (x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x);\n }\n \n+int\n main() {\n   int i, j;\n   union u { __m128i v; char c[16]; };"}, {"sha": "0b0bc3dacfaa14ddfe9d09a0eff4f6b004ec5db2", "filename": "gcc/testsuite/gcc.target/i386/sse-22.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -67,13 +67,13 @@\n   { return func (A, B, C, imm1, imm2, imm3); }\n \n #define test_3v(func, op1_type, op2_type, op3_type, imm)\t\t\\\n-  _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n-\t\t   op3_type C, int const I)\t\t\t\t\\\n+  int _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n+\t\t       op3_type C, int const I)\t\t\t\t\\\n   { func (A, B, C, imm); }\n \n #define test_3vx(func, op1_type, op2_type, op3_type, imm1, imm2)   \\\n-  _CONCAT(_,func) (op1_type A, op2_type B,             \\\n-           op3_type C, int const I, int const L)       \\\n+  int _CONCAT(_,func) (op1_type A, op2_type B,             \t   \\\n+\t\t       op3_type C, int const I, int const L)       \\\n   { func (A, B, C, imm1, imm2); }\n \n #define test_4(func, type, op1_type, op2_type, op3_type, op4_type, imm)\t\\\n@@ -93,8 +93,8 @@\n \n \n #define test_4v(func, op1_type, op2_type, op3_type, op4_type, imm)\t\\\n-  _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n-\t\t   op3_type C, op4_type D, int const I)\t\t\t\\\n+  int _CONCAT(_,func) (op1_type A, op2_type B,\t\t\t\t\\\n+\t\t       op3_type C, op4_type D, int const I)\t\t\\\n   { func (A, B, C, D, imm); }\n \n "}, {"sha": "561691a8193bbfcb060e6824ec43c9edeea3ea90", "filename": "gcc/testsuite/gcc.target/i386/sse2-pr57233.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-pr57233.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-pr57233.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-pr57233.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -4,6 +4,8 @@\n \n #include \"sse2-check.h\"\n \n+int do_main (void);\n+\n static void\n sse2_test (void)\n {"}, {"sha": "2f9344cba2ceebd97e31bfae0aef1005e6614eb8", "filename": "gcc/testsuite/gcc.target/i386/sse4a-extract.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4a-extract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4a-extract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4a-extract.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -37,7 +37,7 @@ sse4a_test_extrqi (long long in)\n   return (v_out.i[0]);\n }\n \n-static chk (long long i1, long long i2)\n+static int chk (long long i1, long long i2)\n {\n   int n_fails =0;\n   if (i1 != i2) "}, {"sha": "7d9ec48d70c7523bdcb7ead655ea052c4689498f", "filename": "gcc/testsuite/gcc.target/i386/sse4a-insert.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4a-insert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4a-insert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4a-insert.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -38,7 +38,7 @@ sse4a_test_inserti (long long in1, long long in2)\n   return (v_out.i[0]);  \n }\n \n-static chk (long long i1, long long i2)\n+static int chk (long long i1, long long i2)\n {\n   int n_fails =0;\n   if (i1 != i2) "}, {"sha": "cd1365274f8a95fe614a2b96378a8322fd0cf753", "filename": "gcc/testsuite/gcc.target/i386/ssefp-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssefp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssefp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssefp-1.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,12 +3,14 @@\n /* { dg-final { scan-assembler \"maxsd\" } } */\n /* { dg-final { scan-assembler \"minsd\" } } */\n double x;\n+void\n t()\n {\n   x=x>5?x:5;\n }\n \n double x;\n+void\n q()\n {\n   x=x<5?x:5;"}, {"sha": "98e00f3bf109e1b332364b2a142795dc2a39276b", "filename": "gcc/testsuite/gcc.target/i386/ssefp-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssefp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssefp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssefp-2.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,12 +3,14 @@\n /* { dg-final { scan-assembler \"maxsd\" } } */\n /* { dg-final { scan-assembler \"minsd\" } } */\n double x;\n+void\n q()\n {\n   x=x<5?5:x;\n }\n \n double x;\n+void\n q1()\n {\n   x=x>5?5:x;"}, {"sha": "c2bf0dbabd139a2f5224ca3df2078a1885401f92", "filename": "gcc/testsuite/gcc.target/i386/testimm-10.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ftestimm-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ftestimm-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ftestimm-10.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -142,6 +142,7 @@ test8bit (void)\n \n }\n \n+void\n test1bit (void) {\n   m256d = _mm512_extractf64x4_pd (m512d, 256); /* { dg-error \"the last argument must be a 1-bit immediate\" } */\n   m256d = _mm512_mask_extractf64x4_pd (m256d, mmask8, m512d, 256); /* { dg-error \"the last argument must be a 1-bit immediate\" } */\n@@ -160,6 +161,7 @@ test1bit (void) {\n   m512i = _mm512_maskz_inserti64x4 (mmask8, m512i, m256i, 256); /* { dg-error \"the last argument must be a 1-bit immediate\" } */\n }\n \n+void\n test2bit (void) {\n   m128  = _mm512_extractf32x4_ps(m512, 256); /* { dg-error \"the last argument must be a 2-bit immediate\" } */\n   m128  = _mm512_mask_extractf32x4_ps(m128, mmask8, m512, 256); /* { dg-error \"the last argument must be a 2-bit immediate\" } */\n@@ -178,6 +180,7 @@ test2bit (void) {\n   m512i = _mm512_maskz_inserti32x4 (mmask16, m512i, m128i, 256); /* { dg-error \"the last argument must be a 2-bit immediate\" } */\n }\n \n+void\n test4bit (void) {\n   m512d = _mm512_getmant_pd (m512d, 1, 64); /* { dg-error \"the immediate argument must be a 4-bit immediate\" } */\n   m512d = _mm512_mask_getmant_pd (m512d, mmask8, m512d, 1, 64); /* { dg-error \"the immediate argument must be a 4-bit immediate\" } */"}, {"sha": "f6edfdee88d30b29b51966593dc0c704a25b8255", "filename": "gcc/testsuite/gcc.target/i386/vect-abs-s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s16.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ftree-vectorize -msse2 -mno-sse3 -fdump-tree-vect-details\" } */\n \n+int abs (int);\n \n void test (short* a, short* b)\n {"}, {"sha": "adde9c95aff14b10d419089a7afd6f2693ce1ab8", "filename": "gcc/testsuite/gcc.target/i386/vect-abs-s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s32.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ftree-vectorize -msse2 -mno-sse3 -fdump-tree-vect-details\" } */\n \n+int abs (int);\n \n void test (int* a, int* b)\n {"}, {"sha": "424e8cbe4f947df9ec3ecc32870f727d30bcdff3", "filename": "gcc/testsuite/gcc.target/i386/vect-abs-s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-abs-s8.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ftree-vectorize -msse2 -mno-sse3 -fdump-tree-vect-details\" } */\n \n+int abs (int);\n \n void test (char* a, char* b)\n {"}, {"sha": "e7762eb6c85161e09f7881693a7e4f73e69dc4a1", "filename": "gcc/testsuite/gcc.target/i386/vectorize4-avx.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize4-avx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize4-avx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize4-avx.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -3,6 +3,7 @@\n \n \n extern double sqrt (double __x);\n+void\n calc_freq (int *dest)\n {\n   float tmp_out[257];"}, {"sha": "c5798211722b319e4ab3743297e46b4fcc500358", "filename": "gcc/testsuite/gcc.target/i386/xop-pr57233.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-pr57233.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-pr57233.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-pr57233.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -4,6 +4,8 @@\n \n #include \"xop-check.h\"\n \n+int do_main (void);\n+\n static void\n xop_test (void)\n {"}, {"sha": "02d1c4d0881fd25f26c986ea6b6c50c9654fea00", "filename": "gcc/testsuite/gcc.target/i386/xop-rotate2-vector.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-rotate2-vector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-rotate2-vector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-rotate2-vector.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -5,6 +5,7 @@\n /* { dg-options \"-O2 -mxop -mno-avx2 -ftree-vectorize\" } */\n \n extern void exit (int);\n+extern void right_rotate (void);\n \n typedef long __m128i  __attribute__ ((__vector_size__ (16), __may_alias__));\n "}, {"sha": "aa5568b35165fa5e3f05e233a4372ec83a8c3f22", "filename": "gcc/testsuite/gcc.target/i386/xop-shift1-vector.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift1-vector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift1-vector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift1-vector.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -27,7 +27,7 @@ left_shift32 (void)\n \n int main ()\n {\n-  left_shfit32 ();\n+  left_shift32 ();\n   exit (0);\n }\n "}, {"sha": "2c016848ff5656766c4d19869165b579d03e74d5", "filename": "gcc/testsuite/gcc.target/i386/xop-shift2-vector.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift2-vector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift2-vector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift2-vector.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -27,7 +27,7 @@ right_sign_shift32 (void)\n \n int main ()\n {\n-  right_sign_shfit32 ();\n+  right_sign_shift32 ();\n   exit (0);\n }\n "}, {"sha": "2662fe69f2eb5c024c29e4d2586fb57c3b9e810b", "filename": "gcc/testsuite/gcc.target/i386/xop-shift3-vector.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift3-vector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e2d6925021e6521782aa17d55043017b758da/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift3-vector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-shift3-vector.c?ref=1a3e2d6925021e6521782aa17d55043017b758da", "patch": "@@ -27,7 +27,7 @@ right_uns_shift32 (void)\n \n int main ()\n {\n-  right_uns_shfit32 ();\n+  right_uns_shift32 ();\n   exit (0);\n }\n "}]}