{"sha": "94fcbf65cca39091ffbebf7316434da6cc0cbcb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmY2JmNjVjY2EzOTA5MWZmYmViZjczMTY0MzRkYTZjYzBjYmNiMA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2005-04-15T19:14:07Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2005-04-15T19:14:07Z"}, "message": "* config/sparc/sparc.h (sparc_hard_reg_printed): Mark as GTY(()).\n\nFrom-SVN: r98202", "tree": {"sha": "68deb4bde2043e14fb25fe03947ee4d9c5b9e860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68deb4bde2043e14fb25fe03947ee4d9c5b9e860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94fcbf65cca39091ffbebf7316434da6cc0cbcb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fcbf65cca39091ffbebf7316434da6cc0cbcb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94fcbf65cca39091ffbebf7316434da6cc0cbcb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fcbf65cca39091ffbebf7316434da6cc0cbcb0/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84c40293658aef5ec198a675f1dbb9c73f4ef30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c40293658aef5ec198a675f1dbb9c73f4ef30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c40293658aef5ec198a675f1dbb9c73f4ef30b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "41abf29b7b9fd3da12cfbdaa84d209b6bb298091", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94fcbf65cca39091ffbebf7316434da6cc0cbcb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94fcbf65cca39091ffbebf7316434da6cc0cbcb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94fcbf65cca39091ffbebf7316434da6cc0cbcb0", "patch": "@@ -1,3 +1,7 @@\n+2005-04-15  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.h (sparc_hard_reg_printed): Mark as GTY(()).\n+\n 2005-04-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \tPR tree-optimization/21031"}, {"sha": "9e7ea088b0955351df257ed73678cdfdd5ed42fe", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94fcbf65cca39091ffbebf7316434da6cc0cbcb0/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94fcbf65cca39091ffbebf7316434da6cc0cbcb0/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=94fcbf65cca39091ffbebf7316434da6cc0cbcb0", "patch": "@@ -1608,7 +1608,7 @@ extern GTY(()) rtx sparc_compare_op1;\n    case of a global register variable occupying more than one register\n    we prefix the second and following registers with .gnu.part1. etc.  */\n \n-extern char sparc_hard_reg_printed[8];\n+extern GTY(()) char sparc_hard_reg_printed[8];\n \n #ifdef HAVE_AS_REGISTER_PSEUDO_OP\n #define ASM_DECLARE_REGISTER_GLOBAL(FILE, DECL, REGNO, NAME)\t\t\\"}]}