{"sha": "bebae710416686208af2ffecff3fbaa650404d5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViYWU3MTA0MTY2ODYyMDhhZjJmZmVjZmYzZmJhYTY1MDQwNGQ1YQ==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2003-12-01T23:12:09Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2003-12-01T23:12:09Z"}, "message": "GdkFontMetrics.java (GdkFontMetrics): Pass font name, not XLFD, to initState.\n\n2003-12-01  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GdkFontMetrics.java (GdkFontMetrics):\n\tPass font name, not XLFD, to initState.\n\t(stringWidth(String, int, String)): New method.\n\t(stringWidth(String)): Call new stringWidth.\n\t(getLeading): Always return 0.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c\n\t(initState): New Pango implementation.\n\t(stringWidth): Likewise.\n\nFrom-SVN: r74133", "tree": {"sha": "807dce83ae5c5dce209f1bd99111dcd012cd15e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/807dce83ae5c5dce209f1bd99111dcd012cd15e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bebae710416686208af2ffecff3fbaa650404d5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebae710416686208af2ffecff3fbaa650404d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebae710416686208af2ffecff3fbaa650404d5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebae710416686208af2ffecff3fbaa650404d5a/comments", "author": null, "committer": null, "parents": [{"sha": "47aeffac9c6f9ec347293d4bcf8c0556c6db7f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47aeffac9c6f9ec347293d4bcf8c0556c6db7f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47aeffac9c6f9ec347293d4bcf8c0556c6db7f5c"}], "stats": {"total": 105, "additions": 70, "deletions": 35}, "files": [{"sha": "663bd05510b361134256fecfae327240a4979694", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebae710416686208af2ffecff3fbaa650404d5a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebae710416686208af2ffecff3fbaa650404d5a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bebae710416686208af2ffecff3fbaa650404d5a", "patch": "@@ -1,3 +1,14 @@\n+2003-12-01  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkFontMetrics.java (GdkFontMetrics):\n+\tPass font name, not XLFD, to initState.\n+\t(stringWidth(String, int, String)): New method.\n+\t(stringWidth(String)): Call new stringWidth.\n+\t(getLeading): Always return 0.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c\n+\t(initState): New Pango implementation.\n+\t(stringWidth): Likewise.\n+\n 2003-12-01  Olga Rodimina <rodimina@redhat.com>\n \n \t* java/awt/TextComponent.java:"}, {"sha": "ebca7ed0cea4971a5a46faa7b45a6af2aa267dc0", "filename": "libjava/gnu/java/awt/peer/gtk/GdkFontMetrics.java", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebae710416686208af2ffecff3fbaa650404d5a/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebae710416686208af2ffecff3fbaa650404d5a/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java?ref=bebae710416686208af2ffecff3fbaa650404d5a", "patch": "@@ -50,16 +50,20 @@ public class GdkFontMetrics extends FontMetrics\n                        MAX_ADVANCE = 4;\n \n   private int[] metrics;\n-  private native int[] initState (String xlfd, int pts);\n+  private native int[] initState (String fname, int size);\n \n   public GdkFontMetrics (Font font)\n   {\n     super (font);\n-    metrics = initState (((GtkFontPeer)font.getPeer ()).getXLFD (), \n-\t\t\t font.getSize ());\n+    metrics = initState (font.getName (), font.getSize ());\n   }\n \n-  native public int stringWidth (String str);\n+  native public int stringWidth (String fname, int size, String str);\n+\n+  public int stringWidth (String str)\n+  {\n+    return stringWidth (font.getName (), font.getSize (), str);\n+  }\n \n   public int charWidth (char ch)\n   {\n@@ -71,15 +75,10 @@ public int charsWidth (char data[], int off, int len)\n     return stringWidth (new String (data, off, len));\n   }\n \n-  /* \n-     Sun's Motif implementation always returns 0 or 1 here (???), but\n-     going by the X11 man pages, it seems as though we should return\n-     font.ascent + font.descent.\n-  */\n+  // Sun's Motif implementation always returns 0 or 1 here (???).\n   public int getLeading ()\n   {\n-    return 1;\n-//      return metrics[ASCENT] + metrics[DESCENT];\n+    return 0;\n   }\n \n   public int getAscent ()"}, {"sha": "b7cef69f5aa1f42d531bd63998ccb265087a1fff", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c", "status": "modified", "additions": 49, "deletions": 24, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebae710416686208af2ffecff3fbaa650404d5a/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontMetrics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebae710416686208af2ffecff3fbaa650404d5a/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontMetrics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontMetrics.c?ref=bebae710416686208af2ffecff3fbaa650404d5a", "patch": "@@ -51,49 +51,74 @@ JNIEXPORT jintArray JNICALL Java_gnu_java_awt_peer_gtk_GdkFontMetrics_initState\n {\n   jintArray array;\n   jint *metrics;\n-  const char *cfname;\n-  char *xlfd;\n-  GdkFont *font;\n-  XFontStruct *xfont;\n-\n-  cfname = (*env)->GetStringUTFChars (env, fname, NULL);\n-  xlfd = g_strdup_printf (cfname, (size * 10));\n-  (*env)->ReleaseStringUTFChars (env, fname, cfname);\n+  const char *font_name;\n+  PangoFontDescription *font_desc;\n+  PangoContext *context;\n+  PangoFontMetrics *pango_metrics;\n \n   array = (*env)->NewIntArray (env, NUM_METRICS);\n+\n   metrics = (*env)->GetIntArrayElements (env, array, NULL);\n+  font_name = (*env)->GetStringUTFChars (env, fname, NULL);\n \n   gdk_threads_enter ();\n-  font = gdk_font_load (xlfd);\n-  xfont = GDK_FONT_XFONT (font);\n-\n-  metrics[ASCENT]      = font->ascent;\n-  metrics[MAX_ASCENT]  = xfont->max_bounds.ascent;\n-  metrics[DESCENT]     = font->descent;\n-  metrics[MAX_DESCENT] = xfont->max_bounds.descent;\n-  metrics[MAX_ADVANCE] = xfont->max_bounds.width;\n+\n+  font_desc = pango_font_description_from_string (font_name);\n+  pango_font_description_set_size (font_desc, size * PANGO_SCALE);\n+\n+  context = gdk_pango_context_get();\n+  pango_context_set_font_description (context, font_desc);\n+\n+  pango_metrics = pango_context_get_metrics (context, font_desc, NULL);\n+\n+  metrics[ASCENT] =\n+    pango_font_metrics_get_ascent (pango_metrics) / PANGO_SCALE;\n+  metrics[MAX_ASCENT]  = metrics[ASCENT];\n+  metrics[DESCENT] =\n+    pango_font_metrics_get_descent (pango_metrics) / PANGO_SCALE;\n+  metrics[MAX_DESCENT] = metrics[DESCENT];\n+  metrics[MAX_ADVANCE] =\n+    pango_font_metrics_get_approximate_char_width (pango_metrics) / PANGO_SCALE;\n+\n+  pango_font_metrics_unref (pango_metrics);\n+\n+  pango_font_description_free (font_desc);\n+\n   gdk_threads_leave ();\n \n-  g_free (xlfd);\n+  (*env)->ReleaseStringUTFChars (env, fname, font_name);\n   (*env)->ReleaseIntArrayElements (env, array, metrics, 0);\n \n-  NSA_SET_PTR (env, obj, font);\n-\n   return array;\n }\n \n JNIEXPORT jint JNICALL Java_gnu_java_awt_peer_gtk_GdkFontMetrics_stringWidth\n-  (JNIEnv *env, jobject obj, jstring str)\n+  (JNIEnv *env, jobject obj, jstring fname, jint size, jstring str)\n {\n-  GdkFont *font;\n+  PangoFontDescription *font_desc;\n+  PangoContext *context;\n+  PangoLayout *layout;\n+  int width = 0;\n   const char *cstr;\n-  jint width;\n+  const char *font_name;\n \n-  font = (GdkFont *) NSA_GET_PTR (env, obj);\n   cstr = (*env)->GetStringUTFChars (env, str, NULL);\n \n   gdk_threads_enter ();\n-  width = gdk_string_width (font, cstr);\n+\n+  font_desc = pango_font_description_from_string (font_name);\n+  pango_font_description_set_size (font_desc, size * PANGO_SCALE);\n+\n+  context = gdk_pango_context_get();\n+  pango_context_set_font_description (context, font_desc);\n+\n+  layout = pango_layout_new (context);\n+\n+  pango_layout_set_text (layout, cstr, -1);\n+  pango_layout_get_pixel_size (layout, &width, NULL);\n+\n+  pango_font_description_free (font_desc);\n+\n   gdk_threads_leave ();\n \n   (*env)->ReleaseStringUTFChars (env, str, cstr);"}]}