{"sha": "7c922606b75370d5b4c3589dcf0fc757dfb4fcaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5MjI2MDZiNzUzNzBkNWI0YzM1ODlkY2YwZmM3NTdkZmI0ZmNhYQ==", "commit": {"author": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2021-08-31T11:19:49Z"}, "committer": {"name": "YunQiang Su", "email": "syq@debian.org", "date": "2021-09-01T10:12:17Z"}, "message": "md/define_c_enum: support value assignation\n\nCurrently, the enums from define_c_enum and define_enum can only\nhas values one by one from 0.\n\nIn fact we can support the behaviour just like C, aka like\n  (define_enum \"mips_isa\" [(mips1 1) mips2 (mips32 32) mips32r2]),\nthen we can get\n  enum mips_isa {\n    MIPS_ISA_MIPS1 = 1,\n    MIPS_ISA_MIPS2 = 2,\n    MIPS_ISA_MIPS32 = 32,\n    MIPS_ISA_MIPS32R2 = 33\n  };\n\ngcc/ChangeLog:\n\t* read-md.c (md_reader::handle_enum): support value assignation.\n\t* doc/md.texi: record define_c_enum value assignation support.", "tree": {"sha": "0fd0ae30e7a6fc7bcc8477378de60249f6a92569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fd0ae30e7a6fc7bcc8477378de60249f6a92569"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa/comments", "author": null, "committer": {"login": "wzssyqa", "id": 163337, "node_id": "MDQ6VXNlcjE2MzMzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/163337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wzssyqa", "html_url": "https://github.com/wzssyqa", "followers_url": "https://api.github.com/users/wzssyqa/followers", "following_url": "https://api.github.com/users/wzssyqa/following{/other_user}", "gists_url": "https://api.github.com/users/wzssyqa/gists{/gist_id}", "starred_url": "https://api.github.com/users/wzssyqa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wzssyqa/subscriptions", "organizations_url": "https://api.github.com/users/wzssyqa/orgs", "repos_url": "https://api.github.com/users/wzssyqa/repos", "events_url": "https://api.github.com/users/wzssyqa/events{/privacy}", "received_events_url": "https://api.github.com/users/wzssyqa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45ff12512e568089a4c7b85b5322ab8019723cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ff12512e568089a4c7b85b5322ab8019723cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ff12512e568089a4c7b85b5322ab8019723cd9"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "2b41cb7fb7bbae9287c7f7dad5715dce9934b98d", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=7c922606b75370d5b4c3589dcf0fc757dfb4fcaa", "patch": "@@ -11074,6 +11074,8 @@ The syntax is as follows:\n (define_c_enum \"@var{name}\" [\n   @var{value0}\n   @var{value1}\n+  (@var{value32} 32)\n+  @var{value33}\n   @dots{}\n   @var{valuen}\n ])\n@@ -11086,6 +11088,8 @@ in @file{insn-constants.h}:\n enum @var{name} @{\n   @var{value0} = 0,\n   @var{value1} = 1,\n+  @var{value32} = 32,\n+  @var{value33} = 33,\n   @dots{}\n   @var{valuen} = @var{n}\n @};"}, {"sha": "8fda401b09535178eb31f88c80eda50b411baee8", "filename": "gcc/read-md.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa/gcc%2Fread-md.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c922606b75370d5b4c3589dcf0fc757dfb4fcaa/gcc%2Fread-md.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.c?ref=7c922606b75370d5b4c3589dcf0fc757dfb4fcaa", "patch": "@@ -902,7 +902,8 @@ void\n md_reader::handle_enum (file_location loc, bool md_p)\n {\n   char *enum_name, *value_name;\n-  struct md_name name;\n+  unsigned int cur_value;\n+  struct md_name name, value;\n   struct enum_type *def;\n   struct enum_value *ev;\n   void **slot;\n@@ -928,6 +929,7 @@ md_reader::handle_enum (file_location loc, bool md_p)\n       *slot = def;\n     }\n \n+  cur_value = def->num_values;\n   require_char_ws ('[');\n \n   while ((c = read_skip_spaces ()) != ']')\n@@ -937,8 +939,18 @@ md_reader::handle_enum (file_location loc, bool md_p)\n \t  error_at (loc, \"unterminated construct\");\n \t  exit (1);\n \t}\n-      unread_char (c);\n-      read_name (&name);\n+      if (c == '(')\n+\t{\n+\t  read_name (&name);\n+\t  read_name (&value);\n+\t  require_char_ws (')');\n+\t  cur_value = atoi (value.string);\n+\t}\n+      else\n+\t{\n+\t  unread_char (c);\n+\t  read_name (&name);\n+\t}\n \n       ev = XNEW (struct enum_value);\n       ev->next = 0;\n@@ -954,11 +966,12 @@ md_reader::handle_enum (file_location loc, bool md_p)\n \t  ev->name = value_name;\n \t}\n       ev->def = add_constant (get_md_constants (), value_name,\n-\t\t\t      md_decimal_string (def->num_values), def);\n+\t\t\t      md_decimal_string (cur_value), def);\n \n       *def->tail_ptr = ev;\n       def->tail_ptr = &ev->next;\n       def->num_values++;\n+      cur_value++;\n     }\n }\n "}]}