{"sha": "7a9fd18598e638b55c591624e753fb7a88abe1ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5ZmQxODU5OGU2MzhiNTVjNTkxNjI0ZTc1M2ZiN2E4OGFiZTFhYg==", "commit": {"author": {"name": "guojiufu", "email": "guojiufu@linux.ibm.com", "date": "2020-07-15T08:07:47Z"}, "committer": {"name": "guojiufu", "email": "guojiufu@linux.ibm.com", "date": "2020-07-15T08:15:05Z"}, "message": "rs6000: Refine RTL unroll hook for small loops\n\nFor very small loops (< 6 insns), it would be fine to unroll 4\ntimes to run fast with less latency and better cache usage.  Like\nbelow loops:\n while (i) a[--i] = NULL;   while (p < e)  *d++ = *p++;\n\nWith this patch enhances, we could see some performance improvement\nfor some workloads(e.g. SPEC2017).\n\n2020-07-13  Jiufu Guo   <guojiufu@cn.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_loop_unroll_adjust): Refine hook.", "tree": {"sha": "53319423ecbfa03696271c0af503d35bbc71654c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53319423ecbfa03696271c0af503d35bbc71654c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a9fd18598e638b55c591624e753fb7a88abe1ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9fd18598e638b55c591624e753fb7a88abe1ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a9fd18598e638b55c591624e753fb7a88abe1ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9fd18598e638b55c591624e753fb7a88abe1ab/comments", "author": null, "committer": null, "parents": [{"sha": "fff15bad1ab571906c37b88380431768d917dcb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff15bad1ab571906c37b88380431768d917dcb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff15bad1ab571906c37b88380431768d917dcb0"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "c5c3300c59c23e91eb9009d24a97b54003368a7a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9fd18598e638b55c591624e753fb7a88abe1ab/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9fd18598e638b55c591624e753fb7a88abe1ab/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7a9fd18598e638b55c591624e753fb7a88abe1ab", "patch": "@@ -5212,13 +5212,14 @@ rs6000_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n {\n    if (unroll_only_small_loops)\n     {\n-      /* TODO: This is hardcoded to 10 right now.  It can be refined, for\n-\t example we may want to unroll very small loops more times (4 perhaps).\n-\t We also should use a PARAM for this.  */\n+      /* TODO: These are hardcoded values right now.  We probably should use\n+\t a PARAM here.  */\n+      if (loop->ninsns <= 6)\n+\treturn MIN (4, nunroll);\n       if (loop->ninsns <= 10)\n \treturn MIN (2, nunroll);\n-      else\n-\treturn 0;\n+\n+      return 0;\n     }\n \n   return nunroll;"}]}