{"sha": "5a157bc426da5786c153e3b04935cafa7f0c05ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWExNTdiYzQyNmRhNTc4NmMxNTNlM2IwNDkzNWNhZmE3ZjBjMDVlZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-03-17T22:43:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-03-17T22:43:02Z"}, "message": "Define BYTE_ORDER in <sys/byteorder.h> as on UnixWare 1.1\n\nFrom-SVN: r6804", "tree": {"sha": "d9656ccffa6f940494cf656c8be1db296e57152c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9656ccffa6f940494cf656c8be1db296e57152c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a157bc426da5786c153e3b04935cafa7f0c05ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a157bc426da5786c153e3b04935cafa7f0c05ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a157bc426da5786c153e3b04935cafa7f0c05ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a157bc426da5786c153e3b04935cafa7f0c05ee/comments", "author": null, "committer": null, "parents": [{"sha": "e2a77f994d4057b7a9a240b76e5a78df155707ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a77f994d4057b7a9a240b76e5a78df155707ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2a77f994d4057b7a9a240b76e5a78df155707ab"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "de73ffc60752a827e2df81a619a8076df79cfd03", "filename": "gcc/fixinc.svr4", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a157bc426da5786c153e3b04935cafa7f0c05ee/gcc%2Ffixinc.svr4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a157bc426da5786c153e3b04935cafa7f0c05ee/gcc%2Ffixinc.svr4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.svr4?ref=5a157bc426da5786c153e3b04935cafa7f0c05ee", "patch": "@@ -1375,6 +1375,9 @@ fi\n cd ${ORIG_DIR}\n \n echo 'Replacing <sys/byteorder.h>'\n+if [ \\! -d $LIB/sys ]; then\n+  mkdir $LIB/sys\n+fi\n rm -f ${LIB}/sys/byteorder.h\n cat <<'__EOF__' >${LIB}/sys/byteorder.h\n #ifndef _SYS_BYTEORDER_H\n@@ -1396,6 +1399,14 @@ cat <<'__EOF__' >${LIB}/sys/byteorder.h\n #error You lose!  This file is only useful with GNU compilers.\n #endif\n \n+#ifndef __BYTE_ORDER__\n+/* Byte order defines.  These are as defined on UnixWare 1.1, but with\n+   double underscores added at the front and back.  */\n+#define __LITTLE_ENDIAN__   1234\n+#define __BIG_ENDIAN__      4321\n+#define __PDP_ENDIAN__      3412\n+#endif\n+\n #ifdef __GNUC__\n #define __STATIC static\n #else\n@@ -1411,6 +1422,10 @@ __STATIC __inline__ unsigned short ntohs (unsigned int);\n \n #if defined (__i386__)\n \n+#ifndef __BYTE_ORDER__\n+#define __BYTE_ORDER__ __LITTLE_ENDIAN__\n+#endif\n+\n /* Convert a host long to a network long.  */\n \n /* We must use a new-style function definition, so that this will also\n@@ -1441,6 +1456,10 @@ htons (unsigned int __arg)\n        || defined (__ns32k__) || defined (__vax__)\t\t\\\n        || defined (__spur__) || defined (__arm__))\n \n+#ifndef __BYTE_ORDER__\n+#define __BYTE_ORDER__ __LITTLE_ENDIAN__\n+#endif\n+\n /* For other little-endian machines, using C code is just as efficient as\n    using assembly code.  */\n \n@@ -1472,6 +1491,10 @@ htons (unsigned int __arg)\n \n #else /* must be a big-endian machine */\n \n+#ifndef __BYTE_ORDER__\n+#define __BYTE_ORDER__ __BIG_ENDIAN__\n+#endif\n+\n /* Convert a host long to a network long.  */\n \n __STATIC __inline__ unsigned long\n@@ -1509,6 +1532,23 @@ ntohs (unsigned int __arg)\n \n #undef __STATIC\n \n+__EOF__\n+\n+if [ -r ${INPUT}/sys/byteorder.h ]; then\n+  if grep BYTE_ORDER ${INPUT}/sys/byteorder.h >/dev/null 2>/dev/null; then\n+    cat <<'__EOF__' >>${LIB}/sys/byteorder.h\n+#ifndef BYTE_ORDER\n+#define LITTLE_ENDIAN __LITTLE_ENDIAN__\n+#define BIG_ENDIAN __BIG_ENDIAN__\n+#define PDP_ENDIAN __PDP_ENDIAN__\n+#define BYTE_ORDER __BYTE_ORDER__\n+#endif\n+\n+__EOF__\n+  fi\n+fi\n+\n+cat <<'__EOF__' >>${LIB}/sys/byteorder.h\n #endif /* !defined (_SYS_BYTEORDER_H) */\n __EOF__\n "}]}