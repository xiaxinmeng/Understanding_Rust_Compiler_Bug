{"sha": "ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ5NDliY2M1ZTQ4MmRkZDM0YmZmNmEzZDAxZDAyZDU4NjYxNTVmOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-09-04T09:22:38Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-09-04T09:22:38Z"}, "message": "re PR tree-optimization/50208 (ICE: in vinfo_for_stmt at tree-vectorizer.h:598 with -ftree-vectorize -fno-tree-fre -fno-tree-pre)\n\n\n        PR tree-optimization/50208\n        * tree-vect-patterns.c (vect_handle_widen_mult_by_const): Add an\n        argument.  Check that def_stmt is inside the loop.\n        (vect_recog_widen_mult_pattern): Update calls to\n        vect_handle_widen_mult_by_cons.\n        (vect_operation_fits_smaller_type): Check that def_stmt is\n        inside the loop.\n\n\nCo-Authored-By: Ira Rosen <ira.rosen@linaro.org>\n\nFrom-SVN: r178508", "tree": {"sha": "ecd366ea21d066bd82366c0398e6cd3ddd01160f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecd366ea21d066bd82366c0398e6cd3ddd01160f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cd3603bf9a67ac0048541cc6698c174136e5a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd3603bf9a67ac0048541cc6698c174136e5a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd3603bf9a67ac0048541cc6698c174136e5a37"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "c929cb0ea5badee4b21ef7aafe749dc125583dd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "patch": "@@ -1,3 +1,14 @@\n+2011-09-04  Jakub Jelinek  <jakub@redhat.com>\n+\t    Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50208\n+\t* tree-vect-patterns.c (vect_handle_widen_mult_by_const): Add an\n+\targument.  Check that def_stmt is inside the loop.\n+\t(vect_recog_widen_mult_pattern): Update calls to\n+\tvect_handle_widen_mult_by_cons.\n+\t(vect_operation_fits_smaller_type): Check that def_stmt is\n+\tinside the loop.\n+\n 2011-09-04  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* tree-vectorizer.c (vect_print_dump_info): Print line"}, {"sha": "3b6556dcc0a6bb2c09a97e1b11a99cdc9476a96e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "patch": "@@ -1,3 +1,11 @@\n+2011-09-04  Jakub Jelinek  <jakub@redhat.com>\n+\t    Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50208\n+\t* gcc.dg/vect/no-fre-pre-pr50208.c: New test.\n+\t* gcc.dg/vect/vect.exp: Run no-fre-pre-*.c tests with\n+\t-fno-tree-fre -fno-tree-pre.\n+\n 2011-09-02  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/ipa/ipcp-3.c: New test."}, {"sha": "26e2a64469406ed366478f7d0af8f34f2b2055a4", "filename": "gcc/testsuite/gcc.dg/vect/no-fre-pre-pr50208.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-fre-pre-pr50208.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-fre-pre-pr50208.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-fre-pre-pr50208.c?ref=ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+\n+char c;\n+int a, b;\n+\n+void foo (int j)\n+{\n+  int i;\n+  while (--j)\n+    {\n+      b = 3;\n+      for (i = 0; i < 2; ++i)\n+        a = b ^ c;\n+    }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "8f57f29ad093211194b227cb342f9f695d9000ad", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "patch": "@@ -263,6 +263,12 @@ lappend DEFAULT_VECTCFLAGS \"-fno-tree-fre\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-tree-fre-*.\\[cS\\]]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# -fno-tree-fre -fno-tree-pre\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-fno-tree-fre\" \"-fno-tree-pre\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-fre-pre*.\\[cS\\]]]  \\\n+        \"\" $DEFAULT_VECTCFLAGS\n+\n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}\n "}, {"sha": "0d78882751338fb5abc992e338285382e78e1395", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad949bcc5e482ddd34bff6a3d01d02d5866155f8/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=ad949bcc5e482ddd34bff6a3d01d02d5866155f8", "patch": "@@ -344,12 +344,14 @@ vect_recog_dot_prod_pattern (VEC (gimple, heap) **stmts, tree *type_in,\n    replace a_T = (TYPE) a_t; with a_it - (interm_type) a_t;  */\n \n static bool\n-vect_handle_widen_mult_by_const (tree const_oprnd, tree *oprnd,\n+vect_handle_widen_mult_by_const (gimple stmt, tree const_oprnd, tree *oprnd,\n    \t\t\t         VEC (gimple, heap) **stmts, tree type,\n \t\t\t         tree *half_type, gimple def_stmt)\n {\n   tree new_type, new_oprnd, tmp;\n   gimple new_stmt;\n+  loop_vec_info loop_info = STMT_VINFO_LOOP_VINFO (vinfo_for_stmt (stmt));\n+  struct loop *loop = LOOP_VINFO_LOOP (loop_info);\n \n   if (int_fits_type_p (const_oprnd, *half_type))\n     {\n@@ -359,6 +361,8 @@ vect_handle_widen_mult_by_const (tree const_oprnd, tree *oprnd,\n     }\n \n   if (TYPE_PRECISION (type) < (TYPE_PRECISION (*half_type) * 4)\n+      || !gimple_bb (def_stmt)\n+      || !flow_bb_inside_loop_p (loop, gimple_bb (def_stmt))\n       || !vinfo_for_stmt (def_stmt))\n     return false;\n \n@@ -527,7 +531,8 @@ vect_recog_widen_mult_pattern (VEC (gimple, heap) **stmts,\n     {\n       if (TREE_CODE (oprnd0) == INTEGER_CST\n \t  && TREE_CODE (half_type1) == INTEGER_TYPE\n-          && vect_handle_widen_mult_by_const (oprnd0, &oprnd1, stmts, type,\n+          && vect_handle_widen_mult_by_const (last_stmt, oprnd0, &oprnd1,\n+                                              stmts, type,\n \t\t\t\t \t      &half_type1, def_stmt1))\n         half_type0 = half_type1;\n       else\n@@ -537,7 +542,8 @@ vect_recog_widen_mult_pattern (VEC (gimple, heap) **stmts,\n     {\n       if (TREE_CODE (oprnd1) == INTEGER_CST\n           && TREE_CODE (half_type0) == INTEGER_TYPE\n-          && vect_handle_widen_mult_by_const (oprnd1, &oprnd0, stmts, type,\n+          && vect_handle_widen_mult_by_const (last_stmt, oprnd1, &oprnd0,\n+                                              stmts, type,\n \t\t\t\t\t      &half_type0, def_stmt0))\n         half_type1 = half_type0;\n       else\n@@ -868,6 +874,8 @@ vect_operation_fits_smaller_type (gimple stmt, tree def, tree *new_type,\n   tree interm_type = NULL_TREE, half_type, tmp, new_oprnd, type;\n   gimple def_stmt, new_stmt;\n   bool first = false;\n+  loop_vec_info loop_info = STMT_VINFO_LOOP_VINFO (vinfo_for_stmt (stmt));\n+  struct loop *loop = LOOP_VINFO_LOOP (loop_info);\n \n   *new_def_stmt = NULL;\n \n@@ -898,6 +906,8 @@ vect_operation_fits_smaller_type (gimple stmt, tree def, tree *new_type,\n     {\n       first = true;\n       if (!widened_name_p (oprnd, stmt, &half_type, &def_stmt, false)\n+          || !gimple_bb (def_stmt)\n+          || !flow_bb_inside_loop_p (loop, gimple_bb (def_stmt))\n           || !vinfo_for_stmt (def_stmt))\n         return false;\n     }"}]}