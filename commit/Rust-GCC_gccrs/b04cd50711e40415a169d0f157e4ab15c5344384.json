{"sha": "b04cd50711e40415a169d0f157e4ab15c5344384", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA0Y2Q1MDcxMWU0MDQxNWExNjlkMGYxNTdlNGFiMTVjNTM0NDM4NA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-03-30T12:05:54Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-03-30T12:05:54Z"}, "message": "More cutover to system.h:\n\n        * Makefile.in (cppalloc.o, cpperror.o, cppexp.o, cpphash.o,\n        cpplib.o, cppmain.o, fix-header.o, gcov.o, gen-protos.o,\n        gengenrtl.o, halfpic.o, hash.o, scan-decls.o, scan.o): Depend on\n        system.h.\n        * cpphash.c: Include config.h.\n        * cppalloc.c: Include system.h.  Add parameters to various\n        function prototypes.\n        * cpperror.c: Likewise.\n        * cppexp.c: Likewise.\n        * cpphash.c: Likewise.\n        * cpplib.c: Likewise.\n        * cppmain.c: Likewise.\n        * fix-header.c: Likewise.\n        * gcov.c: Likewise.\n        * gen-protos.c: Likewise.\n        * gengenrtl.c: Likewise.\n        * halfpic.c: Likewise.\n        * hash.c: Likewise.\n        * scan-decls.c: Likewise.\n        * scan.c: Likewise.\n\nFrom-SVN: r18911", "tree": {"sha": "89dd65e70bf50b33a26d779913cd79c789b77b0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89dd65e70bf50b33a26d779913cd79c789b77b0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b04cd50711e40415a169d0f157e4ab15c5344384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b04cd50711e40415a169d0f157e4ab15c5344384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b04cd50711e40415a169d0f157e4ab15c5344384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b04cd50711e40415a169d0f157e4ab15c5344384/comments", "author": null, "committer": null, "parents": [{"sha": "1aa5d112c8397e861eea2cbfba02c7e8f1ffae97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa5d112c8397e861eea2cbfba02c7e8f1ffae97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aa5d112c8397e861eea2cbfba02c7e8f1ffae97"}], "stats": {"total": 228, "additions": 72, "deletions": 156}, "files": [{"sha": "516c61ab3de7bc71414382341f20d0590227d459", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -1,3 +1,27 @@\n+Mon Mar 30 14:43:20 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+        * Makefile.in (cppalloc.o, cpperror.o, cppexp.o, cpphash.o,\n+ \tcpplib.o, cppmain.o, fix-header.o, gcov.o, gen-protos.o,\n+ \tgengenrtl.o, halfpic.o, hash.o, scan-decls.o, scan.o): Depend on\n+ \tsystem.h.\n+\t \n+        * cpphash.c: Include config.h.\n+        * cppalloc.c: Include system.h.  Add parameters to various\n+        function prototypes.\n+        * cpperror.c: Likewise.\n+        * cppexp.c: Likewise.\n+        * cpphash.c: Likewise.\n+        * cpplib.c: Likewise.\n+        * cppmain.c: Likewise.\n+        * fix-header.c: Likewise.\n+        * gcov.c: Likewise.\n+        * gen-protos.c: Likewise.\n+        * gengenrtl.c: Likewise.\n+        * halfpic.c: Likewise.\n+        * hash.c: Likewise.\n+        * scan-decls.c: Likewise.\n+        * scan.c: Likewise.\n+\n Mon Mar 30 11:06:45 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* README.gnat: Add lang_print_xnode definition."}, {"sha": "0e95429165c203b4b289577fa7ea3550c5e452ee", "filename": "gcc/Makefile.in", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -1271,7 +1271,7 @@ collect2.o : collect2.c $(CONFIG_H) system.h gansidecl.h gstab.h obstack.h \\\n \t-c `echo $(srcdir)/collect2.c | sed 's,^\\./,,'`\n \n tlink.o: tlink.c $(DEMANGLE_H) hash.h $(CONFIG_H) system.h\n-hash.o: hash.c hash.h\n+hash.o: hash.c hash.h system.h\n cplus-dem.o: cplus-dem.c $(DEMANGLE_H)\n \n underscore.c: stamp-under ; @true\n@@ -1452,7 +1452,7 @@ mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H)\n \n # Build file to support OSF/rose half-pic format.\n-halfpic.o: halfpic.c $(CONFIG_H) $(RTL_H) $(TREE_H)\n+halfpic.o: halfpic.c $(CONFIG_H) $(RTL_H) $(TREE_H) system.h\n \n # Normally this target is not used; but it is used if you\n # define ALLOCA=alloca.o.  In that case, you must get a suitable alloca.c\n@@ -1695,7 +1695,7 @@ gengenrtl : gengenrtl.o $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gengenrtl.o $(HOST_LIBS)\n \n-gengenrtl.o : gengenrtl.c $(RTL_BASE_H)\n+gengenrtl.o : gengenrtl.c $(RTL_BASE_H) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c\n \n #\f\n@@ -1770,9 +1770,9 @@ cppmain$(exeext): cppmain.o cpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o \\\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cppmain.o cpplib.o cpphash.o \\\n \t  cppalloc.o cpperror.o cppexp.o prefix.o version.o $(LIBS)\n \n-cppmain.o: cppmain.c $(CONFIG_H) cpplib.h\n+cppmain.o: cppmain.c $(CONFIG_H) cpplib.h system.h\n \n-cpplib.o: cpplib.c $(CONFIG_H) cpplib.h cpphash.h config.status\n+cpplib.o: cpplib.c $(CONFIG_H) cpplib.h cpphash.h config.status system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n@@ -1782,13 +1782,13 @@ cpplib.o: cpplib.c $(CONFIG_H) cpplib.h cpphash.h config.status\n \t  -DTOOL_INCLUDE_DIR=\\\"$(tooldir)/include\\\" \\\n \t  -c `echo $(srcdir)/cpplib.c | sed 's,^\\./,,'`\n \n-cpperror.o: cpperror.c $(CONFIG_H) cpplib.h\n+cpperror.o: cpperror.c $(CONFIG_H) cpplib.h system.h\n \n-cppexp.o: cppexp.c $(CONFIG_H) cpplib.h\n+cppexp.o: cppexp.c $(CONFIG_H) cpplib.h system.h\n \n-cpphash.o: cpphash.c cpplib.h cpphash.h\n+cpphash.o: cpphash.c cpplib.h cpphash.h $(CONFIG_H) system.h\n \n-cppalloc.o: cppalloc.c $(CONFIG_H)\n+cppalloc.o: cppalloc.c $(CONFIG_H) cpplib.h system.h\n \n # Note for the stamp targets, we run the program `true' instead of\n # having an empty command (nothing following the semicolon).\n@@ -1867,7 +1867,7 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \tdiff $(srcdir)/protoize.c tmp-proto.c | cat\n \t-rm -f tmp-proto.[cs] tmp-proto$(objext)\n \n-gcov.o: gcov.c gcov-io.h\n+gcov.o: gcov.c gcov-io.h system.h\n \n # Only one of 'gcov' or 'gcov.exe' is actually built, depending\n # upon whether $(exeext) is empty or not.\n@@ -1951,10 +1951,10 @@ gen-protos: gen-protos.o scan.o cppalloc.o $(HOST_LIBDEPS)\n \t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  gen-protos.o scan.o cppalloc.o $(HOST_LIBS)\n \n-gen-protos.o: gen-protos.c scan.h $(build_xm_file)\n+gen-protos.o: gen-protos.c scan.h $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c\n \n-scan.o: scan.c scan.h $(build_xm_file)\n+scan.o: scan.c scan.h $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c\n \n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefile\n@@ -1972,10 +1972,11 @@ fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_LIBDEPS) \\\n \t   scan-decls.o scan.o cpplib.o cpphash.o cppalloc.o prefix.o \\\n \t   version.o cppexp.o $(HOST_LIBS)\n \n-fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h $(build_xm_file)\n+fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h $(build_xm_file) \\\n+\tsystem.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n \n-scan-decls.o: scan-decls.c scan.h cpplib.h $(build_xm_file)\n+scan-decls.o: scan-decls.c scan.h cpplib.h $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c\n \n # stmp-fixproto depends on this, not on fix-header directly."}, {"sha": "40944b7a460f707773b537d7a704463ac8e827a4", "filename": "gcc/cppalloc.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcppalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcppalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppalloc.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -23,10 +23,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n  what you give them.   Help stamp out software-hoarding!  */\n \n #include \"config.h\"\n-#include <stdio.h>\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n+#include \"system.h\"\n #include \"cpplib.h\"\n \n static void"}, {"sha": "44bd75da455f7f129ca3d7c750da5a1a8b01ce92", "filename": "gcc/cpperror.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcpperror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcpperror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpperror.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -24,10 +24,12 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n #ifndef EMACS\n #include \"config.h\"\n+#include \"system.h\"\n+#else\n+#include <stdio.h>\n #endif /* not EMACS */\n \n #include \"cpplib.h\"\n-#include <stdio.h>\n \n /* Print the file names and line numbers of the #include\n    commands which led to the current file.  */"}, {"sha": "bf0b8a03d149b69f57e8234474e4595991b75ca4", "filename": "gcc/cppexp.c", "status": "modified", "additions": 4, "deletions": 39, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -25,32 +25,17 @@ Written by Per Bothner 1994.  */\n /* Parse a C expression from text in a string  */\n    \n #include \"config.h\"\n+#include \"system.h\"\n #include \"cpplib.h\"\n #include \"gansidecl.h\"\n \n extern char *xmalloc PARAMS ((unsigned));\n extern char *xrealloc PARAMS ((void *, unsigned));\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n #ifdef MULTIBYTE_CHARS\n #include <locale.h>\n #endif\n \n-#if HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#else\n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>\n-#endif\n-#endif\n-\n-#include <stdio.h>\n-\n /* This is used for communicating lists of keywords with cccp.c.  */\n struct arglist {\n   struct arglist *next;\n@@ -59,26 +44,6 @@ struct arglist {\n   int argno;\n };\n \n-/* Define a generic NULL if one hasn't already been defined.  */\n-\n-#ifndef NULL\n-#define NULL 0\n-#endif\n-\n-#ifndef GENERIC_PTR\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define GENERIC_PTR void *\n-#else\n-#define GENERIC_PTR char *\n-#endif\n-#endif\n-\n-#ifndef NULL_PTR\n-#define NULL_PTR ((GENERIC_PTR) 0)\n-#endif\n-\n-extern char *xmalloc ();\n-\n #ifndef CHAR_TYPE_SIZE\n #define CHAR_TYPE_SIZE BITS_PER_UNIT\n #endif\n@@ -115,9 +80,9 @@ extern char *xmalloc ();\n    number with SUM's sign, where A, B, and SUM are all C integers.  */\n #define possible_sum_sign(a, b, sum) ((((a) ^ (b)) | ~ ((a) ^ (sum))) < 0)\n \n-static void integer_overflow ();\n-static long left_shift ();\n-static long right_shift ();\n+static void integer_overflow PARAMS ((cpp_reader *));\n+static long left_shift PARAMS ((cpp_reader *, long, int, unsigned long));\n+static long right_shift PARAMS ((cpp_reader *, long, int, unsigned long));\n \n #define ERROR 299\n #define OROR 300"}, {"sha": "f6c8f7ab75b70cae8c8450ef6d6750f6201bc164", "filename": "gcc/cpphash.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -22,6 +22,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n  You are forbidden to forbid anyone else to use, share and improve\n  what you give them.   Help stamp out software-hoarding!  */\n \n+#include \"config.h\"\n+#include \"system.h\"\n #include \"cpplib.h\"\n #include \"cpphash.h\"\n #include \"gansidecl.h\""}, {"sha": "88c2e85509d644ad08f8041ee6f4a87b7b9e12b2", "filename": "gcc/cpplib.c", "status": "modified", "additions": 1, "deletions": 52, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -19,30 +19,14 @@ along with this program; if not, write to the Free Software\n Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n+#include \"system.h\"\n \n #ifndef STDC_VALUE\n #define STDC_VALUE 1\n #endif\n \n-#include <ctype.h>\n-#include <stdio.h>\n #include <signal.h>\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef TIME_WITH_SYS_TIME\n-# include <sys/time.h>\n-# include <time.h>\n-#else\n-# if HAVE_SYS_TIME_H\n-# include <sys/time.h>\n-# else\n-#  include <time.h>\n-#endif\n-#endif\n-\n #ifdef HAVE_SYS_TIMES_H\n #include <sys/times.h>\n #endif\n@@ -51,45 +35,10 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n # include <sys/resource.h>\n #endif\n \n-#ifdef HAVE_FCNTL_H\n-# include <fcntl.h>\n-#endif\n-\n-#if HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n-\n-#ifdef HAVE_UNISTD_H\n-# include <unistd.h>\n-#endif\n-\n-#ifdef HAVE_STRING_H\n-# include <string.h>\n-# else\n-# ifdef HAVE_STRINGS_H\n-#  include <strings.h>\n-#endif\n-#endif\n-\n-/* This defines \"errno\" properly for VMS, and gives us EACCES.  */\n-#include <errno.h>\n-\n #include \"cpplib.h\"\n #include \"cpphash.h\"\n #include \"gansidecl.h\"\n \n-#ifdef NEED_DECLARATION_INDEX\n-extern char *index ();\n-#endif\n-\n-#ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n-#endif\n-\n-#ifdef NEED_DECLARATION_GETENV\n-extern char *getenv ();\n-#endif\n-\n extern char *update_path ();\n \n #ifndef O_RDONLY"}, {"sha": "d4b27da4a6dd9eabdb6c7328dc3be66169079404", "filename": "gcc/cppmain.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -1,5 +1,5 @@\n /* CPP main program, using CPP Library.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n    Written by Per Bothner, 1994-95.\n \n This program is free software; you can redistribute it and/or modify it\n@@ -20,14 +20,16 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n  You are forbidden to forbid anyone else to use, share and improve\n  what you give them.   Help stamp out software-hoarding!  */\n \n-#include \"cpplib.h\"\n-#include <stdio.h>\n-\n #ifndef EMACS\n #include \"config.h\"\n-#endif /* not EMACS */\n+#include \"system.h\"\n+#else\n+#include <stdio.h>\n \n extern char *getenv ();\n+#endif /* not EMACS */\n+\n+#include \"cpplib.h\"\n \n char *progname;\n "}, {"sha": "f6cc5e8d6d974e2e937466a106f3e454826a32d6", "filename": "gcc/fix-header.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -70,9 +70,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n    Written by Per Bothner <bothner@cygnus.com>, July 1993.  */\n \n-#include <stdio.h>\n-#include <ctype.h>\n #include \"hconfig.h\"\n+#include \"system.h\"\n #include \"obstack.h\"\n #include \"scan.h\"\n #include \"cpplib.h\""}, {"sha": "c546bdce7b733dcdffe9b4244f43c64a37ae12b0", "filename": "gcc/gcov.c", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -42,29 +42,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    only get execution counts for one or the other of the including files.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n-#include \"gansidecl.h\"\n-#include <sys/types.h>\n+#include \"system.h\"\n #include <sys/stat.h>\n-\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#else\n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>\n-#endif\n-#endif\n+#include \"gansidecl.h\"\n \n #include \"gcov-io.h\"\n \n-#ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n-#endif\n-\n /* The .bb file format consists of several lists of 4-byte integers\n    which are the line numbers of each basic block in the file.  Each\n    list is terminated by a zero.  These lists correspond to the basic\n@@ -230,11 +213,11 @@ static int output_function_summary = 0;\n static char *object_directory = 0;\n \n /* Forward declarations.  */\n-static void process_args ();\n-static void open_files ();\n-static void read_files ();\n-static void scan_for_source_files ();\n-static void output_data ();\n+static void process_args PROTO ((int, char **));\n+static void open_files PROTO ((void));\n+static void read_files PROTO ((void));\n+static void scan_for_source_files PROTO ((void));\n+static void output_data PROTO ((void));\n char * xmalloc ();\n \n int"}, {"sha": "2bec04c4db86685e15d876218cb4951fa62d658a", "filename": "gcc/gen-protos.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fgen-protos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fgen-protos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgen-protos.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -15,9 +15,8 @@ You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n-#include <ctype.h>\n #include \"hconfig.h\"\n+#include \"system.h\"\n #include \"scan.h\"\n #include \"cpplib.h\"\n #include \"cpphash.h\""}, {"sha": "55ac3147480584284a89353f53a963bfe3f2ff8a", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -20,7 +20,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"hconfig.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n \n #include \"obstack.h\"\n #define\tobstack_chunk_alloc\txmalloc"}, {"sha": "2c19c554f6366f3e9b05d1360ad3b3cf79484a75", "filename": "gcc/halfpic.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fhalfpic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fhalfpic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhalfpic.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -32,7 +32,7 @@ Boston, MA 02111-1307, USA.  */\n \n #ifdef HALF_PIC_INIT\n \n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"obstack.h\"\n@@ -41,7 +41,6 @@ Boston, MA 02111-1307, USA.  */\n #define obstack_chunk_free free\n \n extern char *xmalloc ();\n-extern void  free ();\n extern rtx eliminate_constant_term ();\n extern void assemble_name ();\n extern void output_addr_const ();"}, {"sha": "4149f3a83869f8778abac7aca32efa71fdefe05a", "filename": "gcc/hash.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fhash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fhash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -19,11 +19,10 @@ along with this program; if not, write to the Free Software\n Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"config.h\"\n+#include \"system.h\"\n #include \"hash.h\"\n #include \"obstack.h\"\n \n-extern void free PARAMS ((PTR));\n-\n /* Obstack allocation and deallocation routines.  */\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n@@ -33,10 +32,6 @@ extern char * xmalloc ();\n /* The default number of entries to use when creating a hash table.  */\n #define DEFAULT_SIZE (1009)\n \n-#ifndef NULL\n-#define NULL 0\n-#endif\n-\n /* Create a new hash table, given a number of entries.  */\n \n boolean"}, {"sha": "aa9390b7c740973eb98e17f64a1e8d2761fbf959", "filename": "gcc/scan-decls.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fscan-decls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fscan-decls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan-decls.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -17,9 +17,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n    Written by Per Bothner <bothner@cygnus.com>, July 1993.  */\n \n-#include <stdio.h>\n-#include <ctype.h>\n #include \"hconfig.h\"\n+#include \"system.h\"\n #include \"cpplib.h\"\n \n int brace_nesting = 0;"}, {"sha": "9f89d67b0344ce62c850ec059a2fcb5a6fc0949f", "filename": "gcc/scan.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fscan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b04cd50711e40415a169d0f157e4ab15c5344384/gcc%2Fscan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.c?ref=b04cd50711e40415a169d0f157e4ab15c5344384", "patch": "@@ -15,9 +15,9 @@ You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n-#include \"scan.h\"\n #include \"hconfig.h\"\n-#include <ctype.h>\n+#include \"system.h\"\n+#include \"scan.h\"\n \n int lineno = 1;\n int source_lineno = 1;"}]}