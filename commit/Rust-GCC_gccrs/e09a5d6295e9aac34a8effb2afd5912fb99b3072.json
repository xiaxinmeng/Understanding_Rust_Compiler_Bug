{"sha": "e09a5d6295e9aac34a8effb2afd5912fb99b3072", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA5YTVkNjI5NWU5YWFjMzRhOGVmZmIyYWZkNTkxMmZiOTliMzA3Mg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-11-15T22:46:25Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-11-15T22:46:25Z"}, "message": "cp-gimplify.c: Include pointer-set.h\n\n2004-11-15  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * cp-gimplify.c: Include pointer-set.h\n        (cp_genericize_r): Use pointer_sets instead of a hashtable.\n        Also instert the new statement for CLEANUP_STMT.\n        (cp_genericize): Use pointer_sets instead of a hashtable.\n        * Make-lang.in (cp-gimplify.o): Depend on pointer-set.h.\n\nFrom-SVN: r90699", "tree": {"sha": "0a213aa7f143348bc5b76d1b01caf01f19751a75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a213aa7f143348bc5b76d1b01caf01f19751a75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e09a5d6295e9aac34a8effb2afd5912fb99b3072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e09a5d6295e9aac34a8effb2afd5912fb99b3072", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e09a5d6295e9aac34a8effb2afd5912fb99b3072", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e09a5d6295e9aac34a8effb2afd5912fb99b3072/comments", "author": null, "committer": null, "parents": [{"sha": "4c2b2906b0c14c2af7abe20f00ec2b4fcf643a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c2b2906b0c14c2af7abe20f00ec2b4fcf643a4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c2b2906b0c14c2af7abe20f00ec2b4fcf643a4c"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "f6252236b66c3bd69d26766066f0c27bf31c7005", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09a5d6295e9aac34a8effb2afd5912fb99b3072/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09a5d6295e9aac34a8effb2afd5912fb99b3072/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e09a5d6295e9aac34a8effb2afd5912fb99b3072", "patch": "@@ -1,3 +1,11 @@\n+2004-11-15  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* cp-gimplify.c: Include pointer-set.h\n+\t(cp_genericize_r): Use pointer_sets instead of a hashtable.\n+\tAlso instert the new statement for CLEANUP_STMT.\n+\t(cp_genericize): Use pointer_sets instead of a hashtable.\n+\t* Make-lang.in (cp-gimplify.o): Depend on pointer-set.h.\n+\n 2004-11-15  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tFriend class name lookup 1/n, PR c++/18471"}, {"sha": "641a34e87dd4680349047b801521233539cb8c80", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09a5d6295e9aac34a8effb2afd5912fb99b3072/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09a5d6295e9aac34a8effb2afd5912fb99b3072/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=e09a5d6295e9aac34a8effb2afd5912fb99b3072", "patch": "@@ -277,7 +277,7 @@ cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) toplev.h real.h gt-cp-mangle.h \\\n cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) diagnostic.h gt-cp-parser.h \\\n   output.h\n cp/cp-gimplify.o: cp/cp-gimplify.c $(CXX_TREE_H) toplev.h c-common.h \\\n-\t$(TM_H) coretypes.h\n+\t$(TM_H) coretypes.h pointer-set.h\n \n cp/name-lookup.o: cp/name-lookup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(CXX_TREE_H) timevar.h gt-cp-name-lookup.h toplev.h \\"}, {"sha": "1d10b58ae505c2b1be261abf5844320d3f545dea", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e09a5d6295e9aac34a8effb2afd5912fb99b3072/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e09a5d6295e9aac34a8effb2afd5912fb99b3072/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=e09a5d6295e9aac34a8effb2afd5912fb99b3072", "patch": "@@ -30,6 +30,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"toplev.h\"\n #include \"tree-gimple.h\"\n #include \"hashtab.h\"\n+#include \"pointer-set.h\"\n \n /* Genericize a TRY_BLOCK.  */\n \n@@ -274,8 +275,7 @@ static tree\n cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n {\n   tree stmt = *stmt_p;\n-  htab_t htab = (htab_t) data;\n-  void **slot;\n+  struct pointer_set_t *p_set = (struct pointer_set_t*) data;\n \n   if (is_invisiref_parm (stmt))\n     {\n@@ -285,8 +285,7 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n     }\n \n   /* Other than invisiref parms, don't walk the same tree twice.  */\n-  slot = htab_find_slot (htab, stmt, INSERT);\n-  if (*slot)\n+  if (pointer_set_insert (p_set, stmt))\n     {\n       *walk_subtrees = 0;\n       return NULL_TREE;\n@@ -310,21 +309,23 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n      to lower this construct before scanning it, so we need to lower these\n      before doing anything else.  */\n   else if (TREE_CODE (stmt) == CLEANUP_STMT)\n-    *stmt_p = build2 (CLEANUP_EH_ONLY (stmt) ? TRY_CATCH_EXPR\n-\t\t\t\t\t     : TRY_FINALLY_EXPR,\n-\t\t      void_type_node,\n-\t\t      CLEANUP_BODY (stmt),\n-\t\t      CLEANUP_EXPR (stmt));\n-\n-  *slot = *stmt_p;\n+    {\n+      *stmt_p = build2 (CLEANUP_EH_ONLY (stmt) ? TRY_CATCH_EXPR\n+\t\t\t\t\t       : TRY_FINALLY_EXPR,\n+\t\t\tvoid_type_node,\n+\t\t\tCLEANUP_BODY (stmt),\n+\t\t\tCLEANUP_EXPR (stmt));\n+      pointer_set_insert (p_set, *stmt_p);\n+    }\n+  \n   return NULL;\n }\n \n void\n cp_genericize (tree fndecl)\n {\n   tree t;\n-  htab_t htab;\n+  struct pointer_set_t *p_set;\n \n   /* Fix up the types of parms passed by invisible reference.  */\n   for (t = DECL_ARGUMENTS (fndecl); t; t = TREE_CHAIN (t))\n@@ -356,9 +357,9 @@ cp_genericize (tree fndecl)\n \n   /* We do want to see every occurrence of the parms, so we can't just use\n      walk_tree's hash functionality.  */\n-  htab = htab_create (37, htab_hash_pointer, htab_eq_pointer, NULL);\n-  walk_tree (&DECL_SAVED_TREE (fndecl), cp_genericize_r, htab, NULL);\n-  htab_delete (htab);\n+  p_set = pointer_set_create ();\n+  walk_tree (&DECL_SAVED_TREE (fndecl), cp_genericize_r, p_set, NULL);\n+  pointer_set_destroy (p_set);\n \n   /* Do everything else.  */\n   c_genericize (fndecl);"}]}