{"sha": "c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyNWU2NmIyN2ViMGFhNzlmMTEwMGE2ZGE4N2Y2NTczMWVjZDhiNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-30T11:44:54Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-30T11:44:54Z"}, "message": "libgomp/testsuite \u2013 use 'stop'\n\n\tlibgomp/\n\t* testsuite/libgomp.fortran/: Replace 'STOP' by 'stop'.\n\nFrom-SVN: r277609", "tree": {"sha": "3d67d31fb84a86189d94374d510305b5a9a2e34b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d67d31fb84a86189d94374d510305b5a9a2e34b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c56d8d8de26c7d7ac46733b7b3c01ae34e144f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c56d8d8de26c7d7ac46733b7b3c01ae34e144f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c56d8d8de26c7d7ac46733b7b3c01ae34e144f1"}], "stats": {"total": 2554, "additions": 1389, "deletions": 1165}, "files": [{"sha": "f8e4515ed2b49af8b32fa3c17e8a2d8eec51aebc", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 224, "deletions": 0, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -1,3 +1,227 @@\n+2019-10-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/aligned1.f03: Replace 'STOP' by 'stop'.\n+\t* testsuite/libgomp.fortran/alloc-comp-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/alloc-comp-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/alloc-comp-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable10.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable11.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable12.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable8.f90: Ditto.\n+\t* testsuite/libgomp.fortran/allocatable9.f90: Ditto.\n+\t* testsuite/libgomp.fortran/associate1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/associate2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/associate3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/async_io_4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/async_io_5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/async_io_6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/async_io_7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/cancel-do-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/cancel-do-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/cancel-parallel-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/cancel-sections-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/cancel-taskgroup-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/character1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/character2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/collapse1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/collapse2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/collapse3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/collapse4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/crayptr1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/crayptr2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/crayptr3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/declare-simd-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/declare-simd-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/declare-target-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/depend-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/depend-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/depend-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/do1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/do2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/do_concurrent_5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/doacross1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/doacross2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/doacross3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/array_sections-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/array_sections-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/async_target-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/async_target-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/device-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/device-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/device-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/simd-8.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target-5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_update-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/target_update-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/teams-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/teams-3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/teams-4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/teams-5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/examples-4/teams-6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/lastprivate1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/lastprivate2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/lib1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/lib4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/lock-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/lock-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/nested1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/nestedfn1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/nestedfn2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/nestedfn3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/nestedfn4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/nestedfn5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_atomic1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_atomic2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_atomic3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_atomic4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_atomic5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_cond1.f: Ditto.\n+\t* testsuite/libgomp.fortran/omp_cond2.f: Ditto.\n+\t* testsuite/libgomp.fortran/omp_cond3.F90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_cond4.F90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_parse1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_parse2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_parse3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/omp_parse4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/openmp_version-1.f: Ditto.\n+\t* testsuite/libgomp.fortran/openmp_version-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: Ditto.\n+\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: Ditto.\n+\t* testsuite/libgomp.fortran/pointer1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pointer2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr25219.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr27395-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr27395-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr27416-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr27916-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr27916-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr28390.f: Ditto.\n+\t* testsuite/libgomp.fortran/pr29629.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr32550.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr33880.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr34020.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr35130.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr42162.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr46753.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr48894.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr49792-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr49792-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr63938-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr63938-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr65597.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr66199-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr71014.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr81304.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr81841.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr84418-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/pr84418-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/procptr1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/recursion1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reduction1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reduction2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reduction3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reduction4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reduction5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reduction6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reference1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/reference2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/retval1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/retval2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/sharing1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/sharing2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/simd1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/simd2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/simd3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/simd4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/simd5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/simd6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/simd7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/stack.f90: Ditto.\n+\t* testsuite/libgomp.fortran/strassen.f90: Ditto.\n+\t* testsuite/libgomp.fortran/tabs1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/tabs2.f: Ditto.\n+\t* testsuite/libgomp.fortran/target1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/target2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/target3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/target4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/target5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/target6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/target7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/target8.f90: Ditto.\n+\t* testsuite/libgomp.fortran/task1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/task2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/task3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/task4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/taskgroup1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/taskloop1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/taskloop2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/taskloop3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/taskloop4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/threadprivate1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/threadprivate2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/threadprivate3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/threadprivate4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr10.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr11.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr12.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr13.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr14.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr15.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr8.f90: Ditto.\n+\t* testsuite/libgomp.fortran/udr9.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla3.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla4.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla5.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla6.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla7.f90: Ditto.\n+\t* testsuite/libgomp.fortran/vla8.f90: Ditto.\n+\t* testsuite/libgomp.fortran/workshare1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/workshare2.f90: Ditto.\n+\n 2019-10-30  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/target-simd.f90: Use stop not abort."}, {"sha": "a0b80d4555fba7ea43e2f0a8d6739915e5f6ae0c", "filename": "libgomp/testsuite/libgomp.fortran/aligned1.f03", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Faligned1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Faligned1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Faligned1.f03?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -42,12 +42,12 @@ subroutine baz (x, c)\n   end do\n   call foo (p, q, c_loc (r(1)), s)\n   do i = 1, 1024\n-    if (p(i) /= i * i + 3 * i + 2) STOP 1\n+    if (p(i) /= i * i + 3 * i + 2) stop 1\n     p(i) = i\n   end do\n   call bar (p, q, c_loc (r(1)), s)\n   do i = 1, 1024\n-    if (p(i) /= i * i + 3 * i + 2) STOP 2\n+    if (p(i) /= i * i + 3 * i + 2) stop 2\n   end do\n   ! Attempt to create 64-byte aligned allocatable\n   do i = 1, 64\n@@ -65,7 +65,7 @@ subroutine baz (x, c)\n     end do\n     call baz (p, c)\n     do i = 1, 1024\n-      if (p(i) /= i * i + 5 * i + 2) STOP 3\n+      if (p(i) /= i * i + 5 * i + 2) stop 3\n     end do\n   end if\n end"}, {"sha": "ea76bc1e7e8961edcb4cd8fa7bf0ea0d9fcb764e", "filename": "libgomp/testsuite/libgomp.fortran/alloc-comp-1.f90", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,19 +22,19 @@ subroutine ver_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n     type (dl), intent (in) :: obj\n     integer, intent (in) :: val, cl1, cu1, cl2, cu2\n     logical, intent (in) :: c, f\n-    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) STOP 1\n+    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) stop 1\n     if (c) then\n-      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) STOP 2\n-      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) STOP 3\n+      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) stop 2\n+      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) stop 3\n     end if\n     if (val /= 0) then\n-      if (obj%a /= val .or. obj%b /= val) STOP 4\n-      if (obj%d /= val .or. obj%e /= val) STOP 5\n+      if (obj%a /= val .or. obj%b /= val) stop 4\n+      if (obj%d /= val .or. obj%e /= val) stop 5\n       if (c) then\n-        if (any (obj%c /= val)) STOP 6\n+        if (any (obj%c /= val)) stop 6\n       end if\n       if (f) then\n-        if (obj%f /= val) STOP 7\n+        if (obj%f /= val) stop 7\n       end if\n     end if\n   end subroutine ver_dl\n@@ -43,9 +43,9 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     integer, intent (in) :: val, hl, hu, cl1, cu1, cl2, cu2\n     logical, intent (in) :: h, k, c, f\n     integer :: i, j\n-    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) STOP 8\n+    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) stop 8\n     if (h) then\n-      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) STOP 9\n+      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) stop 9\n       do i = hl, hu\n         call ver_dl (obj%h(i), val, c, cl1, cu1, cl2, cu2, f)\n       end do\n@@ -57,7 +57,7 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     end do\n     if (k) call ver_dl (obj%k, val, c, cl1, cu1, cl2, cu2, f)\n     if (val /= 0) then\n-      if (obj%g /= val .or. obj%i /= val) STOP 10\n+      if (obj%g /= val .or. obj%i /= val) stop 10\n     end if\n   end subroutine ver_dt\n   subroutine alloc_dl (obj, val, c, cl1, cu1, cl2, cu2, f)"}, {"sha": "111005e187904141ee844011bc644259e5b1f1cb", "filename": "libgomp/testsuite/libgomp.fortran/alloc-comp-2.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,19 +22,19 @@ subroutine ver_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n     type (dl), intent (in) :: obj\n     integer, intent (in) :: val, cl1, cu1, cl2, cu2\n     logical, intent (in) :: c, f\n-    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) STOP 1\n+    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) stop 1\n     if (c) then\n-      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) STOP 2\n-      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) STOP 3\n+      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) stop 2\n+      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) stop 3\n     end if\n     if (val /= 0) then\n-      if (obj%a /= val .or. obj%b /= val) STOP 4\n-      if (obj%d /= val .or. obj%e /= val) STOP 5\n+      if (obj%a /= val .or. obj%b /= val) stop 4\n+      if (obj%d /= val .or. obj%e /= val) stop 5\n       if (c) then\n-        if (any (obj%c /= val)) STOP 6\n+        if (any (obj%c /= val)) stop 6\n       end if\n       if (f) then\n-        if (obj%f /= val) STOP 7\n+        if (obj%f /= val) stop 7\n       end if\n     end if\n   end subroutine ver_dl\n@@ -43,9 +43,9 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     integer, intent (in) :: val, hl, hu, cl1, cu1, cl2, cu2\n     logical, intent (in) :: h, k, c, f\n     integer :: i, j\n-    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) STOP 8\n+    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) stop 8\n     if (h) then\n-      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) STOP 9\n+      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) stop 9\n       do i = hl, hu\n         call ver_dl (obj%h(i), val, c, cl1, cu1, cl2, cu2, f)\n       end do\n@@ -57,7 +57,7 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     end do\n     if (k) call ver_dl (obj%k, val, c, cl1, cu1, cl2, cu2, f)\n     if (val /= 0) then\n-      if (obj%g /= val .or. obj%i /= val) STOP 10\n+      if (obj%g /= val .or. obj%i /= val) stop 10\n     end if\n   end subroutine ver_dt\n   subroutine alloc_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n@@ -122,20 +122,20 @@ subroutine foo (y)\n     logical, parameter :: T = .true.\n     logical :: l\n !$omp parallel private (x, y, z)\n-    if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 11\n+    if (allocated (x) .or. allocated (y) .or. allocated (z)) stop 11\n !$omp end parallel\n !$omp parallel firstprivate (x, y, z)\n-    if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 12\n+    if (allocated (x) .or. allocated (y) .or. allocated (z)) stop 12\n !$omp end parallel\n     l = F\n !$omp parallel sections lastprivate (x, y, z) firstprivate (l)\n !$omp section\n     if (.not. l) then\n-      if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 13\n+      if (allocated (x) .or. allocated (y) .or. allocated (z)) stop 13\n     end if\n !$omp section\n     if (.not. l) then\n-      if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 14\n+      if (allocated (x) .or. allocated (y) .or. allocated (z)) stop 14\n     end if\n     allocate (x, y, z(-3:-3,2:3))\n     call alloc_dt (x, 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n@@ -148,10 +148,10 @@ subroutine foo (y)\n     call ver_dt (z(-3,3), 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n !$omp section\n !$omp end parallel sections\n-    if (.not.allocated (x) .or. .not.allocated (y)) STOP 15\n-    if (.not.allocated (z)) STOP 16\n-    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) STOP 17\n-    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) STOP 18\n+    if (.not.allocated (x) .or. .not.allocated (y)) stop 15\n+    if (.not.allocated (z)) stop 16\n+    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) stop 17\n+    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) stop 18\n     call ver_dt (x, 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n     call ver_dt (y, 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n     call ver_dt (z(-3,2), 5, F, 0, 0, T, T, -1, -1, -1, -1, T)"}, {"sha": "0185859cb2678debecdebc52be568b117bdc747c", "filename": "libgomp/testsuite/libgomp.fortran/alloc-comp-3.f90", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,19 +22,19 @@ subroutine ver_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n     type (dl), intent (in) :: obj\n     integer, intent (in) :: val, cl1, cu1, cl2, cu2\n     logical, intent (in) :: c, f\n-    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) STOP 1\n+    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) stop 1\n     if (c) then\n-      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) STOP 2\n-      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) STOP 3\n+      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) stop 2\n+      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) stop 3\n     end if\n     if (val /= 0) then\n-      if (obj%a /= val .or. obj%b /= val) STOP 4\n-      if (obj%d /= val .or. obj%e /= val) STOP 5\n+      if (obj%a /= val .or. obj%b /= val) stop 4\n+      if (obj%d /= val .or. obj%e /= val) stop 5\n       if (c) then\n-        if (any (obj%c /= val)) STOP 6\n+        if (any (obj%c /= val)) stop 6\n       end if\n       if (f) then\n-        if (obj%f /= val) STOP 7\n+        if (obj%f /= val) stop 7\n       end if\n     end if\n   end subroutine ver_dl\n@@ -43,9 +43,9 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     integer, intent (in) :: val, hl, hu, cl1, cu1, cl2, cu2\n     logical, intent (in) :: h, k, c, f\n     integer :: i, j\n-    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) STOP 8\n+    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) stop 8\n     if (h) then\n-      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) STOP 9\n+      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) stop 9\n       do i = hl, hu\n         call ver_dl (obj%h(i), val, c, cl1, cu1, cl2, cu2, f)\n       end do\n@@ -57,7 +57,7 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     end do\n     if (k) call ver_dl (obj%k, val, c, cl1, cu1, cl2, cu2, f)\n     if (val /= 0) then\n-      if (obj%g /= val .or. obj%i /= val) STOP 10\n+      if (obj%g /= val .or. obj%i /= val) stop 10\n     end if\n   end subroutine ver_dt\n   subroutine alloc_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n@@ -124,27 +124,27 @@ subroutine foo (y, z, n)\n     logical, parameter :: F = .false.\n     logical, parameter :: T = .true.\n     logical :: l\n-    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) STOP 11\n-    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) STOP 12\n+    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) stop 11\n+    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) stop 12\n     call ver_dt (x(2), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n     call ver_dt (x(n), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n     call ver_dt (y(3), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n     call ver_dt (y(4), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n !$omp parallel private (z)\n-    if (allocated (z)) STOP 13\n+    if (allocated (z)) stop 13\n !$omp end parallel\n !$omp parallel firstprivate (z)\n-    if (allocated (z)) STOP 14\n+    if (allocated (z)) stop 14\n !$omp end parallel\n     l = F\n !$omp parallel sections lastprivate (z) firstprivate (l)\n !$omp section\n     if (.not. l) then\n-      if (allocated (z)) STOP 15\n+      if (allocated (z)) stop 15\n     end if\n !$omp section\n     if (.not. l) then\n-      if (allocated (z)) STOP 16\n+      if (allocated (z)) stop 16\n     end if\n     allocate (z(-3:-3,2:3))\n     call alloc_dt (z(-3,2), 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n@@ -153,9 +153,9 @@ subroutine foo (y, z, n)\n     call ver_dt (z(-3,3), 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n !$omp section\n !$omp end parallel sections\n-    if (.not.allocated (z)) STOP 17\n-    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) STOP 18\n-    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) STOP 19\n+    if (.not.allocated (z)) stop 17\n+    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) stop 18\n+    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) stop 19\n     call ver_dt (z(-3,2), 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n     call ver_dt (z(-3,3), 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n     call ver_dt (x(n - 1), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n@@ -203,8 +203,8 @@ subroutine foo (y, z, n)\n     call alloc_dt (z(-3,2), 5, T, 1, 2, F, T, 2, 3, -2, -2, F)\n     call alloc_dt (z(-3,3), 15, F, 0, 0, T, T, 2, 2, 2, 2, T)\n !$omp parallel firstprivate (x, y, z)\n-    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) STOP 20\n-    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) STOP 21\n+    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) stop 20\n+    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) stop 21\n     call ver_dt (x(n - 1), 5, T, 1, 2, F, T, 2, 3, -2, -2, F)\n     call alloc_dt (x(n - 1), 4, T, -3, -1, T, T, -1, -1, 2, 3, T)\n     call ver_dt (x(n - 1), 4, T, -3, -1, T, T, -1, -1, 2, 3, T)"}, {"sha": "59e14406082c07f72950fad17090da2304c04564", "filename": "libgomp/testsuite/libgomp.fortran/allocatable1.f90", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -7,7 +7,7 @@\n   logical :: k, l\n   b(:, :) = 16\n   l = .false.\n-  if (allocated (a)) STOP 1\n+  if (allocated (a)) stop 1\n !$omp parallel private (a, b) reduction (.or.:l)\n   l = l.or.allocated (a)\n   allocate (a(3, 6))\n@@ -18,18 +18,18 @@\n   deallocate (a)\n   l = l.or.allocated (a)\n !$omp end parallel\n-  if (allocated (a).or.l) STOP 2\n+  if (allocated (a).or.l) stop 2\n   allocate (a(6, 3))\n   a(:, :) = 3\n-  if (.not.allocated (a)) STOP 3\n+  if (.not.allocated (a)) stop 3\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n-  if (l) STOP 4\n+  if (l) stop 4\n !$omp parallel private (a, b) reduction (.or.:l)\n   l = l.or..not.allocated (a)\n   a(3, 2) = 1\n   b(3, 2) = 1\n !$omp end parallel\n-  if (l.or..not.allocated (a)) STOP 5\n+  if (l.or..not.allocated (a)) stop 5\n !$omp parallel firstprivate (a, b) reduction (.or.:l)\n   l = l.or..not.allocated (a)\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n@@ -41,7 +41,7 @@\n   a(:, :) = omp_get_thread_num ()\n   b(:, :) = omp_get_thread_num ()\n !$omp end parallel\n-  if (any (a.ne.3).or.any (b.ne.16).or.l) STOP 6\n+  if (any (a.ne.3).or.any (b.ne.16).or.l) stop 6\n   k = .true.\n !$omp parallel do firstprivate (a, b, k) lastprivate (a, b) &\n !$omp & reduction (.or.:l)\n@@ -59,9 +59,9 @@\n     a(:, :) = i + 2\n     b(:, :) = i\n   end do\n-  if (any (a.ne.38).or.any (b.ne.36).or.l) STOP 7\n+  if (any (a.ne.38).or.any (b.ne.36).or.l) stop 7\n   deallocate (a)\n-  if (allocated (a)) STOP 8\n+  if (allocated (a)) stop 8\n   allocate (a (0:1, 0:3))\n   a(:, :) = 0\n !$omp parallel do reduction (+:a) reduction (.or.:l) &\n@@ -72,10 +72,10 @@\n     a(modulo (i, 2), i / 2) = a(modulo (i, 2), i / 2) + i\n     a(i / 4, modulo (i, 4)) = a(i / 4, modulo (i, 4)) + i\n   end do\n-  if (l) STOP 9\n+  if (l) stop 9\n   do i = 0, 1\n     do j = 0, 3\n-      if (a(i, j) .ne. (5*i + 3*j)) STOP 10\n+      if (a(i, j) .ne. (5*i + 3*j)) stop 10\n     end do\n   end do\n end"}, {"sha": "9ebceb814dab7c60f6adb9d619fccabbe4414125", "filename": "libgomp/testsuite/libgomp.fortran/allocatable10.f90", "status": "modified", "additions": 68, "deletions": 68, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable10.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -4,109 +4,109 @@\n   integer :: i\n !$omp declare reduction (foo : integer : omp_out = omp_out + omp_in) &\n !$omp & initializer (omp_priv = 0)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 1\n   allocate (a, b(6:9), c(3, 8:9))\n   a = 0\n   b = 0\n   c = 0\n-  if (.not.allocated (a)) STOP 2\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 3\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 4\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 5\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 6\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 7\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 8\n+  if (.not.allocated (a)) stop 2\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 3\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 4\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 5\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 6\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 7\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 8\n !$omp parallel do reduction (+:a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) STOP 9\n-    if (.not.allocated (b) .or. size (b) /= 4) STOP 10\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 11\n-    if (.not.allocated (c) .or. size (c) /= 6) STOP 12\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 13\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 14\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 15\n+    if (.not.allocated (a)) stop 9\n+    if (.not.allocated (b) .or. size (b) /= 4) stop 10\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 11\n+    if (.not.allocated (c) .or. size (c) /= 6) stop 12\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 13\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 14\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 15\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) STOP 16\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 17\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 18\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 19\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 20\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 21\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 22\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 23\n+  if (.not.allocated (a)) stop 16\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 17\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 18\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 19\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 20\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 21\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 22\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) stop 23\n   a = 0\n   b = 0\n   c = 0\n !$omp parallel do reduction (foo : a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) STOP 24\n-    if (.not.allocated (b) .or. size (b) /= 4) STOP 25\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 26\n-    if (.not.allocated (c) .or. size (c) /= 6) STOP 27\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 28\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 29\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 30\n+    if (.not.allocated (a)) stop 24\n+    if (.not.allocated (b) .or. size (b) /= 4) stop 25\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 26\n+    if (.not.allocated (c) .or. size (c) /= 6) stop 27\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 28\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 29\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 30\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) STOP 31\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 32\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 33\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 34\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 35\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 36\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 37\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 38\n+  if (.not.allocated (a)) stop 31\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 32\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 33\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 34\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 35\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 36\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 37\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) stop 38\n   a = 0\n   b = 0\n   c = 0\n !$omp simd reduction (+:a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) STOP 39\n-    if (.not.allocated (b) .or. size (b) /= 4) STOP 40\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 41\n-    if (.not.allocated (c) .or. size (c) /= 6) STOP 42\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 43\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 44\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 45\n+    if (.not.allocated (a)) stop 39\n+    if (.not.allocated (b) .or. size (b) /= 4) stop 40\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 41\n+    if (.not.allocated (c) .or. size (c) /= 6) stop 42\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 43\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 44\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 45\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) STOP 46\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 47\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 48\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 49\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 50\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 51\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 52\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 53\n+  if (.not.allocated (a)) stop 46\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 47\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 48\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 49\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 50\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 51\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 52\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) stop 53\n   a = 0\n   b = 0\n   c = 0\n !$omp simd reduction (foo : a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) STOP 54\n-    if (.not.allocated (b) .or. size (b) /= 4) STOP 55\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 56\n-    if (.not.allocated (c) .or. size (c) /= 6) STOP 57\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 58\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 59\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 60\n+    if (.not.allocated (a)) stop 54\n+    if (.not.allocated (b) .or. size (b) /= 4) stop 55\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 56\n+    if (.not.allocated (c) .or. size (c) /= 6) stop 57\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 58\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 59\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 60\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) STOP 61\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 62\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 63\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 64\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 65\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 66\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 67\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 68\n+  if (.not.allocated (a)) stop 61\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 62\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 63\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 64\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 65\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 66\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 67\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) stop 68\n end"}, {"sha": "c3b82942f30d230a1a2a61fbc5332c511826a390", "filename": "libgomp/testsuite/libgomp.fortran/allocatable11.f90", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable11.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,68 +5,68 @@\n   integer, allocatable, save :: a, b(:), c(:,:)\n   integer :: p\n !$omp threadprivate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 1\n \n   call omp_set_dynamic (.false.)\n   call omp_set_num_threads (4)\n \n !$omp parallel num_threads (4)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 2\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 2\n !$omp end parallel\n \n   allocate (a, b(6:9), c(3, 8:9))\n   a = 4\n   b = 5\n   c = 6\n-  if (.not.allocated (a)) STOP 3\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 4\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 5\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 6\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 7\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 8\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 9\n+  if (.not.allocated (a)) stop 3\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 4\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 5\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 6\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 7\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 8\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 9\n \n !$omp parallel num_threads (4) copyin (a, b, c) private (p)\n   p = omp_get_thread_num ()\n-  if (.not.allocated (a)) STOP 10\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 11\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 12\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 13\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 14\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 15\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 16\n-  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) STOP 17\n+  if (.not.allocated (a)) stop 10\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 11\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 12\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 13\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 14\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 15\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 16\n+  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) stop 17\n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 18\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 18\n   allocate (a, b(p:9), c(3, p:7))\n   a = p\n   b = p\n   c = p\n-  if (.not.allocated (a)) STOP 19\n-  if (.not.allocated (b) .or. size (b) /= (10 - p)) STOP 20\n-  if (lbound (b, 1) /= p .or. ubound (b, 1) /= 9) STOP 21\n-  if (.not.allocated (c) .or. size (c) /= (3 * (8 - p))) STOP 22\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= (8 - p)) STOP 23\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 24\n-  if (lbound (c, 2) /= p .or. ubound (c, 2) /= 7) STOP 25\n-  if (a /= p .or. any (b /= p) .or. any (c /= p)) STOP 26\n+  if (.not.allocated (a)) stop 19\n+  if (.not.allocated (b) .or. size (b) /= (10 - p)) stop 20\n+  if (lbound (b, 1) /= p .or. ubound (b, 1) /= 9) stop 21\n+  if (.not.allocated (c) .or. size (c) /= (3 * (8 - p))) stop 22\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= (8 - p)) stop 23\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 24\n+  if (lbound (c, 2) /= p .or. ubound (c, 2) /= 7) stop 25\n+  if (a /= p .or. any (b /= p) .or. any (c /= p)) stop 26\n !$omp end parallel\n \n !$omp parallel num_threads (4) copyin (a, b, c)\n-  if (.not.allocated (a)) STOP 27\n-  if (.not.allocated (b) .or. size (b) /= 10) STOP 28\n-  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 9) STOP 29\n-  if (.not.allocated (c) .or. size (c) /= 24) STOP 30\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 8) STOP 31\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 32\n-  if (lbound (c, 2) /= 0 .or. ubound (c, 2) /= 7) STOP 33\n-  if (a /= 0 .or. any (b /= 0) .or. any (c /= 0)) STOP 34\n+  if (.not.allocated (a)) stop 27\n+  if (.not.allocated (b) .or. size (b) /= 10) stop 28\n+  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 9) stop 29\n+  if (.not.allocated (c) .or. size (c) /= 24) stop 30\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 8) stop 31\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 32\n+  if (lbound (c, 2) /= 0 .or. ubound (c, 2) /= 7) stop 33\n+  if (a /= 0 .or. any (b /= 0) .or. any (c /= 0)) stop 34\n !$omp end parallel\n \n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 35\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 35\n \n !$omp parallel num_threads (4) copyin (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 36\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 36\n !$omp end parallel\n end"}, {"sha": "8ce4dd2f3fed058943d21c2462216d5da118014b", "filename": "libgomp/testsuite/libgomp.fortran/allocatable12.f90", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable12.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -2,11 +2,11 @@\n \n   integer, allocatable :: a, b(:), c(:,:)\n   logical :: l\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 1\n \n !$omp parallel private (a, b, c, l)\n   l = .false.\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 2\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 2\n \n !$omp single\n   allocate (a, b(6:9), c(3, 8:9))\n@@ -15,60 +15,60 @@\n   c = 6\n !$omp end single copyprivate (a, b, c)\n \n-  if (.not.allocated (a)) STOP 3\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 4\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 5\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 6\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 7\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 8\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 9\n-  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) STOP 10\n+  if (.not.allocated (a)) stop 3\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 4\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 5\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 6\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 7\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 8\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 9\n+  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) stop 10\n \n !$omp single\n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 11\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 11\n   allocate (a, b(0:4), c(3, 2:7))\n   a = 1\n   b = 2\n   c = 3\n !$omp end single copyprivate (a, b, c)\n \n-  if (.not.allocated (a)) STOP 12\n-  if (.not.allocated (b) .or. size (b) /= 5) STOP 13\n-  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) STOP 14\n-  if (.not.allocated (c) .or. size (c) /= 18) STOP 15\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) STOP 16\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 17\n-  if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) STOP 18\n-  if (a /= 1 .or. any (b /= 2) .or. any (c /= 3)) STOP 19\n+  if (.not.allocated (a)) stop 12\n+  if (.not.allocated (b) .or. size (b) /= 5) stop 13\n+  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) stop 14\n+  if (.not.allocated (c) .or. size (c) /= 18) stop 15\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) stop 16\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 17\n+  if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) stop 18\n+  if (a /= 1 .or. any (b /= 2) .or. any (c /= 3)) stop 19\n \n !$omp single\n   l = .true.\n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 20\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 20\n   allocate (a, b(2:6), c(3:5, 3:8))\n   a = 7\n   b = 8\n   c = 9\n !$omp end single copyprivate (a, b, c)\n \n-  if (.not.allocated (a)) STOP 21\n-  if (.not.allocated (b) .or. size (b) /= 5) STOP 22\n+  if (.not.allocated (a)) stop 21\n+  if (.not.allocated (b) .or. size (b) /= 5) stop 22\n   if (l) then\n-    if (lbound (b, 1) /= 2 .or. ubound (b, 1) /= 6) STOP 23\n+    if (lbound (b, 1) /= 2 .or. ubound (b, 1) /= 6) stop 23\n   else\n-    if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) STOP 24\n+    if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) stop 24\n   end if\n-  if (.not.allocated (c) .or. size (c) /= 18) STOP 25\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) STOP 26\n+  if (.not.allocated (c) .or. size (c) /= 18) stop 25\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) stop 26\n   if (l) then\n-    if (lbound (c, 1) /= 3 .or. ubound (c, 1) /= 5) STOP 27\n-    if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 8) STOP 28\n+    if (lbound (c, 1) /= 3 .or. ubound (c, 1) /= 5) stop 27\n+    if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 8) stop 28\n   else\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 29\n-    if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) STOP 30\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 29\n+    if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) stop 30\n   end if\n-  if (a /= 7 .or. any (b /= 8) .or. any (c /= 9)) STOP 31\n+  if (a /= 7 .or. any (b /= 8) .or. any (c /= 9)) stop 31\n \n !$omp end parallel\n end"}, {"sha": "fa2e774f6edc821354b768d64f74f0fab6804afe", "filename": "libgomp/testsuite/libgomp.fortran/allocatable2.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -7,7 +7,7 @@\n   integer :: n\n   logical :: l\n !$omp threadprivate (a)\n-  if (allocated (a)) STOP 1\n+  if (allocated (a)) stop 1\n   call omp_set_dynamic (.false.)\n   l = .false.\n !$omp parallel num_threads (4) reduction(.or.:l)\n@@ -16,7 +16,7 @@\n   l = l.or..not.allocated (a)\n   l = l.or.size(a).ne.12.or.size(a,1).ne.3.or.size(a,2).ne.4\n !$omp end parallel\n-  if (l.or.any(a.ne.6)) STOP 1\n+  if (l.or.any(a.ne.6)) stop 1\n !$omp parallel num_threads (4) copyin (a) reduction(.or.:l) private (b)\n   l = l.or.allocated (b)\n   l = l.or..not.allocated (a)\n@@ -37,11 +37,11 @@\n   deallocate (b)\n   l = l.or.allocated (b)\n !$omp end parallel\n-  if (n.lt.0 .or. n.ge.4) STOP 2\n-  if (l.or.any(a.ne.(n + 36))) STOP 3\n+  if (n.lt.0 .or. n.ge.4) stop 2\n+  if (l.or.any(a.ne.(n + 36))) stop 3\n !$omp parallel num_threads (4) reduction(.or.:l)\n   deallocate (a)\n   l = l.or.allocated (a)\n !$omp end parallel\n-  if (l.or.allocated (a)) STOP 4\n+  if (l.or.allocated (a)) stop 4\n end"}, {"sha": "4663b15988fb926725c7d7d00c8175de890d03c2", "filename": "libgomp/testsuite/libgomp.fortran/allocatable3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -4,7 +4,7 @@\n   integer :: i\n   logical :: l\n   l = .false.\n-  if (allocated (a)) STOP 1\n+  if (allocated (a)) stop 1\n !$omp parallel private (a) reduction (.or.:l)\n   allocate (a (-7:-5))\n   l = l.or..not.allocated (a)\n@@ -18,5 +18,5 @@\n   l = l.or.any (a.ne.0)\n   deallocate (a)\n !$omp end parallel\n-  if (l.or.allocated (a)) STOP 2\n+  if (l.or.allocated (a)) stop 2\n end"}, {"sha": "2a8cf22901d748f4a0616407a5250854890f161f", "filename": "libgomp/testsuite/libgomp.fortran/allocatable4.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -6,7 +6,7 @@\n   logical :: k, l\n   b(:, :) = 16\n   l = .false.\n-  if (allocated (a)) STOP 1\n+  if (allocated (a)) stop 1\n !$omp task private (a, b) shared (l)\n   l = l.or.allocated (a)\n   allocate (a(3, 6))\n@@ -18,19 +18,19 @@\n   l = l.or.allocated (a)\n !$omp end task\n !$omp taskwait\n-  if (allocated (a).or.l) STOP 2\n+  if (allocated (a).or.l) stop 2\n   allocate (a(6, 3))\n   a(:, :) = 3\n-  if (.not.allocated (a)) STOP 3\n+  if (.not.allocated (a)) stop 3\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n-  if (l) STOP 4\n+  if (l) stop 4\n !$omp task private (a, b) shared (l)\n   l = l.or..not.allocated (a)\n   a(3, 2) = 1\n   b(3, 2) = 1\n !$omp end task\n !$omp taskwait\n-  if (l.or..not.allocated (a)) STOP 5\n+  if (l.or..not.allocated (a)) stop 5\n !$omp task firstprivate (a, b) shared (l)\n   l = l.or..not.allocated (a)\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n@@ -43,5 +43,5 @@\n   b(:, :) = 8\n !$omp end task\n !$omp taskwait\n-  if (any (a.ne.3).or.any (b.ne.16).or.l) STOP 6\n+  if (any (a.ne.3).or.any (b.ne.16).or.l) stop 6\n end"}, {"sha": "73027e7082c81be7125db5046a4edb77d3d567b2", "filename": "libgomp/testsuite/libgomp.fortran/allocatable5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -12,6 +12,6 @@ program pr42866\n       a = a + 2\n     !$omp end sections\n   !$omp end parallel\n-  if (any (a.ne.3)) STOP 1\n+  if (any (a.ne.3)) stop 1\n   deallocate (a)\n end"}, {"sha": "b7bfba9c53de3e2ea74ff1b7d03cdf30be20daf6", "filename": "libgomp/testsuite/libgomp.fortran/allocatable6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -25,10 +25,10 @@ subroutine sub (a, b, c, d, n)\n     else if (i .gt. 1 .and. i .lt. 9) then\n       j = 7\n     end if\n-    if (c(i) .ne. j) STOP 1\n+    if (c(i) .ne. j) stop 1\n     j = 179 - modulo (i, 11)\n     if (i .gt. 1 .and. i .lt. 9) j = i\n-    if (d(i) .ne. j) STOP 2\n+    if (d(i) .ne. j) stop 2\n   end do\n   deallocate (a, b, c, d)\n end"}, {"sha": "77cd5be6c8262dbc58baf4def42e8a9df21b88c7", "filename": "libgomp/testsuite/libgomp.fortran/allocatable7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -12,5 +12,5 @@\n   deallocate (a)\n   l = l .or. allocated (a)\n !$omp end parallel\n-  if (l) STOP 1\n+  if (l) stop 1\n end"}, {"sha": "d1a216a9f4675ae75451200c2828678956458120", "filename": "libgomp/testsuite/libgomp.fortran/allocatable8.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable8.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,10 +5,10 @@\n   integer, save, allocatable :: a(:, :)\n   logical :: l\n !$omp threadprivate (a)\n-  if (allocated (a)) STOP 1\n+  if (allocated (a)) stop 1\n   l = .false.\n !$omp parallel copyin (a) num_threads (4) reduction(.or.:l)\n   l = l.or.allocated (a)\n !$omp end parallel\n-  if (l.or.allocated (a)) STOP 2\n+  if (l.or.allocated (a)) stop 2\n end"}, {"sha": "a9929f7506ab776feb6138bf06890a8066611ff6", "filename": "libgomp/testsuite/libgomp.fortran/allocatable9.f90", "status": "modified", "additions": 105, "deletions": 105, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable9.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -2,155 +2,155 @@\n \n   integer, allocatable :: a, b(:), c(:,:)\n   logical :: l\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 1\n !$omp parallel private (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 2\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 2\n   allocate (a, b(-7:-1), c(2:3, 3:5))\n-  if (.not.allocated (a)) STOP 3\n-  if (.not.allocated (b) .or. size (b) /= 7) STOP 4\n-  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) STOP 5\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 6\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) STOP 7\n-  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) STOP 8\n-  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) STOP 9\n+  if (.not.allocated (a)) stop 3\n+  if (.not.allocated (b) .or. size (b) /= 7) stop 4\n+  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) stop 5\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 6\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) stop 7\n+  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) stop 8\n+  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) stop 9\n   a = 4\n   b = 3\n   c = 2\n !$omp end parallel\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 10\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 10\n !$omp parallel firstprivate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 11\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 11\n   allocate (a, b(-7:-1), c(2:3, 3:5))\n-  if (.not.allocated (a)) STOP 12\n-  if (.not.allocated (b) .or. size (b) /= 7) STOP 13\n-  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) STOP 14\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 15\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) STOP 16\n-  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) STOP 17\n-  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) STOP 18\n+  if (.not.allocated (a)) stop 12\n+  if (.not.allocated (b) .or. size (b) /= 7) stop 13\n+  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) stop 14\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 15\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) stop 16\n+  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) stop 17\n+  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) stop 18\n   a = 4\n   b = 3\n   c = 2\n !$omp end parallel\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 19\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) stop 19\n   allocate (a, b(6:9), c(3, 8:9))\n   a = 2\n   b = 4\n   c = 5\n-  if (.not.allocated (a)) STOP 20\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 21\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 22\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 23\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 24\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 25\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 26\n+  if (.not.allocated (a)) stop 20\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 21\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 22\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 23\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 24\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 25\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 26\n !$omp parallel firstprivate (a, b, c)\n-  if (.not.allocated (a)) STOP 27\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 28\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 29\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 30\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 31\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 32\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 33\n-  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) STOP 34\n+  if (.not.allocated (a)) stop 27\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 28\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 29\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 30\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 31\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 32\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 33\n+  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) stop 34\n   deallocate (a)\n-  if (allocated (a)) STOP 35\n+  if (allocated (a)) stop 35\n   allocate (a)\n   a = 8\n   b = (/ 1, 2, 3 /)\n   c = reshape ((/ 1, 2, 3, 4, 5, 6, 7, 8 /), (/ 2, 4 /))\n-  if (.not.allocated (a)) STOP 36\n-  if (.not.allocated (b) .or. size (b) /= 3) STOP 37\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) STOP 38\n-  if (.not.allocated (c) .or. size (c) /= 8) STOP 39\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) STOP 40\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) STOP 41\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) STOP 42\n-  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) STOP 43\n+  if (.not.allocated (a)) stop 36\n+  if (.not.allocated (b) .or. size (b) /= 3) stop 37\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) stop 38\n+  if (.not.allocated (c) .or. size (c) /= 8) stop 39\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) stop 40\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) stop 41\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) stop 42\n+  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) stop 43\n !$omp end parallel\n-  if (.not.allocated (a)) STOP 44\n-  if (.not.allocated (b) .or. size (b) /= 4) STOP 45\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 46\n-  if (.not.allocated (c) .or. size (c) /= 6) STOP 47\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 48\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 49\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 50\n-  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) STOP 51\n+  if (.not.allocated (a)) stop 44\n+  if (.not.allocated (b) .or. size (b) /= 4) stop 45\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 46\n+  if (.not.allocated (c) .or. size (c) /= 6) stop 47\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 48\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 49\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 50\n+  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) stop 51\n   l = .false.\n !$omp parallel sections lastprivate (a, b, c) firstprivate (l)\n !$omp section\n-  if (.not.allocated (a)) STOP 52\n+  if (.not.allocated (a)) stop 52\n   if (l) then\n-    if (.not.allocated (b) .or. size (b) /= 6) STOP 53\n-    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) STOP 54\n-    if (.not.allocated (c) .or. size (c) /= 8) STOP 55\n-    if (size (c, 1) /= 4 .or. size (c, 2) /= 2) STOP 56\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) STOP 57\n-    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) STOP 58\n-    if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) STOP 59\n+    if (.not.allocated (b) .or. size (b) /= 6) stop 53\n+    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) stop 54\n+    if (.not.allocated (c) .or. size (c) /= 8) stop 55\n+    if (size (c, 1) /= 4 .or. size (c, 2) /= 2) stop 56\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) stop 57\n+    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) stop 58\n+    if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) stop 59\n   else\n-    if (.not.allocated (b) .or. size (b) /= 4) STOP 60\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 61\n-    if (.not.allocated (c) .or. size (c) /= 6) STOP 62\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 63\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 64\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 65\n+    if (.not.allocated (b) .or. size (b) /= 4) stop 60\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 61\n+    if (.not.allocated (c) .or. size (c) /= 6) stop 62\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 63\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 64\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 65\n   end if\n   l = .true.\n   deallocate (a)\n-  if (allocated (a)) STOP 66\n+  if (allocated (a)) stop 66\n   allocate (a)\n   a = 8\n   b = (/ 1, 2, 3 /)\n   c = reshape ((/ 1, 2, 3, 4, 5, 6, 7, 8 /), (/ 2, 4 /))\n-  if (.not.allocated (a)) STOP 67\n-  if (.not.allocated (b) .or. size (b) /= 3) STOP 68\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) STOP 69\n-  if (.not.allocated (c) .or. size (c) /= 8) STOP 70\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) STOP 71\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) STOP 72\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) STOP 73\n-  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) STOP 74\n+  if (.not.allocated (a)) stop 67\n+  if (.not.allocated (b) .or. size (b) /= 3) stop 68\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) stop 69\n+  if (.not.allocated (c) .or. size (c) /= 8) stop 70\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) stop 71\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) stop 72\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) stop 73\n+  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) stop 74\n !$omp section\n-  if (.not.allocated (a)) STOP 75\n+  if (.not.allocated (a)) stop 75\n   if (l) then\n-    if (.not.allocated (b) .or. size (b) /= 3) STOP 76\n-    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) STOP 77\n-    if (.not.allocated (c) .or. size (c) /= 8) STOP 78\n-    if (size (c, 1) /= 2 .or. size (c, 2) /= 4) STOP 79\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) STOP 80\n-    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) STOP 81\n-    if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) STOP 82\n+    if (.not.allocated (b) .or. size (b) /= 3) stop 76\n+    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) stop 77\n+    if (.not.allocated (c) .or. size (c) /= 8) stop 78\n+    if (size (c, 1) /= 2 .or. size (c, 2) /= 4) stop 79\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) stop 80\n+    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) stop 81\n+    if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) stop 82\n   else\n-    if (.not.allocated (b) .or. size (b) /= 4) STOP 83\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 84\n-    if (.not.allocated (c) .or. size (c) /= 6) STOP 85\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 86\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 87\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 88\n+    if (.not.allocated (b) .or. size (b) /= 4) stop 83\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) stop 84\n+    if (.not.allocated (c) .or. size (c) /= 6) stop 85\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) stop 86\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) stop 87\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) stop 88\n   end if\n   l = .true.\n   deallocate (a)\n-  if (allocated (a)) STOP 89\n+  if (allocated (a)) stop 89\n   allocate (a)\n   a = 12\n   b = (/ 9, 8, 7, 6, 5, 4 /)\n   c = reshape ((/ 1, 2, 3, 4, 5, 6, 7, 8 /), (/ 4, 2 /))\n-  if (.not.allocated (a)) STOP 90\n-  if (.not.allocated (b) .or. size (b) /= 6) STOP 91\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) STOP 92\n-  if (.not.allocated (c) .or. size (c) /= 8) STOP 93\n-  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) STOP 94\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) STOP 95\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) STOP 96\n-  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) STOP 97\n+  if (.not.allocated (a)) stop 90\n+  if (.not.allocated (b) .or. size (b) /= 6) stop 91\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) stop 92\n+  if (.not.allocated (c) .or. size (c) /= 8) stop 93\n+  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) stop 94\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) stop 95\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) stop 96\n+  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) stop 97\n !$omp end parallel sections\n-  if (.not.allocated (a)) STOP 98\n-  if (.not.allocated (b) .or. size (b) /= 6) STOP 99\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) STOP 100\n-  if (.not.allocated (c) .or. size (c) /= 8) STOP 101\n-  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) STOP 102\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) STOP 103\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) STOP 104\n-  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) STOP 105\n+  if (.not.allocated (a)) stop 98\n+  if (.not.allocated (b) .or. size (b) /= 6) stop 99\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) stop 100\n+  if (.not.allocated (c) .or. size (c) /= 8) stop 101\n+  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) stop 102\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) stop 103\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) stop 104\n+  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) stop 105\n end"}, {"sha": "31ecaf04200d2428256032a894c16520baed3b96", "filename": "libgomp/testsuite/libgomp.fortran/associate1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -12,12 +12,12 @@ program associate1\n !$omp parallel private(v, a) default(none)\n   v = -1\n   a = 2.5\n-  if (v /= -1 .or. u /= 15) STOP 1\n-  if (a(2,1) /= 2.5 .or. b /= 3.5) STOP 2\n+  if (v /= -1 .or. u /= 15) stop 1\n+  if (a(2,1) /= 2.5 .or. b /= 3.5) stop 2\n   associate(u => v, b => a(2, 1))\n-  if (u /= -1 .or. b /= 2.5) STOP 3\n+  if (u /= -1 .or. b /= 2.5) stop 3\n   end associate\n-  if (u /= 15 .or. b /= 3.5) STOP 4\n+  if (u /= 15 .or. b /= 3.5) stop 4\n !$omp end parallel\n   end associate\n end program"}, {"sha": "63d172b476c16ad252c7e06aecdea76beeb23678", "filename": "libgomp/testsuite/libgomp.fortran/associate2.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -20,12 +20,12 @@ program associate2\n !$omp parallel private(v, a) default(none)\n   v = -1\n   forall (k = 1:3, l = 1:3) a(k, l)%a(:,:) = 2.5\n-  if (v(3) /= -1 .or. u(3) /= 15) STOP 1\n-  if (a(2,1)%a(1,2) /= 2.5 .or. b(1,2) /= 3.5) STOP 2\n+  if (v(3) /= -1 .or. u(3) /= 15) stop 1\n+  if (a(2,1)%a(1,2) /= 2.5 .or. b(1,2) /= 3.5) stop 2\n   associate(u => v, b => a(2, 1)%a)\n-  if (u(3) /= -1 .or. b(1,2) /= 2.5) STOP 3\n+  if (u(3) /= -1 .or. b(1,2) /= 2.5) stop 3\n   end associate\n-  if (u(3) /= 15 .or. b(1,2) /= 3.5) STOP 4\n+  if (u(3) /= 15 .or. b(1,2) /= 3.5) stop 4\n !$omp end parallel\n   end associate\n   forall (k = 1:3, l = 1:3) a(k, l)%c(:,:)%i = 7\n@@ -35,12 +35,12 @@ program associate2\n   associate(d => a(i, j)%c(2,:)%i)\n !$omp parallel private(a) default(none)\n   forall (k = 1:3, l = 1:3) a(k, l)%c(:,:)%i = 15\n-  if (a(1,2)%c(2,1)%i /= 15 .or. d(1) /= 9) STOP 5\n-  if (a(1,2)%c(2,2)%i /= 15 .or. d(2) /= 7) STOP 6\n+  if (a(1,2)%c(2,1)%i /= 15 .or. d(1) /= 9) stop 5\n+  if (a(1,2)%c(2,2)%i /= 15 .or. d(2) /= 7) stop 6\n   associate(d => a(2,1)%c(2,:)%i)\n-  if (d(1) /= 15 .or. d(2) /= 15) STOP 7\n+  if (d(1) /= 15 .or. d(2) /= 15) stop 7\n   end associate\n-  if (d(1) /= 9 .or. d(2) /= 7) STOP 8\n+  if (d(1) /= 9 .or. d(2) /= 7) stop 8\n !$omp end parallel\n   end associate\n end program"}, {"sha": "29c2dd3fc1d8b43293d4df50771d64d003f057e0", "filename": "libgomp/testsuite/libgomp.fortran/associate3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -16,5 +16,5 @@\n     if (j.eq.1) k = 7\n   end do\n   end associate\n-  if (any (v%f(:).ne.21.) .or. i.ne.7) STOP 1\n+  if (any (v%f(:).ne.21.) .or. i.ne.7) stop 1\n end"}, {"sha": "1ff76b4f162c570f517e476f29165e3291d838e3", "filename": "libgomp/testsuite/libgomp.fortran/async_io_4.f90", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,28 +17,28 @@ program main\n   i = 41\n   read (20,*, asynchronous=\"yes\") i\n   wait (20)\n-  if (i .ne. 1) STOP 1\n+  if (i .ne. 1) stop 1\n   write (*,*) ' '\n   backspace (20)\n   i = 42\n   read (20,*, asynchronous=\"yes\") i\n   close (20)\n-  if (i .ne. 1) STOP 2\n+  if (i .ne. 1) stop 2\n \n   ! PR libfortran/20125\n   open (20, status='scratch', asynchronous=\"yes\")\n   write (20,*, asynchronous=\"yes\") 7\n   backspace (20)\n   read (20,*, asynchronous=\"yes\") i\n   wait (20)\n-  if (i .ne. 7) STOP 3\n+  if (i .ne. 7) stop 3\n   close (20)\n \n   open (20, status='scratch', form='unformatted')\n   write (20) 8\n   backspace (20)\n   read (20) i\n-  if (i .ne. 8) STOP 4\n+  if (i .ne. 8) stop 4\n   close (20)\n \n   ! PR libfortran/20471\n@@ -52,7 +52,7 @@ program main\n   read (3) (y(n),n=1,10)\n \n   do n = 1, 10\n-     if (abs(x(n)-y(n)) > 0.00001) STOP 5\n+     if (abs(x(n)-y(n)) > 0.00001) stop 5\n   end do\n   close (3)\n \n@@ -69,22 +69,22 @@ program main\n   nr = nr + 1\n   goto 20\n 30 continue\n-  if (nr .ne. 5) STOP 6\n+  if (nr .ne. 5) stop 6\n \n   do i = 1, nr+1\n      backspace (3)\n   end do\n \n   do i = 1, nr\n      read(3,end=70,err=90) n, (x(n),n=1,10)\n-     if (abs(x(1) - i) .gt. 0.001) STOP 7\n+     if (abs(x(1) - i) .gt. 0.001) stop 7\n   end do\n   close (3)\n   stop\n \n 70 continue\n-  STOP 8\n+  stop 8\n 90 continue\n-  STOP 9\n+  stop 9\n \n end program"}, {"sha": "56487bbd3faa402e38568cef8332a7acfe38a53c", "filename": "libgomp/testsuite/libgomp.fortran/async_io_5.f90", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -20,20 +20,20 @@\n ! Test character kind\n open(99, file=\"test.dat\")\n read (99,*, iostat=stat) cvar\n-if (stat /= 0 .or. cvar /= \"1\") STOP 1\n+if (stat /= 0 .or. cvar /= \"1\") stop 1\n read (99,*, iostat=stat) cvar\n-if (stat /= 0 .or. cvar /= \"2\") STOP 2\n+if (stat /= 0 .or. cvar /= \"2\") stop 2\n read (99,*, iostat=stat) cvar              ! << FAILS: stat /= 0\n-if (stat /= 0 .or. cvar /= \"3\") STOP 3 ! << aborts here\n+if (stat /= 0 .or. cvar /= \"3\") stop 3 ! << aborts here\n \n ! Test real kind\n rewind(99)\n read (99,*, iostat=stat) var\n-if (stat /= 0 .or. var /= 1.0) STOP 4\n+if (stat /= 0 .or. var /= 1.0) stop 4\n read (99,*, iostat=stat) var\n-if (stat /= 0 .or. var /= 2.0) STOP 5\n+if (stat /= 0 .or. var /= 2.0) stop 5\n read (99,*, iostat=stat) var ! << FAILS: stat /= 0\n-if (stat /= 0 .or. var /= 3.0) STOP 6\n+if (stat /= 0 .or. var /= 3.0) stop 6\n close(99, status=\"delete\")\n \n ! Test real kind with exponents\n@@ -45,11 +45,11 @@\n \n open(99, file=\"test.dat\")\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 7\n+if (stat /= 0) stop 7\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 8\n+if (stat /= 0) stop 8\n read (99,*) var ! << FAILS: stat /= 0\n-if (stat /= 0) STOP 9\n+if (stat /= 0) stop 9\n close(99, status=\"delete\")\n \n ! Test logical kind\n@@ -61,11 +61,11 @@\n \n open(99, file=\"test.dat\")\n read (99,*, iostat=stat) lvar\n-if (stat /= 0 .or. (.not.lvar)) STOP 10\n+if (stat /= 0 .or. (.not.lvar)) stop 10\n read (99,*, iostat=stat) lvar\n-if (stat /= 0 .or. lvar) STOP 11\n+if (stat /= 0 .or. lvar) stop 11\n read (99,*) lvar ! << FAILS: stat /= 0\n-if (stat /= 0 .or. (.not.lvar)) STOP 12\n+if (stat /= 0 .or. (.not.lvar)) stop 12\n close(99, status=\"delete\")\n \n ! Test combinations of Inf and Nan\n@@ -77,11 +77,11 @@\n \n open(99, file=\"test.dat\")\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 13\n+if (stat /= 0) stop 13\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 14\n+if (stat /= 0) stop 14\n read (99,*) var          ! << FAILS: stat /= 0\n-if (stat /= 0) STOP 1! << aborts here\n+if (stat /= 0) stop 1! << aborts here\n close(99, status=\"delete\")\n \n open(99, file=\"test.dat\", access=\"stream\", form=\"unformatted\", status=\"new\")\n@@ -92,11 +92,11 @@\n \n open(99, file=\"test.dat\")\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 15\n+if (stat /= 0) stop 15\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 16\n+if (stat /= 0) stop 16\n read (99,*) var          ! << FAILS: stat /= 0\n-if (stat /= 0) STOP 2! << aborts here\n+if (stat /= 0) stop 2! << aborts here\n close(99, status=\"delete\")\n \n open(99, file=\"test.dat\", access=\"stream\", form=\"unformatted\", status=\"new\")\n@@ -107,11 +107,11 @@\n \n open(99, file=\"test.dat\")\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 17\n+if (stat /= 0) stop 17\n read (99,*, iostat=stat) var\n-if (stat /= 0) STOP 18\n+if (stat /= 0) stop 18\n read (99,*) var          ! << FAILS: stat /= 0\n-if (stat /= 0) STOP 3! << aborts here\n+if (stat /= 0) stop 3! << aborts here\n close(99, status=\"delete\")\n \n ! Test complex kind\n@@ -123,10 +123,10 @@\n \n open(99, file=\"test.dat\")\n read (99,*, iostat=stat) cval\n-if (stat /= 0 .or. cval /= cmplx(1,2)) STOP 19\n+if (stat /= 0 .or. cval /= cmplx(1,2)) stop 19\n read (99,*, iostat=stat) cval\n-if (stat /= 0 .or. cval /= cmplx(2,3)) STOP 20\n+if (stat /= 0 .or. cval /= cmplx(2,3)) stop 20\n read (99,*, iostat=stat) cval      ! << FAILS: stat /= 0, value is okay\n-if (stat /= 0 .or. cval /= cmplx(4,5)) STOP 21\n+if (stat /= 0 .or. cval /= cmplx(4,5)) stop 21\n close(99, status=\"delete\")\n end"}, {"sha": "75f5ca7a2afff9f8248fe1ba8e8de113fea9c99a", "filename": "libgomp/testsuite/libgomp.fortran/async_io_6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,12 +17,12 @@ program flush_1\n \n    write (10, *) 42\n    flush(unit=10, iostat=ios)\n-   if (ios /= 0) STOP 1\n+   if (ios /= 0) stop 1\n \n    write (10, *) 42\n    flush (unit=10, err=20)\n    goto 30\n-20 STOP 2\n+20 stop 2\n 30 continue\n \n    call flush(10)"}, {"sha": "0c8dd1b80561b7b900c6c4512cf55eb6f017a199", "filename": "libgomp/testsuite/libgomp.fortran/async_io_7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -16,7 +16,7 @@ program newunit_1\n   rewind(myunit)\n   rewind(myunit2)\n   read(myunit2,'(a)') str\n-  if (str.ne.\" abcdefghijklmnop\") STOP 1\n+  if (str.ne.\" abcdefghijklmnop\") stop 1\n   close(myunit)\n   close(myunit2, status=\"delete\")\n end program newunit_1"}, {"sha": "1c44e25d77d0fc3bb94e5c4a2adc08ee79d5bf16", "filename": "libgomp/testsuite/libgomp.fortran/cancel-do-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,7 +8,7 @@\n     !$omp do\n       do i = 0, 999\n \t!$omp cancel do\n-\tif (omp_get_cancellation ()) STOP 1\n+\tif (omp_get_cancellation ()) stop 1\n       enddo\n   !$omp endparallel\n end"}, {"sha": "b5cca934291dd808768bd39d2553d2aae37e3d04", "filename": "libgomp/testsuite/libgomp.fortran/cancel-do-2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,7 +22,7 @@ subroutine foo (x)\n       !$omp do\n \tdo i = 0, 999\n \t  !$omp cancel do if (x(1))\n-\t  STOP 1\n+\t  stop 1\n \tend do\n       !$omp do\n \tdo i = 0, 999\n@@ -47,7 +47,7 @@ subroutine foo (x)\n \tend do\n       !$omp end do\n     !$omp end parallel\n-    if (v.ne.3000.or.w.ne.0) STOP 2\n+    if (v.ne.3000.or.w.ne.0) stop 2\n     !$omp parallel num_threads (32) shared (v, w)\n       ! None of these cancel directives should actually cancel anything,\n       ! but the compiler shouldn't know that and thus should use cancellable\n@@ -56,7 +56,7 @@ subroutine foo (x)\n       !$omp do\n \tdo i = 0, 999\n \t  !$omp cancel do if (x(1))\n-\t  STOP 3\n+\t  stop 3\n \tend do\n       !$omp cancel parallel if (omp_get_thread_num ().eq.2.and.x(5))\n       !$omp do\n@@ -85,6 +85,6 @@ subroutine foo (x)\n       !$omp end do\n       !$omp cancel parallel if (omp_get_thread_num ().eq.5.and.x(5))\n     !$omp end parallel\n-    if (v.ne.6000.or.w.ne.0) STOP 4\n+    if (v.ne.6000.or.w.ne.0) stop 4\n   end subroutine\n end"}, {"sha": "759870189efb53643c8a463ccb2f6487703eacb1", "filename": "libgomp/testsuite/libgomp.fortran/cancel-parallel-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-parallel-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-parallel-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-parallel-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,6 +5,6 @@\n \n   !$omp parallel num_threads(32)\n     !$omp cancel parallel\n-    if (omp_get_cancellation ()) STOP 1\n+    if (omp_get_cancellation ()) stop 1\n   !$omp end parallel\n end"}, {"sha": "cfc3903592f765b01838fcaa02278f1858367922", "filename": "libgomp/testsuite/libgomp.fortran/cancel-sections-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-sections-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-sections-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-sections-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -7,16 +7,16 @@\n     !$omp parallel num_threads(32)\n       !$omp sections\n \t  !$omp cancel sections\n-\t  STOP 1\n+\t  stop 1\n \t!$omp section\n \t  !$omp cancel sections\n-\t  STOP 2\n+\t  stop 2\n \t!$omp section\n \t  !$omp cancel sections\n-\t  STOP 3\n+\t  stop 3\n \t!$omp section\n \t  !$omp cancel sections\n-\t  STOP 4\n+\t  stop 4\n       !$omp end sections\n     !$omp end parallel\n   end if"}, {"sha": "693241ef71cda1579f9830d1b4b98da3f909495b", "filename": "libgomp/testsuite/libgomp.fortran/cancel-taskgroup-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-taskgroup-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-taskgroup-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-taskgroup-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,7 +8,7 @@\n     !$omp taskgroup\n       !$omp task\n \t!$omp cancel taskgroup\n-\tSTOP 1\n+\tstop 1\n       !$omp endtask\n     !$omp endtaskgroup\n   !$omp endparallel"}, {"sha": "eb3c21d068d181ac1a304547243700cf9480f1b7", "filename": "libgomp/testsuite/libgomp.fortran/character1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -67,6 +67,6 @@ subroutine test (p, q)\n       l = l .or. f .ne. 'YY' .or. p .ne. 'm3' .or. r .ne. 'M3'\n     end if\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine test\n end"}, {"sha": "67ce63ac62423c919747e3305e3223c71114776d", "filename": "libgomp/testsuite/libgomp.fortran/character2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -56,6 +56,6 @@ subroutine test (p, q, n)\n       l = l .or. t .ne. '456'\n     end if\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine test\n end"}, {"sha": "c22085599c2945a334292b057f464f670249d431", "filename": "libgomp/testsuite/libgomp.fortran/collapse1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,5 +22,5 @@ program collapse1\n       end do\n     end do\n   !$omp end parallel do\n-  if (l) STOP 1\n+  if (l) stop 1\n end program collapse1"}, {"sha": "47cd7c9e580a54fcc93b1e7e849318a4c5df26fd", "filename": "libgomp/testsuite/libgomp.fortran/collapse2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -25,7 +25,7 @@ subroutine test1\n         end do\n       end do firstdo\n     !$omp end parallel do\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine test1\n \n   subroutine test2\n@@ -38,7 +38,7 @@ subroutine test2\n           enddo\n         enddo dokk\n 115   continue\n-    if (any(a(1:3,1:3,1:3).ne.1)) STOP 2\n+    if (any(a(1:3,1:3,1:3).ne.1)) stop 2\n \n     !$omp do collapse(3)\n  dol: do 120 l=1,3\n@@ -48,7 +48,7 @@ subroutine test2\n           enddo\n         enddo doll\n 120   end do dol\n-    if (any(a(1:3,1:3,1:3).ne.2)) STOP 3\n+    if (any(a(1:3,1:3,1:3).ne.2)) stop 3\n   end subroutine test2\n \n end program collapse2"}, {"sha": "d463b4f39ccc31ee71cad1336c7f299e18c35d03", "filename": "libgomp/testsuite/libgomp.fortran/collapse3.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -24,8 +24,8 @@ subroutine test1\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 1\n-    if (m.ne.(600+40+18)) STOP 2\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) stop 1\n+    if (m.ne.(600+40+18)) stop 2\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -56,8 +56,8 @@ subroutine test2(v1, v2, v3, v4, v5, v6)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 3\n-    if (m.ne.(600+40+18)) STOP 4\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) stop 3\n+    if (m.ne.(600+40+18)) stop 4\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -88,8 +88,8 @@ subroutine test3(v1, v2, v3, v4, v5, v6, v7, v8, v9)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 5\n-    if (m.ne.(600+40+18)) STOP 6\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) stop 5\n+    if (m.ne.(600+40+18)) stop 6\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -120,8 +120,8 @@ subroutine test4\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 7\n-    if (m.ne.(600+40+18)) STOP 8\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) stop 7\n+    if (m.ne.(600+40+18)) stop 8\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -153,8 +153,8 @@ subroutine test5(v1, v2, v3, v4, v5, v6)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 9\n-    if (m.ne.(600+40+18)) STOP 10\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) stop 9\n+    if (m.ne.(600+40+18)) stop 10\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -186,8 +186,8 @@ subroutine test6(v1, v2, v3, v4, v5, v6, v7, v8, v9)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 11\n-    if (m.ne.(600+40+18)) STOP 12\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) stop 11\n+    if (m.ne.(600+40+18)) stop 12\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19"}, {"sha": "8c28571975bcf9e5fe3d08dc02293af887c488d0", "filename": "libgomp/testsuite/libgomp.fortran/collapse4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,5 +8,5 @@\n         end do\n       end do\n     end do\n-  if (i .ne. 18 .or. j .ne. 7 .or. k .ne. 6) STOP 1\n+  if (i .ne. 18 .or. j .ne. 7 .or. k .ne. 6) stop 1\n end"}, {"sha": "2340257f3f602416a539e69ae7d7bc6a73e2df38", "filename": "libgomp/testsuite/libgomp.fortran/crayptr1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -26,7 +26,7 @@\n   l = l .or. p .ne. 3\n !$omp end parallel\n \n-  if (l) STOP 1\n+  if (l) stop 1\n \n   l = .false.\n !$omp parallel num_threads (2) reduction (.or.:l) default (private)\n@@ -41,6 +41,6 @@\n   l = l .or. p .ne. 3 * omp_get_thread_num () + 5\n !$omp end parallel\n \n-  if (l) STOP 2\n+  if (l) stop 2\n \n end"}, {"sha": "3014be832a3090b8112a9af0543f6aadfa41c714", "filename": "libgomp/testsuite/libgomp.fortran/crayptr2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -27,5 +27,5 @@\n   l = l .or. (p .ne. d + 1)\n !$omp end parallel\n \n-  if (l) STOP 1\n+  if (l) stop 1\n end"}, {"sha": "2d360fa5a8bc03234483313d113484b9d2af676d", "filename": "libgomp/testsuite/libgomp.fortran/crayptr3.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -18,7 +18,7 @@\n   l = l .or. (p .ne. (2 + omp_get_thread_num ()))\n !$omp end parallel\n \n-  if (l) STOP 1\n+  if (l) stop 1\n \n   l = .false.\n   ip = loc (a)\n@@ -31,6 +31,6 @@\n     l = l .or. (p .ne. (2 + i))\n   end do\n \n-  if (l) STOP 2\n-  if (p .ne. 3) STOP 3\n+  if (l) stop 2\n+  if (p .ne. 3) stop 3\n end"}, {"sha": "cb8f4df8d62e662582ff34f11b2b6f3e4c67f730", "filename": "libgomp/testsuite/libgomp.fortran/declare-simd-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -61,7 +61,7 @@ end function bar\n   do i = 1, 128\n     b(i) = bar (a(i), 2 * i, b(i))\n   end do\n-  if (any (b.ne.d)) STOP 1\n+  if (any (b.ne.d)) stop 1\n   !$omp simd\n   do i = 1, 128\n     b(i) = i * 2.0\n@@ -71,7 +71,7 @@ end function bar\n     b(i) = baz (7.0_8, 2, b(i))\n   end do\n   do i = 1, 128\n-    if (b(i).ne.(7.0 + 4.0 * i)) STOP 2\n+    if (b(i).ne.(7.0 + 4.0 * i)) stop 2\n   end do\n contains\n   function baz (x, y, z)"}, {"sha": "3a20e0aad70ca804189cbed227847332599d0127", "filename": "libgomp/testsuite/libgomp.fortran/declare-simd-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,6 +17,6 @@ subroutine bar\n     b(i) = foo (7.0_8, 5 * i, b(i))\n   end do\n   do i = 1, 128\n-    if (b(i).ne.(7.0 + 10.0 * i * i)) STOP 1\n+    if (b(i).ne.(7.0 + 10.0 * i * i)) stop 1\n   end do\n end subroutine bar"}, {"sha": "85fc68c6ede8535b99836bc294e0498a2fb08814", "filename": "libgomp/testsuite/libgomp.fortran/declare-target-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -14,5 +14,5 @@ subroutine foo\n   !$omp end target\n \n   !$omp target update from(var_x)\n-  if (var_x /= 20) STOP 1\n+  if (var_x /= 20) stop 1\n end subroutine foo"}, {"sha": "85792fa9b4bbaa016057a478cc63d84eeec79dc1", "filename": "libgomp/testsuite/libgomp.fortran/depend-1.f90", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -21,7 +21,7 @@ subroutine dep\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 1\n+          if (x.ne.2) stop 1\n         !$omp end task\n       !$omp end single\n     !$omp end parallel\n@@ -36,7 +36,7 @@ subroutine dep2\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 2\n+          if (x.ne.2) stop 2\n         !$omp end task\n         !$omp taskwait\n       !$omp end single\n@@ -52,7 +52,7 @@ subroutine dep3\n           x = 2\n         !$omp endtask\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 3\n+          if (x.ne.2) stop 3\n         !$omp endtask\n       !$omp endsingle\n     !$omp endparallel\n@@ -67,7 +67,7 @@ subroutine firstpriv\n           x = 2\n         !$omp end task\n         !$omp task depend(in: x)\n-          if (x.ne.1) STOP 4\n+          if (x.ne.1) stop 4\n         !$omp end task\n       !$omp end single\n     !$omp end parallel\n@@ -79,7 +79,7 @@ subroutine antidep\n     !$omp parallel\n       !$omp single\n         !$omp task shared(x) depend(in: x)\n-          if (x.ne.1) STOP 5\n+          if (x.ne.1) stop 5\n         !$omp end task\n         !$omp task shared(x) depend(out: x)\n           x = 2\n@@ -95,7 +95,7 @@ subroutine antidep2\n         x = 1\n         !$omp taskgroup\n           !$omp task shared(x) depend(in: x)\n-            if (x.ne.1) STOP 6\n+            if (x.ne.1) stop 6\n           !$omp end task\n           !$omp task shared(x) depend(out: x)\n             x = 2\n@@ -111,7 +111,7 @@ subroutine antidep3\n       x = 1\n       !$omp single\n         !$omp task shared(x) depend(in: x)\n-          if (x.ne.1) STOP 7\n+          if (x.ne.1) stop 7\n         !$omp end task\n         !$omp task shared(x) depend(out: x)\n           x = 2\n@@ -132,7 +132,7 @@ subroutine outdep\n           x = 2\n         !$omp end task\n         !$omp taskwait\n-        if (x.ne.2) STOP 8\n+        if (x.ne.2) stop 8\n       !$omp end single\n     !$omp end parallel\n   end subroutine outdep\n@@ -146,13 +146,13 @@ subroutine concurrent\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 9\n+          if (x.ne.2) stop 9\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 10\n+          if (x.ne.2) stop 10\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 11\n+          if (x.ne.2) stop 11\n         !$omp end task\n       !$omp end single\n     !$omp end parallel\n@@ -167,13 +167,13 @@ subroutine concurrent2\n           x = 2;\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 12\n+          if (x.ne.2) stop 12\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 13\n+          if (x.ne.2) stop 13\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 14\n+          if (x.ne.2) stop 14\n         !$omp end task\n         !$omp taskwait\n       !$omp end single\n@@ -189,13 +189,13 @@ subroutine concurrent3\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 15\n+          if (x.ne.2) stop 15\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 16\n+          if (x.ne.2) stop 16\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) STOP 17\n+          if (x.ne.2) stop 17\n         !$omp end task\n       !$omp end single\n     !$omp end parallel"}, {"sha": "4384c1f760ebd81c35306f41521bcf799a4f4c95", "filename": "libgomp/testsuite/libgomp.fortran/depend-2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -6,29 +6,29 @@\n     !$omp single\n       !$omp taskgroup\n         !$omp task depend(in: x(:, :))\n-\t  if (y.ne.1) STOP 1\n+\t  if (y.ne.1) stop 1\n         !$omp end task\n         !$omp task depend(out: x(:, :))\n \t  y = 2\n         !$omp end task\n       !$omp end taskgroup\n       !$omp taskgroup\n         !$omp task depend(in: x(4, 7))\n-\t  if (y.ne.2) STOP 2\n+\t  if (y.ne.2) stop 2\n         !$omp end task\n         !$omp task depend(out: x(4:4, 7:7))\n \t  y = 3\n         !$omp end task\n       !$omp end taskgroup\n       !$omp taskgroup\n         !$omp task depend(in: x(4:, 8:))\n-\t  if (y.ne.3) STOP 3\n+\t  if (y.ne.3) stop 3\n         !$omp end task\n         !$omp task depend(out: x(4:6, 8:12))\n \t  y = 4\n         !$omp end task\n       !$omp end taskgroup\n     !$omp end single\n   !$omp end parallel\n-  if (y.ne.4) STOP 4\n+  if (y.ne.4) stop 4\n end"}, {"sha": "aa948edd9165c3603e1d3d72a7617b5082511a1d", "filename": "libgomp/testsuite/libgomp.fortran/depend-3.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,30 +13,30 @@ subroutine foo (x, z)\n       !$omp single\n         !$omp taskgroup\n           !$omp task depend(in: x)\n-  \t  if (y.ne.1) STOP 1\n+  \t  if (y.ne.1) stop 1\n           !$omp end task\n           !$omp task depend(out: x(1:2, 1:3))\n   \t  y = 2\n           !$omp end task\n         !$omp end taskgroup\n         !$omp taskgroup\n           !$omp task depend(in: z)\n-  \t  if (y.ne.2) STOP 2\n+  \t  if (y.ne.2) stop 2\n           !$omp end task\n           !$omp task depend(out: z(-2:3, 2:4))\n   \t  y = 3\n           !$omp end task\n         !$omp end taskgroup\n         !$omp taskgroup\n           !$omp task depend(in: x)\n-  \t  if (y.ne.3) STOP 3\n+  \t  if (y.ne.3) stop 3\n           !$omp end task\n           !$omp task depend(out: x(1:, 1:))\n   \t  y = 4\n           !$omp end task\n         !$omp end taskgroup\n       !$omp end single\n     !$omp end parallel\n-    if (y.ne.4) STOP 4\n+    if (y.ne.4) stop 4\n   end subroutine\n end"}, {"sha": "e85f6371a9bd1cab9c0ad07d86503c6c8386a475", "filename": "libgomp/testsuite/libgomp.fortran/do1.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -47,7 +47,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) STOP 1\n+  if (any (a .ne. b)) stop 1\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -79,7 +79,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) STOP 2\n+  if (any (a .ne. b)) stop 2\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -111,7 +111,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) STOP 3\n+  if (any (a .ne. b)) stop 3\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -143,7 +143,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) STOP 4\n+  if (any (a .ne. b)) stop 4\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -175,5 +175,5 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) STOP 5\n+  if (any (a .ne. b)) stop 5\n end"}, {"sha": "b6081831b1f645a77734220d48a372da04eab787", "filename": "libgomp/testsuite/libgomp.fortran/do2.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -86,7 +86,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) STOP 1\n+  if (any (a .ne. b) .or. k) stop 1\n   a = -1\n   k = .false.\n   j = 8\n@@ -155,7 +155,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) STOP 2\n+  if (any (a .ne. b) .or. k) stop 2\n   a = -1\n   k = .false.\n   j = 8\n@@ -224,7 +224,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) STOP 3\n+  if (any (a .ne. b) .or. k) stop 3\n   a = -1\n   k = .false.\n   j = 8\n@@ -293,7 +293,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) STOP 4\n+  if (any (a .ne. b) .or. k) stop 4\n   a = -1\n   k = .false.\n   j = 8\n@@ -362,5 +362,5 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) STOP 5\n+  if (any (a .ne. b) .or. k) stop 5\n end"}, {"sha": "971cd634a5fa8e32f69f00cd35f92ed037e5bfbe", "filename": "libgomp/testsuite/libgomp.fortran/do_concurrent_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo_concurrent_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo_concurrent_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo_concurrent_5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -33,7 +33,7 @@ program main\n     do concurrent (i = 1:nsplit)\n         pi(i) = sum(compute( low(i), high(i) ))\n     end do\n-    if (abs (sum(pi) - atan(1.0d0)) > 1e-5) STOP 1\n+    if (abs (sum(pi) - atan(1.0d0)) > 1e-5) stop 1\n     \n contains\n     "}, {"sha": "2b15e7d7d115e0d316a58ccabcd16c7f8417258b", "filename": "libgomp/testsuite/libgomp.fortran/doacross1.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,14 +17,14 @@\n       if (i.gt.1) then\n         !$omp atomic read\n         l = a(i - 1)\n-        if (l.lt.2) STOP 1\n+        if (l.lt.2) stop 1\n       end if\n       !$omp atomic write\n       a(i) = 2\n       if (i.lt.N) then\n         !$omp atomic read\n         l = a(i + 1)\n-        if (l.eq.3) STOP 2\n+        if (l.eq.3) stop 2\n       end if\n       !$omp ordered depend(source)\n       !$omp atomic write\n@@ -43,19 +43,19 @@\n           if (j.gt.2.and.k.gt.2) then\n             !$omp atomic read\n             l = b(i,j-2,k-1)\n-            if (l.lt.2) STOP 3\n+            if (l.lt.2) stop 3\n           end if\n           !$omp atomic write\n           b(i,j,k) = 2\n           if (i.gt.4.and.j.gt.2.and.k.lt.4) then\n             !$omp atomic read\n             l = b(i-2,j-2, k+1)\n-            if (l.lt.2) STOP 4\n+            if (l.lt.2) stop 4\n           end if\n           if (i.gt.5.and.j.le.N/16-3.and.k.eq.4) then\n             !$omp atomic read\n             l = b( i - 3, j+2, k-2)\n-            if (l.lt.2) STOP 5\n+            if (l.lt.2) stop 5\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -94,19 +94,19 @@\n             if (k.le.5) then\n               !$omp atomic read\n               l = c(i, j, k + 2)\n-              if (l.lt.2) STOP 6\n+              if (l.lt.2) stop 6\n             end if\n             !$omp atomic write\n             c(i, j, k) = 2\n             if (i.ge.3.and.j.lt.8.and.k.ge.5) then\n               !$omp atomic read\n               l = c(i - 2, j + 1, k - 4)\n-              if (l.lt.2) STOP 7\n+              if (l.lt.2) stop 7\n             end if\n             if (i.ge.2.and.j.ge.5.and.k.ge.3) then\n               !$omp atomic read\n               l = c(i - 1, j - 2, k - 2)\n-              if (l.lt.2) STOP 8\n+              if (l.lt.2) stop 8\n             end if\n             !$omp ordered depend ( source )\n             !$omp atomic write\n@@ -137,13 +137,13 @@\n           do l = 0, d + 1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) STOP 9\n+            if (e.eq.0) stop 9\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.1.or.j.ne.-1.or.k.ne.0) STOP 10\n+    if (i.ne.1.or.j.ne.-1.or.k.ne.0) stop 10\n     i = 8; j = 9; k = 10\n     !$omp end single\n     !$omp do ordered(4) collapse(2) lastprivate (i, j, k, m)\n@@ -153,13 +153,13 @@\n           do m = 0, d-1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i - 2, j + 2, k - 2, m)\n-            STOP 11\n+            stop 11\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.1.or.j.ne.-1.or.k.ne.2.or.m.ne.0) STOP 12\n+    if (i.ne.1.or.j.ne.-1.or.k.ne.2.or.m.ne.0) stop 12\n     !$omp end single\n     !$omp do collapse(2) ordered(4) lastprivate (i,j,k)\n     do i = 0, d\n@@ -168,25 +168,25 @@\n           do l = 0, d + 3\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) STOP 13\n+            if (e.eq.0) stop 13\n           end do\n         end do\n       end do\n     end do\n     !$omp end do nowait\n     !$omp do\n     do i = 1, N\n-      if (a(i) .ne. 3) STOP 14\n+      if (a(i) .ne. 3) stop 14\n     end do\n     !$omp end do nowait\n     !$omp do collapse(2) private(k)\n     do i = 1, N / 16\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.3.and.i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.2) then\n-            if (b(i,j,k).ne.3) STOP 15\n+            if (b(i,j,k).ne.3) stop 15\n           else\n-            if (b(i,j,k).ne.0) STOP 16\n+            if (b(i,j,k).ne.0) stop 16\n           end if\n         end do\n       end do\n@@ -197,9 +197,9 @@\n       do j = 1, 8\n         do k = 1, 4\n           if (j.ge.3.and.iand(k,1).ne.0) then\n-            if (c(i,j,k).ne.3) STOP 17\n+            if (c(i,j,k).ne.3) stop 17\n           else\n-            if (c(i,j,k).ne.0) STOP 18\n+            if (c(i,j,k).ne.0) stop 18\n           end if\n         end do\n       end do"}, {"sha": "213ac715f9eddca12bd9b8874f2b1768a825d451", "filename": "libgomp/testsuite/libgomp.fortran/doacross2.f90", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -20,14 +20,14 @@\n       if (i.gt.2) then\n         !$omp atomic read\n         l = a(i - 1)\n-        if (l.lt.2) STOP 1\n+        if (l.lt.2) stop 1\n       end if\n       !$omp atomic write\n       a(i) = 2\n       if (i.lt.N) then\n         !$omp atomic read\n         l = a(i + 1)\n-        if (l.eq.3) STOP 2\n+        if (l.eq.3) stop 2\n       end if\n       !$omp ordered depend(source)\n       !$omp atomic write\n@@ -46,19 +46,19 @@\n           if (j.gt.2.and.k.gt.2) then\n             !$omp atomic read\n             l = b(i,j-2,k-1)\n-            if (l.lt.2) STOP 3\n+            if (l.lt.2) stop 3\n           end if\n           !$omp atomic write\n           b(i,j,k) = 2\n           if (i.gt.5.and.j.gt.2.and.k.lt.4) then\n             !$omp atomic read\n             l = b(i-2,j-2, k+1)\n-            if (l.lt.2) STOP 4\n+            if (l.lt.2) stop 4\n           end if\n           if (i.gt.6.and.j.le.N/16-3.and.k.eq.4) then\n             !$omp atomic read\n             l = b( i - 3, j+2, k-2)\n-            if (l.lt.2) STOP 5\n+            if (l.lt.2) stop 5\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -97,19 +97,19 @@\n             if (k.le.5) then\n               !$omp atomic read\n               l = c(i, j, k + 2)\n-              if (l.lt.2) STOP 6\n+              if (l.lt.2) stop 6\n             end if\n             !$omp atomic write\n             c(i, j, k) = 2\n             if (i.ge.5.and.j.lt.8.and.k.ge.5) then\n               !$omp atomic read\n               l = c(i - 2, j + 1, k - 4)\n-              if (l.lt.2) STOP 7\n+              if (l.lt.2) stop 7\n             end if\n             if (i.ge.4.and.j.ge.5.and.k.ge.3) then\n               !$omp atomic read\n               l = c(i - 1, j - 2, k - 2)\n-              if (l.lt.2) STOP 8\n+              if (l.lt.2) stop 8\n             end if\n             !$omp ordered depend ( source )\n             !$omp atomic write\n@@ -145,19 +145,19 @@\n           if (k.gt.2.and.i.gt.4) then\n             !$omp atomic read\n             l = g(j,k-2,i-1)\n-            if (l.lt.2) STOP 9\n+            if (l.lt.2) stop 9\n           end if\n           !$omp atomic write\n           g(j,k,i) = 2\n           if (j.gt.2.and.k.gt.2.and.i.lt.6) then\n             !$omp atomic read\n             l = g(j-2,k-2, i+1)\n-            if (l.lt.2) STOP 10\n+            if (l.lt.2) stop 10\n           end if\n           if (j.gt.3.and.k.le.N/16-3.and.i.eq.6) then\n             !$omp atomic read\n             l = g( j - 3, k+2, i-2)\n-            if (l.lt.2) STOP 11\n+            if (l.lt.2) stop 11\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -173,13 +173,13 @@\n           do l = 0, d + 1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) STOP 12\n+            if (e.eq.0) stop 12\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.0) STOP 13\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.0) stop 13\n     i = 8; j = 9; k = 10\n     !$omp end single\n     !$omp do ordered(4) collapse(2) lastprivate (i, j, k, m)\n@@ -189,13 +189,13 @@\n           do m = 0, d-1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i - 2, j + 2, k - 2, m)\n-            STOP 14\n+            stop 14\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) STOP 15\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) stop 15\n     !$omp end single\n     !$omp do collapse(2) ordered(4) lastprivate (i,j,k)\n     do i = 2, f + 2\n@@ -204,28 +204,28 @@\n           do l = 0, d + 3\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) STOP 16\n+            if (e.eq.0) stop 16\n           end do\n         end do\n       end do\n     end do\n     !$omp end do nowait\n     !$omp single\n-    if (a(1) .ne. 0) STOP 17\n+    if (a(1) .ne. 0) stop 17\n     !$omp end single nowait\n     !$omp do\n     do i = 2, N\n-      if (a(i) .ne. 3) STOP 18\n+      if (a(i) .ne. 3) stop 18\n     end do\n     !$omp end do nowait\n     !$omp do collapse(2) private(k)\n     do i = 1, N / 16\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.4.and.i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.2) then\n-            if (b(i,j,k).ne.3) STOP 19\n+            if (b(i,j,k).ne.3) stop 19\n           else\n-            if (b(i,j,k).ne.0) STOP 20\n+            if (b(i,j,k).ne.0) stop 20\n           end if\n         end do\n       end do\n@@ -236,9 +236,9 @@\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.3.and.j.ge.3.and.iand(k,1).ne.0) then\n-            if (c(i,j,k).ne.3) STOP 21\n+            if (c(i,j,k).ne.3) stop 21\n           else\n-            if (c(i,j,k).ne.0) STOP 22\n+            if (c(i,j,k).ne.0) stop 22\n           end if\n         end do\n       end do\n@@ -249,9 +249,9 @@\n       do j = 1, 8\n         do k = 1, 6\n           if (i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.4) then\n-            if (g(i,j,k).ne.3) STOP 23\n+            if (g(i,j,k).ne.3) stop 23\n           else\n-            if (g(i,j,k).ne.0) STOP 24\n+            if (g(i,j,k).ne.0) stop 24\n           end if\n         end do\n       end do"}, {"sha": "5ba57008c6f3504ce72333f6bdc0997029ea53ee", "filename": "libgomp/testsuite/libgomp.fortran/doacross3.f90", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -20,14 +20,14 @@\n       if (i.gt.2) then\n         !$omp atomic read\n         l = a(i - 1)\n-        if (l.lt.2) STOP 1\n+        if (l.lt.2) stop 1\n       end if\n       !$omp atomic write\n       a(i) = 2\n       if (i.lt.N) then\n         !$omp atomic read\n         l = a(i + 1)\n-        if (l.eq.3) STOP 2\n+        if (l.eq.3) stop 2\n       end if\n       !$omp ordered depend(source)\n       !$omp atomic write\n@@ -46,19 +46,19 @@\n           if (j.gt.2.and.k.gt.2) then\n             !$omp atomic read\n             l = b(i,j-2,k-1)\n-            if (l.lt.2) STOP 3\n+            if (l.lt.2) stop 3\n           end if\n           !$omp atomic write\n           b(i,j,k) = 2\n           if (i.gt.5.and.j.gt.2.and.k.lt.4) then\n             !$omp atomic read\n             l = b(i-2,j-2, k+1)\n-            if (l.lt.2) STOP 4\n+            if (l.lt.2) stop 4\n           end if\n           if (i.gt.6.and.j.le.N/16-3.and.k.eq.4) then\n             !$omp atomic read\n             l = b( i - 3, j+2, k-2)\n-            if (l.lt.2) STOP 5\n+            if (l.lt.2) stop 5\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -97,19 +97,19 @@\n             if (k.le.5) then\n               !$omp atomic read\n               l = c(i, j, k + 2)\n-              if (l.lt.2) STOP 6\n+              if (l.lt.2) stop 6\n             end if\n             !$omp atomic write\n             c(i, j, k) = 2\n             if (i.ge.5.and.j.lt.8.and.k.ge.5) then\n               !$omp atomic read\n               l = c(i - 2, j + 1, k - 4)\n-              if (l.lt.2) STOP 7\n+              if (l.lt.2) stop 7\n             end if\n             if (i.ge.4.and.j.ge.5.and.k.ge.3) then\n               !$omp atomic read\n               l = c(i - 1, j - 2, k - 2)\n-              if (l.lt.2) STOP 8\n+              if (l.lt.2) stop 8\n             end if\n             !$omp ordered depend ( source )\n             !$omp atomic write\n@@ -145,19 +145,19 @@\n           if (k.gt.2.and.i.gt.4) then\n             !$omp atomic read\n             l = g(j,k-2,i-1)\n-            if (l.lt.2) STOP 9\n+            if (l.lt.2) stop 9\n           end if\n           !$omp atomic write\n           g(j,k,i) = 2\n           if (j.gt.2.and.k.gt.2.and.i.lt.6) then\n             !$omp atomic read\n             l = g(j-2,k-2, i+1)\n-            if (l.lt.2) STOP 10\n+            if (l.lt.2) stop 10\n           end if\n           if (j.gt.3.and.k.le.N/16-3.and.i.eq.6) then\n             !$omp atomic read\n             l = g( j - 3, k+2, i-2)\n-            if (l.lt.2) STOP 11\n+            if (l.lt.2) stop 11\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -173,13 +173,13 @@\n           do l = 0, d + 1, 1 + d\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) STOP 12\n+            if (e.eq.0) stop 12\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.0) STOP 13\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.0) stop 13\n     i = 8; j = 9; k = 10\n     !$omp end single\n     !$omp do ordered(4) collapse(2) lastprivate (i, j, k, m)\n@@ -189,13 +189,13 @@\n           do m = 0, d-1, d+1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i - 2, j + 2, k - 2, m)\n-            STOP 14\n+            stop 14\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) STOP 15\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) stop 15\n     !$omp end single\n     !$omp do collapse(2) ordered(4) lastprivate (i,j,k)\n     do i = 2, f + 2, 1 + f\n@@ -204,28 +204,28 @@\n           do l = 0, d + 3, d + 1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) STOP 16\n+            if (e.eq.0) stop 16\n           end do\n         end do\n       end do\n     end do\n     !$omp end do nowait\n     !$omp single\n-    if (a(1) .ne. 0) STOP 17\n+    if (a(1) .ne. 0) stop 17\n     !$omp end single nowait\n     !$omp do\n     do i = 2, N\n-      if (a(i) .ne. 3) STOP 18\n+      if (a(i) .ne. 3) stop 18\n     end do\n     !$omp end do nowait\n     !$omp do collapse(2) private(k)\n     do i = 1, N / 16\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.4.and.i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.2) then\n-            if (b(i,j,k).ne.3) STOP 19\n+            if (b(i,j,k).ne.3) stop 19\n           else\n-            if (b(i,j,k).ne.0) STOP 20\n+            if (b(i,j,k).ne.0) stop 20\n           end if\n         end do\n       end do\n@@ -236,9 +236,9 @@\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.3.and.j.ge.3.and.iand(k,1).ne.0) then\n-            if (c(i,j,k).ne.3) STOP 21\n+            if (c(i,j,k).ne.3) stop 21\n           else\n-            if (c(i,j,k).ne.0) STOP 22\n+            if (c(i,j,k).ne.0) stop 22\n           end if\n         end do\n       end do\n@@ -249,9 +249,9 @@\n       do j = 1, 8\n         do k = 1, 6\n           if (i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.4) then\n-            if (g(i,j,k).ne.3) STOP 23\n+            if (g(i,j,k).ne.3) stop 23\n           else\n-            if (g(i,j,k).ne.0) STOP 24\n+            if (g(i,j,k).ne.0) stop 24\n           end if\n         end do\n       end do"}, {"sha": "50c71300fb682b3c870e34e52946263842b10de2", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/array_sections-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -12,6 +12,6 @@ subroutine foo ()\n         p(9) = 777\n       !$omp end target\n     !$omp end target data\n-    if (A(3) /= 777 .or. A(9) /= 777) STOP 1\n+    if (A(3) /= 777 .or. A(9) /= 777) stop 1\n   end subroutine\n end"}, {"sha": "e6715e37532a32a476d0a3452bfd3ddc92647e05", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/array_sections-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,6 +13,6 @@ subroutine foo ()\n         A(9) = 999\n       !$omp end target\n     !$omp end target data\n-    if (A(3) /= 777 .or. A(9) /= 999) STOP 1\n+    if (A(3) /= 777 .or. A(9) /= 999) stop 1\n   end subroutine\n end"}, {"sha": "6d1fc98cb74f043e819043239c151c56b8b50dcc", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/async_target-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -27,7 +27,7 @@ subroutine check ()\n     else\n       err = (Y(i) - Z(i)) / Z(i)\n     end if\n-    if (err > EPS .or. err < -EPS) STOP 1\n+    if (err > EPS .or. err < -EPS) stop 1\n   end do\n end subroutine\n "}, {"sha": "ad35539aa44668509167af8810b3c6dbe0bad604", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/async_target-2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n   real :: diff, p(N)\n   do i = 1, N\n     diff = p(i) - (i + 2.0) * (i - 3.0)\n-    if (diff > EPS .or. -diff > EPS) STOP 1\n+    if (diff > EPS .or. -diff > EPS) stop 1\n   end do\n end subroutine\n \n@@ -30,14 +30,14 @@ subroutine vec_mult (p, N)\n   !$omp target data map(to: v1, v2, N) map(from: p)\n     !$omp task shared(v1, v2, p) depend(out: v1, v2)\n       !$omp target map(to: v1, v2, N)\n-        if (omp_is_initial_device ()) STOP 2\n+        if (omp_is_initial_device ()) stop 2\n         allocate (v1(N), v2(N))\n         call init (v1, v2, N)\n       !$omp end target\n     !$omp end task\n     !$omp task shared(v1, v2, p) depend(in: v1, v2)\n       !$omp target map(to: v1, v2, N) map(from: p)\n-        if (omp_is_initial_device ()) STOP 3\n+        if (omp_is_initial_device ()) stop 3\n         !$omp parallel do\n         do i = 1, N\n           p(i) = v1(i) * v2(i)"}, {"sha": "e439fe1b738c31fd5bf3c95b419d1a2b510839eb", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -26,8 +26,8 @@ integer function fib_wrapper (n)\n \n program e_53_1\n   use e_53_1_mod, only : fib, fib_wrapper\n-  if (fib (15) /= fib_wrapper (15)) STOP 1\n+  if (fib (15) /= fib_wrapper (15)) stop 1\n   ! Reduced from 25 to 23, otherwise execution runs out of thread stack on\n   ! Nvidia Titan V.\n-  if (fib (23) /= fib_wrapper (23)) STOP 2\n+  if (fib (23) /= fib_wrapper (23)) stop 2\n end program"}, {"sha": "ee582b216321bac04f473ad2cb3960c960724653", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,7 +8,7 @@ program e_53_2\n     ! Nvidia Titan V.\n     x = fib (23)\n   !$omp end target\n-  if (x /= fib (23)) STOP 1\n+  if (x /= fib (23)) stop 1\n end program\n \n integer recursive function fib (n) result (f)"}, {"sha": "1d332496ce5394ef792e8ebe3ad354c5cb77511f", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -21,7 +21,7 @@ subroutine check (p, N)\n   real :: diff, p(N)\n   do i = 1, N\n     diff = p(i) - (i + 2.0) * (i - 3.0)\n-    if (diff > EPS .or. -diff > EPS) STOP 1\n+    if (diff > EPS .or. -diff > EPS) stop 1\n   end do\n end subroutine\n "}, {"sha": "a1f6478388f31cf7b4bb01cfb1464796817b92d7", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -53,7 +53,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) STOP 1\n+  if (err > EPS .or. err < -EPS) stop 1\n end subroutine\n \n program e_53_4"}, {"sha": "5b334514a4df0daa906b344d77b7562c8cee00ea", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -68,7 +68,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) STOP 1\n+  if (err > EPS .or. err < -EPS) stop 1\n end subroutine\n \n program e_53_5"}, {"sha": "f7db7bdb505fdbdd0cb3be30b524e1f067521efa", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/device-1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -20,7 +20,7 @@ program e_57_1\n     !$omp end target\n   !$omp end target data\n \n-  if (b /= 100 .or. .not. c .or. d) STOP 1\n+  if (b /= 100 .or. .not. c .or. d) stop 1\n \n   a = a + 200\n   b = 0\n@@ -36,7 +36,7 @@ program e_57_1\n     !$omp end target\n   !$omp end target data\n \n-  if (b /= 0 .or. c .or. d) STOP 2\n+  if (b /= 0 .or. c .or. d) stop 2\n \n   a = a + 200\n   b = 0\n@@ -52,5 +52,5 @@ program e_57_1\n     !$omp end target\n   !$omp end target data\n \n-  if (b /= 100 .or. .not. c .or. d) STOP 3\n+  if (b /= 100 .or. .not. c .or. d) stop 3\n end program"}, {"sha": "a63162198d478234109549987e2defcd4ec559c8", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/device-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -15,10 +15,10 @@ program e_57_2\n   end do\n \n   do i = 1, num\n-    if (offload(i)) STOP 1\n+    if (offload(i)) stop 1\n   end do\n \n   do i = num+1, N\n-    if (.not. offload(i)) STOP 2\n+    if (.not. offload(i)) stop 2\n   end do\n end program"}, {"sha": "50c75c03f147cb31abd23ed78c564d4d49524d49", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/device-3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -11,11 +11,11 @@ program e_57_3\n   !$omp target map(from: res)\n     res = omp_is_initial_device ()\n   !$omp end target\n-  if (res) STOP 1\n+  if (res) stop 1\n \n   call omp_set_default_device (omp_get_num_devices ())\n   !$omp target map(from: res)\n     res = omp_is_initial_device ()\n   !$omp end target\n-  if (.not. res) STOP 2\n+  if (.not. res) stop 2\n end program"}, {"sha": "04f659a84f520143ce57a1d10c11b499e1dbd7d6", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -28,7 +28,7 @@ subroutine check (a, b, n)\n     double precision :: diff, a(*), b(*)\n     do i = 1, n\n       diff = a(i) - b(i)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "3bb88388ad2e97c61314348c2f8f9900b99d4c00", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -49,7 +49,7 @@ subroutine check (a, b, n)\n       double precision :: diff, a(*), b(*)\n       do i = 1, n\n         diff = a(i) - b(i)\n-        if (diff > EPS .or. -diff > EPS) STOP 1\n+        if (diff > EPS .or. -diff > EPS) stop 1\n       end do\n   end subroutine\n end module"}, {"sha": "5e376f604b94edafd2e0c74180182dd501f55fe1", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -57,6 +57,6 @@ program SIMD3\n \n   diff = sum - sum_ref\n \n-  if (diff > EPS .or. -diff > EPS) STOP 1\n+  if (diff > EPS .or. -diff > EPS) stop 1\n \n end program"}, {"sha": "551b8396f13d4bac3edce82cf06281a0332e70af", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -47,7 +47,7 @@ subroutine check (a, b, n)\n     real :: diff, a(*), b(*)\n     do i = 1, n\n       diff = a(i) - b(i)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "d2c266cba550b1a6e5cce773c176b60685c3187d", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -56,7 +56,7 @@ subroutine check (a, b, n)\n     do j = 1, n\n       do i = 1, n\n         diff = a(i,j) - b(i,j)\n-        if (diff > EPS .or. -diff > EPS) STOP 1\n+        if (diff > EPS .or. -diff > EPS) stop 1\n       end do\n     end do\n   end subroutine"}, {"sha": "7540a945628408293dd4f965a0492954fd1cef06", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -109,14 +109,14 @@ subroutine checkfloat (a, b, n)\n       real :: diff, a(*), b(*)\n       do i = 1, n\n         diff = a(i) - b(i)\n-        if (diff > EPS .or. -diff > EPS) STOP 1\n+        if (diff > EPS .or. -diff > EPS) stop 1\n       end do\n   end subroutine\n \n   subroutine checkint (a, b, n)\n       integer :: i, n, a(*), b(*)\n       do i = 1, n\n-        if (a(i) .ne. b(i)) STOP 2\n+        if (a(i) .ne. b(i)) stop 2\n       end do\n   end subroutine\n "}, {"sha": "1e2233ee869c37c05aa7288d292af123cf460313", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -23,7 +23,7 @@ program fibonacci\n    call fib_ref (a_ref, N)\n \n    do i = 0, N-1\n-     if (a(i) .ne. a_ref(i)) STOP 1\n+     if (a(i) .ne. a_ref(i)) stop 1\n    end do\n \n end program"}, {"sha": "5fa4db5cf5aecff338422e0df2bf3c97a1b84da0", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-8.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -47,6 +47,6 @@ program simd_8f\n \n   diff = pri - 8237.25\n \n-  if (diff > EPS .or. -diff > EPS) STOP 1\n+  if (diff > EPS .or. -diff > EPS) stop 1\n \n end program"}, {"sha": "b5dfd09dd75c37112d38c2d5dfae113de66d578b", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "7e01c57bf804d6f137b06e8721e251c9fe18b773", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "76eb6d17bd7fa4a0f80d28ee2c6974220661f01c", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "71f0f69e0465f0cd3efd949be5e17dd80425bcda", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real, pointer, dimension(:) :: p\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "b4fd99efa7413af24b13efb98b3099704f9f0bd4", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -19,7 +19,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n \n@@ -29,7 +29,7 @@ subroutine vec_mult (N)\n     real :: p(N), v1(N), v2(N)\n     call init (v1, v2, N)\n     !$omp target if(N > THRESHOLD1) map(to: v1,v2) map(from: p)\n-      if (omp_is_initial_device ()) STOP 2\n+      if (omp_is_initial_device ()) stop 2\n       !$omp parallel do if(N > THRESHOLD2)\n       do i = 1, N\n         p(i) = v1(i) * v2(i)"}, {"sha": "b3b2a48ca5a83746a76b5435b67adc7015cccf31", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "217cc73061aed5aeb8dd8c43a0ad274925514358", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -26,7 +26,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - 2 * (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "6d470cfd9e9f9034fab169f22a52d9fd4a5d31d5", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -19,7 +19,7 @@ subroutine check (P, Q, rows, cols)\n     do k = 1, cols\n       do i = 1, rows\n         diff = P(i,k) - Q(i,k)\n-        if (diff > EPS .or. -diff > EPS) STOP 1\n+        if (diff > EPS .or. -diff > EPS) stop 1\n       end do\n     end do\n   end subroutine"}, {"sha": "24554aa5f89c9abc4b6b1808c12db42f298f6c18", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "364e2f36a96c49d091994ac07804a3b10366ec58", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "c578eba4dc11deafcfb0efd4f4a09f18ba47838a", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-6.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -28,7 +28,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - 2 * (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n \n@@ -39,15 +39,15 @@ subroutine vec_mult (N)\n     call init (v1, v2, N)\n     !$omp target data if(N > THRESHOLD) map(from: p)\n       !$omp target if(N > THRESHOLD) map(to: v1, v2)\n-        if (omp_is_initial_device ()) STOP 2\n+        if (omp_is_initial_device ()) stop 2\n         !$omp parallel do\n         do i = 1, N\n           p(i) = v1(i) * v2(i)\n         end do\n       !$omp end target\n       call init_again (v1, v2, N)\n       !$omp target if(N > THRESHOLD) map(to: v1, v2)\n-        if (omp_is_initial_device ()) STOP 3\n+        if (omp_is_initial_device ()) stop 3\n         !$omp parallel do\n         do i = 1, N\n           p(i) = p(i) + v1(i) * v2(i)"}, {"sha": "ec8ef07d3d36547ef91c9d417c86522d1b859228", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-7.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -19,7 +19,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n \n@@ -30,7 +30,7 @@ subroutine vec_mult (N)\n     call init (v1, v2, N)\n     !$omp target data if(N > THRESHOLD) map(to: v1, v2) map(from: p)\n       !$omp target\n-        if (omp_is_initial_device ()) STOP 2\n+        if (omp_is_initial_device ()) stop 2\n         !$omp parallel do\n         do i = 1, N\n           p(i) = v1(i) * v2(i)"}, {"sha": "8a6b23014fa645bd48826a1786ea8be210970688", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_update-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -26,7 +26,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - 2 * (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "149449239ba9629b59684e9911722fbb0429f067", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_update-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -26,7 +26,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i * i + (i + 2.0) * (i - 3.0))\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "1e24a4067d8c521ae87690c0a62462642091fc06", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -9,7 +9,7 @@ program example\n          x = 2\n       !$omp end task\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 2) STOP 1\n+         if (x .ne. 2) stop 1\n       !$omp end task\n    !$omp end single\n    !$omp end parallel"}, {"sha": "e13b3d69a4b40eee2f88a7d6272810f473cb607e", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -6,7 +6,7 @@ program example\n    !$omp parallel\n    !$omp single\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 1) STOP 1\n+         if (x .ne. 1) stop 1\n       !$omp end task\n       !$omp task shared(x) depend(out: x)\n          x = 2"}, {"sha": "a12998db1e441d50ec9d95d5a2760a7eb041d9da", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -12,7 +12,7 @@ program example\n          x = 2\n       !$omp end task\n       !$omp taskwait\n-      if ((x .ne. 1) .and. (x .ne. 2)) STOP 1\n+      if ((x .ne. 1) .and. (x .ne. 2)) stop 1\n    !$omp end single\n    !$omp end parallel\n end program"}, {"sha": "ab78626dd3b708605818d5bd6e019e54710c6dc1", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -9,10 +9,10 @@ program example\n          x = 2\n       !$omp end task\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 2) STOP 1\n+         if (x .ne. 2) stop 1\n       !$omp end task\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 2) STOP 2\n+         if (x .ne. 2) stop 2\n       !$omp end task\n    !$omp end single\n    !$omp end parallel"}, {"sha": "45054dfba9eb445ca552cb24e5130816be32b843", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -51,7 +51,7 @@ subroutine check (N, A, B)\n       do j = 1, N\n         diff = A(i, j) - B(i, j)\n         if (diff > EPS .or. -diff > EPS) then\n-          STOP 1\n+          stop 1\n         end if\n       end do\n     end do"}, {"sha": "a288c3a9f6e88f33a4ae7a4ee6b4631467d070e9", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -49,7 +49,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) STOP 1\n+  if (err > EPS .or. err < -EPS) stop 1\n end subroutine\n \n program e_54_1"}, {"sha": "f4d95853acc22befcacf9db4d93b659ab0b272e6", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -42,7 +42,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) STOP 1\n+  if (err > EPS .or. err < -EPS) stop 1\n end subroutine\n \n program e_54_3"}, {"sha": "4911ea4df75f26d87e36063efb09a68502a83056", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -44,7 +44,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) STOP 1\n+  if (err > EPS .or. err < -EPS) stop 1\n end subroutine\n \n program e_54_4"}, {"sha": "243164ec78578147316a4f74ef9d32b5e32b43c8", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -18,7 +18,7 @@ subroutine check (p, N)\n     real :: diff\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "677ce0179a914a364856d92ac7535e0779bd16d8", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -18,7 +18,7 @@ subroutine check (p, N)\n     real :: diff\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) STOP 1\n+      if (diff > EPS .or. -diff > EPS) stop 1\n     end do\n   end subroutine\n "}, {"sha": "4eae92b39e8a7588989f1f06d1f1fe71da9edb5b", "filename": "libgomp/testsuite/libgomp.fortran/lastprivate1.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,15 +5,15 @@ program lastprivate\n   !$omp parallel num_threads (4)\n   call test1\n   !$omp end parallel\n-  if (i .ne. 21) STOP 1\n+  if (i .ne. 21) stop 1\n   !$omp parallel num_threads (4)\n   call test2\n   !$omp end parallel\n-  if (i .ne. 64) STOP 2\n+  if (i .ne. 64) stop 2\n   !$omp parallel num_threads (4)\n   call test3\n   !$omp end parallel\n-  if (i .ne. 14) STOP 3\n+  if (i .ne. 14) stop 3\n   call test4\n   call test5\n   call test6\n@@ -54,45 +54,45 @@ subroutine test4\n     !$omp parallel do lastprivate (j) num_threads (4) default (none)\n     do j = 1, 20\n     end do\n-    if (j .ne. 21) STOP 4\n+    if (j .ne. 21) stop 4\n   end subroutine test4\n   subroutine test5\n     integer :: j\n     !$omp parallel do lastprivate (j) num_threads (4) default (none)\n     do j = 7, 61, 3\n     end do\n-    if (j .ne. 64) STOP 5\n+    if (j .ne. 64) stop 5\n   end subroutine test5\n   subroutine test6\n     integer :: j\n     !$omp parallel do lastprivate (j) num_threads (4) default (none)\n     do j = -10, 11, ret3 ()\n     end do\n-    if (j .ne. 14) STOP 6\n+    if (j .ne. 14) stop 6\n   end subroutine test6\n   subroutine test7\n     integer :: i\n     common /c/ i\n     !$omp parallel do lastprivate (i) num_threads (4) default (none)\n     do i = 1, 20\n     end do\n-    if (i .ne. 21) STOP 7\n+    if (i .ne. 21) stop 7\n   end subroutine test7\n   subroutine test8\n     integer :: i\n     common /c/ i\n     !$omp parallel do lastprivate (i) num_threads (4) default (none)\n     do i = 7, 61, 3\n     end do\n-    if (i .ne. 64) STOP 8\n+    if (i .ne. 64) stop 8\n   end subroutine test8\n   subroutine test9\n     integer :: i\n     common /c/ i\n     !$omp parallel do lastprivate (i) num_threads (4) default (none)\n     do i = -10, 11, ret3 ()\n     end do\n-    if (i .ne. 14) STOP 9\n+    if (i .ne. 14) stop 9\n   end subroutine test9\n   subroutine test10\n     integer :: i\n@@ -102,7 +102,7 @@ subroutine test10\n     do i = 1, 20\n     end do\n     !$omp end parallel\n-    if (i .ne. 21) STOP 10\n+    if (i .ne. 21) stop 10\n   end subroutine test10\n   subroutine test11\n     integer :: i\n@@ -112,7 +112,7 @@ subroutine test11\n     do i = 7, 61, 3\n     end do\n     !$omp end parallel\n-    if (i .ne. 64) STOP 11\n+    if (i .ne. 64) stop 11\n   end subroutine test11\n   subroutine test12\n     integer :: i\n@@ -122,6 +122,6 @@ subroutine test12\n     do i = -10, 11, ret3 ()\n     end do\n     !$omp end parallel\n-    if (i .ne. 14) STOP 12\n+    if (i .ne. 14) stop 12\n   end subroutine test12\n end program lastprivate"}, {"sha": "edaf82325a822554e7ef6f55e7e015db618bc82c", "filename": "libgomp/testsuite/libgomp.fortran/lastprivate2.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,15 +5,15 @@ program lastprivate\n   !$omp parallel num_threads (4)\n   call test1\n   !$omp end parallel\n-  if (i .ne. 21 .or. k .ne. 20) STOP 1\n+  if (i .ne. 21 .or. k .ne. 20) stop 1\n   !$omp parallel num_threads (4)\n   call test2\n   !$omp end parallel\n-  if (i .ne. 64 .or. k .ne. 61) STOP 2\n+  if (i .ne. 64 .or. k .ne. 61) stop 2\n   !$omp parallel num_threads (4)\n   call test3\n   !$omp end parallel\n-  if (i .ne. 14 .or. k .ne. 11) STOP 3\n+  if (i .ne. 14 .or. k .ne. 11) stop 3\n   call test4\n   call test5\n   call test6\n@@ -58,7 +58,7 @@ subroutine test4\n     do j = 1, 20\n       l = j\n     end do\n-    if (j .ne. 21 .or. l .ne. 20) STOP 4\n+    if (j .ne. 21 .or. l .ne. 20) stop 4\n   end subroutine test4\n   subroutine test5\n     integer :: j, l\n@@ -67,15 +67,15 @@ subroutine test5\n     do j = 7, 61, 3\n       l = j\n     end do\n-    if (j .ne. 64 .or. l .ne. 61) STOP 5\n+    if (j .ne. 64 .or. l .ne. 61) stop 5\n   end subroutine test5\n   subroutine test6\n     integer :: j, l\n     !$omp parallel do lastprivate (j, l) num_threads (4)\n     do j = -10, 11, ret3 ()\n       l = j\n     end do\n-    if (j .ne. 14 .or. l .ne. 11) STOP 6\n+    if (j .ne. 14 .or. l .ne. 11) stop 6\n   end subroutine test6\n   subroutine test7\n     integer :: i, k\n@@ -84,7 +84,7 @@ subroutine test7\n     do i = 1, 20\n       k = i\n     end do\n-    if (i .ne. 21 .or. k .ne. 20) STOP 7\n+    if (i .ne. 21 .or. k .ne. 20) stop 7\n   end subroutine test7\n   subroutine test8\n     integer :: i, k\n@@ -93,7 +93,7 @@ subroutine test8\n     do i = 7, 61, 3\n       k = i\n     end do\n-    if (i .ne. 64 .or. k .ne. 61) STOP 8\n+    if (i .ne. 64 .or. k .ne. 61) stop 8\n   end subroutine test8\n   subroutine test9\n     integer :: i, k\n@@ -103,7 +103,7 @@ subroutine test9\n     do i = -10, 11, ret3 ()\n       k = i\n     end do\n-    if (i .ne. 14 .or. k .ne. 11) STOP 9\n+    if (i .ne. 14 .or. k .ne. 11) stop 9\n   end subroutine test9\n   subroutine test10\n     integer :: i, k\n@@ -114,7 +114,7 @@ subroutine test10\n       k = i\n     end do\n     !$omp end parallel\n-    if (i .ne. 21 .or. k .ne. 20) STOP 10\n+    if (i .ne. 21 .or. k .ne. 20) stop 10\n   end subroutine test10\n   subroutine test11\n     integer :: i, k\n@@ -125,7 +125,7 @@ subroutine test11\n       k = i\n     end do\n     !$omp end parallel\n-    if (i .ne. 64 .or. k .ne. 61) STOP 11\n+    if (i .ne. 64 .or. k .ne. 61) stop 11\n   end subroutine test11\n   subroutine test12\n     integer :: i, k\n@@ -137,6 +137,6 @@ subroutine test12\n       k = i\n     end do\n     !$omp end parallel\n-    if (i .ne. 14 .or. k .ne. 11) STOP 12\n+    if (i .ne. 14 .or. k .ne. 11) stop 12\n   end subroutine test12\n end program lastprivate"}, {"sha": "4e7f9b24bd5c36ac035efec62fb56da312c89c64", "filename": "libgomp/testsuite/libgomp.fortran/lib1.f90", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -11,42 +11,42 @@\n \n   call omp_init_lock (lck)\n   call omp_set_lock (lck)\n-  if (omp_test_lock (lck)) STOP 1\n+  if (omp_test_lock (lck)) stop 1\n   call omp_unset_lock (lck)\n-  if (.not. omp_test_lock (lck)) STOP 2\n-  if (omp_test_lock (lck)) STOP 3\n+  if (.not. omp_test_lock (lck)) stop 2\n+  if (omp_test_lock (lck)) stop 3\n   call omp_unset_lock (lck)\n   call omp_destroy_lock (lck)\n \n   call omp_init_nest_lock (nlck)\n-  if (omp_test_nest_lock (nlck) .ne. 1) STOP 4\n+  if (omp_test_nest_lock (nlck) .ne. 1) stop 4\n   call omp_set_nest_lock (nlck)\n-  if (omp_test_nest_lock (nlck) .ne. 3) STOP 5\n+  if (omp_test_nest_lock (nlck) .ne. 3) stop 5\n   call omp_unset_nest_lock (nlck)\n   call omp_unset_nest_lock (nlck)\n-  if (omp_test_nest_lock (nlck) .ne. 2) STOP 6\n+  if (omp_test_nest_lock (nlck) .ne. 2) stop 6\n   call omp_unset_nest_lock (nlck)\n   call omp_unset_nest_lock (nlck)\n   call omp_destroy_nest_lock (nlck)\n \n   call omp_set_dynamic (.true.)\n-  if (.not. omp_get_dynamic ()) STOP 7\n+  if (.not. omp_get_dynamic ()) stop 7\n   call omp_set_dynamic (.false.)\n-  if (omp_get_dynamic ()) STOP 8\n+  if (omp_get_dynamic ()) stop 8\n \n   call omp_set_nested (.true.)\n-  if (.not. omp_get_nested ()) STOP 9\n+  if (.not. omp_get_nested ()) stop 9\n   call omp_set_nested (.false.)\n-  if (omp_get_nested ()) STOP 10\n+  if (omp_get_nested ()) stop 10\n \n   call omp_set_num_threads (5)\n-  if (omp_get_num_threads () .ne. 1) STOP 11\n-  if (omp_get_max_threads () .ne. 5) STOP 12\n-  if (omp_get_thread_num () .ne. 0) STOP 13\n+  if (omp_get_num_threads () .ne. 1) stop 11\n+  if (omp_get_max_threads () .ne. 5) stop 12\n+  if (omp_get_thread_num () .ne. 0) stop 13\n   call omp_set_num_threads (3)\n-  if (omp_get_num_threads () .ne. 1) STOP 14\n-  if (omp_get_max_threads () .ne. 3) STOP 15\n-  if (omp_get_thread_num () .ne. 0) STOP 16\n+  if (omp_get_num_threads () .ne. 1) stop 14\n+  if (omp_get_max_threads () .ne. 3) stop 15\n+  if (omp_get_thread_num () .ne. 0) stop 16\n   l = .false.\n !$omp parallel reduction (.or.:l)\n   l = omp_get_num_threads () .ne. 3\n@@ -56,22 +56,22 @@\n   l = l .or. (omp_get_thread_num () .ne. 0)\n !$omp end master\n !$omp end parallel\n-  if (l) STOP 17\n+  if (l) stop 17\n \n-  if (omp_get_num_procs () .le. 0) STOP 18\n-  if (omp_in_parallel ()) STOP 19\n+  if (omp_get_num_procs () .le. 0) stop 18\n+  if (omp_in_parallel ()) stop 19\n !$omp parallel reduction (.or.:l)\n   l = .not. omp_in_parallel ()\n !$omp end parallel\n !$omp parallel reduction (.or.:l) if (.true.)\n   l = .not. omp_in_parallel ()\n !$omp end parallel\n-  if (l) STOP 20\n+  if (l) stop 20\n \n   e = omp_get_wtime ()\n-  if (d .gt. e) STOP 21\n+  if (d .gt. e) stop 21\n   d = omp_get_wtick ()\n   ! Negative precision is definitely wrong,\n   ! bigger than 1s clock resolution is also strange\n-  if (d .le. 0 .or. d .gt. 1.) STOP 22\n+  if (d .le. 0 .or. d .gt. 1.) stop 22\n end"}, {"sha": "d551cde35c67a210a42df4ed6b4b0665bbf51dad", "filename": "libgomp/testsuite/libgomp.fortran/lib4.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -6,11 +6,11 @@ program lib4\n   integer :: modifier\n   call omp_set_schedule (omp_sched_static, 32)\n   call omp_get_schedule (kind, modifier)\n-  if (kind.ne.omp_sched_static.or.modifier.ne.32) STOP 1\n+  if (kind.ne.omp_sched_static.or.modifier.ne.32) stop 1\n   call omp_set_schedule (omp_sched_dynamic, 4)\n   call omp_get_schedule (kind, modifier)\n-  if (kind.ne.omp_sched_dynamic.or.modifier.ne.4) STOP 2\n-  if (omp_get_thread_limit ().lt.0) STOP 3\n+  if (kind.ne.omp_sched_dynamic.or.modifier.ne.4) stop 2\n+  if (omp_get_thread_limit ().lt.0) stop 3\n   call omp_set_max_active_levels (6)\n-  if (omp_get_max_active_levels ().ne.6) STOP 4\n+  if (omp_get_max_active_levels ().ne.6) stop 4\n end program lib4"}, {"sha": "211160780499ae105e43ddb435467bda28e07bdd", "filename": "libgomp/testsuite/libgomp.fortran/lock-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -7,16 +7,16 @@\n \n   l = .false.\n   call omp_init_nest_lock (lock)\n-  if (omp_test_nest_lock (lock) .ne. 1) STOP 1\n-  if (omp_test_nest_lock (lock) .ne. 2) STOP 2\n+  if (omp_test_nest_lock (lock) .ne. 1) stop 1\n+  if (omp_test_nest_lock (lock) .ne. 2) stop 2\n !$omp parallel if (.false.) reduction (.or.:l)\n   ! In OpenMP 2.5 this was supposed to return 3,\n   ! but in OpenMP 3.0 the parallel region has a different\n   ! task and omp_*_lock_t are owned by tasks, not by threads.\n   if (omp_test_nest_lock (lock) .ne. 0) l = .true.\n !$omp end parallel\n-  if (l) STOP 3\n-  if (omp_test_nest_lock (lock) .ne. 3) STOP 4\n+  if (l) stop 3\n+  if (omp_test_nest_lock (lock) .ne. 3) stop 4\n   call omp_unset_nest_lock (lock)\n   call omp_unset_nest_lock (lock)\n   call omp_unset_nest_lock (lock)"}, {"sha": "ddf53c1b70eb0c3cb5caad96a975240e340cc42b", "filename": "libgomp/testsuite/libgomp.fortran/lock-2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,8 +8,8 @@\n   l = .false.\n   call omp_init_nest_lock (lock)\n !$omp parallel num_threads (1) reduction (.or.:l)\n-  if (omp_test_nest_lock (lock) .ne. 1) STOP 1\n-  if (omp_test_nest_lock (lock) .ne. 2) STOP 2\n+  if (omp_test_nest_lock (lock) .ne. 1) stop 1\n+  if (omp_test_nest_lock (lock) .ne. 2) stop 2\n !$omp task if (.false.) shared (lock, l)\n   if (omp_test_nest_lock (lock) .ne. 0) l = .true.\n !$omp end task\n@@ -19,6 +19,6 @@\n   call omp_unset_nest_lock (lock)\n   call omp_unset_nest_lock (lock)\n !$omp end parallel\n-  if (l) STOP 3\n+  if (l) stop 3\n   call omp_destroy_nest_lock (lock)\n end"}, {"sha": "f521b7bf820f039ab2b8394284f61997c5470f3a", "filename": "libgomp/testsuite/libgomp.fortran/nested1.f90", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnested1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnested1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnested1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,16 +8,16 @@ program nested1\n   e3 = 0\n   call omp_set_nested (.true.)\n   call omp_set_dynamic (.false.)\n-  if (omp_in_parallel ()) STOP 1\n-  if (omp_get_num_threads ().ne.1) STOP 2\n-  if (omp_get_level ().ne.0) STOP 3\n-  if (omp_get_ancestor_thread_num (0).ne.0) STOP 4\n-  if (omp_get_ancestor_thread_num (-1).ne.-1) STOP 5\n-  if (omp_get_ancestor_thread_num (1).ne.-1) STOP 6\n-  if (omp_get_team_size (0).ne.1) STOP 7\n-  if (omp_get_team_size (-1).ne.-1) STOP 8\n-  if (omp_get_team_size (1).ne.-1) STOP 9\n-  if (omp_get_active_level ().ne.0) STOP 10\n+  if (omp_in_parallel ()) stop 1\n+  if (omp_get_num_threads ().ne.1) stop 2\n+  if (omp_get_level ().ne.0) stop 3\n+  if (omp_get_ancestor_thread_num (0).ne.0) stop 4\n+  if (omp_get_ancestor_thread_num (-1).ne.-1) stop 5\n+  if (omp_get_ancestor_thread_num (1).ne.-1) stop 6\n+  if (omp_get_team_size (0).ne.1) stop 7\n+  if (omp_get_team_size (-1).ne.-1) stop 8\n+  if (omp_get_team_size (1).ne.-1) stop 9\n+  if (omp_get_active_level ().ne.0) stop 10\n !$omp parallel num_threads (4) private (e, tn1)\n   e = 0\n   tn1 = omp_get_thread_num ()\n@@ -83,5 +83,5 @@ program nested1\n !$omp end parallel\n !$omp end parallel\n !$omp end parallel\n-  if (e1.ne.0.or.e2.ne.0.or.e3.ne.0) STOP 11\n+  if (e1.ne.0.or.e2.ne.0.or.e3.ne.0) stop 11\n end program nested1"}, {"sha": "9949071b4b98f4d4301477ed21d153ef66189962", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,7 +5,7 @@\n   b = 2\n   c = 3\n   call foo\n-  if (a .ne. 7) STOP 1\n+  if (a .ne. 7) stop 1\n contains\n   subroutine foo\n     use omp_lib\n@@ -38,6 +38,6 @@ subroutine foo\n       if (a .ne. 7 .or. b .ne. 8 .or. c .ne. 9) l = .true.\n     end if\n !$omp end parallel\n-    if (l) STOP 2\n+    if (l) stop 2\n   end subroutine foo\n end"}, {"sha": "cd2e505a6e65a0f169067966a4246aeb0c73b5a1", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -24,8 +24,8 @@ end subroutine test2\n   subroutine test3\n     integer :: i\n     common /c/ i\n-    if (i .lt. 0 .or. i .ge. 4) STOP 1\n-    if (i + 10 .ne. vari) STOP 2\n+    if (i .lt. 0 .or. i .ge. 4) stop 1\n+    if (i + 10 .ne. vari) stop 2\n   end subroutine test3\n   subroutine test4\n     use omp_lib"}, {"sha": "fa82d2f23b03700e1a5b3b7f3b468a6ba6301721", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,7 +5,7 @@ program nestomp\n   integer :: j\n   j = 8\n   call bar\n-  if (j.ne.10) STOP 1\n+  if (j.ne.10) stop 1\n contains\n   subroutine foo (i)\n     integer :: i"}, {"sha": "6e4126888c121f94a4f731731edd63dd2542a6b4", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn4.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -7,19 +7,19 @@ program foo\n   call test1\n   call test2\n   do i = 1, 10\n-    if (a(i) .ne. 10 * i) STOP 1\n+    if (a(i) .ne. 10 * i) stop 1\n   end do\n   !$omp parallel do reduction (+:c)\n   do i = 1, 10\n     c = c + a\n   end do\n   do i = 1, 10\n-    if (c(i) .ne. 10 * a(i)) STOP 2\n+    if (c(i) .ne. 10 * a(i)) stop 2\n   end do\n   !$omp parallel do lastprivate (j)\n   do j = 1, 10, k\n   end do\n-  if (j .ne. 11) STOP 3\n+  if (j .ne. 11) stop 3\n contains\n   subroutine test1\n     integer :: i\n@@ -37,6 +37,6 @@ subroutine test2\n     !$omp parallel do lastprivate (j)\n     do j = 1, 10, k\n     end do\n-    if (j .ne. 11) STOP 4\n+    if (j .ne. 11) stop 4\n   end subroutine test2\n end program foo"}, {"sha": "28c9b00da67f95911c2bd84f8b5308a4d109d737", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn5.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -30,7 +30,7 @@ subroutine foo\n       b = b + 1\n     end do\n !$omp end simd\n-    if (a /= 21 .or. b /= 12) STOP 1\n+    if (a /= 21 .or. b /= 12) stop 1\n !$omp simd aligned(f : c_sizeof (e(1)))\n     do b = 1, 64\n       g(b) = f\n@@ -44,8 +44,8 @@ subroutine foo\n     d(2:2,4:5) = d(2:2,4:5) + 1\n !$omp end task\n !$omp task depend(in : a, d(2:2,4:5))\n-    if (a /= 22) STOP 2\n-    if (any (d(2:2,4:5) /= 5)) STOP 3\n+    if (a /= 22) stop 2\n+    if (any (d(2:2,4:5) /= 5)) stop 3\n !$omp end task\n !$omp end taskgroup\n !$omp end single\n@@ -64,8 +64,8 @@ subroutine foo\n     d(2:3,4:4) = 9\n !$omp end target\n !$omp target update from (a, q, d(2:3,4:4), l)\n-    if (a /= 6 .or. l .or. b /= 11 .or. any (q /= 8)) STOP 4\n-    if (any (d(2:3,4:4) /= 9) .or. d(2,5) /= 5 .or. d(3,5) /= 4) STOP 5\n+    if (a /= 6 .or. l .or. b /= 11 .or. any (q /= 8)) stop 4\n+    if (any (d(2:3,4:4) /= 9) .or. d(2,5) /= 5 .or. d(3,5) /= 4) stop 5\n     a = 12\n     b = 13\n     q = 14\n@@ -82,7 +82,7 @@ subroutine foo\n     m = 0\n     n = 64\n     o = 16\n-    if (l) STOP 6\n+    if (l) stop 6\n !$omp target teams distribute parallel do simd if (.not.l) device(a) &\n !$omp & num_teams(b) dist_schedule(static, c) num_threads (h) &\n !$omp & reduction (+: m) safelen (n) schedule(static, o) &\n@@ -91,7 +91,7 @@ subroutine foo\n       m = m + 1\n     end do\n !$omp end target teams distribute parallel do simd\n-    if (m /= 64) STOP 7\n+    if (m /= 64) stop 7\n !$omp end target data\n   end subroutine foo\n end subroutine bar"}, {"sha": "57b7c0051f7b9c2898c224d7779ad31069cdfa41", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -18,22 +18,22 @@\n     c = c * 2\n !$omp atomic\n     d = 2 / d\n-    if (a .ne. 5 .or. b .ne. 2 .or. c .ne. 6 .or. d .ne. 0.5) STOP 1\n+    if (a .ne. 5 .or. b .ne. 2 .or. c .ne. 6 .or. d .ne. 0.5) stop 1\n     d = 1.2\n !$omp atomic\n     a = a + c + d\n !$omp atomic\n     b = b - (a + c + d)\n-    if (a .ne. 12 .or. b .ne. -17) STOP 2\n+    if (a .ne. 12 .or. b .ne. -17) stop 2\n !$omp atomic\n     a = c + d + a\n !$omp atomic\n     b = a + c + d - b\n-    if (a .ne. 19 .or. b .ne. 43) STOP 3\n+    if (a .ne. 19 .or. b .ne. 43) stop 3\n !$omp atomic\n     b = (a + c + d) - b\n     a = 32\n !$omp atomic\n     a = a / 3.4\n-    if (a .ne. 9 .or. b .ne. -16) STOP 4\n+    if (a .ne. 9 .or. b .ne. -16) stop 4\n end"}, {"sha": "3748e30bc269f82748e86774f7fbff5b4d77ae49", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,28 +13,28 @@\n   n = 20\n   call foo (r, d, n)\n \n-  if (n .ne. 22) STOP 1\n-  if (any (r .ne. 33)) STOP 2\n+  if (n .ne. 22) stop 1\n+  if (any (r .ne. 33)) stop 2\n \n   i = 1\n   j = 18\n   k = 23\n !$omp atomic\n   i = min (i, j, k, n)\n-  if (i .ne. 1) STOP 3\n+  if (i .ne. 1) stop 3\n !$omp atomic\n   i = max (j, n, k, i)\n-  if (i .ne. 23) STOP 4\n+  if (i .ne. 23) stop 4\n \n   a = 1\n   b = 18\n   c = 23\n !$omp atomic\n   a = min (a, b, c)\n-  if (a .ne. 1) STOP 5\n+  if (a .ne. 1) stop 5\n !$omp atomic\n   a = max (a, b, c)\n-  if (a .ne. 23) STOP 6\n+  if (a .ne. 23) stop 6\n \n contains\n   function bar (i)"}, {"sha": "454b167157f123b5546a192a7b6484c22fcd75f1", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic3.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -36,23 +36,23 @@\n     c2 = c\n !$omp atomic read\n     d2 = d\n-    if (a2 .ne. 5 .or. b2 .ne. 2 .or. c2 .ne. 6 .or. d2 .ne. 0.5) STOP 1\n+    if (a2 .ne. 5 .or. b2 .ne. 2 .or. c2 .ne. 6 .or. d2 .ne. 0.5) stop 1\n !$omp atomic write\n     d = 1.2\n !$omp atomic\n     a = a + c + d\n !$omp atomic\n     b = b - (a + c + d)\n-    if (a .ne. 12 .or. b .ne. -17) STOP 2\n+    if (a .ne. 12 .or. b .ne. -17) stop 2\n !$omp atomic\n     a = c + d + a\n !$omp atomic\n     b = a + c + d - b\n-    if (a .ne. 19 .or. b .ne. 43) STOP 3\n+    if (a .ne. 19 .or. b .ne. 43) stop 3\n !$omp atomic\n     b = (a + c + d) - b\n     a = 32\n !$omp atomic\n     a = a / 3.4\n-    if (a .ne. 9 .or. b .ne. -16) STOP 4\n+    if (a .ne. 9 .or. b .ne. -16) stop 4\n end"}, {"sha": "75da9f39400e9541af1f3106c6752cd5c1f19b6b", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -28,10 +28,10 @@\n     d = d / 2.0\n     d2 = d\n !$omp end atomic\n-    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) STOP 1\n+    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) stop 1\n !$omp atomic read\n     a2 = a\n !$omp atomic read\n     c2 = c\n-    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) STOP 2\n+    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) stop 2\n end"}, {"sha": "292a7f62a2f45dc880e8a2daf8fc184330b9ec21", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic5.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -30,30 +30,30 @@\n     d = d / 2.0\n     d2 = d\n !$omp end atomic\n-    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) STOP 1\n+    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) stop 1\n !$omp atomic read seq_cst\n     a2 = a\n !$omp atomic seq_cst, read\n     c2 = c\n-    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) STOP 2\n+    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) stop 2\n     a2 = 10\n-    if (a2 .ne. 10) STOP 3\n+    if (a2 .ne. 10) stop 3\n !$omp atomic capture\n     a2 = a\n     a = e(1) + e(6) + e(7) * 2\n !$omp endatomic\n-    if (a2 .ne. 5) STOP 4\n+    if (a2 .ne. 5) stop 4\n !$omp atomic read\n     a2 = a\n !$omp end atomic\n-    if (a2 .ne. 28) STOP 5\n+    if (a2 .ne. 28) stop 5\n !$omp atomic capture seq_cst\n     b2 = b\n     b = e(1) + e(7) + e(5) * 2\n !$omp end atomic\n-    if (b2 .ne. -16) STOP 6\n+    if (b2 .ne. -16) stop 6\n !$omp atomic seq_cst, read\n     b2 = b\n !$omp end atomic\n-    if (b2 .ne. 24) STOP 7\n+    if (b2 .ne. 24) stop 7\n end"}, {"sha": "d98e6cc2848fa50b9a5a697eb0b919041aa3ff5b", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond1.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond1.f?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -1,13 +1,13 @@\n C Test conditional compilation in fixed form if -fopenmp\n    10 foo = 2\n      &56\n-      if (foo.ne.256) STOP 1\n+      if (foo.ne.256) stop 1\n       bar = 26\n !$2 0 ba\n c$   +r = 42\n       !$ bar = 62\n !$    bar = bar + 1\n-      if (bar.ne.43) STOP 2\n+      if (bar.ne.43) stop 2\n       baz = bar\n *$   0baz = 5\n C$   +12! Comment\n@@ -17,5 +17,5 @@\n !$ X  baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n c$ 10&baz = 2\n-      if (baz.ne.51242) STOP 3\n+      if (baz.ne.51242) stop 3\n       end"}, {"sha": "e54edeaf55e880b289161a6dac44f1c825add963", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond2.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond2.f?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -2,13 +2,13 @@\n ! { dg-options \"-fno-openmp\" }\n    10 foo = 2\n      &56\n-      if (foo.ne.256) STOP 1\n+      if (foo.ne.256) stop 1\n       bar = 26\n !$2 0 ba\n c$   +r = 42\n       !$ bar = 62\n !$    bar = bar + 1\n-      if (bar.ne.26) STOP 2\n+      if (bar.ne.26) stop 2\n       baz = bar\n *$   0baz = 5\n C$   +12! Comment\n@@ -18,5 +18,5 @@\n !$ X  baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n c$ 10&baz = 2\n-      if (baz.ne.26) STOP 3\n+      if (baz.ne.26) stop 3\n       end"}, {"sha": "6a8ce52d326e5a88eebe853ab3f3ffbd6cc88856", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond3.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond3.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond3.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond3.F90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -1,7 +1,7 @@\n ! Test conditional compilation in free form if -fopenmp\n    10 foo = 2&\n   &56\n-  if (foo.ne.256) STOP 1\n+  if (foo.ne.256) stop 1\n   bar = 26\n    !$  20 ba&\n !$   &r = 4&\n@@ -11,13 +11,13 @@\n #ifdef _OPENMP\n bar = bar - 1\n #endif\n-  if (bar.ne.43) STOP 2\n+  if (bar.ne.43) stop 2\n       baz = bar\n !$ 30 baz = 5&     ! Comment\n !$12  &  \n   !$ + 2\n !$X baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n baz = baz + 1 !$ baz = 2\n-      if (baz.ne.515) STOP 3\n+      if (baz.ne.515) stop 3\n       end"}, {"sha": "644f7e302a20bdd280876edf750238b3b5362bea", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond4.F90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -2,7 +2,7 @@\n ! { dg-options \"-fno-openmp\" }\n    10 foo = 2&\n   &56\n-  if (foo.ne.256) STOP 1\n+  if (foo.ne.256) stop 1\n   bar = 26\n    !$  20 ba&\n !$   &r = 4&\n@@ -12,13 +12,13 @@\n #ifdef _OPENMP\n bar = bar - 1\n #endif\n-  if (bar.ne.26) STOP 2\n+  if (bar.ne.26) stop 2\n       baz = bar\n !$ 30 baz = 5&     ! Comment\n !$12  &  \n   !$ + 2\n !$X baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n baz = baz + 1 !$ baz = 2\n-      if (baz.ne.27) STOP 3\n+      if (baz.ne.27) stop 3\n       end"}, {"sha": "f3b4bc579cf5a5718bdf11ce1b0ae0dd498dbda5", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse1.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -43,16 +43,16 @@ subroutine test_parallel\n     d(b + 1) = c\n     if (f .ne. g .or. f .ne. b) h = .true.\n !$omp endparallel\n-    if (h) STOP 1\n-    if (a .ne. 6) STOP 2\n-    if (j .ne. 24) STOP 3\n-    if (d(1) .eq. -1) STOP 4\n+    if (h) stop 1\n+    if (a .ne. 6) stop 2\n+    if (j .ne. 24) stop 3\n+    if (d(1) .eq. -1) stop 4\n     e = 1\n     do g = 1, d(1)\n-      if (d(g) .ne. d(1)) STOP 5\n+      if (d(g) .ne. d(1)) stop 5\n       e = e * 2\n     end do\n-    if (e .ne. i) STOP 6\n+    if (e .ne. i) stop 6\n   end subroutine test_parallel\n \n   subroutine test_do_orphan\n@@ -79,7 +79,7 @@ subroutine test_do\n     call test_do_orphan\n !$omp do schedule (static) firstprivate (n)\n     do 200 i = 1, j\n-      if (i .eq. 1 .and. n .ne. 24) STOP 7\n+      if (i .eq. 1 .and. n .ne. 24) stop 7\n       n = i\n 200   d(n) = omp_get_thread_num ()\n !$omp enddo nowait\n@@ -103,11 +103,11 @@ subroutine test_do\n     end do\n     ! Implied omp end do here\n !$omp end parallel\n-    if (.not. m) STOP 8\n+    if (.not. m) stop 8\n \n     j = 0\n     do i = 1, 64\n-      if (d(i) .lt. j .or. d(i) .ge. j + k) STOP 9\n+      if (d(i) .lt. j .or. d(i) .ge. j + k) stop 9\n       if (i .eq. 16) j = 1024\n       if (i .eq. 32) j = 2048\n       if (i .eq. 48) j = 4096\n@@ -152,9 +152,9 @@ subroutine test_sections\n     n = 7\n !$omp endsections\n !$omp end parallel\n-    if (j .ne. 271 .or. l .ne. 0) STOP 10\n-    if (m .ne. 4 + 6 + 8 + 10) STOP 11\n-    if (n .ne. 7) STOP 12\n+    if (j .ne. 271 .or. l .ne. 0) stop 10\n+    if (m .ne. 4 + 6 + 8 + 10) stop 11\n+    if (n .ne. 7) stop 12\n   end subroutine test_sections\n \n   subroutine test_single\n@@ -182,6 +182,6 @@ subroutine test_single\n !$omp end single copyprivate (j)\n     if (i .ne. omp_get_thread_num () .or. j .ne. -2) m = .true.\n !$omp endparallel\n-    if (m) STOP 13\n+    if (m) stop 13\n   end subroutine test_single\n end"}, {"sha": "3de6968bae285aee81054d8ad3cb981f3ade8161", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse2.f90", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -16,7 +16,7 @@ subroutine test_master\n     j = omp_get_thread_num () .eq. 0\n !$omp endmaster\n !$omp end parallel\n-    if (.not. (i .or. j)) STOP 1\n+    if (.not. (i .or. j)) stop 1\n   end subroutine test_master\n \n   subroutine test_critical_1 (i, j)\n@@ -45,7 +45,7 @@ subroutine test_critical\n     i = i + 1\n !$omp endcritical (critical_foo)\n !$omp end parallel\n-    if (n .lt. 1 .or. i .ne. n * 3 .or. j .ne. n * 3) STOP 2\n+    if (n .lt. 1 .or. i .ne. n * 3 .or. j .ne. n * 3) stop 2\n   end subroutine test_critical\n \n   subroutine test_barrier\n@@ -62,7 +62,7 @@ subroutine test_barrier\n       j = j .or. .true.\n     end if\n !$omp end parallel\n-    if (i .ne. 5 .or. j) STOP 3\n+    if (i .ne. 5 .or. j) stop 3\n   end subroutine test_barrier\n \n   subroutine test_atomic\n@@ -89,14 +89,14 @@ subroutine test_atomic\n     f = max (omp_get_thread_num (), f)\n     if (omp_get_thread_num () .eq. 0) g = omp_get_num_threads ()\n !$omp end parallel\n-    if (g .le. 0 .or. g .gt. 8) STOP 4\n-    if (a .ne. 6 * g .or. b .ne. 3 ** g) STOP 5\n+    if (g .le. 0 .or. g .gt. 8) stop 4\n+    if (a .ne. 6 * g .or. b .ne. 3 ** g) stop 5\n     if (iand (g, 1) .eq. 1) then\n-      if (c .ne. 8) STOP 6\n+      if (c .ne. 8) stop 6\n     else if (c .ne. 0) then\n-      STOP 7\n+      stop 7\n     end if\n-    if (d .ne. 1024 / (2 ** g)) STOP 8\n-    if (e .ne. 0 .or. f .ne. g - 1) STOP 9\n+    if (d .ne. 1024 / (2 ** g)) stop 8\n+    if (e .ne. 0 .or. f .ne. g - 1) stop 9\n   end subroutine test_atomic\n end"}, {"sha": "6076c7aad3c50ae410be70b20bf006e560a16a7a", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse3.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -45,10 +45,10 @@ subroutine test_ordered\n     j = 1\n     do 100 i = 1, 100\n       if (i .eq. j) then\n-\tif (d(i) .ne. i) STOP 1\n+\tif (d(i) .ne. i) stop 1\n \tj = i + 5\n       else\n-\tif (d(i) .ne. -1) STOP 2\n+\tif (d(i) .ne. -1) stop 2\n       end if\n 100   d(i) = -1\n   end subroutine test_ordered\n@@ -69,17 +69,17 @@ subroutine test_threadprivate\n !$omp parallel copyin (/tlsblock/, z) reduction (.or.:m) &\n !$omp& num_threads (4)\n     if (omp_get_thread_num () .eq. 0) i = omp_get_num_threads ()\n-    if (x .ne. 6 .or. y .ne. 7 .or. z .ne. 8) STOP 3\n+    if (x .ne. 6 .or. y .ne. 7 .or. z .ne. 8) stop 3\n     x = omp_get_thread_num ()\n     y = omp_get_thread_num () + 1024\n     z = omp_get_thread_num () + 4096\n !$omp end parallel\n-    if (x .ne. 0 .or. y .ne. 1024 .or. z .ne. 4096) STOP 4\n+    if (x .ne. 0 .or. y .ne. 1024 .or. z .ne. 4096) stop 4\n !$omp parallel num_threads (4), private (j) reduction (.or.:n)\n     if (omp_get_num_threads () .eq. i) then\n       j = omp_get_thread_num ()\n       if (x .ne. j .or. y .ne. j + 1024 .or. z .ne. j + 4096) &\n-&       STOP 5\n+&       stop 5\n     end if\n !$omp end parallel\n     m = m .or. n\n@@ -89,9 +89,9 @@ subroutine test_threadprivate\n     if (z .ne. 4096) n = .true.\n     if (omp_get_num_threads () .eq. i) then\n       j = omp_get_thread_num ()\n-      if (x .ne. j .or. y .ne. j + 1024) STOP 6\n+      if (x .ne. j .or. y .ne. j + 1024) stop 6\n     end if\n !$omp end parallel\n-    if (m .or. n) STOP 7\n+    if (m .or. n) stop 7\n   end subroutine test_threadprivate\n end"}, {"sha": "09b0fa24269cb037dc90982358d9853e05064d87", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse4.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -59,14 +59,14 @@ subroutine test_workshare\n !$omp end parallel\n \n     if (any (f .ne. (/100, 100, 100, 210, 210, 210, 310, 310, 337, 337/))) &\n-&     STOP 1\n-    if (any (g .ne. (/-1, -1, -1, 0, 0, 0, 0, 0, 0, 0/))) STOP 2\n-    if (i .ne. 20) STOP 3\n-!$  if (l .ne. 128 + m) STOP 4\n-    if (any (d .ne. 1 .or. e .ne. 1)) STOP 5\n-    if (any (b .ne. transpose (a))) STOP 6\n-    if (any (c .ne. b)) STOP 7\n+&     stop 1\n+    if (any (g .ne. (/-1, -1, -1, 0, 0, 0, 0, 0, 0, 0/))) stop 2\n+    if (i .ne. 20) stop 3\n+!$  if (l .ne. 128 + m) stop 4\n+    if (any (d .ne. 1 .or. e .ne. 1)) stop 5\n+    if (any (b .ne. transpose (a))) stop 6\n+    if (any (c .ne. b)) stop 7\n     if (any (n .ne. (/1, 2, 6, 12, 5, 30, 42, 56, 9, 90, &\n-&                     110, 132, 13, 182, 210, 240/))) STOP 8\n+&                     110, 132, 13, 182, 210, 240/))) stop 8\n   end subroutine test_workshare\n end"}, {"sha": "78d4b981f6b11e3b4c9fe0ed2982bd13b7d982e1", "filename": "libgomp/testsuite/libgomp.fortran/openmp_version-1.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-1.f?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -4,6 +4,6 @@ program main\n       implicit none\n       include \"omp_lib.h\"\n \n-      if (openmp_version .ne. 201511) STOP 1;\n+      if (openmp_version .ne. 201511) stop 1;\n \n       end program main"}, {"sha": "693dba0b3f54d6612057265c50384379287d869e", "filename": "libgomp/testsuite/libgomp.fortran/openmp_version-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -4,6 +4,6 @@ program main\n   use omp_lib\n   implicit none\n \n-  if (openmp_version .ne. 201511) STOP 1;\n+  if (openmp_version .ne. 201511) stop 1;\n \n end program main"}, {"sha": "0f800e6452318c2eaabb1baa04dbcfe9dc2622ba", "filename": "libgomp/testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -34,7 +34,7 @@ program main\n   call foo ()\n \n   do i = 0, n - 1\n-     if (c(i) .ne. (i + MODULO ((i * 3), 7))) STOP 1\n+     if (c(i) .ne. (i + MODULO ((i * 3), 7))) stop 1\n   end do\n \n end program"}, {"sha": "1485683467cc39cc97984dc6a3efbc4566768859", "filename": "libgomp/testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -35,7 +35,7 @@ program main\n   call foo (n)\n \n   do i = 0, n - 1\n-     if (c(i) .ne. (i + MODULO ((i * 3), 7))) STOP 1\n+     if (c(i) .ne. (i + MODULO ((i * 3), 7))) stop 1\n   end do\n \n end program"}, {"sha": "3332000dc61e91b823c2077aa87dadebfaca775d", "filename": "libgomp/testsuite/libgomp.fortran/pointer1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -21,7 +21,7 @@ subroutine foo (a, c)\n         c(1) = c(1) + 1\n       r = r + 1\n     !$omp end parallel\n-    if (a.ne.r.or.c(1).ne.r) STOP 1\n+    if (a.ne.r.or.c(1).ne.r) stop 1\n     r2 = r\n     b => a\n     d => c\n@@ -33,7 +33,7 @@ subroutine foo (a, c)\n         d(1) = d(1) + 1\n       r = r + 1\n     !$omp end parallel\n-    if (b.ne.r+r2.or.d(1).ne.r+r2) STOP 2\n+    if (b.ne.r+r2.or.d(1).ne.r+r2) stop 2\n   end subroutine foo\n   subroutine bar (a, c)\n     integer, pointer :: a, c(:), b, d(:)\n@@ -55,8 +55,8 @@ subroutine bar (a, c)\n \tend if\n       end do\n     !$omp end parallel do\n-    if (b.ne.100.or.any(d.ne.10)) STOP 3\n-    if (a.ne.17.or.any(c.ne.21)) STOP 4\n+    if (b.ne.100.or.any(d.ne.10)) stop 3\n+    if (a.ne.17.or.any(c.ne.21)) stop 4\n     a => b\n     c => d\n     !$omp parallel do firstprivate (b, d) lastprivate (b, d)\n@@ -71,7 +71,7 @@ subroutine bar (a, c)\n \tend if\n       end do\n     !$omp end parallel do\n-    if (a.ne.200.or.any(c.ne.20)) STOP 5\n-    if (b.ne.17.or.any(d.ne.21)) STOP 6\n+    if (a.ne.200.or.any(c.ne.20)) stop 5\n+    if (b.ne.17.or.any(d.ne.21)) stop 6\n   end subroutine bar\n end"}, {"sha": "3db052e72aa120beafecebd90307b3d58b97169a", "filename": "libgomp/testsuite/libgomp.fortran/pointer2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -21,8 +21,8 @@\n   thr(1) = thr(1) + 1\n   i = i + 1\n !$omp end parallel\n-  if (l) STOP 1\n-  if (thr(1).ne.14) STOP 2\n-  if (s(1).ne.1+i) STOP 3\n-  if (u(1).ne.14) STOP 4\n+  if (l) stop 1\n+  if (thr(1).ne.14) stop 2\n+  if (s(1).ne.1+i) stop 3\n+  if (u(1).ne.14) stop 4\n end"}, {"sha": "6795efa4e85029b33b655390e43e38b3434a1336", "filename": "libgomp/testsuite/libgomp.fortran/pr25219.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25219.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25219.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25219.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -12,5 +12,5 @@\n   end do\n !$omp end do\n !$omp end parallel\n-  if (k .ne. 100) STOP 1\n+  if (k .ne. 100) stop 1\n end"}, {"sha": "855a346c865a60380a2131b9a6416cc0a4a2bd77", "filename": "libgomp/testsuite/libgomp.fortran/pr27395-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,7 +8,7 @@ program pr27395_1\n   integer, dimension(n) :: sumarray\n   call foo(n,m,sumarray)\n   do i=1,n\n-    if (sumarray(i).ne.m*i) STOP 1\n+    if (sumarray(i).ne.m*i) stop 1\n   end do\n end program pr27395_1\n "}, {"sha": "55229cc4b39143e31224b6f5612b61f7bdc233ed", "filename": "libgomp/testsuite/libgomp.fortran/pr27395-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -25,6 +25,6 @@ subroutine foo(n,m)\n !$OMP END DO\n !$OMP END PARALLEL\n   do i=1,n\n-    if (sumarray(i).ne.m*i) STOP 1\n+    if (sumarray(i).ne.m*i) stop 1\n   end do\n end subroutine foo"}, {"sha": "e62a784b5a824e28f844acb30f6d99b719c04e92", "filename": "libgomp/testsuite/libgomp.fortran/pr27416-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27416-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27416-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27416-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -6,7 +6,7 @@\n !$omp parallel num_threads (4)\n   call foo (j)\n !$omp end parallel\n-  if (j.ne.6+16) STOP 1\n+  if (j.ne.6+16) stop 1\n end\n \n subroutine foo (j)"}, {"sha": "1a1b0c341443e5676084eaf84bad16685ee5eb64", "filename": "libgomp/testsuite/libgomp.fortran/pr27916-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,5 +22,5 @@ program pr27916\n     r = r .or. allocated (a)\n   end do\n  !$omp end parallel do\n-  if (r) STOP 1\n+  if (r) stop 1\n end program pr27916"}, {"sha": "c0bc6668f3667115353db532935b72667f628ca3", "filename": "libgomp/testsuite/libgomp.fortran/pr27916-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,5 +22,5 @@ program pr27916\n     r = r .or. allocated (a)\n   end do\n  !$omp end parallel do\n-  if (r) STOP 1\n+  if (r) stop 1\n end program pr27916"}, {"sha": "9a0832a59bb4c36fd818592b99270b1b2e7aa179", "filename": "libgomp/testsuite/libgomp.fortran/pr28390.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr28390.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr28390.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr28390.f?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,5 +5,5 @@ program pr28390\n !$omp parallel do lastprivate(i)\n       do i=1,100\n       end do\n-      if (i.ne.101) STOP 1\n+      if (i.ne.101) stop 1\n       end"}, {"sha": "1920ac0b4a3ec2af2c43e1b681dc2f3cd83f5cf8", "filename": "libgomp/testsuite/libgomp.fortran/pr29629.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr29629.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr29629.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr29629.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -4,7 +4,7 @@\n program pr29629\n   integer :: n\n   n = 10000\n-  if (any (func(n).ne.10000)) STOP 1\n+  if (any (func(n).ne.10000)) stop 1\n   contains\n     function func(n)\n       integer, intent(in) :: n"}, {"sha": "99852df32964970389e141c340e40ef2236f0733", "filename": "libgomp/testsuite/libgomp.fortran/pr32550.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32550.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32550.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32550.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,5 +17,5 @@\n \te = e + 1\n       end if\n !$omp end parallel\n-      if (e.ne.0) STOP 1\n+      if (e.ne.0) stop 1\n       end"}, {"sha": "ec00dd86d8b29e59fc0652672fb18cb2c596b502", "filename": "libgomp/testsuite/libgomp.fortran/pr33880.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr33880.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr33880.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr33880.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -9,7 +9,7 @@ program pr33880\n     !$omp atomic\n       j = j + 1\n   end do\n-  if (j .ne. 1000) STOP 1\n+  if (j .ne. 1000) stop 1\n contains\n   subroutine something()\n     i = 0"}, {"sha": "31aaecda180d1878e979ecc7b7d939436e301847", "filename": "libgomp/testsuite/libgomp.fortran/pr34020.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr34020.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr34020.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr34020.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -16,5 +16,5 @@ subroutine atomic_add(lhs, rhs)\n       do i = 1, 300000\n         call atomic_add(lhs, rhs)\n       enddo\n-      if (lhs .ne. 300000) STOP 1\n+      if (lhs .ne. 300000) stop 1\n       end"}, {"sha": "05d00a67ee120bf98dba8724f76f1e32b6e10abf", "filename": "libgomp/testsuite/libgomp.fortran/pr35130.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr35130.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr35130.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr35130.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -11,7 +11,7 @@ program pr35130\n     call inner(k)\n   end do\n !$omp end parallel do\n-  if (any (a.ne.42)) STOP 1\n+  if (any (a.ne.42)) stop 1\n contains\n  subroutine inner(i)\n    implicit none"}, {"sha": "fd75f554ea4a81bd6dacaebfe5f2b5aec5e1bbd1", "filename": "libgomp/testsuite/libgomp.fortran/pr42162.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr42162.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr42162.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr42162.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -49,5 +49,5 @@ program pr42162\n   !$omp parallel num_threads(3)\n   call sub3 (k, c)\n   !$omp end parallel\n-  if (k.ne.4.or.any(a.ne.2).or.any(b.ne.3).or.any(c.ne.4)) STOP 1\n+  if (k.ne.4.or.any(a.ne.2).or.any(b.ne.3).or.any(c.ne.4)) stop 1\n end"}, {"sha": "5caa4d7e86b5656f912550adafcd01eb57ea5308", "filename": "libgomp/testsuite/libgomp.fortran/pr46753.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr46753.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr46753.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr46753.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -7,11 +7,11 @@\n   do i = 2147483636, 2147483646\n     j = j + 1\n   end do\n-  if (j.ne.11) STOP 1\n+  if (j.ne.11) stop 1\n   j = 0\n !$omp parallel do reduction(+:j)\n   do i = -2147483637, -2147483647, -1\n     j = j + 1\n   end do\n-  if (j.ne.11) STOP 2\n+  if (j.ne.11) stop 2\n end"}, {"sha": "e906f45e27f84728f300ff0bb67e65d0982c2c0f", "filename": "libgomp/testsuite/libgomp.fortran/pr48894.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -19,5 +19,5 @@\n       endif\n     !$omp end parallel\n   !$omp end parallel\n-  if (err .ne. 0) STOP 1\n+  if (err .ne. 0) stop 1\n end"}, {"sha": "5a9d470b5e99e1834cbdad8bf768254518f1ff8d", "filename": "libgomp/testsuite/libgomp.fortran/pr49792-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -14,5 +14,5 @@ program pr49792\n   real(kind=8) :: b(16)\n   b(:) = a(16:1:-1)\n   call reverse (16,a)\n-  if (any (a.ne.b)) STOP 1\n+  if (any (a.ne.b)) stop 1\n end program pr49792"}, {"sha": "570901d555966ff441a4b9457145ad21f2306639", "filename": "libgomp/testsuite/libgomp.fortran/pr49792-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,6 +17,6 @@ program pr49792\n !$omp parallel workshare\n   a = b\n !$omp end parallel workshare\n-  if (size(a).ne.size(b)) STOP 1\n-  if (any (a.ne.b)) STOP 2\n+  if (size(a).ne.size(b)) stop 1\n+  if (any (a.ne.b)) stop 2\n end program pr49792"}, {"sha": "4cc8be7ec1ed58d510ac2fbde70a62549aba68e4", "filename": "libgomp/testsuite/libgomp.fortran/pr63938-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -10,5 +10,5 @@ program pr63938_1\n     x(1) = x(1) + 1\n   end do\n !$omp end parallel do\n-  if (x(1) .ne. 1000) STOP 1\n+  if (x(1) .ne. 1000) stop 1\n end program pr63938_1"}, {"sha": "d0a17ac4fea63762b3608d1ea5d915d35aced76f", "filename": "libgomp/testsuite/libgomp.fortran/pr63938-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -14,5 +14,5 @@ program pr63938_2\n     x%x = x%x + 1\n   end do\n !$omp end parallel do\n-  if (x%x .ne. 1000) STOP 1\n+  if (x%x .ne. 1000) stop 1\n end program pr63938_2"}, {"sha": "29d1c9e80bc9d6211bfe553d832b6a015ca6d65a", "filename": "libgomp/testsuite/libgomp.fortran/pr65597.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr65597.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr65597.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr65597.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,9 +13,9 @@\n     end do\n   do i = 1, 151\n     if (mod (i, 31) .eq. 1) then\n-      if (a(i) .ne. 2) STOP 1\n+      if (a(i) .ne. 2) stop 1\n     else\n-      if (a(i) .ne. 0) STOP 2\n+      if (a(i) .ne. 0) stop 2\n     end if\n   end do\n end"}, {"sha": "38cac5e45730adaae646d3fb9c5f5c5b0bf7d889", "filename": "libgomp/testsuite/libgomp.fortran/pr66199-1.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr66199-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr66199-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr66199-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -10,7 +10,7 @@\n   do d = a, b\n     u(d) = v(d) + w(d)\n   end do\n-  if (d .ne. 1025) STOP 1\n+  if (d .ne. 1025) stop 1\n   c = 17\n   d = 75\n   !$omp parallel do simd default(none) firstprivate (a, b) shared(u, v, w) &\n@@ -20,8 +20,8 @@\n     c = c + 5\n     e = c\n   end do\n-  if (d .ne. 1025 .or. c .ne. (17 + 5 * 1024)) STOP 2\n-  if (e .ne. (17 + 5 * 1024)) STOP 3\n+  if (d .ne. 1025 .or. c .ne. (17 + 5 * 1024)) stop 2\n+  if (e .ne. (17 + 5 * 1024)) stop 3\n   a1 = 0\n   a2 = 0\n   b1 = 31\n@@ -35,7 +35,7 @@\n       u(d1 * 32 + d2 + 1) = v(d1 * 32 + d2 + 1) + w(d1 * 32 + d2 + 1)\n     end do\n   end do\n-  if (d1 .ne. 32 .or. d2 .ne. 32) STOP 4\n+  if (d1 .ne. 32 .or. d2 .ne. 32) stop 4\n   d1 = 7\n   d2 = 9\n   !$omp parallel do simd default(none) firstprivate (a1, b1, a2, b2) &\n@@ -45,5 +45,5 @@\n       u(d1 * 32 + d2 + 1) = v(d1 * 32 + d2 + 1) + w(d1 * 32 + d2 + 1)\n     end do\n   end do\n-  if (d1 .ne. 32 .or. d2 .ne. 32) STOP 5\n+  if (d1 .ne. 32 .or. d2 .ne. 32) stop 5\n end"}, {"sha": "518df1024aae577d170a1673685dcc41b14fd5d9", "filename": "libgomp/testsuite/libgomp.fortran/pr71014.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr71014.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr71014.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr71014.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -16,5 +16,5 @@ program pr71014\n       end do\n     end associate\n   end do\n-  if (any(s /= t)) STOP 1\n+  if (any(s /= t)) stop 1\n end program pr71014"}, {"sha": "3f7406aeaf52dde30edf995e3db5e2c59ba6c66a", "filename": "libgomp/testsuite/libgomp.fortran/pr81304.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81304.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81304.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81304.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,5 +13,5 @@ program pr81304\n      a = min (a, c)\n      b = max (b, c)\n    end do\n-   if (any (a /= (/ 1, -4, 6 /)) .or. any (b /= (/ 16, 11, 21 /))) STOP 1\n+   if (any (a /= (/ 1, -4, 6 /)) .or. any (b /= (/ 16, 11, 21 /))) stop 1\n end"}, {"sha": "9ddc95af69ff1e82519202854f53a1647b99c099", "filename": "libgomp/testsuite/libgomp.fortran/pr81841.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81841.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81841.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81841.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,10 +17,10 @@ program pr81841\n   common /c/ e, f\n   !$omp threadprivate (/c/)\n   !$omp parallel num_threads(8)\n-  if ((e /= 32) .or. any(f /= 1.)) STOP 1\n+  if ((e /= 32) .or. any(f /= 1.)) stop 1\n   e = omp_get_thread_num ()\n   f = e + 19.\n   !$omp barrier\n-  if ((e /= omp_get_thread_num ()) .or. any(f /= e + 19.)) STOP 2\n+  if ((e /= omp_get_thread_num ()) .or. any(f /= e + 19.)) stop 2\n   !$omp end parallel\n end"}, {"sha": "8547fceb79e857778b7cbf558c0c77bc9bf98df0", "filename": "libgomp/testsuite/libgomp.fortran/pr84418-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -15,7 +15,7 @@\n     c(i) = foo (a(i), b(i))\n   end do\n   do i = 1, 1024\n-    if (c(i).ne.(2 * i)) STOP 1\n+    if (c(i).ne.(2 * i)) stop 1\n   end do\n contains\n   real function foo (x, y)"}, {"sha": "481e24e5d8a8bca0ff6b94f3909ae2399a62e5e7", "filename": "libgomp/testsuite/libgomp.fortran/pr84418-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -23,7 +23,7 @@\n     c(i) = foo (a(i), b(:,i))\n   end do\n   do i = 1, 1024\n-    if (c(i).ne.(6 * i)) STOP 1\n+    if (c(i).ne.(6 * i)) stop 1\n   end do\n contains  \n   function foo (x, y)"}, {"sha": "44410d47b53dfb25e9a983b4ac4709f2371a5519", "filename": "libgomp/testsuite/libgomp.fortran/procptr1.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fprocptr1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fprocptr1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fprocptr1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -11,25 +11,25 @@ integer function baz ()\n   integer :: i\n   ptr => foo\n !$omp parallel shared (ptr)\n-  if (ptr () /= 1) STOP 1\n+  if (ptr () /= 1) stop 1\n !$omp end parallel\n   ptr => bar\n !$omp parallel firstprivate (ptr)\n-  if (ptr () /= 2) STOP 2\n+  if (ptr () /= 2) stop 2\n !$omp end parallel\n !$omp parallel sections lastprivate (ptr)\n !$omp section\n   ptr => foo\n-  if (ptr () /= 1) STOP 3\n+  if (ptr () /= 1) stop 3\n !$omp section\n   ptr => bar\n-  if (ptr () /= 2) STOP 4\n+  if (ptr () /= 2) stop 4\n !$omp section\n   ptr => baz\n-  if (ptr () /= 3) STOP 5\n+  if (ptr () /= 3) stop 5\n !$omp end parallel sections\n-  if (ptr () /= 3) STOP 6\n-  if (.not.associated (ptr, baz)) STOP 7\n+  if (ptr () /= 3) stop 6\n+  if (.not.associated (ptr, baz)) stop 7\n end\n integer function foo ()\n   foo = 1"}, {"sha": "2546d09d11e491afda54bcc2bf61f49d4fc2b207", "filename": "libgomp/testsuite/libgomp.fortran/recursion1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frecursion1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frecursion1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frecursion1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -14,7 +14,7 @@\n   call sub(i)\n end do\n !$omp end parallel do\n-if (s/=55) STOP 1\n+if (s/=55) stop 1\n \n contains\n "}, {"sha": "622a7059d6c650ec4ec0c5ddda25cccb6979ce61", "filename": "libgomp/testsuite/libgomp.fortran/reduction1.f90", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -55,14 +55,14 @@\n     ca = cmplx (-1, 0)\n   end if\n !$omp end parallel\n-  if (v) STOP 1\n+  if (v) stop 1\n   if (cnt .eq. 3) then\n-    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) STOP 2\n-    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) STOP 3\n-    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) STOP 4\n-    if (c .ne. cmplx (11.5, -5)) STOP 5\n-    if (ca(1) .ne. cmplx (12, 2)) STOP 6\n-    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) STOP 7\n+    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) stop 2\n+    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) stop 3\n+    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) stop 4\n+    if (c .ne. cmplx (11.5, -5)) stop 5\n+    if (ca(1) .ne. cmplx (12, 2)) stop 6\n+    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) stop 7\n   end if\n \n   i = 1\n@@ -113,14 +113,14 @@\n     ca = cmplx (-1, 0)\n   end if\n !$omp end parallel\n-  if (v) STOP 8\n+  if (v) stop 8\n   if (cnt .eq. 3) then\n-    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) STOP 9\n-    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) STOP 10\n-    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) STOP 11\n-    if (c .ne. cmplx (11.5, -5)) STOP 12\n-    if (ca(1) .ne. cmplx (12, 2)) STOP 13\n-    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) STOP 14\n+    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) stop 9\n+    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) stop 10\n+    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) stop 11\n+    if (c .ne. cmplx (11.5, -5)) stop 12\n+    if (ca(1) .ne. cmplx (12, 2)) stop 13\n+    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) stop 14\n   end if\n \n   i = 1\n@@ -169,13 +169,13 @@\n     ca = cmplx (-1, 0)\n   end if\n !$omp end parallel\n-  if (v) STOP 15\n+  if (v) stop 15\n   if (cnt .eq. 3) then\n-    if (i .ne. 6 .or. any (ia .ne. (/4, 4, 8, -16, -16, -8/))) STOP 16\n-    if (r .ne. 8 .or. any (ra .ne. (/4., -2., -1., -1./))) STOP 17\n-    if (d .ne. -40 .or. any (da .ne. (/32., -64., -64., 64., -32./))) STOP 18\n-    if (c .ne. cmplx (0, 15)) STOP 19\n-    if (ca(1) .ne. cmplx (0, 10)) STOP 20\n-    if (ca(2) .ne. cmplx (-2, 0) .or. ca(2) .ne. ca(3)) STOP 21\n+    if (i .ne. 6 .or. any (ia .ne. (/4, 4, 8, -16, -16, -8/))) stop 16\n+    if (r .ne. 8 .or. any (ra .ne. (/4., -2., -1., -1./))) stop 17\n+    if (d .ne. -40 .or. any (da .ne. (/32., -64., -64., 64., -32./))) stop 18\n+    if (c .ne. cmplx (0, 15)) stop 19\n+    if (ca(1) .ne. cmplx (0, 10)) stop 20\n+    if (ca(2) .ne. cmplx (-2, 0) .or. ca(2) .ne. ca(3)) stop 21\n   end if\n end"}, {"sha": "75c2e0cf239c67dc81b243bbe1f6ed4775c3e3b7", "filename": "libgomp/testsuite/libgomp.fortran/reduction2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -31,10 +31,10 @@\n     ma(1) = .true.\n   end if\n !$omp end parallel\n-  if (v) STOP 1\n+  if (v) stop 1\n   if (cnt .eq. 3) then\n-    if (l .or. any (la .neqv. (/.true., .false., .false., .false./))) STOP 2\n-    if (.not. m .or. any (ma .neqv. (/.true., .true., .false., .true./))) STOP 3\n+    if (l .or. any (la .neqv. (/.true., .false., .false., .false./))) stop 2\n+    if (.not. m .or. any (ma .neqv. (/.true., .true., .false., .true./))) stop 3\n   end if\n \n   l = .true.\n@@ -64,10 +64,10 @@\n     ma(1) = .true.\n   end if\n !$omp end parallel\n-  if (v) STOP 4\n+  if (v) stop 4\n   if (cnt .eq. 3) then\n-    if (.not. l .or. any (la .neqv. (/.true., .false., .true., .false./))) STOP 5\n-    if (.not. m .or. any (ma .neqv. (/.false., .true., .false., .true./))) STOP 6\n+    if (.not. l .or. any (la .neqv. (/.true., .false., .true., .false./))) stop 5\n+    if (.not. m .or. any (ma .neqv. (/.false., .true., .false., .true./))) stop 6\n   end if\n \n end"}, {"sha": "e19bac6f57e31aa05ae87e1509e8472f12341f59", "filename": "libgomp/testsuite/libgomp.fortran/reduction3.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -46,11 +46,11 @@\n     da = -1\n   end if\n !$omp end parallel\n-  if (v) STOP 1\n+  if (v) stop 1\n   if (cnt .eq. 3) then\n-    if (i .ne. 4 .or. any (ia .ne. (/7, 2, 2, 5, 5, 5/))) STOP 2\n-    if (r .ne. 5 .or. any (ra .ne. (/6.5, 6.5, 4., 4./))) STOP 3\n-    if (d .ne. 8.5 .or. any (da .ne. (/6.5, 8.5, 8.5, 8.5, 6.5/))) STOP 4\n+    if (i .ne. 4 .or. any (ia .ne. (/7, 2, 2, 5, 5, 5/))) stop 2\n+    if (r .ne. 5 .or. any (ra .ne. (/6.5, 6.5, 4., 4./))) stop 3\n+    if (d .ne. 8.5 .or. any (da .ne. (/6.5, 8.5, 8.5, 8.5, 6.5/))) stop 4\n   end if\n \n   i = 1\n@@ -94,10 +94,10 @@\n     da(1:4) = 6\n   end if\n !$omp end parallel\n-  if (v) STOP 5\n+  if (v) stop 5\n   if (cnt .eq. 3) then\n-    if (i .ne. 1 .or. any (ia .ne. (/1, 1, -2, -2, -2, 1/))) STOP 6\n-    if (r .ne. -1 .or. any (ra .ne. (/4., -1.5, -8.5, -1.5/))) STOP 7\n-    if (d .ne. -2.5 .or. any (da .ne. (/2.5, 2.5, 2.5, 6., 6.5/))) STOP 8\n+    if (i .ne. 1 .or. any (ia .ne. (/1, 1, -2, -2, -2, 1/))) stop 6\n+    if (r .ne. -1 .or. any (ra .ne. (/4., -1.5, -8.5, -1.5/))) stop 7\n+    if (d .ne. -2.5 .or. any (da .ne. (/2.5, 2.5, 2.5, 6., 6.5/))) stop 8\n   end if\n end"}, {"sha": "2de903c05a134017ee9991abf0e87bf21a6e6c9d", "filename": "libgomp/testsuite/libgomp.fortran/reduction4.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -44,13 +44,13 @@\n     ka(6:6) = int(Z'777')\n   end if\n !$omp end parallel\n-  if (v) STOP 1\n+  if (v) stop 1\n   if (cnt .eq. 3) then\n     ta = (/int(Z'f0ff03'), int(Z'f0af03'), int(Z'f0af01'), int(Z'f0af01'), int(Z'f0af01'), int(Z'f0ff0f')/)\n-    if (i .ne. int(Z'777f07') .or. any (ia .ne. ta)) STOP 2\n+    if (i .ne. int(Z'777f07') .or. any (ia .ne. ta)) stop 2\n     ta = (/int(Z'f5a01'), int(Z'f5a09'), int(Z'f5a09'), int(Z'f5a08'), int(Z'f5f08'), int(Z'f5f00')/)\n-    if (j .ne. int(Z'fff80') .or. any (ja .ne. ta)) STOP 3\n+    if (j .ne. int(Z'fff80') .or. any (ja .ne. ta)) stop 3\n     ta = (/int(Z'5a5a5'), int(Z'5a5a5'), int(Z'aaba2'), int(Z'aaba2'), int(Z'5aaaa'), int(Z'5addd')/)\n-    if (k .ne. int(Z'54a8f') .or. any (ka .ne. ta)) STOP 4\n+    if (k .ne. int(Z'54a8f') .or. any (ka .ne. ta)) stop 4\n   end if\n end"}, {"sha": "e2a17a93a1fd47809fec4bc9bc2e6f5bf95a8492", "filename": "libgomp/testsuite/libgomp.fortran/reduction5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -18,7 +18,7 @@ subroutine test1\n !$omp section\n     n = bitwise_or (n, int(Z'2000'))\n !$omp end parallel sections\n-    if (n .ne. int(Z'243f')) STOP 1\n+    if (n .ne. int(Z'243f')) stop 1\n   end subroutine\n   subroutine test2\n     use reduction5, min => max, max => min\n@@ -36,7 +36,7 @@ subroutine test2\n     if (m .gt. 3) m = 3\n     if (n .lt. -1) n = -1\n !$omp end parallel sections\n-    if (m .ne. 3 .or. n .ne. 15) STOP 2\n+    if (m .ne. 3 .or. n .ne. 15) stop 2\n   end subroutine test2\n end\n "}, {"sha": "24d849cc60ff1961a57653bcd6a9201f3f49d6ff", "filename": "libgomp/testsuite/libgomp.fortran/reduction6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,7 +8,7 @@\n   call foo (a (2:4, 3:5), nthreads)\n   if (nthreads .eq. 3) then\n     write (c, '(36i1)') a\n-    if (c .ne. '999999999999966699966699966699999999') STOP 1\n+    if (c .ne. '999999999999966699966699966699999999') stop 1\n   end if\n contains\n   subroutine foo (b, nthreads)\n@@ -27,6 +27,6 @@ subroutine foo (b, nthreads)\n !$omp end master\n     b = 2\n !$omp end parallel\n-    if (err .gt. 0) STOP 2\n+    if (err .gt. 0) stop 2\n   end subroutine foo\n end"}, {"sha": "1d52c2fcdaa51dfa2e79c4942d5891ae2f34fd81", "filename": "libgomp/testsuite/libgomp.fortran/reference1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,10 +8,10 @@\n   k = 0\n   d = 24.5\n   call test (i, j, k, d)\n-  if (i .ne. 38) STOP 1\n-  if (iand (k, 255) .ne. 0) STOP 2\n+  if (i .ne. 38) stop 1\n+  if (iand (k, 255) .ne. 0) stop 2\n   if (iand (k, 65280) .eq. 0) then\n-    if (k .ne. 65536 * 4) STOP 3\n+    if (k .ne. 65536 * 4) stop 3\n   end if\n contains\n   subroutine test (i, j, k, d)"}, {"sha": "6fcd05dca4b4211986bd6c2952ca8d4e538ba2ed", "filename": "libgomp/testsuite/libgomp.fortran/reference2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -11,7 +11,7 @@ subroutine foo (a)\n     a = 15\n     l = bar (a)\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine\n   function bar (a)\n     real, dimension (5) :: a"}, {"sha": "604e14e2e84df35a8f2013f89e11008ec34888c1", "filename": "libgomp/testsuite/libgomp.fortran/retval1.f90", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -14,7 +14,7 @@ function f1 ()\n   l = l .or. (omp_get_thread_num () .eq. 0 .and. f1 .ne. 8.5)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. f1 .ne. 14.5)\n !$omp end parallel\n-  if (l) STOP 1\n+  if (l) stop 1\n   f1 = -2.5\n end function f1\n function f2 ()\n@@ -32,7 +32,7 @@ function f2 ()\n   l = l .or. (omp_get_thread_num () .eq. 0 .and. e2 .ne. 8.5)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. e2 .ne. 14.5)\n !$omp end parallel\n-  if (l) STOP 2\n+  if (l) stop 2\n   e2 = 7.5\n end function f2\n function f3 ()\n@@ -53,7 +53,7 @@ function f3 ()\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. e3 .ne. 14.5)\n   l = l .or. f3 .ne. e3 - 4.5\n !$omp end parallel\n-  if (l) STOP 3\n+  if (l) stop 3\n   e3 = 0.5\n end function f3\n function f4 () result (r4)\n@@ -74,7 +74,7 @@ function f4 () result (r4)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. s4 .ne. 14.5)\n   l = l .or. r4 .ne. s4 - 4.5\n !$omp end parallel\n-  if (l) STOP 4\n+  if (l) stop 4\n   s4 = -0.5\n end function f4\n function f5 (is_f5)\n@@ -101,20 +101,20 @@ function f5 (is_f5)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. e5 .ne. 14)\n   l = l .or. f5 .ne. e5 - 4.5\n !$omp end parallel\n-  if (l) STOP 5\n+  if (l) stop 5\n   if (is_f5) f5 = -2.5\n   if (.not. is_f5) e5 = 8\n end function f5\n \n   real :: f1, f2, e2, f3, e3, f4, e4, f5\n   integer :: e5\n-  if (f1 () .ne. -2.5) STOP 6\n-  if (f2 () .ne. 7.5) STOP 7\n-  if (e2 () .ne. 7.5) STOP 8\n-  if (f3 () .ne. 0.5) STOP 9\n-  if (e3 () .ne. 0.5) STOP 10\n-  if (f4 () .ne. -0.5) STOP 11\n-  if (e4 () .ne. -0.5) STOP 12\n-  if (f5 (.true.) .ne. -2.5) STOP 13\n-  if (e5 (.false.) .ne. 8) STOP 14\n+  if (f1 () .ne. -2.5) stop 6\n+  if (f2 () .ne. 7.5) stop 7\n+  if (e2 () .ne. 7.5) stop 8\n+  if (f3 () .ne. 0.5) stop 9\n+  if (e3 () .ne. 0.5) stop 10\n+  if (f4 () .ne. -0.5) stop 11\n+  if (e4 () .ne. -0.5) stop 12\n+  if (f5 (.true.) .ne. -2.5) stop 13\n+  if (e5 (.false.) .ne. 8) stop 14\n end"}, {"sha": "2851e056eb816dac3aad729fe8ec66f7989eeb0e", "filename": "libgomp/testsuite/libgomp.fortran/retval2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -17,11 +17,11 @@ subroutine sub1\n     l = l .or. (omp_get_thread_num () .eq. 0 .and. f1 .ne. 8.5)\n     l = l .or. (omp_get_thread_num () .eq. 1 .and. f1 .ne. 14.5)\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n     f1 = -2.5\n   end subroutine sub1\n end function f1\n \n   real :: f1\n-  if (f1 () .ne. -2.5) STOP 2\n+  if (f1 () .ne. -2.5) stop 2\n end"}, {"sha": "48c21aae429fb12471bb54ad17553b6a4bd59b19", "filename": "libgomp/testsuite/libgomp.fortran/sharing1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -25,5 +25,5 @@\n !$omp barrier\n   if (j .ne. 25 .or. i .ne. (k * 10 + 14)) l = .true.\n !$omp end parallel\n-  if (l .or. j .ne. 25) STOP 1\n+  if (l .or. j .ne. 25) stop 1\n end"}, {"sha": "3f76475f68e203bd34cfb57ccbf90815d3207ae3", "filename": "libgomp/testsuite/libgomp.fortran/sharing2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -27,6 +27,6 @@\n !$omp barrier\n   if (j .ne. 25 .or. i .ne. (k * 10 + 14)) l = .true.\n !$omp end parallel\n-  if (l) STOP 1\n-  if (j .ne. 25) STOP 2\n+  if (l) stop 1\n+  if (j .ne. 25) stop 2\n end"}, {"sha": "353f16d04bc6583eac60a695e539c23c64e4b915", "filename": "libgomp/testsuite/libgomp.fortran/simd1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -30,6 +30,6 @@\n     s = s + l\n     t%x = t%x + l\n   end do\n-  if (r.ne.2700.or.j.ne.70.or.k.ne.80.or.s.ne.2700) STOP 1\n-  if (t%x.ne.2700) STOP 2\n+  if (r.ne.2700.or.j.ne.70.or.k.ne.80.or.s.ne.2700) stop 1\n+  if (t%x.ne.2700) stop 2\n end"}, {"sha": "415ad9c965d2938b58f694263b8fc84d14664b6d", "filename": "libgomp/testsuite/libgomp.fortran/simd2.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,42 +13,42 @@\n   end do\n   s = foo (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 1\n+    if (a(i).ne.((i - 513) * b(i))) stop 1\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 2\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 2\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 3\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 3\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 4\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 4\n   k = 4\n   m = 2\n   t = 1\n   s = bar (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 5\n+    if (a(i).ne.((i - 513) * b(i))) stop 5\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 6\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 6\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 7\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 7\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 8\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 8\n   k = 4\n   m = 2\n   t = 1\n   s = baz (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 9\n+    if (a(i).ne.((i - 513) * b(i))) stop 9\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 10\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 10\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 11\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 11\n     end if\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 12\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 12\n contains\n   function foo (p)\n     integer :: p(1024), u, v, i, s, foo\n@@ -62,8 +62,8 @@ function foo (p)\n       s = s + p(i) + k\n     end do\n     !$omp end simd\n-    if (i.ne.1025) STOP 13\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 14\n+    if (i.ne.1025) stop 13\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 14\n     foo = s\n   end function foo\n   function bar (p)\n@@ -78,8 +78,8 @@ function bar (p)\n       s = s + p(i) + k\n     end do\n     !$omp end simd\n-    if (i.ne.1025) STOP 15\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 16\n+    if (i.ne.1025) stop 15\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 16\n     bar = s\n   end function bar\n   function baz (p)\n@@ -94,8 +94,8 @@ function baz (p)\n       v = p(i) + k\n       s = s + p(i) + k\n     end do\n-    if (i.ne.1025) STOP 17\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 18\n+    if (i.ne.1025) stop 17\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 18\n     baz = s\n   end function baz\n end"}, {"sha": "29b98e1895a2b6c6a57195e82335e7b5d47514a5", "filename": "libgomp/testsuite/libgomp.fortran/simd3.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,42 +13,42 @@\n   end do\n   s = foo (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 1\n+    if (a(i).ne.((i - 513) * b(i))) stop 1\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 2\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 2\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 3\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 3\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 4\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 4\n   k = 4\n   m = 2\n   t = 1\n   s = bar (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 5\n+    if (a(i).ne.((i - 513) * b(i))) stop 5\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 6\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 6\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 7\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 7\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 8\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 8\n   k = 4\n   m = 2\n   t = 1\n   s = baz (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 9\n+    if (a(i).ne.((i - 513) * b(i))) stop 9\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 10\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 10\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 11\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 11\n     end if\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 12\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 12\n contains\n   function foo (p)\n     integer :: p(1024), u, v, i, s, foo\n@@ -65,8 +65,8 @@ function foo (p)\n     end do\n     !$omp end do simd\n     !$omp end parallel\n-    if (i.ne.1025) STOP 13\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 14\n+    if (i.ne.1025) stop 13\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 14\n     foo = s\n   end function foo\n   function bar (p)\n@@ -84,8 +84,8 @@ function bar (p)\n     end do\n     !$omp end do simd\n     !$omp endparallel\n-    if (i.ne.1025) STOP 15\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 16\n+    if (i.ne.1025) stop 15\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 16\n     bar = s\n   end function bar\n   function baz (p)\n@@ -102,8 +102,8 @@ function baz (p)\n       s = s + p(i) + k\n     end do\n     !$omp end parallel\n-    if (i.ne.1025) STOP 17\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 18\n+    if (i.ne.1025) stop 17\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 18\n     baz = s\n   end function baz\n end"}, {"sha": "a81bc5e3472d7aec9b3c0835df31df3c8af3a85a", "filename": "libgomp/testsuite/libgomp.fortran/simd4.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,42 +13,42 @@\n   end do\n   s = foo (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 1\n+    if (a(i).ne.((i - 513) * b(i))) stop 1\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 2\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 2\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 3\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 3\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 4\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 4\n   k = 4\n   m = 2\n   t = 1\n   s = bar (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 5\n+    if (a(i).ne.((i - 513) * b(i))) stop 5\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 6\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 6\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 7\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 7\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 8\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 8\n   k = 4\n   m = 2\n   t = 1\n   s = baz (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) STOP 9\n+    if (a(i).ne.((i - 513) * b(i))) stop 9\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 10\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) stop 10\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) STOP 11\n+      if (b(i).ne.(modulo (i - 52, 39))) stop 11\n     end if\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 12\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) stop 12\n contains\n   function foo (p)\n     integer :: p(1024), u, v, i, s, foo\n@@ -63,8 +63,8 @@ function foo (p)\n       s = s + p(i) + k\n     end do\n     !$omp end parallel do simd\n-    if (i.ne.1025) STOP 13\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 14\n+    if (i.ne.1025) stop 13\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 14\n     foo = s\n   end function foo\n   function bar (p)\n@@ -80,8 +80,8 @@ function bar (p)\n       s = s + p(i) + k\n     end do\n     !$omp endparalleldosimd\n-    if (i.ne.1025) STOP 15\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 16\n+    if (i.ne.1025) stop 15\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 16\n     bar = s\n   end function bar\n   function baz (p)\n@@ -96,8 +96,8 @@ function baz (p)\n       v = p(i) + k\n       s = s + p(i) + k\n     end do\n-    if (i.ne.1025) STOP 17\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 18\n+    if (i.ne.1025) stop 17\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) stop 18\n     baz = s\n   end function baz\n end"}, {"sha": "099fec55cb94d622062cead38d4c771ca22cca52", "filename": "libgomp/testsuite/libgomp.fortran/simd5.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -12,7 +12,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 1\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 1\n   i = 4\n   j = 4\n   b = 7\n@@ -21,7 +21,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 2\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 2\n   i = 4\n   j = 4\n   b = 7\n@@ -30,7 +30,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 3\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 3\n   i = 4\n   j = 4\n   b = 7\n@@ -39,7 +39,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 4\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 4\n   i = 4\n   j = 4\n   b = 7\n@@ -50,7 +50,7 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 5\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 5\n   i = 4\n   j = 4\n   b = 7\n@@ -61,7 +61,7 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 6\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 6\n   i = 4\n   j = 4\n   b = 7\n@@ -70,7 +70,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 7\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 7\n   i = 4\n   j = 4\n   b = 7\n@@ -79,7 +79,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 8\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 8\n   i = 4\n   j = 4\n   b = 7\n@@ -88,7 +88,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 9\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 9\n   i = 4\n   j = 4\n   b = 7\n@@ -97,7 +97,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 10\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 10\n   i = 4\n   j = 4\n   b = 7\n@@ -108,7 +108,7 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 11\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 11\n   i = 4\n   j = 4\n   b = 7\n@@ -120,5 +120,5 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 12\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 12\n end"}, {"sha": "445ac4de4c4156086e96b47d6742013d14f15303", "filename": "libgomp/testsuite/libgomp.fortran/simd6.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -18,7 +18,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 1\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 1\n   i = 4\n   j = 4\n   b = 7\n@@ -27,7 +27,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 2\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 2\n   i = 4\n   j = 4\n   b = 7\n@@ -36,7 +36,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 3\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 3\n   i = 4\n   j = 4\n   b = 7\n@@ -45,7 +45,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 4\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 4\n   i = 4\n   j = 4\n   b = 7\n@@ -56,7 +56,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 5\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 5\n   i = 4\n   j = 4\n   b = 7\n@@ -67,7 +67,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 6\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 6\n   i = 4\n   j = 4\n   b = 7\n@@ -76,7 +76,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 7\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 7\n   i = 4\n   j = 4\n   b = 7\n@@ -85,7 +85,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 8\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 8\n   i = 4\n   j = 4\n   b = 7\n@@ -94,7 +94,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 9\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) stop 9\n   i = 4\n   j = 4\n   b = 7\n@@ -103,7 +103,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 10\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) stop 10\n   i = 4\n   j = 4\n   b = 7\n@@ -114,7 +114,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 11\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 11\n   i = 4\n   j = 4\n   b = 7\n@@ -126,7 +126,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 12\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) stop 12\n end\n subroutine foo (b, i, j, x)\n   integer, intent (inout) :: b"}, {"sha": "28b2f251c559b2670f59427d103ce2dab7eb6ad0", "filename": "libgomp/testsuite/libgomp.fortran/simd7.f90", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -30,20 +30,20 @@ subroutine foo (d, e, f, g, m, n)\n     b = b + 1; c = c + 2; d = d + 3; e = e + 4; f = f + 5; g = g + 6\n     h = h + 7; k = k + 8; m = m + 9\n   end do\n-  if (l .or. i /= 64) STOP 1\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 2\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 3\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 4\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 5\n-  if (m /= 15 + 9 * 64) STOP 6\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 7\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 8\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 9\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 10\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 11\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 12\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 13\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 14\n+  if (l .or. i /= 64) stop 1\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) stop 2\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) stop 3\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) stop 4\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) stop 5\n+  if (m /= 15 + 9 * 64) stop 6\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) stop 7\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) stop 8\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) stop 9\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) stop 10\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) stop 11\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) stop 12\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) stop 13\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) stop 14\n   i = 4; j = 4; b = 7; c = 8; d = 9; e = 10; f = 11; g = 12; h = 13; k = 14; m = 15\n !$omp simd linear(b)linear(c:2)linear(d:3)linear(e:4)linear(f:5)linear(g:6) &\n !$omp & linear(h:7)linear(k:8)linear(m:9) reduction(.or.:l) collapse(2)\n@@ -68,20 +68,20 @@ subroutine foo (d, e, f, g, m, n)\n       h = h + 7; k = k + 8; m = m + 9\n     end do\n   end do\n-  if (l .or. i /= 8 .or. j /= 8) STOP 15\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 16\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 17\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 18\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 19\n-  if (m /= 15 + 9 * 64) STOP 20\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 21\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 22\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 23\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 24\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 25\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 26\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 27\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 28\n+  if (l .or. i /= 8 .or. j /= 8) stop 15\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) stop 16\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) stop 17\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) stop 18\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) stop 19\n+  if (m /= 15 + 9 * 64) stop 20\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) stop 21\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) stop 22\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) stop 23\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) stop 24\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) stop 25\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) stop 26\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) stop 27\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) stop 28\n   i = 4; j = 4; b = 7; c = 8; d = 9; e = 10; f = 11; g = 12; h = 13; k = 14; m = 15\n !$omp parallel do simd linear(b)linear(c:2)linear(d:3)linear(e:4)linear(f:5) &\n !$omp & linear(g:6)linear(h:7)linear(k:8)linear(m:9) reduction(.or.:l)\n@@ -104,20 +104,20 @@ subroutine foo (d, e, f, g, m, n)\n     b = b + 1; c = c + 2; d = d + 3; e = e + 4; f = f + 5; g = g + 6\n     h = h + 7; k = k + 8; m = m + 9\n   end do\n-  if (l .or. i /= 64) STOP 29\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 30\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 31\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 32\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 33\n-  if (m /= 15 + 9 * 64) STOP 34\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 35\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 36\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 37\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 38\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 39\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 40\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 41\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 42\n+  if (l .or. i /= 64) stop 29\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) stop 30\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) stop 31\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) stop 32\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) stop 33\n+  if (m /= 15 + 9 * 64) stop 34\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) stop 35\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) stop 36\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) stop 37\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) stop 38\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) stop 39\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) stop 40\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) stop 41\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) stop 42\n   i = 4; j = 4; b = 7; c = 8; d = 9; e = 10; f = 11; g = 12; h = 13; k = 14; m = 15\n !$omp parallel do simd linear(b)linear(c:2)linear(d:3)linear(e:4)linear(f:5) &\n !$omp & linear(g:6)linear(h:7)linear(k:8)linear(m:9) reduction(.or.:l) collapse(2)\n@@ -142,20 +142,20 @@ subroutine foo (d, e, f, g, m, n)\n       h = h + 7; k = k + 8; m = m + 9\n     end do\n   end do\n-  if (l .or. i /= 8 .or. j /= 8) STOP 43\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 44\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 45\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 46\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 47\n-  if (m /= 15 + 9 * 64) STOP 48\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 49\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 50\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 51\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 52\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 53\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 54\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 55\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 56\n+  if (l .or. i /= 8 .or. j /= 8) stop 43\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) stop 44\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) stop 45\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) stop 46\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) stop 47\n+  if (m /= 15 + 9 * 64) stop 48\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) stop 49\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) stop 50\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) stop 51\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) stop 52\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) stop 53\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) stop 54\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) stop 55\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) stop 56\n end subroutine\n \n   interface"}, {"sha": "da0ff744f1751c6e839921238766a57f182962c4", "filename": "libgomp/testsuite/libgomp.fortran/stack.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstack.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstack.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstack.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -11,7 +11,7 @@ program stack\n !$omp end parallel\n   ! Check that the two threads are not sharing a location for\n   ! the array x in foo()\n-  if (ilocs(1) .eq. ilocs(2)) STOP 1\n+  if (ilocs(1) .eq. ilocs(2)) stop 1\n end program stack\n \n integer function foo ()"}, {"sha": "e0dc0c8eef9bc446e1c6c330b993b544b4a5f9cd", "filename": "libgomp/testsuite/libgomp.fortran/strassen.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstrassen.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstrassen.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstrassen.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -19,7 +19,7 @@ program strassen_matmul\n   call strassen (A, B, D, N)\n   end = omp_get_wtime ()\n   write(*,'(a, f10.6)') ' Time for Strassen    = ', end - start\n-  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) STOP 1\n+  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) stop 1\n   D = 0\n   start = omp_get_wtime ()\n !$omp parallel\n@@ -29,7 +29,7 @@ program strassen_matmul\n !$omp end parallel\n   end = omp_get_wtime ()\n   write(*,'(a, f10.6)') ' Time for Strassen MP = ', end - start\n-  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) STOP 2\n+  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) stop 2\n \n contains\n "}, {"sha": "da334dc419e4458b40c66a5ede53140a87ad523a", "filename": "libgomp/testsuite/libgomp.fortran/tabs1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -1,4 +1,4 @@\n-\tif (b().ne.2) STOP 1\n+\tif (b().ne.2) stop 1\n contains\n subroutine a\n !$omp parallel"}, {"sha": "a018dd53f6000537fdffbdd2c06a9f16a35b3333", "filename": "libgomp/testsuite/libgomp.fortran/tabs2.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs2.f?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -1,5 +1,5 @@\n ! { dg-options \"-ffixed-form\" }\n-      if (b().ne.2) STOP 1\n+      if (b().ne.2) stop 1\n       contains\n       subroutine a\n !$omp parallel"}, {"sha": "36b12591344b9319003bcb71cb48f0118380339f", "filename": "libgomp/testsuite/libgomp.fortran/target1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,9 +13,9 @@ subroutine foo (p, v, w, n)\n         q(i) = p(i)\n       end do\n     !$omp end target\n-    if (any (p /= q)) STOP 1\n+    if (any (p /= q)) stop 1\n     do i = 1, n\n-      if (p(i) /= i * iand (i, 63)) STOP 2\n+      if (p(i) /= i * iand (i, 63)) stop 2\n     end do\n     !$omp target data if (n > 256) map (to: v(1:n), w) map (from: p, q)\n     !$omp target if (n > 256)\n@@ -38,7 +38,7 @@ subroutine foo (p, v, w, n)\n       end do\n     !$omp end target\n     !$omp end target data\n-    if (any (p + 2.0 /= q)) STOP 3\n+    if (any (p + 2.0 /= q)) stop 3\n   end subroutine\n end module target1\n   use target1, only : foo\n@@ -52,7 +52,7 @@ end module target1\n   end do\n   call foo (p, v, w, n)\n   do i = 1, n\n-    if (p(i) /= i * iand (i, 63) + 3) STOP 4\n+    if (p(i) /= i * iand (i, 63) + 3) stop 4\n   end do\n   deallocate (p, v, w)\n end"}, {"sha": "11b8af737e37112ea70de74dcbf2a0cb3a343a6b", "filename": "libgomp/testsuite/libgomp.fortran/target2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -29,7 +29,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (j /= 16)\n       r = r .or. (any (k /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) STOP 1\n+    if (r) stop 1\n     !$omp target map (to: b(3:n), c(5:n+4), d(2:n+1), e(1:,:2), g(3:n), i(3:n), k(4:n), n) map (from: r)\n       r = (any (b /= 8)) .or. (lbound (b, 1) /= 3) .or. (ubound (b, 1) /= n)\n       r = r .or. (any (c /= 9)) .or. (lbound (c, 1) /= 5) .or. (ubound (c, 1) /= n + 4)\n@@ -40,7 +40,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (any (i /= 15)) .or. (lbound (i, 1) /= 3) .or. (ubound (i, 1) /= n)\n       r = r .or. (any (k /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) STOP 2\n+    if (r) stop 2\n     !$omp target map (to: b(5:n-2), c(7:n), d(4:n-2), e(1:,2:), g(5:n-3), i(6:n-4), k(5:n-5), n) map (from: r)\n       r = (any (b(5:n-2) /= 8)) .or. (lbound (b, 1) /= 3) .or. (ubound (b, 1) /= n)\n       r = r .or. (any (c(7:n) /= 9)) .or. (lbound (c, 1) /= 5) .or. (ubound (c, 1) /= n + 4)\n@@ -62,7 +62,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (any (i(6:n-4) /= 15)) .or. (lbound (i, 1) /= 3) .or. (ubound (i, 1) /= n)\n       r = r .or. (any (k(5:n-5) /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) STOP 3\n+    if (r) stop 3\n     !$omp target map (to: d(2:n+1), n)\n       r = a /= 7\n       r = r .or. (any (b /= 8)) .or. (lbound (b, 1) /= 3) .or. (ubound (b, 1) /= n)\n@@ -77,7 +77,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (j /= 16)\n       r = r .or. (any (k /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) STOP 4\n+    if (r) stop 4\n   end subroutine foo\n end module target2\n   use target2, only : foo"}, {"sha": "d9b9ccf63bed0ff6ac9dc1c8ddd2795298f9983e", "filename": "libgomp/testsuite/libgomp.fortran/target3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,12 +13,12 @@ subroutine foo (f, g)\n       r = associated (f) .or. associated (g)\n       r = r .or. associated (j) .or. associated (k)\n     !$omp end target\n-    if (r) STOP 1\n+    if (r) stop 1\n     !$omp target\n       r = associated (f) .or. associated (g)\n       r = r .or. associated (j) .or. associated (k)\n     !$omp end target\n-    if (r) STOP 2\n+    if (r) stop 2\n   end subroutine foo\n end module target3\n   use target3, only : foo"}, {"sha": "5dac76cffd15e4fda8ce1550ad83aab5208773eb", "filename": "libgomp/testsuite/libgomp.fortran/target4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -44,5 +44,5 @@ end module target4\n &   30800.0d0, 33000.0d0, 23256.0d0, 25840.0d0, 28424.0d0, 31008.0d0, 33592.0d0, 36176.0d0, &\n &   38760.0d0, 41344.0d0, 30000.0d0, 33000.0d0, 36000.0d0, 39000.0d0, 42000.0d0, 45000.0d0, &\n &   48000.0d0, 51000.0d0 /), (/ 8, 9 /))\n-  if (any (a /= res)) STOP 1\n+  if (any (a /= res)) stop 1\n end"}, {"sha": "9d4662a18eb68131b13f6216eb81512836794112", "filename": "libgomp/testsuite/libgomp.fortran/target5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -3,7 +3,7 @@\n   integer :: r\n   r = 0\n   call foo (r)\n-  if (r /= 11) STOP 1\n+  if (r /= 11) stop 1\n contains\n   subroutine foo (r)\n     integer :: i, r"}, {"sha": "c4105d730825e7cdf6adf65b0ec6c516969eac04", "filename": "libgomp/testsuite/libgomp.fortran/target6.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -16,7 +16,7 @@ subroutine foo (p, v, w, n)\n     !$omp end target\n     !$omp target update if (n > 256) from (p)\n     do i = 1, n\n-      if (p(i) /= i * iand (i, 63)) STOP 1\n+      if (p(i) /= i * iand (i, 63)) stop 1\n       v(i) = v(i) + 1\n     end do\n     !$omp target update if (n > 256) to (v(1:n))\n@@ -28,8 +28,8 @@ subroutine foo (p, v, w, n)\n     !$omp end target\n     !$omp end target data\n     do i = 1, n\n-      if (q(i) /= (v(i) - 1) * w(i)) STOP 2\n-      if (p(i) /= q(i) + w(i)) STOP 3\n+      if (q(i) /= (v(i) - 1) * w(i)) stop 2\n+      if (p(i) /= q(i) + w(i)) stop 3\n     end do\n   end subroutine\n end module target6\n@@ -44,7 +44,7 @@ end module target6\n   end do\n   call foo (p, v, w, n)\n   do i = 1, n\n-    if (p(i) /= (i + 1) * iand (i, 63)) STOP 4\n+    if (p(i) /= (i + 1) * iand (i, 63)) stop 4\n   end do\n   deallocate (p, v, w)\n end"}, {"sha": "73a7485a63830c8753b62207c090f878452e6de8", "filename": "libgomp/testsuite/libgomp.fortran/target7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -28,7 +28,7 @@ end function foo\n   !$omp end single\n   !$omp end parallel\n   do i = 1, n\n-    if (a(i) /= i + 1) STOP 1\n+    if (a(i) /= i + 1) stop 1\n   end do\n end\n real function foo (x)"}, {"sha": "5e7b1a4951f7e94acb5971abf40ed809b9f6deb8", "filename": "libgomp/testsuite/libgomp.fortran/target8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget8.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,7 +22,7 @@\n   !$omp end single\n   !$omp end parallel\n   do i = 1, n\n-    if (a(i) /= i + 1) STOP 1\n+    if (a(i) /= i + 1) stop 1\n   end do\n contains\n   real function foo (x)"}, {"sha": "4eb6c106ea2f0b13b6802bc7abcc2b3e1a09ee7b", "filename": "libgomp/testsuite/libgomp.fortran/task1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,7 +13,7 @@ program tasktest\n       !$omp end task\n     end if\n   !$omp end parallel\n-  if (j.gt.0) STOP 1\n+  if (j.gt.0) stop 1\n contains\n   subroutine subr (i)\n     use omp_lib"}, {"sha": "623c7179293262c69ec1e48c6de28f1254ed917c", "filename": "libgomp/testsuite/libgomp.fortran/task2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,7 +8,7 @@\n   call test\n !$omp end single\n !$omp end parallel\n-  if (err.ne.0) STOP 1\n+  if (err.ne.0) stop 1\n contains\n   subroutine check (x, y, l)\n     integer :: x, y"}, {"sha": "a7b90d4c99033736f69fcb5d7ae5dcc52a71bda3", "filename": "libgomp/testsuite/libgomp.fortran/task3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -21,6 +21,6 @@ program F03_2_7_1d\n    !$omp end parallel\n    if (sum /= NT) then\n       print *, \"FAIL - sum == \", sum, \" (expected \", NT, \")\"\n-      STOP 1\n+      stop 1\n    end if\n end program F03_2_7_1d"}, {"sha": "918bb1f97a7cf07b7c85c4a33f97e9b2a58bf245", "filename": "libgomp/testsuite/libgomp.fortran/task4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -41,5 +41,5 @@\n !$omp end parallel\n !$omp atomic read\n   e = err\n-  if (e .ne. 0) STOP 1\n+  if (e .ne. 0) stop 1\n end"}, {"sha": "a32d4440c16123eefb97c6207143e2c5acdb90b9", "filename": "libgomp/testsuite/libgomp.fortran/taskgroup1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskgroup1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskgroup1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskgroup1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -19,7 +19,7 @@\n \tend do\n       !$omp end taskgroup\n       do i = 1, 16\n-\tif (v(i).ne.(i + 1)) STOP 1\n+\tif (v(i).ne.(i + 1)) stop 1\n       end do\n       !$omp taskgroup\n \tdo i = 1, 16, 2\n@@ -35,7 +35,7 @@\n \tend do\n       !$omp endtaskgroup\n       do i = 1, 16\n-\tif (v(i).ne.(i + 2)) STOP 2\n+\tif (v(i).ne.(i + 2)) stop 2\n       end do\n       !$omp taskgroup\n \tdo i = 1, 16, 2\n@@ -54,8 +54,8 @@\n \tend do\n       !$omp end taskgroup\n       do i = 1, 16, 2\n-\tif (v(i).ne.(i + 3)) STOP 3\n-\tif (v(i + 1).ne.(i + 5)) STOP 4\n+\tif (v(i).ne.(i + 3)) stop 3\n+\tif (v(i + 1).ne.(i + 5)) stop 4\n       end do\n       !$omp taskgroup\n \tdo i = 1, 16, 2\n@@ -67,14 +67,14 @@\n \t      v(i + 1) = v(i + 1) + 1\n \t    !$omp end task\n \t  !$omp end taskgroup\n-\t  if (v(i).ne.(i + 4).or.v(i + 1).ne.(i + 6)) STOP 5\n+\t  if (v(i).ne.(i + 4).or.v(i + 1).ne.(i + 6)) stop 5\n \t  !$omp task\n \t    v(i) = v(i) + 1\n \t  !$omp end task\n \tend do\n       !$omp end taskgroup\n       do i = 1, 16\n-\tif (v(i).ne.(i + 5)) STOP 6\n+\tif (v(i).ne.(i + 5)) stop 6\n       end do\n     !$omp end single\n   !$omp end parallel"}, {"sha": "616d16a6a262d893c13f1d2857782724833d2794", "filename": "libgomp/testsuite/libgomp.fortran/taskloop1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -8,7 +8,7 @@\n   r = bar (12, 18)\n !$omp end single\n !$omp end parallel\n-  if (q .ne. 6 .or. r .ne. 17 .or. e) STOP 1\n+  if (q .ne. 6 .or. r .ne. 17 .or. e) stop 1\n contains\n   subroutine foo (a, b)\n     integer, intent (in) :: a, b"}, {"sha": "d5646544d50fffd9b3992efc92997a16b8a3f823", "filename": "libgomp/testsuite/libgomp.fortran/taskloop2.f90", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,7 +13,7 @@\n   !$omp end single\n   !$omp end parallel\n   do i = 1, 1024\n-    if (u(i) .ne. 2 * i + 1) STOP 1\n+    if (u(i) .ne. 2 * i + 1) stop 1\n     v(i) = 1024 - i\n     w(i) = 512 - i\n   end do\n@@ -24,45 +24,45 @@\n   !$omp end parallel\n   do i = 1, 1024\n     if (i .lt. 2 .or. i .gt. 1022) then\n-      if (u(i) .ne. 2 * i + 1) STOP 2\n+      if (u(i) .ne. 2 * i + 1) stop 2\n     else\n-      if (u(i) .ne. 1536 - 2 * i) STOP 3\n+      if (u(i) .ne. 1536 - 2 * i) stop 3\n     end if\n     v(i) = i\n     w(i) = i + 1\n   end do\n-  if (m .ne. (1023 + 2 * (1021 * 5 + 17) + 9)) STOP 4\n+  if (m .ne. (1023 + 2 * (1021 * 5 + 17) + 9)) stop 4\n   !$omp parallel\n   !$omp single\n     call f3 (1, 1024)\n   !$omp end single\n   !$omp end parallel \n   do i = 1, 1024\n-    if (u(i) .ne. 2 * i + 1) STOP 5\n+    if (u(i) .ne. 2 * i + 1) stop 5\n     v(i) = 1024 - i\n     w(i) = 512 - i\n   end do\n-  if (m .ne. 1025) STOP 6\n+  if (m .ne. 1025) stop 6\n   !$omp parallel\n   !$omp single\n     call f4 (0, 31, 1, 32)\n   !$omp end single\n   !$omp end parallel \n   do i = 1, 1024\n-    if (u(i) .ne. 1536 - 2 * i) STOP 7\n+    if (u(i) .ne. 1536 - 2 * i) stop 7\n     v(i) = i\n     w(i) = i + 1\n   end do\n-  if (m .ne. 32 + 33 + 1024) STOP 8\n+  if (m .ne. 32 + 33 + 1024) stop 8\n   !$omp parallel\n   !$omp single\n     call f5 (0, 31, 1, 32)\n   !$omp end single\n   !$omp end parallel \n   do i = 1, 1024\n-    if (u(i) .ne. 2 * i + 1) STOP 9\n+    if (u(i) .ne. 2 * i + 1) stop 9\n   end do\n-  if (m .ne. 32 + 33) STOP 10\n+  if (m .ne. 32 + 33) stop 10\n contains\n   subroutine f1 (a, b)\n     integer, intent(in) :: a, b"}, {"sha": "158966e39ddd96ad359157b40427ae77af3b515e", "filename": "libgomp/testsuite/libgomp.fortran/taskloop3.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -5,14 +5,14 @@\n   integer :: i\n   !$omp parallel\n   !$omp single\n-    if (f1 (74) .ne. 63 + 4) STOP 1\n+    if (f1 (74) .ne. 63 + 4) stop 1\n     g = 77\n     call f2\n     !$omp taskwait\n-    if (g .ne. 63 + 9) STOP 2\n-    if (f3 (7_8, 11_8, 2_8) .ne. 11 * 7 + 13) STOP 3\n+    if (g .ne. 63 + 9) stop 2\n+    if (f3 (7_8, 11_8, 2_8) .ne. 11 * 7 + 13) stop 3\n     if (f4 (0_8, 31_8, 16_8, 46_8, 1_8, 2_8, 73) .ne. 32 + 5 * 48 &\n-&       + 11 * 31 + 17 * 46) STOP 4\n+&       + 11 * 31 + 17 * 46) stop 4\n   !$omp end single\n   !$omp end parallel\n contains\n@@ -22,7 +22,7 @@ function f1 (y)\n     x = y\n     !$omp taskloop firstprivate(x)lastprivate(x)\n     do i = 0, 63\n-      if (x .ne. 74) STOP 5\n+      if (x .ne. 74) stop 5\n       if (i .eq. 63) then\n         x = i + 4\n       end if\n@@ -33,7 +33,7 @@ subroutine f2 ()\n     integer :: i\n     !$omp taskloop firstprivate(g)lastprivate(g)nogroup\n     do i = 0, 63\n-      if (g .ne. 77) STOP 6\n+      if (g .ne. 77) stop 6\n       if (i .eq. 63) then\n         g = i + 9\n       end if\n@@ -60,7 +60,7 @@ function f4 (a, b, c, d, e, f, m)\n     !$omp & lastprivate (i, j, k, l)\n     do i = a, b, e\n       do j = c, d, f\n-        if (k .ne. 73) STOP 7\n+        if (k .ne. 73) stop 7\n         if (i .eq. 31 .and. j .eq. 46) then\n           k = i\n         end if"}, {"sha": "88062805f6734dc74a9c4069347d7b14cb643a50", "filename": "libgomp/testsuite/libgomp.fortran/taskloop4.f90", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -11,22 +11,22 @@\n     ! >= grainsize && < 2 * grainsize,\n     ! unless # of loop iterations is smaller than grainsize.\n     call test (0, 79, 1, 17, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 79) STOP 1\n-    if (min_iters .lt. 17 .or. max_iters .ge. 17 * 2) STOP 2\n+    if (cnt .ne. 79) stop 1\n+    if (min_iters .lt. 17 .or. max_iters .ge. 17 * 2) stop 2\n     call test (-49, 2541, 7, 28, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 370) STOP 3\n-    if (min_iters .lt. 28 .or. max_iters .ge. 28 * 2) STOP 4\n+    if (cnt .ne. 370) stop 3\n+    if (min_iters .lt. 28 .or. max_iters .ge. 28 * 2) stop 4\n     call test (7, 21, 2, 15, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 7) STOP 5\n-    if (min_iters .ne. 7 .or. max_iters .ne. 7) STOP 6\n-    if (ntasks .ne. 1) STOP 7\n+    if (cnt .ne. 7) stop 5\n+    if (min_iters .ne. 7 .or. max_iters .ne. 7) stop 6\n+    if (ntasks .ne. 1) stop 7\n     fn => num_tasks\n     ! If num_tasks is present, # of task loop iters is\n     ! min (# of loop iters, num_tasks).\n     call test (-51, 2500, 48, 9, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 54 .or. ntasks .ne. 9) STOP 8\n+    if (cnt .ne. 54 .or. ntasks .ne. 9) stop 8\n     call test (0, 25, 2, 17, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 13 .or. ntasks .ne. 13) STOP 9\n+    if (cnt .ne. 13 .or. ntasks .ne. 13) stop 9\n   !$omp end single\n   !$omp end parallel\n contains\n@@ -42,7 +42,7 @@ subroutine grainsize (a, b, c, d)\n           k = v\n           v = v + 1\n         !$omp end atomic\n-        if (k .ge. 64) STOP 10\n+        if (k .ge. 64) stop 10\n       end if\n       j = j + 1\n       u(k + 1) = j\n@@ -60,7 +60,7 @@ subroutine num_tasks (a, b, c, d)\n           k = v\n           v = v + 1\n         !$omp end atomic\n-        if (k .ge. 64) STOP 11\n+        if (k .ge. 64) stop 11\n       end if\n       j = j + 1\n       u(k + 1) = j"}, {"sha": "4ee56448aa088fc8c6ee0621ac7a26c200b23076", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -15,7 +15,7 @@ end module threadprivate1\n !$omp barrier\n   if (d .ne. omp_get_thread_num () + 6.5) l = .true.\n !$omp end parallel\n-  if (l) STOP 1\n+  if (l) stop 1\n end\n \n ! { dg-final { cleanup-modules \"threadprivate1\" } }"}, {"sha": "f1428d8bef9c3c9f93c6ddb7ef065bb0bd735da3", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate2.f90", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -53,16 +53,16 @@ end module threadprivate2\n   baz%b = omp_get_thread_num () * 2 + 1\n !$omp end parallel\n \n-  if (l) STOP 1\n-  if (.not.allocated (foo)) STOP 2\n-  if (size (foo).ne.18) STOP 3\n-  if (any (foo.ne.1)) STOP 4\n-\n-  if (associated (bar1)) STOP 5\n-  if (.not.associated (bar3)) STOP 6\n-  if (any (bar3 .ne. -2)) STOP 7\n+  if (l) stop 1\n+  if (.not.allocated (foo)) stop 2\n+  if (size (foo).ne.18) stop 3\n+  if (any (foo.ne.1)) stop 4\n+\n+  if (associated (bar1)) stop 5\n+  if (.not.associated (bar3)) stop 6\n+  if (any (bar3 .ne. -2)) stop 7\n   deallocate (bar3)\n-  if (associated (bar3)) STOP 8\n+  if (associated (bar3)) stop 8\n \n !$omp parallel num_threads (4) reduction (.or.:l)\n   l = l.or..not.allocated (foo)\n@@ -85,12 +85,12 @@ end module threadprivate2\n   l = l.or.(baz%b.ne.(omp_get_thread_num () * 2 + 1))\n !$omp end parallel\n \n-  if (l) STOP 9\n-  if (.not.allocated (foo)) STOP 10\n-  if (size (foo).ne.18) STOP 11\n-  if (any (foo.ne.1)) STOP 12\n+  if (l) stop 9\n+  if (.not.allocated (foo)) stop 10\n+  if (size (foo).ne.18) stop 11\n+  if (any (foo.ne.1)) stop 12\n   deallocate (foo)\n-  if (allocated (foo)) STOP 13\n+  if (allocated (foo)) stop 13\n end\n \n ! { dg-final { cleanup-modules \"threadprivate2\" } }"}, {"sha": "e82cc8a5ce4f8e07eb6af3b1f4762a92267e2fde", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate3.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -44,7 +44,7 @@ end module threadprivate3\n   bar3 = omp_get_thread_num () - 2\n   if (omp_get_thread_num () .ne. 0) then\n     deallocate (bar3)\n-    if (associated (bar3)) STOP 1\n+    if (associated (bar3)) stop 1\n   else\n     bar1 => var\n   end if\n@@ -55,13 +55,13 @@ end module threadprivate3\n   baz%b = omp_get_thread_num () * 2 + 1\n !$omp end parallel\n \n-  if (l) STOP 2\n-  if (.not.associated (bar1)) STOP 3\n-  if (any (bar1.ne.6)) STOP 4\n-  if (.not.associated (bar3)) STOP 5\n-  if (any (bar3 .ne. -2)) STOP 6\n+  if (l) stop 2\n+  if (.not.associated (bar1)) stop 3\n+  if (any (bar1.ne.6)) stop 4\n+  if (.not.associated (bar3)) stop 5\n+  if (any (bar3 .ne. -2)) stop 6\n   deallocate (bar3)\n-  if (associated (bar3)) STOP 7\n+  if (associated (bar3)) stop 7\n \n   allocate (bar3 (10))\n   bar3 = 17\n@@ -102,7 +102,7 @@ end module threadprivate3\n   l = l.or.(baz%b .ne. omp_get_thread_num () * 3 + 5)\n !$omp end parallel\n \n-  if (l) STOP 8\n+  if (l) stop 8\n end\n \n ! { dg-final { cleanup-modules \"threadprivate3\" } }"}, {"sha": "a428ed94b1552855d808650db1618b63497ca290", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -72,7 +72,7 @@ end module threadprivate4\n   vi = -1\n !$omp end parallel\n \n-  if (l) STOP 1\n+  if (l) stop 1\n \n end\n "}, {"sha": "a12016d8864403c794f0929a38ed36905b9ef2a1", "filename": "libgomp/testsuite/libgomp.fortran/udr1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -28,24 +28,24 @@ function notdefined(x, y)\n   do i = 1, 100\n     j = j + i\n   end do\n-  if (j .ne. 5050) STOP 1\n+  if (j .ne. 5050) stop 1\n   j = 3\n !$omp parallel do reduction (bar : j)\n   do i = 1, 100\n     j = j + 4 * i\n   end do\n-  if (j .ne. (5050 * 4 + 3)) STOP 2\n+  if (j .ne. (5050 * 4 + 3)) stop 2\n !$omp parallel do reduction (+ : d)\n   do i = 1, 100\n-    if (d%y .ne. 9) STOP 3\n+    if (d%y .ne. 9) stop 3\n     d%x = d%x + 8 * i\n   end do\n-  if (d%x .ne. (5050 * 8 + 7) .or. d%y .ne. 9) STOP 4\n+  if (d%x .ne. (5050 * 8 + 7) .or. d%y .ne. 9) stop 4\n   d = dt (5, 21)\n !$omp parallel do reduction (foo : d)\n   do i = 1, 100\n-    if (d%y .ne. 21) STOP 5\n+    if (d%y .ne. 21) stop 5\n     d%x = d%x + 8 * i\n   end do\n-  if (d%x .ne. (5050 * 8 + 5) .or. d%y .ne. 21) STOP 6\n+  if (d%x .ne. (5050 * 8 + 5) .or. d%y .ne. 21) stop 6\n end"}, {"sha": "15e0f869bee8f018f2f54b51a0bcc5c0b4994d0b", "filename": "libgomp/testsuite/libgomp.fortran/udr10.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr10.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -28,5 +28,5 @@ program udr10\n     j = j .localadd. dl(i)\n     k = k + dl(i * 2)\n   end do\n-  if (j%x /= 5050 .or. k%x /= 10100) STOP 1\n+  if (j%x /= 5050 .or. k%x /= 10100) stop 1\n end"}, {"sha": "57989be4a01052bf1f789fa42f7acd1aa898216f", "filename": "libgomp/testsuite/libgomp.fortran/udr11.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr11.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -88,8 +88,8 @@ end function addme7\n     t%x = t%x + 2 * i\n     u%x = u%x + 3 * i\n   end do\n-  if (j%x /= 5050 .or. k%x /= 30300 .or. l%x /= 15150) STOP 1\n-  if (m%x /= 5050 .or. n%x /= 10100 .or. o%x /= 15150) STOP 2\n-  if (p%x /= 5050 .or. q%x /= 10100 .or. r%x /= 15150) STOP 3\n-  if (s%x /= 5050 .or. t%x /= 10100 .or. u%x /= 15150) STOP 4\n+  if (j%x /= 5050 .or. k%x /= 30300 .or. l%x /= 15150) stop 1\n+  if (m%x /= 5050 .or. n%x /= 10100 .or. o%x /= 15150) stop 2\n+  if (p%x /= 5050 .or. q%x /= 10100 .or. r%x /= 15150) stop 3\n+  if (s%x /= 5050 .or. t%x /= 10100 .or. u%x /= 15150) stop 4\n end"}, {"sha": "d1ae1aad90918f862b23e8c88a8e4b669b458509", "filename": "libgomp/testsuite/libgomp.fortran/udr12.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr12.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -34,7 +34,7 @@ elemental subroutine sub2 (x, y)\n   b = b + 3\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 2 * r) .or. b /= 3 * r) STOP 1\n+  if (any (a /= 2 * r) .or. b /= 3 * r) stop 1\n   a(:) = 0\n   b = 0\n   r = 0\n@@ -43,7 +43,7 @@ elemental subroutine sub2 (x, y)\n   b = b + 3\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 4 * r) .or. b /= 6 * r) STOP 2\n+  if (any (a /= 4 * r) .or. b /= 6 * r) stop 2\n   a(:) = 0\n   b = 0\n   r = 0\n@@ -52,7 +52,7 @@ elemental subroutine sub2 (x, y)\n   b = b + 3\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 2 * r) .or. b /= 3 * r) STOP 3\n+  if (any (a /= 2 * r) .or. b /= 3 * r) stop 3\n end\n elemental function fn1 (x, y)\n   integer, intent(in) :: x, y"}, {"sha": "d29e498e6bb0da4577b43e0e4e4766ad6ac084b9", "filename": "libgomp/testsuite/libgomp.fortran/udr13.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr13.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -41,38 +41,38 @@ function fn3 (x)\n   a(:) = 0\n   r = 0\n !$omp parallel reduction (bar : a) reduction (+: r)\n-  if (lbound (a, 1) /= 1 .or. ubound (a, 1) /= 10) STOP 1\n+  if (lbound (a, 1) /= 1 .or. ubound (a, 1) /= 10) stop 1\n   a = a + 2\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 4 * r) ) STOP 2\n+  if (any (a /= 4 * r) ) stop 2\n   b(:,:) = 0\n   allocate (c (4:6,8:10))\n   c(:,:) = 0\n   r = 0\n !$omp parallel reduction (baz : b, c) reduction (+: r)\n-  if (lbound (b, 1) /= 3 .or. ubound (b, 1) /= 5) STOP 3\n-  if (lbound (b, 2) /= 7 .or. ubound (b, 2) /= 9) STOP 4\n-  if (.not. allocated (c)) STOP 5\n-  if (lbound (c, 1) /= 4 .or. ubound (c, 1) /= 6) STOP 6\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 10) STOP 7\n+  if (lbound (b, 1) /= 3 .or. ubound (b, 1) /= 5) stop 3\n+  if (lbound (b, 2) /= 7 .or. ubound (b, 2) /= 9) stop 4\n+  if (.not. allocated (c)) stop 5\n+  if (lbound (c, 1) /= 4 .or. ubound (c, 1) /= 6) stop 6\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 10) stop 7\n   b = b + 3\n   c = c + 4\n   r = r + 1\n !$omp end parallel\n-  if (any (b /= 3 * r) .or. any (c /= 4 * r)) STOP 8\n+  if (any (b /= 3 * r) .or. any (c /= 4 * r)) stop 8\n   deallocate (c)\n   allocate (c (0:1,7:11))\n   c(:,:) = 0\n   r = 0\n !$omp parallel reduction (foo : c) reduction (+: r)\n-  if (.not. allocated (c)) STOP 9\n-  if (lbound (c, 1) /= 0 .or. ubound (c, 1) /= 1) STOP 10\n-  if (lbound (c, 2) /= 7 .or. ubound (c, 2) /= 11) STOP 11\n+  if (.not. allocated (c)) stop 9\n+  if (lbound (c, 1) /= 0 .or. ubound (c, 1) /= 1) stop 10\n+  if (lbound (c, 2) /= 7 .or. ubound (c, 2) /= 11) stop 11\n   c = c + 5\n   r = r + 1\n !$omp end parallel\n-  if (any (c /= 10 * r)) STOP 12\n+  if (any (c /= 10 * r)) stop 12\n end\n function fn1 (x, y, m1, m2)\n   integer, intent(in) :: x(:), y(:), m1, m2"}, {"sha": "eed57e9afaf5ba26ec74001685dfe88ed1ee5b39", "filename": "libgomp/testsuite/libgomp.fortran/udr14.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr14.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -13,31 +13,31 @@\n   a(7)%h = (/ 0, 0, 0 /)\n   r = 0\n !$omp parallel reduction(+:r) reduction (baz:a)\n-  if (.not.allocated (a)) STOP 1\n-  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) STOP 2\n-  if (.not.allocated (a(7)%h)) STOP 3\n-  if (allocated (a(8)%h)) STOP 4\n-  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) STOP 5\n+  if (.not.allocated (a)) stop 1\n+  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) stop 2\n+  if (.not.allocated (a(7)%h)) stop 3\n+  if (allocated (a(8)%h)) stop 4\n+  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) stop 5\n   a(:)%g = a(:)%g + 2\n   a(7)%h = a(7)%h + 3\n   r = r + 1\n !$omp end parallel\n-  if (.not.allocated (a)) STOP 6\n-  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) STOP 7\n-  if (.not.allocated (a(7)%h)) STOP 8\n-  if (allocated (a(8)%h)) STOP 9\n-  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) STOP 10\n-  if (any (a(:)%g /= 2 * r) .or. any (a(7)%h(:) /= 3 * r)) STOP 11\n+  if (.not.allocated (a)) stop 6\n+  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) stop 7\n+  if (.not.allocated (a(7)%h)) stop 8\n+  if (allocated (a(8)%h)) stop 9\n+  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) stop 10\n+  if (any (a(:)%g /= 2 * r) .or. any (a(7)%h(:) /= 3 * r)) stop 11\n contains\n   subroutine foo (x, y)\n     type (dt), allocatable :: x(:), y(:)\n-    if (allocated (x) .neqv. allocated (y)) STOP 12\n-    if (lbound (x, 1) /= lbound (y, 1)) STOP 13\n-    if (ubound (x, 1) /= ubound (y, 1)) STOP 14\n-    if (allocated (x(7)%h) .neqv. allocated (y(7)%h)) STOP 15\n-    if (allocated (x(8)%h) .neqv. allocated (y(8)%h)) STOP 16\n-    if (lbound (x(7)%h, 1) /= lbound (y(7)%h, 1)) STOP 17\n-    if (ubound (x(7)%h, 1) /= ubound (y(7)%h, 1)) STOP 18\n+    if (allocated (x) .neqv. allocated (y)) stop 12\n+    if (lbound (x, 1) /= lbound (y, 1)) stop 13\n+    if (ubound (x, 1) /= ubound (y, 1)) stop 14\n+    if (allocated (x(7)%h) .neqv. allocated (y(7)%h)) stop 15\n+    if (allocated (x(8)%h) .neqv. allocated (y(8)%h)) stop 16\n+    if (lbound (x(7)%h, 1) /= lbound (y(7)%h, 1)) stop 17\n+    if (ubound (x(7)%h, 1) /= ubound (y(7)%h, 1)) stop 18\n     x(7)%g = 0\n     x(7)%h = 0\n     x(8)%g = 0"}, {"sha": "f5f3139d084d5ed63e85d7dcb34228b6e612ec46", "filename": "libgomp/testsuite/libgomp.fortran/udr15.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr15.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -60,5 +60,5 @@ end module udr15m2\n     j = j.addthree.iand (i, -4)\n     d = d + dt(i)\n   end do\n-  if (d%x /= 5050 .or. j /= 4903) STOP 1\n+  if (d%x /= 5050 .or. j /= 4903) stop 1\n end"}, {"sha": "81fc6519257c14efdd77eae4484941ac99a80413", "filename": "libgomp/testsuite/libgomp.fortran/udr2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -28,24 +28,24 @@ function notdefined(x, y)\n   do i = 1, 100\n     j = j + i\n   end do\n-  if (any(j .ne. 5050)) STOP 1\n+  if (any(j .ne. 5050)) stop 1\n   j = 3\n !$omp parallel do reduction (bar : j)\n   do i = 1, 100\n     j = j + 4 * i\n   end do\n-  if (any(j .ne. (5050 * 4 + 3))) STOP 2\n+  if (any(j .ne. (5050 * 4 + 3))) stop 2\n !$omp parallel do reduction (+ : d)\n   do i = 1, 100\n-    if (any(d%y .ne. 9)) STOP 3\n+    if (any(d%y .ne. 9)) stop 3\n     d%x = d%x + 8 * i\n   end do\n-  if (any(d%x .ne. (5050 * 8 + 7)) .or. any(d%y .ne. 9)) STOP 4\n+  if (any(d%x .ne. (5050 * 8 + 7)) .or. any(d%y .ne. 9)) stop 4\n   d = dt (5, 21)\n !$omp parallel do reduction (foo : d)\n   do i = 1, 100\n-    if (any(d%y .ne. 21)) STOP 5\n+    if (any(d%y .ne. 21)) stop 5\n     d%x = d%x + 8 * i\n   end do\n-  if (any(d%x .ne. (5050 * 8 + 5)) .or. any(d%y .ne. 21)) STOP 6\n+  if (any(d%x .ne. (5050 * 8 + 5)) .or. any(d%y .ne. 21)) stop 6\n end"}, {"sha": "a54f8ba2b2f4ae5be8d2c8966fae1bcdfb19e167", "filename": "libgomp/testsuite/libgomp.fortran/udr3.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -29,10 +29,10 @@\n &\t// char (ichar (f(2:2)) + mod (i, 3))\n   end do\n   do i = 1, 64\n-    if (index (c, char (ichar ('0') + i)) .eq. 0) STOP 1\n-    if (index (d, char (ichar ('0') + i)) .eq. 0) STOP 2\n+    if (index (c, char (ichar ('0') + i)) .eq. 0) stop 1\n+    if (index (d, char (ichar ('0') + i)) .eq. 0) stop 2\n   end do\n-  if (e.ne.char (ichar ('0') + 64)) STOP 3\n-  if (f(1:1).ne.char (ichar ('0') + 32)) STOP 4\n-  if (f(2:2).ne.char (ichar ('0') + 64)) STOP 5\n+  if (e.ne.char (ichar ('0') + 64)) stop 3\n+  if (f(1:1).ne.char (ichar ('0') + 32)) stop 4\n+  if (f(2:2).ne.char (ichar ('0') + 64)) stop 5\n end"}, {"sha": "5d70b6b2830a412ecb97c91f9062705567147ff1", "filename": "libgomp/testsuite/libgomp.fortran/udr4.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -36,12 +36,12 @@ elemental function fn (x, y)\n &\t// char (ichar (f(:,:)(2:2)) + mod (i, 3))\n   end do\n   do i = 1, 64\n-    if (any (index (c, char (ichar ('0') + i)) .eq. 0)) STOP 1\n-    if (any (index (d, char (ichar ('0') + i)) .eq. 0)) STOP 2\n+    if (any (index (c, char (ichar ('0') + i)) .eq. 0)) stop 1\n+    if (any (index (d, char (ichar ('0') + i)) .eq. 0)) stop 2\n   end do\n-  if (any (e.ne.char (ichar ('0') + 64))) STOP 3\n-  if (any (f(:,:)(1:1).ne.char (ichar ('0') + 32))) STOP 4\n-  if (any (f(:,:)(2:2).ne.char (ichar ('0') + 64))) STOP 5\n+  if (any (e.ne.char (ichar ('0') + 64))) stop 3\n+  if (any (f(:,:)(1:1).ne.char (ichar ('0') + 32))) stop 4\n+  if (any (f(:,:)(2:2).ne.char (ichar ('0') + 64))) stop 5\n end\n elemental function fn (x, y)\n   character (len=64), intent (in) :: x, y"}, {"sha": "725d0bfc905b26a5f931c7339e1cd75fc3c05344", "filename": "libgomp/testsuite/libgomp.fortran/udr5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -52,6 +52,6 @@ program udr5\n   r4 = r4 + 1.0\n   call dp_add (dp, 1.0d0)\n !$omp end parallel\n-  if (xdt%r .ne. r) STOP 1\n-  if (i4.ne.r.or.i8.ne.r.or.r4.ne.r.or.dp.ne.r) STOP 2\n+  if (xdt%r .ne. r) stop 1\n+  if (i4.ne.r.or.i8.ne.r.or.r4.ne.r.or.dp.ne.r) stop 2\n end program udr5"}, {"sha": "7c7556b5f24dc59dfbf83d01b71868dae8daa48c", "filename": "libgomp/testsuite/libgomp.fortran/udr6.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -62,8 +62,8 @@ program udr6\n     call dp_add (dp(i), 1.0d0)\n   end do\n !$omp end parallel\n-  if (any (xdt%r .ne. r)) STOP 1\n-  if (any (i4.ne.r).or.any(i8.ne.r)) STOP 2\n-  if (any(r4.ne.r).or.any(dp.ne.r)) STOP 3\n+  if (any (xdt%r .ne. r)) stop 1\n+  if (any (i4.ne.r).or.any(i8.ne.r)) stop 2\n+  if (any(r4.ne.r).or.any(dp.ne.r)) stop 3\n   deallocate (xdt, i4, i8, r4, dp)\n end program udr6"}, {"sha": "9e60ac1eb0d7e2d63d72d87ba0596cbc9b811e53", "filename": "libgomp/testsuite/libgomp.fortran/udr7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -22,7 +22,7 @@ end function omp_orig\n   do i = 1, 64\n     x = x + i\n   end do\n-  if (any (x /= 2080.0)) STOP 1\n+  if (any (x /= 2080.0)) stop 1\n contains\n   elemental subroutine omp_out (x, y)\n     real, intent (out) :: x"}, {"sha": "fb1fc2e9373942c3fed7183f9bc574ef841571eb", "filename": "libgomp/testsuite/libgomp.fortran/udr8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr8.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -42,5 +42,5 @@ end module udr8m2\n     j = j.add.iand (i, -4)\n     d = d + dt(i)\n   end do\n-  if (d%x /= 5050 .or. j /= 4903) STOP 1\n+  if (d%x /= 5050 .or. j /= 4903) stop 1\n end"}, {"sha": "7b96f88fcbb4e7f735bb1714e82d0daed8f1f912", "filename": "libgomp/testsuite/libgomp.fortran/udr9.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr9.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -23,7 +23,7 @@ elemental subroutine combiner1 (x, y)\n   end subroutine\n   subroutine initializer1 (x, y)\n     integer :: x, y\n-    if (y .ne. 3) STOP 1\n+    if (y .ne. 3) stop 1\n     x = y\n   end subroutine\n end module udr9m1\n@@ -61,5 +61,5 @@ end module udr9m2\n     j = j.add.iand (i, -4)\n     d = d + dt(i)\n   end do\n-  if (d%x /= 5050 .or. j /= 4903) STOP 2\n+  if (d%x /= 5050 .or. j /= 4903) stop 2\n end"}, {"sha": "63d17e7d47b51c0e264972bc43b82f2fdeb89a13", "filename": "libgomp/testsuite/libgomp.fortran/vla1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -156,7 +156,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     call check (size (k, 3), 3, l)\n     call check (size (k), 15, l)\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "ef337d4753e965f03e58318d96f134fb1258c56c", "filename": "libgomp/testsuite/libgomp.fortran/vla2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -124,7 +124,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     call check (size (k, 3), 3, l)\n     call check (size (k), 15, l)\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "c21048370bcfe6f41c8476f31c2a5a7e5bd80bb9", "filename": "libgomp/testsuite/libgomp.fortran/vla3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla3.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -162,7 +162,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     call check (size (k, 3), 3, l)\n     call check (size (k), 15, l)\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "2d1a940778fa927cfdcb2bb6be6f25b7cb365124", "filename": "libgomp/testsuite/libgomp.fortran/vla4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -166,7 +166,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n     call check (size (k), 15, l)\n 110 continue\n !$omp end parallel do\n-    if (l) STOP 1\n+    if (l) stop 1\n     if (z2 == 6) then\n       x = 5\n       w = 'thread5thr_number_5THREAD5THR_NUMBER_5'\n@@ -202,7 +202,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n \tdo 115, q = 4, 6\n \t  l = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 115   continue\n-      if (l) STOP 2\n+      if (l) stop 2\n     end if\n   end subroutine foo\n "}, {"sha": "3b28c5108fe802964c49918eb868a2406912e147", "filename": "libgomp/testsuite/libgomp.fortran/vla5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -138,7 +138,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n     call check (size (k), 15, l)\n 110 continue\n !$omp end parallel do\n-    if (l) STOP 1\n+    if (l) stop 1\n     if (z2 == 6) then\n       x = 5\n       w = 'thread5thr_number_5THREAD5THR_NUMBER_5'\n@@ -174,7 +174,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n \tdo 115, q = 4, 6\n \t  l = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 115   continue\n-      if (l) STOP 2\n+      if (l) stop 2\n     end if\n   end subroutine foo\n "}, {"sha": "c2ea7f38ac4d85470c05e98c3d12bc7816aa57f5", "filename": "libgomp/testsuite/libgomp.fortran/vla6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla6.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -173,7 +173,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n \tl = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 115 continue\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "1e27a2e3f4a3b9abc7b144ee6790ef6b4f2872ee", "filename": "libgomp/testsuite/libgomp.fortran/vla7.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla7.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -4,13 +4,13 @@\n   character (6) :: c, f2\n   character (6) :: d(2)\n   c = f1 (6)\n-  if (c .ne. 'opqrst') STOP 1\n+  if (c .ne. 'opqrst') stop 1\n   c = f2 (6)\n-  if (c .ne. '_/!!/_') STOP 2\n+  if (c .ne. '_/!!/_') stop 2\n   d = f3 (6)\n-  if (d(1) .ne. 'opqrst' .or. d(2) .ne. 'a') STOP 3\n+  if (d(1) .ne. 'opqrst' .or. d(2) .ne. 'a') stop 3\n   d = f4 (6)\n-  if (d(1) .ne. 'Opqrst' .or. d(2) .ne. 'A') STOP 4\n+  if (d(1) .ne. 'Opqrst' .or. d(2) .ne. 'A') stop 4\n contains\n   function f1 (n)\n     use omp_lib\n@@ -40,7 +40,7 @@ function f1 (n)\n !$omp barrier\n     l = l .or. f1 .ne. 'def'\n !$omp end parallel\n-    if (l) STOP 5\n+    if (l) stop 5\n     f1 = 'opqrst'\n   end function f1\n   function f3 (n)\n@@ -71,7 +71,7 @@ function f3 (n)\n !$omp barrier\n     l = l .or. any (f3 .ne. 'def')\n !$omp end parallel\n-    if (l) STOP 6\n+    if (l) stop 6\n     f3(1) = 'opqrst'\n     f3(2) = 'a'\n   end function f3\n@@ -105,7 +105,7 @@ function f4 (n)\n     l = l .or. any (f4 .ne. 'def')\n     l = l .or. size (f4) .ne. 2\n !$omp end parallel\n-    if (l) STOP 7\n+    if (l) stop 7\n     f4(1) = 'Opqrst'\n     f4(2) = 'A'\n   end function f4\n@@ -138,6 +138,6 @@ function f2 (n)\n !$omp barrier\n   l = l .or. f2 .ne. 'def'\n !$omp end parallel\n-  if (l) STOP 8\n+  if (l) stop 8\n   f2 = '_/!!/_'\n end function f2"}, {"sha": "fbf3308d7473b9a72fa359b701f142f435d85e29", "filename": "libgomp/testsuite/libgomp.fortran/vla8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla8.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -237,7 +237,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n \tl = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 125 continue\n !$omp end parallel\n-    if (l) STOP 1\n+    if (l) stop 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "a9baef409792ee663df8c7235a895f7a3ef7a75d", "filename": "libgomp/testsuite/libgomp.fortran/workshare1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare1.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -25,7 +25,7 @@ function bar ()\n   b = 20\n   a(1:5) = max (a(1:5), b(1:5))\n !$omp end parallel workshare\n-  if (any (a(1:5) .ne. 20)) STOP 1\n-  if (any (a(6:10) .ne. 10)) STOP 2\n-  if (.not. foo_seen .or. .not. bar_seen) STOP 3\n+  if (any (a(1:5) .ne. 20)) stop 1\n+  if (any (a(6:10) .ne. 10)) stop 2\n+  if (.not. foo_seen .or. .not. bar_seen) stop 3\n end"}, {"sha": "299e577732b874966803f1e512d9b5ed1e1a0aa8", "filename": "libgomp/testsuite/libgomp.fortran/workshare2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c425e66b27eb0aa79f1100a6da87f65731ecd8b5/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare2.f90?ref=c425e66b27eb0aa79f1100a6da87f65731ecd8b5", "patch": "@@ -4,7 +4,7 @@ subroutine f1\n !$omp parallel workshare\n   a(:,:) = 17\n !$omp end parallel workshare\n-  if (any (a.ne.17)) STOP 1\n+  if (any (a.ne.17)) stop 1\n end subroutine f1\n subroutine f2\n   integer a(20:50,70:90),d(15),e(15),f(15)\n@@ -21,14 +21,14 @@ subroutine f2\n   f = 7\n   where (e.ge.5) f = f + 1\n !$omp end parallel workshare\n-  if (any (a.ne.17)) STOP 2\n-  if (c.ne.5.or.b.ne.4) STOP 3\n-  if (any(d.ne.0)) STOP 4\n+  if (any (a.ne.17)) stop 2\n+  if (c.ne.5.or.b.ne.4) stop 3\n+  if (any(d.ne.0)) stop 4\n   do i = 1, 15\n     if (e(i).ge.5) then\n-      if (f(i).ne.8) STOP 5\n+      if (f(i).ne.8) stop 5\n     else\n-      if (f(i).ne.7) STOP 6\n+      if (f(i).ne.7) stop 6\n     end if\n   end do\n end subroutine f2"}]}