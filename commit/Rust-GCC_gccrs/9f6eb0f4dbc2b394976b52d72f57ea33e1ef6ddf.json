{"sha": "9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY2ZWIwZjRkYmMyYjM5NDk3NmI1MmQ3MmY1N2VhMzNlMWVmNmRkZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-06-29T15:56:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-06-29T15:56:17Z"}, "message": "vec.h (VEC_T_safe_push, [...]): Tweak for when size_t is bigger than int.\n\n\t* vec.h (VEC_T_safe_push, VEC_T_safe_insert): Tweak for when\n\tsize_t is bigger than int.\n\nFrom-SVN: r83855", "tree": {"sha": "91d4cdec9e65182e4e0a02b60f2924245daa31d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91d4cdec9e65182e4e0a02b60f2924245daa31d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf/comments", "author": null, "committer": null, "parents": [{"sha": "46e995e0e40e16ca159d6f5b116829700bbc269f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e995e0e40e16ca159d6f5b116829700bbc269f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e995e0e40e16ca159d6f5b116829700bbc269f"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "1696238c5e6c5e1f4a5ab41bf5c91fe8c86420c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf", "patch": "@@ -1,3 +1,8 @@\n+2004-06-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* vec.h (VEC_T_safe_push, VEC_T_safe_insert): Tweak for when\n+\tsize_t is bigger than int.\n+\n 2004-06-29  Paul Brook  <paul@codesourcery.com>\n \n \t* target-def.h (TARGET_CXX_GET_COOKIE_SIZE,"}, {"sha": "86d2a111c327142f253bb52ca3b66d980939cd4c", "filename": "gcc/vec.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=9f6eb0f4dbc2b394976b52d72f57ea33e1ef6ddf", "patch": "@@ -339,7 +339,7 @@ static inline TDEF *VEC_OP (TDEF,safe_push)\t\t\t\t  \\\n      (VEC (TDEF) **vec_, TDEF obj_)\t\t\t\t\t  \\\n {\t\t\t\t\t\t\t\t\t  \\\n   if (!*vec_ || (*vec_)->num == (*vec_)->alloc)\t\t\t\t  \\\n-    VEC_OP (TDEF,reserve) (vec_, ~0u);\t\t\t\t\t  \\\n+    VEC_OP (TDEF,reserve) (vec_, ~(size_t)0);\t\t\t\t  \\\n \t\t\t\t\t\t\t\t\t  \\\n   return VEC_OP (TDEF,quick_push) (*vec_, obj_);\t\t\t  \\\n }\t\t\t\t\t\t\t\t\t  \\\n@@ -385,7 +385,7 @@ static inline TDEF *VEC_OP (TDEF,safe_insert)\t\t     \t  \t  \\\n      (VEC (TDEF) **vec_, size_t ix_, TDEF obj_)       \t\t\t  \\\n {\t\t\t\t\t\t\t\t\t  \\\n   if (!*vec_ || (*vec_)->num == (*vec_)->alloc)\t\t\t\t  \\\n-    VEC_OP (TDEF,reserve) (vec_, ~0u);\t\t\t\t\t  \\\n+    VEC_OP (TDEF,reserve) (vec_, ~(size_t)0);\t\t\t\t  \\\n \t\t\t\t\t\t\t\t\t  \\\n   return VEC_OP (TDEF,quick_insert) (*vec_, ix_, obj_);\t\t\t  \\\n }\t\t\t\t\t\t\t\t\t  \\\n@@ -495,7 +495,7 @@ static inline TDEF *VEC_OP (TDEF,safe_push)\t\t\t\t  \\\n      (VEC (TDEF) **vec_, const TDEF *obj_)\t\t\t\t  \\\n {\t\t\t\t\t\t\t\t\t  \\\n   if (!*vec_ || (*vec_)->num == (*vec_)->alloc)\t\t\t\t  \\\n-    VEC_OP (TDEF,reserve) (vec_, ~0u);\t\t\t\t\t  \\\n+    VEC_OP (TDEF,reserve) (vec_, ~(size_t)0);\t\t\t\t  \\\n \t\t\t\t\t\t\t\t\t  \\\n   return VEC_OP (TDEF,quick_push) (*vec_, obj_);\t\t\t  \\\n }\t\t\t\t\t\t\t\t\t  \\\n@@ -539,7 +539,7 @@ static inline TDEF *VEC_OP (TDEF,safe_insert)\t\t     \t  \t  \\\n      (VEC (TDEF) **vec_, size_t ix_, const TDEF *obj_)\t\t\t  \\\n {\t\t\t\t\t\t\t\t\t  \\\n   if (!*vec_ || (*vec_)->num == (*vec_)->alloc)\t\t\t\t  \\\n-    VEC_OP (TDEF,reserve) (vec_, ~0u);\t\t\t\t\t  \\\n+    VEC_OP (TDEF,reserve) (vec_, ~(size_t)0);\t\t\t\t  \\\n \t\t\t\t\t\t\t\t\t  \\\n   return VEC_OP (TDEF,quick_insert) (*vec_, ix_, obj_);\t\t\t  \\\n }\t\t\t\t\t\t\t\t\t  \\"}]}