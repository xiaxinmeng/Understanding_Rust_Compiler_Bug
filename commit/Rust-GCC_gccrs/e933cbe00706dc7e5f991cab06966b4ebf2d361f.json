{"sha": "e933cbe00706dc7e5f991cab06966b4ebf2d361f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkzM2NiZTAwNzA2ZGM3ZTVmOTkxY2FiMDY5NjZiNGViZjJkMzYxZg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-08-19T15:36:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-19T15:36:20Z"}, "message": "Makefile.in (EXPECT, [...]): Define.\n\n        * Makefile.in (EXPECT, RUNTEST, RUNTESTFLAGS): Define.\n        (site.exp, check, check-g++, check-gcc): New targets.\nFor dejagnu.\n\nFrom-SVN: r14845", "tree": {"sha": "aa6ffb696334bd0ce8a158f9a4e3417d88d9a582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa6ffb696334bd0ce8a158f9a4e3417d88d9a582"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e933cbe00706dc7e5f991cab06966b4ebf2d361f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e933cbe00706dc7e5f991cab06966b4ebf2d361f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e933cbe00706dc7e5f991cab06966b4ebf2d361f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e933cbe00706dc7e5f991cab06966b4ebf2d361f/comments", "author": null, "committer": null, "parents": [{"sha": "921e5a0eb4f27bab1d45761abdf877d611c6bc9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921e5a0eb4f27bab1d45761abdf877d611c6bc9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/921e5a0eb4f27bab1d45761abdf877d611c6bc9b"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "ee98b2d4a21be175372aa5425377b097fdcebeb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e933cbe00706dc7e5f991cab06966b4ebf2d361f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e933cbe00706dc7e5f991cab06966b4ebf2d361f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e933cbe00706dc7e5f991cab06966b4ebf2d361f", "patch": "@@ -1,3 +1,8 @@\n+Tue Aug 19 09:34:57 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in (EXPECT, RUNTEST, RUNTESTFLAGS): Define.\n+\t(site.exp, check, check-g++, check-gcc): New targets.\n+\n Mon Aug 18 17:39:02 1997  Mike Meissner  <meissner@cygnus.com>\n \n \t* configure.in ({powerpc,rs6000}*-*-*, --with-cpu): Remove single"}, {"sha": "d30e9ce99945cd375ad97b5f6173e60333a2a142", "filename": "gcc/Makefile.in", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e933cbe00706dc7e5f991cab06966b4ebf2d361f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e933cbe00706dc7e5f991cab06966b4ebf2d361f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e933cbe00706dc7e5f991cab06966b4ebf2d361f", "patch": "@@ -400,6 +400,16 @@ INSTALL_TARGET=install-normal\n # Source for float.h.  Overridden by cross-make.\n FLOAT_H=float.h-nat\n \n+# Setup the testing framework, if you have one\n+EXPECT = `if [ -f $${rootme}/../expect/expect ] ; then \\\n+            echo $${rootme}/../expect/expect ; \\\n+          else echo expect ; fi`\n+\n+RUNTEST = `if [ -f $${srcdir}/../dejagnu/runtest ] ; then \\\n+\t       echo $${srcdir}/../dejagnu/runtest ; \\\n+\t    else echo runtest; fi`\n+RUNTESTFLAGS =\n+\n # Extra symbols for fixproto to define when parsing headers.\n FIXPROTO_DEFINES = \n \n@@ -2353,6 +2363,99 @@ uninstall: lang.uninstall\n \t-rm -rf $(mandir)/protoize$(manext)\n \t-rm -rf $(mandir)/unprotoize$(manext)\n #\f\n+# These targets are for the dejagnu testsuites. The file site.exp \n+# contains global variables that all the testsuites will use.\n+\n+# Set to $(target_alias)/ for cross.\n+target_subdir = @target_subdir@\n+\n+site.exp: ./config.status Makefile\n+\t@echo \"Making a new config file...\"\n+\t-@rm -f ./tmp?\n+\t@touch site.exp\n+\t-@mv site.exp site.bak\n+\t@echo \"## these variables are automatically generated by make ##\" > ./tmp0\n+\t@echo \"# Do not edit here. If you wish to override these values\" >> ./tmp0\n+\t@echo \"# add them to the last section\" >> ./tmp0\n+\t@echo \"set rootme \\\"`pwd`\\\"\" >> ./tmp0\n+\t@echo \"set srcdir \\\"`cd ${srcdir}; pwd`\\\"\" >> ./tmp0\n+\t@echo \"set host_triplet $(host_canonical)\" >> ./tmp0\n+\t@echo \"set build_triplet $(build_canonical)\" >> ./tmp0\n+\t@echo \"set target_triplet $(target)\" >> ./tmp0\n+\t@echo \"set target_alias $(target_alias)\" >> ./tmp0\n+# CFLAGS is set even though it's empty to show we reserve the right to set it.\n+\t@echo \"set CFLAGS \\\"\\\"\" >> ./tmp0\n+\t@echo \"set CXXFLAGS \\\"-I$(objdir)/../$(target_subdir)libio -I\\$$srcdir/../libg++/src -I\\$$srcdir/../libio -I\\$$srcdir/../libstdc++ -I\\$$srcdir/../libstdc++/stl -L$(objdir)/../$(target_subdir)libg++ -L$(objdir)/../$(target_subdir)libstdc++\\\"\" >> ./tmp0\n+# If newlib has been configured, we need to pass -B to gcc so it can find\n+# newlib's crt0.o if it exists.  This will cause a \"path prefix not used\"\n+# message if it doesn't, but the testsuite is supposed to ignore the message -\n+# it's too difficult to tell when to and when not to pass -B (not all targets\n+# have crt0's).  We could only add the -B if ../newlib/crt0.o exists, but that\n+# seems like too selective a test.\n+# ??? Another way to solve this might be to rely on linker scripts.  Then\n+# theoretically the -B won't be needed.\n+# We also need to pass -L ../ld so that the linker can find ldscripts.\n+\t@if [ -d $(objdir)/../$(target_subdir)newlib ] ; then \\\n+\t  echo \"set newlib_cflags \\\"-I$(objdir)/../$(target_subdir)newlib/targ-include -I\\$$srcdir/../newlib/libc/include\\\"\" >> ./tmp0; \\\n+\t  echo \"set newlib_ldflags \\\"-B$(objdir)/../$(target_subdir)newlib/\\\"\" >> ./tmp0; \\\n+\t  echo \"append CFLAGS \\\" \\$$newlib_cflags\\\"\" >> ./tmp0; \\\n+\t  echo \"append CXXFLAGS \\\" \\$$newlib_cflags\\\"\" >> ./tmp0; \\\n+\t  echo \"append LDFLAGS \\\" \\$$newlib_ldflags\\\"\" >> ./tmp0; \\\n+\telse true; \\\n+\tfi\n+\t@if [ -d $(objdir)/../ld ] ; then \\\n+\t  echo \"append LDFLAGS \\\" -L$(objdir)/../ld\\\"\" >> ./tmp0; \\\n+\telse true; \\\n+\tfi\n+\t@if  [ $(build_canonical) != $(host_canonical) ] ; then \\\n+\t  echo \"set tmpdir /tmp\" >> ./tmp0 ; \\\n+\telse echo \"set tmpdir $(objdir)/testsuite\" >> ./tmp0 ; \\\n+\tfi\n+\t@echo \"set srcdir \\\"\\$${srcdir}/testsuite\\\"\" >> ./tmp0\n+\t@echo \"## All variables above are generated by configure. Do Not Edit ##\" >> ./tmp0\n+\t@cat ./tmp0 > site.exp\n+\t@cat site.bak | sed \\\n+\t\t-e '1,/^## All variables above are.*##/ d' >> site.exp\n+\t-@rm -f ./tmp?\n+\n+CHECK_TARGETS = check-gcc check-g++\n+\n+check: $(CHECK_TARGETS)\n+\n+check-g++: site.exp\n+\tif [ -d testsuite ]; then \\\n+\t  true; \\\n+\telse \\\n+\t  mkdir testsuite; \\\n+\tfi\n+\trm -rf testsuite/site.exp\n+\tcp site.exp testsuite/site.exp\n+\trootme=`pwd`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; pwd` ; export srcdir ; \\\n+\tcd testsuite; \\\n+\tEXPECT=${EXPECT} ; export EXPECT ; \\\n+\tif [ -f $${rootme}/../expect/expect ] ; then  \\\n+\t   TCL_LIBRARY=$${srcdir}/../tcl/library ; \\\n+\t    export TCL_LIBRARY ; fi ; \\\n+\t$(RUNTEST) --tool g++ $(RUNTESTFLAGS)\n+\n+check-gcc: site.exp\n+\tif [ -d testsuite ]; then \\\n+\t  true; \\\n+\telse \\\n+\t  mkdir testsuite; \\\n+\tfi\n+\trm -rf testsuite/site.exp\n+\tcp site.exp testsuite/site.exp\n+\trootme=`pwd`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; pwd` ; export srcdir ; \\\n+\tcd testsuite; \\\n+\tEXPECT=${EXPECT} ; export EXPECT ; \\\n+\tif [ -f $${rootme}/../expect/expect ] ; then  \\\n+\t   TCL_LIBRARY=$${srcdir}/../tcl/library ; \\\n+\t   export TCL_LIBRARY ; fi ; \\\n+\t$(RUNTEST) --tool gcc $(RUNTESTFLAGS)\n+\n # These exist for maintenance purposes.\n \n # Update the tags table."}]}