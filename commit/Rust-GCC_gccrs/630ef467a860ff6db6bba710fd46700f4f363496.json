{"sha": "630ef467a860ff6db6bba710fd46700f4f363496", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMwZWY0NjdhODYwZmY2ZGI2YmJhNzEwZmQ0NjcwMGY0ZjM2MzQ5Ng==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2007-06-23T18:07:04Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2007-06-23T18:07:04Z"}, "message": "re PR target/31152 (-(x>y) generates wrong code)\n\n\tPR target/31152\n\t* arm.md (negscc): Match the correct operand for optimized LT0 test.\n\tRemove optimization for GT.\n\t*gcc.c-torture/execute/20070623-1.c: New.\n\nFrom-SVN: r125973", "tree": {"sha": "b68a85a5e9d12adb9ebdd8e00c3cda46873ff7e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b68a85a5e9d12adb9ebdd8e00c3cda46873ff7e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/630ef467a860ff6db6bba710fd46700f4f363496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630ef467a860ff6db6bba710fd46700f4f363496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630ef467a860ff6db6bba710fd46700f4f363496", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630ef467a860ff6db6bba710fd46700f4f363496/comments", "author": null, "committer": null, "parents": [{"sha": "6cad985925701132aac4e9778ade570fac1ad2b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cad985925701132aac4e9778ade570fac1ad2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cad985925701132aac4e9778ade570fac1ad2b0"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "9ea41e117635e0ab3f8014dea12d3a114df44580", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=630ef467a860ff6db6bba710fd46700f4f363496", "patch": "@@ -1,3 +1,9 @@\n+2007-06-23  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/31152\n+\t* arm.md (negscc): Match the correct operand for optimized LT0 test.\n+\tRemove optimization for GT.\n+\n 2007-06-23  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \tPR middle-end/32437"}, {"sha": "5a8774e79ada7e7e1befeba465951628ce68cfa3", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=630ef467a860ff6db6bba710fd46700f4f363496", "patch": "@@ -9423,15 +9423,12 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"*\n-  if (GET_CODE (operands[3]) == LT && operands[3] == const0_rtx)\n+  if (GET_CODE (operands[3]) == LT && operands[2] == const0_rtx)\n     return \\\"mov\\\\t%0, %1, asr #31\\\";\n \n   if (GET_CODE (operands[3]) == NE)\n     return \\\"subs\\\\t%0, %1, %2\\;mvnne\\\\t%0, #0\\\";\n \n-  if (GET_CODE (operands[3]) == GT)\n-    return \\\"subs\\\\t%0, %1, %2\\;mvnne\\\\t%0, %0, asr #31\\\";\n-\n   output_asm_insn (\\\"cmp\\\\t%1, %2\\\", operands);\n   output_asm_insn (\\\"mov%D3\\\\t%0, #0\\\", operands);\n   return \\\"mvn%d3\\\\t%0, #0\\\";"}, {"sha": "48c7ab65de4dd16a9e542acd5cee6f9357575551", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=630ef467a860ff6db6bba710fd46700f4f363496", "patch": "@@ -1,3 +1,7 @@\n+2007-06-23  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* gcc.c-torture/execute/20070623-1.c: New.\n+\n 2007-06-22  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.c-torture/compile/pr31541.c: New."}, {"sha": "e9c7d2a952d0f20e090ef42f7057a62601594ea4", "filename": "gcc/testsuite/gcc.c-torture/execute/20070623-1.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070623-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630ef467a860ff6db6bba710fd46700f4f363496/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070623-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20070623-1.c?ref=630ef467a860ff6db6bba710fd46700f4f363496", "patch": "@@ -0,0 +1,41 @@\n+#include <limits.h>\n+\n+int __attribute__((noinline)) nge(int a, int b) {return -(a >= b);}\n+int __attribute__((noinline)) ngt(int a, int b) {return -(a > b);}\n+int __attribute__((noinline)) nle(int a, int b) {return -(a <= b);}\n+int __attribute__((noinline)) nlt(int a, int b) {return -(a < b);}\n+int __attribute__((noinline)) neq(int a, int b) {return -(a == b);}\n+int __attribute__((noinline)) nne(int a, int b) {return -(a != b);}\n+int __attribute__((noinline)) ngeu(unsigned a, unsigned b) {return -(a >= b);}\n+int __attribute__((noinline)) ngtu(unsigned a, unsigned b) {return -(a > b);}\n+int __attribute__((noinline)) nleu(unsigned a, unsigned b) {return -(a <= b);}\n+int __attribute__((noinline)) nltu(unsigned a, unsigned b) {return -(a < b);}\n+\n+\n+int main()\n+{\n+  if (nge(INT_MIN, INT_MAX) !=  0) abort();\n+  if (nge(INT_MAX, INT_MIN) != -1) abort();\n+  if (ngt(INT_MIN, INT_MAX) !=  0) abort();\n+  if (ngt(INT_MAX, INT_MIN) != -1) abort();\n+  if (nle(INT_MIN, INT_MAX) != -1) abort();\n+  if (nle(INT_MAX, INT_MIN) !=  0) abort();\n+  if (nlt(INT_MIN, INT_MAX) != -1) abort();\n+  if (nlt(INT_MAX, INT_MIN) !=  0) abort();\n+\n+  if (neq(INT_MIN, INT_MAX) !=  0) abort();\n+  if (neq(INT_MAX, INT_MIN) !=  0) abort();\n+  if (nne(INT_MIN, INT_MAX) != -1) abort();\n+  if (nne(INT_MAX, INT_MIN) != -1) abort();\n+\n+  if (ngeu(0, ~0U) !=  0) abort();\n+  if (ngeu(~0U, 0) != -1) abort();\n+  if (ngtu(0, ~0U) !=  0) abort();\n+  if (ngtu(~0U, 0) != -1) abort();\n+  if (nleu(0, ~0U) != -1) abort();\n+  if (nleu(~0U, 0) !=  0) abort();\n+  if (nltu(0, ~0U) != -1) abort();\n+  if (nltu(~0U, 0) !=  0) abort();\n+  \n+  exit(0);\n+}"}]}