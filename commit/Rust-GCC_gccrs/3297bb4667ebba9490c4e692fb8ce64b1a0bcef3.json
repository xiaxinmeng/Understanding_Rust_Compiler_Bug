{"sha": "3297bb4667ebba9490c4e692fb8ce64b1a0bcef3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI5N2JiNDY2N2ViYmE5NDkwYzRlNjkyZmI4Y2U2NGIxYTBiY2VmMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-12-09T00:14:00Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-09T00:14:00Z"}, "message": "verify.cc (_Jv_BytecodeVerifier::is_assignable_from_slow): Handle case of array whose component type is not prepared.\n\n\t* verify.cc (_Jv_BytecodeVerifier::is_assignable_from_slow):\n\tHandle case of array whose component type is not prepared.\n\nFrom-SVN: r47799", "tree": {"sha": "7bb00a4069982ad41cef767feee33ef11cb54588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bb00a4069982ad41cef767feee33ef11cb54588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3/comments", "author": null, "committer": null, "parents": [{"sha": "ecbcf7b3198489daee27a8dd913314a69e947c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbcf7b3198489daee27a8dd913314a69e947c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecbcf7b3198489daee27a8dd913314a69e947c11"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "15f5bd5706300ffb4da0d854923056d102ba5bb1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3297bb4667ebba9490c4e692fb8ce64b1a0bcef3", "patch": "@@ -1,3 +1,8 @@\n+2001-12-08  Tom Tromey  <tromey@redhat.com>\n+\n+\t* verify.cc (_Jv_BytecodeVerifier::is_assignable_from_slow):\n+\tHandle case of array whose component type is not prepared.\n+\n 2001-12-07  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/ClassLoader.java (defineClass): Rethrow any"}, {"sha": "74499ed4fa1fb23d62402b2567c7099afeeddbef", "filename": "libjava/verify.cc", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3/libjava%2Fverify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3297bb4667ebba9490c4e692fb8ce64b1a0bcef3/libjava%2Fverify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fverify.cc?ref=3297bb4667ebba9490c4e692fb8ce64b1a0bcef3", "patch": "@@ -237,19 +237,21 @@ class _Jv_BytecodeVerifier\n \tif (target->isPrimitive () || source->isPrimitive ())\n \t  return false;\n \n-\t// _Jv_IsAssignableFrom can handle a target which is an\n-\t// interface even if it hasn't been prepared.\n-\tif ((target->state > JV_STATE_LINKED || target->isInterface ())\n-\t    && source->state > JV_STATE_LINKED)\n-\t  return _Jv_IsAssignableFrom (target, source);\n-\n+\t// Check array case first because we can have an array whose\n+\t// component type is not prepared; _Jv_IsAssignableFrom\n+\t// doesn't handle this correctly.\n \tif (target->isArray ())\n \t  {\n \t    if (! source->isArray ())\n \t      return false;\n \t    target = target->getComponentType ();\n \t    source = source->getComponentType ();\n \t  }\n+\t// _Jv_IsAssignableFrom can handle a target which is an\n+\t// interface even if it hasn't been prepared.\n+\telse if ((target->state > JV_STATE_LINKED || target->isInterface ())\n+\t\t && source->state > JV_STATE_LINKED)\n+\t  return _Jv_IsAssignableFrom (target, source);\n \telse if (target->isInterface ())\n \t  {\n \t    for (int i = 0; i < source->interface_count; ++i)"}]}