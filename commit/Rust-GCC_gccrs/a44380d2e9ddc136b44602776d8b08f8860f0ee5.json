{"sha": "a44380d2e9ddc136b44602776d8b08f8860f0ee5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ0MzgwZDJlOWRkYzEzNmI0NDYwMjc3NmQ4YjA4Zjg4NjBmMGVlNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-07-03T20:28:02Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-07-03T20:28:02Z"}, "message": "configure.ac: Test for .dtprelword support on MIPS.\n\n\t* configure.ac: Test for .dtprelword support on MIPS.\n\t* configure, config.in: Regenerate.\n\t* config/mips/mips.c (mips_output_dwarf_dtprel): New.\n\t(TARGET_ASM_OUTPUT_DWARF_DTPREL): Define.\n\nFrom-SVN: r126273", "tree": {"sha": "fc1045ddc2ae28ae1e8c91ac9354691f08450ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc1045ddc2ae28ae1e8c91ac9354691f08450ec9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a44380d2e9ddc136b44602776d8b08f8860f0ee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44380d2e9ddc136b44602776d8b08f8860f0ee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a44380d2e9ddc136b44602776d8b08f8860f0ee5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44380d2e9ddc136b44602776d8b08f8860f0ee5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1adb0a9f4d73554d243604b5ffe173843d3d705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1adb0a9f4d73554d243604b5ffe173843d3d705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1adb0a9f4d73554d243604b5ffe173843d3d705"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "a822caa9d22eb69280819de9c71d2c0fd1e77b71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a44380d2e9ddc136b44602776d8b08f8860f0ee5", "patch": "@@ -1,3 +1,10 @@\n+2007-07-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure.ac: Test for .dtprelword support on MIPS.\n+\t* configure, config.in: Regenerate.\n+\t* config/mips/mips.c (mips_output_dwarf_dtprel): New.\n+\t(TARGET_ASM_OUTPUT_DWARF_DTPREL): Define.\n+\n 2007-07-03  Julian Brown  <julian@codesourcery.com>\n \n \t* config.gcc (with_fpu): Allow --with-fpu=vfp3."}, {"sha": "30b1c426659690a9f2a469bfc8c7fcc3a1089a79", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=a44380d2e9ddc136b44602776d8b08f8860f0ee5", "patch": "@@ -185,6 +185,12 @@\n #endif\n \n \n+/* Define if your assembler supports .dtprelword. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_DTPRELWORD\n+#endif\n+\n+\n /* Define if your assembler supports dwarf2 .file/.loc directives, and\n    preserves file table indices exactly as given. */\n #ifndef USED_FOR_TARGET"}, {"sha": "da93ddcd36f083e71c131ec08fcb564868a1638d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=a44380d2e9ddc136b44602776d8b08f8860f0ee5", "patch": "@@ -428,6 +428,7 @@ static void mips_extra_live_on_entry (bitmap);\n static int mips_comp_type_attributes (tree, tree);\n static int mips_mode_rep_extended (enum machine_mode, enum machine_mode);\n static bool mips_offset_within_alignment_p (rtx, HOST_WIDE_INT);\n+static void mips_output_dwarf_dtprel (FILE *, int, rtx) ATTRIBUTE_UNUSED;\n \n /* Structure to be filled in by compute_frame_size with register\n    save masks, and offsets for the current function.  */\n@@ -1326,6 +1327,11 @@ static const unsigned char mips16e_save_restore_regs[] = {\n #undef  TARGET_COMP_TYPE_ATTRIBUTES\n #define TARGET_COMP_TYPE_ATTRIBUTES mips_comp_type_attributes\n \n+#ifdef HAVE_AS_DTPRELWORD\n+#undef TARGET_ASM_OUTPUT_DWARF_DTPREL\n+#define TARGET_ASM_OUTPUT_DWARF_DTPREL mips_output_dwarf_dtprel\n+#endif\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n \n@@ -11819,4 +11825,26 @@ mips_mode_rep_extended (enum machine_mode mode, enum machine_mode mode_rep)\n   return UNKNOWN;\n }\n \f\n+/* MIPS implementation of TARGET_ASM_OUTPUT_DWARF_DTPREL.  */\n+\n+static void\n+mips_output_dwarf_dtprel (FILE *file, int size, rtx x)\n+{\n+  switch (size)\n+    {\n+    case 4:\n+      fputs (\"\\t.dtprelword\\t\", file);\n+      break;\n+\n+    case 8:\n+      fputs (\"\\t.dtpreldword\\t\", file);\n+      break;\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+  output_addr_const (file, x);\n+  fputs (\"+0x8000\", file);\n+}\n+\f\n #include \"gt-mips.h\""}, {"sha": "d317039a142ebbdd0483eddd7f2eea9f24ec3227", "filename": "gcc/configure", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=a44380d2e9ddc136b44602776d8b08f8860f0ee5", "patch": "@@ -15906,6 +15906,47 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_AS_GNU_ATTRIBUTE 1\n _ACEOF\n \n+fi\n+\n+    echo \"$as_me:$LINENO: checking assembler for .dtprelword support\" >&5\n+echo $ECHO_N \"checking assembler for .dtprelword support... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_mips_dtprelword+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_mips_dtprelword=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 18 \\) \\* 1000 + 0`\n+  then gcc_cv_as_mips_dtprelword=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo '.section .tdata,\"awT\",@progbits\n+x:\n+\t.word 2\n+\t.text\n+\t.dtprelword x+0x8000' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_mips_dtprelword=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_mips_dtprelword\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_mips_dtprelword\" >&6\n+if test $gcc_cv_as_mips_dtprelword = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_DTPRELWORD 1\n+_ACEOF\n+\n fi\n     ;;\n esac"}, {"sha": "5a65f89445612e380902e28a44fd05294dc10ab3", "filename": "gcc/configure.ac", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a44380d2e9ddc136b44602776d8b08f8860f0ee5/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=a44380d2e9ddc136b44602776d8b08f8860f0ee5", "patch": "@@ -2953,6 +2953,16 @@ LCF0:\n       [.gnu_attribute 4,1],,\n       [AC_DEFINE(HAVE_AS_GNU_ATTRIBUTE, 1,\n \t  [Define if your assembler supports .gnu_attribute.])])\n+\n+    gcc_GAS_CHECK_FEATURE([.dtprelword support],\n+      gcc_cv_as_mips_dtprelword, [2,18,0],,\n+      [.section .tdata,\"awT\",@progbits\n+x:\n+\t.word 2\n+\t.text\n+\t.dtprelword x+0x8000],,\n+      [AC_DEFINE(HAVE_AS_DTPRELWORD, 1,\n+\t  [Define if your assembler supports .dtprelword.])])\n     ;;\n esac\n "}]}