{"sha": "68c834d087355b52387e37a5c87436153b638b05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjODM0ZDA4NzM1NWI1MjM4N2UzN2E1Yzg3NDM2MTUzYjYzOGIwNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-06-06T13:58:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-06-06T13:58:41Z"}, "message": "tree-ssa-forwprop.c (forward_propagate_into_cond): Return 2 if we need to schedule cfg_cleanup.\n\n2007-06-06  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-forwprop.c (forward_propagate_into_cond): Return 2\n\tif we need to schedule cfg_cleanup.\n\t(tree_ssa_forward_propagate_single_use_vars): Do so.\n\nFrom-SVN: r125490", "tree": {"sha": "f0957cdcca67da1826ca1fe5ed55eaeb8d988fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0957cdcca67da1826ca1fe5ed55eaeb8d988fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c834d087355b52387e37a5c87436153b638b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c834d087355b52387e37a5c87436153b638b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c834d087355b52387e37a5c87436153b638b05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c834d087355b52387e37a5c87436153b638b05/comments", "author": null, "committer": null, "parents": [{"sha": "5a59ef36873d2b7cfd32cb70f3e04c6b1279569e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a59ef36873d2b7cfd32cb70f3e04c6b1279569e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a59ef36873d2b7cfd32cb70f3e04c6b1279569e"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "b2daf37c9a5bc89a647a293d9e4c22d6cbba79bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c834d087355b52387e37a5c87436153b638b05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c834d087355b52387e37a5c87436153b638b05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68c834d087355b52387e37a5c87436153b638b05", "patch": "@@ -1,3 +1,9 @@\n+2007-06-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-forwprop.c (forward_propagate_into_cond): Return 2\n+\tif we need to schedule cfg_cleanup.\n+\t(tree_ssa_forward_propagate_single_use_vars): Do so.\n+\n 2007-06-06  Ian Lance Taylor  <iant@google.com>\n \n \t* fold-const.c (merge_ranges): If range_successor or\n@@ -247,7 +253,7 @@\n \tPR target/31733\n \t* cfgrtl.c (rtl_verify_flow_info): Skip notes when looking for barrier.\n \n-2007-05-31  Jan Hubicka  <jh@suse.cz>\n+2007-06-04  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-predcom.c (replace_ref_with, initialize_root_vars_lm,\n \treassociate_to_the_same_stmt): Call build_gimple_modify_stmt"}, {"sha": "967a824e9c7787d46300741665e1b01d5e46a725", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c834d087355b52387e37a5c87436153b638b05/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c834d087355b52387e37a5c87436153b638b05/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=68c834d087355b52387e37a5c87436153b638b05", "patch": "@@ -370,12 +370,14 @@ combine_cond_expr_cond (enum tree_code code, tree type,\n }\n \n /* Propagate from the ssa name definition statements of COND_EXPR\n-   in statement STMT into the conditional if that simplifies it.  */\n+   in statement STMT into the conditional if that simplifies it.\n+   Returns zero if no statement was changed, one if there were\n+   changes and two if cfg_cleanup needs to run.  */\n \n-static bool\n+static int\n forward_propagate_into_cond (tree cond_expr, tree stmt)\n {\n-  bool did_something = false;\n+  int did_something = 0;\n \n   do {\n     tree tmp = NULL_TREE;\n@@ -449,7 +451,10 @@ forward_propagate_into_cond (tree cond_expr, tree stmt)\n \t/* Remove defining statements.  */\n \tremove_prop_source_from_use (name, NULL);\n \n-\tdid_something = true;\n+\tif (is_gimple_min_invariant (tmp))\n+\t  did_something = 2;\n+\telse if (did_something == 0)\n+\t  did_something = 1;\n \n \t/* Continue combining.  */\n \tcontinue;\n@@ -1014,9 +1019,11 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \t\t}\n               else if (TREE_CODE (rhs) == COND_EXPR)\n                 {\n-\t\t  bool did_something;\n+\t\t  int did_something;\n \t\t  fold_defer_overflow_warnings ();\n                   did_something = forward_propagate_into_cond (rhs, stmt);\n+\t\t  if (did_something == 2)\n+\t\t    cfg_changed = true;\n \t\t  fold_undefer_overflow_warnings (!TREE_NO_WARNING (rhs)\n \t\t    && did_something, stmt, WARN_STRICT_OVERFLOW_CONDITIONAL);\n \t\t  bsi_next (&bsi);\n@@ -1042,9 +1049,11 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \t    }\n \t  else if (TREE_CODE (stmt) == COND_EXPR)\n \t    {\n-\t      bool did_something;\n+\t      int did_something;\n \t      fold_defer_overflow_warnings ();\n \t      did_something = forward_propagate_into_cond (stmt, stmt);\n+\t      if (did_something == 2)\n+\t\tcfg_changed = true;\n \t      fold_undefer_overflow_warnings (!TREE_NO_WARNING (stmt)\n \t\t\t\t\t      && did_something, stmt,\n \t\t\t\t\t      WARN_STRICT_OVERFLOW_CONDITIONAL);"}]}