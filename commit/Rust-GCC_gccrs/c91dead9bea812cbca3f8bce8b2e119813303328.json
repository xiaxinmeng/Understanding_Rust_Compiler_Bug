{"sha": "c91dead9bea812cbca3f8bce8b2e119813303328", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxZGVhZDliZWE4MTJjYmNhM2Y4YmNlOGIyZTExOTgxMzMwMzMyOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-27T03:50:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-27T03:50:51Z"}, "message": "i386.md (mov<MMXMODEI>_internal_rex64): New.\n\n        * config/i386/i386.md (mov<MMXMODEI>_internal_rex64): New.\n        (movv2sf_internal_rex64): New.\n        (mov<MMXMODEI>_internal): Use no register preferences at all.\n        (movv2sf_internal): Likewise.\n\nFrom-SVN: r92634", "tree": {"sha": "5152eb8cb004e5cfa01933eab52030e19fec73f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5152eb8cb004e5cfa01933eab52030e19fec73f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91dead9bea812cbca3f8bce8b2e119813303328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91dead9bea812cbca3f8bce8b2e119813303328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91dead9bea812cbca3f8bce8b2e119813303328", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91dead9bea812cbca3f8bce8b2e119813303328/comments", "author": null, "committer": null, "parents": [{"sha": "52cf10a30abd1156ae2d926fab1341799c10141b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cf10a30abd1156ae2d926fab1341799c10141b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52cf10a30abd1156ae2d926fab1341799c10141b"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "ad3275043be4911d9e03b063747652cf814a946a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 50, "deletions": 4, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dead9bea812cbca3f8bce8b2e119813303328/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dead9bea812cbca3f8bce8b2e119813303328/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c91dead9bea812cbca3f8bce8b2e119813303328", "patch": "@@ -19853,11 +19853,34 @@\n   DONE;\n })\n \n+(define_insn \"*mov<mode>_internal_rex64\"\n+  [(set (match_operand:MMXMODEI 0 \"nonimmediate_operand\"\n+\t\t\t\t\"=rm,r,*y,*y ,m ,*y,Y ,x,x ,m,r,x\")\n+\t(match_operand:MMXMODEI 1 \"vector_move_operand\"\n+\t\t\t\t\"Cr ,m,C ,*ym,*y,Y ,*y,C,xm,x,x,r\"))]\n+  \"TARGET_64BIT && TARGET_MMX\n+   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n+  \"@\n+    movq\\t{%1, %0|%0, %1}\n+    movq\\t{%1, %0|%0, %1}\n+    pxor\\t%0, %0\n+    movq\\t{%1, %0|%0, %1}\n+    movq\\t{%1, %0|%0, %1}\n+    movdq2q\\t{%1, %0|%0, %1}\n+    movq2dq\\t{%1, %0|%0, %1}\n+    pxor\\t%0, %0\n+    movq\\t{%1, %0|%0, %1}\n+    movq\\t{%1, %0|%0, %1}\n+    movd\\t{%1, %0|%0, %1}\n+    movd\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+   (set_attr \"mode\" \"DI\")])\n+\n (define_insn \"*mov<mode>_internal\"\n   [(set (match_operand:MMXMODEI 0 \"nonimmediate_operand\"\n-\t\t\t\t\t\"=y,y ,m,!y,!*Y,*x,?*x,?m\")\n+\t\t\t\t\t\"=*y,*y ,m ,*y,*Y,*x,*x ,m\")\n \t(match_operand:MMXMODEI 1 \"vector_move_operand\"\n-\t\t\t\t\t\"C ,ym,y,*Y,y  ,C ,*xm,*x\"))]\n+\t\t\t\t\t\"C  ,*ym,*y,*Y,*y,C ,*xm,*x\"))]\n   \"TARGET_MMX\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n   \"@\n@@ -19881,11 +19904,34 @@\n   DONE;\n })\n \n+(define_insn \"*movv2sf_internal_rex64\"\n+  [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n+\t\t\t\t\"=rm,r,*y ,*y ,m ,*y,Y ,x,x ,m,r,x\")\n+        (match_operand:V2SF 1 \"vector_move_operand\"\n+\t\t\t\t\"Cr ,m ,C ,*ym,*y,Y ,*y,C,xm,x,x,r\"))]\n+  \"TARGET_64BIT && TARGET_MMX\n+   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n+  \"@\n+    movq\\t{%1, %0|%0, %1}\n+    movq\\t{%1, %0|%0, %1}\n+    pxor\\t%0, %0\n+    movq\\t{%1, %0|%0, %1}\n+    movq\\t{%1, %0|%0, %1}\n+    movdq2q\\t{%1, %0|%0, %1}\n+    movq2dq\\t{%1, %0|%0, %1}\n+    xorps\\t%0, %0\n+    movlps\\t{%1, %0|%0, %1}\n+    movlps\\t{%1, %0|%0, %1}\n+    movd\\t{%1, %0|%0, %1}\n+    movd\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+   (set_attr \"mode\" \"DI,DI,DI,DI,DI,DI,DI,V4SF,V2SF,V2SF,DI,DI\")])\n+\n (define_insn \"*movv2sf_internal\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n-\t\t\t\t\t\"=y,y ,m,!y,!*Y,*x,?*x,?m\")\n+\t\t\t\t\t\"=*y,*y ,m,*y,*Y,*x,*x ,m\")\n         (match_operand:V2SF 1 \"vector_move_operand\"\n-\t\t\t\t\t\"C ,ym,y,*Y,y  ,C ,*xm,*x\"))]\n+\t\t\t\t\t\"C ,*ym,*y,*Y,*y,C ,*xm,*x\"))]\n   \"TARGET_MMX\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n   \"@"}]}