{"sha": "8d7a99bd3345bff1640ad69c7f33a0736f46590f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ3YTk5YmQzMzQ1YmZmMTY0MGFkNjljN2YzM2EwNzM2ZjQ2NTkwZg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-06-08T12:51:07Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-08T12:51:07Z"}, "message": "re PR c++/72845 (gcc crashes (ICE) when compiling program with complex noexcept declaration)\n\n\tPR c++/72845\n\t* g++.dg/cpp0x/noexcept41.C: New test.\n\nFrom-SVN: r272078", "tree": {"sha": "d1407dba755e50e8333467c0ffe7fabb7665d7cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1407dba755e50e8333467c0ffe7fabb7665d7cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d7a99bd3345bff1640ad69c7f33a0736f46590f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d7a99bd3345bff1640ad69c7f33a0736f46590f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d7a99bd3345bff1640ad69c7f33a0736f46590f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d7a99bd3345bff1640ad69c7f33a0736f46590f/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a9debbd7660bafbd7658c9e843eddbac8980188", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9debbd7660bafbd7658c9e843eddbac8980188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9debbd7660bafbd7658c9e843eddbac8980188"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "72ee262ff808d069dd0adacc81a97358a30dd634", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d7a99bd3345bff1640ad69c7f33a0736f46590f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d7a99bd3345bff1640ad69c7f33a0736f46590f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d7a99bd3345bff1640ad69c7f33a0736f46590f", "patch": "@@ -1,3 +1,8 @@\n+2019-06-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/72845\n+\t* g++.dg/cpp0x/noexcept41.C: New test.\n+\n 2019-06-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* gcc.target/aarch64/sve/init_1.c: Remove options"}, {"sha": "4cd3d8d78544a85961720076946db70cd41262dc", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept41.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d7a99bd3345bff1640ad69c7f33a0736f46590f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d7a99bd3345bff1640ad69c7f33a0736f46590f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept41.C?ref=8d7a99bd3345bff1640ad69c7f33a0736f46590f", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/72845\n+// { dg-do compile { target c++11 } }\n+\n+template <typename> struct g { static const int h = 0; };\n+template <typename i> void declval() { static_assert(!g<i>::h,\"\"); }\n+template <typename> struct a {\n+  template <typename d, typename c>\n+  friend auto f(d &&, c &&) noexcept(declval<c>) -> decltype(declval<c>); // { dg-error \"different exception\" }\n+};\n+template <typename d, typename c> auto f(d &&, c &&) -> decltype(declval<c>);\n+struct e {};\n+static_assert((e{}, declval<a<int>>),\"\"); // { dg-error \"no context to resolve type\" }"}]}