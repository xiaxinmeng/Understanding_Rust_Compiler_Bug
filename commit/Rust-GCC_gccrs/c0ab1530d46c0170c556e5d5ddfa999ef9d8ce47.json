{"sha": "c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBhYjE1MzBkNDZjMDE3MGM1NTZlNWQ1ZGRmYTk5OWVmOWQ4Y2U0Nw==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2018-10-06T18:21:00Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2018-10-06T18:21:00Z"}, "message": "Use gfc_charlen_type instead of int for string lenghts\n\nThis patch cleans up a few places where I noticed the code was still\nusing int instead gfc_charlen_type for string lengths.  Regtested on\nx86_64-pc-linux-gnu, committed as obvious.\n\nlibgfortran/ChangeLog:\n\n2018-10-06  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* io/unix.c (compare_file_filename): Use gfc_charlen_type instead\n\tof int for string length.\n\t(inquire_sequential): Likewise.\n\t(inquire_direct): Likewise.\n\t(inquire_formatted): Likewise.\n\t(inquire_unformatted): Likewise.\n\t(inquire_access): Likewise.\n\t(inquire_read): Likewise.\n\t(inquire_write): Likewise.\n\t(inquire_readwrite): Likewise.\n\t* io/unix.h (compare_file_filename): Likewise.\n\t(inquire_sequential): Likewise.\n\t(inquire_direct): Likewise.\n\t(inquire_formatted): Likewise.\n\t(inquire_unformatted): Likewise.\n\t(inquire_read): Likewise.\n\t(inquire_write): Likewise.\n\t(inquire_readwrite): Likewise.\n\nFrom-SVN: r264901", "tree": {"sha": "ddca4a4c0044e8700f01e926f370781e4f702a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddca4a4c0044e8700f01e926f370781e4f702a5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47/comments", "author": null, "committer": null, "parents": [{"sha": "7318fdcaaabd65b2fc4a38ef2867a94d1550b11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7318fdcaaabd65b2fc4a38ef2867a94d1550b11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7318fdcaaabd65b2fc4a38ef2867a94d1550b11a"}], "stats": {"total": 55, "additions": 38, "deletions": 17}, "files": [{"sha": "bd5e037c264efc0875adb8df20118271615d3df1", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47", "patch": "@@ -1,3 +1,24 @@\n+2018-10-06  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/unix.c (compare_file_filename): Use gfc_charlen_type instead\n+\tof int for string length.\n+\t(inquire_sequential): Likewise.\n+\t(inquire_direct): Likewise.\n+\t(inquire_formatted): Likewise.\n+\t(inquire_unformatted): Likewise.\n+\t(inquire_access): Likewise.\n+\t(inquire_read): Likewise.\n+\t(inquire_write): Likewise.\n+\t(inquire_readwrite): Likewise.\n+\t* io/unix.h (compare_file_filename): Likewise.\n+\t(inquire_sequential): Likewise.\n+\t(inquire_direct): Likewise.\n+\t(inquire_formatted): Likewise.\n+\t(inquire_unformatted): Likewise.\n+\t(inquire_read): Likewise.\n+\t(inquire_write): Likewise.\n+\t(inquire_readwrite): Likewise.\n+\n 2018-10-02  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* io/close.c [!HAVE_UNLINK_OPEN_FILE]: Include <string.h>."}, {"sha": "35504094e7dd50928c0e2e9a051114b13b503f7d", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47", "patch": "@@ -1622,7 +1622,7 @@ error_stream (void)\n    filename. */\n \n int\n-compare_file_filename (gfc_unit *u, const char *name, int len)\n+compare_file_filename (gfc_unit *u, const char *name, gfc_charlen_type len)\n {\n   struct stat st;\n   int ret;\n@@ -1918,7 +1918,7 @@ static const char yes[] = \"YES\", no[] = \"NO\", unknown[] = \"UNKNOWN\";\n    string. */\n \n const char *\n-inquire_sequential (const char *string, int len)\n+inquire_sequential (const char *string, gfc_charlen_type len)\n {\n   struct stat statbuf;\n \n@@ -1947,7 +1947,7 @@ inquire_sequential (const char *string, int len)\n    suitable for direct access.  Returns a C-style string. */\n \n const char *\n-inquire_direct (const char *string, int len)\n+inquire_direct (const char *string, gfc_charlen_type len)\n {\n   struct stat statbuf;\n \n@@ -1976,7 +1976,7 @@ inquire_direct (const char *string, int len)\n    is suitable for formatted form.  Returns a C-style string. */\n \n const char *\n-inquire_formatted (const char *string, int len)\n+inquire_formatted (const char *string, gfc_charlen_type len)\n {\n   struct stat statbuf;\n \n@@ -2006,7 +2006,7 @@ inquire_formatted (const char *string, int len)\n    is suitable for unformatted form.  Returns a C-style string. */\n \n const char *\n-inquire_unformatted (const char *string, int len)\n+inquire_unformatted (const char *string, gfc_charlen_type len)\n {\n   return inquire_formatted (string, len);\n }\n@@ -2016,7 +2016,7 @@ inquire_unformatted (const char *string, int len)\n    suitable for access. */\n \n static const char *\n-inquire_access (const char *string, int len, int mode)\n+inquire_access (const char *string, gfc_charlen_type len, int mode)\n {\n   if (string == NULL)\n     return no;\n@@ -2034,7 +2034,7 @@ inquire_access (const char *string, int len, int mode)\n    suitable for READ access. */\n \n const char *\n-inquire_read (const char *string, int len)\n+inquire_read (const char *string, gfc_charlen_type len)\n {\n   return inquire_access (string, len, R_OK);\n }\n@@ -2044,7 +2044,7 @@ inquire_read (const char *string, int len)\n    suitable for READ access. */\n \n const char *\n-inquire_write (const char *string, int len)\n+inquire_write (const char *string, gfc_charlen_type len)\n {\n   return inquire_access (string, len, W_OK);\n }\n@@ -2054,7 +2054,7 @@ inquire_write (const char *string, int len)\n    suitable for read and write access. */\n \n const char *\n-inquire_readwrite (const char *string, int len)\n+inquire_readwrite (const char *string, gfc_charlen_type len)\n {\n   return inquire_access (string, len, R_OK | W_OK);\n }"}, {"sha": "133e3e1c3ed80c0dc285219722150187078a62a6", "filename": "libgfortran/io/unix.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47/libgfortran%2Fio%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47/libgfortran%2Fio%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.h?ref=c0ab1530d46c0170c556e5d5ddfa999ef9d8ce47", "patch": "@@ -135,7 +135,7 @@ internal_proto(output_stream);\n extern stream *error_stream (void);\n internal_proto(error_stream);\n \n-extern int compare_file_filename (gfc_unit *, const char *, int);\n+extern int compare_file_filename (gfc_unit *, const char *, gfc_charlen_type);\n internal_proto(compare_file_filename);\n \n extern gfc_unit *find_file (const char *file, gfc_charlen_type file_len);\n@@ -150,25 +150,25 @@ internal_proto(file_exists);\n extern GFC_IO_INT file_size (const char *file, gfc_charlen_type file_len);\n internal_proto(file_size);\n \n-extern const char *inquire_sequential (const char *, int);\n+extern const char *inquire_sequential (const char *, gfc_charlen_type);\n internal_proto(inquire_sequential);\n \n-extern const char *inquire_direct (const char *, int);\n+extern const char *inquire_direct (const char *, gfc_charlen_type);\n internal_proto(inquire_direct);\n \n-extern const char *inquire_formatted (const char *, int);\n+extern const char *inquire_formatted (const char *, gfc_charlen_type);\n internal_proto(inquire_formatted);\n \n-extern const char *inquire_unformatted (const char *, int);\n+extern const char *inquire_unformatted (const char *, gfc_charlen_type);\n internal_proto(inquire_unformatted);\n \n-extern const char *inquire_read (const char *, int);\n+extern const char *inquire_read (const char *, gfc_charlen_type);\n internal_proto(inquire_read);\n \n-extern const char *inquire_write (const char *, int);\n+extern const char *inquire_write (const char *, gfc_charlen_type);\n internal_proto(inquire_write);\n \n-extern const char *inquire_readwrite (const char *, int);\n+extern const char *inquire_readwrite (const char *, gfc_charlen_type);\n internal_proto(inquire_readwrite);\n \n extern void flush_if_preconnected (stream *);"}]}