{"sha": "568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "node_id": "C_kwDOANBUbNoAKDU2ODM3Nzc0M2UyMmMxMzc3ZDBhYWExYWM5MTEzZGEzZmYxYjZiZDQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-24T11:25:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-24T11:25:15Z"}, "message": "testsuite: Add compat.exp testcase for most common zero width bitfld ABI passing [PR102024]\n\nOn Tue, Mar 22, 2022 at 05:51:58PM +0100, Jakub Jelinek via Gcc wrote:\n> I guess it would be nice to include the testcases we are talking about,\n> like { float x; int : 0; float y; } and { float x; int : 0; } and\n> { int : 0; float x; } into compat.exp testsuite so that we see ABI\n> differences in compat testing.\n\nHere is a patch that does that.  It uses the struct-layout-1* framework,\nbut isn't generated because we don't want in this case pseudo-random\nstructure layouts, but particular ones we know cause or could cause problems\non some targets.  If other problematic cases are discovered, we can add\nfurther ones.\n\nTested on x86_64-linux with:\nmake check-gcc check-g++ RUNTESTFLAGS='ALT_CC_UNDER_TEST=gcc ALT_CXX_UNDER_TEST=g++ compat.exp=pr102*'\nand with\nmake check-gcc check-g++ RUNTESTFLAGS='compat.exp=pr102*'\nThe former as expected has:\nFAIL: gcc.dg/compat/pr102024 c_compat_x_tst.o-c_compat_y_alt.o execute\nFAIL: gcc.dg/compat/pr102024 c_compat_x_alt.o-c_compat_y_tst.o execute\nfails because on x86_64 we've changed the C ABI but kept the C++ ABI here.\nE.g. on rs6000 it should be the g++.dg such tests to fail (all assuming\nthe alt gcc/g++ is GCC 4.5 through 11).\n\n2022-03-24  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/102024\n\t* gcc.dg/compat/pr102024_main.c: New test.\n\t* gcc.dg/compat/pr102024_test.h: New test.\n\t* gcc.dg/compat/pr102024_x.c: New test.\n\t* gcc.dg/compat/pr102024_y.c: New test.\n\t* g++.dg/compat/pr102024_main.C: New test.\n\t* g++.dg/compat/pr102024_test.h: New test.\n\t* g++.dg/compat/pr102024_x.C: New test.\n\t* g++.dg/compat/pr102024_y.C: New test.", "tree": {"sha": "5d52878ec1eeb045c6528756457b6185847ae74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d52878ec1eeb045c6528756457b6185847ae74b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8698ff67cdff4364c8adad2921ed532359a155ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8698ff67cdff4364c8adad2921ed532359a155ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8698ff67cdff4364c8adad2921ed532359a155ec"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "83965c824fdbb046b58bca4214139531863b66b9", "filename": "gcc/testsuite/g++.dg/compat/pr102024_main.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_main.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_main.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_main.C?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-options \"-Wno-abi\" } */\n+/* { dg-options \"-mno-mmx -Wno-abi\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-fno-common\" { target hppa*-*-hpux* powerpc*-*-darwin* } } */\n+/* { dg-options \"-mno-mmx -fno-common -Wno-abi\" { target i?86-*-darwin* x86_64-*-darwin* } } */\n+/* { dg-options \"-mno-base-addresses\" { target mmix-*-* } } */\n+/* { dg-options \"-mlongcalls -mtext-section-literals\" { target xtensa*-*-* } } */\n+\n+#include \"struct-layout-1.h\"\n+\n+#define TX(n, type, attrs, fields, ops) extern void test##n (void);\n+#include \"pr102024_test.h\"\n+#undef TX\n+\n+int main (void)\n+{\n+#define TX(n, type, attrs, fields, ops)   test##n ();\n+#include \"pr102024_test.h\"\n+#undef TX\n+  if (fails)\n+    {\n+      fflush (stdout);\n+      abort ();\n+    }\n+  exit (0);\n+}"}, {"sha": "d8f4103f63c70ad67d4b3a4358dfe1b00f82a166", "filename": "gcc/testsuite/g++.dg/compat/pr102024_test.h", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_test.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_test.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_test.h?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,6 @@\n+T(0,float a;int:0;float b;,F(0,a,42.0f,43.125f)F(0,b,-17.5f,35.75f))\n+T(1,float a;int:0;,F(1,a,1.0f,17.125f))\n+T(2,int:0;float a;,F(2,a,2.25f,16.5f))\n+T(3,double a;long long:0;double b;,F(3,a,42.0,43.125)F(3,b,-17.5,35.75))\n+T(4,double a;long long:0;,F(4,a,1.0,17.125))\n+T(5,long long:0;double a;,F(5,a,2.25,16.5))"}, {"sha": "d56ae25d426eb9400cee6682107c72613fb99bf3", "filename": "gcc/testsuite/g++.dg/compat/pr102024_x.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_x.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_x.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_x.C?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"-w -Wno-abi\" } */\n+/* { dg-options \"-w -mno-mmx -Wno-abi\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-w -fno-common\" { target hppa*-*-hpux* powerpc*-*-darwin* } } */\n+/* { dg-options \"-w -mno-mmx -fno-common -Wno-abi\" { target i?86-*-darwin* x86_64-*-darwin* } } */\n+/* { dg-options \"-w -mno-base-addresses\" { target mmix-*-* } } */\n+/* { dg-options \"-w -mlongcalls -mtext-section-literals\" { target xtensa*-*-* } } */\n+\n+#include \"struct-layout-1_x1.h\"\n+#include \"pr102024_test.h\"\n+#include \"struct-layout-1_x2.h\"\n+#include \"pr102024_test.h\""}, {"sha": "385f4c563f29abd3823331aef94678cbf7a30dff", "filename": "gcc/testsuite/g++.dg/compat/pr102024_y.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_y.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_y.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fpr102024_y.C?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"-w -Wno-abi\" } */\n+/* { dg-options \"-w -mno-mmx -Wno-abi\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-w -fno-common\" { target hppa*-*-hpux* powerpc*-*-darwin* } } */\n+/* { dg-options \"-w -mno-mmx -fno-common -Wno-abi\" { target i?86-*-darwin* x86_64-*-darwin* } } */\n+/* { dg-options \"-w -mno-base-addresses\" { target mmix-*-* } } */\n+/* { dg-options \"-w -mlongcalls -mtext-section-literals\" { target xtensa*-*-* } } */\n+\n+#include \"struct-layout-1_y1.h\"\n+#include \"pr102024_test.h\"\n+#include \"struct-layout-1_y2.h\"\n+#include \"pr102024_test.h\""}, {"sha": "8aa78da2ddf164e497afe02b027f454addcd66ce", "filename": "gcc/testsuite/gcc.dg/compat/pr102024_main.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_main.c?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-options \"-Wno-abi\" } */\n+/* { dg-options \"-mno-mmx -Wno-abi\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-fno-common\" { target hppa*-*-hpux* powerpc*-*-darwin* } } */\n+/* { dg-options \"-mno-mmx -fno-common -Wno-abi\" { target i?86-*-darwin* x86_64-*-darwin* } } */\n+/* { dg-options \"-mno-base-addresses\" { target mmix-*-* } } */\n+/* { dg-options \"-mlongcalls -mtext-section-literals\" { target xtensa*-*-* } } */\n+/* { dg-prune-output \".*-Wno-abi.*\" } */\n+/* { dg-prune-output \".*Offset of packed bit-field.*\" } */\n+#include \"struct-layout-1.h\"\n+\n+#define TX(n, type, attrs, fields, ops) extern void test##n (void);\n+#include \"pr102024_test.h\"\n+#undef TX\n+\n+int main (void)\n+{\n+#define TX(n, type, attrs, fields, ops)   test##n ();\n+#include \"pr102024_test.h\"\n+#undef TX\n+  exit (fails != 0);\n+}"}, {"sha": "d8f4103f63c70ad67d4b3a4358dfe1b00f82a166", "filename": "gcc/testsuite/gcc.dg/compat/pr102024_test.h", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_test.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_test.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_test.h?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,6 @@\n+T(0,float a;int:0;float b;,F(0,a,42.0f,43.125f)F(0,b,-17.5f,35.75f))\n+T(1,float a;int:0;,F(1,a,1.0f,17.125f))\n+T(2,int:0;float a;,F(2,a,2.25f,16.5f))\n+T(3,double a;long long:0;double b;,F(3,a,42.0,43.125)F(3,b,-17.5,35.75))\n+T(4,double a;long long:0;,F(4,a,1.0,17.125))\n+T(5,long long:0;double a;,F(5,a,2.25,16.5))"}, {"sha": "de207520d24a48148aafd18c13f4d5cb0e966242", "filename": "gcc/testsuite/gcc.dg/compat/pr102024_x.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_x.c?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-options \"-w -Wno-abi\" } */\n+/* { dg-options \"-w -mno-mmx -Wno-abi\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-w -fno-common\" { target hppa*-*-hpux* powerpc*-*-darwin* } } */\n+/* { dg-options \"-w -mno-mmx -fno-common -Wno-abi\" { target i?86-*-darwin* x86_64-*-darwin* } } */\n+/* { dg-options \"-w -mno-base-addresses\" { target mmix-*-* } } */\n+/* { dg-options \"-w -mlongcalls -mtext-section-literals\" { target xtensa*-*-* } } */\n+#include \"struct-layout-1_x1.h\"\n+#include \"pr102024_test.h\"\n+#include \"struct-layout-1_x2.h\"\n+#include \"pr102024_test.h\""}, {"sha": "a3f8396dfcf1b5d41f16db997955a7435b16e297", "filename": "gcc/testsuite/gcc.dg/compat/pr102024_y.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568377743e22c1377d0aaa1ac9113da3ff1b6bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fpr102024_y.c?ref=568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-options \"-w -Wno-abi\" } */\n+/* { dg-options \"-w -mno-mmx -Wno-abi\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-w -fno-common\" { target hppa*-*-hpux* powerpc*-*-darwin* } } */\n+/* { dg-options \"-w -mno-mmx -fno-common -Wno-abi\" { target i?86-*-darwin* x86_64-*-darwin* } } */\n+/* { dg-options \"-w -mno-base-addresses\" { target mmix-*-* } } */\n+/* { dg-options \"-w -mlongcalls -mtext-section-literals\" { target xtensa*-*-* } } */\n+#include \"struct-layout-1_y1.h\"\n+#include \"pr102024_test.h\"\n+#include \"struct-layout-1_y2.h\"\n+#include \"pr102024_test.h\""}]}