{"sha": "474038cda92c3ee8c77be7368d9c954bca922579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc0MDM4Y2RhOTJjM2VlOGM3N2JlNzM2OGQ5Yzk1NGJjYTkyMjU3OQ==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2012-06-18T17:06:35Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2012-06-18T17:06:35Z"}, "message": "This patch updates ldm_stm_operation_p to check for loads that if SP is in the register list...\n\nThis patch updates ldm_stm_operation_p to check for loads that if SP is in\nthe register list, then the base register is SP. It guarantees that SP is\nreset correctly when an LDM instruction is interrupted. Otherwise, we might\nend up with a corrupt stack. \n\ngcc/\n\n2012-06-18  Greta Yorsh  <greta.yorsh@arm.com>\n\n\t* config/arm/arm.c (ldm_stm_operation_p): Require SP\n        as base register for loads if SP is in the register list.\n\nFrom-SVN: r188738", "tree": {"sha": "e117f2034e4cf63a61ebd6df25b430c8d1647229", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e117f2034e4cf63a61ebd6df25b430c8d1647229"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/474038cda92c3ee8c77be7368d9c954bca922579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474038cda92c3ee8c77be7368d9c954bca922579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474038cda92c3ee8c77be7368d9c954bca922579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474038cda92c3ee8c77be7368d9c954bca922579/comments", "author": null, "committer": null, "parents": [{"sha": "9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "e68309da96a414ac11e5927dfe97ec12994f26fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474038cda92c3ee8c77be7368d9c954bca922579/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474038cda92c3ee8c77be7368d9c954bca922579/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=474038cda92c3ee8c77be7368d9c954bca922579", "patch": "@@ -1,3 +1,8 @@\n+2012-06-18  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+\t* config/arm/arm.c (ldm_stm_operation_p): Require SP\n+\tas base register for loads if SP is in the register list.\n+\n 2012-06-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53693"}, {"sha": "d00849cb0ad65670ecc4abd788ccea6e676c92fb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/474038cda92c3ee8c77be7368d9c954bca922579/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/474038cda92c3ee8c77be7368d9c954bca922579/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=474038cda92c3ee8c77be7368d9c954bca922579", "patch": "@@ -10080,6 +10080,12 @@ ldm_stm_operation_p (rtx op, bool load, enum machine_mode mode,\n   if (!REG_P (addr))\n     return false;\n \n+  /* Don't allow SP to be loaded unless it is also the base register. It\n+     guarantees that SP is reset correctly when an LDM instruction\n+     is interruptted. Otherwise, we might end up with a corrupt stack.  */\n+  if (load && (REGNO (reg) == SP_REGNUM) && (REGNO (addr) != SP_REGNUM))\n+    return false;\n+\n   for (; i < count; i++)\n     {\n       elt = XVECEXP (op, 0, i);\n@@ -10103,6 +10109,10 @@ ldm_stm_operation_p (rtx op, bool load, enum machine_mode mode,\n           || (consecutive\n               && (REGNO (reg) !=\n                   (unsigned int) (first_regno + regs_per_val * (i - base))))\n+          /* Don't allow SP to be loaded unless it is also the base register. It\n+             guarantees that SP is reset correctly when an LDM instruction\n+             is interrupted. Otherwise, we might end up with a corrupt stack.  */\n+          || (load && (REGNO (reg) == SP_REGNUM) && (REGNO (addr) != SP_REGNUM))\n           || !MEM_P (mem)\n           || GET_MODE (mem) != mode\n           || ((GET_CODE (XEXP (mem, 0)) != PLUS"}]}