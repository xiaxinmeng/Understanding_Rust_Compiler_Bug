{"sha": "53a381dc16995e7afd228b14785db65f7d8e02a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNhMzgxZGMxNjk5NWU3YWZkMjI4YjE0Nzg1ZGI2NWY3ZDhlMDJhNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-08-03T21:53:25Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-08-03T21:53:25Z"}, "message": "istream (operator>>(basic_istream<>&&, _Tp&)): Minor cosmetic changes, inline.\n\n2009-08-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/istream (operator>>(basic_istream<>&&, _Tp&)): Minor\n\tcosmetic changes, inline.\n\t* include/std/ostream (operator<<(basic_ostream<>&&, const _Tp&)):\n\tLikewise.\n\t* include/bits/move.h: Minor cosmetic changes.\n\nFrom-SVN: r150387", "tree": {"sha": "0645e9d853077503cef27b693ec96f023c356789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0645e9d853077503cef27b693ec96f023c356789"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53a381dc16995e7afd228b14785db65f7d8e02a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53a381dc16995e7afd228b14785db65f7d8e02a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53a381dc16995e7afd228b14785db65f7d8e02a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53a381dc16995e7afd228b14785db65f7d8e02a4/comments", "author": null, "committer": null, "parents": [{"sha": "50cd60be11a52f6ee997d331f83c5b62ee59f448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50cd60be11a52f6ee997d331f83c5b62ee59f448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50cd60be11a52f6ee997d331f83c5b62ee59f448"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "e3700983cc328582b6b676bcbbbaf5c89329af2b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=53a381dc16995e7afd228b14785db65f7d8e02a4", "patch": "@@ -1,3 +1,11 @@\n+2009-08-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/istream (operator>>(basic_istream<>&&, _Tp&)): Minor\n+\tcosmetic changes, inline.\n+\t* include/std/ostream (operator<<(basic_ostream<>&&, const _Tp&)):\n+\tLikewise.\n+\t* include/bits/move.h: Minor cosmetic changes.\n+\n 2009-08-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/40912 (final)"}, {"sha": "e52dec81bc713f4f82f6b48fe4170579beadc438", "filename": "libstdc++-v3/include/bits/move.h", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h?ref=53a381dc16995e7afd228b14785db65f7d8e02a4", "patch": "@@ -48,28 +48,27 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   /// forward (as per N2835)\n   /// Forward lvalues as rvalues.\n-  template <class _Tp>\n+  template<typename _Tp>\n     inline typename enable_if<!is_lvalue_reference<_Tp>::value, _Tp&&>::type\n     forward(typename std::identity<_Tp>::type& __t)\n     { return static_cast<_Tp&&>(__t); }\n \n   /// Forward rvalues as rvalues.\n-  template <class _Tp>\n+  template<typename _Tp>\n     inline typename enable_if<!is_lvalue_reference<_Tp>::value, _Tp&&>::type\n     forward(typename std::identity<_Tp>::type&& __t)\n     { return static_cast<_Tp&&>(__t); }\n \n   // Forward lvalues as lvalues.\n-  template <class _Tp>\n+  template<typename _Tp>\n     inline typename enable_if<is_lvalue_reference<_Tp>::value, _Tp>::type\n     forward(typename std::identity<_Tp>::type __t)\n     { return __t; }\n \n   // Prevent forwarding rvalues as const lvalues.\n-  template <class _Tp>\n+  template<typename _Tp>\n     inline typename enable_if<is_lvalue_reference<_Tp>::value, _Tp>::type\n-    forward(typename std::remove_reference<_Tp>::type&& __t)\n-    = delete;\n+    forward(typename std::remove_reference<_Tp>::type&& __t) = delete;\n \n   /**\n    *  @brief Move a value."}, {"sha": "2d47b0fd8427ed3788eca5f7fca9066916b316bf", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=53a381dc16995e7afd228b14785db65f7d8e02a4", "patch": "@@ -840,12 +840,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *  that take an lvalue reference.\n   */\n   template<typename _CharT, typename _Traits, typename _Tp>\n-  basic_istream<_CharT, _Traits>&\n-  operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp& __x)\n-  {\n-    __is >> __x;\n-    return __is;\n-  }\n+    inline basic_istream<_CharT, _Traits>&\n+    operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp& __x)\n+    { return (__is >> __x); }\n #endif // __GXX_EXPERIMENTAL_CXX0X__\n \n _GLIBCXX_END_NAMESPACE"}, {"sha": "9fc693cb3c3c54220e9b399ec27aa945753f2cc2", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53a381dc16995e7afd228b14785db65f7d8e02a4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=53a381dc16995e7afd228b14785db65f7d8e02a4", "patch": "@@ -575,12 +575,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *  that take an lvalue reference.\n   */\n   template<typename _CharT, typename _Traits, typename _Tp>\n-  basic_ostream<_CharT, _Traits>&\n-  operator<<(basic_ostream<_CharT, _Traits>&& __os, const _Tp& __x)\n-  {\n-    __os << __x;\n-    return __os;\n-  }\n+    inline basic_ostream<_CharT, _Traits>&\n+    operator<<(basic_ostream<_CharT, _Traits>&& __os, const _Tp& __x)\n+    { return (__os << __x); }\n #endif // __GXX_EXPERIMENTAL_CXX0X__\n \n _GLIBCXX_END_NAMESPACE"}]}