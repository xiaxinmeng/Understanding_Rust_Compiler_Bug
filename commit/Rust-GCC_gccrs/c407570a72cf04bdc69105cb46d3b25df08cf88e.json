{"sha": "c407570a72cf04bdc69105cb46d3b25df08cf88e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQwNzU3MGE3MmNmMDRiZGM2OTEwNWNiNDZkM2IyNWRmMDhjZjg4ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-02-05T02:25:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-02-05T02:25:36Z"}, "message": "ia64.c (rtx_needs_barrier): Handle POPCOUNT, UNSPEC_GETF_EXP; remove UNSPEC_POPCNT.\n\n        * config/ia64/ia64.c (rtx_needs_barrier): Handle POPCOUNT,\n        UNSPEC_GETF_EXP; remove UNSPEC_POPCNT.\n        * config/ia64/ia64.md (UNSPEC_POPCNT): Remove.\n        (ffsdi2): Use popcount instead of unspec.\n        (popcountdi2): Rename from *popcnt.\n        (ctzdi2, clzdi2, getf_exp_tf): New.\n\nFrom-SVN: r62428", "tree": {"sha": "7a5c9f04af2d67cf9ef54f36c0b806ca6234402f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a5c9f04af2d67cf9ef54f36c0b806ca6234402f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c407570a72cf04bdc69105cb46d3b25df08cf88e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c407570a72cf04bdc69105cb46d3b25df08cf88e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c407570a72cf04bdc69105cb46d3b25df08cf88e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c407570a72cf04bdc69105cb46d3b25df08cf88e/comments", "author": null, "committer": null, "parents": [{"sha": "4b3cf52215ba4791100abeb0ac3510954a54be5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3cf52215ba4791100abeb0ac3510954a54be5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b3cf52215ba4791100abeb0ac3510954a54be5d"}], "stats": {"total": 64, "additions": 54, "deletions": 10}, "files": [{"sha": "b5c6eb1174aca0a7b6c75ae1b2ea5d5c46fae520", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c407570a72cf04bdc69105cb46d3b25df08cf88e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c407570a72cf04bdc69105cb46d3b25df08cf88e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c407570a72cf04bdc69105cb46d3b25df08cf88e", "patch": "@@ -1,3 +1,12 @@\n+2003-02-04  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.c (rtx_needs_barrier): Handle POPCOUNT,\n+\tUNSPEC_GETF_EXP; remove UNSPEC_POPCNT.\n+\t* config/ia64/ia64.md (UNSPEC_POPCNT): Remove.\n+\t(ffsdi2): Use popcount instead of unspec.\n+\t(popcountdi2): Rename from *popcnt.\n+\t(ctzdi2, clzdi2, getf_exp_tf): New.\n+\n 2003-02-04  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* genconfig.c (main): Generate CC0_P."}, {"sha": "67d005abcdceabc391b30094377d1b0eccdfa48a", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c407570a72cf04bdc69105cb46d3b25df08cf88e/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c407570a72cf04bdc69105cb46d3b25df08cf88e/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=c407570a72cf04bdc69105cb46d3b25df08cf88e", "patch": "@@ -5017,7 +5017,7 @@ rtx_needs_barrier (x, flags, pred)\n     case NEG:      case NOT:\t        case SIGN_EXTEND:     case ZERO_EXTEND:\n     case TRUNCATE: case FLOAT_EXTEND:   case FLOAT_TRUNCATE:  case FLOAT:\n     case FIX:      case UNSIGNED_FLOAT: case UNSIGNED_FIX:    case ABS:\n-    case SQRT:     case FFS:\n+    case SQRT:     case FFS:\t\tcase POPCOUNT:\n       need_barrier = rtx_needs_barrier (XEXP (x, 0), flags, pred);\n       break;\n \n@@ -5053,10 +5053,7 @@ rtx_needs_barrier (x, flags, pred)\n \t  \n \tcase UNSPEC_FR_SPILL:\n \tcase UNSPEC_FR_RESTORE:\n-\tcase UNSPEC_POPCNT:\n-\t  need_barrier = rtx_needs_barrier (XVECEXP (x, 0, 0), flags, pred);\n-\t  break;\n-\n+\tcase UNSPEC_GETF_EXP:\n         case UNSPEC_ADDP4:\n \t  need_barrier = rtx_needs_barrier (XVECEXP (x, 0, 0), flags, pred);\n \t  break;"}, {"sha": "f759eb39efa11315f9a682a6c3d6c08667c716fe", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 43, "deletions": 5, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c407570a72cf04bdc69105cb46d3b25df08cf88e/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c407570a72cf04bdc69105cb46d3b25df08cf88e/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=c407570a72cf04bdc69105cb46d3b25df08cf88e", "patch": "@@ -63,7 +63,7 @@\n    (UNSPEC_FR_RESTORE\t\t13)\n    (UNSPEC_FR_RECIP_APPROX\t14)\n    (UNSPEC_PRED_REL_MUTEX\t15)\n-   (UNSPEC_POPCNT\t\t16)\n+   (UNSPEC_GETF_EXP\t\t16)\n    (UNSPEC_PIC_CALL\t\t17)\n    (UNSPEC_MF\t\t\t18)\n    (UNSPEC_CMPXCHG_ACQ\t\t19)\n@@ -2301,7 +2301,7 @@\n    (set (match_dup 2) (plus:DI (match_dup 1) (const_int -1)))\n    (set (match_dup 5) (const_int 0))\n    (set (match_dup 3) (xor:DI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 4) (unspec:DI [(match_dup 3)] UNSPEC_POPCNT))\n+   (set (match_dup 4) (popcount:DI (match_dup 3)))\n    (set (match_operand:DI 0 \"gr_register_operand\" \"\")\n \t(if_then_else:DI (ne (match_dup 6) (const_int 0))\n \t\t\t (match_dup 5) (match_dup 4)))]\n@@ -2314,14 +2314,52 @@\n   operands[6] = gen_reg_rtx (BImode);\n })\n \n-(define_insn \"*popcnt\"\n+(define_expand \"ctzdi2\"\n+  [(set (match_dup 2) (plus:DI (match_operand:DI 1 \"gr_register_operand\" \"\")\n+\t\t\t       (const_int -1)))\n+   (set (match_dup 3) (not:DI (match_dup 1)))\n+   (set (match_dup 4) (and:DI (match_dup 2) (match_dup 3)))\n+   (set (match_operand:DI 0 \"gr_register_operand\" \"\")\n+\t(popcount:DI (match_dup 4)))]\n+  \"\"\n+{\n+  operands[2] = gen_reg_rtx (DImode);\n+  operands[3] = gen_reg_rtx (DImode);\n+  operands[4] = gen_reg_rtx (DImode);\n+})\n+\n+;; ??? Ought to invent some unspecs for !INTEL_EXTENDED_IEEE_FORMAT.\n+;; Note the computation here is op0 = 63 - (exp - 0xffff).\n+(define_expand \"clzdi2\"\n+  [(set (match_dup 2)\n+\t(unsigned_float:TF (match_operand:DI 1 \"fr_register_operand\" \"\")))\n+   (set (match_dup 3)\n+\t(unspec:DI [(match_dup 2)] UNSPEC_GETF_EXP))\n+   (set (match_dup 4) (const_int 65598))\n+   (set (match_operand:DI 0 \"gr_register_operand\" \"\")\n+\t(minus:DI (match_dup 4) (match_dup 3)))]\n+  \"INTEL_EXTENDED_IEEE_FORMAT\"\n+{\n+  operands[2] = gen_reg_rtx (TFmode);\n+  operands[3] = gen_reg_rtx (DImode);\n+  operands[4] = gen_reg_rtx (DImode);\n+})\n+\n+(define_insn \"popcountdi2\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"gr_register_operand\" \"r\")]\n-\t\t   UNSPEC_POPCNT))]\n+\t(popcount:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"popcnt %0 = %1\"\n   [(set_attr \"itanium_class\" \"mmmul\")])\n \n+(define_insn \"*getf_exp_tf\"\n+  [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:TF 1 \"fr_register_operand\" \"f\")]\n+\t\t   UNSPEC_GETF_EXP))]\n+  \"INTEL_EXTENDED_IEEE_FORMAT\"\n+  \"getf.exp %0 = %1\"\n+  [(set_attr \"itanium_class\" \"frfr\")])\n+\n (define_expand \"divdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(div:DI (match_operand:DI 1 \"general_operand\" \"\")"}]}