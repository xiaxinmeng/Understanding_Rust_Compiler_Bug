{"sha": "f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhiNmE0ODg5ZWIyOWMxZGRmNjVmZDE3MmY0ZjJjMGE3ZDVmN2QwZA==", "commit": {"author": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-10-05T19:25:15Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-10-05T19:25:15Z"}, "message": "Fix last commit.\n\nFrom-SVN: r240806", "tree": {"sha": "77829d8d8a0e28cf32cc107bc2b49db3e54b38fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77829d8d8a0e28cf32cc107bc2b49db3e54b38fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/comments", "author": null, "committer": null, "parents": [{"sha": "2e69f143e34f5c82caf1072f5a34784237b9f0a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e69f143e34f5c82caf1072f5a34784237b9f0a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e69f143e34f5c82caf1072f5a34784237b9f0a2"}], "stats": {"total": 211, "additions": 0, "deletions": 211}, "files": [{"sha": "fbe0d8be011499a52ecc4d4b80958a5cae99806b", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement1.C", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement1.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -12,17 +12,3 @@ f (void)\n   else\n     bar (-p);\n }\n-// { dg-do compile { target c++11 } }\n-// { dg-options \"\" }\n-\n-extern int foo (void);\n-extern void bar (int);\n-\n-void\n-f (void)\n-{\n-  if (auto p = foo (); p > 10) // { dg-warning \"init-statement\" \"\" { target c++14_down } }\n-    bar (p);\n-  else\n-    bar (-p);\n-}"}, {"sha": "8cfe1ab1d28e28345ce0da80be1975905d1575d2", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement2.C", "status": "modified", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement2.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -60,65 +60,3 @@ f4 (void)\n   if constexpr (constexpr auto s = sizeof (int); s > 10)\n     foo ();\n }\n-// { dg-options -std=c++1z }\n-// Test C++17 selection statements with initializer, basic use.\n-\n-extern int foo (void);\n-extern void bar (int);\n-extern int g;\n-\n-void\n-f (void)\n-{\n-  if (auto p = foo (); p > 10)\n-    bar (p);\n-  else\n-    bar (-p);\n-\n-  if ((g += 2); g > 6)\n-    bar (1);\n-\n-  if (auto a = 9, b = foo (); a + b > 10)\n-    bar (a + b);\n-  else\n-    bar (a - b);\n-\n-  if (({ int a; 1;}))\n-    bar (0);\n-\n-  if (auto i = foo (); i > 6)\n-    bar (0);\n-  else if (i++; i > 8)\n-    bar (1);\n-}\n-\n-extern void lock (void);\n-\n-void\n-f2 (int i)\n-{\n-  if (lock (); i > 10)\n-    ++i;\n-  else\n-    --i;\n-}\n-\n-void\n-f3 (int i)\n-{\n-  switch (i *= 2; auto idx = i)\n-    {\n-    case 4:\n-      bar (3);\n-      break;\n-    default:\n-      break;\n-    }\n-}\n-\n-void\n-f4 (void)\n-{\n-  if constexpr (constexpr auto s = sizeof (int); s > 10)\n-    foo ();\n-}"}, {"sha": "c178eafe1fb7801460363ada4a400505bf28d23b", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement3.C", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement3.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -14,19 +14,3 @@ main ()\n   if (g != 2)\n     __builtin_abort ();\n }\n-// { dg-do run }\n-// { dg-options -std=c++1z }\n-// Test C++17 selection statements with initializer, side-effects.\n-\n-int\n-main ()\n-{\n-  int g = 0;\n-\n-  if (g++; g > 1)\n-    __builtin_abort ();\n-  if (++g; g > 2)\n-    __builtin_abort ();\n-  if (g != 2)\n-    __builtin_abort ();\n-}"}, {"sha": "a5f7d8b0c9e20e9d84d873595967366255c1595f", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement4.C", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement4.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -41,65 +41,6 @@ f3 (void)\n }\n \n \n-void\n-f4 (void)\n-{\n-  {\n-    if (auto i = foo (); i > -1)\n-      {\n-\tif (i > 5)\n-\t  bar (i);\n-\tif (auto j = foo (); true)\n-\t  j++;\n-\tj--; // { dg-error \"not declared\" }\n-      }\n-    i = 10; // { dg-error \"not declared\" }\n-  }\n-  i = 10; // { dg-error \"not declared\" }\n-}\n-// { dg-options -std=c++1z }\n-\n-extern int foo (void);\n-extern void bar (int), die (void);\n-\n-void\n-f (void)\n-{\n-  if (auto i = foo (); i != -1)\n-    bar (1);\n-  else\n-    die ();\n-\n-  i = 10; // { dg-error \"not declared\" }\n-}\n-\n-void\n-f2 (void)\n-{\n-  switch (auto i = foo (); i)\n-    {\n-    case 0:\n-      bar (i + 1);\n-      break;\n-    case 1:\n-      bar (i + 10);\n-      break;\n-    default:\n-      break;\n-    }\n-\n-  i = 10; // { dg-error \"not declared\" }\n-}\n-\n-void\n-f3 (void)\n-{\n-  if constexpr (constexpr auto i = sizeof (long); i < 2)\n-    die ();\n-  i = 4; // { dg-error \"not declared\" }\n-}\n-\n-\n void\n f4 (void)\n {"}, {"sha": "6efa0ed30b22599d7d46fc9f5907a679f36d2f6a", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement5.C", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement5.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -14,19 +14,3 @@ foo ()\n   if (status_code c = do_more_stuff (); c != status_code::SUCCESS) { return c; }\n   return status_code::SUCCESS;\n }\n-// Testcase from P0305R1\n-// { dg-options -std=c++1z }\n-\n-enum class status_code { SUCCESS };\n-extern int get_value ();\n-status_code bar (int);\n-status_code do_more_stuff (void);\n-\n-status_code\n-foo ()\n-{\n-  int n = get_value ();\n-  if (status_code c = bar (n); c != status_code::SUCCESS) { return c; }\n-  if (status_code c = do_more_stuff (); c != status_code::SUCCESS) { return c; }\n-  return status_code::SUCCESS;\n-}"}, {"sha": "53b0d31f5458fb006bf58b5af3d8aa83b04a4ae3", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement6.C", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement6.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -23,28 +23,3 @@ foo ()\n       // whatever\n     }\n }\n-// Testcase from P0305R1\n-// { dg-options -std=c++1z }\n-\n-#include <string>\n-#include <map>\n-#include <algorithm>\n-\n-std::map<int, std::string> m;\n-extern int xread (int *);\n-extern void publish (int), raise (int);\n-\n-void\n-foo ()\n-{\n-  if (auto it = m.find (10); it != m.end ()) { std::string s = it->second; }\n-  if (char buf[10]; std::fgets(buf, 10, stdin)) { m[0] += buf; }\n-  if (int s; int count = xread (&s)) { publish(count); raise(s); }\n-\n-  const char *s;\n-  if (auto keywords = {\"if\", \"for\", \"while\"};\n-      std::any_of(keywords.begin(), keywords.end(), [&s](const char* kw) { return s == kw; }))\n-    {\n-      // whatever\n-    }\n-}"}, {"sha": "a67617ef0e2f3f8411ecbe1c22a0209422638fe7", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement7.C", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement7.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -7,12 +7,3 @@ main ()\n   if (int i = 10, &ir = i; [=]{ return ir; }() != 10)\n     __builtin_abort ();\n }\n-// { dg-do run }\n-// { dg-options -std=c++1z }\n-\n-int\n-main ()\n-{\n-  if (int i = 10, &ir = i; [=]{ return ir; }() != 10)\n-    __builtin_abort ();\n-}"}, {"sha": "fb40df0e5b46e5ed6f02692a252de7092ea1ac8b", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement8.C", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement8.C?ref=f8b6a4889eb29c1ddf65fd172f4f2c0a7d5f7d0d", "patch": "@@ -8,13 +8,3 @@ f ()\n     return 5;\n   return 0;\n }\n-// { dg-options -std=c++1z }\n-\n-int\n-f ()\n-{\n-  if (int c = 5;\n-      int c = 5) // { dg-error \"redeclaration\" }\n-    return 5;\n-  return 0;\n-}"}]}