{"sha": "12b48dc897e64ae199c0201d9602d93a5245af20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJiNDhkYzg5N2U2NGFlMTk5YzAyMDFkOTYwMmQ5M2E1MjQ1YWYyMA==", "commit": {"author": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2012-09-04T09:36:44Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2012-09-04T09:36:44Z"}, "message": "re PR target/45070 (Miscompiled c++ class with packed attribute on ARM with -Os optimizations (Qt 4.6.2))\n\n\n\tPR target/45070\n\t* config/arm/arm.c (thumb1_extra_regs_pushed): Handle return value of size\n\tless than 4 bytes by using macro ARM_NUM_INTS.\n\t(thumb1_unexpanded_epilogue): Use macro ARM_NUM_INTS.\n\nFrom-SVN: r190919", "tree": {"sha": "a11db9245a01d8f255e2cdd67164172922b93c7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a11db9245a01d8f255e2cdd67164172922b93c7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12b48dc897e64ae199c0201d9602d93a5245af20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b48dc897e64ae199c0201d9602d93a5245af20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12b48dc897e64ae199c0201d9602d93a5245af20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b48dc897e64ae199c0201d9602d93a5245af20/comments", "author": null, "committer": null, "parents": [{"sha": "a8886f7d1859cebce5db37598c4bae54cc51db1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8886f7d1859cebce5db37598c4bae54cc51db1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8886f7d1859cebce5db37598c4bae54cc51db1d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4001f350f2fd1726fba38939ba1bf600750526b8", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b48dc897e64ae199c0201d9602d93a5245af20/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b48dc897e64ae199c0201d9602d93a5245af20/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=12b48dc897e64ae199c0201d9602d93a5245af20", "patch": "@@ -21862,7 +21862,7 @@ thumb1_extra_regs_pushed (arm_stack_offsets *offsets, bool for_prologue)\n   unsigned long l_mask = live_regs_mask & (for_prologue ? 0x40ff : 0xff);\n   /* Then count how many other high registers will need to be pushed.  */\n   unsigned long high_regs_pushed = bit_count (live_regs_mask & 0x0f00);\n-  int n_free, reg_base;\n+  int n_free, reg_base, size;\n \n   if (!for_prologue && frame_pointer_needed)\n     amount = offsets->locals_base - offsets->saved_regs;\n@@ -21901,7 +21901,8 @@ thumb1_extra_regs_pushed (arm_stack_offsets *offsets, bool for_prologue)\n   n_free = 0;\n   if (!for_prologue)\n     {\n-      reg_base = arm_size_return_regs () / UNITS_PER_WORD;\n+      size = arm_size_return_regs ();\n+      reg_base = ARM_NUM_INTS (size);\n       live_regs_mask >>= reg_base;\n     }\n \n@@ -21955,8 +21956,7 @@ thumb1_unexpanded_epilogue (void)\n   if (extra_pop > 0)\n     {\n       unsigned long extra_mask = (1 << extra_pop) - 1;\n-      live_regs_mask |= extra_mask << ((size + UNITS_PER_WORD - 1) \n-\t\t\t\t       / UNITS_PER_WORD);\n+      live_regs_mask |= extra_mask << ARM_NUM_INTS (size);\n     }\n \n   /* The prolog may have pushed some high registers to use as"}]}