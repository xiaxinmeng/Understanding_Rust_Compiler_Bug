{"sha": "96af90b5d6f0a29d09627bba215ffe2f2d638f3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhZjkwYjVkNmYwYTI5ZDA5NjI3YmJhMjE1ZmZlMmYyZDYzOGYzZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-11-21T20:18:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-11-21T20:18:45Z"}, "message": "re PR middle-end/88129 (Two blockage insns are emited in the function epilogue)\n\n\tPR middle-end/88129\n\t* function.c (expand_function_end): Do not emit extra blockage insn.\n\nFrom-SVN: r266356", "tree": {"sha": "3c5e4b935ef76673db8778a6ebb8c1b3044295ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c5e4b935ef76673db8778a6ebb8c1b3044295ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96af90b5d6f0a29d09627bba215ffe2f2d638f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96af90b5d6f0a29d09627bba215ffe2f2d638f3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96af90b5d6f0a29d09627bba215ffe2f2d638f3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96af90b5d6f0a29d09627bba215ffe2f2d638f3e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c339a8985df1288e569d550a1f22f50399e998e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c339a8985df1288e569d550a1f22f50399e998e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c339a8985df1288e569d550a1f22f50399e998e8"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "5e09cd6d04ff539ebf0f65533cafb9960440b4a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96af90b5d6f0a29d09627bba215ffe2f2d638f3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96af90b5d6f0a29d09627bba215ffe2f2d638f3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96af90b5d6f0a29d09627bba215ffe2f2d638f3e", "patch": "@@ -1,3 +1,8 @@\n+2018-11-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/88129\n+\t* function.c (expand_function_end): Do not emit extra blockage insn.\n+\n 2018-11-21  Lokesh Janghel  <lokeshjanghel91@gmail.com>\n \n \tPR target/85667"}, {"sha": "85a5d9f43f70bfaf7681518868cfc862c9bca41c", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96af90b5d6f0a29d09627bba215ffe2f2d638f3e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96af90b5d6f0a29d09627bba215ffe2f2d638f3e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=96af90b5d6f0a29d09627bba215ffe2f2d638f3e", "patch": "@@ -5341,14 +5341,6 @@ expand_function_end (void)\n       if (flag_exceptions)\n \tsjlj_emit_function_exit_after (get_last_insn ());\n     }\n-  else\n-    {\n-      /* We want to ensure that instructions that may trap are not\n-\t moved into the epilogue by scheduling, because we don't\n-\t always emit unwind information for the epilogue.  */\n-      if (cfun->can_throw_non_call_exceptions)\n-\temit_insn (gen_blockage ());\n-    }\n \n   /* If this is an implementation of throw, do what's necessary to\n      communicate between __builtin_eh_return and the epilogue.  */"}]}