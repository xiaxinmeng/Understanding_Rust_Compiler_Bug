{"sha": "d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "node_id": "C_kwDOANBUbNoAKGQ2YTM5YzI1YzA1YzZlZDVkZjhjZTQ5ZWRhNzE5ZDE3ZTQwZTI5YmI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-21T00:16:33Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-21T00:16:33Z"}, "message": "Daily bump.", "tree": {"sha": "a5a643dfa9d29bc6e4193b7226e4a918a4b18917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5a643dfa9d29bc6e4193b7226e4a918a4b18917"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/comments", "author": null, "committer": null, "parents": [{"sha": "dd899c7de36d19ddf18e3bfab4a0c150096e2368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd899c7de36d19ddf18e3bfab4a0c150096e2368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd899c7de36d19ddf18e3bfab4a0c150096e2368"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "360cd260d2d8a5b2047ffcc9df696a9238f4c293", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "patch": "@@ -1,3 +1,28 @@\n+2022-08-20  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/loongarch-opts.cc: Allow cmodel to be extreme.\n+\t* config/loongarch/loongarch.cc (loongarch_call_tls_get_addr):\n+\tAdd extreme support for TLS GD and LD types.\n+\t(loongarch_legitimize_tls_address): Add extreme support for TLS LE\n+\tand IE.\n+\t(loongarch_split_symbol): When compiling with -mcmodel=extreme,\n+\tthe symbol address will be obtained through five instructions.\n+\t(loongarch_print_operand_reloc): Add support.\n+\t(loongarch_print_operand): Add support.\n+\t(loongarch_print_operand_address): Add support.\n+\t(loongarch_option_override_internal): Set '-mcmodel=extreme' option\n+\tincompatible with '-mno-explicit-relocs'.\n+\t* config/loongarch/loongarch.md (@lui_l_hi20<mode>):\n+\tLoads bits 12-31 of data into registers.\n+\t(lui_h_lo20): Load bits 32-51 of the data and spell bits 0-31 of\n+\tthe source register.\n+\t(lui_h_hi12): Load bits 52-63 of the data and spell bits 0-51 of\n+\tthe source register.\n+\t* config/loongarch/predicates.md: Symbols need to be decomposed\n+\twhen defining the macro TARGET_CMODEL_EXTREME\n+\t* doc/invoke.texi: Modify the description information of cmodel in the document.\n+\tDocument -W[no-]extreme-plt.\n+\n 2022-08-19  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* config/gcn/mkoffload.cc (main): Add omp_requires_file and dbgobj to"}, {"sha": "f89c07b21f54579e5b0eb9e54f09267fb1853803", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "patch": "@@ -1 +1 @@\n-20220820\n+20220821"}, {"sha": "3aec1dbd72ce948e5cd0f9b733fee47ae2a0782e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "patch": "@@ -1,3 +1,11 @@\n+2022-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/46539\n+\t* lang.opt (static-libgfortran, static-libquadmath): Change Fortran\n+\tto Driver.\n+\t* options.cc (gfc_handle_option): Don't handle OPT_static_libgfortran\n+\tnor OPT_static_libquadmath here.\n+\n 2022-08-18  Harald Anlauf  <anlauf@gmx.de>\n \n \tRevert:"}, {"sha": "480a5fc3157adb856e37201d1f2086e618e7cfcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "patch": "@@ -1,3 +1,29 @@\n+2022-08-20  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* gcc.target/loongarch/func-call-1.c: Add option '-mcmodel=normal'.\n+\t* gcc.target/loongarch/func-call-2.c: Likewise.\n+\t* gcc.target/loongarch/func-call-3.c: Likewise.\n+\t* gcc.target/loongarch/func-call-4.c: Likewise.\n+\t* gcc.target/loongarch/func-call-5.c: Likewise.\n+\t* gcc.target/loongarch/func-call-6.c: Likewise.\n+\t* gcc.target/loongarch/func-call-7.c: Likewise.\n+\t* gcc.target/loongarch/func-call-8.c: Likewise.\n+\t* gcc.target/loongarch/relocs-symbol-noaddend.c: Likewise.\n+\t* gcc.target/loongarch/func-call-extreme-1.c: New test.\n+\t* gcc.target/loongarch/func-call-extreme-2.c: New test.\n+\n+2022-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/106645\n+\t* c-c++-common/cpp/delimited-escape-seq-1.c: New test.\n+\t* c-c++-common/cpp/delimited-escape-seq-2.c: New test.\n+\t* c-c++-common/cpp/delimited-escape-seq-3.c: New test.\n+\t* c-c++-common/Wbidi-chars-24.c: New test.\n+\t* gcc.dg/cpp/delimited-escape-seq-1.c: New test.\n+\t* gcc.dg/cpp/delimited-escape-seq-2.c: New test.\n+\t* g++.dg/cpp/delimited-escape-seq-1.C: New test.\n+\t* g++.dg/cpp/delimited-escape-seq-2.C: New test.\n+\n 2022-08-19  Haochen Jiang  <haochen.jiang@intel.com>\n \n \t* gcc.target/x86_64/abi/bf16/abi-bf16.exp: New test."}, {"sha": "50617857a77503289027be28f023739d9555bb6c", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a39c25c05c6ed5df8ce49eda719d17e40e29bb/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=d6a39c25c05c6ed5df8ce49eda719d17e40e29bb", "patch": "@@ -1,3 +1,23 @@\n+2022-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/106645\n+\t* include/cpplib.h (struct cpp_options): Implement\n+\tP2290R3 - Delimited escape sequences.  Add delimite_escape_seqs\n+\tmember.\n+\t* init.cc (struct lang_flags): Likewise.\n+\t(lang_defaults): Add delim column.\n+\t(cpp_set_lang): Copy over delimite_escape_seqs.\n+\t* charset.cc (extend_char_range): New function.\n+\t(_cpp_valid_ucn): Use it.  Handle delimited escape sequences.\n+\t(convert_hex): Likewise.\n+\t(convert_oct): Likewise.\n+\t(convert_ucn): Use extend_char_range.\n+\t(convert_escape): Call convert_oct even for \\o.\n+\t(_cpp_interpret_identifier): Handle delimited escape sequences.\n+\t* lex.cc (get_bidi_ucn_1): Likewise.  Add end argument, fill it in.\n+\t(get_bidi_ucn): Adjust get_bidi_ucn_1 caller.  Use end argument to\n+\tcompute num_bytes.\n+\n 2022-08-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* include/cpplib.h (struct cpp_options): Add warning_directive."}]}