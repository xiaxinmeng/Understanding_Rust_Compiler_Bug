{"sha": "d213e92e53c40f0ab53a6813c9284814f54c58c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIxM2U5MmU1M2M0MGYwYWI1M2E2ODEzYzkyODQ4MTRmNTRjNThjOQ==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2010-10-06T16:42:50Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2010-10-06T16:42:50Z"}, "message": "futex.h: New.\n\n2010-10-06  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n\n\t* config/linux/futex.h: New.\n\t* config/linux/arm/mutex.h: New.\n\t* configure.tgt (arm*-*-linux*): Add config path.\n\nFrom-SVN: r165054", "tree": {"sha": "983a5d576f5a7964e781b3497626f6d0aa0031e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/983a5d576f5a7964e781b3497626f6d0aa0031e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d213e92e53c40f0ab53a6813c9284814f54c58c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d213e92e53c40f0ab53a6813c9284814f54c58c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d213e92e53c40f0ab53a6813c9284814f54c58c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d213e92e53c40f0ab53a6813c9284814f54c58c9/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c956e9af46f6467e438e6e5154da43778ebc116f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c956e9af46f6467e438e6e5154da43778ebc116f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c956e9af46f6467e438e6e5154da43778ebc116f"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "43a13fd64bc35284ef9705adb32cc4a299f4ab70", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=d213e92e53c40f0ab53a6813c9284814f54c58c9", "patch": "@@ -1,3 +1,9 @@\n+2010-10-06  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/linux/futex.h: New.\n+\t* config/linux/arm/mutex.h: New.\n+\t* configure.tgt (arm*-*-linux*): Add config path.\n+\n 2010-09-30  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* testsuite/libgomp.graphite/force-parallel-1.c: Adjust."}, {"sha": "30021d54746d12d71f3875e7e7b215d54a31ba0a", "filename": "libgomp/config/linux/arm/mutex.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2Fconfig%2Flinux%2Farm%2Fmutex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2Fconfig%2Flinux%2Farm%2Fmutex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Farm%2Fmutex.h?ref=d213e92e53c40f0ab53a6813c9284814f54c58c9", "patch": "@@ -0,0 +1,28 @@\n+/* Copyright (C) 2010 Free Software Foundation, Inc.\n+   Contributed by ARM Ltd.\n+\n+   This file is part of the GNU OpenMP Library (libgomp).\n+\n+   Libgomp is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* ARM needs the same correct usage of __sync_synchronize and\n+   __sync_lock_test_and_set as ia64.  So we just use its mutex.h.  */\n+\n+#include \"config/linux/ia64/mutex.h\""}, {"sha": "7324b78383eb0c70e16d33cdb45124c7624f4799", "filename": "libgomp/config/linux/futex.h", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2Fconfig%2Flinux%2Ffutex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2Fconfig%2Flinux%2Ffutex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Ffutex.h?ref=d213e92e53c40f0ab53a6813c9284814f54c58c9", "patch": "@@ -0,0 +1,75 @@\n+/* Copyright (C) 2010 Free Software Foundation, Inc.\n+   Contributed by ARM Ltd.\n+\n+   This file is part of the GNU OpenMP Library (libgomp).\n+\n+   Libgomp is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* Provide target-specific access to the futex system call.  */\n+\n+/* The include file hierachy above us (wait.h) has pushed visibility\n+   hidden, this will be applied to prototypes with headers we include\n+   with the effect that we cannot link against an external function\n+   (syscall). The solution here is to push default visibility, include\n+   our required headers then reinstante the original visibility.  */\n+\n+#pragma GCC visibility push(default)\n+\n+#define _GNU_SOURCE \n+#include <unistd.h>\n+#include <sys/syscall.h>\n+\n+#pragma GCC visibility pop\n+\n+static inline void\n+futex_wait (int *addr, int val)\n+{\n+  long err = syscall (SYS_futex, addr, gomp_futex_wait, val);\n+  if (__builtin_expect (err == -ENOSYS, 0))\n+    {\n+      gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n+      gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n+      syscall (SYS_futex, addr, gomp_futex_wait, val);\n+    }\n+}\n+\n+static inline void\n+futex_wake (int *addr, int count)\n+{\n+  long err = syscall (SYS_futex, addr, gomp_futex_wake, count);\n+  if (__builtin_expect (err == -ENOSYS, 0))\n+    {\n+      gomp_futex_wait &= ~FUTEX_PRIVATE_FLAG;\n+      gomp_futex_wake &= ~FUTEX_PRIVATE_FLAG;\n+      syscall (SYS_futex, addr, gomp_futex_wake, count);\n+    }\n+}\n+\n+static inline void\n+cpu_relax (void)\n+{\n+  __asm volatile (\"\" : : : \"memory\");\n+}\n+\n+static inline void\n+atomic_write_barrier (void)\n+{\n+  __sync_synchronize ();\n+}"}, {"sha": "6ab9e4d9141bd2ecae26dc26c64b299c41941ae6", "filename": "libgomp/configure.tgt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d213e92e53c40f0ab53a6813c9284814f54c58c9/libgomp%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.tgt?ref=d213e92e53c40f0ab53a6813c9284814f54c58c9", "patch": "@@ -31,6 +31,10 @@ if test $enable_linux_futex = yes; then\n \tconfig_path=\"linux/alpha linux posix\"\n \t;;\n \n+    arm*-*-linux*)\n+\tconfig_path=\"linux/arm linux posix\"\n+\t;;\n+\n     ia64*-*-linux*)\n \tconfig_path=\"linux/ia64 linux posix\"\n \t;;"}]}