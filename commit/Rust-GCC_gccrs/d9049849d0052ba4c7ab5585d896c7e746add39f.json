{"sha": "d9049849d0052ba4c7ab5585d896c7e746add39f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwNDk4NDlkMDA1MmJhNGM3YWI1NTg1ZDg5NmM3ZTc0NmFkZDM5Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:40:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:40:48Z"}, "message": "[multiple changes]\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* s-secsta.adb (SS_Info): Add a comment\n\texplaining why we don't need to walk all the chunks in order to\n\tcompute the total size.\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* namet.ads, namet.adb (Global_Name_Buffer): Increase the length\n\tof the global name buffer to 4*Max_Line_Length.\n\n2017-04-25  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch8.adb (Expand_N_Object_Renaming_Declaration): When creating a\n\trenaming entity for debug information, mark the entity as needing debug\n\tinfo if it comes from sources.\n\n2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Remove the\n\trestriction converning the use of 'Address where the prefix is\n\tof a controlled type.\n\n2017-04-25  Pierre-Marie de Rodat  <derodat@adacore.com>\n\n\t* exp_dbug.adb: In Debug_Renaming_Declaration,\n\tskip slices that are made redundant by an indexed component\n\taccess.\n\t* atree.h: New definition for Original_Node.\n\nFrom-SVN: r247166", "tree": {"sha": "feb0e278249ba4e4be2b9c2dcd18ecd5c5e3f302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feb0e278249ba4e4be2b9c2dcd18ecd5c5e3f302"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9049849d0052ba4c7ab5585d896c7e746add39f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9049849d0052ba4c7ab5585d896c7e746add39f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9049849d0052ba4c7ab5585d896c7e746add39f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9049849d0052ba4c7ab5585d896c7e746add39f/comments", "author": null, "committer": null, "parents": [{"sha": "db78cb813401d088fb7ad35825f0bac9b9ef4754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db78cb813401d088fb7ad35825f0bac9b9ef4754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db78cb813401d088fb7ad35825f0bac9b9ef4754"}], "stats": {"total": 162, "additions": 98, "deletions": 64}, "files": [{"sha": "4e0d87301cc48dc317ea3a40515a947df357d010", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -1,3 +1,33 @@\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* s-secsta.adb (SS_Info): Add a comment\n+\texplaining why we don't need to walk all the chunks in order to\n+\tcompute the total size.\n+\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* namet.ads, namet.adb (Global_Name_Buffer): Increase the length\n+\tof the global name buffer to 4*Max_Line_Length.\n+\n+2017-04-25  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch8.adb (Expand_N_Object_Renaming_Declaration): When creating a\n+\trenaming entity for debug information, mark the entity as needing debug\n+\tinfo if it comes from sources.\n+\n+2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Remove the\n+\trestriction converning the use of 'Address where the prefix is\n+\tof a controlled type.\n+\n+2017-04-25  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* exp_dbug.adb: In Debug_Renaming_Declaration,\n+\tskip slices that are made redundant by an indexed component\n+\taccess.\n+\t* atree.h: New definition for Original_Node.\n+\n 2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb, sem_prag.ads: Minor reformatting."}, {"sha": "bad07652c68d47b1e9585cccf22b30fd579fb9eb", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -359,6 +359,9 @@ extern struct Node *Nodes_Ptr;\n #define Parent atree__parent\n extern Node_Id Parent (Node_Id);\n \n+#define Original_Node atree__original_node\n+extern Node_Id Original_Node (Node_Id);\n+\n /* The auxiliary flags array which is allocated in parallel to Nodes */\n \n struct Flags"}, {"sha": "7af33b361684b6db97406c44e496ae9a325189b4", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -187,7 +187,13 @@ package body Exp_Ch8 is\n          Make_Build_In_Place_Call_In_Anonymous_Context (Nam);\n       end if;\n \n-      --  Create renaming entry for debug information\n+      --  Create renaming entry for debug information. Mark the entity as\n+      --  needing debug info if it comes from sources because the current\n+      --  setting in Freeze_Entity occurs too late. ???\n+\n+      if Comes_From_Source (Defining_Identifier (N)) then\n+         Set_Debug_Info_Needed (Defining_Identifier (N));\n+      end if;\n \n       Decl := Debug_Renaming_Declaration (N);\n "}, {"sha": "3d0ccbde67e0465aa139e20a2b44662c7293a832", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 40, "deletions": 15, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -317,6 +317,9 @@ package body Exp_Dbug is\n       --    - when the renaming involves a packed array,\n       --    - when the renaming involves a packed record.\n \n+      Last_Is_Indexed_Comp : Boolean := False;\n+      --  Whether the last subscript value was an indexed component access (XS)\n+\n       procedure Enable_If_Packed_Array (N : Node_Id);\n       --  Enable encoding generation if N is a packed array\n \n@@ -378,16 +381,24 @@ package body Exp_Dbug is\n       Name_Len := 0;\n       Ren := Nam;\n       loop\n+         --  The expression that designates the renamed object is sometimes\n+         --  expanded into bit-wise operations. We want to work instead on\n+         --  array/record components accesses, so try to analyze the unexpanded\n+         --  forms.\n+\n+         Ren := Original_Node (Ren);\n+\n          case Nkind (Ren) is\n-            when N_Identifier =>\n-               exit;\n+            when N_Identifier | N_Expanded_Name =>\n \n-            when N_Expanded_Name =>\n+               if not Present (Renamed_Object (Entity (Ren))) then\n+                  exit;\n+               end if;\n \n-               --  The entity field for an N_Expanded_Name is on the expanded\n-               --  name node itself, so we are done here too.\n+               --  This is a renaming of a renaming: traverse until the\n+               --  final renaming to see if anything is packed on the way.\n \n-               exit;\n+               Ren := Renamed_Object (Entity (Ren));\n \n             when N_Selected_Component =>\n                declare\n@@ -408,6 +419,7 @@ package body Exp_Dbug is\n                  (Get_Name_String (Chars (Selector_Name (Ren))));\n                Prepend_String_To_Buffer (\"XR\");\n                Ren := Prefix (Ren);\n+               Last_Is_Indexed_Comp := False;\n \n             when N_Indexed_Component =>\n                declare\n@@ -424,30 +436,43 @@ package body Exp_Dbug is\n                      end if;\n \n                      Prev (X);\n+                     Last_Is_Indexed_Comp := True;\n                   end loop;\n                end;\n \n                Ren := Prefix (Ren);\n \n             when N_Slice =>\n-               Enable_If_Packed_Array (Prefix (Ren));\n-               Typ := Etype (First_Index (Etype (Nam)));\n+               --  Assuming X is an array:\n+               --      X (Y1 .. Y2) (Y3)\n+               --  is equivalent to:\n+               --      X (Y3)\n+               --  GDB cannot handle packed array slices, so avoid to describe\n+               --  the slice if we can avoid it.\n+\n+               if not Last_Is_Indexed_Comp then\n+                  Enable_If_Packed_Array (Prefix (Ren));\n+                  Typ := Etype (First_Index (Etype (Ren)));\n \n-               if not Output_Subscript (Type_High_Bound (Typ), \"XS\") then\n-                  Set_Materialize_Entity (Ent);\n-                  return Empty;\n-               end if;\n+                  if not Output_Subscript (Type_High_Bound (Typ), \"XS\") then\n+                     Set_Materialize_Entity (Ent);\n+                     return Empty;\n+                  end if;\n+\n+                  if not Output_Subscript (Type_Low_Bound  (Typ), \"XL\") then\n+                     Set_Materialize_Entity (Ent);\n+                     return Empty;\n+                  end if;\n \n-               if not Output_Subscript (Type_Low_Bound  (Typ), \"XL\") then\n-                  Set_Materialize_Entity (Ent);\n-                  return Empty;\n+                  Last_Is_Indexed_Comp := False;\n                end if;\n \n                Ren := Prefix (Ren);\n \n             when N_Explicit_Dereference =>\n                Prepend_String_To_Buffer (\"XA\");\n                Ren := Prefix (Ren);\n+               Last_Is_Indexed_Comp := False;\n \n             --  For now, anything else simply results in no translation\n "}, {"sha": "6e5990957711257a18443bced9c23269083ab511", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -116,6 +116,9 @@ package body Namet is\n    procedure Append (Buf : in out Bounded_String; C : Character) is\n    begin\n       if Buf.Length >= Buf.Chars'Last then\n+         Write_Str (\"Name buffer overflow; Max_Length = \");\n+         Write_Int (Int (Buf.Max_Length));\n+         Write_Line (\"\");\n          raise Program_Error;\n       end if;\n "}, {"sha": "0778ebecbfd37230e0f0502ce3a15b0c6588b483", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -30,6 +30,7 @@\n ------------------------------------------------------------------------------\n \n with Alloc;\n+with Hostparm; use Hostparm;\n with Table;\n with System;   use System;\n with Types;    use Types;\n@@ -165,7 +166,7 @@ package Namet is\n    --  which is used by most of the code via the renamings. New code ought\n    --  to avoid the global.\n \n-   Global_Name_Buffer : Bounded_String;\n+   Global_Name_Buffer : Bounded_String (Max_Length => 4 * Max_Line_Length);\n    Name_Buffer        : String renames Global_Name_Buffer.Chars;\n    Name_Len           : Natural renames Global_Name_Buffer.Length;\n "}, {"sha": "1cb1b1b9782b4b2c7b76de7071f0e64f0cbf589c", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -368,13 +368,11 @@ package body System.Secondary_Stack is\n                             To_Fixed_Stack_Ptr (SSL.Get_Sec_Stack_Addr.all);\n \n          begin\n-            Put_Line (\n-                      \"  Total size              : \"\n+            Put_Line (\"  Total size              : \"\n                       & SS_Ptr'Image (Fixed_Stack.Last)\n                       & \" bytes\");\n \n-            Put_Line (\n-                      \"  Current allocated space : \"\n+            Put_Line (\"  Current allocated space : \"\n                       & SS_Ptr'Image (Fixed_Stack.Top)\n                       & \" bytes\");\n          end;\n@@ -400,22 +398,22 @@ package body System.Secondary_Stack is\n \n             --  Current Chunk information\n \n-            Put_Line (\n-                      \"  Total size              : \"\n+            --  Note that First of each chunk is one more than Last of the\n+            --  previous one, so Chunk.Last is the total size of all chunks; we\n+            --  don't need to walk all the chunks to compute the total size.\n+\n+            Put_Line (\"  Total size              : \"\n                       & SS_Ptr'Image (Chunk.Last)\n                       & \" bytes\");\n \n-            Put_Line (\n-                      \"  Current allocated space : \"\n+            Put_Line (\"  Current allocated space : \"\n                       & SS_Ptr'Image (Stack.Top - 1)\n                       & \" bytes\");\n \n-            Put_Line (\n-                      \"  Number of Chunks       : \"\n+            Put_Line (\"  Number of Chunks       : \"\n                       & Integer'Image (Nb_Chunks));\n \n-            Put_Line (\n-                      \"  Default size of Chunks : \"\n+            Put_Line (\"  Default size of Chunks : \"\n                       & SSE.Storage_Count'Image (Stack.Default_Size));\n          end;\n       end if;"}, {"sha": "5be65af3d8f2708ed7b9301d1cf4ae5df5e5a312", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 35, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9049849d0052ba4c7ab5585d896c7e746add39f/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d9049849d0052ba4c7ab5585d896c7e746add39f", "patch": "@@ -4887,21 +4887,6 @@ package body Sem_Ch13 is\n                     (\"\\?j?use interrupt procedure instead\", N);\n                end if;\n \n-            --  Case of an address clause for a controlled object, which we\n-            --  consider to be erroneous.\n-\n-            elsif Is_Controlled (Etype (U_Ent))\n-              or else Has_Controlled_Component (Etype (U_Ent))\n-            then\n-               Error_Msg_NE\n-                 (\"??controlled object & must not be overlaid\", Nam, U_Ent);\n-               Error_Msg_N\n-                 (\"\\??Program_Error will be raised at run time\", Nam);\n-               Insert_Action (Declaration_Node (U_Ent),\n-                 Make_Raise_Program_Error (Loc,\n-                   Reason => PE_Overlaid_Controlled_Object));\n-               return;\n-\n             --  Case of an address clause for a class-wide object, which is\n             --  considered erroneous.\n \n@@ -4915,9 +4900,9 @@ package body Sem_Ch13 is\n                    Reason => PE_Overlaid_Controlled_Object));\n                return;\n \n-            --  Case of address clause for a (non-controlled) object\n+            --  Case of address clause for an object\n \n-            elsif Ekind_In (U_Ent, E_Variable, E_Constant) then\n+            elsif Ekind_In (U_Ent, E_Constant, E_Variable) then\n                declare\n                   Expr  : constant Node_Id := Expression (N);\n                   O_Ent : Entity_Id;\n@@ -5006,28 +4991,11 @@ package body Sem_Ch13 is\n                      end;\n                   end if;\n \n-                  --  Overlaying controlled objects is erroneous. Emit warning\n-                  --  but continue analysis because program is itself legal,\n-                  --  and back end must see address clause.\n-\n-                  if Present (O_Ent)\n-                    and then (Has_Controlled_Component (Etype (O_Ent))\n-                               or else Is_Controlled (Etype (O_Ent)))\n-                    and then not Inside_A_Generic\n-                  then\n-                     Error_Msg_N\n-                       (\"??cannot use overlays with controlled objects\", Expr);\n-                     Error_Msg_N\n-                       (\"\\??Program_Error will be raised at run time\", Expr);\n-                     Insert_Action (Declaration_Node (U_Ent),\n-                       Make_Raise_Program_Error (Loc,\n-                         Reason => PE_Overlaid_Controlled_Object));\n-\n                   --  Issue an unconditional warning for a constant overlaying\n                   --  a variable. For the reverse case, we will issue it only\n                   --  if the variable is modified.\n \n-                  elsif Ekind (U_Ent) = E_Constant\n+                  if Ekind (U_Ent) = E_Constant\n                     and then Present (O_Ent)\n                     and then not Overlays_Constant (U_Ent)\n                     and then Address_Clause_Overlay_Warnings"}]}