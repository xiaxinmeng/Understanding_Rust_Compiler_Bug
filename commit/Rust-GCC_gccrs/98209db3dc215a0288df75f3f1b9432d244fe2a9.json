{"sha": "98209db3dc215a0288df75f3f1b9432d244fe2a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgyMDlkYjNkYzIxNWEwMjg4ZGY3NWYzZjFiOTQzMmQyNDRmZTJhOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-05-20T11:46:00Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-05-20T11:46:00Z"}, "message": "expr.c (expand_cond_expr_using_cmove): Use COMPARISON_CLASS_P.\n\n\t* expr.c (expand_cond_expr_using_cmove): Use COMPARISON_CLASS_P.\n\t* gimple-expr.c (gimple_cond_get_ops_from_tree): Likewise.\n\t* gimple-fold.c (canonicalize_bool): Likewise.\n\t(same_bool_result_p): Likewise.\n\t* tree-if-conv.c (parse_predicate): Likewise.\n\nFrom-SVN: r223441", "tree": {"sha": "db5e1f56ccd24866a033b514489ec79e8223c341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db5e1f56ccd24866a033b514489ec79e8223c341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98209db3dc215a0288df75f3f1b9432d244fe2a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98209db3dc215a0288df75f3f1b9432d244fe2a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98209db3dc215a0288df75f3f1b9432d244fe2a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98209db3dc215a0288df75f3f1b9432d244fe2a9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a65ee74e89fb6bc423e32be8aca2bdbedefc98b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a65ee74e89fb6bc423e32be8aca2bdbedefc98b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a65ee74e89fb6bc423e32be8aca2bdbedefc98b"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "701b7590c415191c08b9d66decb314b47499bc84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98209db3dc215a0288df75f3f1b9432d244fe2a9", "patch": "@@ -1,3 +1,11 @@\n+2015-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\t* expr.c (expand_cond_expr_using_cmove): Use COMPARISON_CLASS_P.\n+\t* gimple-expr.c (gimple_cond_get_ops_from_tree): Likewise.\n+\t* gimple-fold.c (canonicalize_bool): Likewise.\n+\t(same_bool_result_p): Likewise.\n+\t* tree-if-conv.c (parse_predicate): Likewise.\n+\n 2015-05-20  Marek Polacek  <polacek@redhat.com>\n \n \t* gimple-fold.c (fold_const_aggregate_ref_1): Use DECL_P."}, {"sha": "cf3380858589128e7b750f236fc7dbd3085c0faf", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=98209db3dc215a0288df75f3f1b9432d244fe2a9", "patch": "@@ -8073,7 +8073,7 @@ expand_cond_expr_using_cmove (tree treeop0 ATTRIBUTE_UNUSED,\n       unsignedp = TYPE_UNSIGNED (type);\n       comparison_code = convert_tree_comp_to_rtx (cmpcode, unsignedp);\n     }\n-  else if (TREE_CODE_CLASS (TREE_CODE (treeop0)) == tcc_comparison)\n+  else if (COMPARISON_CLASS_P (treeop0))\n     {\n       tree type = TREE_TYPE (TREE_OPERAND (treeop0, 0));\n       enum tree_code cmpcode = TREE_CODE (treeop0);"}, {"sha": "4d683d6d7e4e66e29a8e623663a90807cc5233b6", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=98209db3dc215a0288df75f3f1b9432d244fe2a9", "patch": "@@ -607,7 +607,7 @@ void\n gimple_cond_get_ops_from_tree (tree cond, enum tree_code *code_p,\n                                tree *lhs_p, tree *rhs_p)\n {\n-  gcc_assert (TREE_CODE_CLASS (TREE_CODE (cond)) == tcc_comparison\n+  gcc_assert (COMPARISON_CLASS_P (cond)\n \t      || TREE_CODE (cond) == TRUTH_NOT_EXPR\n \t      || is_gimple_min_invariant (cond)\n \t      || SSA_VAR_P (cond));"}, {"sha": "c91f218c218ca4a90d1b9ef403f0a7ae1b2908ee", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=98209db3dc215a0288df75f3f1b9432d244fe2a9", "patch": "@@ -3846,7 +3846,7 @@ canonicalize_bool (tree expr, bool invert)\n       else if (TREE_CODE (expr) == SSA_NAME)\n \treturn fold_build2 (EQ_EXPR, boolean_type_node, expr,\n \t\t\t    build_int_cst (TREE_TYPE (expr), 0));\n-      else if (TREE_CODE_CLASS (TREE_CODE (expr)) == tcc_comparison)\n+      else if (COMPARISON_CLASS_P (expr))\n \treturn fold_build2 (invert_tree_comparison (TREE_CODE (expr), false),\n \t\t\t    boolean_type_node,\n \t\t\t    TREE_OPERAND (expr, 0),\n@@ -3865,7 +3865,7 @@ canonicalize_bool (tree expr, bool invert)\n       else if (TREE_CODE (expr) == SSA_NAME)\n \treturn fold_build2 (NE_EXPR, boolean_type_node, expr,\n \t\t\t    build_int_cst (TREE_TYPE (expr), 0));\n-      else if (TREE_CODE_CLASS (TREE_CODE (expr)) == tcc_comparison)\n+      else if (COMPARISON_CLASS_P (expr))\n \treturn fold_build2 (TREE_CODE (expr),\n \t\t\t    boolean_type_node,\n \t\t\t    TREE_OPERAND (expr, 0),\n@@ -3946,12 +3946,12 @@ same_bool_result_p (const_tree op1, const_tree op2)\n   /* Check the cases where at least one of the operands is a comparison.\n      These are a bit smarter than operand_equal_p in that they apply some\n      identifies on SSA_NAMEs.  */\n-  if (TREE_CODE_CLASS (TREE_CODE (op2)) == tcc_comparison\n+  if (COMPARISON_CLASS_P (op2)\n       && same_bool_comparison_p (op1, TREE_CODE (op2),\n \t\t\t\t TREE_OPERAND (op2, 0),\n \t\t\t\t TREE_OPERAND (op2, 1)))\n     return true;\n-  if (TREE_CODE_CLASS (TREE_CODE (op1)) == tcc_comparison\n+  if (COMPARISON_CLASS_P (op1)\n       && same_bool_comparison_p (op2, TREE_CODE (op1),\n \t\t\t\t TREE_OPERAND (op1, 0),\n \t\t\t\t TREE_OPERAND (op1, 1)))"}, {"sha": "a85c7a24180d0701109ee8f5f619172ad49352d1", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98209db3dc215a0288df75f3f1b9432d244fe2a9/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=98209db3dc215a0288df75f3f1b9432d244fe2a9", "patch": "@@ -339,7 +339,7 @@ parse_predicate (tree cond, tree *op0, tree *op1)\n       return ERROR_MARK;\n     }\n \n-  if (TREE_CODE_CLASS (TREE_CODE (cond)) == tcc_comparison)\n+  if (COMPARISON_CLASS_P (cond))\n     {\n       *op0 = TREE_OPERAND (cond, 0);\n       *op1 = TREE_OPERAND (cond, 1);"}]}