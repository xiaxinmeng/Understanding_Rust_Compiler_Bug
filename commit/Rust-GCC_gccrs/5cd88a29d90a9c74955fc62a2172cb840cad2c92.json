{"sha": "5cd88a29d90a9c74955fc62a2172cb840cad2c92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNkODhhMjlkOTBhOWM3NDk1NWZjNjJhMjE3MmNiODQwY2FkMmM5Mg==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "1997-06-21T04:29:48Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "1997-06-21T04:29:48Z"}, "message": "update from main archive 970620\n\nFrom-SVN: r14271", "tree": {"sha": "2a2417a5d7725aa8ad4bbd9abdcf9c8e5f507037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a2417a5d7725aa8ad4bbd9abdcf9c8e5f507037"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cd88a29d90a9c74955fc62a2172cb840cad2c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd88a29d90a9c74955fc62a2172cb840cad2c92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd88a29d90a9c74955fc62a2172cb840cad2c92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd88a29d90a9c74955fc62a2172cb840cad2c92/comments", "author": null, "committer": null, "parents": [{"sha": "bc6812982b67d9e0ad489fe7fa3c5217093aa846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc6812982b67d9e0ad489fe7fa3c5217093aa846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc6812982b67d9e0ad489fe7fa3c5217093aa846"}], "stats": {"total": 232, "additions": 232, "deletions": 0}, "files": [{"sha": "dd4fbf0e8befed8b66ff8f5c4b7dfe6a18fd18f8", "filename": "gcc/stab.def", "status": "added", "additions": 232, "deletions": 0, "changes": 232, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd88a29d90a9c74955fc62a2172cb840cad2c92/gcc%2Fstab.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd88a29d90a9c74955fc62a2172cb840cad2c92/gcc%2Fstab.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstab.def?ref=5cd88a29d90a9c74955fc62a2172cb840cad2c92", "patch": "@@ -0,0 +1,232 @@\n+/* Table of DBX symbol codes for the GNU system.\n+   Copyright (C) 1988 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 1, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This contains contribution from Cygnus Support.  */\n+\f\n+/* Global variable.  Only the name is significant.\n+   To find the address, look in the corresponding external symbol.  */\n+__define_stab (N_GSYM, 0x20, \"GSYM\")\n+\n+/* Function name for BSD Fortran.  Only the name is significant.\n+   To find the address, look in the corresponding external symbol.  */\n+__define_stab (N_FNAME, 0x22, \"FNAME\")\n+\n+/* Function name or text-segment variable for C.  Value is its address.\n+   Desc is supposedly starting line number, but GCC doesn't set it\n+   and DBX seems not to miss it.  */\n+__define_stab (N_FUN, 0x24, \"FUN\")\n+\n+/* Data-segment variable with internal linkage.  Value is its address.\n+   \"Static Sym\".  */\n+__define_stab (N_STSYM, 0x26, \"STSYM\")\n+\n+/* BSS-segment variable with internal linkage.  Value is its address.  */\n+__define_stab (N_LCSYM, 0x28, \"LCSYM\")\n+\n+/* Name of main routine.  Only the name is significant.\n+   This is not used in C.  */\n+__define_stab (N_MAIN, 0x2a, \"MAIN\")\n+\n+/* Global symbol in Pascal.\n+   Supposedly the value is its line number; I'm skeptical.  */\n+__define_stab (N_PC, 0x30, \"PC\")\n+\n+/* Number of symbols:  0, files,,funcs,lines according to Ultrix V4.0. */\n+__define_stab (N_NSYMS, 0x32, \"NSYMS\")\n+\n+/* \"No DST map for sym: name, ,0,type,ignored\"  according to Ultrix V4.0. */\n+__define_stab (N_NOMAP, 0x34, \"NOMAP\")\n+\n+/* New stab from Solaris.  I don't know what it means, but it\n+   don't seem to contain useful information.  */\n+__define_stab (N_OBJ, 0x38, \"OBJ\")\n+\n+/* New stab from Solaris.  I don't know what it means, but it\n+   don't seem to contain useful information.  Possibly related to the\n+   optimization flags used in this module.  */\n+__define_stab (N_OPT, 0x3c, \"OPT\")\n+\n+/* Register variable.  Value is number of register.  */\n+__define_stab (N_RSYM, 0x40, \"RSYM\")\n+\n+/* Modula-2 compilation unit.  Can someone say what info it contains?  */\n+__define_stab (N_M2C, 0x42, \"M2C\")\n+\n+/* Line number in text segment.  Desc is the line number;\n+   value is corresponding address.  */\n+__define_stab (N_SLINE, 0x44, \"SLINE\")\n+\n+/* Similar, for data segment.  */\n+__define_stab (N_DSLINE, 0x46, \"DSLINE\")\n+\n+/* Similar, for bss segment.  */\n+__define_stab (N_BSLINE, 0x48, \"BSLINE\")\n+\n+/* Sun's source-code browser stabs.  ?? Don't know what the fields are.\n+   Supposedly the field is \"path to associated .cb file\".  THIS VALUE\n+   OVERLAPS WITH N_BSLINE!  */\n+__define_stab (N_BROWS, 0x48, \"BROWS\")\n+\n+/* GNU Modula-2 definition module dependency.  Value is the modification time\n+   of the definition file.  Other is non-zero if it is imported with the\n+   GNU M2 keyword %INITIALIZE.  Perhaps N_M2C can be used if there\n+   are enough empty fields? */\n+__define_stab(N_DEFD, 0x4a, \"DEFD\")\n+\n+/* THE FOLLOWING TWO STAB VALUES CONFLICT.  Happily, one is for Modula-2\n+   and one is for C++.   Still,... */\n+/* GNU C++ exception variable.  Name is variable name.  */\n+__define_stab (N_EHDECL, 0x50, \"EHDECL\")\n+/* Modula2 info \"for imc\":  name,,0,0,0  according to Ultrix V4.0.  */\n+__define_stab (N_MOD2, 0x50, \"MOD2\")\n+\n+/* GNU C++ `catch' clause.  Value is its address.  Desc is nonzero if\n+   this entry is immediately followed by a CAUGHT stab saying what exception\n+   was caught.  Multiple CAUGHT stabs means that multiple exceptions\n+   can be caught here.  If Desc is 0, it means all exceptions are caught\n+   here.  */\n+__define_stab (N_CATCH, 0x54, \"CATCH\")\n+\n+/* Structure or union element.  Value is offset in the structure.  */\n+__define_stab (N_SSYM, 0x60, \"SSYM\")\n+\n+/* Name of main source file.\n+   Value is starting text address of the compilation.  */\n+__define_stab (N_SO, 0x64, \"SO\")\n+\n+/* Automatic variable in the stack.  Value is offset from frame pointer.\n+   Also used for type descriptions.  */\n+__define_stab (N_LSYM, 0x80, \"LSYM\")\n+\n+/* Beginning of an include file.  Only Sun uses this.\n+   In an object file, only the name is significant.\n+   The Sun linker puts data into some of the other fields.  */\n+__define_stab (N_BINCL, 0x82, \"BINCL\")\n+\n+/* Name of sub-source file (#include file).\n+   Value is starting text address of the compilation.  */\n+__define_stab (N_SOL, 0x84, \"SOL\")\n+\n+/* Parameter variable.  Value is offset from argument pointer.\n+   (On most machines the argument pointer is the same as the frame pointer.  */\n+__define_stab (N_PSYM, 0xa0, \"PSYM\")\n+\n+/* End of an include file.  No name.\n+   This and N_BINCL act as brackets around the file's output.\n+   In an object file, there is no significant data in this entry.\n+   The Sun linker puts data into some of the fields.  */\n+__define_stab (N_EINCL, 0xa2, \"EINCL\")\n+\n+/* Alternate entry point.  Value is its address.  */\n+__define_stab (N_ENTRY, 0xa4, \"ENTRY\")\n+\n+/* Beginning of lexical block.\n+   The desc is the nesting level in lexical blocks.\n+   The value is the address of the start of the text for the block.\n+   The variables declared inside the block *precede* the N_LBRAC symbol.  */\n+__define_stab (N_LBRAC, 0xc0, \"LBRAC\")\n+\n+/* Place holder for deleted include file.  Replaces a N_BINCL and everything\n+   up to the corresponding N_EINCL.  The Sun linker generates these when\n+   it finds multiple identical copies of the symbols from an include file.\n+   This appears only in output from the Sun linker.  */\n+__define_stab (N_EXCL, 0xc2, \"EXCL\")\n+\n+/* Modula-2 scope information.  Can someone say what info it contains?  */\n+__define_stab (N_SCOPE, 0xc4, \"SCOPE\")\n+\n+/* End of a lexical block.  Desc matches the N_LBRAC's desc.\n+   The value is the address of the end of the text for the block.  */\n+__define_stab (N_RBRAC, 0xe0, \"RBRAC\")\n+\n+/* Begin named common block.  Only the name is significant.  */\n+__define_stab (N_BCOMM, 0xe2, \"BCOMM\")\n+\n+/* End named common block.  Only the name is significant\n+   (and it should match the N_BCOMM).  */\n+__define_stab (N_ECOMM, 0xe4, \"ECOMM\")\n+\n+/* End common (local name): value is address.\n+   I'm not sure how this is used.  */\n+__define_stab (N_ECOML, 0xe8, \"ECOML\")\n+\n+/* These STAB's are used on Gould systems for Non-Base register symbols\n+   or something like that.  FIXME.  I have assigned the values at random\n+   since I don't have a Gould here.  Fixups from Gould folk welcome... */\n+__define_stab (N_NBTEXT, 0xF0, \"NBTEXT\")\n+__define_stab (N_NBDATA, 0xF2, \"NBDATA\")\n+__define_stab (N_NBBSS,  0xF4, \"NBBSS\")\n+__define_stab (N_NBSTS,  0xF6, \"NBSTS\")\n+__define_stab (N_NBLCS,  0xF8, \"NBLCS\")\n+\n+/* Second symbol entry containing a length-value for the preceding entry.\n+   The value is the length.  */\n+__define_stab (N_LENG, 0xfe, \"LENG\")\n+\f\n+/* The above information, in matrix format.\n+\n+\t\t\tSTAB MATRIX\n+\t_________________________________________________\n+\t| 00 - 1F are not dbx stab symbols\t\t|\n+\t| In most cases, the low bit is the EXTernal bit|\n+\n+\t| 00 UNDEF  | 02 ABS\t| 04 TEXT   | 06 DATA\t|\n+\t| 01  |EXT  | 03  |EXT\t| 05  |EXT  | 07  |EXT\t|\n+\n+\t| 08 BSS    | 0A INDR\t| 0C FN_SEQ | 0E   \t|\n+\t| 09  |EXT  | 0B \t| 0D\t    | 0F\t|\n+\n+\t| 10 \t    | 12 COMM\t| 14 SETA   | 16 SETT\t|\n+\t| 11\t    | 13\t| 15 \t    | 17\t|\n+\n+\t| 18 SETD   | 1A SETB\t| 1C SETV   | 1E WARNING|\n+\t| 19\t    | 1B\t| 1D \t    | 1F FN\t|\n+\n+\t|_______________________________________________|\n+\t| Debug entries with bit 01 set are unused.\t|\n+\t| 20 GSYM   | 22 FNAME\t| 24 FUN    | 26 STSYM\t|\n+\t| 28 LCSYM  | 2A MAIN\t| 2C\t    | 2E\t|\n+\t| 30 PC\t    | 32 NSYMS\t| 34 NOMAP  | 36\t|\n+\t| 38 OBJ    | 3A\t| 3C OPT    | 3E\t|\n+\t| 40 RSYM   | 42 M2C\t| 44 SLINE  | 46 DSLINE |\n+\t| 48 BSLINE*| 4A DEFD\t| 4C        | 4E\t|\n+\t| 50 EHDECL*| 52\t| 54 CATCH  | 56        |\n+\t| 58        | 5A        | 5C        | 5E\t|\n+\t| 60 SSYM   | 62\t| 64 SO\t    | 66 \t|\n+\t| 68 \t    | 6A\t| 6C\t    | 6E\t|\n+\t| 70\t    | 72\t| 74\t    | 76\t|\n+\t| 78\t    | 7A\t| 7C\t    | 7E\t|\n+\t| 80 LSYM   | 82 BINCL\t| 84 SOL    | 86\t|\n+\t| 88\t    | 8A\t| 8C\t    | 8E\t|\n+\t| 90\t    | 92\t| 94\t    | 96\t|\n+\t| 98\t    | 9A\t| 9C\t    | 9E\t|\n+\t| A0 PSYM   | A2 EINCL\t| A4 ENTRY  | A6\t|\n+\t| A8\t    | AA\t| AC\t    | AE\t|\n+\t| B0\t    | B2\t| B4\t    | B6\t|\n+\t| B8\t    | BA\t| BC\t    | BE\t|\n+\t| C0 LBRAC  | C2 EXCL\t| C4 SCOPE  | C6\t|\n+\t| C8\t    | CA\t| CC\t    | CE\t|\n+\t| D0\t    | D2\t| D4\t    | D6\t|\n+\t| D8\t    | DA\t| DC\t    | DE\t|\n+\t| E0 RBRAC  | E2 BCOMM\t| E4 ECOMM  | E6\t|\n+\t| E8 ECOML  | EA\t| EC\t    | EE\t|\n+\t| F0\t    | F2\t| F4\t    | F6\t|\n+\t| F8\t    | FA\t| FC\t    | FE LENG\t|\n+\t+-----------------------------------------------+\n+ * 50 EHDECL is also MOD2.\n+ * 48 BSLINE is also BROWS.\n+ */"}]}