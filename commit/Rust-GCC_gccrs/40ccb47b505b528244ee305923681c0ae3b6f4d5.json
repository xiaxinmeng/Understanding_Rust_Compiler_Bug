{"sha": "40ccb47b505b528244ee305923681c0ae3b6f4d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBjY2I0N2I1MDViNTI4MjQ0ZWUzMDU5MjM2ODFjMGFlM2I2ZjRkNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-09T11:05:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-09T12:09:24Z"}, "message": "libstdc++: Fix invalid constexpr function in C++11 mode [PR 99985]\n\nI keep forgetting that a constexpr function in C++11 has to be a single\nreturn statement.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/99985\n\t* include/bits/hashtable.h (_Hashtable::_S_nothrow_move()): Fix\n\tto be a valid constexpr function in C++11.\n\t* testsuite/23_containers/unordered_set/cons/99985.cc: New test.", "tree": {"sha": "62953d42d3a187906e35d20d2dbd0f09760efb26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62953d42d3a187906e35d20d2dbd0f09760efb26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40ccb47b505b528244ee305923681c0ae3b6f4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ccb47b505b528244ee305923681c0ae3b6f4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ccb47b505b528244ee305923681c0ae3b6f4d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ccb47b505b528244ee305923681c0ae3b6f4d5/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ddd861d3881eba141c41c1ccbb4e8b3be159a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ddd861d3881eba141c41c1ccbb4e8b3be159a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ddd861d3881eba141c41c1ccbb4e8b3be159a5"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "6711d08e6b891d82a834a49e0567ab8146093858", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40ccb47b505b528244ee305923681c0ae3b6f4d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40ccb47b505b528244ee305923681c0ae3b6f4d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=40ccb47b505b528244ee305923681c0ae3b6f4d5", "patch": "@@ -476,10 +476,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tstatic constexpr bool\n \t_S_nothrow_move()\n \t{\n-\t  if _GLIBCXX17_CONSTEXPR (_No_realloc)\n-\t    if _GLIBCXX17_CONSTEXPR (is_nothrow_copy_constructible<_Hash>())\n+#if __cplusplus <= 201402L\n+\t  return __and_<__bool_constant<_No_realloc>,\n+\t\t\tis_nothrow_copy_constructible<_Hash>,\n+\t\t\tis_nothrow_copy_constructible<_Equal>>::value;\n+#else\n+\t  if constexpr (_No_realloc)\n+\t    if constexpr (is_nothrow_copy_constructible<_Hash>())\n \t      return is_nothrow_copy_constructible<_Equal>();\n \t  return false;\n+#endif\n \t}\n \n       _Hashtable(_Hashtable&& __ht, __node_alloc_type&& __a,"}, {"sha": "b209f7627f58cf143c1bc4416dfb569366e50077", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/cons/99985.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40ccb47b505b528244ee305923681c0ae3b6f4d5/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2F99985.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40ccb47b505b528244ee305923681c0ae3b6f4d5/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2F99985.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2F99985.cc?ref=40ccb47b505b528244ee305923681c0ae3b6f4d5", "patch": "@@ -0,0 +1,47 @@\n+// Copyright (C) 2021 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n+\n+#include <unordered_set>\n+#include <testsuite_allocator.h>\n+\n+template<typename Alloc, typename T = typename Alloc::value_type>\n+  using Set = std::unordered_set<T, std::hash<T>, std::equal_to<T>, Alloc>;\n+\n+// PR libstdc++/99985 - invalid constexpr function in C++11 mode\n+\n+void\n+test01()\n+{\n+  using A = std::allocator<int>;\n+  A a;\n+  Set<A> s;\n+  static_assert( noexcept( Set<A>(std::move(s)) ), \"non-throwing\" );\n+  static_assert( noexcept( Set<A>(std::move(s), a) ), \"non-throwing\" );\n+}\n+\n+void\n+test02()\n+{\n+  using A = __gnu_test::uneq_allocator<long>;\n+  A a;\n+  Set<A> s;\n+  static_assert( noexcept( Set<A>(std::move(s)) ), \"non-throwing\" );\n+  static_assert( ! noexcept( Set<A>(std::move(s), a) ), \"throwing\" );\n+}"}]}