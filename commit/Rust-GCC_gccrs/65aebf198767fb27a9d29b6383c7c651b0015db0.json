{"sha": "65aebf198767fb27a9d29b6383c7c651b0015db0", "node_id": "C_kwDOANBUbNoAKDY1YWViZjE5ODc2N2ZiMjdhOWQyOWI2MzgzYzdjNjUxYjAwMTVkYjA", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-05-28T10:55:00Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-05-28T10:55:00Z"}, "message": "Darwin: Amend REAL_LIBGCC_SPEC comment [NFC].\n\nThis comment had got out of sync with reality, partly due to merging\nof patches.  Updated to reflect the current implementation.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/ChangeLog:\n\n\t* config/darwin.h (REAL_LIBGCC_SPEC): Update the comment block\n\tdescribing this macro.", "tree": {"sha": "3e9dbd61cb8b25d4d9e05cb6367e1fb54fcad640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e9dbd61cb8b25d4d9e05cb6367e1fb54fcad640"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65aebf198767fb27a9d29b6383c7c651b0015db0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65aebf198767fb27a9d29b6383c7c651b0015db0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65aebf198767fb27a9d29b6383c7c651b0015db0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65aebf198767fb27a9d29b6383c7c651b0015db0/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "163fa9a6483857f16053c426a001bd9f9fa89ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/163fa9a6483857f16053c426a001bd9f9fa89ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/163fa9a6483857f16053c426a001bd9f9fa89ae4"}], "stats": {"total": 38, "additions": 13, "deletions": 25}, "files": [{"sha": "b73e12372d8021e62a92f3fa3fee938114a049f0", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 13, "deletions": 25, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65aebf198767fb27a9d29b6383c7c651b0015db0/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65aebf198767fb27a9d29b6383c7c651b0015db0/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=65aebf198767fb27a9d29b6383c7c651b0015db0", "patch": "@@ -465,48 +465,36 @@ extern GTY(()) int darwin_ms_struct;\n \n #define LIB_SPEC \"%{!static:-lSystem}\"\n \n-/*\n-   Note that by default, -lgcc_eh is not linked against.\n-   This is because,in general, we need to unwind through system libraries that\n-   are linked with the shared unwinder in libunwind (or libgcc_s for 10.4/5).\n+/* Note that by default, -lgcc_eh (which provides a statically-linked unwinder)\n+   is not used. This is because, in general, we need to unwind through system\n+   libraries that are linked with the shared unwinder in libunwind (or libgcc_s\n+   for OSX 10.4/5 [darwin8/9]).\n \n-   For -static-libgcc: < 10.6, use the unwinder in libgcc_eh (and find\n-   the emultls impl. there too).\n+   When -static-libgcc is forced: < 10.6, use the unwinder in libgcc_eh (and\n+   find the emultls impl. there too).\n \n    For -static-libgcc: >= 10.6, the unwinder *still* comes from libSystem and\n    we find the emutls impl from lemutls_w. In either case, the builtins etc.\n-   are linked from -lgcc.\n+   are linked from -lgcc.  The eh library is still available so that it could\n+   be specified explicitly if there is some reason to do so.\n \n    When we have specified shared-libgcc or any case that might require\n    exceptions, we pull the libgcc content (including emulated tls) from\n-   -lgcc_s.1 in GCC and the unwinder from /usr/lib/libgcc_s.1 for < 10.6 and\n+   -lgcc_s.1.1 in GCC and the unwinder from /usr/lib/libgcc_s.1 for < 10.6 and\n    libSystem for >= 10.6 respectively.\n    Otherwise, we just link the emutls/builtins from convenience libs.\n \n-   If we need exceptions, prior to 10.3.9, then we have to link the static\n-   eh lib, since there's no shared version on the system.\n-\n-   In all cases, libgcc_s.1 will be installed with the compiler, or any app\n-   built using it, so we can link the builtins and emutls shared on all.\n-\n    We have to work around that DYLD_XXXX are disabled in macOS 10.11+ which\n    means that any bootstrap trying to use a shared libgcc with a bumped SO-\n    name will fail.  This means that we do not accept shared libgcc for these\n-   versions.\n+   versions (the primary reason for forcing a shared libgcc was that it\n+   contained the unwinder on Darwin8 and 9).\n \n-   For -static-libgcc: >= 10.6, the unwinder *still* comes from libSystem and\n-   we find the emutls impl from lemutls_w. In either case, the builtins etc.\n-   are linked from -lgcc.\n->\n-   Otherwise, we just link the shared version of gcc_s.1.1 and pick up\n-   exceptions:\n+   When using the shared version of gcc_s.1.1 the unwinder is provided by:\n      * Prior to 10.3.9, then we have to link the static eh lib, since there\n-       is no shared version on the system.\n+       is no shared unwinder version on the system.\n      * from 10.3.9 to 10.5, from /usr/lib/libgcc_s.1.dylib\n      * from 10.6 onwards, from libSystem.dylib\n-\n-   In all cases, libgcc_s.1.1 will be installed with the compiler, or any app\n-   built using it, so we can link the builtins and emutls shared on all.\n */\n #undef REAL_LIBGCC_SPEC\n #define REAL_LIBGCC_SPEC \\"}]}