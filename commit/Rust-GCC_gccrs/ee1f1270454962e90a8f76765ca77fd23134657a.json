{"sha": "ee1f1270454962e90a8f76765ca77fd23134657a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUxZjEyNzA0NTQ5NjJlOTBhOGY3Njc2NWNhNzdmZDIzMTM0NjU3YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-06-25T08:41:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-06-25T08:41:14Z"}, "message": "re PR tree-optimization/35518 (FAIL: gcc.c-torture/execute/20040709-1.c execution at -O2 and above)\n\n2008-06-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/35518\n\t* fold-const.c (fold_ternary): Strip trivial BIT_FIELD_REFs.\n\t* tree-sra.c (instantiate_element): Use fold_build3 to build\n\tBIT_FIELD_REFs.\n\t(try_instantiate_multiple_fields): Likewise.\n\nFrom-SVN: r137100", "tree": {"sha": "aa6ec98a15b381a6e6704ef0dc90dbeea8696b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa6ec98a15b381a6e6704ef0dc90dbeea8696b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee1f1270454962e90a8f76765ca77fd23134657a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee1f1270454962e90a8f76765ca77fd23134657a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee1f1270454962e90a8f76765ca77fd23134657a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee1f1270454962e90a8f76765ca77fd23134657a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "423addc532f23bf1a9fe9900d0d13e0197d96496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423addc532f23bf1a9fe9900d0d13e0197d96496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423addc532f23bf1a9fe9900d0d13e0197d96496"}], "stats": {"total": 56, "additions": 35, "deletions": 21}, "files": [{"sha": "64423b1e8ad05fa1557b003203756b17a0d4ca0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1f1270454962e90a8f76765ca77fd23134657a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1f1270454962e90a8f76765ca77fd23134657a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee1f1270454962e90a8f76765ca77fd23134657a", "patch": "@@ -1,3 +1,11 @@\n+2008-06-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35518\n+\t* fold-const.c (fold_ternary): Strip trivial BIT_FIELD_REFs.\n+\t* tree-sra.c (instantiate_element): Use fold_build3 to build\n+\tBIT_FIELD_REFs.\n+\t(try_instantiate_multiple_fields): Likewise.\n+\n 2008-06-24  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* config/rs6000/rs6000.md: Change all string instruction's clobber to"}, {"sha": "fc72b9b38a2158f2606de4cfa570f7ddd4e0e4a5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1f1270454962e90a8f76765ca77fd23134657a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1f1270454962e90a8f76765ca77fd23134657a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=ee1f1270454962e90a8f76765ca77fd23134657a", "patch": "@@ -13117,6 +13117,13 @@ fold_ternary (enum tree_code code, tree type, tree op0, tree op1, tree op2)\n \t\treturn fold_convert (type, integer_zero_node);\n \t    }\n \t}\n+\n+      /* A bit-field-ref that referenced the full argument can be stripped.  */\n+      if (INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n+\t  && TYPE_PRECISION (TREE_TYPE (arg0)) == tree_low_cst (arg1, 1)\n+\t  && integer_zerop (op2))\n+\treturn fold_convert (type, arg0);\n+\n       return NULL_TREE;\n \n     default:"}, {"sha": "391511f56a7d3c15455489cb183beecc2107bccb", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee1f1270454962e90a8f76765ca77fd23134657a/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee1f1270454962e90a8f76765ca77fd23134657a/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=ee1f1270454962e90a8f76765ca77fd23134657a", "patch": "@@ -1284,13 +1284,13 @@ instantiate_element (struct sra_elt *elt)\n       DECL_SIZE_UNIT (var) = DECL_SIZE_UNIT (elt->element);\n \n       elt->in_bitfld_block = 1;\n-      elt->replacement = build3 (BIT_FIELD_REF, elt->type, var,\n-\t\t\t\t DECL_SIZE (var),\n-\t\t\t\t BYTES_BIG_ENDIAN\n-\t\t\t\t ? size_binop (MINUS_EXPR,\n-\t\t\t\t\t       TYPE_SIZE (elt->type),\n-\t\t\t\t\t       DECL_SIZE (var))\n-\t\t\t\t : bitsize_int (0));\n+      elt->replacement = fold_build3 (BIT_FIELD_REF, elt->type, var,\n+\t\t\t\t      DECL_SIZE (var),\n+\t\t\t\t      BYTES_BIG_ENDIAN\n+\t\t\t\t      ? size_binop (MINUS_EXPR,\n+\t\t\t\t\t\t    TYPE_SIZE (elt->type),\n+\t\t\t\t\t\t    DECL_SIZE (var))\n+\t\t\t\t      : bitsize_int (0));\n     }\n \n   /* For vectors, if used on the left hand side with BIT_FIELD_REF,\n@@ -1698,8 +1698,7 @@ try_instantiate_multiple_fields (struct sra_elt *elt, tree f)\n     type = build_nonstandard_integer_type (size, 1);\n   gcc_assert (type);\n   var = build3 (BIT_FIELD_REF, type, NULL_TREE,\n-\t\tbitsize_int (size),\n-\t\tbitsize_int (bit));\n+\t\tbitsize_int (size), bitsize_int (bit));\n \n   block = instantiate_missing_elements_1 (elt, var, type);\n   gcc_assert (block && block->is_scalar);\n@@ -1709,10 +1708,10 @@ try_instantiate_multiple_fields (struct sra_elt *elt, tree f)\n   if ((bit & ~alchk)\n       || (HOST_WIDE_INT)size != tree_low_cst (DECL_SIZE (var), 1))\n     {\n-      block->replacement = build3 (BIT_FIELD_REF,\n-\t\t\t\t   TREE_TYPE (block->element), var,\n-\t\t\t\t   bitsize_int (size),\n-\t\t\t\t   bitsize_int (bit & ~alchk));\n+      block->replacement = fold_build3 (BIT_FIELD_REF,\n+\t\t\t\t\tTREE_TYPE (block->element), var,\n+\t\t\t\t\tbitsize_int (size),\n+\t\t\t\t\tbitsize_int (bit & ~alchk));\n     }\n \n   block->in_bitfld_block = 2;\n@@ -1727,14 +1726,14 @@ try_instantiate_multiple_fields (struct sra_elt *elt, tree f)\n \n       gcc_assert (fld && fld->is_scalar && !fld->replacement);\n \n-      fld->replacement = build3 (BIT_FIELD_REF, field_type, var,\n-\t\t\t\t DECL_SIZE (f),\n-\t\t\t\t bitsize_int\n-\t\t\t\t ((TREE_INT_CST_LOW (DECL_FIELD_OFFSET (f))\n-\t\t\t\t   * BITS_PER_UNIT\n-\t\t\t\t   + (TREE_INT_CST_LOW\n-\t\t\t\t      (DECL_FIELD_BIT_OFFSET (f))))\n-\t\t\t\t  & ~alchk));\n+      fld->replacement = fold_build3 (BIT_FIELD_REF, field_type, var,\n+\t\t\t\t      DECL_SIZE (f),\n+\t\t\t\t      bitsize_int\n+\t\t\t\t      ((TREE_INT_CST_LOW (DECL_FIELD_OFFSET (f))\n+\t\t\t\t\t* BITS_PER_UNIT\n+\t\t\t\t\t+ (TREE_INT_CST_LOW\n+\t\t\t\t\t   (DECL_FIELD_BIT_OFFSET (f))))\n+\t\t\t\t       & ~alchk));\n       fld->in_bitfld_block = 1;\n     }\n "}]}