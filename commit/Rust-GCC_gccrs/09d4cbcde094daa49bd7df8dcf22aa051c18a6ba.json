{"sha": "09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlkNGNiY2RlMDk0ZGFhNDliZDdkZjhkY2YyMmFhMDUxYzE4YTZiYQ==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2015-12-07T11:12:41Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2015-12-07T11:12:41Z"}, "message": "re PR target/68627 ([i386, AVX-512] Illegal insn generated while compiling spec2k6/437.leslie3d for KNL)\n\nPR target/68627\n\ngcc/\n\t* config/i386/sse.md: Make 'v' alternative work on 'avx512f' ISA only.\n\tForce destination to 512 bits register.\ngcc/testsuite/\n\t* gfortran.dg/pr68627.f: New test.\n\nFrom-SVN: r231361", "tree": {"sha": "ae59d6bf4d0192d8963a26dcb915713c47704257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae59d6bf4d0192d8963a26dcb915713c47704257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/comments", "author": null, "committer": null, "parents": [{"sha": "7604791b48d9a75d6d119cb827da12155ab9a383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7604791b48d9a75d6d119cb827da12155ab9a383", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7604791b48d9a75d6d119cb827da12155ab9a383"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "4d38d48f571b9d0804878a112466ba9f13793237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "patch": "@@ -1,3 +1,9 @@\n+2015-12-07  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\tPR target/68627\n+\t* config/i386/sse.md: Make 'v' alternative work on 'avx512f' ISA only.\n+\tForce destination to 512 bits register.\n+\n 2015-12-07  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/68633"}, {"sha": "eb49c419b9e4a2d3caa4db391155ec9b26814f29", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "patch": "@@ -17385,20 +17385,21 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"vec_dup<mode>\"\n-  [(set (match_operand:AVX_VEC_DUP_MODE 0 \"register_operand\" \"=x,x,v,x\")\n+  [(set (match_operand:AVX_VEC_DUP_MODE 0 \"register_operand\" \"=x,x,x,v,x\")\n \t(vec_duplicate:AVX_VEC_DUP_MODE\n-\t  (match_operand:<ssescalarmode> 1 \"nonimmediate_operand\" \"m,m,v,?x\")))]\n+\t  (match_operand:<ssescalarmode> 1 \"nonimmediate_operand\" \"m,m,x,v,?x\")))]\n   \"TARGET_AVX\"\n   \"@\n    v<sseintprefix>broadcast<bcstscalarsuff>\\t{%1, %0|%0, %1}\n    vbroadcast<ssescalarmodesuffix>\\t{%1, %0|%0, %1}\n    v<sseintprefix>broadcast<bcstscalarsuff>\\t{%x1, %0|%0, %x1}\n+   v<sseintprefix>broadcast<bcstscalarsuff>\\t{%x1, %g0|%g0, %x1}\n    #\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_evex\")\n-   (set_attr \"isa\" \"avx2,noavx2,avx2,noavx2\")\n-   (set_attr \"mode\" \"<sseinsnmode>,V8SF,<sseinsnmode>,V8SF\")])\n+   (set_attr \"isa\" \"avx2,noavx2,avx2,avx512f,noavx2\")\n+   (set_attr \"mode\" \"<sseinsnmode>,V8SF,<sseinsnmode>,<sseinsnmode>,V8SF\")])\n \n (define_split\n   [(set (match_operand:AVX2_VEC_DUP_MODE 0 \"register_operand\")"}, {"sha": "188ed2b44fbbd6dc23a3dbcd7798d7bcb157a006", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "patch": "@@ -1,3 +1,8 @@\n+2015-12-07  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\tPR target/68627\n+\t* gfortran.dg/pr68627.f: New test.\n+\n 2015-12-07  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/68633"}, {"sha": "32ff4a79e79df1a8abd32487c0acaee0275ea21b", "filename": "gcc/testsuite/gfortran.dg/pr68627.f", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68627.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68627.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68627.f?ref=09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile { target lp64 } }\n+\n+! { dg-options \"-Ofast -mavx512f -ffixed-xmm1 -ffixed-xmm2 -ffixed-xmm3 -ffixed-xmm4 -ffixed-xmm5 -ffixed-xmm6 -ffixed-xmm7 -ffixed-xmm8 -ffixed-xmm9 -ffixed-xmm10 -ffixed-xmm11 -ffixed-xmm12 -ffixed-xmm13 -ffixed-xmm14 -ffixed-xmm15\" }\n+\n+      IMPLICIT REAL*8(A-H,O-Z)\n+      ALLOCATABLE DD1(:), DD2(:), WY(:,:)\n+      ALLOCATE( DD1(MAX), DD2(MAX), WY(MAX,MAX))\n+         DO J = J1,J2\n+            DO I = I1, I2\n+               DD1(I) = D1 * (WY(I-2,J) - WY(I+2,J) +\n+     >              (WY(I+1,J) - WY(I-1,J)))\n+            END DO\n+            DO I = I1, INT(D2 * D3(I))\n+            END DO\n+         END DO\n+      END\n+\n+! { dg-final { scan-assembler-not \"vbroadcastsd\\[ \\\\t\\]+%xmm\\[0-9\\]+, %ymm\\[0-9\\]+\" } }"}]}