{"sha": "e1a18c68eba04c396dd491a361aeef15f73e8b05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFhMThjNjhlYmEwNGMzOTZkZDQ5MWEzNjFhZWVmMTVmNzNlOGIwNQ==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2007-11-02T03:26:46Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-11-02T03:26:46Z"}, "message": "re PR c++/33955 (internal compiler error: in dependent_type_p, at cp/pt.c:15245 (vararg template problem))\n\n2007-11-01  Douglas Gregor  <doug.gregor@gmail.com>\n\n\tPR c++/33955\n\t* pt.c (find_parameter_packs_r): Handle TYPENAME_TYPE.\n\n2007-11-01  Douglas Gregor  <doug.gregor@gmail.com>\n\n\t* g++.dg/cpp0x/pr33955.C: New.\n\nFrom-SVN: r129843", "tree": {"sha": "5be65ddecf81b1bd2c74b9ad4a000666f66ffee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5be65ddecf81b1bd2c74b9ad4a000666f66ffee7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1a18c68eba04c396dd491a361aeef15f73e8b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a18c68eba04c396dd491a361aeef15f73e8b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a18c68eba04c396dd491a361aeef15f73e8b05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a18c68eba04c396dd491a361aeef15f73e8b05/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a19309466aefbc363454c0c6bb41de3e0ee13c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19309466aefbc363454c0c6bb41de3e0ee13c69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a19309466aefbc363454c0c6bb41de3e0ee13c69"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "c784c31f0661c3f95c282629b27324cc77ec030e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e1a18c68eba04c396dd491a361aeef15f73e8b05", "patch": "@@ -1,3 +1,8 @@\n+2007-11-01  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tPR c++/33955\n+\t* pt.c (find_parameter_packs_r): Handle TYPENAME_TYPE.\n+\n 2007-11-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/32384"}, {"sha": "8f72ba90ec71583c37df85e2bf58655523096f9d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e1a18c68eba04c396dd491a361aeef15f73e8b05", "patch": "@@ -2504,7 +2504,14 @@ find_parameter_packs_r (tree *tp, int *walk_subtrees, void* data)\n       \n       *walk_subtrees = 0;\n       return NULL_TREE;\n-       \n+ \n+    case TYPENAME_TYPE:\n+      cp_walk_tree (&TYPENAME_TYPE_FULLNAME (t), &find_parameter_packs_r,\n+                   ppd, ppd->visited);\n+      *walk_subtrees = 0;\n+      return NULL_TREE;\n+\n+      \n     case TYPE_PACK_EXPANSION:\n     case EXPR_PACK_EXPANSION:\n       *walk_subtrees = 0;"}, {"sha": "459d5a2509277faed2afa534a37807f26f32feae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e1a18c68eba04c396dd491a361aeef15f73e8b05", "patch": "@@ -1,3 +1,7 @@\n+2007-11-01  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\t* g++.dg/cpp0x/pr33955.C: New.\n+\n 2007-11-01  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/30805:"}, {"sha": "cde92dedf97c65c637117028cbce23ab61572603", "filename": "gcc/testsuite/g++.dg/cpp0x/pr33955.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr33955.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a18c68eba04c396dd491a361aeef15f73e8b05/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr33955.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr33955.C?ref=e1a18c68eba04c396dd491a361aeef15f73e8b05", "patch": "@@ -0,0 +1,39 @@\n+// { dg-options \"-std=c++0x\" }\n+template<typename T>\n+struct uncvref\n+{\n+  typedef T type;\n+};\n+\n+template<typename... Args>\n+struct args\n+{\n+  static const int size = sizeof...(Args);\n+};\n+\n+template<typename G, typename E, typename S, typename V, long GN = G::size, long EN = E::size>\n+struct apply_args;\n+\n+template<typename... G, typename... E, typename S, typename V, long N>\n+struct apply_args<args<G...>, args<E...>, S, V, N, N>\n+{\n+  typedef args<\n+    typename G::template apply<typename uncvref<E>::type, S, V>::type...\n+    > type;\n+};\n+\n+struct or_\n+{\n+  template<typename E, typename S, typename V>\n+  struct apply {\n+    typedef typename E::type type;\n+  };\n+};\n+\n+template<typename T>\n+struct identity\n+{\n+  typedef T type;\n+};\n+\n+apply_args<args<or_>, args<identity<int>>, float, double> a1;"}]}