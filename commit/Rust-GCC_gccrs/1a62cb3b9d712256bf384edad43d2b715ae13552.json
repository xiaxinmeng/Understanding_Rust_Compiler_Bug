{"sha": "1a62cb3b9d712256bf384edad43d2b715ae13552", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE2MmNiM2I5ZDcxMjI1NmJmMzg0ZWRhZDQzZDJiNzE1YWUxMzU1Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-11-07T07:44:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-11-07T07:44:08Z"}, "message": "sse.md (xop_pmacsww, [...]): Compress operand alternatives.\n\n\t* config/i386/sse.md (xop_pmacsww, xop_pmacssww, xop_pmacsdd,\n\txop_pmacssdd, xop_pmacssdql, xop_pmacssdqh, xop_pmacsdql,\n\t*xop_pmacsdql_mem, xop_pmacsdqh, *xop_pmacsdqh_mem, xop_pmacsswd,\n\txop_pmacswd, xop_pmadcsswd, xop_pmadcswd, xop_pcmov_<mode>,\n\txop_pcmov_<mode>256, xop_pperm, xop_pperm_pack_v2di_v4si,\n\txop_pperm_pack_v4si_v8hi, xop_pperm_pack_v8hi_v16qi): Compress\n\toperand alternatives.\n\nFrom-SVN: r153993", "tree": {"sha": "554e99ac8721b656b46cac34ed56df6dc2310b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/554e99ac8721b656b46cac34ed56df6dc2310b54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a62cb3b9d712256bf384edad43d2b715ae13552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a62cb3b9d712256bf384edad43d2b715ae13552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a62cb3b9d712256bf384edad43d2b715ae13552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a62cb3b9d712256bf384edad43d2b715ae13552/comments", "author": null, "committer": null, "parents": [{"sha": "246d24e984dbe3575989adde201880782ad9f89e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246d24e984dbe3575989adde201880782ad9f89e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246d24e984dbe3575989adde201880782ad9f89e"}], "stats": {"total": 187, "additions": 89, "deletions": 98}, "files": [{"sha": "ddb86d4c99e2178d126a1bc993f8973ca0c8c7b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a62cb3b9d712256bf384edad43d2b715ae13552/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a62cb3b9d712256bf384edad43d2b715ae13552/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a62cb3b9d712256bf384edad43d2b715ae13552", "patch": "@@ -1,3 +1,13 @@\n+2009-11-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (xop_pmacsww, xop_pmacssww, xop_pmacsdd,\n+\txop_pmacssdd, xop_pmacssdql, xop_pmacssdqh, xop_pmacsdql,\n+\t*xop_pmacsdql_mem, xop_pmacsdqh, *xop_pmacsdqh_mem, xop_pmacsswd,\n+\txop_pmacswd, xop_pmadcsswd, xop_pmadcswd, xop_pcmov_<mode>,\n+\txop_pcmov_<mode>256, xop_pperm, xop_pperm_pack_v2di_v4si,\n+\txop_pperm_pack_v4si_v8hi, xop_pperm_pack_v8hi_v16qi): Compress\n+\toperand alternatives.\n+\n 2009-11-06  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/41963\n@@ -166,8 +176,7 @@\n \t(xop_pcmov_<mode>): Add XOP conditional mov instructions.\n \t* config/i386/i386.c (OPTION_MASK_ISA_XOP_SET): New.\n \t(OPTION_MASK_ISA_XOP_UNSET): New.\t\n-\t(OPTION_MASK_ISA_XOP_UNSET): Change definition to\n-\tdepend on XOP.\n+\t(OPTION_MASK_ISA_XOP_UNSET): Change definition to depend on XOP.\n \t(ix86_handle_option): Handle -mxop.\n \t(isa_opts): Handle -mxop.\n \t(enum pta_flags): Add PTA_XOP.\n@@ -584,8 +593,8 @@\n 2009-11-03  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/38699\n-\t* c-common.c (fold_offsetof_1): Issue errors when the member designator\n-\tof the offsetof expression is not legitimate.\n+\t* c-common.c (fold_offsetof_1): Issue errors when the member\n+\tdesignator of the offsetof expression is not legitimate.\n \n 2009-11-03  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "9a87cb1f4f944fe502389104057cc5e0b1b81a1c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 76, "deletions": 94, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a62cb3b9d712256bf384edad43d2b715ae13552/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a62cb3b9d712256bf384edad43d2b715ae13552/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1a62cb3b9d712256bf384edad43d2b715ae13552", "patch": "@@ -10466,15 +10466,14 @@\n ;; that it does and splitting it later allows the following to be recognized:\n ;;\ta[i] = b[i] * c[i] + d[i];\n (define_insn \"xop_pmacsww\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n         (plus:V8HI\n \t (mult:V8HI\n-\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,x,xm\")\n-\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,xm,x\"))\n-\t (match_operand:V8HI 3 \"register_operand\" \"x,x,x\")))]\n+\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,m\")\n+\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,x\"))\n+\t (match_operand:V8HI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 2, true)\"\n   \"@\n-   vpmacsww\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsww\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsww\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -10502,14 +10501,13 @@\n })\n \n (define_insn \"xop_pmacssww\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n         (ss_plus:V8HI\n-\t (mult:V8HI (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,x,m\")\n-\t\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,m,x\"))\n-\t (match_operand:V8HI 3 \"register_operand\" \"x,x,x\")))]\n+\t (mult:V8HI (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,m\")\n+\t\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,x\"))\n+\t (match_operand:V8HI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacssww\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssww\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssww\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -10520,15 +10518,14 @@\n ;; that it does and splitting it later allows the following to be recognized:\n ;;\ta[i] = b[i] * c[i] + d[i];\n (define_insn \"xop_pmacsdd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n         (plus:V4SI\n \t (mult:V4SI\n-\t  (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n-\t  (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\"))\n-\t (match_operand:V4SI 3 \"register_operand\" \"x,x,x\")))]\n+\t  (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n+\t  (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\"))\n+\t (match_operand:V4SI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 2, true)\"\n   \"@\n-   vpmacsdd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsdd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsdd\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -10556,102 +10553,98 @@\n })\n \n (define_insn \"xop_pmacssdd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n         (ss_plus:V4SI\n-\t (mult:V4SI (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n-\t\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\"))\n-\t (match_operand:V4SI 3 \"register_operand\" \"x,x,x\")))]\n+\t (mult:V4SI (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n+\t\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\"))\n+\t (match_operand:V4SI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacssdd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssdd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssdd\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"xop_pmacssdql\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n \t(ss_plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)])))\n \t  (vec_select:V2SI\n-\t   (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t   (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\")\n \t   (parallel [(const_int 1)\n \t\t      (const_int 3)])))\n-\t (match_operand:V2DI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V2DI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacssdql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssdql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssdql\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"xop_pmacssdqh\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n \t(ss_plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 2)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 2)]))))\n-\t (match_operand:V2DI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V2DI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacssdqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssdqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacssdqh\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"xop_pmacsdql\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n \t(plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)]))))\n-\t (match_operand:V2DI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V2DI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacsdql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsdql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsdql\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn_and_split \"*xop_pmacsdql_mem\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=&x,&x,&x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=&x,&x\")\n \t(plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)]))))\n-\t (match_operand:V2DI 3 \"memory_operand\" \"m,m,m\")))]\n+\t (match_operand:V2DI 3 \"memory_operand\" \"m,m\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, -1, true)\"\n   \"#\"\n   \"&& (reload_completed\n@@ -10719,43 +10712,42 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"xop_pmacsdqh\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n \t(plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 2)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 2)]))))\n-\t (match_operand:V2DI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V2DI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacsdqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsdqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsdqh\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn_and_split \"*xop_pmacsdqh_mem\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=&x,&x,&x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=&x,&x\")\n \t(plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 2)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,x\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 2)]))))\n-\t (match_operand:V2DI 3 \"memory_operand\" \"m,m,m\")))]\n+\t (match_operand:V2DI 3 \"memory_operand\" \"m,m\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, -1, true)\"\n   \"#\"\n   \"&& (reload_completed\n@@ -10824,74 +10816,72 @@\n \n ;; XOP parallel integer multiply/add instructions for the intrinisics\n (define_insn \"xop_pmacsswd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(ss_plus:V4SI\n \t (mult:V4SI\n \t  (sign_extend:V4SI\n \t   (vec_select:V4HI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)\n \t\t       (const_int 5)\n \t\t       (const_int 7)])))\n \t  (sign_extend:V4SI\n \t   (vec_select:V4HI\n-\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,x\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)\n \t\t       (const_int 5)\n \t\t       (const_int 7)]))))\n-\t (match_operand:V4SI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V4SI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacsswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacsswd\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"xop_pmacswd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(plus:V4SI\n \t (mult:V4SI\n \t  (sign_extend:V4SI\n \t   (vec_select:V4HI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,m\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)\n \t\t       (const_int 5)\n \t\t       (const_int 7)])))\n \t  (sign_extend:V4SI\n \t   (vec_select:V4HI\n-\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,x\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)\n \t\t       (const_int 5)\n \t\t       (const_int 7)]))))\n-\t (match_operand:V4SI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V4SI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmacswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmacswd\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"xop_pmadcsswd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(ss_plus:V4SI\n \t (plus:V4SI\n \t  (mult:V4SI\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n-\t     (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t     (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,m\")\n \t     (parallel [(const_int 0)\n \t\t\t(const_int 2)\n \t\t\t(const_int 4)\n \t\t\t(const_int 6)])))\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n-\t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,x\")\n \t     (parallel [(const_int 0)\n \t\t\t(const_int 2)\n \t\t\t(const_int 4)\n@@ -10911,30 +10901,29 @@\n \t\t\t(const_int 3)\n \t\t\t(const_int 5)\n \t\t\t(const_int 7)])))))\n-\t (match_operand:V4SI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V4SI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmadcsswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmadcsswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmadcsswd\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"xop_pmadcswd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(plus:V4SI\n \t (plus:V4SI\n \t  (mult:V4SI\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n-\t     (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,x,m\")\n+\t     (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x,m\")\n \t     (parallel [(const_int 0)\n \t\t\t(const_int 2)\n \t\t\t(const_int 4)\n \t\t\t(const_int 6)])))\n \t   (sign_extend:V4SI\n \t    (vec_select:V4HI\n-\t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,m,x\")\n+\t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,x\")\n \t     (parallel [(const_int 0)\n \t\t\t(const_int 2)\n \t\t\t(const_int 4)\n@@ -10954,10 +10943,9 @@\n \t\t\t(const_int 3)\n \t\t\t(const_int 5)\n \t\t\t(const_int 7)])))))\n-\t (match_operand:V4SI 3 \"register_operand\" \"x,x,x\")))]\n+\t (match_operand:V4SI 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, false, 1, true)\"\n   \"@\n-   vpmadcswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmadcswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    vpmadcswd\\t{%3, %1, %2, %0|%0, %2, %1, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -10967,27 +10955,21 @@\n (define_insn \"xop_pcmov_<mode>\"\n   [(set (match_operand:SSEMODE 0 \"register_operand\" \"=x,x,x\")\n \t(if_then_else:SSEMODE\n-\t  (match_operand:SSEMODE 3 \"nonimmediate_operand\" \"x,x,xm\")\n-\t  (match_operand:SSEMODE 1 \"vector_move_operand\" \"x,xm,x\")\n+\t  (match_operand:SSEMODE 3 \"nonimmediate_operand\" \"x,x,m\")\n+\t  (match_operand:SSEMODE 1 \"vector_move_operand\" \"x,m,x\")\n \t  (match_operand:SSEMODE 2 \"vector_move_operand\" \"xm,x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, true, 1, false)\"\n-  \"@\n-   vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n-   vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n-   vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"sse4arg\")])\n \n (define_insn \"xop_pcmov_<mode>256\"\n   [(set (match_operand:AVX256MODE 0 \"register_operand\" \"=x,x,x\")\n \t(if_then_else:AVX256MODE\n-\t  (match_operand:AVX256MODE 3 \"nonimmediate_operand\" \"x,x,xm\")\n-\t  (match_operand:AVX256MODE 1 \"vector_move_operand\" \"x,xm,x\")\n+\t  (match_operand:AVX256MODE 3 \"nonimmediate_operand\" \"x,x,m\")\n+\t  (match_operand:AVX256MODE 1 \"vector_move_operand\" \"x,m,x\")\n \t  (match_operand:AVX256MODE 2 \"vector_move_operand\" \"xm,x,x\")))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, true, 1, false)\"\n-  \"@\n-   vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n-   vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n-   vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"sse4arg\")])\n \n ;; XOP horizontal add/subtract instructions\n@@ -11434,8 +11416,8 @@\n (define_insn \"xop_pperm\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=x,x,x\")\n \t(unspec:V16QI\n-\t  [(match_operand:V16QI 1 \"nonimmediate_operand\" \"x,x,xm\")\n-\t   (match_operand:V16QI 2 \"nonimmediate_operand\" \"x,xm,x\")\n+\t  [(match_operand:V16QI 1 \"nonimmediate_operand\" \"x,x,m\")\n+\t   (match_operand:V16QI 2 \"nonimmediate_operand\" \"x,m,x\")\n \t   (match_operand:V16QI 3 \"nonimmediate_operand\" \"xm,x,x\")]\n \t  UNSPEC_XOP_PERMUTE))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, true, 1, false)\"\n@@ -11448,9 +11430,9 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,x\")\n \t(vec_concat:V4SI\n \t (truncate:V2SI\n-\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \"x,x,xm\"))\n+\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \"x,x,m\"))\n \t (truncate:V2SI\n-\t  (match_operand:V2DI 2 \"nonimmediate_operand\" \"x,xm,x\"))))\n+\t  (match_operand:V2DI 2 \"nonimmediate_operand\" \"x,m,x\"))))\n    (use (match_operand:V16QI 3 \"nonimmediate_operand\" \"xm,x,x\"))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, true, 1, false)\"\n   \"vpperm\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n@@ -11461,9 +11443,9 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x,x\")\n \t(vec_concat:V8HI\n \t (truncate:V4HI\n-\t  (match_operand:V4SI 1 \"nonimmediate_operand\" \"x,x,xm\"))\n+\t  (match_operand:V4SI 1 \"nonimmediate_operand\" \"x,x,m\"))\n \t (truncate:V4HI\n-\t  (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,xm,x\"))))\n+\t  (match_operand:V4SI 2 \"nonimmediate_operand\" \"x,m,x\"))))\n    (use (match_operand:V16QI 3 \"nonimmediate_operand\" \"xm,x,x\"))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, true, 1, false)\"\n   \"vpperm\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n@@ -11474,9 +11456,9 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=x,x,x\")\n \t(vec_concat:V16QI\n \t (truncate:V8QI\n-\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"x,x,xm\"))\n+\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"x,x,m\"))\n \t (truncate:V8QI\n-\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,xm,x\"))))\n+\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"x,m,x\"))))\n    (use (match_operand:V16QI 3 \"nonimmediate_operand\" \"xm,x,x\"))]\n   \"TARGET_XOP && ix86_fma4_valid_op_p (operands, insn, 4, true, 1, false)\"\n   \"vpperm\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n@@ -11599,10 +11581,10 @@\n   [(set (match_operand:SSEMODE1248 0 \"register_operand\" \"=x,x\")\n \t(if_then_else:SSEMODE1248\n \t (ge:SSEMODE1248\n-\t  (match_operand:SSEMODE1248 2 \"nonimmediate_operand\" \"xm,x\")\n+\t  (match_operand:SSEMODE1248 2 \"nonimmediate_operand\" \"x,m\")\n \t  (const_int 0))\n \t (rotate:SSEMODE1248\n-\t  (match_operand:SSEMODE1248 1 \"nonimmediate_operand\" \"x,xm\")\n+\t  (match_operand:SSEMODE1248 1 \"nonimmediate_operand\" \"xm,x\")\n \t  (match_dup 2))\n \t (rotatert:SSEMODE1248\n \t  (match_dup 1)\n@@ -11654,10 +11636,10 @@\n   [(set (match_operand:SSEMODE1248 0 \"register_operand\" \"=x,x\")\n \t(if_then_else:SSEMODE1248\n \t (ge:SSEMODE1248\n-\t  (match_operand:SSEMODE1248 2 \"nonimmediate_operand\" \"xm,x\")\n+\t  (match_operand:SSEMODE1248 2 \"nonimmediate_operand\" \"x,m\")\n \t  (const_int 0))\n \t (ashift:SSEMODE1248\n-\t  (match_operand:SSEMODE1248 1 \"nonimmediate_operand\" \"x,xm\")\n+\t  (match_operand:SSEMODE1248 1 \"nonimmediate_operand\" \"xm,x\")\n \t  (match_dup 2))\n \t (ashiftrt:SSEMODE1248\n \t  (match_dup 1)\n@@ -11673,10 +11655,10 @@\n   [(set (match_operand:SSEMODE1248 0 \"register_operand\" \"=x,x\")\n \t(if_then_else:SSEMODE1248\n \t (ge:SSEMODE1248\n-\t  (match_operand:SSEMODE1248 2 \"nonimmediate_operand\" \"xm,x\")\n+\t  (match_operand:SSEMODE1248 2 \"nonimmediate_operand\" \"x,m\")\n \t  (const_int 0))\n \t (ashift:SSEMODE1248\n-\t  (match_operand:SSEMODE1248 1 \"nonimmediate_operand\" \"x,xm\")\n+\t  (match_operand:SSEMODE1248 1 \"nonimmediate_operand\" \"xm,x\")\n \t  (match_dup 2))\n \t (lshiftrt:SSEMODE1248\n \t  (match_dup 1)"}]}