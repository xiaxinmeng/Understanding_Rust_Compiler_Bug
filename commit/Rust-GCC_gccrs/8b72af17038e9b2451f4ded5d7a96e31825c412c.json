{"sha": "8b72af17038e9b2451f4ded5d7a96e31825c412c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3MmFmMTcwMzhlOWIyNDUxZjRkZWQ1ZDdhOTZlMzE4MjVjNDEyYw==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-06-18T09:19:41Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-06-18T09:19:41Z"}, "message": "[nvptx] Use define_insn parametrization\n\nParametrize some define_insn to simplify code in define_expands generating\nthose insns.\n\nBuild and reg-tested on x86_64 with nvptx accelerator.\n\n2019-06-18  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx-protos.h (gen_set_softstack_insn): Remove.\n\t* config/nvptx/nvptx.c (gen_set_softstack_insn): Remove.\n\t* config/nvptx/nvptx.md (define_insn \"set_softstack_<mode>\"): Rename to ...\n\t(define_insn \"@set_softstack_<mode>\"): ... this.\n\t(define_insn \"omp_simt_enter_<mode>\"): Rename to ...\n\t(define_insn \"@omp_simt_enter_<mode>\"): ... this.\n\t(define_insn \"omp_simt_exit_<mode>\"): Rename to ...\n\t(define_insn \"@omp_simt_exit_<mode>\"): ... this.\n\nFrom-SVN: r272413", "tree": {"sha": "bba704dd7341697e78c26f189bcda9de11032896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bba704dd7341697e78c26f189bcda9de11032896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b72af17038e9b2451f4ded5d7a96e31825c412c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b72af17038e9b2451f4ded5d7a96e31825c412c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b72af17038e9b2451f4ded5d7a96e31825c412c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b72af17038e9b2451f4ded5d7a96e31825c412c/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "787783a0356dd75e462c9d5337f06f156e0ed110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/787783a0356dd75e462c9d5337f06f156e0ed110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/787783a0356dd75e462c9d5337f06f156e0ed110"}], "stats": {"total": 54, "additions": 20, "deletions": 34}, "files": [{"sha": "cdfaa5fbf233a79b58548f0797bc7377b5274247", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b72af17038e9b2451f4ded5d7a96e31825c412c", "patch": "@@ -1,3 +1,14 @@\n+2019-06-18  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx-protos.h (gen_set_softstack_insn): Remove.\n+\t* config/nvptx/nvptx.c (gen_set_softstack_insn): Remove.\n+\t* config/nvptx/nvptx.md (define_insn \"set_softstack_<mode>\"): Rename to ...\n+\t(define_insn \"@set_softstack_<mode>\"): ... this.\n+\t(define_insn \"omp_simt_enter_<mode>\"): Rename to ...\n+\t(define_insn \"@omp_simt_enter_<mode>\"): ... this.\n+\t(define_insn \"omp_simt_exit_<mode>\"): Rename to ...\n+\t(define_insn \"@omp_simt_exit_<mode>\"): ... this.\n+\n 2019-06-18  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-loop-manip.c (vect_set_loop_masks_directly): Remove"}, {"sha": "be09a15e49c65a665ae5e6a43c357d1408f76757", "filename": "gcc/config/nvptx/nvptx-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2Fconfig%2Fnvptx%2Fnvptx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2Fconfig%2Fnvptx%2Fnvptx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-protos.h?ref=8b72af17038e9b2451f4ded5d7a96e31825c412c", "patch": "@@ -57,6 +57,5 @@ extern const char *nvptx_output_set_softstack (unsigned);\n extern const char *nvptx_output_simt_enter (rtx, rtx, rtx);\n extern const char *nvptx_output_simt_exit (rtx);\n extern const char *nvptx_output_red_partition (rtx, rtx);\n-extern rtx gen_set_softstack_insn (rtx);\n #endif\n #endif"}, {"sha": "c53a1ae9f26abf9d05231b9bb84753e4e9403a2f", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=8b72af17038e9b2451f4ded5d7a96e31825c412c", "patch": "@@ -112,18 +112,6 @@ enum nvptx_data_area\n   DATA_AREA_MAX\n };\n \n-rtx\n-gen_set_softstack_insn (rtx op)\n-{\n-  gcc_assert (GET_MODE (op) == Pmode);\n-  if (GET_MODE (op) == DImode)\n-    return gen_set_softstack_di (op);\n-  else if (GET_MODE (op) == SImode)\n-    return gen_set_softstack_si (op);\n-  else\n-    gcc_unreachable ();\n-}\n-\n /*  We record the data area in the target symbol flags.  */\n #define SYMBOL_DATA_AREA(SYM) \\\n   (nvptx_data_area)((SYMBOL_REF_FLAGS (SYM) >> SYMBOL_FLAG_MACH_DEP_SHIFT) \\"}, {"sha": "58a18fe21cfd9e955c0b807077d179ca81eaf75f", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b72af17038e9b2451f4ded5d7a96e31825c412c/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=8b72af17038e9b2451f4ded5d7a96e31825c412c", "patch": "@@ -1025,8 +1025,8 @@\n   \"\"\n {\n   if (TARGET_SOFT_STACK)\n-    emit_insn (gen_set_softstack_insn (gen_rtx_REG (Pmode,\n-\t\t\t\t\t\t    SOFTSTACK_PREV_REGNUM)));\n+    emit_insn (gen_set_softstack (Pmode, gen_rtx_REG (Pmode,\n+\t\t\t\t\t\t      SOFTSTACK_PREV_REGNUM)));\n   emit_jump_insn (gen_return ());\n   DONE;\n })\n@@ -1059,7 +1059,7 @@\n     {\n       emit_move_insn (stack_pointer_rtx,\n \t\t      gen_rtx_MINUS (Pmode, stack_pointer_rtx, operands[1]));\n-      emit_insn (gen_set_softstack_insn (stack_pointer_rtx));\n+      emit_insn (gen_set_softstack (Pmode, stack_pointer_rtx));\n       emit_move_insn (operands[0], virtual_stack_dynamic_rtx);\n       DONE;\n     }\n@@ -1071,7 +1071,7 @@\n   DONE;\n })\n \n-(define_insn \"set_softstack_<mode>\"\n+(define_insn \"@set_softstack_<mode>\"\n   [(unspec [(match_operand:P 0 \"nvptx_register_operand\" \"R\")]\n \t   UNSPEC_SET_SOFTSTACK)]\n   \"TARGET_SOFT_STACK\"\n@@ -1087,7 +1087,7 @@\n   if (TARGET_SOFT_STACK)\n     {\n       emit_move_insn (operands[0], operands[1]);\n-      emit_insn (gen_set_softstack_insn (operands[0]));\n+      emit_insn (gen_set_softstack (Pmode, operands[0]));\n     }\n   DONE;\n })\n@@ -1237,7 +1237,7 @@\n \n ;; Patterns for OpenMP SIMD-via-SIMT lowering\n \n-(define_insn \"omp_simt_enter_<mode>\"\n+(define_insn \"@omp_simt_enter_<mode>\"\n   [(set (match_operand:P 0 \"nvptx_register_operand\" \"=R\")\n \t(unspec_volatile:P [(match_operand:P 1 \"nvptx_nonmemory_operand\" \"Ri\")\n \t\t\t    (match_operand:P 2 \"nvptx_nonmemory_operand\" \"Ri\")]\n@@ -1261,31 +1261,19 @@\n   cfun->machine->simt_stack_align = MAX (UINTVAL (operands[2]),\n \t\t\t\t\t cfun->machine->simt_stack_align);\n   cfun->machine->has_simtreg = true;\n-  gcc_assert (GET_MODE (operands[0]) == Pmode);\n-  if (GET_MODE (operands[0]) == DImode)\n-    emit_insn (gen_omp_simt_enter_di (operands[0], operands[1], operands[2]));\n-  else if (GET_MODE (operands[0]) == SImode)\n-    emit_insn (gen_omp_simt_enter_si (operands[0], operands[1], operands[2]));\n-  else\n-    gcc_unreachable ();\n+  emit_insn (gen_omp_simt_enter (Pmode, operands[0], operands[1], operands[2]));\n   DONE;\n })\n \n (define_expand \"omp_simt_exit\"\n   [(match_operand 0 \"nvptx_register_operand\" \"R\")]\n   \"\"\n {\n-  gcc_assert (GET_MODE (operands[0]) == Pmode);\n-  if (GET_MODE (operands[0]) == DImode)\n-    emit_insn (gen_omp_simt_exit_di (operands[0]));\n-  else if (GET_MODE (operands[0]) == SImode)\n-    emit_insn (gen_omp_simt_exit_si (operands[0]));\n-  else\n-    gcc_unreachable ();\n+  emit_insn (gen_omp_simt_exit (Pmode, operands[0]));\n   DONE;\n })\n \n-(define_insn \"omp_simt_exit_<mode>\"\n+(define_insn \"@omp_simt_exit_<mode>\"\n   [(unspec_volatile [(match_operand:P 0 \"nvptx_register_operand\" \"R\")]\n \t\t    UNSPECV_SIMT_EXIT)]\n   \"\""}]}