{"sha": "386d9c5719c64ff748fcdaa2c0b5452c2180cec7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg2ZDljNTcxOWM2NGZmNzQ4ZmNkYWEyYzBiNTQ1MmMyMTgwY2VjNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-05T11:43:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-05T11:43:14Z"}, "message": "i386.md (*movdf_internal_rex64): Simplify nested \"if\" conditions.\n\n\t* config/i386/i386.md (*movdf_internal_rex64): Simplify nested \"if\"\n\tconditions.\n\t(*movdf_internal): Ditto.\n\t(*movdf_internal_nointeger): Ditto.\n\t(*movsf_internal): Ditto.\n\nFrom-SVN: r173423", "tree": {"sha": "2beb0e8049cd01860b360eef45396930bebbd990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2beb0e8049cd01860b360eef45396930bebbd990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/386d9c5719c64ff748fcdaa2c0b5452c2180cec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386d9c5719c64ff748fcdaa2c0b5452c2180cec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/386d9c5719c64ff748fcdaa2c0b5452c2180cec7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386d9c5719c64ff748fcdaa2c0b5452c2180cec7/comments", "author": null, "committer": null, "parents": [{"sha": "a04a722b88baf5568f3ba02a07189cbd65b0dc22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04a722b88baf5568f3ba02a07189cbd65b0dc22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04a722b88baf5568f3ba02a07189cbd65b0dc22"}], "stats": {"total": 133, "additions": 50, "deletions": 83}, "files": [{"sha": "838f6b04e740cb2bae973b68d7d821fc2670a5e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386d9c5719c64ff748fcdaa2c0b5452c2180cec7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386d9c5719c64ff748fcdaa2c0b5452c2180cec7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=386d9c5719c64ff748fcdaa2c0b5452c2180cec7", "patch": "@@ -1,3 +1,11 @@\n+2011-05-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*movdf_internal_rex64): Simplify nested \"if\"\n+\tconditions.\n+\t(*movdf_internal): Ditto.\n+\t(*movdf_internal_nointeger): Ditto.\n+\t(*movsf_internal): Ditto.\n+\n 2011-05-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-decl.c (finish_decl): Don't call get_pending_sizes.\n@@ -17,20 +25,18 @@\n \tget_pending_sizes.  Update calls to get_parm_info.\n \t(c_parser_objc_method_definition): Update calls to\n \tc_parser_objc_method_decl and objc_start_method_definition.\n-\t(c_parser_objc_methodproto): Update call to\n-\tc_parser_objc_method_decl.\n+\t(c_parser_objc_methodproto): Update call to c_parser_objc_method_decl.\n \t(c_parser_objc_method_decl): Add parameter expr.  Update call to\n \tgrokparm.\n-\t(c_parser_objc_try_catch_finally_statement): Update call to\n-\tgrokparm.\n+\t(c_parser_objc_try_catch_finally_statement): Update call to grokparm.\n \t* c-tree.h (struct c_arg_info.pending_sizes): Change to a tree.\n \t(get_parm_info, grokparm, push_parm_decl): Update prototypes.\n \n 2011-05-05  Michael Hope  <michael.hope@linaro.org>\n \n-       PR pch/45979\n-       * config/host-linux.c (TRY_EMPTY_VM_SPACE): Define for\n-       __ARM_EABI__ hosts.\n+\tPR pch/45979\n+\t* config/host-linux.c (TRY_EMPTY_VM_SPACE): Define for\n+\t__ARM_EABI__ hosts.\n \n 2011-05-05  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n@@ -49,8 +55,7 @@\n \t* ipa-inline.c (reset_edge_caches): New function.\n \t(update_caller_keys): Add check_inlinablity_for; do not\n \treset edge caches; remove now unnecesary loop.\n-\t(update_callee_keys): Add comments; reset\n-\tnode_growth_cache of callee.\n+\t(update_callee_keys): Add comments; reset node_growth_cache of callee.\n \t(update_all_callee_keys): Likewise.\n \t(inline_small_functions): Sanity check cache; update code\n \trecomputing it."}, {"sha": "c5595f0a5a1e759d8940a550c37531929d7a09e5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 36, "deletions": 74, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386d9c5719c64ff748fcdaa2c0b5452c2180cec7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386d9c5719c64ff748fcdaa2c0b5452c2180cec7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=386d9c5719c64ff748fcdaa2c0b5452c2180cec7", "patch": "@@ -1893,15 +1893,15 @@\n \t{\n \t  if (get_attr_mode (insn) == MODE_V4SF)\n \t    return \"%vmovups\\t{%1, %0|%0, %1}\";\n-\t else\n-\t   return \"%vmovdqu\\t{%1, %0|%0, %1}\";\n+\t  else\n+\t    return \"%vmovdqu\\t{%1, %0|%0, %1}\";\n \t}\n       else\n \t{\n \t  if (get_attr_mode (insn) == MODE_V4SF)\n \t    return \"%vmovaps\\t{%1, %0|%0, %1}\";\n-\t else\n-\t   return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n+\t  else\n+\t    return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n \t}\n     default:\n       gcc_unreachable ();\n@@ -1956,15 +1956,15 @@\n \t{\n \t  if (get_attr_mode (insn) == MODE_V4SF)\n \t    return \"%vmovups\\t{%1, %0|%0, %1}\";\n-\t else\n-\t   return \"%vmovdqu\\t{%1, %0|%0, %1}\";\n+\t  else\n+\t    return \"%vmovdqu\\t{%1, %0|%0, %1}\";\n \t}\n       else\n \t{\n \t  if (get_attr_mode (insn) == MODE_V4SF)\n \t    return \"%vmovaps\\t{%1, %0|%0, %1}\";\n-\t else\n-\t   return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n+\t  else\n+\t    return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n \t}\n     default:\n       gcc_unreachable ();\n@@ -2004,13 +2004,15 @@\n       /* Handle broken assemblers that require movd instead of movq.  */\n       if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n \treturn \"%vmovd\\t{%1, %0|%0, %1}\";\n-      return \"%vmovq\\t{%1, %0|%0, %1}\";\n+      else\n+\treturn \"%vmovq\\t{%1, %0|%0, %1}\";\n \n     case TYPE_MMXMOV:\n       /* Handle broken assemblers that require movd instead of movq.  */\n       if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n \treturn \"movd\\t{%1, %0|%0, %1}\";\n-      return \"movq\\t{%1, %0|%0, %1}\";\n+      else\n+\treturn \"movq\\t{%1, %0|%0, %1}\";\n \n     case TYPE_SSELOG1:\n       return \"%vpxor\\t%0, %d0\";\n@@ -3001,15 +3003,10 @@\n \tcase MODE_DI:\n \t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n \tcase MODE_DF:\n-\t  if (TARGET_AVX)\n-\t    {\n-\t      if (REG_P (operands[0]) && REG_P (operands[1]))\n-\t\treturn \"vmovsd\\t{%1, %0, %0|%0, %0, %1}\";\n-\t      else\n-\t\treturn \"vmovsd\\t{%1, %0|%0, %1}\";\n-\t    }\n+\t  if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n+\t    return \"vmovsd\\t{%1, %0, %0|%0, %0, %1}\";\n \t  else\n-\t    return \"movsd\\t{%1, %0|%0, %1}\";\n+\t    return \"%vmovsd\\t{%1, %0|%0, %1}\";\n \tcase MODE_V1DF:\n \t  return \"%vmovlpd\\t{%1, %d0|%d0, %1}\";\n \tcase MODE_V2SF:\n@@ -3164,35 +3161,20 @@\n \tcase MODE_DI:\n \t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n \tcase MODE_DF:\n-\t  if (TARGET_AVX)\n-\t    {\n-\t      if (REG_P (operands[0]) && REG_P (operands[1]))\n-\t\treturn \"vmovsd\\t{%1, %0, %0|%0, %0, %1}\";\n-\t      else\n-\t\treturn \"vmovsd\\t{%1, %0|%0, %1}\";\n-\t    }\n+\t  if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n+\t    return \"vmovsd\\t{%1, %0, %0|%0, %0, %1}\";\n \t  else\n-\t    return \"movsd\\t{%1, %0|%0, %1}\";\n+\t    return \"%vmovsd\\t{%1, %0|%0, %1}\";\n \tcase MODE_V1DF:\n-\t  if (TARGET_AVX)\n-\t    {\n-\t      if (REG_P (operands[0]))\n-\t\treturn \"vmovlpd\\t{%1, %0, %0|%0, %0, %1}\";\n-\t      else\n-\t\treturn \"vmovlpd\\t{%1, %0|%0, %1}\";\n-\t    }\n+\t  if (TARGET_AVX && REG_P (operands[0]))\n+\t    return \"vmovlpd\\t{%1, %0, %0|%0, %0, %1}\";\n \t  else\n-\t    return \"movlpd\\t{%1, %0|%0, %1}\";\n+\t    return \"%vmovlpd\\t{%1, %0|%0, %1}\";\n \tcase MODE_V2SF:\n-\t  if (TARGET_AVX)\n-\t    {\n-\t      if (REG_P (operands[0]))\n-\t\treturn \"vmovlps\\t{%1, %0, %0|%0, %0, %1}\";\n-\t      else\n-\t\treturn \"vmovlps\\t{%1, %0|%0, %1}\";\n-\t    }\n+\t  if (TARGET_AVX && REG_P (operands[0]))\n+\t    return \"vmovlps\\t{%1, %0, %0|%0, %0, %1}\";\n \t  else\n-\t    return \"movlps\\t{%1, %0|%0, %1}\";\n+\t    return \"%vmovlps\\t{%1, %0|%0, %1}\";\n \tdefault:\n \t  gcc_unreachable ();\n \t}\n@@ -3336,35 +3318,20 @@\n \tcase MODE_DI:\n \t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n \tcase MODE_DF:\n-\t  if (TARGET_AVX)\n-\t    {\n-\t      if (REG_P (operands[0]) && REG_P (operands[1]))\n-\t\treturn \"vmovsd\\t{%1, %0, %0|%0, %0, %1}\";\n-\t      else\n-\t\treturn \"vmovsd\\t{%1, %0|%0, %1}\";\n-\t    }\n+\t  if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n+\t    return \"vmovsd\\t{%1, %0, %0|%0, %0, %1}\";\n \t  else\n-\t    return \"movsd\\t{%1, %0|%0, %1}\";\n+\t    return \"%vmovsd\\t{%1, %0|%0, %1}\";\n \tcase MODE_V1DF:\n-\t  if (TARGET_AVX)\n-\t    {\n-\t      if (REG_P (operands[0]))\n-\t\treturn \"vmovlpd\\t{%1, %0, %0|%0, %0, %1}\";\n-\t      else\n-\t\treturn \"vmovlpd\\t{%1, %0|%0, %1}\";\n-\t    }\n+\t  if (TARGET_AVX && REG_P (operands[0]))\n+\t    return \"vmovlpd\\t{%1, %0, %0|%0, %0, %1}\";\n \t  else\n-\t    return \"movlpd\\t{%1, %0|%0, %1}\";\n+\t    return \"%vmovlpd\\t{%1, %0|%0, %1}\";\n \tcase MODE_V2SF:\n-\t  if (TARGET_AVX)\n-\t    {\n-\t      if (REG_P (operands[0]))\n-\t\treturn \"vmovlps\\t{%1, %0, %0|%0, %0, %1}\";\n-\t      else\n-\t\treturn \"vmovlps\\t{%1, %0|%0, %1}\";\n-\t    }\n+\t  if (TARGET_AVX && REG_P (operands[0]))\n+\t    return \"vmovlps\\t{%1, %0, %0|%0, %0, %1}\";\n \t  else\n-\t    return \"movlps\\t{%1, %0|%0, %1}\";\n+\t    return \"%vmovlps\\t{%1, %0|%0, %1}\";\n \tdefault:\n \t  gcc_unreachable ();\n \t}\n@@ -3483,15 +3450,10 @@\n       else\n \treturn \"%vmovss\\t{%1, %d0|%d0, %1}\";\n     case 7:\n-      if (TARGET_AVX)\n-        {\n-\t  if (REG_P (operands[1]))\n-\t    return \"vmovss\\t{%1, %0, %0|%0, %0, %1}\";\n-\t  else\n-\t    return \"vmovss\\t{%1, %0|%0, %1}\";\n-\t}\n+      if (TARGET_AVX && REG_P (operands[1]))\n+\treturn \"vmovss\\t{%1, %0, %0|%0, %0, %1}\";\n       else\n-\treturn \"movss\\t{%1, %0|%0, %1}\";\n+\treturn \"%vmovss\\t{%1, %0|%0, %1}\";\n     case 8:\n       return \"%vmovss\\t{%1, %0|%0, %1}\";\n "}]}