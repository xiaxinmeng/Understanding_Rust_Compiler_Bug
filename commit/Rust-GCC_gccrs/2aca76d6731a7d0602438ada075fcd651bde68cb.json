{"sha": "2aca76d6731a7d0602438ada075fcd651bde68cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjYTc2ZDY3MzFhN2QwNjAyNDM4YWRhMDc1ZmNkNjUxYmRlNjhjYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T08:12:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T08:12:36Z"}, "message": "[multiple changes]\n\n2012-08-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb: Remove useless flag Body_Deleted.\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* sinfo.ads (End_Span): Change default from No_Uint to Uint_0,\n\tas this is what all usage occurrences of this attribute are\n\texpecting.\n\t* uintp.adb (UI_To_Int): Add assertion to guard against calling\n\twith No_Uint.\n\nFrom-SVN: r190164", "tree": {"sha": "0420816519850b703f2f1b48c34c54fdb39b1adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0420816519850b703f2f1b48c34c54fdb39b1adb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aca76d6731a7d0602438ada075fcd651bde68cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aca76d6731a7d0602438ada075fcd651bde68cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aca76d6731a7d0602438ada075fcd651bde68cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aca76d6731a7d0602438ada075fcd651bde68cb/comments", "author": null, "committer": null, "parents": [{"sha": "0ebc109a5ea094a942ce928f6e9d89a682ce9971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ebc109a5ea094a942ce928f6e9d89a682ce9971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ebc109a5ea094a942ce928f6e9d89a682ce9971"}], "stats": {"total": 62, "additions": 50, "deletions": 12}, "files": [{"sha": "2533fd336b59699f8b0b7a5619bc491c0547057e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2aca76d6731a7d0602438ada075fcd651bde68cb", "patch": "@@ -1,3 +1,45 @@\n+2012-08-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb: Remove useless flag Body_Deleted.\n+\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sinfo.ads (End_Span): Change default from No_Uint to Uint_0,\n+\tas this is what all usage occurrences of this attribute are\n+\texpecting.\n+\t* uintp.adb (UI_To_Int): Add assertion to guard against calling\n+\twith No_Uint.\n+\n+2012-08-06  Vincent Pucci  <pucci@adacore.com>\n+\n+PR ada/54125\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Expand new\n+\tAtomic_Always_Lock_Free attribute.\n+\t* sem_attr.adb (Analyze_Attribute): Analyze new\n+\tAtomic_Always_Lock_Free attribute.\n+\t(Eval_Attribute): Nothing to do with new Atomic_Always_Lock_Free\n+\tattribute.\n+\t* sem_ch9.adb (Allows_Lock_Free_Implementation):\n+\tSupport_Atomic_Primitives check replaces previous erroneous\n+\tsize check.\n+\t* sem_util.adb, sem_util.ads (Support_Atomic_Primitives):\n+\tNew routine.\n+\t* snames.ads-tmpl: New name Name_Atomic_Always_Lock_Free and\n+\tnew attribute Attribute_Atomic_Always_Lock_Free defined.\n+\t* s-atopri.adb: Support_Atomic_Primitives checks replaced by\n+\tAtomic_Always_Lock_Free queries.\n+\t* system-aix64.ads, system-aix.ads, system-darwin-ppc.ads,\n+\tsystem-hpux.ads, system-linux-alpha.ads, system-linux-hppa.ads,\n+\tsystem-linux-ppc.ads, system-linux-s390.ads,\n+\tsystem-linux-s390x.ads, system-linux-sh4.ads,\n+\tsystem-linux-sparc.ads, system-lynxos178-ppc.ads,\n+\tsystem-lynxos-ppc.ads, system-mingw.ads,\n+\tsystem-vxworks-arm.ads, system-solaris-sparc.ads,\n+\tsystem-solaris-sparcv9.ads, system-vms_64.ads,\n+\tsystem-vxworks-m68k.ads, system-vxworks-mips.ads,\n+\tsystem-vxworks-ppc.ads, system-vxworks-sparcv9.ads: Flag\n+\tSupport_Atomic_Primitives removed.\n+\n 2012-08-06  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_mech.adb (Set_Mechanisms): OUT and IN OUT parameters are"}, {"sha": "d48dd10e524df2ec69e3dbf88653d2c9b6a62daa", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2aca76d6731a7d0602438ada075fcd651bde68cb", "patch": "@@ -1804,7 +1804,6 @@ package body Sem_Ch6 is\n \n    procedure Analyze_Subprogram_Body_Helper (N : Node_Id) is\n       Loc          : constant Source_Ptr := Sloc (N);\n-      Body_Deleted : constant Boolean    := False;\n       Body_Spec    : constant Node_Id    := Specification (N);\n       Body_Id      : Entity_Id           := Defining_Entity (Body_Spec);\n       Prev_Id      : constant Entity_Id  := Current_Entity_In_Scope (Body_Id);\n@@ -2076,9 +2075,8 @@ package body Sem_Ch6 is\n                   Set_Has_Missing_Return (Id);\n                end if;\n \n-            elsif (Is_Generic_Subprogram (Id)\n-                     or else not Is_Machine_Code_Subprogram (Id))\n-              and then not Body_Deleted\n+            elsif Is_Generic_Subprogram (Id)\n+              or else not Is_Machine_Code_Subprogram (Id)\n             then\n                Error_Msg_N (\"missing RETURN statement in function body\", N);\n             end if;\n@@ -3133,13 +3131,9 @@ package body Sem_Ch6 is\n             end loop;\n          end if;\n \n-         --  Check references in body unless it was deleted. Note that the\n-         --  check of Body_Deleted here is not just for efficiency, it is\n-         --  necessary to avoid junk warnings on formal parameters.\n+         --  Check references in body\n \n-         if not Body_Deleted then\n-            Check_References (Body_Id);\n-         end if;\n+         Check_References (Body_Id);\n       end;\n    end Analyze_Subprogram_Body_Helper;\n "}, {"sha": "50135afca2a78a6cbed8670329ca4878ad2f184c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=2aca76d6731a7d0602438ada075fcd651bde68cb", "patch": "@@ -4119,7 +4119,7 @@ package Sinfo is\n       --  Then_Statements (List2)\n       --  Elsif_Parts (List3) (set to No_List if none present)\n       --  Else_Statements (List4) (set to No_List if no else part present)\n-      --  End_Span (Uint5) (set to No_Uint if expander generated)\n+      --  End_Span (Uint5) (set to Uint_0 if expander generated)\n \n       --  N_Elsif_Part\n       --  Sloc points to ELSIF\n@@ -4151,7 +4151,7 @@ package Sinfo is\n       --  Sloc points to CASE\n       --  Expression (Node3)\n       --  Alternatives (List4)\n-      --  End_Span (Uint5) (set to No_Uint if expander generated)\n+      --  End_Span (Uint5) (set to Uint_0 if expander generated)\n \n       --  Note: Before Ada 2012, a pragma in a statement sequence is always\n       --  followed by a statement, and this is true in the tree even in Ada"}, {"sha": "a98bd9f376bd412f8845c8947a1538b01a4a1c37", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aca76d6731a7d0602438ada075fcd651bde68cb/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=2aca76d6731a7d0602438ada075fcd651bde68cb", "patch": "@@ -2213,6 +2213,8 @@ package body Uintp is\n    ----------------\n \n    function UI_To_Int (Input : Uint) return Int is\n+      pragma Assert (Input /= No_Uint);\n+\n    begin\n       if Direct (Input) then\n          return Direct_Val (Input);"}]}