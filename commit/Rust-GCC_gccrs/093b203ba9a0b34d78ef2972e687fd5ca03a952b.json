{"sha": "093b203ba9a0b34d78ef2972e687fd5ca03a952b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkzYjIwM2JhOWEwYjM0ZDc4ZWYyOTcyZTY4N2ZkNWNhMDNhOTUyYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2007-04-27T20:47:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2007-04-27T20:47:24Z"}, "message": "re PR middle-end/31710 (ICE in in set_value_range, at tree-vrp.c:278)\n\n./:\tPR middle-end/31710\n\t* tree.c (build_distinct_type_copy): If TYPE_MIN_VALUE or\n\tTYPE_MAX_VALUE exist, convert them to the new type.\ntestsuite/:\n\tPR middle-end/31710\n\t* gcc.c-torture/compile/pr31710.c: New test.\n\nFrom-SVN: r124237", "tree": {"sha": "006d5c059049f9c0e6cad9983831e3959d447bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/006d5c059049f9c0e6cad9983831e3959d447bc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/093b203ba9a0b34d78ef2972e687fd5ca03a952b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093b203ba9a0b34d78ef2972e687fd5ca03a952b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/093b203ba9a0b34d78ef2972e687fd5ca03a952b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/093b203ba9a0b34d78ef2972e687fd5ca03a952b/comments", "author": null, "committer": null, "parents": [{"sha": "30251f7a3a5406def690197174f9769cecf152c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30251f7a3a5406def690197174f9769cecf152c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30251f7a3a5406def690197174f9769cecf152c8"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "9e1510b2f5ed8cac31191bbf8b2bb026de93072c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=093b203ba9a0b34d78ef2972e687fd5ca03a952b", "patch": "@@ -1,3 +1,9 @@\n+2007-04-27  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR middle-end/31710\n+\t* tree.c (build_distinct_type_copy): If TYPE_MIN_VALUE or\n+\tTYPE_MAX_VALUE exist, convert them to the new type.\n+\n 2007-04-27  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-cfgcleanup.c (cleanup_tree_cfg): Verify dominance info"}, {"sha": "22726009746c84145f305f8690093d6addfc6817", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=093b203ba9a0b34d78ef2972e687fd5ca03a952b", "patch": "@@ -1,3 +1,8 @@\n+2007-04-27  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR middle-end/31710\n+\t* gcc.c-torture/compile/pr31710.c: New test.\n+\n 2007-04-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/30965"}, {"sha": "0c8562dbcde057b50a0832b0786d0533f42eda06", "filename": "gcc/testsuite/gcc.c-torture/compile/pr31710.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr31710.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr31710.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr31710.c?ref=093b203ba9a0b34d78ef2972e687fd5ca03a952b", "patch": "@@ -0,0 +1,6 @@\n+typedef short SHORT;\n+struct v { SHORT i; };\n+void f(struct v *pin, struct v *pout) {\n+        if (pin->i == (-0x7fff)-1)\n+            pout->i = -pin->i;\n+}"}, {"sha": "626f8e447c04a259b0259291338c271199117fc3", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/093b203ba9a0b34d78ef2972e687fd5ca03a952b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=093b203ba9a0b34d78ef2972e687fd5ca03a952b", "patch": "@@ -4174,6 +4174,15 @@ build_distinct_type_copy (tree type)\n   TYPE_MAIN_VARIANT (t) = t;\n   TYPE_NEXT_VARIANT (t) = 0;\n   \n+  /* VRP assumes that TREE_TYPE (TYPE_MIN_VALUE (type)) == type.  */\n+  if (INTEGRAL_TYPE_P (t) || SCALAR_FLOAT_TYPE_P (t))\n+    {\n+      if (TYPE_MIN_VALUE (t) != NULL_TREE)\n+\tTYPE_MIN_VALUE (t) = fold_convert (t, TYPE_MIN_VALUE (t));\n+      if (TYPE_MAX_VALUE (t) != NULL_TREE)\n+\tTYPE_MAX_VALUE (t) = fold_convert (t, TYPE_MAX_VALUE (t));\n+    }\n+\n   return t;\n }\n "}]}