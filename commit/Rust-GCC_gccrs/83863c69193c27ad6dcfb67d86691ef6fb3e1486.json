{"sha": "83863c69193c27ad6dcfb67d86691ef6fb3e1486", "node_id": "C_kwDOANBUbNoAKDgzODYzYzY5MTkzYzI3YWQ2ZGNmYjY3ZDg2NjkxZWY2ZmIzZTE0ODY", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-02-26T18:30:49Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-02-28T20:38:35Z"}, "message": "gccrs: refactor unify commit as a static function from unify code\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>\n\ngcc/rust/ChangeLog:\n\n\t* typecheck/rust-unify.cc (UnifyRules::Resolve): refactor\n\t(UnifyRules::commit): refactor\n\t* typecheck/rust-unify.h: likewise", "tree": {"sha": "dbdbe54dc61fa4a0447a18f51768dcbc688e0302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbdbe54dc61fa4a0447a18f51768dcbc688e0302"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83863c69193c27ad6dcfb67d86691ef6fb3e1486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83863c69193c27ad6dcfb67d86691ef6fb3e1486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83863c69193c27ad6dcfb67d86691ef6fb3e1486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83863c69193c27ad6dcfb67d86691ef6fb3e1486/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd849953da2d5a39aa311b5e298bb92cd4b25be4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd849953da2d5a39aa311b5e298bb92cd4b25be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd849953da2d5a39aa311b5e298bb92cd4b25be4"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "e96d6b70379b307127f1ffe4832c36f07fc619b9", "filename": "gcc/rust/typecheck/rust-unify.cc", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83863c69193c27ad6dcfb67d86691ef6fb3e1486/gcc%2Frust%2Ftypecheck%2Frust-unify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83863c69193c27ad6dcfb67d86691ef6fb3e1486/gcc%2Frust%2Ftypecheck%2Frust-unify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-unify.cc?ref=83863c69193c27ad6dcfb67d86691ef6fb3e1486", "patch": "@@ -36,7 +36,7 @@ UnifyRules::Resolve (TyTy::TyWithLocation lhs, TyTy::TyWithLocation rhs,\n   TyTy::BaseType *result = r.go ();\n \n   if (r.commit_flag)\n-    r.commit (result);\n+    UnifyRules::commit (lhs.get_ty (), rhs.get_ty (), result);\n \n   bool failed = result->get_kind () == TyTy::TypeKind::ERROR;\n   if (failed && r.emit_error)\n@@ -58,19 +58,26 @@ UnifyRules::get_other ()\n }\n \n void\n-UnifyRules::commit (TyTy::BaseType *resolved)\n+UnifyRules::commit (TyTy::BaseType *base, TyTy::BaseType *other,\n+\t\t    TyTy::BaseType *resolved)\n {\n-  resolved->append_reference (get_base ()->get_ref ());\n-  resolved->append_reference (get_other ()->get_ref ());\n-  for (auto ref : get_base ()->get_combined_refs ())\n+  TypeCheckContext &context = *TypeCheckContext::get ();\n+  Analysis::Mappings &mappings = *Analysis::Mappings::get ();\n+\n+  TyTy::BaseType *b = base->destructure ();\n+  TyTy::BaseType *o = other->destructure ();\n+\n+  resolved->append_reference (b->get_ref ());\n+  resolved->append_reference (o->get_ref ());\n+  for (auto ref : b->get_combined_refs ())\n     resolved->append_reference (ref);\n-  for (auto ref : get_other ()->get_combined_refs ())\n+  for (auto ref : o->get_combined_refs ())\n     resolved->append_reference (ref);\n \n-  get_other ()->append_reference (resolved->get_ref ());\n-  get_other ()->append_reference (get_base ()->get_ref ());\n-  get_base ()->append_reference (resolved->get_ref ());\n-  get_base ()->append_reference (get_other ()->get_ref ());\n+  o->append_reference (resolved->get_ref ());\n+  o->append_reference (b->get_ref ());\n+  b->append_reference (resolved->get_ref ());\n+  b->append_reference (o->get_ref ());\n \n   bool result_resolved = resolved->get_kind () != TyTy::TypeKind::INFER;\n   bool result_is_infer_var = resolved->get_kind () == TyTy::TypeKind::INFER;"}, {"sha": "15672f1dcb949481b2c4a08adf561de085aa61ca", "filename": "gcc/rust/typecheck/rust-unify.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83863c69193c27ad6dcfb67d86691ef6fb3e1486/gcc%2Frust%2Ftypecheck%2Frust-unify.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83863c69193c27ad6dcfb67d86691ef6fb3e1486/gcc%2Frust%2Ftypecheck%2Frust-unify.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-unify.h?ref=83863c69193c27ad6dcfb67d86691ef6fb3e1486", "patch": "@@ -32,6 +32,9 @@ class UnifyRules\n \t\t\t\t  TyTy::TyWithLocation rhs, Location locus,\n \t\t\t\t  bool commit_flag, bool emit_error);\n \n+  static void commit (TyTy::BaseType *base, TyTy::BaseType *other,\n+\t\t      TyTy::BaseType *resolved);\n+\n protected:\n   TyTy::BaseType *expect_inference_variable (TyTy::InferType *ltype,\n \t\t\t\t\t     TyTy::BaseType *rtype);\n@@ -69,7 +72,7 @@ class UnifyRules\n \t      Location locus, bool commit_flag, bool emit_error);\n \n   void emit_type_mismatch () const;\n-  void commit (TyTy::BaseType *resolved);\n+\n   TyTy::BaseType *go ();\n \n   TyTy::BaseType *get_base ();"}]}