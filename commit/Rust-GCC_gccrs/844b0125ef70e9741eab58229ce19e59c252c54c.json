{"sha": "844b0125ef70e9741eab58229ce19e59c252c54c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ0YjAxMjVlZjcwZTk3NDFlYWI1ODIyOWNlMTllNTljMjUyYzU0Yw==", "commit": {"author": {"name": "Ilya Verbin", "email": "ilya.verbin@intel.com", "date": "2014-11-19T13:52:12Z"}, "committer": {"name": "Ilya Verbin", "email": "iverbin@gcc.gnu.org", "date": "2014-11-19T13:52:12Z"}, "message": "re PR regression/63868 (Multiple failures in the libgomp test suite between r217458 and r217501.)\n\n\tPR regression/63868\n\t* cgraph.c (cgraph_node::create): Guard g->have_offload with\n\tifdef ENABLE_OFFLOADING.\n\t* omp-low.c (create_omp_child_function): Likewise.\n\t(expand_omp_target): Guard node->mark_force_output and offload_funcs\n\twith ifdef ENABLE_OFFLOADING.\n\t* varpool.c (varpool_node::get_create): Guard g->have_offload and\n\toffload_vars with ifdef ENABLE_OFFLOADING.\n\nFrom-SVN: r217773", "tree": {"sha": "7425286d248e3efa9597683c1a1ba65ee1f7eb96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7425286d248e3efa9597683c1a1ba65ee1f7eb96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/844b0125ef70e9741eab58229ce19e59c252c54c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844b0125ef70e9741eab58229ce19e59c252c54c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844b0125ef70e9741eab58229ce19e59c252c54c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844b0125ef70e9741eab58229ce19e59c252c54c/comments", "author": null, "committer": null, "parents": [{"sha": "0096508a2590c3130e23f8c81f443065abcf545e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0096508a2590c3130e23f8c81f443065abcf545e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0096508a2590c3130e23f8c81f443065abcf545e"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "6e1f93069c19f82eff3e231578c4ca709fbfc7d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=844b0125ef70e9741eab58229ce19e59c252c54c", "patch": "@@ -1,3 +1,14 @@\n+2014-11-19  Ilya Verbin  <ilya.verbin@intel.com>\n+\n+\tPR regression/63868\n+\t* cgraph.c (cgraph_node::create): Guard g->have_offload with\n+\tifdef ENABLE_OFFLOADING.\n+\t* omp-low.c (create_omp_child_function): Likewise.\n+\t(expand_omp_target): Guard node->mark_force_output and offload_funcs\n+\twith ifdef ENABLE_OFFLOADING.\n+\t* varpool.c (varpool_node::get_create): Guard g->have_offload and\n+\toffload_vars with ifdef ENABLE_OFFLOADING.\n+\n 2014-11-19  Felix Yang  <felix.yang@huawei.com>\n \t    Shanyao Chen  <chenshanyao@huawei.com>\n "}, {"sha": "18ae6a807ce9b3a4f30ca90b52075baab94e5784", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=844b0125ef70e9741eab58229ce19e59c252c54c", "patch": "@@ -500,7 +500,9 @@ cgraph_node::create (tree decl)\n       && lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl)))\n     {\n       node->offloadable = 1;\n+#ifdef ENABLE_OFFLOADING\n       g->have_offload = true;\n+#endif\n     }\n \n   node->register_symbol ();"}, {"sha": "ddb720c4a7f925912333c16793f3967af5abc18c", "filename": "gcc/omp-low.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=844b0125ef70e9741eab58229ce19e59c252c54c", "patch": "@@ -1962,7 +1962,9 @@ create_omp_child_function (omp_context *ctx, bool task_copy)\n \tif (is_targetreg_ctx (octx))\n \t  {\n \t    cgraph_node::get_create (decl)->offloadable = 1;\n+#ifdef ENABLE_OFFLOADING\n \t    g->have_offload = true;\n+#endif\n \t    break;\n \t  }\n     }\n@@ -8288,7 +8290,6 @@ expand_omp_target (struct omp_region *region)\n   if (kind == GF_OMP_TARGET_KIND_REGION)\n     {\n       unsigned srcidx, dstidx, num;\n-      struct cgraph_node *node;\n \n       /* If the target region needs data sent from the parent\n \t function, then the very first statement (except possible\n@@ -8415,18 +8416,22 @@ expand_omp_target (struct omp_region *region)\n       DECL_STRUCT_FUNCTION (child_fn)->curr_properties = cfun->curr_properties;\n       cgraph_node::add_new_function (child_fn, true);\n \n+#ifdef ENABLE_OFFLOADING\n       /* Add the new function to the offload table.  */\n       vec_safe_push (offload_funcs, child_fn);\n+#endif\n \n       /* Fix the callgraph edges for child_cfun.  Those for cfun will be\n \t fixed in a following pass.  */\n       push_cfun (child_cfun);\n       cgraph_edge::rebuild_edges ();\n \n+#ifdef ENABLE_OFFLOADING\n       /* Prevent IPA from removing child_fn as unreachable, since there are no\n \t refs from the parent function to child_fn in offload LTO mode.  */\n-      node = cgraph_node::get (child_fn);\n+      struct cgraph_node *node = cgraph_node::get (child_fn);\n       node->mark_force_output ();\n+#endif\n \n       /* Some EH regions might become dead, see PR34608.  If\n \t pass_cleanup_cfg isn't the first pass to happen with the\n@@ -12503,7 +12508,7 @@ omp_finish_file (void)\n \n       varpool_node::finalize_decl (vars_decl);\n       varpool_node::finalize_decl (funcs_decl);\n-   }\n+    }\n   else\n     {\n       for (unsigned i = 0; i < num_funcs; i++)"}, {"sha": "50f2e6e755add8e69ee5886bba7fe8580f60d8e2", "filename": "gcc/varpool.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844b0125ef70e9741eab58229ce19e59c252c54c/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=844b0125ef70e9741eab58229ce19e59c252c54c", "patch": "@@ -171,9 +171,11 @@ varpool_node::get_create (tree decl)\n       && lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl)))\n     {\n       node->offloadable = 1;\n+#ifdef ENABLE_OFFLOADING\n       g->have_offload = true;\n       if (!in_lto_p)\n \tvec_safe_push (offload_vars, decl);\n+#endif\n     }\n \n   node->register_symbol ();"}]}