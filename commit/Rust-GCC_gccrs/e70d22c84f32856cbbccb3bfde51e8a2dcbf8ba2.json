{"sha": "e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcwZDIyYzg0ZjMyODU2Y2JiY2NiM2JmZGU1MWU4YTJkY2JmOGJhMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-24T15:17:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-24T15:17:02Z"}, "message": "(expand_expr, case SAVE_EXPR): Fix error in last change.\n\nFrom-SVN: r7141", "tree": {"sha": "3516820fd1cd11b6292ff0a852d5392c6670fb47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3516820fd1cd11b6292ff0a852d5392c6670fb47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2/comments", "author": null, "committer": null, "parents": [{"sha": "0aaf4a5876d9d4a4b3a6c42d0270358ea626fafb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aaf4a5876d9d4a4b3a6c42d0270358ea626fafb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aaf4a5876d9d4a4b3a6c42d0270358ea626fafb"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "a21ad1cc9155d47427dbc4c2ac57f5b3a962d84d", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e70d22c84f32856cbbccb3bfde51e8a2dcbf8ba2", "patch": "@@ -3952,8 +3952,9 @@ expand_expr (exp, target, tmode, modifier)\n       if (GET_CODE (SAVE_EXPR_RTL (exp)) == REG\n \t  && GET_MODE (SAVE_EXPR_RTL (exp)) != mode)\n \t{\n-\t  temp = gen_rtx (SUBREG, promote_mode (type, mode, &unsignedp, 0),\n-\t\t\t  SAVE_EXPR_RTL (exp), 0);\n+\t  /* Compute the signedness and make the proper SUBREG.  */\n+\t  promote_mode (type, mode, &unsignedp, 0);\n+\t  temp = gen_rtx (SUBREG, mode, SAVE_EXPR_RTL (exp), 0);\n \t  SUBREG_PROMOTED_VAR_P (temp) = 1;\n \t  SUBREG_PROMOTED_UNSIGNED_P (temp) = unsignedp;\n \t  return temp;"}]}