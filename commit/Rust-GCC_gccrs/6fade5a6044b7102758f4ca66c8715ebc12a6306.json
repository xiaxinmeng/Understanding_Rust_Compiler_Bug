{"sha": "6fade5a6044b7102758f4ca66c8715ebc12a6306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZhZGU1YTYwNDRiNzEwMjc1OGY0Y2E2NmM4NzE1ZWJjMTJhNjMwNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-22T12:07:29Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-23T07:48:10Z"}, "message": "LTO: check that make command works\n\ngcc/ChangeLog:\n\n\tPR lto/97524\n\t* lto-wrapper.c (make_exists): New function.\n\t(run_gcc): Use it to check that make is present and working\n\tfor parallel execution.", "tree": {"sha": "222c899d269ab7d39116f7917128b368b9747ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/222c899d269ab7d39116f7917128b368b9747ee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fade5a6044b7102758f4ca66c8715ebc12a6306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fade5a6044b7102758f4ca66c8715ebc12a6306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fade5a6044b7102758f4ca66c8715ebc12a6306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fade5a6044b7102758f4ca66c8715ebc12a6306/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cda498920dbf244e9e06fdb2fc710a118a8c033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cda498920dbf244e9e06fdb2fc710a118a8c033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cda498920dbf244e9e06fdb2fc710a118a8c033"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "b2af3caa021b904dfb43fe4d65884393f95d71db", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fade5a6044b7102758f4ca66c8715ebc12a6306/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fade5a6044b7102758f4ca66c8715ebc12a6306/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=6fade5a6044b7102758f4ca66c8715ebc12a6306", "patch": "@@ -1334,6 +1334,26 @@ jobserver_active_p (void)\n     return JS_PREFIX \"cannot access %<\" JS_NEEDLE \"%> file descriptors\";\n }\n \n+/* Test that a make command is present and working, return true if so.  */\n+\n+static bool\n+make_exists (void)\n+{\n+  const char *make = \"make\";\n+  char **make_argv = buildargv (getenv (\"MAKE\"));\n+  if (make_argv)\n+    make = make_argv[0];\n+  const char *make_args[] = {make, \"--version\", NULL};\n+\n+  int exit_status = 0;\n+  int err = 0;\n+  const char *errmsg\n+    = pex_one (PEX_SEARCH, make_args[0], CONST_CAST (char **, make_args),\n+\t       \"make\", NULL, NULL, &exit_status, &err);\n+  freeargv (make_argv);\n+  return errmsg == NULL && exit_status == 0 && err == 0;\n+}\n+\n /* Execute gcc. ARGC is the number of arguments. ARGV contains the arguments. */\n \n static void\n@@ -1570,6 +1590,10 @@ run_gcc (unsigned argc, char *argv[])\n \t}\n     }\n \n+  /* We need make working for a parallel execution.  */\n+  if (parallel && !make_exists ())\n+    parallel = 0;\n+\n   if (!dumppfx)\n     {\n       if (!linker_output"}]}