{"sha": "22a707a49732eb577015de4e9fd921f17a18a647", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhNzA3YTQ5NzMyZWI1NzcwMTVkZTRlOWZkOTIxZjE3YTE4YTY0Nw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2005-05-23T16:43:06Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-23T16:43:06Z"}, "message": "s390.c (s390_optimize_prologue): Don't replace an insn saving less registers than the replacement.\n\n2005-05-23  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (s390_optimize_prologue): Don't replace an insn\n\tsaving less registers than the replacement.\n\nFrom-SVN: r100081", "tree": {"sha": "75fe125e64472287e5cab8c642b6da6eefe175a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75fe125e64472287e5cab8c642b6da6eefe175a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22a707a49732eb577015de4e9fd921f17a18a647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a707a49732eb577015de4e9fd921f17a18a647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a707a49732eb577015de4e9fd921f17a18a647", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a707a49732eb577015de4e9fd921f17a18a647/comments", "author": null, "committer": null, "parents": [{"sha": "52f6de6c7bcf4026fa5ec64d21993b333aa58d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52f6de6c7bcf4026fa5ec64d21993b333aa58d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52f6de6c7bcf4026fa5ec64d21993b333aa58d5f"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "783c56dbf6c406935a7453c8cc7154795ebb0d78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a707a49732eb577015de4e9fd921f17a18a647/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a707a49732eb577015de4e9fd921f17a18a647/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22a707a49732eb577015de4e9fd921f17a18a647", "patch": "@@ -1,3 +1,8 @@\n+2005-05-23  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_optimize_prologue): Don't replace an insn\n+\tsaving less registers than the replacement.\n+\n 2005-05-23  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-flow.h (stmt_ann_d): Kill GTY ((skip)) mark on BB."}, {"sha": "9de797a97a33cba5bd35492fcaa52b5efa4e01ea", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 12, "deletions": 22, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a707a49732eb577015de4e9fd921f17a18a647/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a707a49732eb577015de4e9fd921f17a18a647/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=22a707a49732eb577015de4e9fd921f17a18a647", "patch": "@@ -7951,6 +7951,10 @@ s390_optimize_prologue (void)\n \n \t  if (GET_CODE (base) != REG || off < 0)\n \t    continue;\n+\t  if (cfun_frame_layout.first_save_gpr != -1\n+\t      && (cfun_frame_layout.first_save_gpr < first\n+\t\t  || cfun_frame_layout.last_save_gpr > last))\n+\t    continue;\n \t  if (REGNO (base) != STACK_POINTER_REGNUM\n \t      && REGNO (base) != HARD_FRAME_POINTER_REGNUM)\n \t    continue;\n@@ -7972,7 +7976,8 @@ s390_optimize_prologue (void)\n \t  continue;\n \t}\n \n-      if (GET_CODE (PATTERN (insn)) == SET\n+      if (cfun_frame_layout.first_save_gpr == -1\n+\t  && GET_CODE (PATTERN (insn)) == SET\n \t  && GET_CODE (SET_SRC (PATTERN (insn))) == REG\n \t  && (REGNO (SET_SRC (PATTERN (insn))) == BASE_REGNUM\n \t      || (!TARGET_CPU_ZARCH\n@@ -7990,16 +7995,6 @@ s390_optimize_prologue (void)\n \t  if (REGNO (base) != STACK_POINTER_REGNUM\n \t      && REGNO (base) != HARD_FRAME_POINTER_REGNUM)\n \t    continue;\n-\t  if (cfun_frame_layout.first_save_gpr != -1)\n-\t    {\n-\t      new_insn = save_gprs (base, \n-\t\t\t\t    off + (cfun_frame_layout.first_save_gpr \n-\t\t\t\t\t   - first) * UNITS_PER_WORD, \n-\t\t\t\t    cfun_frame_layout.first_save_gpr,\n-\t\t\t\t    cfun_frame_layout.last_save_gpr);\n-\t      new_insn = emit_insn_before (new_insn, insn);\n-\t      INSN_ADDRESSES_NEW (new_insn, -1);\n-\t    }\n \n \t  remove_insn (insn);\n \t  continue;\n@@ -8017,6 +8012,10 @@ s390_optimize_prologue (void)\n \n \t  if (GET_CODE (base) != REG || off < 0)\n \t    continue;\n+\t  if (cfun_frame_layout.first_restore_gpr != -1\n+\t      && (cfun_frame_layout.first_restore_gpr < first\n+\t\t  || cfun_frame_layout.last_restore_gpr > last))\n+\t    continue;\n \t  if (REGNO (base) != STACK_POINTER_REGNUM\n \t      && REGNO (base) != HARD_FRAME_POINTER_REGNUM)\n \t    continue;\n@@ -8038,7 +8037,8 @@ s390_optimize_prologue (void)\n \t  continue;\n \t}\n \n-      if (GET_CODE (PATTERN (insn)) == SET\n+      if (cfun_frame_layout.first_restore_gpr == -1\n+\t  && GET_CODE (PATTERN (insn)) == SET\n \t  && GET_CODE (SET_DEST (PATTERN (insn))) == REG\n \t  && (REGNO (SET_DEST (PATTERN (insn))) == BASE_REGNUM\n \t      || (!TARGET_CPU_ZARCH\n@@ -8056,16 +8056,6 @@ s390_optimize_prologue (void)\n \t  if (REGNO (base) != STACK_POINTER_REGNUM\n \t      && REGNO (base) != HARD_FRAME_POINTER_REGNUM)\n \t    continue;\n-\t  if (cfun_frame_layout.first_restore_gpr != -1)\n-\t    {\n-\t      new_insn = restore_gprs (base, \n-\t\t\t\t       off + (cfun_frame_layout.first_restore_gpr \n-\t\t\t\t\t      - first) * UNITS_PER_WORD,\n-\t\t\t\t       cfun_frame_layout.first_restore_gpr,\n-\t\t\t\t       cfun_frame_layout.last_restore_gpr);\n-\t      new_insn = emit_insn_before (new_insn, insn);\n-\t      INSN_ADDRESSES_NEW (new_insn, -1);\n-\t    }\n \n \t  remove_insn (insn);\n \t  continue;"}]}