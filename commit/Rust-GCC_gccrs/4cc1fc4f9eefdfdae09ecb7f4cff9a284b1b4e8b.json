{"sha": "4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNjMWZjNGY5ZWVmZGZkYWUwOWVjYjdmNGNmZjlhMjg0YjFiNGU4Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-08-10T18:56:35Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-08-10T18:56:35Z"}, "message": "compiler: annotate or fix fall through cases in switch statements\n    \n    A new GCC warning, -Wimplicit-fallthrough, detected these three cases\n    where a switch case falls through to another.  One of them looks like\n    a bug, so I fixed it; the two other look like intended fall throughs\n    so I just added a \"fall through\" comment to suppress the GCC warning.\n    \n    Bootstrapped and ran Go testsuite on x86_64-pc-linux-gnu.\n    \n    Reviewed-on: https://go-review.googlesource.com/26695\n\nFrom-SVN: r239332", "tree": {"sha": "f0af15a57dfdab3f9e66d033ad33fdf6825291c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0af15a57dfdab3f9e66d033ad33fdf6825291c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b/comments", "author": null, "committer": null, "parents": [{"sha": "5a02adf63e73d0894b72f13505a4a7e6d154ea20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a02adf63e73d0894b72f13505a4a7e6d154ea20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a02adf63e73d0894b72f13505a4a7e6d154ea20"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "68e414b4e8b1834ec827981e9c84b9a3ef474c14", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b", "patch": "@@ -1,4 +1,4 @@\n-8da2129a005cc1f44d4d993b0b7312b64c0d68a4\n+5e05b7bc947231b4d5a8327bf63e2fa648e51dc7\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "ee7fa0933447d8ac46488418bb95e6fdc81cf04c", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b", "patch": "@@ -281,6 +281,7 @@ Node::op_format() const\n \t\t{\n \t\tcase Runtime::PANIC:\n \t\t  op << \"panic\";\n+\t\t  break;\n \n \t\tcase Runtime::APPEND:\n \t\t  op << \"append\";\n@@ -1923,6 +1924,7 @@ Escape_analysis_assign::assign(Node* dst, Node* src)\n \t    if (!e->type()->has_pointer())\n \t      break;\n \t  }\n+\t  // Fall through.\n \n \tcase Expression::EXPRESSION_CONVERSION:\n \tcase Expression::EXPRESSION_TYPE_GUARD:"}, {"sha": "bdc14aa22080afbf172fdbfd6ac7f51627e6024f", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=4cc1fc4f9eefdfdae09ecb7f4cff9a284b1b4e8b", "patch": "@@ -5767,6 +5767,7 @@ Binary_expression::do_get_backend(Translate_context* context)\n     case OPERATOR_DIV:\n       if (left_type->float_type() != NULL || left_type->complex_type() != NULL)\n         break;\n+      // Fall through.\n     case OPERATOR_MOD:\n       is_idiv_op = true;\n       break;"}]}