{"sha": "5cb6410a270421888033a4489c9f46d979324877", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNiNjQxMGEyNzA0MjE4ODgwMzNhNDQ4OWM5ZjQ2ZDk3OTMyNDg3Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-04-30T20:48:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-04-30T20:48:12Z"}, "message": "re PR c++/43868 (ICE with -g)\n\n\tPR c++/43868\n\t* cxx-pretty-print.c (pp_cxx_decl_specifier_seq): Move pmf handling...\n\t(pp_cxx_type_specifier_seq): ...here.\n\nFrom-SVN: r158947", "tree": {"sha": "6c3ee1387a4d461316c59089e7b063a90fc06d63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c3ee1387a4d461316c59089e7b063a90fc06d63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cb6410a270421888033a4489c9f46d979324877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb6410a270421888033a4489c9f46d979324877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb6410a270421888033a4489c9f46d979324877", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb6410a270421888033a4489c9f46d979324877/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8267740011a51a553aadedc6b949bddc40770ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8267740011a51a553aadedc6b949bddc40770ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8267740011a51a553aadedc6b949bddc40770ccc"}], "stats": {"total": 69, "additions": 59, "deletions": 10}, "files": [{"sha": "1818d0cd8897101492a5fb7fcba5005842477fe1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb6410a270421888033a4489c9f46d979324877/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb6410a270421888033a4489c9f46d979324877/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5cb6410a270421888033a4489c9f46d979324877", "patch": "@@ -1,3 +1,9 @@\n+2010-04-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/43868\n+\t* cxx-pretty-print.c (pp_cxx_decl_specifier_seq): Move pmf handling...\n+\t(pp_cxx_type_specifier_seq): ...here.\n+\n 2010-04-30  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* optimize.c, parser.c, mangle.c, cp-tree.h: Do not include varray.h."}, {"sha": "7b92272525d7b320752e8ae549adb9597e77d9e4", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb6410a270421888033a4489c9f46d979324877/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb6410a270421888033a4489c9f46d979324877/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=5cb6410a270421888033a4489c9f46d979324877", "patch": "@@ -1170,16 +1170,6 @@ pp_cxx_decl_specifier_seq (cxx_pretty_printer *pp, tree t)\n       pp_cxx_decl_specifier_seq (pp, TREE_TYPE (t));\n       break;\n \n-    case RECORD_TYPE:\n-      if (TYPE_PTRMEMFUNC_P (t))\n-\t{\n-\t  tree pfm = TYPE_PTRMEMFUNC_FN_TYPE (t);\n-\t  pp_cxx_decl_specifier_seq (pp, TREE_TYPE (TREE_TYPE (pfm)));\n-\t  pp_cxx_whitespace (pp);\n-\t  pp_cxx_ptr_operator (pp, t);\n-\t}\n-      break;\n-\n     case FUNCTION_DECL:\n       /* Constructors don't have return types.  And conversion functions\n \t do not have a type-specifier in their return types.  */\n@@ -1275,6 +1265,17 @@ pp_cxx_type_specifier_seq (cxx_pretty_printer *pp, tree t)\n       pp_cxx_right_paren (pp);\n       break;\n \n+    case RECORD_TYPE:\n+      if (TYPE_PTRMEMFUNC_P (t))\n+\t{\n+\t  tree pfm = TYPE_PTRMEMFUNC_FN_TYPE (t);\n+\t  pp_cxx_decl_specifier_seq (pp, TREE_TYPE (TREE_TYPE (pfm)));\n+\t  pp_cxx_whitespace (pp);\n+\t  pp_cxx_ptr_operator (pp, t);\n+\t  break;\n+\t}\n+      /* else fall through */\n+\n     default:\n       if (!(TREE_CODE (t) == FUNCTION_DECL && DECL_CONSTRUCTOR_P (t)))\n \tpp_c_specifier_qualifier_list (pp_c_base (pp), t);"}, {"sha": "5a026378c11cb448eeba536e4601f2c29db90cb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb6410a270421888033a4489c9f46d979324877/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb6410a270421888033a4489c9f46d979324877/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cb6410a270421888033a4489c9f46d979324877", "patch": "@@ -1,3 +1,8 @@\n+2010-04-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/43868\n+\t* g++.dg/template/ptrmem21.C: New.\n+\n 2010-04-30  Tobias Burnus  Mburnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "c30fa38fc4210cc4576875e3ec45171987aece5d", "filename": "gcc/testsuite/g++.dg/template/ptrmem21.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb6410a270421888033a4489c9f46d979324877/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb6410a270421888033a4489c9f46d979324877/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem21.C?ref=5cb6410a270421888033a4489c9f46d979324877", "patch": "@@ -0,0 +1,37 @@\n+// PR c++/43868\n+// { dg-options \"-g\" }\n+\n+struct Foo\n+{\n+    virtual void do_something() = 0;\n+};\n+\n+template <typename T>\n+struct Foo_impl;\n+\n+template <typename R, typename O>\n+struct Foo_impl<R (O::*)() const> : public Foo\n+{\n+    struct Helper\n+    {\n+        typedef int Some_type;\n+        operator Some_type () const { return 0; }\n+        Helper( R (O::*)() const) {}\n+    };\n+\n+    void do_something() {  Helper( 0); };\n+};\n+\n+void register_foo_internal( Foo*) {};\n+\n+template <typename TT>\n+void register_foo( TT) { register_foo_internal( new Foo_impl<TT>()); }\n+\n+struct Bar\n+{\n+};\n+\n+void setup()\n+{\n+    register_foo( (int (Bar::*) () const) 0);\n+}"}]}