{"sha": "a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlkYzg2OGZmYjNmYjUwZTkyMTQ4MjNjMzIyY2FiN2M2Y2Y3MmUzMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-12-20T08:26:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-12-20T08:26:20Z"}, "message": "simplify-rtx.c (simplifi_binary_operation): If DIV has narrower mode than op0, only return the bits in DIV's mode.\n\n\t* simplify-rtx.c (simplifi_binary_operation) [DIV]: If DIV has\n\tnarrower mode than op0, only return the bits in DIV's mode.\n\n\t* gcc.c-torture/compile/20011219-2.c: New test.\n\nFrom-SVN: r48199", "tree": {"sha": "ea0ef2f6d06f6f68479430c907804e9f4ea87dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea0ef2f6d06f6f68479430c907804e9f4ea87dd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a3b43b609ca4f3850226eecb5fec29f1ab80d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3b43b609ca4f3850226eecb5fec29f1ab80d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3b43b609ca4f3850226eecb5fec29f1ab80d35"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "0f25ad6dec239389f2ac467ca8740ee095323e53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "patch": "@@ -1,3 +1,8 @@\n+2001-12-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* simplify-rtx.c (simplifi_binary_operation) [DIV]: If DIV has\n+\tnarrower mode than op0, only return the bits in DIV's mode.\n+\n 2001-12-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* combine.c (distribute_notes): Avoid adding REG_LABEL notes"}, {"sha": "2b25d9c799a69742ff5c6a0c53343f8a930eb0dc", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "patch": "@@ -1412,7 +1412,10 @@ simplify_binary_operation (code, mode, op0, op1)\n \n \tcase DIV:\n \t  if (trueop1 == CONST1_RTX (mode))\n-\t    return op0;\n+\t    {\n+\t      rtx x = gen_lowpart_common (mode, op0);\n+\t      return x ? x : op0;\n+\t    }\n \n \t  /* In IEEE floating point, 0/x is not always 0.  */\n \t  if ((TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT"}, {"sha": "aaee1d55371cc1475fc08a481a19c478cbf3a1bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "patch": "@@ -1,5 +1,7 @@\n 2001-12-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.c-torture/compile/20011219-2.c: New test.\n+\n \t* gcc.c-torture/execute/20011219-1.c: New test.\n \n 2001-12-19  David Billinghurst <David.Billinghurst@riotinto.com>"}, {"sha": "2ad7eb1a372f3bfa0ccff5ecd6c569e927f472d7", "filename": "gcc/testsuite/gcc.c-torture/compile/20011219-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011219-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dc868ffb3fb50e9214823c322cab7c6cf72e30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011219-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011219-2.c?ref=a9dc868ffb3fb50e9214823c322cab7c6cf72e30", "patch": "@@ -0,0 +1,20 @@\n+/* This testcase failed on Alpha at -O2 when simplifying conditional\n+   expressions.  */\n+\n+struct S {\n+  unsigned long a;\n+  double b, c;\n+};\n+\n+extern double bar (double, double);\n+\n+int\n+foo (unsigned long x, unsigned int y, struct S *z)\n+{\n+  unsigned int a = z->a;\n+  int b = y / z->a > 1 ? y / z->a : 1;\n+\n+  a = y / b < z->a ? y / b : z->a;\n+  z->c = z->b * bar ((double) a, (double) x);\n+  return 0;\n+}"}]}