{"sha": "6edd81980fbf769971b1e77bb1d679b329d2255a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVkZDgxOTgwZmJmNzY5OTcxYjFlNzdiYjFkNjc5YjMyOWQyMjU1YQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2010-03-10T12:53:51Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2010-03-10T12:53:51Z"}, "message": "re PR tree-optimization/43236 (-ftree-loop-distribution produces wrong code in reload1.c:delete_output_reload(), bootstrap fails)\n\n        PR tree-optimization/43236\n        * tree-loop-distribution.c (generate_memset_zero): Fix off-by-one\n        error in calculation of base address in reverse iteration case.\n        (generate_builtin): Take number of latch executions if the statement\n        is in the latch.\n    \n        * gcc.c-torture/execute/pr43236.c: New.\n\nFrom-SVN: r157339", "tree": {"sha": "e704aea341ddf402a0ef3b846957f3e6e56479ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e704aea341ddf402a0ef3b846957f3e6e56479ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6edd81980fbf769971b1e77bb1d679b329d2255a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edd81980fbf769971b1e77bb1d679b329d2255a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6edd81980fbf769971b1e77bb1d679b329d2255a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edd81980fbf769971b1e77bb1d679b329d2255a/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f698956d92618730bae35fddd33452dcb41a47e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f698956d92618730bae35fddd33452dcb41a47e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f698956d92618730bae35fddd33452dcb41a47e"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "55a998cfc623f8b273999e7c16966c3339cf9e6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6edd81980fbf769971b1e77bb1d679b329d2255a", "patch": "@@ -1,3 +1,11 @@\n+2010-03-10  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR tree-optimization/43236\n+\t* tree-loop-distribution.c (generate_memset_zero): Fix off-by-one\n+\terror in calculation of base address in reverse iteration case.\n+\t(generate_builtin): Take number of latch executions if the statement\n+\tis in the latch.\n+\n 2010-03-10  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR middle-end/42859"}, {"sha": "edb88dd099b630119a2f264376e270808982aa23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6edd81980fbf769971b1e77bb1d679b329d2255a", "patch": "@@ -1,3 +1,8 @@\n+2010-03-10  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR tree-optimization/43236\n+\t* gcc.c-torture/execute/pr43236.c: New test.\n+\n 2010-03-10  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR middle-end/42859"}, {"sha": "0401c88a3dcc27974ea03bba8d2fc2922db9b637", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43236.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43236.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43236.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43236.c?ref=6edd81980fbf769971b1e77bb1d679b329d2255a", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-options \"-ftree-loop-distribution\" } */\n+extern void abort(void);\n+extern void *memset(void *s, int c, __SIZE_TYPE__ n);\n+extern int memcmp(const void *s1, const void *s2, __SIZE_TYPE__ n);\n+/*extern int printf(const char *format, ...);*/\n+\n+int main()\n+{\n+  char A[30], B[30], C[30];\n+  int i;\n+\n+  /* prepare arrays */\n+  memset(A, 1, 30);\n+  memset(B, 1, 30);\n+\n+  for (i = 20; i-- > 10;) {\n+    A[i] = 0;\n+    B[i] = 0;\n+  }\n+\n+  /* expected result */\n+  memset(C, 1, 30);\n+  memset(C + 10, 0, 10);\n+\n+  /* show result */\n+/*  for (i = 0; i < 30; i++)\n+    printf(\"%d %d %d\\n\", A[i], B[i], C[i]); */\n+\n+  /* compare results */\n+  if (memcmp(A, C, 30) || memcmp(B, C, 30)) abort();\n+  return 0;\n+}"}, {"sha": "74120c6e7a3f7ab682aa027f2af52b250dcbe8a9", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edd81980fbf769971b1e77bb1d679b329d2255a/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=6edd81980fbf769971b1e77bb1d679b329d2255a", "patch": "@@ -285,6 +285,8 @@ generate_memset_zero (gimple stmt, tree op0, tree nb_iter,\n       addr_base = fold_convert_loc (loc, sizetype, addr_base);\n       addr_base = size_binop_loc (loc, MINUS_EXPR, addr_base,\n \t\t\t\t  fold_convert_loc (loc, sizetype, nb_bytes));\n+      addr_base = size_binop_loc (loc, PLUS_EXPR, addr_base,\n+\t\t\t\t  TYPE_SIZE_UNIT (TREE_TYPE (op0)));\n       addr_base = fold_build2_loc (loc, POINTER_PLUS_EXPR,\n \t\t\t\t   TREE_TYPE (DR_BASE_ADDRESS (dr)),\n \t\t\t\t   DR_BASE_ADDRESS (dr), addr_base);\n@@ -389,6 +391,8 @@ generate_builtin (struct loop *loop, bitmap partition, bool copy_p)\n \t\tgoto end;\n \n \t      write = stmt;\n+\t      if (bb == loop->latch)\n+\t\tnb_iter = number_of_latch_executions (loop);\n \t    }\n \t}\n     }"}]}