{"sha": "df4d18ad801420200b2698b7d637f4e7d6ba2507", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY0ZDE4YWQ4MDE0MjAyMDBiMjY5OGI3ZDYzN2Y0ZTdkNmJhMjUwNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-10T19:17:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-10T19:17:27Z"}, "message": "PR libstdc++/42261 (take 2)\n\n2009-12-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/42261 (take 2)\n\t* include/bits/basic_string.h (_S_construct_aux_2(size_type, _CharT,\n\tconst _Alloc&)): Add.\n\t(_S_construct_aux(_Integer, _Integer, const _Alloc&, __true_type)):\n\tCall it.\n\t* include/ext/sso_string_base.h (_M_construct_aux_2(size_type,\n\t_CharT): Add.\n\t(_M_construct_aux(_Integer, _Integer, std::__true_type)): Call it.\n\t* include/ext/rc_string_base.h (_S_construct_aux_2(size_type, _CharT,\n\tconst _Alloc&)): Add.\n\t(_S_construct_aux(_Integer, _Integer, const _Alloc&, __true_type)):\n\tCall it.\n\t* config/abi/pre/gnu.ver: Export basic_string::_S_construct_aux_2.\n\t* testsuite/21_strings/basic_string/cons/char/42261.cc: New.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/42261.cc: Likewise.\n\nFrom-SVN: r155137", "tree": {"sha": "23c754bd4901ff295a367f479745fd4349f1fd3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c754bd4901ff295a367f479745fd4349f1fd3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df4d18ad801420200b2698b7d637f4e7d6ba2507", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df4d18ad801420200b2698b7d637f4e7d6ba2507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df4d18ad801420200b2698b7d637f4e7d6ba2507", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df4d18ad801420200b2698b7d637f4e7d6ba2507/comments", "author": null, "committer": null, "parents": [{"sha": "d435810e760bccf8d45f440d7fe85068fb621a2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d435810e760bccf8d45f440d7fe85068fb621a2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d435810e760bccf8d45f440d7fe85068fb621a2e"}], "stats": {"total": 112, "additions": 108, "deletions": 4}, "files": [{"sha": "da30ea7f405bcd5ca690879d6bc1508528bf07b0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=df4d18ad801420200b2698b7d637f4e7d6ba2507", "patch": "@@ -1,3 +1,21 @@\n+2009-12-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/42261 (take 2)\n+\t* include/bits/basic_string.h (_S_construct_aux_2(size_type, _CharT,\n+\tconst _Alloc&)): Add.\n+\t(_S_construct_aux(_Integer, _Integer, const _Alloc&, __true_type)):\n+\tCall it.\n+\t* include/ext/sso_string_base.h (_M_construct_aux_2(size_type,\n+\t_CharT): Add.\n+\t(_M_construct_aux(_Integer, _Integer, std::__true_type)): Call it.\n+\t* include/ext/rc_string_base.h (_S_construct_aux_2(size_type, _CharT,\n+\tconst _Alloc&)): Add.\n+\t(_S_construct_aux(_Integer, _Integer, const _Alloc&, __true_type)):\n+\tCall it.\n+\t* config/abi/pre/gnu.ver: Export basic_string::_S_construct_aux_2.\n+\t* testsuite/21_strings/basic_string/cons/char/42261.cc: New.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/42261.cc: Likewise.\n+\n 2009-12-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tRevert:"}, {"sha": "20baa966f39eb6203723eb3cd15297ef11b5b1b9", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=df4d18ad801420200b2698b7d637f4e7d6ba2507", "patch": "@@ -1039,9 +1039,11 @@ GLIBCXX_3.4.14 {\n     _ZNKSbIwSt11char_traitsIwESaIwEE7crbeginEv;\n     _ZNKSbIwSt11char_traitsIwESaIwEE5crendEv;\n \n-    # string|wstring ::_S_construct<> helpers\n+    # string|wstring ::_S_construct<> and ::_S_construct_aux_2 helpers\n     _ZNSs12_S_constructI*;\n     _ZNSbIwSt11char_traitsIwESaIwEE12_S_constructI*;\n+    _ZNSs18_S_construct_aux_2*;\n+    _ZNSbIwSt11char_traitsIwESaIwEE18_S_construct_aux_2*;\n \n } GLIBCXX_3.4.13;\n "}, {"sha": "8d24758d47cc80e2c2b509f24c6ea56650d6c1b3", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=df4d18ad801420200b2698b7d637f4e7d6ba2507", "patch": "@@ -1588,7 +1588,12 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n         static _CharT*\n         _S_construct_aux(_Integer __beg, _Integer __end,\n \t\t\t const _Alloc& __a, __true_type)\n-        { return _S_construct(static_cast<size_type>(__beg), __end, __a); }\n+        { return _S_construct_aux_2(static_cast<size_type>(__beg),\n+\t\t\t\t    __end, __a); }\n+\n+      static _CharT*\n+      _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)\n+      { return _S_construct(__req, __c, __a); }\n \n       template<class _InIterator>\n         static _CharT*"}, {"sha": "d1b516274b3f65980c1e304b22a5e7f5a85f9686", "filename": "libstdc++-v3/include/ext/rc_string_base.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h?ref=df4d18ad801420200b2698b7d637f4e7d6ba2507", "patch": "@@ -231,7 +231,12 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n         static _CharT*\n         _S_construct_aux(_Integer __beg, _Integer __end,\n \t\t\t const _Alloc& __a, std::__true_type)\n-\t{ return _S_construct(static_cast<size_type>(__beg), __end, __a); }\n+\t{ return _S_construct_aux_2(static_cast<size_type>(__beg),\n+\t\t\t\t    __end, __a); }\n+\n+      static _CharT*\n+      _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)\n+      { return _S_construct(__req, __c, __a); }\n \n       template<typename _InIterator>\n         static _CharT*"}, {"sha": "b0500cf17e0504b0421adbd666b2170a7ddcd2ea", "filename": "libstdc++-v3/include/ext/sso_string_base.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h?ref=df4d18ad801420200b2698b7d637f4e7d6ba2507", "patch": "@@ -106,7 +106,11 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       template<typename _Integer>\n         void\n         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)\n-\t{ _M_construct(static_cast<size_type>(__beg), __end); }\n+\t{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }\n+\n+      void\n+      _M_construct_aux_2(size_type __req, _CharT __c)\n+      { _M_construct(__req, __c); }\n \n       template<typename _InIterator>\n         void"}, {"sha": "a83b74ac73599631c7f4923db9fa737b43c3963b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/42261.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc?ref=df4d18ad801420200b2698b7d637f4e7d6ba2507", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/42261\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  const string s(string::size_type(6), string::size_type('f'));\n+  VERIFY( s == \"ffffff\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8782e8cafe90db7de10d8ddf2a6156a6c6ec01a6", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/42261.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4d18ad801420200b2698b7d637f4e7d6ba2507/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc?ref=df4d18ad801420200b2698b7d637f4e7d6ba2507", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/42261\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  const wstring s(wstring::size_type(6), wstring::size_type(L'f'));\n+  VERIFY( s == L\"ffffff\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}