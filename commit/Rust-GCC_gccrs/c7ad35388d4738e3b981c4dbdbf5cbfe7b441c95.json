{"sha": "c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhZDM1Mzg4ZDQ3MzhlM2I5ODFjNGRiZGJmNWNiZmU3YjQ0MWM5NQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-05-08T08:00:21Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-08T08:00:21Z"}, "message": "re PR sanitizer/61095 (miscompile: tsan is broken in gcc trunk, works in 4.9)\n\ngcc/testsuite/\n\tPR tree-optimization/61095\n\t* gcc.dg/torture/pr61095.c: New test.\n\nFrom-SVN: r210203", "tree": {"sha": "b5ba86a81dc0c95958bfc81576ab3269c7e97871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5ba86a81dc0c95958bfc81576ab3269c7e97871"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca49b74e1caf638d0ef862551b6ff0bfe779d137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca49b74e1caf638d0ef862551b6ff0bfe779d137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca49b74e1caf638d0ef862551b6ff0bfe779d137"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "ce196b0bd316ea878cd09ae98910d6ce0e6eaf0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95", "patch": "@@ -1,3 +1,8 @@\n+2014-05-08  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR tree-optimization/61095\n+\t* gcc.dg/torture/pr61095.c: New test.\n+\n 2014-05-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR middle-end/39246"}, {"sha": "fa584e0353df3bf7808bbc3d0b374d511ba2df1f", "filename": "gcc/testsuite/gcc.dg/torture/pr61095.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61095.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61095.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61095.c?ref=c7ad35388d4738e3b981c4dbdbf5cbfe7b441c95", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target lp64 } */\n+\n+extern void __attribute__ ((noreturn)) abort (void);\n+\n+int __attribute__ ((noinline, noclone))\n+foo (unsigned long addr) {\n+    unsigned long *p = (unsigned long*)((addr & 0xffff83fffffffff8UL) * 4);\n+    unsigned long xxx = (unsigned long)(p + 1);\n+    return xxx >= 0x3c000000000UL;\n+}\n+\n+int\n+main (void)\n+{\n+  if (foo (0))\n+    abort ();\n+  if (foo (0x7c0000000000UL))\n+    abort ();\n+  if (!foo (0xfc0000000000UL))\n+    abort ();\n+  return 0;\n+}"}]}