{"sha": "e9f2dc3b46a2b9393a1b124f32c7aa550e229b84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlmMmRjM2I0NmEyYjkzOTNhMWIxMjRmMzJjN2FhNTUwZTIyOWI4NA==", "commit": {"author": {"name": "Sean McNeil", "email": "sean@blue.mcneil.com", "date": "2003-02-21T01:55:04Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2003-02-21T01:55:04Z"}, "message": "Makefile.tpl: Add definition of CPPFLAGS to pass into configure-target-* as some target...\n\n* Makefile.tpl: Add definition of CPPFLAGS to pass into\nconfigure-target-* as some target builds may require additional\nflags for preprocessor tests.\n* Makefile.in: Regenerated.\n\nFrom-SVN: r63200", "tree": {"sha": "7927a2dfb035c85de46e98424a7b1665b5d5f40e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7927a2dfb035c85de46e98424a7b1665b5d5f40e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84/comments", "author": null, "committer": null, "parents": [{"sha": "a354191ebf0b3b87c0bf63c759cf5b1702128305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a354191ebf0b3b87c0bf63c759cf5b1702128305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a354191ebf0b3b87c0bf63c759cf5b1702128305"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "d19b35c315fa689a4053535ace19a04fcf8c5b0c", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e9f2dc3b46a2b9393a1b124f32c7aa550e229b84", "patch": "@@ -1,3 +1,10 @@\n+2003-02-20  Sean McNeil  <sean@blue.mcneil.com>\n+\n+\t* Makefile.tpl: Add definition of CPPFLAGS to pass into\n+\tconfigure-target-* as some target builds may require additional\n+\tflags for preprocessor tests.\n+\t* Makefile.in: Regenerated.\n+\n 2003-02-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* libtool.m4 (LD): Append -melf* option to LD on IRIX with GNU ld."}, {"sha": "efb2d206c33d2056ad6be48d11b6929ef3f7d98e", "filename": "Makefile.in", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=e9f2dc3b46a2b9393a1b124f32c7aa550e229b84", "patch": "@@ -5599,6 +5599,7 @@ configure-target-libstdc++-v3: $(TARGET_SUBDIR)/libstdc++-v3/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX_FOR_TARGET=\"$(RAW_CXX_FOR_TARGET)\"; export CXX_FOR_TARGET; \\\n \t    CXX=\"$(RAW_CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n@@ -5699,6 +5700,7 @@ configure-target-newlib: $(TARGET_SUBDIR)/newlib/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -5798,6 +5800,7 @@ configure-target-libf2c: $(TARGET_SUBDIR)/libf2c/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -5897,6 +5900,7 @@ configure-target-libobjc: $(TARGET_SUBDIR)/libobjc/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -5996,6 +6000,7 @@ configure-target-libtermcap: $(TARGET_SUBDIR)/libtermcap/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6091,6 +6096,7 @@ configure-target-winsup: $(TARGET_SUBDIR)/winsup/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6190,6 +6196,7 @@ configure-target-libgloss: $(TARGET_SUBDIR)/libgloss/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6285,6 +6292,7 @@ configure-target-libiberty: $(TARGET_SUBDIR)/libiberty/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6384,6 +6392,7 @@ configure-target-gperf: $(TARGET_SUBDIR)/gperf/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6483,6 +6492,7 @@ configure-target-examples: $(TARGET_SUBDIR)/examples/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6574,6 +6584,7 @@ configure-target-libffi: $(TARGET_SUBDIR)/libffi/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6673,6 +6684,7 @@ configure-target-libjava: $(TARGET_SUBDIR)/libjava/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX_FOR_TARGET=\"$(RAW_CXX_FOR_TARGET)\"; export CXX_FOR_TARGET; \\\n \t    CXX=\"$(RAW_CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n@@ -6773,6 +6785,7 @@ configure-target-zlib: $(TARGET_SUBDIR)/zlib/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6872,6 +6885,7 @@ configure-target-boehm-gc: $(TARGET_SUBDIR)/boehm-gc/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -6971,6 +6985,7 @@ configure-target-qthreads: $(TARGET_SUBDIR)/qthreads/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n@@ -7070,6 +7085,7 @@ configure-target-rda: $(TARGET_SUBDIR)/rda/multilib.out\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n \t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n \t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n \t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\"}, {"sha": "21f74842bcd1980487e2704fef83b4b911823fdc", "filename": "Makefile.tpl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f2dc3b46a2b9393a1b124f32c7aa550e229b84/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=e9f2dc3b46a2b9393a1b124f32c7aa550e229b84", "patch": "@@ -987,7 +987,8 @@ configure-target-[+module+]: $(TARGET_SUBDIR)/[+module+]/multilib.out\n \t    AR=\"$(AR_FOR_TARGET)\"; export AR; \\\n \t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n \t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n-\t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\[+ \n+\t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\[+ \n \tIF raw_cxx +]\n \t    CXX_FOR_TARGET=\"$(RAW_CXX_FOR_TARGET)\"; export CXX_FOR_TARGET; \\\n \t    CXX=\"$(RAW_CXX_FOR_TARGET)\"; export CXX; \\[+ "}]}